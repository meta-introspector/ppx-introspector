[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[144,4633+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+27])
          Ppat_var "process_record_kind" (src/ppx.ml[69,1879+8]..[69,1879+27])
        expression (src/ppx.ml[69,1879+27]..[83,2363+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+27]..[69,1879+30])
            Ppat_var "x" (src/ppx.ml[69,1879+28]..[69,1879+29])
          expression (src/ppx.ml[70,1912+2]..[83,2363+47])
            Pexp_match
            expression (src/ppx.ml[70,1912+8]..[70,1912+9])
              Pexp_ident "x" (src/ppx.ml[70,1912+8]..[70,1912+9])
            [
              <case>
                pattern (src/ppx.ml[71,1927+4]..[77,2108+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13]) ghost
                      pattern (src/ppx.ml[72,1933+5]..[72,1933+13])
                        Ppat_var "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13])
                    "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16]) ghost
                      pattern (src/ppx.ml[73,1966+5]..[73,1966+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16])
                    "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13]) ghost
                      pattern (src/ppx.ml[74,2004+5]..[74,2004+13])
                        Ppat_var "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13])
                    "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12]) ghost
                      pattern (src/ppx.ml[75,2036+5]..[75,2036+12])
                        Ppat_var "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12])
                    "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19]) ghost
                      pattern (src/ppx.ml[76,2068+5]..[76,2068+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19])
                  ]
                expression (src/ppx.ml[78,2116+4]..[83,2363+47])
                  Pexp_apply
                  expression (src/ppx.ml[78,2116+5]..[78,2116+18])
                    Pexp_ident "print_endline" (src/ppx.ml[78,2116+5]..[78,2116+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[78,2116+19]..[83,2363+46])
                        Pexp_apply
                        expression (src/ppx.ml[78,2116+20]..[78,2116+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[78,2116+20]..[78,2116+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[78,2116+35]..[83,2363+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[78,2116+36]..[78,2116+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..[78,2116+56]),None)
                                expression (src/ppx.ml[79,2177+36]..[79,2177+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[79,2177+36]..[79,2177+44])
                                expression (src/ppx.ml[80,2223+36]..[80,2223+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[80,2223+37]..[80,2223+44]),None)
                                expression (src/ppx.ml[81,2270+36]..[81,2270+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[81,2270+36]..[81,2270+47])
                                expression (src/ppx.ml[82,2319+36]..[82,2319+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[82,2319+37]..[82,2319+41]),None)
                                expression (src/ppx.ml[83,2363+36]..[83,2363+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[83,2363+36]..[83,2363+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..[85,2415+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[85,2415+0]..[85,2415+22])
        expression (src/ppx.ml[85,2415+23]..[119,3980+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2415+23]..[85,2415+24])
            Ppat_var "x" (src/ppx.ml[85,2415+23]..[85,2415+24])
          expression (src/ppx.ml[86,2442+2]..[119,3980+65])
            Pexp_match
            expression (src/ppx.ml[86,2442+8]..[86,2442+9])
              Pexp_ident "x" (src/ppx.ml[86,2442+8]..[86,2442+9])
            [
              <case>
                pattern (src/ppx.ml[87,2457+4]..[87,2457+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[87,2457+4]..[87,2457+12])
                  None
                expression (src/ppx.ml[87,2457+17]..[87,2457+69])
                  Pexp_apply
                  expression (src/ppx.ml[87,2457+18]..[87,2457+31])
                    Pexp_ident "print_endline" (src/ppx.ml[87,2457+18]..[87,2457+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[87,2457+32]..[87,2457+68])
                        Pexp_apply
                        expression (src/ppx.ml[87,2457+33]..[87,2457+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[87,2457+33]..[87,2457+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[87,2457+48]..[87,2457+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[87,2457+50]..[87,2457+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[88,2527+4]..[88,2527+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[88,2527+4]..[88,2527+12])
                  Some
                    []
                    pattern (src/ppx.ml[88,2527+13]..[88,2527+17])
                      Ppat_var "name" (src/ppx.ml[88,2527+13]..[88,2527+17])
                expression (src/ppx.ml[88,2527+20]..[88,2527+80])
                  Pexp_apply
                  expression (src/ppx.ml[88,2527+21]..[88,2527+34])
                    Pexp_ident "print_endline" (src/ppx.ml[88,2527+21]..[88,2527+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[88,2527+35]..[88,2527+79])
                        Pexp_apply
                        expression (src/ppx.ml[88,2527+36]..[88,2527+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[88,2527+36]..[88,2527+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[88,2527+51]..[88,2527+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[88,2527+52]..[88,2527+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[88,2527+53]..[88,2527+68]),None)
                                expression (src/ppx.ml[88,2527+73]..[88,2527+77])
                                  Pexp_ident "name" (src/ppx.ml[88,2527+73]..[88,2527+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[89,2608+4]..[89,2608+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[89,2608+4]..[89,2608+14])
                  Some
                    []
                    pattern (src/ppx.ml[89,2608+15]..[89,2608+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[89,2608+16]..[89,2608+25])
                          Ppat_var "arg_label" (src/ppx.ml[89,2608+16]..[89,2608+25])
                        pattern (src/ppx.ml[89,2608+28]..[89,2608+37])
                          Ppat_var "core_type" (src/ppx.ml[89,2608+28]..[89,2608+37])
                        pattern (src/ppx.ml[89,2608+40]..[89,2608+50])
                          Ppat_var "core_type2" (src/ppx.ml[89,2608+40]..[89,2608+50])
                      ]
                expression (src/ppx.ml[90,2663+4]..[90,2663+61])
                  Pexp_apply
                  expression (src/ppx.ml[90,2663+5]..[90,2663+18])
                    Pexp_ident "print_endline" (src/ppx.ml[90,2663+5]..[90,2663+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[90,2663+19]..[90,2663+60])
                        Pexp_apply
                        expression (src/ppx.ml[90,2663+20]..[90,2663+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[90,2663+20]..[90,2663+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[90,2663+35]..[90,2663+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[90,2663+37]..[90,2663+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[91,2725+4]..[91,2725+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[91,2725+4]..[91,2725+14])
                  Some
                    []
                    pattern (src/ppx.ml[91,2725+15]..[91,2725+16])
                      Ppat_var "a" (src/ppx.ml[91,2725+15]..[91,2725+16])
                expression (src/ppx.ml[93,2773+4]..[93,2773+60])
                  Pexp_apply
                  expression (src/ppx.ml[93,2773+5]..[93,2773+18])
                    Pexp_ident "print_endline" (src/ppx.ml[93,2773+5]..[93,2773+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[93,2773+19]..[93,2773+59])
                        Pexp_apply
                        expression (src/ppx.ml[93,2773+20]..[93,2773+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[93,2773+20]..[93,2773+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[93,2773+35]..[93,2773+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow9:",(src/ppx.ml[93,2773+37]..[93,2773+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[94,2834+4]..[94,2834+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[94,2834+4]..[94,2834+15])
                  Some
                    []
                    pattern (src/ppx.ml[94,2834+16]..[94,2834+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[94,2834+17]..[94,2834+18])
                          Ppat_var "a" (src/ppx.ml[94,2834+17]..[94,2834+18])
                        pattern (src/ppx.ml[94,2834+19]..[94,2834+20])
                          Ppat_var "b" (src/ppx.ml[94,2834+19]..[94,2834+20])
                      ]
                expression (src/ppx.ml[96,2905+4]..[97,2937+79])
                  Pexp_sequence
                  expression (src/ppx.ml[96,2905+4]..[96,2905+30])
                    Pexp_apply
                    expression (src/ppx.ml[96,2905+5]..[96,2905+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[96,2905+5]..[96,2905+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[96,2905+28]..[96,2905+29])
                          Pexp_ident "b" (src/ppx.ml[96,2905+28]..[96,2905+29])
                    ]
                  expression (src/ppx.ml[97,2937+4]..[97,2937+79])
                    Pexp_apply
                    expression (src/ppx.ml[97,2937+5]..[97,2937+18])
                      Pexp_ident "print_endline" (src/ppx.ml[97,2937+5]..[97,2937+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[97,2937+19]..[97,2937+78])
                          Pexp_apply
                          expression (src/ppx.ml[97,2937+20]..[97,2937+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[97,2937+20]..[97,2937+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[97,2937+35]..[97,2937+77])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[97,2937+36]..[97,2937+56])
                                    Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2937+37]..[97,2937+55]),None)
                                  expression (src/ppx.ml[97,2937+58]..[97,2937+62])
                                    Pexp_constant PConst_string("id",(src/ppx.ml[97,2937+59]..[97,2937+61]),None)
                                  expression (src/ppx.ml[97,2937+63]..[97,2937+64])
                                    Pexp_ident "a" (src/ppx.ml[97,2937+63]..[97,2937+64])
                                  expression (src/ppx.ml[97,2937+66]..[97,2937+73])
                                    Pexp_constant PConst_string("types",(src/ppx.ml[97,2937+67]..[97,2937+72]),None)
                                  expression (src/ppx.ml[97,2937+74]..[97,2937+75])
                                    Pexp_ident "b" (src/ppx.ml[97,2937+74]..[97,2937+75])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[98,3017+4]..[98,3017+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[98,3017+4]..[98,3017+15])
                  Some
                    []
                    pattern (src/ppx.ml[98,3017+16]..[98,3017+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[98,3017+17]..[98,3017+18])
                          Ppat_var "a" (src/ppx.ml[98,3017+17]..[98,3017+18])
                        pattern (src/ppx.ml[98,3017+19]..[98,3017+20])
                          Ppat_var "b" (src/ppx.ml[98,3017+19]..[98,3017+20])
                      ]
                expression (src/ppx.ml[100,3086+4]..[100,3086+60])
                  Pexp_apply
                  expression (src/ppx.ml[100,3086+5]..[100,3086+18])
                    Pexp_ident "print_endline" (src/ppx.ml[100,3086+5]..[100,3086+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[100,3086+19]..[100,3086+59])
                        Pexp_apply
                        expression (src/ppx.ml[100,3086+20]..[100,3086+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[100,3086+20]..[100,3086+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,3086+35]..[100,3086+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[100,3086+37]..[100,3086+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[101,3147+4]..[101,3147+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[101,3147+4]..[101,3147+14])
                  Some
                    []
                    pattern (src/ppx.ml[101,3147+15]..[101,3147+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[101,3147+16]..[101,3147+17])
                          Ppat_var "a" (src/ppx.ml[101,3147+16]..[101,3147+17])
                        pattern (src/ppx.ml[101,3147+18]..[101,3147+19])
                          Ppat_var "b" (src/ppx.ml[101,3147+18]..[101,3147+19])
                      ]
                expression (src/ppx.ml[103,3217+4]..[103,3217+60])
                  Pexp_apply
                  expression (src/ppx.ml[103,3217+5]..[103,3217+18])
                    Pexp_ident "print_endline" (src/ppx.ml[103,3217+5]..[103,3217+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,3217+19]..[103,3217+59])
                        Pexp_apply
                        expression (src/ppx.ml[103,3217+20]..[103,3217+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,3217+20]..[103,3217+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,3217+35]..[103,3217+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[103,3217+37]..[103,3217+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,3278+4]..[104,3278+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[104,3278+4]..[104,3278+14])
                  Some
                    []
                    pattern (src/ppx.ml[104,3278+15]..[104,3278+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[104,3278+16]..[104,3278+17])
                          Ppat_var "a" (src/ppx.ml[104,3278+16]..[104,3278+17])
                        pattern (src/ppx.ml[104,3278+18]..[104,3278+19])
                          Ppat_var "b" (src/ppx.ml[104,3278+18]..[104,3278+19])
                      ]
                expression (src/ppx.ml[106,3339+4]..[106,3339+60])
                  Pexp_apply
                  expression (src/ppx.ml[106,3339+5]..[106,3339+18])
                    Pexp_ident "print_endline" (src/ppx.ml[106,3339+5]..[106,3339+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[106,3339+19]..[106,3339+59])
                        Pexp_apply
                        expression (src/ppx.ml[106,3339+20]..[106,3339+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[106,3339+20]..[106,3339+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[106,3339+35]..[106,3339+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[106,3339+37]..[106,3339+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3400+4]..[107,3400+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[107,3400+4]..[107,3400+16])
                  Some
                    []
                    pattern (src/ppx.ml[107,3400+17]..[107,3400+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[107,3400+18]..[107,3400+19])
                          Ppat_var "a" (src/ppx.ml[107,3400+18]..[107,3400+19])
                        pattern (src/ppx.ml[107,3400+20]..[107,3400+21])
                          Ppat_var "b" (src/ppx.ml[107,3400+20]..[107,3400+21])
                        pattern (src/ppx.ml[107,3400+22]..[107,3400+23])
                          Ppat_var "c" (src/ppx.ml[107,3400+22]..[107,3400+23])
                      ]
                expression (src/ppx.ml[109,3490+4]..[109,3490+60])
                  Pexp_apply
                  expression (src/ppx.ml[109,3490+5]..[109,3490+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3490+5]..[109,3490+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3490+19]..[109,3490+59])
                        Pexp_apply
                        expression (src/ppx.ml[109,3490+20]..[109,3490+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3490+20]..[109,3490+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3490+35]..[109,3490+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[109,3490+37]..[109,3490+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[110,3551+4]..[110,3551+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[110,3551+4]..[110,3551+13])
                  Some
                    []
                    pattern (src/ppx.ml[110,3551+14]..[110,3551+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[110,3551+15]..[110,3551+16])
                          Ppat_var "a" (src/ppx.ml[110,3551+15]..[110,3551+16])
                        pattern (src/ppx.ml[110,3551+17]..[110,3551+18])
                          Ppat_var "b" (src/ppx.ml[110,3551+17]..[110,3551+18])
                      ]
                expression (src/ppx.ml[112,3615+4]..[112,3615+60])
                  Pexp_apply
                  expression (src/ppx.ml[112,3615+5]..[112,3615+18])
                    Pexp_ident "print_endline" (src/ppx.ml[112,3615+5]..[112,3615+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[112,3615+19]..[112,3615+59])
                        Pexp_apply
                        expression (src/ppx.ml[112,3615+20]..[112,3615+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[112,3615+20]..[112,3615+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[112,3615+35]..[112,3615+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[112,3615+37]..[112,3615+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3676+4]..[113,3676+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[113,3676+4]..[113,3676+16])
                  Some
                    []
                    pattern (src/ppx.ml[113,3676+17]..[113,3676+18])
                      Ppat_var "a" (src/ppx.ml[113,3676+17]..[113,3676+18])
                expression (src/ppx.ml[115,3724+4]..[115,3724+62])
                  Pexp_apply
                  expression (src/ppx.ml[115,3724+5]..[115,3724+18])
                    Pexp_ident "print_endline" (src/ppx.ml[115,3724+5]..[115,3724+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[115,3724+19]..[115,3724+61])
                        Pexp_apply
                        expression (src/ppx.ml[115,3724+20]..[115,3724+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[115,3724+20]..[115,3724+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[115,3724+35]..[115,3724+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[115,3724+36]..[115,3724+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[115,3724+37]..[115,3724+55]),None)
                                expression (src/ppx.ml[115,3724+57]..[115,3724+58])
                                  Pexp_ident "a" (src/ppx.ml[115,3724+57]..[115,3724+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3932+4]..[118,3932+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[118,3932+4]..[118,3932+18])
                  Some
                    []
                    pattern (src/ppx.ml[118,3932+19]..[118,3932+20])
                      Ppat_var "a" (src/ppx.ml[118,3932+19]..[118,3932+20])
                expression (src/ppx.ml[119,3980+4]..[119,3980+65])
                  Pexp_apply
                  expression (src/ppx.ml[119,3980+5]..[119,3980+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3980+5]..[119,3980+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3980+19]..[119,3980+64])
                        Pexp_apply
                        expression (src/ppx.ml[119,3980+20]..[119,3980+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3980+20]..[119,3980+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3980+35]..[119,3980+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[119,3980+36]..[119,3980+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[119,3980+37]..[119,3980+58]),None)
                                expression (src/ppx.ml[119,3980+60]..[119,3980+61])
                                  Pexp_ident "a" (src/ppx.ml[119,3980+60]..[119,3980+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[121,4050+2]..[121,4050+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[121,4050+2]..[121,4050+26])
        expression (src/ppx.ml[121,4050+26]..[127,4187+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[121,4050+26]..[121,4050+29])
            Ppat_var "x" (src/ppx.ml[121,4050+27]..[121,4050+28])
          expression (src/ppx.ml[122,4082+2]..[127,4187+6])
            Pexp_match
            expression (src/ppx.ml[122,4082+8]..[122,4082+9])
              Pexp_ident "x" (src/ppx.ml[122,4082+8]..[122,4082+9])
            [
              <case>
                pattern (src/ppx.ml[123,4097+4]..[123,4097+6])
                  Ppat_construct "[]" (src/ppx.ml[123,4097+4]..[123,4097+6])
                  None
                expression (src/ppx.ml[123,4097+10]..[123,4097+12])
                  Pexp_construct "()" (src/ppx.ml[123,4097+10]..[123,4097+12])
                  None
              <case>
                pattern (src/ppx.ml[124,4110+4]..[124,4110+10])
                  Ppat_construct "::" (src/ppx.ml[124,4110+6]..[124,4110+8])
                  Some
                    []
                    pattern (src/ppx.ml[124,4110+4]..[124,4110+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[124,4110+4]..[124,4110+5])
                          Ppat_var "h" (src/ppx.ml[124,4110+4]..[124,4110+5])
                        pattern (src/ppx.ml[124,4110+9]..[124,4110+10])
                          Ppat_var "t" (src/ppx.ml[124,4110+9]..[124,4110+10])
                      ]
                expression (src/ppx.ml[125,4124+4]..[127,4187+6])
                  Pexp_sequence
                  expression (src/ppx.ml[125,4124+4]..[125,4124+27])
                    Pexp_apply
                    expression (src/ppx.ml[125,4124+5]..[125,4124+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[125,4124+5]..[125,4124+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[125,4124+25]..[125,4124+26])
                          Pexp_ident "h" (src/ppx.ml[125,4124+25]..[125,4124+26])
                    ]
                  expression (src/ppx.ml[126,4153+4]..[127,4187+6])
                    Pexp_sequence
                    expression (src/ppx.ml[126,4153+4]..[126,4153+32])
                      Pexp_apply
                      expression (src/ppx.ml[126,4153+5]..[126,4153+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[126,4153+5]..[126,4153+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[126,4153+30]..[126,4153+31])
                            Pexp_ident "t" (src/ppx.ml[126,4153+30]..[126,4153+31])
                      ]
                    expression (src/ppx.ml[127,4187+4]..[127,4187+6])
                      Pexp_construct "()" (src/ppx.ml[127,4187+4]..[127,4187+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[129,4198+0]..[129,4198+17])
          Ppat_var "process_core_type" (src/ppx.ml[129,4198+0]..[129,4198+17])
        expression (src/ppx.ml[129,4198+17]..[138,4446+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[129,4198+17]..[129,4198+20])
            Ppat_var "x" (src/ppx.ml[129,4198+18]..[129,4198+19])
          expression (src/ppx.ml[130,4221+2]..[138,4446+70])
            Pexp_match
            expression (src/ppx.ml[130,4221+8]..[130,4221+9])
              Pexp_ident "x" (src/ppx.ml[130,4221+8]..[130,4221+9])
            [
              <case>
                pattern (src/ppx.ml[131,4237+4]..[136,4398+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[132,4243+6]..[132,4243+15]) ghost
                      pattern (src/ppx.ml[132,4243+6]..[132,4243+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[132,4243+6]..[132,4243+15])
                    "ptyp_loc" (src/ppx.ml[133,4282+5]..[133,4282+13]) ghost
                      pattern (src/ppx.ml[133,4282+5]..[133,4282+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[133,4282+5]..[133,4282+13])
                    "ptyp_loc_stack" (src/ppx.ml[134,4315+5]..[134,4315+19]) ghost
                      pattern (src/ppx.ml[134,4315+5]..[134,4315+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[134,4315+5]..[134,4315+19])
                    "ptyp_attributes" (src/ppx.ml[135,4358+5]..[135,4358+20]) ghost
                      pattern (src/ppx.ml[135,4358+5]..[135,4358+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[135,4358+5]..[135,4358+20])
                  ]
                expression (src/ppx.ml[137,4406+4]..[138,4446+70])
                  Pexp_sequence
                  expression (src/ppx.ml[137,4406+4]..[137,4406+38])
                    Pexp_apply
                    expression (src/ppx.ml[137,4406+5]..[137,4406+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[137,4406+5]..[137,4406+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[137,4406+28]..[137,4406+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[137,4406+28]..[137,4406+37])
                    ]
                  expression (src/ppx.ml[138,4446+4]..[138,4446+70])
                    Pexp_apply
                    expression (src/ppx.ml[138,4446+5]..[138,4446+18])
                      Pexp_ident "print_endline" (src/ppx.ml[138,4446+5]..[138,4446+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[138,4446+19]..[138,4446+69])
                          Pexp_apply
                          expression (src/ppx.ml[138,4446+20]..[138,4446+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[138,4446+20]..[138,4446+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[138,4446+35]..[138,4446+68])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[138,4446+36]..[138,4446+54])
                                    Pexp_constant PConst_string("DEBUG:ptyp_desc:",(src/ppx.ml[138,4446+37]..[138,4446+53]),None)
                                  expression (src/ppx.ml[138,4446+58]..[138,4446+67])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[138,4446+58]..[138,4446+67])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[139,4517+4]..[139,4517+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[139,4517+4]..[139,4517+26])
        expression (src/ppx.ml[139,4517+26]..[144,4633+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[139,4517+26]..[139,4517+44])
            Ppat_constraint
            pattern (src/ppx.ml[139,4517+27]..[139,4517+28])
              Ppat_var "x" (src/ppx.ml[139,4517+27]..[139,4517+28])
            core_type (src/ppx.ml[139,4517+29]..[139,4517+43])
              Ptyp_constr "list" (src/ppx.ml[139,4517+39]..[139,4517+43])
              [
                core_type (src/ppx.ml[139,4517+29]..[139,4517+38])
                  Ptyp_constr "core_type" (src/ppx.ml[139,4517+29]..[139,4517+38])
                  []
              ]
          expression (src/ppx.ml[140,4564+2]..[144,4633+29])
            Pexp_match
            expression (src/ppx.ml[140,4564+8]..[140,4564+9])
              Pexp_ident "x" (src/ppx.ml[140,4564+8]..[140,4564+9])
            [
              <case>
                pattern (src/ppx.ml[141,4579+4]..[141,4579+6])
                  Ppat_construct "[]" (src/ppx.ml[141,4579+4]..[141,4579+6])
                  None
                expression (src/ppx.ml[141,4579+10]..[141,4579+12])
                  Pexp_construct "()" (src/ppx.ml[141,4579+10]..[141,4579+12])
                  None
              <case>
                pattern (src/ppx.ml[142,4592+4]..[142,4592+10])
                  Ppat_construct "::" (src/ppx.ml[142,4592+6]..[142,4592+8])
                  Some
                    []
                    pattern (src/ppx.ml[142,4592+4]..[142,4592+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[142,4592+4]..[142,4592+5])
                          Ppat_var "h" (src/ppx.ml[142,4592+4]..[142,4592+5])
                        pattern (src/ppx.ml[142,4592+9]..[142,4592+10])
                          Ppat_var "t" (src/ppx.ml[142,4592+9]..[142,4592+10])
                      ]
                expression (src/ppx.ml[143,4606+4]..[144,4633+29])
                  Pexp_sequence
                  expression (src/ppx.ml[143,4606+4]..[143,4606+25])
                    Pexp_apply
                    expression (src/ppx.ml[143,4606+4]..[143,4606+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[143,4606+4]..[143,4606+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[143,4606+22]..[143,4606+25])
                          Pexp_ident "h" (src/ppx.ml[143,4606+23]..[143,4606+24])
                    ]
                  expression (src/ppx.ml[144,4633+4]..[144,4633+29])
                    Pexp_apply
                    expression (src/ppx.ml[144,4633+4]..[144,4633+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[144,4633+4]..[144,4633+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[144,4633+26]..[144,4633+29])
                          Pexp_ident "t" (src/ppx.ml[144,4633+27]..[144,4633+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[151,4677+0]..[158,4876+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[151,4677+4]..[151,4677+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[151,4677+4]..[151,4677+31])
        expression (src/ppx.ml[151,4677+31]..[158,4876+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4677+31]..[151,4677+34])
            Ppat_var "x" (src/ppx.ml[151,4677+32]..[151,4677+33])
          expression (src/ppx.ml[152,4714+2]..[158,4876+65])
            Pexp_match
            expression (src/ppx.ml[152,4714+8]..[152,4714+9])
              Pexp_ident "x" (src/ppx.ml[152,4714+8]..[152,4714+9])
            [
              <case>
                pattern (src/ppx.ml[153,4729+4]..[153,4729+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[153,4729+4]..[153,4729+15])
                  Some
                    []
                    pattern (src/ppx.ml[153,4729+16]..[153,4729+17])
                      Ppat_var "a" (src/ppx.ml[153,4729+16]..[153,4729+17])
                expression (src/ppx.ml[154,4750+4]..[155,4782+64])
                  Pexp_sequence
                  expression (src/ppx.ml[154,4750+4]..[154,4750+30])
                    Pexp_apply
                    expression (src/ppx.ml[154,4750+5]..[154,4750+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[154,4750+5]..[154,4750+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[154,4750+28]..[154,4750+29])
                          Pexp_ident "a" (src/ppx.ml[154,4750+28]..[154,4750+29])
                    ]
                  expression (src/ppx.ml[155,4782+4]..[155,4782+64])
                    Pexp_apply
                    expression (src/ppx.ml[155,4782+5]..[155,4782+18])
                      Pexp_ident "print_endline" (src/ppx.ml[155,4782+5]..[155,4782+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4782+19]..[155,4782+63])
                          Pexp_apply
                          expression (src/ppx.ml[155,4782+20]..[155,4782+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[155,4782+20]..[155,4782+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[155,4782+35]..[155,4782+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[155,4782+36]..[155,4782+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[155,4782+37]..[155,4782+55]),None)
                                  expression (src/ppx.ml[155,4782+60]..[155,4782+61])
                                    Pexp_ident "a" (src/ppx.ml[155,4782+60]..[155,4782+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[157,4854+4]..[157,4854+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[157,4854+4]..[157,4854+16])
                  Some
                    []
                    pattern (src/ppx.ml[157,4854+17]..[157,4854+18])
                      Ppat_var "a" (src/ppx.ml[157,4854+17]..[157,4854+18])
                expression (src/ppx.ml[158,4876+4]..[158,4876+65])
                  Pexp_apply
                  expression (src/ppx.ml[158,4876+5]..[158,4876+18])
                    Pexp_ident "print_endline" (src/ppx.ml[158,4876+5]..[158,4876+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[158,4876+19]..[158,4876+64])
                        Pexp_apply
                        expression (src/ppx.ml[158,4876+20]..[158,4876+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[158,4876+20]..[158,4876+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[158,4876+35]..[158,4876+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[158,4876+36]..[158,4876+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[158,4876+37]..[158,4876+56]),None)
                                expression (src/ppx.ml[158,4876+61]..[158,4876+62])
                                  Pexp_ident "a" (src/ppx.ml[158,4876+61]..[158,4876+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[160,4943+0]..[192,5922+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[160,4943+8]..[160,4943+58])
          Ppat_var "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[160,4943+8]..[160,4943+58])
        expression (src/ppx.ml[160,4943+58]..[192,5922+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[160,4943+58]..[160,4943+61])
            Ppat_var "x" (src/ppx.ml[160,4943+59]..[160,4943+60])
          expression (src/ppx.ml[161,5007+2]..[192,5922+8])
            Pexp_match
            expression (src/ppx.ml[161,5007+8]..[161,5007+9])
              Pexp_ident "x" (src/ppx.ml[161,5007+8]..[161,5007+9])
            [
              <case>
                pattern (src/ppx.ml[162,5022+4]..[162,5022+6])
                  Ppat_construct "[]" (src/ppx.ml[162,5022+4]..[162,5022+6])
                  None
                expression (src/ppx.ml[162,5022+10]..[162,5022+12])
                  Pexp_construct "()" (src/ppx.ml[162,5022+10]..[162,5022+12])
                  None
              <case>
                pattern (src/ppx.ml[163,5035+4]..[163,5035+10])
                  Ppat_construct "::" (src/ppx.ml[163,5035+6]..[163,5035+8])
                  Some
                    []
                    pattern (src/ppx.ml[163,5035+4]..[163,5035+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[163,5035+4]..[163,5035+5])
                          Ppat_var "h" (src/ppx.ml[163,5035+4]..[163,5035+5])
                        pattern (src/ppx.ml[163,5035+9]..[163,5035+10])
                          Ppat_var "t" (src/ppx.ml[163,5035+9]..[163,5035+10])
                      ]
                expression (src/ppx.ml[165,5115+4]..[192,5922+8])
                  Pexp_match
                  expression (src/ppx.ml[165,5115+10]..[165,5115+11])
                    Pexp_ident "h" (src/ppx.ml[165,5115+10]..[165,5115+11])
                  [
                    <case>
                      pattern (src/ppx.ml[166,5132+5]..[173,5370+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[167,5139+6]..[167,5139+14]) ghost
                            pattern (src/ppx.ml[167,5139+6]..[167,5139+14])
                              Ppat_var "pcd_name" (src/ppx.ml[167,5139+6]..[167,5139+14])
                          "pcd_vars" (src/ppx.ml[168,5173+6]..[168,5173+14]) ghost
                            pattern (src/ppx.ml[168,5173+6]..[168,5173+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[168,5173+6]..[168,5173+14])
                          "pcd_args" (src/ppx.ml[169,5212+6]..[169,5212+14]) ghost
                            pattern (src/ppx.ml[169,5212+6]..[169,5212+14])
                              Ppat_var "pcd_args" (src/ppx.ml[169,5212+6]..[169,5212+14])
                          "pcd_res" (src/ppx.ml[170,5257+6]..[170,5257+13]) ghost
                            pattern (src/ppx.ml[170,5257+6]..[170,5257+13])
                              Ppat_var "pcd_res" (src/ppx.ml[170,5257+6]..[170,5257+13])
                          "pcd_loc" (src/ppx.ml[171,5296+6]..[171,5296+13]) ghost
                            pattern (src/ppx.ml[171,5296+6]..[171,5296+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[171,5296+6]..[171,5296+13])
                          "pcd_attributes" (src/ppx.ml[172,5329+6]..[172,5329+20]) ghost
                            pattern (src/ppx.ml[172,5329+6]..[172,5329+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[172,5329+6]..[172,5329+20])
                        ]
                      expression (src/ppx.ml[176,5452+6]..[192,5922+8])
                        Pexp_sequence
                        expression (src/ppx.ml[176,5452+6]..[176,5452+43])
                          Pexp_apply
                          expression (src/ppx.ml[176,5452+6]..[176,5452+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[176,5452+6]..[176,5452+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[176,5452+33]..[176,5452+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[176,5452+34]..[176,5452+42])
                          ]
                        expression (src/ppx.ml[177,5497+6]..[192,5922+8])
                          Pexp_sequence
                          expression (src/ppx.ml[177,5497+6]..[190,5842+16])
                            Pexp_apply
                            expression (src/ppx.ml[177,5497+7]..[177,5497+20])
                              Pexp_ident "print_endline" (src/ppx.ml[177,5497+7]..[177,5497+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[177,5497+21]..[190,5842+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[177,5497+22]..[177,5497+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[177,5497+22]..[177,5497+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[177,5497+37]..[190,5842+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[178,5536+11]..[178,5536+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[178,5536+12]..[178,5536+36]),None)
                                          expression (src/ppx.ml[179,5575+15]..[179,5575+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[179,5575+15]..[179,5575+23])
                                          expression (src/ppx.ml[180,5600+15]..[180,5600+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[180,5600+16]..[180,5600+20]),None)
                                          expression (src/ppx.ml[181,5623+15]..[181,5623+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[181,5623+15]..[181,5623+23])
                                          expression (src/ppx.ml[182,5648+15]..[182,5648+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[182,5648+16]..[182,5648+20]),None)
                                          expression (src/ppx.ml[183,5671+15]..[183,5671+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[183,5671+15]..[183,5671+23])
                                          expression (src/ppx.ml[184,5696+15]..[184,5696+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[184,5696+16]..[184,5696+19]),None)
                                          expression (src/ppx.ml[185,5718+15]..[185,5718+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[185,5718+15]..[185,5718+22])
                                          expression (src/ppx.ml[186,5742+15]..[186,5742+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[186,5742+16]..[186,5742+19]),None)
                                          expression (src/ppx.ml[187,5764+15]..[187,5764+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[187,5764+15]..[187,5764+22])
                                          expression (src/ppx.ml[188,5788+15]..[188,5788+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[188,5788+16]..[188,5788+21]),None)
                                          expression (src/ppx.ml[189,5812+15]..[189,5812+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[189,5812+15]..[189,5812+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[191,5860+6]..[192,5922+8])
                            Pexp_sequence
                            expression (src/ppx.ml[191,5860+6]..[191,5860+60])
                              Pexp_apply
                              expression (src/ppx.ml[191,5860+7]..[191,5860+57])
                                Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[191,5860+7]..[191,5860+57])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[191,5860+58]..[191,5860+59])
                                    Pexp_ident "t" (src/ppx.ml[191,5860+58]..[191,5860+59])
                              ]
                            expression (src/ppx.ml[192,5922+6]..[192,5922+8])
                              Pexp_construct "()" (src/ppx.ml[192,5922+6]..[192,5922+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[194,5934+0]..[205,6332+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[194,5934+4]..[194,5934+16])
          Ppat_var "process_kind" (src/ppx.ml[194,5934+4]..[194,5934+16])
        expression (src/ppx.ml[194,5934+16]..[205,6332+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[194,5934+16]..[194,5934+19])
            Ppat_var "x" (src/ppx.ml[194,5934+17]..[194,5934+18])
          expression (src/ppx.ml[195,5956+2]..[205,6332+77])
            Pexp_match
            expression (src/ppx.ml[195,5956+8]..[195,5956+9])
              Pexp_ident "x" (src/ppx.ml[195,5956+8]..[195,5956+9])
            [
              <case>
                pattern (src/ppx.ml[197,5993+4]..[197,5993+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[197,5993+4]..[197,5993+18])
                  None
                expression (src/ppx.ml[197,5993+23]..[197,5993+81])
                  Pexp_apply
                  expression (src/ppx.ml[197,5993+24]..[197,5993+37])
                    Pexp_ident "print_endline" (src/ppx.ml[197,5993+24]..[197,5993+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[197,5993+38]..[197,5993+80])
                        Pexp_apply
                        expression (src/ppx.ml[197,5993+39]..[197,5993+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[197,5993+39]..[197,5993+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[197,5993+54]..[197,5993+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[197,5993+56]..[197,5993+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[198,6075+4]..[198,6075+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[198,6075+4]..[198,6075+17])
                  Some
                    []
                    pattern (src/ppx.ml[198,6075+18]..[198,6075+19])
                      Ppat_var "a" (src/ppx.ml[198,6075+18]..[198,6075+19])
                expression (src/ppx.ml[199,6098+4]..[200,6158+65])
                  Pexp_sequence
                  expression (src/ppx.ml[199,6098+4]..[199,6098+58])
                    Pexp_apply
                    expression (src/ppx.ml[199,6098+5]..[199,6098+55])
                      Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[199,6098+5]..[199,6098+55])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[199,6098+56]..[199,6098+57])
                          Pexp_ident "a" (src/ppx.ml[199,6098+56]..[199,6098+57])
                    ]
                  expression (src/ppx.ml[200,6158+4]..[200,6158+65])
                    Pexp_apply
                    expression (src/ppx.ml[200,6158+5]..[200,6158+18])
                      Pexp_ident "print_endline" (src/ppx.ml[200,6158+5]..[200,6158+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[200,6158+19]..[200,6158+64])
                          Pexp_apply
                          expression (src/ppx.ml[200,6158+20]..[200,6158+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[200,6158+20]..[200,6158+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[200,6158+35]..[200,6158+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[200,6158+36]..[200,6158+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[200,6158+37]..[200,6158+57]),None)
                                  expression (src/ppx.ml[200,6158+61]..[200,6158+62])
                                    Pexp_ident "a" (src/ppx.ml[200,6158+61]..[200,6158+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[203,6271+5]..[203,6271+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[203,6271+5]..[203,6271+17])
                  Some
                    []
                    pattern (src/ppx.ml[203,6271+18]..[203,6271+19])
                      Ppat_var "a" (src/ppx.ml[203,6271+18]..[203,6271+19])
                expression (src/ppx.ml[204,6299+5]..[204,6299+32])
                  Pexp_apply
                  expression (src/ppx.ml[204,6299+5]..[204,6299+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[204,6299+5]..[204,6299+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[204,6299+29]..[204,6299+32])
                        Pexp_ident "a" (src/ppx.ml[204,6299+30]..[204,6299+31])
                  ]
              <case>
                pattern (src/ppx.ml[205,6332+5]..[205,6332+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[205,6332+5]..[205,6332+15])
                  None
                expression (src/ppx.ml[205,6332+19]..[205,6332+77])
                  Pexp_apply
                  expression (src/ppx.ml[205,6332+20]..[205,6332+33])
                    Pexp_ident "print_endline" (src/ppx.ml[205,6332+20]..[205,6332+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[205,6332+34]..[205,6332+76])
                        Pexp_apply
                        expression (src/ppx.ml[205,6332+35]..[205,6332+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[205,6332+35]..[205,6332+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[205,6332+50]..[205,6332+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[205,6332+52]..[205,6332+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[207,6411+0]..[228,7417+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[207,6411+4]..[207,6411+19])
          Ppat_var "print_type_decl" (src/ppx.ml[207,6411+4]..[207,6411+19])
        expression (src/ppx.ml[207,6411+19]..[228,7417+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[207,6411+19]..[207,6411+22])
            Ppat_var "x" (src/ppx.ml[207,6411+20]..[207,6411+21])
          expression (src/ppx.ml[208,6436+2]..[228,7417+38])
            Pexp_match
            expression (src/ppx.ml[208,6436+8]..[208,6436+9])
              Pexp_ident "x" (src/ppx.ml[208,6436+8]..[208,6436+9])
            [
              <case>
                pattern (src/ppx.ml[209,6451+4]..[218,6832+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[210,6457+6]..[210,6457+16]) ghost
                      pattern (src/ppx.ml[210,6457+6]..[210,6457+16])
                        Ppat_var "ptype_name" (src/ppx.ml[210,6457+6]..[210,6457+16])
                    "ptype_params" (src/ppx.ml[211,6494+6]..[211,6494+18]) ghost
                      pattern (src/ppx.ml[211,6494+6]..[211,6494+18])
                        Ppat_var "ptype_params" (src/ppx.ml[211,6494+6]..[211,6494+18])
                    "ptype_cstrs" (src/ppx.ml[212,6566+6]..[212,6566+17]) ghost
                      pattern (src/ppx.ml[212,6566+6]..[212,6566+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[212,6566+6]..[212,6566+17])
                    "ptype_kind" (src/ppx.ml[213,6635+6]..[213,6635+16]) ghost
                      pattern (src/ppx.ml[213,6635+6]..[213,6635+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[213,6635+6]..[213,6635+16])
                    "ptype_private" (src/ppx.ml[214,6672+6]..[214,6672+19]) ghost
                      pattern (src/ppx.ml[214,6672+6]..[214,6672+19])
                        Ppat_var "ptype_private" (src/ppx.ml[214,6672+6]..[214,6672+19])
                    "ptype_manifest" (src/ppx.ml[215,6713+6]..[215,6713+20]) ghost
                      pattern (src/ppx.ml[215,6713+6]..[215,6713+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[215,6713+6]..[215,6713+20])
                    "ptype_attributes" (src/ppx.ml[216,6760+6]..[216,6760+22]) ghost
                      pattern (src/ppx.ml[216,6760+6]..[216,6760+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[216,6760+6]..[216,6760+22])
                    "ptype_loc" (src/ppx.ml[217,6801+6]..[217,6801+15]) ghost
                      pattern (src/ppx.ml[217,6801+6]..[217,6801+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[217,6801+6]..[217,6801+15])
                  ]
                expression (src/ppx.ml[219,6841+4]..[228,7417+38])
                  Pexp_sequence
                  expression (src/ppx.ml[219,6841+4]..[219,6841+69])
                    Pexp_apply
                    expression (src/ppx.ml[219,6841+5]..[219,6841+18])
                      Pexp_ident "print_endline" (src/ppx.ml[219,6841+5]..[219,6841+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[219,6841+19]..[219,6841+68])
                          Pexp_apply
                          expression (src/ppx.ml[219,6841+20]..[219,6841+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[219,6841+20]..[219,6841+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[219,6841+35]..[219,6841+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[219,6841+36]..[219,6841+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[219,6841+37]..[219,6841+53]),None)
                                  expression (src/ppx.ml[219,6841+56]..[219,6841+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[219,6841+56]..[219,6841+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[220,6912+4]..[228,7417+38])
                    Pexp_sequence
                    expression (src/ppx.ml[220,6912+4]..[220,6912+72])
                      Pexp_apply
                      expression (src/ppx.ml[220,6912+5]..[220,6912+18])
                        Pexp_ident "print_endline" (src/ppx.ml[220,6912+5]..[220,6912+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[220,6912+19]..[220,6912+71])
                            Pexp_apply
                            expression (src/ppx.ml[220,6912+20]..[220,6912+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[220,6912+20]..[220,6912+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[220,6912+35]..[220,6912+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[220,6912+36]..[220,6912+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[220,6912+37]..[220,6912+54]),None)
                                    expression (src/ppx.ml[220,6912+57]..[220,6912+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[220,6912+57]..[220,6912+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[221,6986+4]..[228,7417+38])
                      Pexp_sequence
                      expression (src/ppx.ml[221,6986+4]..[221,6986+66])
                        Pexp_apply
                        expression (src/ppx.ml[221,6986+5]..[221,6986+18])
                          Pexp_ident "print_endline" (src/ppx.ml[221,6986+5]..[221,6986+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[221,6986+19]..[221,6986+65])
                              Pexp_apply
                              expression (src/ppx.ml[221,6986+20]..[221,6986+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[221,6986+20]..[221,6986+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[221,6986+35]..[221,6986+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[221,6986+36]..[221,6986+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[221,6986+37]..[221,6986+49]),None)
                                      expression (src/ppx.ml[221,6986+52]..[221,6986+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[221,6986+52]..[221,6986+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[222,7054+4]..[228,7417+38])
                        Pexp_sequence
                        expression (src/ppx.ml[222,7054+4]..[222,7054+63])
                          Pexp_apply
                          expression (src/ppx.ml[222,7054+5]..[222,7054+18])
                            Pexp_ident "print_endline" (src/ppx.ml[222,7054+5]..[222,7054+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[222,7054+19]..[222,7054+62])
                                Pexp_apply
                                expression (src/ppx.ml[222,7054+20]..[222,7054+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[222,7054+20]..[222,7054+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[222,7054+35]..[222,7054+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[222,7054+36]..[222,7054+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[222,7054+37]..[222,7054+48]),None)
                                        expression (src/ppx.ml[222,7054+50]..[222,7054+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[222,7054+50]..[222,7054+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[223,7119+4]..[228,7417+38])
                          Pexp_sequence
                          expression (src/ppx.ml[223,7119+4]..[223,7119+29])
                            Pexp_apply
                            expression (src/ppx.ml[223,7119+5]..[223,7119+17])
                              Pexp_ident "process_kind" (src/ppx.ml[223,7119+5]..[223,7119+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[223,7119+18]..[223,7119+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[223,7119+18]..[223,7119+28])
                            ]
                          expression (src/ppx.ml[224,7150+4]..[228,7417+38])
                            Pexp_apply
                            expression (src/ppx.ml[224,7150+5]..[224,7150+18])
                              Pexp_ident "print_endline" (src/ppx.ml[224,7150+5]..[224,7150+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[224,7150+19]..[228,7417+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[224,7150+20]..[224,7150+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[224,7150+20]..[224,7150+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[224,7150+35]..[228,7417+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[224,7150+36]..[224,7150+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[224,7150+37]..[224,7150+51]),None)
                                          expression (src/ppx.ml[224,7150+55]..[224,7150+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[224,7150+55]..[224,7150+68])
                                          expression (src/ppx.ml[225,7220+36]..[225,7220+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[225,7220+37]..[225,7220+51]),None)
                                          expression (src/ppx.ml[225,7220+54]..[225,7220+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[225,7220+54]..[225,7220+68])
                                          expression (src/ppx.ml[226,7290+36]..[226,7290+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[226,7290+37]..[226,7290+47]),None)
                                          expression (src/ppx.ml[226,7290+50]..[226,7290+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[226,7290+50]..[226,7290+66])
                                          expression (src/ppx.ml[227,7358+36]..[227,7358+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[227,7358+37]..[227,7358+46]),None)
                                          expression (src/ppx.ml[227,7358+49]..[227,7358+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[227,7358+49]..[227,7358+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[230,7461+0]..[236,7596+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[230,7461+8]..[230,7461+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[230,7461+8]..[230,7461+30])
        expression (src/ppx.ml[230,7461+30]..[236,7596+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[230,7461+30]..[230,7461+33])
            Ppat_var "x" (src/ppx.ml[230,7461+31]..[230,7461+32])
          expression (src/ppx.ml[231,7497+2]..[236,7596+6])
            Pexp_match
            expression (src/ppx.ml[231,7497+8]..[231,7497+9])
              Pexp_ident "x" (src/ppx.ml[231,7497+8]..[231,7497+9])
            [
              <case>
                pattern (src/ppx.ml[232,7512+4]..[232,7512+6])
                  Ppat_construct "[]" (src/ppx.ml[232,7512+4]..[232,7512+6])
                  None
                expression (src/ppx.ml[232,7512+10]..[232,7512+12])
                  Pexp_construct "()" (src/ppx.ml[232,7512+10]..[232,7512+12])
                  None
              <case>
                pattern (src/ppx.ml[233,7525+4]..[233,7525+10])
                  Ppat_construct "::" (src/ppx.ml[233,7525+6]..[233,7525+8])
                  Some
                    []
                    pattern (src/ppx.ml[233,7525+4]..[233,7525+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[233,7525+4]..[233,7525+5])
                          Ppat_var "h" (src/ppx.ml[233,7525+4]..[233,7525+5])
                        pattern (src/ppx.ml[233,7525+9]..[233,7525+10])
                          Ppat_var "t" (src/ppx.ml[233,7525+9]..[233,7525+10])
                      ]
                expression (src/ppx.ml[234,7539+4]..[236,7596+6])
                  Pexp_sequence
                  expression (src/ppx.ml[234,7539+4]..[234,7539+23])
                    Pexp_apply
                    expression (src/ppx.ml[234,7539+5]..[234,7539+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[234,7539+5]..[234,7539+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[234,7539+21]..[234,7539+22])
                          Pexp_ident "h" (src/ppx.ml[234,7539+21]..[234,7539+22])
                    ]
                  expression (src/ppx.ml[235,7564+4]..[236,7596+6])
                    Pexp_sequence
                    expression (src/ppx.ml[235,7564+4]..[235,7564+30])
                      Pexp_apply
                      expression (src/ppx.ml[235,7564+5]..[235,7564+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[235,7564+5]..[235,7564+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[235,7564+28]..[235,7564+29])
                            Pexp_ident "t" (src/ppx.ml[235,7564+28]..[235,7564+29])
                      ]
                    expression (src/ppx.ml[236,7596+4]..[236,7596+6])
                      Pexp_construct "()" (src/ppx.ml[236,7596+4]..[236,7596+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[238,7608+0]..[264,9572+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[238,7608+4]..[238,7608+13])
          Ppat_var "printdesc" (src/ppx.ml[238,7608+4]..[238,7608+13])
        expression (src/ppx.ml[238,7608+13]..[264,9572+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[238,7608+13]..[238,7608+37])
            Ppat_constraint
            pattern (src/ppx.ml[238,7608+14]..[238,7608+15])
              Ppat_var "x" (src/ppx.ml[238,7608+14]..[238,7608+15])
            core_type (src/ppx.ml[238,7608+17]..[238,7608+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[238,7608+17]..[238,7608+36])
              []
          expression (src/ppx.ml[238,7608+38]..[264,9572+128])
            Pexp_constraint
            expression (src/ppx.ml[239,7654+2]..[264,9572+128])
              Pexp_sequence
              expression (src/ppx.ml[239,7654+2]..[239,7654+68])
                Pexp_apply
                expression (src/ppx.ml[239,7654+3]..[239,7654+16])
                  Pexp_ident "print_endline" (src/ppx.ml[239,7654+3]..[239,7654+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[239,7654+17]..[239,7654+67])
                      Pexp_apply
                      expression (src/ppx.ml[239,7654+18]..[239,7654+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[239,7654+18]..[239,7654+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[239,7654+33]..[239,7654+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[239,7654+34]..[239,7654+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[239,7654+35]..[239,7654+61]),None)
                              expression (src/ppx.ml[239,7654+64]..[239,7654+65])
                                Pexp_ident "x" (src/ppx.ml[239,7654+64]..[239,7654+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[240,7724+2]..[264,9572+128])
                Pexp_match
                expression (src/ppx.ml[240,7724+8]..[240,7724+9])
                  Pexp_ident "x" (src/ppx.ml[240,7724+8]..[240,7724+9])
                [
                  <case>
                    pattern (src/ppx.ml[241,7739+4]..[241,7739+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[241,7739+4]..[241,7739+13])
                      Some
                        []
                        pattern (src/ppx.ml[241,7739+14]..[241,7739+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[241,7739+15]..[241,7739+25])
                              Ppat_var "expression" (src/ppx.ml[241,7739+15]..[241,7739+25])
                            pattern (src/ppx.ml[241,7739+26]..[241,7739+36])
                              Ppat_var "attributes" (src/ppx.ml[241,7739+26]..[241,7739+36])
                          ]
                    expression (src/ppx.ml[241,7739+41]..[241,7739+117])
                      Pexp_apply
                      expression (src/ppx.ml[241,7739+42]..[241,7739+55])
                        Pexp_ident "print_endline" (src/ppx.ml[241,7739+42]..[241,7739+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[241,7739+56]..[241,7739+116])
                            Pexp_apply
                            expression (src/ppx.ml[241,7739+57]..[241,7739+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[241,7739+57]..[241,7739+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[241,7739+72]..[241,7739+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[241,7739+73]..[241,7739+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[241,7739+74]..[241,7739+90]),None)
                                    expression (src/ppx.ml[241,7739+93]..[241,7739+103])
                                      Pexp_ident "expression" (src/ppx.ml[241,7739+93]..[241,7739+103])
                                    expression (src/ppx.ml[241,7739+104]..[241,7739+114])
                                      Pexp_ident "attributes" (src/ppx.ml[241,7739+104]..[241,7739+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[243,7877+4]..[243,7877+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[243,7877+4]..[243,7877+14])
                      Some
                        []
                        pattern (src/ppx.ml[243,7877+15]..[243,7877+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[243,7877+16]..[243,7877+24])
                              Ppat_var "rec_flag" (src/ppx.ml[243,7877+16]..[243,7877+24])
                            pattern (src/ppx.ml[243,7877+26]..[243,7877+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[243,7877+26]..[243,7877+44])
                          ]
                    expression (src/ppx.ml[243,7877+48]..[244,8011+48])
                      Pexp_sequence
                      expression (src/ppx.ml[243,7877+48]..[243,7877+132])
                        Pexp_apply
                        expression (src/ppx.ml[243,7877+49]..[243,7877+62])
                          Pexp_ident "print_endline" (src/ppx.ml[243,7877+49]..[243,7877+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[243,7877+63]..[243,7877+131])
                              Pexp_apply
                              expression (src/ppx.ml[243,7877+64]..[243,7877+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[243,7877+64]..[243,7877+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[243,7877+79]..[243,7877+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[243,7877+80]..[243,7877+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[243,7877+81]..[243,7877+98]),None)
                                      expression (src/ppx.ml[243,7877+101]..[243,7877+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[243,7877+101]..[243,7877+109])
                                      expression (src/ppx.ml[243,7877+111]..[243,7877+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[243,7877+111]..[243,7877+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[244,8011+4]..[244,8011+48])
                        Pexp_apply
                        expression (src/ppx.ml[244,8011+4]..[244,8011+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[244,8011+4]..[244,8011+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[244,8011+28]..[244,8011+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[244,8011+29]..[244,8011+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[245,8060+4]..[245,8060+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[245,8060+4]..[245,8060+18])
                      Some
                        []
                        pattern (src/ppx.ml[245,8060+19]..[245,8060+36])
                          Ppat_var "value_description" (src/ppx.ml[245,8060+19]..[245,8060+36])
                    expression (src/ppx.ml[245,8060+39]..[245,8060+116])
                      Pexp_apply
                      expression (src/ppx.ml[245,8060+40]..[245,8060+53])
                        Pexp_ident "print_endline" (src/ppx.ml[245,8060+40]..[245,8060+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[245,8060+54]..[245,8060+115])
                            Pexp_apply
                            expression (src/ppx.ml[245,8060+55]..[245,8060+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[245,8060+55]..[245,8060+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,8060+70]..[245,8060+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[245,8060+71]..[245,8060+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[245,8060+72]..[245,8060+93]),None)
                                    expression (src/ppx.ml[245,8060+96]..[245,8060+113])
                                      Pexp_ident "value_description" (src/ppx.ml[245,8060+96]..[245,8060+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[247,8178+4]..[247,8178+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[247,8178+4]..[247,8178+13])
                      Some
                        []
                        pattern (src/ppx.ml[247,8178+14]..[247,8178+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[247,8178+15]..[247,8178+23])
                              Ppat_var "rec_flag" (src/ppx.ml[247,8178+15]..[247,8178+23])
                            pattern (src/ppx.ml[247,8178+25]..[247,8178+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[247,8178+25]..[247,8178+46])
                          ]
                    expression (src/ppx.ml[249,8257+4]..[250,8308+90])
                      Pexp_sequence
                      expression (src/ppx.ml[249,8257+4]..[249,8257+49])
                        Pexp_apply
                        expression (src/ppx.ml[249,8257+4]..[249,8257+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[249,8257+4]..[249,8257+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[249,8257+26]..[249,8257+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[249,8257+27]..[249,8257+48])
                        ]
                      expression (src/ppx.ml[250,8308+4]..[250,8308+90])
                        Pexp_apply
                        expression (src/ppx.ml[250,8308+5]..[250,8308+18])
                          Pexp_ident "print_endline" (src/ppx.ml[250,8308+5]..[250,8308+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[250,8308+19]..[250,8308+89])
                              Pexp_apply
                              expression (src/ppx.ml[250,8308+20]..[250,8308+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[250,8308+20]..[250,8308+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[250,8308+35]..[250,8308+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[250,8308+36]..[250,8308+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[250,8308+37]..[250,8308+53]),None)
                                      expression (src/ppx.ml[250,8308+56]..[250,8308+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[250,8308+56]..[250,8308+64])
                                      expression (src/ppx.ml[250,8308+66]..[250,8308+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[250,8308+66]..[250,8308+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[253,8401+4]..[253,8401+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[253,8401+4]..[253,8401+15])
                      Some
                        []
                        pattern (src/ppx.ml[253,8401+17]..[253,8401+31])
                          Ppat_var "type_extension" (src/ppx.ml[253,8401+17]..[253,8401+31])
                    expression (src/ppx.ml[253,8401+34]..[253,8401+105])
                      Pexp_apply
                      expression (src/ppx.ml[253,8401+35]..[253,8401+48])
                        Pexp_ident "print_endline" (src/ppx.ml[253,8401+35]..[253,8401+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,8401+49]..[253,8401+104])
                            Pexp_apply
                            expression (src/ppx.ml[253,8401+50]..[253,8401+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,8401+50]..[253,8401+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,8401+65]..[253,8401+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,8401+66]..[253,8401+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[253,8401+67]..[253,8401+85]),None)
                                    expression (src/ppx.ml[253,8401+88]..[253,8401+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[253,8401+88]..[253,8401+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[254,8507+4]..[254,8507+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[254,8507+4]..[254,8507+18])
                      Some
                        []
                        pattern (src/ppx.ml[254,8507+19]..[254,8507+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[254,8507+19]..[254,8507+40])
                    expression (src/ppx.ml[254,8507+43]..[254,8507+124])
                      Pexp_apply
                      expression (src/ppx.ml[254,8507+44]..[254,8507+57])
                        Pexp_ident "print_endline" (src/ppx.ml[254,8507+44]..[254,8507+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[254,8507+58]..[254,8507+123])
                            Pexp_apply
                            expression (src/ppx.ml[254,8507+59]..[254,8507+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[254,8507+59]..[254,8507+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[254,8507+74]..[254,8507+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[254,8507+75]..[254,8507+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[254,8507+76]..[254,8507+97]),None)
                                    expression (src/ppx.ml[254,8507+100]..[254,8507+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[254,8507+100]..[254,8507+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8632+4]..[255,8632+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[255,8632+4]..[255,8632+15])
                      Some
                        []
                        pattern (src/ppx.ml[255,8632+17]..[255,8632+31])
                          Ppat_var "module_binding" (src/ppx.ml[255,8632+17]..[255,8632+31])
                    expression (src/ppx.ml[255,8632+34]..[255,8632+104])
                      Pexp_apply
                      expression (src/ppx.ml[255,8632+35]..[255,8632+48])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8632+35]..[255,8632+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8632+49]..[255,8632+103])
                            Pexp_apply
                            expression (src/ppx.ml[255,8632+50]..[255,8632+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8632+50]..[255,8632+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8632+65]..[255,8632+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8632+66]..[255,8632+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[255,8632+67]..[255,8632+85]),None)
                                    expression (src/ppx.ml[255,8632+87]..[255,8632+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[255,8632+87]..[255,8632+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[256,8737+4]..[256,8737+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[256,8737+4]..[256,8737+18])
                      Some
                        []
                        pattern (src/ppx.ml[256,8737+20]..[256,8737+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[256,8737+20]..[256,8737+39])
                    expression (src/ppx.ml[256,8737+42]..[256,8737+121])
                      Pexp_apply
                      expression (src/ppx.ml[256,8737+43]..[256,8737+56])
                        Pexp_ident "print_endline" (src/ppx.ml[256,8737+43]..[256,8737+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[256,8737+57]..[256,8737+120])
                            Pexp_apply
                            expression (src/ppx.ml[256,8737+58]..[256,8737+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[256,8737+58]..[256,8737+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[256,8737+73]..[256,8737+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[256,8737+74]..[256,8737+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[256,8737+75]..[256,8737+96]),None)
                                    expression (src/ppx.ml[256,8737+99]..[256,8737+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[256,8737+99]..[256,8737+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8859+4]..[257,8859+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[257,8859+4]..[257,8859+16])
                      Some
                        []
                        pattern (src/ppx.ml[257,8859+17]..[257,8859+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[257,8859+17]..[257,8859+40])
                    expression (src/ppx.ml[257,8859+43]..[257,8859+124])
                      Pexp_apply
                      expression (src/ppx.ml[257,8859+44]..[257,8859+57])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8859+44]..[257,8859+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8859+58]..[257,8859+123])
                            Pexp_apply
                            expression (src/ppx.ml[257,8859+59]..[257,8859+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8859+59]..[257,8859+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8859+74]..[257,8859+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8859+75]..[257,8859+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[257,8859+76]..[257,8859+95]),None)
                                    expression (src/ppx.ml[257,8859+98]..[257,8859+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[257,8859+98]..[257,8859+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,9001+4]..[259,9001+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[259,9001+4]..[259,9001+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,9001+14]..[259,9001+30])
                          Ppat_var "open_description" (src/ppx.ml[259,9001+14]..[259,9001+30])
                    expression (src/ppx.ml[259,9001+33]..[259,9001+103])
                      Pexp_apply
                      expression (src/ppx.ml[259,9001+34]..[259,9001+47])
                        Pexp_ident "print_endline" (src/ppx.ml[259,9001+34]..[259,9001+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[259,9001+48]..[259,9001+102])
                            Pexp_apply
                            expression (src/ppx.ml[259,9001+49]..[259,9001+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[259,9001+49]..[259,9001+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[259,9001+64]..[259,9001+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[259,9001+65]..[259,9001+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[259,9001+66]..[259,9001+81]),None)
                                    expression (src/ppx.ml[259,9001+84]..[259,9001+100])
                                      Pexp_ident "open_description" (src/ppx.ml[259,9001+84]..[259,9001+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[260,9105+4]..[260,9105+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[260,9105+4]..[260,9105+14])
                      Some
                        []
                        pattern (src/ppx.ml[260,9105+15]..[260,9105+36])
                          Ppat_var "class_declarations" (src/ppx.ml[260,9105+16]..[260,9105+34])
                    expression (src/ppx.ml[260,9105+39]..[260,9105+113])
                      Pexp_apply
                      expression (src/ppx.ml[260,9105+40]..[260,9105+53])
                        Pexp_ident "print_endline" (src/ppx.ml[260,9105+40]..[260,9105+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,9105+54]..[260,9105+112])
                            Pexp_apply
                            expression (src/ppx.ml[260,9105+55]..[260,9105+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[260,9105+55]..[260,9105+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[260,9105+70]..[260,9105+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[260,9105+71]..[260,9105+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[260,9105+72]..[260,9105+89]),None)
                                    expression (src/ppx.ml[260,9105+92]..[260,9105+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[260,9105+92]..[260,9105+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,9219+4]..[261,9219+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[261,9219+4]..[261,9219+19])
                      Some
                        []
                        pattern (src/ppx.ml[261,9219+20]..[261,9219+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[261,9219+21]..[261,9219+44])
                    expression (src/ppx.ml[261,9219+48]..[261,9219+132])
                      Pexp_apply
                      expression (src/ppx.ml[261,9219+49]..[261,9219+62])
                        Pexp_ident "print_endline" (src/ppx.ml[261,9219+49]..[261,9219+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[261,9219+63]..[261,9219+131])
                            Pexp_apply
                            expression (src/ppx.ml[261,9219+64]..[261,9219+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[261,9219+64]..[261,9219+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[261,9219+79]..[261,9219+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[261,9219+80]..[261,9219+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[261,9219+81]..[261,9219+103]),None)
                                    expression (src/ppx.ml[261,9219+106]..[261,9219+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[261,9219+106]..[261,9219+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[262,9352+4]..[262,9352+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[262,9352+4]..[262,9352+16])
                      Some
                        []
                        pattern (src/ppx.ml[262,9352+18]..[262,9352+39])
                          Ppat_var "include_declaration" (src/ppx.ml[262,9352+19]..[262,9352+38])
                    expression (src/ppx.ml[262,9352+41]..[262,9352+117])
                      Pexp_apply
                      expression (src/ppx.ml[262,9352+42]..[262,9352+55])
                        Pexp_ident "print_endline" (src/ppx.ml[262,9352+42]..[262,9352+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,9352+56]..[262,9352+116])
                            Pexp_apply
                            expression (src/ppx.ml[262,9352+57]..[262,9352+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,9352+57]..[262,9352+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,9352+72]..[262,9352+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,9352+73]..[262,9352+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[262,9352+74]..[262,9352+93]),None)
                                    expression (src/ppx.ml[262,9352+95]..[262,9352+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[262,9352+95]..[262,9352+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[263,9470+4]..[263,9470+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[263,9470+4]..[263,9470+18])
                      Some
                        []
                        pattern (src/ppx.ml[263,9470+19]..[263,9470+30])
                          Ppat_var "attribute" (src/ppx.ml[263,9470+20]..[263,9470+29])
                    expression (src/ppx.ml[263,9470+32]..[263,9470+101])
                      Pexp_apply
                      expression (src/ppx.ml[263,9470+33]..[263,9470+46])
                        Pexp_ident "print_endline" (src/ppx.ml[263,9470+33]..[263,9470+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[263,9470+47]..[263,9470+100])
                            Pexp_apply
                            expression (src/ppx.ml[263,9470+48]..[263,9470+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[263,9470+48]..[263,9470+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[263,9470+63]..[263,9470+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[263,9470+64]..[263,9470+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[263,9470+65]..[263,9470+86]),None)
                                    expression (src/ppx.ml[263,9470+89]..[263,9470+98])
                                      Pexp_ident "attribute" (src/ppx.ml[263,9470+89]..[263,9470+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,9572+4]..[264,9572+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[264,9572+4]..[264,9572+18])
                      Some
                        []
                        pattern (src/ppx.ml[264,9572+19]..[264,9572+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[264,9572+21]..[264,9572+30])
                              Ppat_var "extension" (src/ppx.ml[264,9572+21]..[264,9572+30])
                            pattern (src/ppx.ml[264,9572+33]..[264,9572+43])
                              Ppat_var "attributes" (src/ppx.ml[264,9572+33]..[264,9572+43])
                          ]
                    expression (src/ppx.ml[264,9572+46]..[264,9572+128])
                      Pexp_apply
                      expression (src/ppx.ml[264,9572+47]..[264,9572+60])
                        Pexp_ident "print_endline" (src/ppx.ml[264,9572+47]..[264,9572+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,9572+61]..[264,9572+127])
                            Pexp_apply
                            expression (src/ppx.ml[264,9572+62]..[264,9572+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[264,9572+62]..[264,9572+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[264,9572+77]..[264,9572+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[264,9572+78]..[264,9572+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[264,9572+79]..[264,9572+100]),None)
                                    expression (src/ppx.ml[264,9572+103]..[264,9572+112])
                                      Pexp_ident "extension" (src/ppx.ml[264,9572+103]..[264,9572+112])
                                    expression (src/ppx.ml[264,9572+115]..[264,9572+125])
                                      Pexp_ident "attributes" (src/ppx.ml[264,9572+115]..[264,9572+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[238,7608+39]..[238,7608+43])
              Ptyp_constr "unit" (src/ppx.ml[238,7608+39]..[238,7608+43])
              []
    ]
  structure_item (src/ppx.ml[266,9702+0]..[266,9702+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[266,9702+4]..[266,9702+7])
          Ppat_var "foo" (src/ppx.ml[266,9702+4]..[266,9702+7])
        expression (src/ppx.ml[266,9702+10]..[266,9702+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[268,9717+0]..[276,9936+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[268,9717+4]..[268,9717+12])
          Ppat_var "printone" (src/ppx.ml[268,9717+4]..[268,9717+12])
        expression (src/ppx.ml[268,9717+13]..[276,9936+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[268,9717+13]..[268,9717+34])
            Ppat_constraint
            pattern (src/ppx.ml[268,9717+14]..[268,9717+15])
              Ppat_var "x" (src/ppx.ml[268,9717+14]..[268,9717+15])
            core_type (src/ppx.ml[268,9717+18]..[268,9717+32])
              Ptyp_constr "structure_item" (src/ppx.ml[268,9717+18]..[268,9717+32])
              []
          expression (src/ppx.ml[268,9717+35]..[276,9936+6])
            Pexp_constraint
            expression (src/ppx.ml[269,9760+2]..[276,9936+6])
              Pexp_match
              expression (src/ppx.ml[269,9760+8]..[269,9760+9])
                Pexp_ident "x" (src/ppx.ml[269,9760+8]..[269,9760+9])
              [
                <case>
                  pattern (src/ppx.ml[270,9775+3]..[273,9825+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[271,9780+4]..[271,9780+13]) ghost
                        pattern (src/ppx.ml[271,9780+4]..[271,9780+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[271,9780+4]..[271,9780+13])
                    ]
                  expression (src/ppx.ml[275,9909+4]..[276,9936+6])
                    Pexp_sequence
                    expression (src/ppx.ml[275,9909+4]..[275,9909+25])
                      Pexp_apply
                      expression (src/ppx.ml[275,9909+5]..[275,9909+14])
                        Pexp_ident "printdesc" (src/ppx.ml[275,9909+5]..[275,9909+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9909+15]..[275,9909+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[275,9909+15]..[275,9909+24])
                      ]
                    expression (src/ppx.ml[276,9936+4]..[276,9936+6])
                      Pexp_construct "()" (src/ppx.ml[276,9936+4]..[276,9936+6])
                      None
              ]
            core_type (src/ppx.ml[268,9717+36]..[268,9717+40])
              Ptyp_constr "unit" (src/ppx.ml[268,9717+36]..[268,9717+40])
              []
    ]
  structure_item (src/ppx.ml[282,10056+0]..[284,10137+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,10056+4]..[282,10056+13])
          Ppat_var "printone2" (src/ppx.ml[282,10056+4]..[282,10056+13])
        expression (src/ppx.ml[282,10056+14]..[284,10137+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[282,10056+14]..[282,10056+15])
            Ppat_var "x" (src/ppx.ml[282,10056+14]..[282,10056+15])
          expression (src/ppx.ml[282,10056+16]..[284,10137+12])
            Pexp_constraint
            expression (src/ppx.ml[283,10080+2]..[284,10137+12])
              Pexp_sequence
              expression (src/ppx.ml[283,10080+2]..[283,10080+55])
                Pexp_apply
                expression (src/ppx.ml[283,10080+3]..[283,10080+16])
                  Pexp_ident "print_endline" (src/ppx.ml[283,10080+3]..[283,10080+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[283,10080+17]..[283,10080+54])
                      Pexp_apply
                      expression (src/ppx.ml[283,10080+18]..[283,10080+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[283,10080+18]..[283,10080+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,10080+33]..[283,10080+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[283,10080+34]..[283,10080+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[283,10080+35]..[283,10080+49]),None)
                              expression (src/ppx.ml[283,10080+51]..[283,10080+52])
                                Pexp_ident "x" (src/ppx.ml[283,10080+51]..[283,10080+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[284,10137+2]..[284,10137+12])
                Pexp_apply
                expression (src/ppx.ml[284,10137+2]..[284,10137+10])
                  Pexp_ident "printone" (src/ppx.ml[284,10137+2]..[284,10137+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[284,10137+11]..[284,10137+12])
                      Pexp_ident "x" (src/ppx.ml[284,10137+11]..[284,10137+12])
                ]
            core_type (src/ppx.ml[282,10056+17]..[282,10056+21])
              Ptyp_constr "unit" (src/ppx.ml[282,10056+17]..[282,10056+21])
              []
    ]
  structure_item (src/ppx.ml[286,10153+0]..[288,10184+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[286,10153+4]..[286,10153+9])
          Ppat_var "proc1" (src/ppx.ml[286,10153+4]..[286,10153+9])
        expression (src/ppx.ml[286,10153+10]..[288,10184+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[286,10153+10]..[286,10153+11])
            Ppat_var "x" (src/ppx.ml[286,10153+10]..[286,10153+11])
          expression (src/ppx.ml[287,10169+2]..[288,10184+3])
            Pexp_sequence
            expression (src/ppx.ml[287,10169+2]..[287,10169+13])
              Pexp_apply
              expression (src/ppx.ml[287,10169+2]..[287,10169+11])
                Pexp_ident "printone2" (src/ppx.ml[287,10169+2]..[287,10169+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[287,10169+12]..[287,10169+13])
                    Pexp_ident "x" (src/ppx.ml[287,10169+12]..[287,10169+13])
              ]
            expression (src/ppx.ml[288,10184+2]..[288,10184+3])
              Pexp_ident "x" (src/ppx.ml[288,10184+2]..[288,10184+3])
    ]
  structure_item (src/ppx.ml[290,10189+0]..[293,10338+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[290,10189+4]..[290,10189+9])
          Ppat_var "debug" (src/ppx.ml[290,10189+4]..[290,10189+9])
        expression (src/ppx.ml[290,10189+10]..[293,10338+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[290,10189+10]..[290,10189+14])
            Ppat_var "proc" (src/ppx.ml[290,10189+10]..[290,10189+14])
          expression (src/ppx.ml[290,10189+15]..[293,10338+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[290,10189+15]..[290,10189+18])
              Ppat_var "lst" (src/ppx.ml[290,10189+15]..[290,10189+18])
            expression (src/ppx.ml[290,10189+19]..[293,10338+4])
              Pexp_constraint
              expression (src/ppx.ml[291,10217+2]..[293,10338+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[291,10217+6]..[291,10217+12])
                      Ppat_var "result" (src/ppx.ml[291,10217+6]..[291,10217+12])
                    expression (src/ppx.ml[291,10217+15]..[291,10217+32])
                      Pexp_apply
                      expression (src/ppx.ml[291,10217+15]..[291,10217+23])
                        Pexp_ident "List.map" (src/ppx.ml[291,10217+15]..[291,10217+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[291,10217+24]..[291,10217+28])
                            Pexp_ident "proc" (src/ppx.ml[291,10217+24]..[291,10217+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[291,10217+29]..[291,10217+32])
                            Pexp_ident "lst" (src/ppx.ml[291,10217+29]..[291,10217+32])
                      ]
                ]
                expression (src/ppx.ml[292,10253+2]..[293,10338+4])
                  Pexp_sequence
                  expression (src/ppx.ml[292,10253+2]..[292,10253+83])
                    Pexp_apply
                    expression (src/ppx.ml[292,10253+2]..[292,10253+11])
                      Pexp_ident "List.iter" (src/ppx.ml[292,10253+2]..[292,10253+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[292,10253+12]..[292,10253+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[292,10253+17]..[292,10253+18])
                            Ppat_var "i" (src/ppx.ml[292,10253+17]..[292,10253+18])
                          expression (src/ppx.ml[292,10253+22]..[292,10253+75])
                            Pexp_apply
                            expression (src/ppx.ml[292,10253+22]..[292,10253+35])
                              Pexp_ident "print_endline" (src/ppx.ml[292,10253+22]..[292,10253+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[292,10253+36]..[292,10253+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[292,10253+37]..[292,10253+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[292,10253+37]..[292,10253+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[292,10253+52]..[292,10253+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[292,10253+53]..[292,10253+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[292,10253+54]..[292,10253+69]),None)
                                          expression (src/ppx.ml[292,10253+72]..[292,10253+73])
                                            Pexp_ident "i" (src/ppx.ml[292,10253+72]..[292,10253+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[292,10253+77]..[292,10253+83])
                          Pexp_ident "result" (src/ppx.ml[292,10253+77]..[292,10253+83])
                    ]
                  expression (src/ppx.ml[293,10338+2]..[293,10338+4])
                    Pexp_construct "()" (src/ppx.ml[293,10338+2]..[293,10338+4])
                    None
              core_type (src/ppx.ml[290,10189+21]..[290,10189+25])
                Ptyp_constr "unit" (src/ppx.ml[290,10189+21]..[290,10189+25])
                []
    ]
  structure_item (src/ppx.ml[295,10360+0]..[298,10484+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10360+4]..[295,10360+13])
          Ppat_var "transform" (src/ppx.ml[295,10360+4]..[295,10360+13])
        expression (src/ppx.ml[295,10360+14]..[298,10484+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[295,10360+14]..[295,10360+15])
            Ppat_var "x" (src/ppx.ml[295,10360+14]..[295,10360+15])
          expression (src/ppx.ml[296,10415+2]..[298,10484+3])
            Pexp_sequence
            expression (src/ppx.ml[296,10415+2]..[296,10415+48])
              Pexp_apply
              expression (src/ppx.ml[296,10415+3]..[296,10415+16])
                Pexp_ident "print_endline" (src/ppx.ml[296,10415+3]..[296,10415+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[296,10415+17]..[296,10415+47])
                    Pexp_apply
                    expression (src/ppx.ml[296,10415+18]..[296,10415+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[296,10415+18]..[296,10415+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[296,10415+33]..[296,10415+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[296,10415+34]..[296,10415+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[296,10415+35]..[296,10415+42]),None)
                            expression (src/ppx.ml[296,10415+44]..[296,10415+45])
                              Pexp_ident "x" (src/ppx.ml[296,10415+44]..[296,10415+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[297,10465+2]..[298,10484+3])
              Pexp_sequence
              expression (src/ppx.ml[297,10465+2]..[297,10465+17])
                Pexp_apply
                expression (src/ppx.ml[297,10465+3]..[297,10465+8])
                  Pexp_ident "debug" (src/ppx.ml[297,10465+3]..[297,10465+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[297,10465+9]..[297,10465+14])
                      Pexp_ident "proc1" (src/ppx.ml[297,10465+9]..[297,10465+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[297,10465+15]..[297,10465+16])
                      Pexp_ident "x" (src/ppx.ml[297,10465+15]..[297,10465+16])
                ]
              expression (src/ppx.ml[298,10484+2]..[298,10484+3])
                Pexp_ident "x" (src/ppx.ml[298,10484+2]..[298,10484+3])
    ]
  structure_item (src/ppx.ml[300,10491+1]..[300,10491+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10491+5]..[300,10491+7])
          Ppat_construct "()" (src/ppx.ml[300,10491+5]..[300,10491+7])
          None
        expression (src/ppx.ml[300,10491+10]..[300,10491+69])
          Pexp_apply
          expression (src/ppx.ml[300,10491+10]..[300,10491+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[300,10491+10]..[300,10491+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[300,10491+47]..[300,10491+56])
                Pexp_ident "transform" (src/ppx.ml[300,10491+47]..[300,10491+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[300,10491+57]..[300,10491+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[300,10491+58]..[300,10491+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow9:")
  | Ptyp_constr (a, b) ->
      (process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline (Batteries.dump ("DEBUG:ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_Ptype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_Ptype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_Ptype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[144,4633+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..src/ppx.ml[69,1879+27])
          Tpat_var "process_record_kind/1437"
        expression (src/ppx.ml[69,1879+27]..src/ppx.ml[83,2363+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+27]..src/ppx.ml[69,1879+30])
                Tpat_var "x/1442"
              expression (src/ppx.ml[70,1912+2]..src/ppx.ml[83,2363+47])
                Texp_match
                expression (src/ppx.ml[70,1912+8]..src/ppx.ml[70,1912+9])
                  Texp_ident "x/1442"
                [
                  <case>
                    pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                      Tpat_value
                      pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[72,1933+5]..src/ppx.ml[72,1933+13])
                              Tpat_var "pld_name/1443"
                          "pld_mutable"
                            pattern (src/ppx.ml[73,1966+5]..src/ppx.ml[73,1966+16])
                              Tpat_var "pld_mutable/1444"
                          "pld_type"
                            pattern (src/ppx.ml[74,2004+5]..src/ppx.ml[74,2004+13])
                              Tpat_var "pld_type/1445"
                          "pld_loc"
                            pattern (src/ppx.ml[75,2036+5]..src/ppx.ml[75,2036+12])
                              Tpat_var "pld_loc/1446"
                          "pld_attributes"
                            pattern (src/ppx.ml[76,2068+5]..src/ppx.ml[76,2068+19])
                              Tpat_var "pld_attributes/1447"
                        ]
                    expression (src/ppx.ml[78,2116+4]..src/ppx.ml[83,2363+47])
                      Texp_apply
                      expression (src/ppx.ml[78,2116+5]..src/ppx.ml[78,2116+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[78,2116+19]..src/ppx.ml[83,2363+46])
                            Texp_apply
                            expression (src/ppx.ml[78,2116+20]..src/ppx.ml[78,2116+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[78,2116+35]..src/ppx.ml[83,2363+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[78,2116+36]..src/ppx.ml[78,2116+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..src/ppx.ml[78,2116+56]),None)
                                    expression (src/ppx.ml[79,2177+36]..src/ppx.ml[79,2177+44])
                                      Texp_ident "pld_name/1443"
                                    expression (src/ppx.ml[80,2223+36]..src/ppx.ml[80,2223+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[80,2223+37]..src/ppx.ml[80,2223+44]),None)
                                    expression (src/ppx.ml[81,2270+36]..src/ppx.ml[81,2270+47])
                                      Texp_ident "pld_mutable/1444"
                                    expression (src/ppx.ml[82,2319+36]..src/ppx.ml[82,2319+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[82,2319+37]..src/ppx.ml[82,2319+41]),None)
                                    expression (src/ppx.ml[83,2363+36]..src/ppx.ml[83,2363+44])
                                      Texp_ident "pld_type/1445"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..src/ppx.ml[85,2415+22])
          Tpat_var "process_core_type_desc/1438"
        expression (src/ppx.ml[85,2415+23]..src/ppx.ml[119,3980+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2415+23]..src/ppx.ml[85,2415+24])
                Tpat_var "x/1448"
              expression (src/ppx.ml[86,2442+2]..src/ppx.ml[119,3980+65])
                Texp_match
                expression (src/ppx.ml[86,2442+8]..src/ppx.ml[86,2442+9])
                  Texp_ident "x/1448"
                [
                  <case>
                    pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+12])
                      Tpat_value
                      pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[87,2457+17]..src/ppx.ml[87,2457+69])
                      Texp_apply
                      expression (src/ppx.ml[87,2457+18]..src/ppx.ml[87,2457+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[87,2457+32]..src/ppx.ml[87,2457+68])
                            Texp_apply
                            expression (src/ppx.ml[87,2457+33]..src/ppx.ml[87,2457+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[87,2457+48]..src/ppx.ml[87,2457+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[87,2457+50]..src/ppx.ml[87,2457+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[88,2527+4]..src/ppx.ml[88,2527+17])
                      Tpat_value
                      pattern (src/ppx.ml[88,2527+4]..src/ppx.ml[88,2527+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[88,2527+13]..src/ppx.ml[88,2527+17])
                            Tpat_var "name/1449"
                        ]
                        None
                    expression (src/ppx.ml[88,2527+20]..src/ppx.ml[88,2527+80])
                      Texp_apply
                      expression (src/ppx.ml[88,2527+21]..src/ppx.ml[88,2527+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[88,2527+35]..src/ppx.ml[88,2527+79])
                            Texp_apply
                            expression (src/ppx.ml[88,2527+36]..src/ppx.ml[88,2527+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[88,2527+51]..src/ppx.ml[88,2527+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[88,2527+52]..src/ppx.ml[88,2527+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[88,2527+53]..src/ppx.ml[88,2527+68]),None)
                                    expression (src/ppx.ml[88,2527+73]..src/ppx.ml[88,2527+77])
                                      Texp_ident "name/1449"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[89,2608+4]..src/ppx.ml[89,2608+51])
                      Tpat_value
                      pattern (src/ppx.ml[89,2608+4]..src/ppx.ml[89,2608+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[89,2608+16]..src/ppx.ml[89,2608+25])
                            Tpat_var "arg_label/1450"
                          pattern (src/ppx.ml[89,2608+28]..src/ppx.ml[89,2608+37])
                            Tpat_var "core_type/1451"
                          pattern (src/ppx.ml[89,2608+40]..src/ppx.ml[89,2608+50])
                            Tpat_var "core_type2/1452"
                        ]
                        None
                    expression (src/ppx.ml[90,2663+4]..src/ppx.ml[90,2663+61])
                      Texp_apply
                      expression (src/ppx.ml[90,2663+5]..src/ppx.ml[90,2663+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[90,2663+19]..src/ppx.ml[90,2663+60])
                            Texp_apply
                            expression (src/ppx.ml[90,2663+20]..src/ppx.ml[90,2663+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[90,2663+35]..src/ppx.ml[90,2663+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[90,2663+37]..src/ppx.ml[90,2663+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[91,2725+4]..src/ppx.ml[91,2725+16])
                      Tpat_value
                      pattern (src/ppx.ml[91,2725+4]..src/ppx.ml[91,2725+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[91,2725+15]..src/ppx.ml[91,2725+16])
                            Tpat_var "a/1453"
                        ]
                        None
                    expression (src/ppx.ml[93,2773+4]..src/ppx.ml[93,2773+60])
                      Texp_apply
                      expression (src/ppx.ml[93,2773+5]..src/ppx.ml[93,2773+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[93,2773+19]..src/ppx.ml[93,2773+59])
                            Texp_apply
                            expression (src/ppx.ml[93,2773+20]..src/ppx.ml[93,2773+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[93,2773+35]..src/ppx.ml[93,2773+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow9:",(src/ppx.ml[93,2773+37]..src/ppx.ml[93,2773+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[94,2834+4]..src/ppx.ml[94,2834+21])
                      Tpat_value
                      pattern (src/ppx.ml[94,2834+4]..src/ppx.ml[94,2834+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[94,2834+17]..src/ppx.ml[94,2834+18])
                            Tpat_var "a/1454"
                          pattern (src/ppx.ml[94,2834+19]..src/ppx.ml[94,2834+20])
                            Tpat_var "b/1455"
                        ]
                        None
                    expression (src/ppx.ml[96,2905+4]..src/ppx.ml[97,2937+79])
                      Texp_sequence
                      expression (src/ppx.ml[96,2905+4]..src/ppx.ml[96,2905+30])
                        Texp_apply
                        expression (src/ppx.ml[96,2905+5]..src/ppx.ml[96,2905+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[96,2905+28]..src/ppx.ml[96,2905+29])
                              Texp_ident "b/1455"
                        ]
                      expression (src/ppx.ml[97,2937+4]..src/ppx.ml[97,2937+79])
                        Texp_apply
                        expression (src/ppx.ml[97,2937+5]..src/ppx.ml[97,2937+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[97,2937+19]..src/ppx.ml[97,2937+78])
                              Texp_apply
                              expression (src/ppx.ml[97,2937+20]..src/ppx.ml[97,2937+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[97,2937+35]..src/ppx.ml[97,2937+77])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[97,2937+36]..src/ppx.ml[97,2937+56])
                                        Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2937+37]..src/ppx.ml[97,2937+55]),None)
                                      expression (src/ppx.ml[97,2937+58]..src/ppx.ml[97,2937+62])
                                        Texp_constant Const_string("id",(src/ppx.ml[97,2937+59]..src/ppx.ml[97,2937+61]),None)
                                      expression (src/ppx.ml[97,2937+63]..src/ppx.ml[97,2937+64])
                                        Texp_ident "a/1454"
                                      expression (src/ppx.ml[97,2937+66]..src/ppx.ml[97,2937+73])
                                        Texp_constant Const_string("types",(src/ppx.ml[97,2937+67]..src/ppx.ml[97,2937+72]),None)
                                      expression (src/ppx.ml[97,2937+74]..src/ppx.ml[97,2937+75])
                                        Texp_ident "b/1455"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[98,3017+4]..src/ppx.ml[98,3017+21])
                      Tpat_value
                      pattern (src/ppx.ml[98,3017+4]..src/ppx.ml[98,3017+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[98,3017+17]..src/ppx.ml[98,3017+18])
                            Tpat_var "a/1456"
                          pattern (src/ppx.ml[98,3017+19]..src/ppx.ml[98,3017+20])
                            Tpat_var "b/1457"
                        ]
                        None
                    expression (src/ppx.ml[100,3086+4]..src/ppx.ml[100,3086+60])
                      Texp_apply
                      expression (src/ppx.ml[100,3086+5]..src/ppx.ml[100,3086+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[100,3086+19]..src/ppx.ml[100,3086+59])
                            Texp_apply
                            expression (src/ppx.ml[100,3086+20]..src/ppx.ml[100,3086+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[100,3086+35]..src/ppx.ml[100,3086+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[100,3086+37]..src/ppx.ml[100,3086+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[101,3147+4]..src/ppx.ml[101,3147+20])
                      Tpat_value
                      pattern (src/ppx.ml[101,3147+4]..src/ppx.ml[101,3147+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[101,3147+16]..src/ppx.ml[101,3147+17])
                            Tpat_var "a/1458"
                          pattern (src/ppx.ml[101,3147+18]..src/ppx.ml[101,3147+19])
                            Tpat_var "b/1459"
                        ]
                        None
                    expression (src/ppx.ml[103,3217+4]..src/ppx.ml[103,3217+60])
                      Texp_apply
                      expression (src/ppx.ml[103,3217+5]..src/ppx.ml[103,3217+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,3217+19]..src/ppx.ml[103,3217+59])
                            Texp_apply
                            expression (src/ppx.ml[103,3217+20]..src/ppx.ml[103,3217+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,3217+35]..src/ppx.ml[103,3217+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[103,3217+37]..src/ppx.ml[103,3217+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,3278+4]..src/ppx.ml[104,3278+20])
                      Tpat_value
                      pattern (src/ppx.ml[104,3278+4]..src/ppx.ml[104,3278+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[104,3278+16]..src/ppx.ml[104,3278+17])
                            Tpat_var "a/1460"
                          pattern (src/ppx.ml[104,3278+18]..src/ppx.ml[104,3278+19])
                            Tpat_var "b/1461"
                        ]
                        None
                    expression (src/ppx.ml[106,3339+4]..src/ppx.ml[106,3339+60])
                      Texp_apply
                      expression (src/ppx.ml[106,3339+5]..src/ppx.ml[106,3339+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[106,3339+19]..src/ppx.ml[106,3339+59])
                            Texp_apply
                            expression (src/ppx.ml[106,3339+20]..src/ppx.ml[106,3339+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[106,3339+35]..src/ppx.ml[106,3339+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[106,3339+37]..src/ppx.ml[106,3339+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3400+4]..src/ppx.ml[107,3400+24])
                      Tpat_value
                      pattern (src/ppx.ml[107,3400+4]..src/ppx.ml[107,3400+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[107,3400+18]..src/ppx.ml[107,3400+19])
                            Tpat_var "a/1462"
                          pattern (src/ppx.ml[107,3400+20]..src/ppx.ml[107,3400+21])
                            Tpat_var "b/1463"
                          pattern (src/ppx.ml[107,3400+22]..src/ppx.ml[107,3400+23])
                            Tpat_var "c/1464"
                        ]
                        None
                    expression (src/ppx.ml[109,3490+4]..src/ppx.ml[109,3490+60])
                      Texp_apply
                      expression (src/ppx.ml[109,3490+5]..src/ppx.ml[109,3490+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3490+19]..src/ppx.ml[109,3490+59])
                            Texp_apply
                            expression (src/ppx.ml[109,3490+20]..src/ppx.ml[109,3490+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3490+35]..src/ppx.ml[109,3490+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[109,3490+37]..src/ppx.ml[109,3490+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[110,3551+4]..src/ppx.ml[110,3551+19])
                      Tpat_value
                      pattern (src/ppx.ml[110,3551+4]..src/ppx.ml[110,3551+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[110,3551+15]..src/ppx.ml[110,3551+16])
                            Tpat_var "a/1465"
                          pattern (src/ppx.ml[110,3551+17]..src/ppx.ml[110,3551+18])
                            Tpat_var "b/1466"
                        ]
                        None
                    expression (src/ppx.ml[112,3615+4]..src/ppx.ml[112,3615+60])
                      Texp_apply
                      expression (src/ppx.ml[112,3615+5]..src/ppx.ml[112,3615+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[112,3615+19]..src/ppx.ml[112,3615+59])
                            Texp_apply
                            expression (src/ppx.ml[112,3615+20]..src/ppx.ml[112,3615+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[112,3615+35]..src/ppx.ml[112,3615+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[112,3615+37]..src/ppx.ml[112,3615+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[113,3676+4]..src/ppx.ml[113,3676+18])
                      Tpat_value
                      pattern (src/ppx.ml[113,3676+4]..src/ppx.ml[113,3676+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[113,3676+17]..src/ppx.ml[113,3676+18])
                            Tpat_var "a/1467"
                        ]
                        None
                    expression (src/ppx.ml[115,3724+4]..src/ppx.ml[115,3724+62])
                      Texp_apply
                      expression (src/ppx.ml[115,3724+5]..src/ppx.ml[115,3724+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[115,3724+19]..src/ppx.ml[115,3724+61])
                            Texp_apply
                            expression (src/ppx.ml[115,3724+20]..src/ppx.ml[115,3724+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[115,3724+35]..src/ppx.ml[115,3724+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[115,3724+36]..src/ppx.ml[115,3724+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[115,3724+37]..src/ppx.ml[115,3724+55]),None)
                                    expression (src/ppx.ml[115,3724+57]..src/ppx.ml[115,3724+58])
                                      Texp_ident "a/1467"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[118,3932+4]..src/ppx.ml[118,3932+20])
                      Tpat_value
                      pattern (src/ppx.ml[118,3932+4]..src/ppx.ml[118,3932+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[118,3932+19]..src/ppx.ml[118,3932+20])
                            Tpat_var "a/1468"
                        ]
                        None
                    expression (src/ppx.ml[119,3980+4]..src/ppx.ml[119,3980+65])
                      Texp_apply
                      expression (src/ppx.ml[119,3980+5]..src/ppx.ml[119,3980+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3980+19]..src/ppx.ml[119,3980+64])
                            Texp_apply
                            expression (src/ppx.ml[119,3980+20]..src/ppx.ml[119,3980+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3980+35]..src/ppx.ml[119,3980+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[119,3980+36]..src/ppx.ml[119,3980+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[119,3980+37]..src/ppx.ml[119,3980+58]),None)
                                    expression (src/ppx.ml[119,3980+60]..src/ppx.ml[119,3980+61])
                                      Texp_ident "a/1468"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[121,4050+2]..src/ppx.ml[121,4050+26])
          Tpat_var "process_record_kind_list/1439"
        expression (src/ppx.ml[121,4050+26]..src/ppx.ml[127,4187+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[121,4050+26]..src/ppx.ml[121,4050+29])
                Tpat_var "x/1791"
              expression (src/ppx.ml[122,4082+2]..src/ppx.ml[127,4187+6])
                Texp_match
                expression (src/ppx.ml[122,4082+8]..src/ppx.ml[122,4082+9])
                  Texp_ident "x/1791"
                [
                  <case>
                    pattern (src/ppx.ml[123,4097+4]..src/ppx.ml[123,4097+6])
                      Tpat_value
                      pattern (src/ppx.ml[123,4097+4]..src/ppx.ml[123,4097+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[123,4097+10]..src/ppx.ml[123,4097+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[124,4110+4]..src/ppx.ml[124,4110+10])
                      Tpat_value
                      pattern (src/ppx.ml[124,4110+4]..src/ppx.ml[124,4110+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[124,4110+4]..src/ppx.ml[124,4110+5])
                            Tpat_var "h/1792"
                          pattern (src/ppx.ml[124,4110+9]..src/ppx.ml[124,4110+10])
                            Tpat_var "t/1793"
                        ]
                        None
                    expression (src/ppx.ml[125,4124+4]..src/ppx.ml[127,4187+6])
                      Texp_sequence
                      expression (src/ppx.ml[125,4124+4]..src/ppx.ml[125,4124+27])
                        Texp_apply
                        expression (src/ppx.ml[125,4124+5]..src/ppx.ml[125,4124+24])
                          Texp_ident "process_record_kind/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[125,4124+25]..src/ppx.ml[125,4124+26])
                              Texp_ident "h/1792"
                        ]
                      expression (src/ppx.ml[126,4153+4]..src/ppx.ml[127,4187+6])
                        Texp_sequence
                        expression (src/ppx.ml[126,4153+4]..src/ppx.ml[126,4153+32])
                          Texp_apply
                          expression (src/ppx.ml[126,4153+5]..src/ppx.ml[126,4153+29])
                            Texp_ident "process_record_kind_list/1439"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[126,4153+30]..src/ppx.ml[126,4153+31])
                                Texp_ident "t/1793"
                          ]
                        expression (src/ppx.ml[127,4187+4]..src/ppx.ml[127,4187+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[129,4198+0]..src/ppx.ml[129,4198+17])
          Tpat_var "process_core_type/1440"
        expression (src/ppx.ml[129,4198+17]..src/ppx.ml[138,4446+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[129,4198+17]..src/ppx.ml[129,4198+20])
                Tpat_var "x/1794"
              expression (src/ppx.ml[130,4221+2]..src/ppx.ml[138,4446+70])
                Texp_match
                expression (src/ppx.ml[130,4221+8]..src/ppx.ml[130,4221+9])
                  Texp_ident "x/1794"
                [
                  <case>
                    pattern (src/ppx.ml[131,4237+4]..src/ppx.ml[136,4398+5])
                      Tpat_value
                      pattern (src/ppx.ml[131,4237+4]..src/ppx.ml[136,4398+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[132,4243+6]..src/ppx.ml[132,4243+15])
                              Tpat_var "ptyp_desc/1795"
                          "ptyp_loc"
                            pattern (src/ppx.ml[133,4282+5]..src/ppx.ml[133,4282+13])
                              Tpat_var "ptyp_loc/1796"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[134,4315+5]..src/ppx.ml[134,4315+19])
                              Tpat_var "ptyp_loc_stack/1797"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[135,4358+5]..src/ppx.ml[135,4358+20])
                              Tpat_var "ptyp_attributes/1798"
                        ]
                    expression (src/ppx.ml[137,4406+4]..src/ppx.ml[138,4446+70])
                      Texp_sequence
                      expression (src/ppx.ml[137,4406+4]..src/ppx.ml[137,4406+38])
                        Texp_apply
                        expression (src/ppx.ml[137,4406+5]..src/ppx.ml[137,4406+27])
                          Texp_ident "process_core_type_desc/1438"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[137,4406+28]..src/ppx.ml[137,4406+37])
                              Texp_ident "ptyp_desc/1795"
                        ]
                      expression (src/ppx.ml[138,4446+4]..src/ppx.ml[138,4446+70])
                        Texp_apply
                        expression (src/ppx.ml[138,4446+5]..src/ppx.ml[138,4446+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[138,4446+19]..src/ppx.ml[138,4446+69])
                              Texp_apply
                              expression (src/ppx.ml[138,4446+20]..src/ppx.ml[138,4446+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[138,4446+35]..src/ppx.ml[138,4446+68])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[138,4446+36]..src/ppx.ml[138,4446+54])
                                        Texp_constant Const_string("DEBUG:ptyp_desc:",(src/ppx.ml[138,4446+37]..src/ppx.ml[138,4446+53]),None)
                                      expression (src/ppx.ml[138,4446+58]..src/ppx.ml[138,4446+67])
                                        Texp_ident "ptyp_desc/1795"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[139,4517+4]..src/ppx.ml[139,4517+26])
          Tpat_var "process_core_type_list/1441"
        expression (src/ppx.ml[139,4517+26]..src/ppx.ml[144,4633+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[139,4517+27]..src/ppx.ml[139,4517+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[139,4517+29]..src/ppx.ml[139,4517+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[139,4517+29]..src/ppx.ml[139,4517+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1799"
                pattern (src/ppx.ml[139,4517+27]..src/ppx.ml[139,4517+28])
                  Tpat_any
              expression (src/ppx.ml[140,4564+2]..src/ppx.ml[144,4633+29])
                Texp_match
                expression (src/ppx.ml[140,4564+8]..src/ppx.ml[140,4564+9])
                  Texp_ident "x/1799"
                [
                  <case>
                    pattern (src/ppx.ml[141,4579+4]..src/ppx.ml[141,4579+6])
                      Tpat_value
                      pattern (src/ppx.ml[141,4579+4]..src/ppx.ml[141,4579+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[141,4579+10]..src/ppx.ml[141,4579+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[142,4592+4]..src/ppx.ml[142,4592+10])
                      Tpat_value
                      pattern (src/ppx.ml[142,4592+4]..src/ppx.ml[142,4592+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[142,4592+4]..src/ppx.ml[142,4592+5])
                            Tpat_var "h/1800"
                          pattern (src/ppx.ml[142,4592+9]..src/ppx.ml[142,4592+10])
                            Tpat_var "t/1801"
                        ]
                        None
                    expression (src/ppx.ml[143,4606+4]..src/ppx.ml[144,4633+29])
                      Texp_sequence
                      expression (src/ppx.ml[143,4606+4]..src/ppx.ml[143,4606+25])
                        Texp_apply
                        expression (src/ppx.ml[143,4606+4]..src/ppx.ml[143,4606+21])
                          Texp_ident "process_core_type/1440"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[143,4606+22]..src/ppx.ml[143,4606+25])
                              Texp_ident "h/1800"
                        ]
                      expression (src/ppx.ml[144,4633+4]..src/ppx.ml[144,4633+29])
                        Texp_apply
                        expression (src/ppx.ml[144,4633+4]..src/ppx.ml[144,4633+26])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[144,4633+26]..src/ppx.ml[144,4633+29])
                              Texp_ident "t/1801"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[151,4677+0]..src/ppx.ml[158,4876+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[151,4677+4]..src/ppx.ml[151,4677+31])
          Tpat_var "print_constructor_arguments/1802"
        expression (src/ppx.ml[151,4677+31]..src/ppx.ml[158,4876+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[151,4677+31]..src/ppx.ml[151,4677+34])
                Tpat_var "x/1804"
              expression (src/ppx.ml[152,4714+2]..src/ppx.ml[158,4876+65])
                Texp_match
                expression (src/ppx.ml[152,4714+8]..src/ppx.ml[152,4714+9])
                  Texp_ident "x/1804"
                [
                  <case>
                    pattern (src/ppx.ml[153,4729+4]..src/ppx.ml[153,4729+17])
                      Tpat_value
                      pattern (src/ppx.ml[153,4729+4]..src/ppx.ml[153,4729+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[153,4729+16]..src/ppx.ml[153,4729+17])
                            Tpat_var "a/1805"
                        ]
                        None
                    expression (src/ppx.ml[154,4750+4]..src/ppx.ml[155,4782+64])
                      Texp_sequence
                      expression (src/ppx.ml[154,4750+4]..src/ppx.ml[154,4750+30])
                        Texp_apply
                        expression (src/ppx.ml[154,4750+5]..src/ppx.ml[154,4750+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[154,4750+28]..src/ppx.ml[154,4750+29])
                              Texp_ident "a/1805"
                        ]
                      expression (src/ppx.ml[155,4782+4]..src/ppx.ml[155,4782+64])
                        Texp_apply
                        expression (src/ppx.ml[155,4782+5]..src/ppx.ml[155,4782+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[155,4782+19]..src/ppx.ml[155,4782+63])
                              Texp_apply
                              expression (src/ppx.ml[155,4782+20]..src/ppx.ml[155,4782+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[155,4782+35]..src/ppx.ml[155,4782+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[155,4782+36]..src/ppx.ml[155,4782+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[155,4782+37]..src/ppx.ml[155,4782+55]),None)
                                      expression (src/ppx.ml[155,4782+60]..src/ppx.ml[155,4782+61])
                                        Texp_ident "a/1805"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[157,4854+4]..src/ppx.ml[157,4854+18])
                      Tpat_value
                      pattern (src/ppx.ml[157,4854+4]..src/ppx.ml[157,4854+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[157,4854+17]..src/ppx.ml[157,4854+18])
                            Tpat_var "a/1806"
                        ]
                        None
                    expression (src/ppx.ml[158,4876+4]..src/ppx.ml[158,4876+65])
                      Texp_apply
                      expression (src/ppx.ml[158,4876+5]..src/ppx.ml[158,4876+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[158,4876+19]..src/ppx.ml[158,4876+64])
                            Texp_apply
                            expression (src/ppx.ml[158,4876+20]..src/ppx.ml[158,4876+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[158,4876+35]..src/ppx.ml[158,4876+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[158,4876+36]..src/ppx.ml[158,4876+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[158,4876+37]..src/ppx.ml[158,4876+56]),None)
                                    expression (src/ppx.ml[158,4876+61]..src/ppx.ml[158,4876+62])
                                      Texp_ident "a/1806"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[160,4943+0]..src/ppx.ml[192,5922+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[160,4943+8]..src/ppx.ml[160,4943+58])
          Tpat_var "process_Ptype_variant_constructor_declaration_list/1807"
        expression (src/ppx.ml[160,4943+58]..src/ppx.ml[192,5922+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[160,4943+58]..src/ppx.ml[160,4943+61])
                Tpat_var "x/1808"
              expression (src/ppx.ml[161,5007+2]..src/ppx.ml[192,5922+8])
                Texp_match
                expression (src/ppx.ml[161,5007+8]..src/ppx.ml[161,5007+9])
                  Texp_ident "x/1808"
                [
                  <case>
                    pattern (src/ppx.ml[162,5022+4]..src/ppx.ml[162,5022+6])
                      Tpat_value
                      pattern (src/ppx.ml[162,5022+4]..src/ppx.ml[162,5022+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[162,5022+10]..src/ppx.ml[162,5022+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[163,5035+4]..src/ppx.ml[163,5035+10])
                      Tpat_value
                      pattern (src/ppx.ml[163,5035+4]..src/ppx.ml[163,5035+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[163,5035+4]..src/ppx.ml[163,5035+5])
                            Tpat_var "h/1809"
                          pattern (src/ppx.ml[163,5035+9]..src/ppx.ml[163,5035+10])
                            Tpat_var "t/1810"
                        ]
                        None
                    expression (src/ppx.ml[165,5115+4]..src/ppx.ml[192,5922+8])
                      Texp_match
                      expression (src/ppx.ml[165,5115+10]..src/ppx.ml[165,5115+11])
                        Texp_ident "h/1809"
                      [
                        <case>
                          pattern (src/ppx.ml[166,5132+5]..src/ppx.ml[173,5370+5])
                            Tpat_value
                            pattern (src/ppx.ml[166,5132+5]..src/ppx.ml[173,5370+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[167,5139+6]..src/ppx.ml[167,5139+14])
                                    Tpat_var "pcd_name/1811"
                                "pcd_vars"
                                  pattern (src/ppx.ml[168,5173+6]..src/ppx.ml[168,5173+14])
                                    Tpat_var "pcd_vars/1812"
                                "pcd_args"
                                  pattern (src/ppx.ml[169,5212+6]..src/ppx.ml[169,5212+14])
                                    Tpat_var "pcd_args/1813"
                                "pcd_res"
                                  pattern (src/ppx.ml[170,5257+6]..src/ppx.ml[170,5257+13])
                                    Tpat_var "pcd_res/1814"
                                "pcd_loc"
                                  pattern (src/ppx.ml[171,5296+6]..src/ppx.ml[171,5296+13])
                                    Tpat_var "pcd_loc/1815"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[172,5329+6]..src/ppx.ml[172,5329+20])
                                    Tpat_var "pcd_attributes/1816"
                              ]
                          expression (src/ppx.ml[176,5452+6]..src/ppx.ml[192,5922+8])
                            Texp_sequence
                            expression (src/ppx.ml[176,5452+6]..src/ppx.ml[176,5452+43])
                              Texp_apply
                              expression (src/ppx.ml[176,5452+6]..src/ppx.ml[176,5452+33])
                                Texp_ident "print_constructor_arguments/1802"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[176,5452+33]..src/ppx.ml[176,5452+43])
                                    Texp_ident "pcd_args/1813"
                              ]
                            expression (src/ppx.ml[177,5497+6]..src/ppx.ml[192,5922+8])
                              Texp_sequence
                              expression (src/ppx.ml[177,5497+6]..src/ppx.ml[190,5842+16])
                                Texp_apply
                                expression (src/ppx.ml[177,5497+7]..src/ppx.ml[177,5497+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[177,5497+21]..src/ppx.ml[190,5842+15])
                                      Texp_apply
                                      expression (src/ppx.ml[177,5497+22]..src/ppx.ml[177,5497+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[177,5497+37]..src/ppx.ml[190,5842+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[178,5536+11]..src/ppx.ml[178,5536+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[178,5536+12]..src/ppx.ml[178,5536+36]),None)
                                              expression (src/ppx.ml[179,5575+15]..src/ppx.ml[179,5575+23])
                                                Texp_ident "pcd_name/1811"
                                              expression (src/ppx.ml[180,5600+15]..src/ppx.ml[180,5600+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[180,5600+16]..src/ppx.ml[180,5600+20]),None)
                                              expression (src/ppx.ml[181,5623+15]..src/ppx.ml[181,5623+23])
                                                Texp_ident "pcd_vars/1812"
                                              expression (src/ppx.ml[182,5648+15]..src/ppx.ml[182,5648+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[182,5648+16]..src/ppx.ml[182,5648+20]),None)
                                              expression (src/ppx.ml[183,5671+15]..src/ppx.ml[183,5671+23])
                                                Texp_ident "pcd_args/1813"
                                              expression (src/ppx.ml[184,5696+15]..src/ppx.ml[184,5696+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[184,5696+16]..src/ppx.ml[184,5696+19]),None)
                                              expression (src/ppx.ml[185,5718+15]..src/ppx.ml[185,5718+22])
                                                Texp_ident "pcd_res/1814"
                                              expression (src/ppx.ml[186,5742+15]..src/ppx.ml[186,5742+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[186,5742+16]..src/ppx.ml[186,5742+19]),None)
                                              expression (src/ppx.ml[187,5764+15]..src/ppx.ml[187,5764+22])
                                                Texp_ident "pcd_loc/1815"
                                              expression (src/ppx.ml[188,5788+15]..src/ppx.ml[188,5788+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[188,5788+16]..src/ppx.ml[188,5788+21]),None)
                                              expression (src/ppx.ml[189,5812+15]..src/ppx.ml[189,5812+29])
                                                Texp_ident "pcd_attributes/1816"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[191,5860+6]..src/ppx.ml[192,5922+8])
                                Texp_sequence
                                expression (src/ppx.ml[191,5860+6]..src/ppx.ml[191,5860+60])
                                  Texp_apply
                                  expression (src/ppx.ml[191,5860+7]..src/ppx.ml[191,5860+57])
                                    Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[191,5860+58]..src/ppx.ml[191,5860+59])
                                        Texp_ident "t/1810"
                                  ]
                                expression (src/ppx.ml[192,5922+6]..src/ppx.ml[192,5922+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[194,5934+0]..src/ppx.ml[205,6332+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[194,5934+4]..src/ppx.ml[194,5934+16])
          Tpat_var "process_kind/1817"
        expression (src/ppx.ml[194,5934+16]..src/ppx.ml[205,6332+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[194,5934+16]..src/ppx.ml[194,5934+19])
                Tpat_var "x/1819"
              expression (src/ppx.ml[195,5956+2]..src/ppx.ml[205,6332+77])
                Texp_match
                expression (src/ppx.ml[195,5956+8]..src/ppx.ml[195,5956+9])
                  Texp_ident "x/1819"
                [
                  <case>
                    pattern (src/ppx.ml[197,5993+4]..src/ppx.ml[197,5993+18])
                      Tpat_value
                      pattern (src/ppx.ml[197,5993+4]..src/ppx.ml[197,5993+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[197,5993+23]..src/ppx.ml[197,5993+81])
                      Texp_apply
                      expression (src/ppx.ml[197,5993+24]..src/ppx.ml[197,5993+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[197,5993+38]..src/ppx.ml[197,5993+80])
                            Texp_apply
                            expression (src/ppx.ml[197,5993+39]..src/ppx.ml[197,5993+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[197,5993+54]..src/ppx.ml[197,5993+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[197,5993+56]..src/ppx.ml[197,5993+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[198,6075+4]..src/ppx.ml[198,6075+19])
                      Tpat_value
                      pattern (src/ppx.ml[198,6075+4]..src/ppx.ml[198,6075+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[198,6075+18]..src/ppx.ml[198,6075+19])
                            Tpat_var "a/1820"
                        ]
                        None
                    expression (src/ppx.ml[199,6098+4]..src/ppx.ml[200,6158+65])
                      Texp_sequence
                      expression (src/ppx.ml[199,6098+4]..src/ppx.ml[199,6098+58])
                        Texp_apply
                        expression (src/ppx.ml[199,6098+5]..src/ppx.ml[199,6098+55])
                          Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[199,6098+56]..src/ppx.ml[199,6098+57])
                              Texp_ident "a/1820"
                        ]
                      expression (src/ppx.ml[200,6158+4]..src/ppx.ml[200,6158+65])
                        Texp_apply
                        expression (src/ppx.ml[200,6158+5]..src/ppx.ml[200,6158+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[200,6158+19]..src/ppx.ml[200,6158+64])
                              Texp_apply
                              expression (src/ppx.ml[200,6158+20]..src/ppx.ml[200,6158+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[200,6158+35]..src/ppx.ml[200,6158+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[200,6158+36]..src/ppx.ml[200,6158+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[200,6158+37]..src/ppx.ml[200,6158+57]),None)
                                      expression (src/ppx.ml[200,6158+61]..src/ppx.ml[200,6158+62])
                                        Texp_ident "a/1820"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[203,6271+5]..src/ppx.ml[203,6271+19])
                      Tpat_value
                      pattern (src/ppx.ml[203,6271+5]..src/ppx.ml[203,6271+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[203,6271+18]..src/ppx.ml[203,6271+19])
                            Tpat_var "a/1821"
                        ]
                        None
                    expression (src/ppx.ml[204,6299+5]..src/ppx.ml[204,6299+32])
                      Texp_apply
                      expression (src/ppx.ml[204,6299+5]..src/ppx.ml[204,6299+29])
                        Texp_ident "process_record_kind_list/1439"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[204,6299+29]..src/ppx.ml[204,6299+32])
                            Texp_ident "a/1821"
                      ]
                  <case>
                    pattern (src/ppx.ml[205,6332+5]..src/ppx.ml[205,6332+15])
                      Tpat_value
                      pattern (src/ppx.ml[205,6332+5]..src/ppx.ml[205,6332+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[205,6332+19]..src/ppx.ml[205,6332+77])
                      Texp_apply
                      expression (src/ppx.ml[205,6332+20]..src/ppx.ml[205,6332+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[205,6332+34]..src/ppx.ml[205,6332+76])
                            Texp_apply
                            expression (src/ppx.ml[205,6332+35]..src/ppx.ml[205,6332+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[205,6332+50]..src/ppx.ml[205,6332+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[205,6332+52]..src/ppx.ml[205,6332+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[207,6411+0]..src/ppx.ml[228,7417+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[207,6411+4]..src/ppx.ml[207,6411+19])
          Tpat_var "print_type_decl/1822"
        expression (src/ppx.ml[207,6411+19]..src/ppx.ml[228,7417+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[207,6411+19]..src/ppx.ml[207,6411+22])
                Tpat_var "x/1824"
              expression (src/ppx.ml[208,6436+2]..src/ppx.ml[228,7417+38])
                Texp_match
                expression (src/ppx.ml[208,6436+8]..src/ppx.ml[208,6436+9])
                  Texp_ident "x/1824"
                [
                  <case>
                    pattern (src/ppx.ml[209,6451+4]..src/ppx.ml[218,6832+5])
                      Tpat_value
                      pattern (src/ppx.ml[209,6451+4]..src/ppx.ml[218,6832+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[210,6457+6]..src/ppx.ml[210,6457+16])
                              Tpat_var "ptype_name/1825"
                          "ptype_params"
                            pattern (src/ppx.ml[211,6494+6]..src/ppx.ml[211,6494+18])
                              Tpat_var "ptype_params/1826"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[212,6566+6]..src/ppx.ml[212,6566+17])
                              Tpat_var "ptype_cstrs/1827"
                          "ptype_kind"
                            pattern (src/ppx.ml[213,6635+6]..src/ppx.ml[213,6635+16])
                              Tpat_var "ptype_kind/1828"
                          "ptype_private"
                            pattern (src/ppx.ml[214,6672+6]..src/ppx.ml[214,6672+19])
                              Tpat_var "ptype_private/1829"
                          "ptype_manifest"
                            pattern (src/ppx.ml[215,6713+6]..src/ppx.ml[215,6713+20])
                              Tpat_var "ptype_manifest/1830"
                          "ptype_attributes"
                            pattern (src/ppx.ml[216,6760+6]..src/ppx.ml[216,6760+22])
                              Tpat_var "ptype_attributes/1831"
                          "ptype_loc"
                            pattern (src/ppx.ml[217,6801+6]..src/ppx.ml[217,6801+15])
                              Tpat_var "ptype_loc/1832"
                        ]
                    expression (src/ppx.ml[219,6841+4]..src/ppx.ml[228,7417+38])
                      Texp_sequence
                      expression (src/ppx.ml[219,6841+4]..src/ppx.ml[219,6841+69])
                        Texp_apply
                        expression (src/ppx.ml[219,6841+5]..src/ppx.ml[219,6841+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[219,6841+19]..src/ppx.ml[219,6841+68])
                              Texp_apply
                              expression (src/ppx.ml[219,6841+20]..src/ppx.ml[219,6841+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[219,6841+35]..src/ppx.ml[219,6841+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[219,6841+36]..src/ppx.ml[219,6841+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[219,6841+37]..src/ppx.ml[219,6841+53]),None)
                                      expression (src/ppx.ml[219,6841+56]..src/ppx.ml[219,6841+66])
                                        Texp_ident "ptype_name/1825"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[220,6912+4]..src/ppx.ml[228,7417+38])
                        Texp_sequence
                        expression (src/ppx.ml[220,6912+4]..src/ppx.ml[220,6912+72])
                          Texp_apply
                          expression (src/ppx.ml[220,6912+5]..src/ppx.ml[220,6912+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[220,6912+19]..src/ppx.ml[220,6912+71])
                                Texp_apply
                                expression (src/ppx.ml[220,6912+20]..src/ppx.ml[220,6912+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[220,6912+35]..src/ppx.ml[220,6912+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[220,6912+36]..src/ppx.ml[220,6912+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[220,6912+37]..src/ppx.ml[220,6912+54]),None)
                                        expression (src/ppx.ml[220,6912+57]..src/ppx.ml[220,6912+69])
                                          Texp_ident "ptype_params/1826"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[221,6986+4]..src/ppx.ml[228,7417+38])
                          Texp_sequence
                          expression (src/ppx.ml[221,6986+4]..src/ppx.ml[221,6986+66])
                            Texp_apply
                            expression (src/ppx.ml[221,6986+5]..src/ppx.ml[221,6986+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[221,6986+19]..src/ppx.ml[221,6986+65])
                                  Texp_apply
                                  expression (src/ppx.ml[221,6986+20]..src/ppx.ml[221,6986+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[221,6986+35]..src/ppx.ml[221,6986+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[221,6986+36]..src/ppx.ml[221,6986+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[221,6986+37]..src/ppx.ml[221,6986+49]),None)
                                          expression (src/ppx.ml[221,6986+52]..src/ppx.ml[221,6986+63])
                                            Texp_ident "ptype_cstrs/1827"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[222,7054+4]..src/ppx.ml[228,7417+38])
                            Texp_sequence
                            expression (src/ppx.ml[222,7054+4]..src/ppx.ml[222,7054+63])
                              Texp_apply
                              expression (src/ppx.ml[222,7054+5]..src/ppx.ml[222,7054+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[222,7054+19]..src/ppx.ml[222,7054+62])
                                    Texp_apply
                                    expression (src/ppx.ml[222,7054+20]..src/ppx.ml[222,7054+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[222,7054+35]..src/ppx.ml[222,7054+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[222,7054+36]..src/ppx.ml[222,7054+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[222,7054+37]..src/ppx.ml[222,7054+48]),None)
                                            expression (src/ppx.ml[222,7054+50]..src/ppx.ml[222,7054+60])
                                              Texp_ident "ptype_kind/1828"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[223,7119+4]..src/ppx.ml[228,7417+38])
                              Texp_sequence
                              expression (src/ppx.ml[223,7119+4]..src/ppx.ml[223,7119+29])
                                Texp_apply
                                expression (src/ppx.ml[223,7119+5]..src/ppx.ml[223,7119+17])
                                  Texp_ident "process_kind/1817"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[223,7119+18]..src/ppx.ml[223,7119+28])
                                      Texp_ident "ptype_kind/1828"
                                ]
                              expression (src/ppx.ml[224,7150+4]..src/ppx.ml[228,7417+38])
                                Texp_apply
                                expression (src/ppx.ml[224,7150+5]..src/ppx.ml[224,7150+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[224,7150+19]..src/ppx.ml[228,7417+37])
                                      Texp_apply
                                      expression (src/ppx.ml[224,7150+20]..src/ppx.ml[224,7150+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[224,7150+35]..src/ppx.ml[228,7417+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[224,7150+36]..src/ppx.ml[224,7150+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[224,7150+37]..src/ppx.ml[224,7150+51]),None)
                                              expression (src/ppx.ml[224,7150+55]..src/ppx.ml[224,7150+68])
                                                Texp_ident "ptype_private/1829"
                                              expression (src/ppx.ml[225,7220+36]..src/ppx.ml[225,7220+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[225,7220+37]..src/ppx.ml[225,7220+51]),None)
                                              expression (src/ppx.ml[225,7220+54]..src/ppx.ml[225,7220+68])
                                                Texp_ident "ptype_manifest/1830"
                                              expression (src/ppx.ml[226,7290+36]..src/ppx.ml[226,7290+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[226,7290+37]..src/ppx.ml[226,7290+47]),None)
                                              expression (src/ppx.ml[226,7290+50]..src/ppx.ml[226,7290+66])
                                                Texp_ident "ptype_attributes/1831"
                                              expression (src/ppx.ml[227,7358+36]..src/ppx.ml[227,7358+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[227,7358+37]..src/ppx.ml[227,7358+46]),None)
                                              expression (src/ppx.ml[227,7358+49]..src/ppx.ml[227,7358+58])
                                                Texp_ident "ptype_loc/1832"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[230,7461+0]..src/ppx.ml[236,7596+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[230,7461+8]..src/ppx.ml[230,7461+30])
          Tpat_var "process_type_decl_list/1833"
        expression (src/ppx.ml[230,7461+30]..src/ppx.ml[236,7596+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[230,7461+30]..src/ppx.ml[230,7461+33])
                Tpat_var "x/1834"
              expression (src/ppx.ml[231,7497+2]..src/ppx.ml[236,7596+6])
                Texp_match
                expression (src/ppx.ml[231,7497+8]..src/ppx.ml[231,7497+9])
                  Texp_ident "x/1834"
                [
                  <case>
                    pattern (src/ppx.ml[232,7512+4]..src/ppx.ml[232,7512+6])
                      Tpat_value
                      pattern (src/ppx.ml[232,7512+4]..src/ppx.ml[232,7512+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[232,7512+10]..src/ppx.ml[232,7512+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[233,7525+4]..src/ppx.ml[233,7525+10])
                      Tpat_value
                      pattern (src/ppx.ml[233,7525+4]..src/ppx.ml[233,7525+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[233,7525+4]..src/ppx.ml[233,7525+5])
                            Tpat_var "h/1835"
                          pattern (src/ppx.ml[233,7525+9]..src/ppx.ml[233,7525+10])
                            Tpat_var "t/1836"
                        ]
                        None
                    expression (src/ppx.ml[234,7539+4]..src/ppx.ml[236,7596+6])
                      Texp_sequence
                      expression (src/ppx.ml[234,7539+4]..src/ppx.ml[234,7539+23])
                        Texp_apply
                        expression (src/ppx.ml[234,7539+5]..src/ppx.ml[234,7539+20])
                          Texp_ident "print_type_decl/1822"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[234,7539+21]..src/ppx.ml[234,7539+22])
                              Texp_ident "h/1835"
                        ]
                      expression (src/ppx.ml[235,7564+4]..src/ppx.ml[236,7596+6])
                        Texp_sequence
                        expression (src/ppx.ml[235,7564+4]..src/ppx.ml[235,7564+30])
                          Texp_apply
                          expression (src/ppx.ml[235,7564+5]..src/ppx.ml[235,7564+27])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[235,7564+28]..src/ppx.ml[235,7564+29])
                                Texp_ident "t/1836"
                          ]
                        expression (src/ppx.ml[236,7596+4]..src/ppx.ml[236,7596+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[238,7608+0]..src/ppx.ml[264,9572+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[238,7608+4]..src/ppx.ml[238,7608+13])
          Tpat_var "printdesc/1837"
        expression (src/ppx.ml[238,7608+13]..src/ppx.ml[264,9572+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[238,7608+14]..src/ppx.ml[238,7608+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[238,7608+17]..src/ppx.ml[238,7608+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1839"
                pattern (src/ppx.ml[238,7608+14]..src/ppx.ml[238,7608+15])
                  Tpat_any
              expression (src/ppx.ml[239,7654+2]..src/ppx.ml[264,9572+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[238,7608+39]..src/ppx.ml[238,7608+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[239,7654+2]..src/ppx.ml[239,7654+68])
                  Texp_apply
                  expression (src/ppx.ml[239,7654+3]..src/ppx.ml[239,7654+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[239,7654+17]..src/ppx.ml[239,7654+67])
                        Texp_apply
                        expression (src/ppx.ml[239,7654+18]..src/ppx.ml[239,7654+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[239,7654+33]..src/ppx.ml[239,7654+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[239,7654+34]..src/ppx.ml[239,7654+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[239,7654+35]..src/ppx.ml[239,7654+61]),None)
                                expression (src/ppx.ml[239,7654+64]..src/ppx.ml[239,7654+65])
                                  Texp_ident "x/1839"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[240,7724+2]..src/ppx.ml[264,9572+128])
                  Texp_match
                  expression (src/ppx.ml[240,7724+8]..src/ppx.ml[240,7724+9])
                    Texp_ident "x/1839"
                  [
                    <case>
                      pattern (src/ppx.ml[241,7739+4]..src/ppx.ml[241,7739+37])
                        Tpat_value
                        pattern (src/ppx.ml[241,7739+4]..src/ppx.ml[241,7739+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[241,7739+15]..src/ppx.ml[241,7739+25])
                              Tpat_var "expression/1840"
                            pattern (src/ppx.ml[241,7739+26]..src/ppx.ml[241,7739+36])
                              Tpat_var "attributes/1841"
                          ]
                          None
                      expression (src/ppx.ml[241,7739+41]..src/ppx.ml[241,7739+117])
                        Texp_apply
                        expression (src/ppx.ml[241,7739+42]..src/ppx.ml[241,7739+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[241,7739+56]..src/ppx.ml[241,7739+116])
                              Texp_apply
                              expression (src/ppx.ml[241,7739+57]..src/ppx.ml[241,7739+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[241,7739+72]..src/ppx.ml[241,7739+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[241,7739+73]..src/ppx.ml[241,7739+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[241,7739+74]..src/ppx.ml[241,7739+90]),None)
                                      expression (src/ppx.ml[241,7739+93]..src/ppx.ml[241,7739+103])
                                        Texp_ident "expression/1840"
                                      expression (src/ppx.ml[241,7739+104]..src/ppx.ml[241,7739+114])
                                        Texp_ident "attributes/1841"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[243,7877+4]..src/ppx.ml[243,7877+45])
                        Tpat_value
                        pattern (src/ppx.ml[243,7877+4]..src/ppx.ml[243,7877+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[243,7877+16]..src/ppx.ml[243,7877+24])
                              Tpat_var "rec_flag/1842"
                            pattern (src/ppx.ml[243,7877+26]..src/ppx.ml[243,7877+44])
                              Tpat_var "value_binding_list/1843"
                          ]
                          None
                      expression (src/ppx.ml[243,7877+48]..src/ppx.ml[244,8011+48])
                        Texp_sequence
                        expression (src/ppx.ml[243,7877+48]..src/ppx.ml[243,7877+132])
                          Texp_apply
                          expression (src/ppx.ml[243,7877+49]..src/ppx.ml[243,7877+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[243,7877+63]..src/ppx.ml[243,7877+131])
                                Texp_apply
                                expression (src/ppx.ml[243,7877+64]..src/ppx.ml[243,7877+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[243,7877+79]..src/ppx.ml[243,7877+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[243,7877+80]..src/ppx.ml[243,7877+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[243,7877+81]..src/ppx.ml[243,7877+98]),None)
                                        expression (src/ppx.ml[243,7877+101]..src/ppx.ml[243,7877+109])
                                          Texp_ident "rec_flag/1842"
                                        expression (src/ppx.ml[243,7877+111]..src/ppx.ml[243,7877+129])
                                          Texp_ident "value_binding_list/1843"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[244,8011+4]..src/ppx.ml[244,8011+48])
                          Texp_apply
                          expression (src/ppx.ml[244,8011+4]..src/ppx.ml[244,8011+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[244,8011+28]..src/ppx.ml[244,8011+48])
                                Texp_ident "value_binding_list/1843"
                          ]
                    <case>
                      pattern (src/ppx.ml[245,8060+4]..src/ppx.ml[245,8060+36])
                        Tpat_value
                        pattern (src/ppx.ml[245,8060+4]..src/ppx.ml[245,8060+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[245,8060+19]..src/ppx.ml[245,8060+36])
                              Tpat_var "value_description/1844"
                          ]
                          None
                      expression (src/ppx.ml[245,8060+39]..src/ppx.ml[245,8060+116])
                        Texp_apply
                        expression (src/ppx.ml[245,8060+40]..src/ppx.ml[245,8060+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[245,8060+54]..src/ppx.ml[245,8060+115])
                              Texp_apply
                              expression (src/ppx.ml[245,8060+55]..src/ppx.ml[245,8060+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[245,8060+70]..src/ppx.ml[245,8060+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[245,8060+71]..src/ppx.ml[245,8060+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[245,8060+72]..src/ppx.ml[245,8060+93]),None)
                                      expression (src/ppx.ml[245,8060+96]..src/ppx.ml[245,8060+113])
                                        Texp_ident "value_description/1844"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[247,8178+4]..src/ppx.ml[247,8178+47])
                        Tpat_value
                        pattern (src/ppx.ml[247,8178+4]..src/ppx.ml[247,8178+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[247,8178+15]..src/ppx.ml[247,8178+23])
                              Tpat_var "rec_flag/1845"
                            pattern (src/ppx.ml[247,8178+25]..src/ppx.ml[247,8178+46])
                              Tpat_var "type_declaration_list/1846"
                          ]
                          None
                      expression (src/ppx.ml[249,8257+4]..src/ppx.ml[250,8308+90])
                        Texp_sequence
                        expression (src/ppx.ml[249,8257+4]..src/ppx.ml[249,8257+49])
                          Texp_apply
                          expression (src/ppx.ml[249,8257+4]..src/ppx.ml[249,8257+26])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,8257+26]..src/ppx.ml[249,8257+49])
                                Texp_ident "type_declaration_list/1846"
                          ]
                        expression (src/ppx.ml[250,8308+4]..src/ppx.ml[250,8308+90])
                          Texp_apply
                          expression (src/ppx.ml[250,8308+5]..src/ppx.ml[250,8308+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[250,8308+19]..src/ppx.ml[250,8308+89])
                                Texp_apply
                                expression (src/ppx.ml[250,8308+20]..src/ppx.ml[250,8308+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[250,8308+35]..src/ppx.ml[250,8308+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[250,8308+36]..src/ppx.ml[250,8308+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[250,8308+37]..src/ppx.ml[250,8308+53]),None)
                                        expression (src/ppx.ml[250,8308+56]..src/ppx.ml[250,8308+64])
                                          Texp_ident "rec_flag/1845"
                                        expression (src/ppx.ml[250,8308+66]..src/ppx.ml[250,8308+87])
                                          Texp_ident "type_declaration_list/1846"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[253,8401+4]..src/ppx.ml[253,8401+31])
                        Tpat_value
                        pattern (src/ppx.ml[253,8401+4]..src/ppx.ml[253,8401+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[253,8401+17]..src/ppx.ml[253,8401+31])
                              Tpat_var "type_extension/1847"
                          ]
                          None
                      expression (src/ppx.ml[253,8401+34]..src/ppx.ml[253,8401+105])
                        Texp_apply
                        expression (src/ppx.ml[253,8401+35]..src/ppx.ml[253,8401+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,8401+49]..src/ppx.ml[253,8401+104])
                              Texp_apply
                              expression (src/ppx.ml[253,8401+50]..src/ppx.ml[253,8401+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[253,8401+65]..src/ppx.ml[253,8401+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[253,8401+66]..src/ppx.ml[253,8401+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[253,8401+67]..src/ppx.ml[253,8401+85]),None)
                                      expression (src/ppx.ml[253,8401+88]..src/ppx.ml[253,8401+102])
                                        Texp_ident "type_extension/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[254,8507+4]..src/ppx.ml[254,8507+40])
                        Tpat_value
                        pattern (src/ppx.ml[254,8507+4]..src/ppx.ml[254,8507+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[254,8507+19]..src/ppx.ml[254,8507+40])
                              Tpat_var "extension_constructor/1848"
                          ]
                          None
                      expression (src/ppx.ml[254,8507+43]..src/ppx.ml[254,8507+124])
                        Texp_apply
                        expression (src/ppx.ml[254,8507+44]..src/ppx.ml[254,8507+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[254,8507+58]..src/ppx.ml[254,8507+123])
                              Texp_apply
                              expression (src/ppx.ml[254,8507+59]..src/ppx.ml[254,8507+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[254,8507+74]..src/ppx.ml[254,8507+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[254,8507+75]..src/ppx.ml[254,8507+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[254,8507+76]..src/ppx.ml[254,8507+97]),None)
                                      expression (src/ppx.ml[254,8507+100]..src/ppx.ml[254,8507+121])
                                        Texp_ident "extension_constructor/1848"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[255,8632+4]..src/ppx.ml[255,8632+31])
                        Tpat_value
                        pattern (src/ppx.ml[255,8632+4]..src/ppx.ml[255,8632+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[255,8632+17]..src/ppx.ml[255,8632+31])
                              Tpat_var "module_binding/1849"
                          ]
                          None
                      expression (src/ppx.ml[255,8632+34]..src/ppx.ml[255,8632+104])
                        Texp_apply
                        expression (src/ppx.ml[255,8632+35]..src/ppx.ml[255,8632+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8632+49]..src/ppx.ml[255,8632+103])
                              Texp_apply
                              expression (src/ppx.ml[255,8632+50]..src/ppx.ml[255,8632+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8632+65]..src/ppx.ml[255,8632+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8632+66]..src/ppx.ml[255,8632+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[255,8632+67]..src/ppx.ml[255,8632+85]),None)
                                      expression (src/ppx.ml[255,8632+87]..src/ppx.ml[255,8632+101])
                                        Texp_ident "module_binding/1849"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[256,8737+4]..src/ppx.ml[256,8737+39])
                        Tpat_value
                        pattern (src/ppx.ml[256,8737+4]..src/ppx.ml[256,8737+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[256,8737+20]..src/ppx.ml[256,8737+39])
                              Tpat_var "module_binding_list/1850"
                          ]
                          None
                      expression (src/ppx.ml[256,8737+42]..src/ppx.ml[256,8737+121])
                        Texp_apply
                        expression (src/ppx.ml[256,8737+43]..src/ppx.ml[256,8737+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[256,8737+57]..src/ppx.ml[256,8737+120])
                              Texp_apply
                              expression (src/ppx.ml[256,8737+58]..src/ppx.ml[256,8737+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[256,8737+73]..src/ppx.ml[256,8737+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[256,8737+74]..src/ppx.ml[256,8737+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[256,8737+75]..src/ppx.ml[256,8737+96]),None)
                                      expression (src/ppx.ml[256,8737+99]..src/ppx.ml[256,8737+118])
                                        Texp_ident "module_binding_list/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8859+4]..src/ppx.ml[257,8859+40])
                        Tpat_value
                        pattern (src/ppx.ml[257,8859+4]..src/ppx.ml[257,8859+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[257,8859+17]..src/ppx.ml[257,8859+40])
                              Tpat_var "module_type_declaration/1851"
                          ]
                          None
                      expression (src/ppx.ml[257,8859+43]..src/ppx.ml[257,8859+124])
                        Texp_apply
                        expression (src/ppx.ml[257,8859+44]..src/ppx.ml[257,8859+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[257,8859+58]..src/ppx.ml[257,8859+123])
                              Texp_apply
                              expression (src/ppx.ml[257,8859+59]..src/ppx.ml[257,8859+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[257,8859+74]..src/ppx.ml[257,8859+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[257,8859+75]..src/ppx.ml[257,8859+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[257,8859+76]..src/ppx.ml[257,8859+95]),None)
                                      expression (src/ppx.ml[257,8859+98]..src/ppx.ml[257,8859+121])
                                        Texp_ident "module_type_declaration/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[259,9001+4]..src/ppx.ml[259,9001+30])
                        Tpat_value
                        pattern (src/ppx.ml[259,9001+4]..src/ppx.ml[259,9001+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[259,9001+14]..src/ppx.ml[259,9001+30])
                              Tpat_var "open_description/1852"
                          ]
                          None
                      expression (src/ppx.ml[259,9001+33]..src/ppx.ml[259,9001+103])
                        Texp_apply
                        expression (src/ppx.ml[259,9001+34]..src/ppx.ml[259,9001+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[259,9001+48]..src/ppx.ml[259,9001+102])
                              Texp_apply
                              expression (src/ppx.ml[259,9001+49]..src/ppx.ml[259,9001+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[259,9001+64]..src/ppx.ml[259,9001+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[259,9001+65]..src/ppx.ml[259,9001+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[259,9001+66]..src/ppx.ml[259,9001+81]),None)
                                      expression (src/ppx.ml[259,9001+84]..src/ppx.ml[259,9001+100])
                                        Texp_ident "open_description/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[260,9105+4]..src/ppx.ml[260,9105+36])
                        Tpat_value
                        pattern (src/ppx.ml[260,9105+4]..src/ppx.ml[260,9105+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[260,9105+15]..src/ppx.ml[260,9105+36])
                              Tpat_var "class_declarations/1853"
                          ]
                          None
                      expression (src/ppx.ml[260,9105+39]..src/ppx.ml[260,9105+113])
                        Texp_apply
                        expression (src/ppx.ml[260,9105+40]..src/ppx.ml[260,9105+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[260,9105+54]..src/ppx.ml[260,9105+112])
                              Texp_apply
                              expression (src/ppx.ml[260,9105+55]..src/ppx.ml[260,9105+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[260,9105+70]..src/ppx.ml[260,9105+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[260,9105+71]..src/ppx.ml[260,9105+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[260,9105+72]..src/ppx.ml[260,9105+89]),None)
                                      expression (src/ppx.ml[260,9105+92]..src/ppx.ml[260,9105+110])
                                        Texp_ident "class_declarations/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,9219+4]..src/ppx.ml[261,9219+45])
                        Tpat_value
                        pattern (src/ppx.ml[261,9219+4]..src/ppx.ml[261,9219+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[261,9219+20]..src/ppx.ml[261,9219+45])
                              Tpat_var "class_type_declarations/1854"
                          ]
                          None
                      expression (src/ppx.ml[261,9219+48]..src/ppx.ml[261,9219+132])
                        Texp_apply
                        expression (src/ppx.ml[261,9219+49]..src/ppx.ml[261,9219+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[261,9219+63]..src/ppx.ml[261,9219+131])
                              Texp_apply
                              expression (src/ppx.ml[261,9219+64]..src/ppx.ml[261,9219+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[261,9219+79]..src/ppx.ml[261,9219+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[261,9219+80]..src/ppx.ml[261,9219+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[261,9219+81]..src/ppx.ml[261,9219+103]),None)
                                      expression (src/ppx.ml[261,9219+106]..src/ppx.ml[261,9219+129])
                                        Texp_ident "class_type_declarations/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[262,9352+4]..src/ppx.ml[262,9352+39])
                        Tpat_value
                        pattern (src/ppx.ml[262,9352+4]..src/ppx.ml[262,9352+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[262,9352+18]..src/ppx.ml[262,9352+39])
                              Tpat_var "include_declaration/1855"
                          ]
                          None
                      expression (src/ppx.ml[262,9352+41]..src/ppx.ml[262,9352+117])
                        Texp_apply
                        expression (src/ppx.ml[262,9352+42]..src/ppx.ml[262,9352+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[262,9352+56]..src/ppx.ml[262,9352+116])
                              Texp_apply
                              expression (src/ppx.ml[262,9352+57]..src/ppx.ml[262,9352+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[262,9352+72]..src/ppx.ml[262,9352+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[262,9352+73]..src/ppx.ml[262,9352+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[262,9352+74]..src/ppx.ml[262,9352+93]),None)
                                      expression (src/ppx.ml[262,9352+95]..src/ppx.ml[262,9352+114])
                                        Texp_ident "include_declaration/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[263,9470+4]..src/ppx.ml[263,9470+30])
                        Tpat_value
                        pattern (src/ppx.ml[263,9470+4]..src/ppx.ml[263,9470+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[263,9470+19]..src/ppx.ml[263,9470+30])
                              Tpat_var "attribute/1856"
                          ]
                          None
                      expression (src/ppx.ml[263,9470+32]..src/ppx.ml[263,9470+101])
                        Texp_apply
                        expression (src/ppx.ml[263,9470+33]..src/ppx.ml[263,9470+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,9470+47]..src/ppx.ml[263,9470+100])
                              Texp_apply
                              expression (src/ppx.ml[263,9470+48]..src/ppx.ml[263,9470+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[263,9470+63]..src/ppx.ml[263,9470+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[263,9470+64]..src/ppx.ml[263,9470+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[263,9470+65]..src/ppx.ml[263,9470+86]),None)
                                      expression (src/ppx.ml[263,9470+89]..src/ppx.ml[263,9470+98])
                                        Texp_ident "attribute/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[264,9572+4]..src/ppx.ml[264,9572+44])
                        Tpat_value
                        pattern (src/ppx.ml[264,9572+4]..src/ppx.ml[264,9572+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[264,9572+21]..src/ppx.ml[264,9572+30])
                              Tpat_var "extension/1857"
                            pattern (src/ppx.ml[264,9572+33]..src/ppx.ml[264,9572+43])
                              Tpat_var "attributes/1858"
                          ]
                          None
                      expression (src/ppx.ml[264,9572+46]..src/ppx.ml[264,9572+128])
                        Texp_apply
                        expression (src/ppx.ml[264,9572+47]..src/ppx.ml[264,9572+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[264,9572+61]..src/ppx.ml[264,9572+127])
                              Texp_apply
                              expression (src/ppx.ml[264,9572+62]..src/ppx.ml[264,9572+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[264,9572+77]..src/ppx.ml[264,9572+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[264,9572+78]..src/ppx.ml[264,9572+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[264,9572+79]..src/ppx.ml[264,9572+100]),None)
                                      expression (src/ppx.ml[264,9572+103]..src/ppx.ml[264,9572+112])
                                        Texp_ident "extension/1857"
                                      expression (src/ppx.ml[264,9572+115]..src/ppx.ml[264,9572+125])
                                        Texp_ident "attributes/1858"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[266,9702+0]..src/ppx.ml[266,9702+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[266,9702+4]..src/ppx.ml[266,9702+7])
          Tpat_var "foo/1859"
        expression (src/ppx.ml[266,9702+10]..src/ppx.ml[266,9702+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[268,9717+0]..src/ppx.ml[276,9936+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[268,9717+4]..src/ppx.ml[268,9717+12])
          Tpat_var "printone/1860"
        expression (src/ppx.ml[268,9717+13]..src/ppx.ml[276,9936+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[268,9717+14]..src/ppx.ml[268,9717+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[268,9717+18]..src/ppx.ml[268,9717+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1861"
                pattern (src/ppx.ml[268,9717+14]..src/ppx.ml[268,9717+15])
                  Tpat_any
              expression (src/ppx.ml[269,9760+2]..src/ppx.ml[276,9936+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[268,9717+36]..src/ppx.ml[268,9717+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[269,9760+8]..src/ppx.ml[269,9760+9])
                  Texp_ident "x/1861"
                [
                  <case>
                    pattern (src/ppx.ml[270,9775+3]..src/ppx.ml[273,9825+3])
                      Tpat_value
                      pattern (src/ppx.ml[270,9775+3]..src/ppx.ml[273,9825+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[271,9780+4]..src/ppx.ml[271,9780+13])
                              Tpat_var "pstr_desc/1862"
                        ]
                    expression (src/ppx.ml[275,9909+4]..src/ppx.ml[276,9936+6])
                      Texp_sequence
                      expression (src/ppx.ml[275,9909+4]..src/ppx.ml[275,9909+25])
                        Texp_apply
                        expression (src/ppx.ml[275,9909+5]..src/ppx.ml[275,9909+14])
                          Texp_ident "printdesc/1837"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9909+15]..src/ppx.ml[275,9909+24])
                              Texp_ident "pstr_desc/1862"
                        ]
                      expression (src/ppx.ml[276,9936+4]..src/ppx.ml[276,9936+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[282,10056+0]..src/ppx.ml[284,10137+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,10056+4]..src/ppx.ml[282,10056+13])
          Tpat_var "printone2/1863"
        expression (src/ppx.ml[282,10056+14]..src/ppx.ml[284,10137+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[282,10056+14]..src/ppx.ml[282,10056+15])
                Tpat_var "x/1864"
              expression (src/ppx.ml[283,10080+2]..src/ppx.ml[284,10137+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[282,10056+17]..src/ppx.ml[282,10056+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[283,10080+2]..src/ppx.ml[283,10080+55])
                  Texp_apply
                  expression (src/ppx.ml[283,10080+3]..src/ppx.ml[283,10080+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[283,10080+17]..src/ppx.ml[283,10080+54])
                        Texp_apply
                        expression (src/ppx.ml[283,10080+18]..src/ppx.ml[283,10080+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[283,10080+33]..src/ppx.ml[283,10080+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[283,10080+34]..src/ppx.ml[283,10080+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[283,10080+35]..src/ppx.ml[283,10080+49]),None)
                                expression (src/ppx.ml[283,10080+51]..src/ppx.ml[283,10080+52])
                                  Texp_ident "x/1864"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[284,10137+2]..src/ppx.ml[284,10137+12])
                  Texp_apply
                  expression (src/ppx.ml[284,10137+2]..src/ppx.ml[284,10137+10])
                    Texp_ident "printone/1860"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[284,10137+11]..src/ppx.ml[284,10137+12])
                        Texp_ident "x/1864"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[286,10153+0]..src/ppx.ml[288,10184+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[286,10153+4]..src/ppx.ml[286,10153+9])
          Tpat_var "proc1/1865"
        expression (src/ppx.ml[286,10153+10]..src/ppx.ml[288,10184+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[286,10153+10]..src/ppx.ml[286,10153+11])
                Tpat_var "x/1867"
              expression (src/ppx.ml[287,10169+2]..src/ppx.ml[288,10184+3])
                Texp_sequence
                expression (src/ppx.ml[287,10169+2]..src/ppx.ml[287,10169+13])
                  Texp_apply
                  expression (src/ppx.ml[287,10169+2]..src/ppx.ml[287,10169+11])
                    Texp_ident "printone2/1863"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[287,10169+12]..src/ppx.ml[287,10169+13])
                        Texp_ident "x/1867"
                  ]
                expression (src/ppx.ml[288,10184+2]..src/ppx.ml[288,10184+3])
                  Texp_ident "x/1867"
          ]
    ]
  structure_item (src/ppx.ml[290,10189+0]..src/ppx.ml[293,10338+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[290,10189+4]..src/ppx.ml[290,10189+9])
          Tpat_var "debug/1868"
        expression (src/ppx.ml[290,10189+10]..src/ppx.ml[293,10338+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[290,10189+10]..src/ppx.ml[290,10189+14])
                Tpat_var "proc/1870"
              expression (src/ppx.ml[290,10189+15]..src/ppx.ml[293,10338+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[290,10189+15]..src/ppx.ml[290,10189+18])
                      Tpat_var "lst/1871"
                    expression (src/ppx.ml[291,10217+2]..src/ppx.ml[293,10338+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[290,10189+21]..src/ppx.ml[290,10189+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[291,10217+6]..src/ppx.ml[291,10217+12])
                            Tpat_var "result/1872"
                          expression (src/ppx.ml[291,10217+15]..src/ppx.ml[291,10217+32])
                            Texp_apply
                            expression (src/ppx.ml[291,10217+15]..src/ppx.ml[291,10217+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[291,10217+24]..src/ppx.ml[291,10217+28])
                                  Texp_ident "proc/1870"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[291,10217+29]..src/ppx.ml[291,10217+32])
                                  Texp_ident "lst/1871"
                            ]
                      ]
                      expression (src/ppx.ml[292,10253+2]..src/ppx.ml[293,10338+4])
                        Texp_sequence
                        expression (src/ppx.ml[292,10253+2]..src/ppx.ml[292,10253+83])
                          Texp_apply
                          expression (src/ppx.ml[292,10253+2]..src/ppx.ml[292,10253+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[292,10253+12]..src/ppx.ml[292,10253+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[292,10253+17]..src/ppx.ml[292,10253+18])
                                      Tpat_var "i/1936"
                                    expression (src/ppx.ml[292,10253+22]..src/ppx.ml[292,10253+75])
                                      Texp_apply
                                      expression (src/ppx.ml[292,10253+22]..src/ppx.ml[292,10253+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[292,10253+36]..src/ppx.ml[292,10253+75])
                                            Texp_apply
                                            expression (src/ppx.ml[292,10253+37]..src/ppx.ml[292,10253+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[292,10253+52]..src/ppx.ml[292,10253+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[292,10253+53]..src/ppx.ml[292,10253+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[292,10253+54]..src/ppx.ml[292,10253+69]),None)
                                                    expression (src/ppx.ml[292,10253+72]..src/ppx.ml[292,10253+73])
                                                      Texp_ident "i/1936"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[292,10253+77]..src/ppx.ml[292,10253+83])
                                Texp_ident "result/1872"
                          ]
                        expression (src/ppx.ml[293,10338+2]..src/ppx.ml[293,10338+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[295,10360+0]..src/ppx.ml[298,10484+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10360+4]..src/ppx.ml[295,10360+13])
          Tpat_var "transform/1937"
        expression (src/ppx.ml[295,10360+14]..src/ppx.ml[298,10484+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[295,10360+14]..src/ppx.ml[295,10360+15])
                Tpat_var "x/1939"
              expression (src/ppx.ml[296,10415+2]..src/ppx.ml[298,10484+3])
                Texp_sequence
                expression (src/ppx.ml[296,10415+2]..src/ppx.ml[296,10415+48])
                  Texp_apply
                  expression (src/ppx.ml[296,10415+3]..src/ppx.ml[296,10415+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[296,10415+17]..src/ppx.ml[296,10415+47])
                        Texp_apply
                        expression (src/ppx.ml[296,10415+18]..src/ppx.ml[296,10415+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[296,10415+33]..src/ppx.ml[296,10415+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[296,10415+34]..src/ppx.ml[296,10415+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[296,10415+35]..src/ppx.ml[296,10415+42]),None)
                                expression (src/ppx.ml[296,10415+44]..src/ppx.ml[296,10415+45])
                                  Texp_ident "x/1939"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[297,10465+2]..src/ppx.ml[298,10484+3])
                  Texp_sequence
                  expression (src/ppx.ml[297,10465+2]..src/ppx.ml[297,10465+17])
                    Texp_apply
                    expression (src/ppx.ml[297,10465+3]..src/ppx.ml[297,10465+8])
                      Texp_ident "debug/1868"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[297,10465+9]..src/ppx.ml[297,10465+14])
                          Texp_ident "proc1/1865"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[297,10465+15]..src/ppx.ml[297,10465+16])
                          Texp_ident "x/1939"
                    ]
                  expression (src/ppx.ml[298,10484+2]..src/ppx.ml[298,10484+3])
                    Texp_ident "x/1939"
          ]
    ]
  structure_item (src/ppx.ml[300,10491+1]..src/ppx.ml[300,10491+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10491+5]..src/ppx.ml[300,10491+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[300,10491+10]..src/ppx.ml[300,10491+69])
          Texp_apply
          expression (src/ppx.ml[300,10491+10]..src/ppx.ml[300,10491+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[300,10491+47]..src/ppx.ml[300,10491+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[300,10491+47]..src/ppx.ml[300,10491+56])
                    Texp_ident "transform/1937"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[300,10491+57]..src/ppx.ml[300,10491+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[300,10491+58]..src/ppx.ml[300,10491+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.131>;
 "foo"[value] -> <Ppx.123>;
 "print_constructor_arguments"[value] -> <Ppx.70>;
 "print_type_decl"[value] -> <Ppx.88>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.102>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.124>;
 "printone2"[value] -> <Ppx.127>;
 "proc1"[value] -> <Ppx.129>;
 "proc2"[value] -> <Ppx.7>;
 "process_Ptype_variant_constructor_declaration_list"[value] -> <Ppx.74>;
 "process_core_type"[value] -> <Ppx.30>;
 "process_core_type_desc"[value] -> <Ppx.28>;
 "process_core_type_list"[value] -> <Ppx.31>;
 "process_kind"[value] -> <Ppx.84>;
 "process_record_kind"[value] -> <Ppx.27>;
 "process_record_kind_list"[value] -> <Ppx.29>;
 "process_type_decl_list"[value] -> <Ppx.98>;
 "transform"[value] -> <Ppx.136>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5101 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_attributes/1447 =a (field 4 x/1442)
                    pld_loc/1446 =a (field 3 x/1442)
                    pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4045
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4045
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2489-2525
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2562-2606
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1449)))))))
                   case tag 1:
                    (let
                      (core_type2/1452 =a (field 2 x/1448)
                       core_type/1451 =a (field 1 x/1448)
                       arg_label/1450 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                        (after Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(90):2682-2723
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10:"))))))
                   case tag 2:
                    (let (a/1453 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(93):2777-2833
                        (after Ppx.process_core_type_desc src/ppx.ml(93):2777-2833
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(93):2792-2832
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow9:"))))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2909-3016
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2909-2935
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2941-3016
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2941-3016
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2956-3015
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (let
                      (b/1457 =a (field 1 x/1448) a/1456 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(100):3090-3146
                        (after Ppx.process_core_type_desc src/ppx.ml(100):3090-3146
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(100):3105-3145
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8:"))))))
                   case tag 5:
                    (let
                      (b/1459 =a (field 1 x/1448) a/1458 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(103):3221-3277
                        (after Ppx.process_core_type_desc src/ppx.ml(103):3221-3277
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(103):3236-3276
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7:"))))))
                   case tag 6:
                    (let
                      (b/1461 =a (field 1 x/1448) a/1460 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(106):3343-3399
                        (after Ppx.process_core_type_desc src/ppx.ml(106):3343-3399
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(106):3358-3398
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6:"))))))
                   case tag 7:
                    (let
                      (c/1464 =a (field 2 x/1448)
                       b/1463 =a (field 1 x/1448)
                       a/1462 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(109):3494-3550
                        (after Ppx.process_core_type_desc src/ppx.ml(109):3494-3550
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(109):3509-3549
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5:"))))))
                   case tag 8:
                    (let
                      (b/1466 =a (field 1 x/1448) a/1465 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(112):3619-3675
                        (after Ppx.process_core_type_desc src/ppx.ml(112):3619-3675
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(112):3634-3674
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4:"))))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3728-3786
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3728-3786
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3743-3785
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3984-4045
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3984-4045
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3999-4044
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4076-4193
                (before Ppx.process_record_kind_list src/ppx.ml(122):4084-4193
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4128-4193
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4128-4151
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4157-4193
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4157-4185
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4191-4193
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4107-4109
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4215-4516
                (before Ppx.process_core_type src/ppx.ml(130):4223-4516
                  (let
                    (ptyp_attributes/1798 =a (field 3 x/1794)
                     ptyp_loc_stack/1797 =a (field 2 x/1794)
                     ptyp_loc/1796 =a (field 1 x/1794)
                     ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4410-4516
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4410-4444
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(138):4450-4516
                          (after Ppx.process_core_type src/ppx.ml(138):4450-4516
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(138):4465-4515
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(139)<ghost>:4543-4662
                (before Ppx.process_core_type_list src/ppx.ml(140):4566-4662
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(143):4610-4662
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(143):4610-4631
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(144):4637-4662
                            (after Ppx.process_core_type_list src/ppx.ml(144):4637-4662
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(141):4589-4591
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(151)<ghost>:4708-4941
                 (before Ppx.print_constructor_arguments src/ppx.ml(152):4716-4941
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(154):4754-4846
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(154):4754-4780
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(155):4786-4846
                             (after Ppx.print_constructor_arguments src/ppx.ml(155):4786-4846
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(155):4801-4845
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(158):4880-4941
                         (after Ppx.print_constructor_arguments src/ppx.ml(158):4880-4941
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(158):4895-4940
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(160)<ghost>:5001-5930
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161):5009-5930
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(165):5119-5930
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5458-5930
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5458-5495
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5503-5930
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5503-5858
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5518-5857
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5866-5930
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5866-5920
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5928-5930
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):5032-5034
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(194)<ghost>:5950-6409
                     (before Ppx.process_kind src/ppx.ml(195):5958-6409
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(197):6016-6074
                           (after Ppx.process_kind src/ppx.ml(197):6016-6074
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(197):6031-6073
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(205):6351-6409
                           (after Ppx.process_kind src/ppx.ml(205):6351-6409
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(205):6366-6408
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(199):6102-6223
                             (seq
                               (after Ppx.process_kind src/ppx.ml(199):6102-6156
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(200):6162-6223
                                 (after Ppx.process_kind src/ppx.ml(200):6162-6223
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(200):6177-6222
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6304-6331
                             (after Ppx.process_kind src/ppx.ml(204):6304-6331
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(207)<ghost>:6430-7455
                     (before Ppx.print_type_decl src/ppx.ml(208):6438-7455
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(219):6845-7455
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(219):6845-6910
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(219):6860-6909
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(220):6916-7455
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(220):6916-6984
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(220):6931-6983
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(221):6990-7455
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(221):6990-7052
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(221):7005-7051
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(222):7058-7455
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(222):7058-7117
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(222):7073-7116
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(223):7123-7455
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(223):7123-7148
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(224):7154-7455
                                               (after Ppx.print_type_decl src/ppx.ml(224):7154-7455
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(224):7169-7454
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(230)<ghost>:7491-7602
                       (before Ppx.process_type_decl_list src/ppx.ml(231):7499-7602
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(234):7543-7602
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(234):7543-7562
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(235):7568-7602
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(235):7568-7594
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(236):7600-7602
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(232):7522-7524
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(238)<ghost>:7621-9700
                         (before Ppx.printdesc src/ppx.ml(239):7656-9700
                           (seq
                             (after Ppx.printdesc src/ppx.ml(239):7656-7722
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(239):7671-7721
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(240):7726-9700
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(241):7780-7856
                                     (after Ppx.printdesc src/ppx.ml(241):7780-7856
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(241):7795-7855
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(243):7925-8059
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(243):7925-8009
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(243):7940-8008
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(244):8015-8059
                                         (after Ppx.printdesc src/ppx.ml(244):8015-8059
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(245):8099-8176
                                     (after Ppx.printdesc src/ppx.ml(245):8099-8176
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(245):8114-8175
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(249):8261-8398
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(249):8261-8306
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(250):8312-8398
                                         (after Ppx.printdesc src/ppx.ml(250):8312-8398
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(250):8327-8397
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(253):8435-8506
                                     (after Ppx.printdesc src/ppx.ml(253):8435-8506
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(253):8450-8505
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8550-8631
                                     (after Ppx.printdesc src/ppx.ml(254):8550-8631
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8565-8630
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8666-8736
                                     (after Ppx.printdesc src/ppx.ml(255):8666-8736
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8681-8735
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8779-8858
                                     (after Ppx.printdesc src/ppx.ml(256):8779-8858
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8794-8857
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8902-8983
                                     (after Ppx.printdesc src/ppx.ml(257):8902-8983
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8917-8982
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):9034-9104
                                     (after Ppx.printdesc src/ppx.ml(259):9034-9104
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):9049-9103
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):9144-9218
                                     (after Ppx.printdesc src/ppx.ml(260):9144-9218
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9159-9217
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9267-9351
                                     (after Ppx.printdesc src/ppx.ml(261):9267-9351
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9282-9350
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9393-9469
                                     (after Ppx.printdesc src/ppx.ml(262):9393-9469
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9408-9468
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9502-9571
                                     (after Ppx.printdesc src/ppx.ml(263):9502-9571
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9517-9570
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9618-9700
                                     (after Ppx.printdesc src/ppx.ml(264):9618-9700
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9633-9699
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(268)<ghost>:9730-9942
                         (before Ppx.printone src/ppx.ml(269):9762-9942
                           (let
                             (*match*/5102 =a (field 1 x/1861)
                              pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(275):9913-9942
                               (seq
                                 (after Ppx.printone src/ppx.ml(275):9913-9934
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(276):9940-9942
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(282)<ghost>:10070-10149
                         (before Ppx.printone2 src/ppx.ml(283):10082-10149
                           (seq
                             (after Ppx.printone2 src/ppx.ml(283):10082-10135
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(283):10097-10134
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(284):10139-10149
                               (after Ppx.printone2 src/ppx.ml(284):10139-10149
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(286)<ghost>:10163-10187
                         (before Ppx.proc1 src/ppx.ml(287):10171-10187
                           (seq
                             (after Ppx.proc1 src/ppx.ml(287):10171-10182
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(288):10186-10187
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(290)<ghost>:10199-10342
                         (before Ppx.debug src/ppx.ml(291):10219-10342
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(291):10232-10249
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(292):10255-10342
                               (seq
                                 (after Ppx.debug src/ppx.ml(292):10255-10336
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(292):10265-10329
                                         (before Ppx.debug.(fun) src/ppx.ml(292):10275-10328
                                           (after Ppx.debug.(fun) src/ppx.ml(292):10275-10328
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(292):10289-10328
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(293):10340-10342
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(295)<ghost>:10374-10487
                         (before Ppx.transform src/ppx.ml(296):10417-10487
                           (seq
                             (after Ppx.transform src/ppx.ml(296):10417-10463
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(296):10432-10462
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(297):10467-10487
                               (seq
                                 (after Ppx.transform src/ppx.ml(297):10467-10482
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(298):10486-10487
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(300):10501-10560
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4045
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4045
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2489-2525
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2562-2606
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1449)))))))
                   case tag 1:
                    (before Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                      (after Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(90):2682-2723
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow10:")))))
                   case tag 2:
                    (before Ppx.process_core_type_desc src/ppx.ml(93):2777-2833
                      (after Ppx.process_core_type_desc src/ppx.ml(93):2777-2833
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(93):2792-2832
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow9:")))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2909-3016
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2909-2935
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2941-3016
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2941-3016
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2956-3015
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (before Ppx.process_core_type_desc src/ppx.ml(100):3090-3146
                      (after Ppx.process_core_type_desc src/ppx.ml(100):3090-3146
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(100):3105-3145
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow8:")))))
                   case tag 5:
                    (before Ppx.process_core_type_desc src/ppx.ml(103):3221-3277
                      (after Ppx.process_core_type_desc src/ppx.ml(103):3221-3277
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(103):3236-3276
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow7:")))))
                   case tag 6:
                    (before Ppx.process_core_type_desc src/ppx.ml(106):3343-3399
                      (after Ppx.process_core_type_desc src/ppx.ml(106):3343-3399
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(106):3358-3398
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow6:")))))
                   case tag 7:
                    (before Ppx.process_core_type_desc src/ppx.ml(109):3494-3550
                      (after Ppx.process_core_type_desc src/ppx.ml(109):3494-3550
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(109):3509-3549
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow5:")))))
                   case tag 8:
                    (before Ppx.process_core_type_desc src/ppx.ml(112):3619-3675
                      (after Ppx.process_core_type_desc src/ppx.ml(112):3619-3675
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(112):3634-3674
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow4:")))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3728-3786
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3728-3786
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3743-3785
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3984-4045
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3984-4045
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3999-4044
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4076-4193
                (before Ppx.process_record_kind_list src/ppx.ml(122):4084-4193
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4128-4193
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4128-4151
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4157-4193
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4157-4185
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4191-4193
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4107-4109
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4215-4516
                (before Ppx.process_core_type src/ppx.ml(130):4223-4516
                  (let (ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4410-4516
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4410-4444
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(138):4450-4516
                          (after Ppx.process_core_type src/ppx.ml(138):4450-4516
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(138):4465-4515
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(139)<ghost>:4543-4662
                (before Ppx.process_core_type_list src/ppx.ml(140):4566-4662
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(143):4610-4662
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(143):4610-4631
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(144):4637-4662
                            (after Ppx.process_core_type_list src/ppx.ml(144):4637-4662
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(141):4589-4591
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(151)<ghost>:4708-4941
                 (before Ppx.print_constructor_arguments src/ppx.ml(152):4716-4941
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(154):4754-4846
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(154):4754-4780
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(155):4786-4846
                             (after Ppx.print_constructor_arguments src/ppx.ml(155):4786-4846
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(155):4801-4845
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(158):4880-4941
                         (after Ppx.print_constructor_arguments src/ppx.ml(158):4880-4941
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(158):4895-4940
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(160)<ghost>:5001-5930
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161):5009-5930
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(165):5119-5930
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5458-5930
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5458-5495
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5503-5930
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5503-5858
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5518-5857
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5866-5930
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5866-5920
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5928-5930
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):5032-5034
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(194)<ghost>:5950-6409
                     (before Ppx.process_kind src/ppx.ml(195):5958-6409
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(197):6016-6074
                           (after Ppx.process_kind src/ppx.ml(197):6016-6074
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(197):6031-6073
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(205):6351-6409
                           (after Ppx.process_kind src/ppx.ml(205):6351-6409
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(205):6366-6408
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(199):6102-6223
                             (seq
                               (after Ppx.process_kind src/ppx.ml(199):6102-6156
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(200):6162-6223
                                 (after Ppx.process_kind src/ppx.ml(200):6162-6223
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(200):6177-6222
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6304-6331
                             (after Ppx.process_kind src/ppx.ml(204):6304-6331
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(207)<ghost>:6430-7455
                     (before Ppx.print_type_decl src/ppx.ml(208):6438-7455
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(219):6845-7455
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(219):6845-6910
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(219):6860-6909
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(220):6916-7455
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(220):6916-6984
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(220):6931-6983
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(221):6990-7455
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(221):6990-7052
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(221):7005-7051
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(222):7058-7455
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(222):7058-7117
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(222):7073-7116
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(223):7123-7455
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(223):7123-7148
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(224):7154-7455
                                               (after Ppx.print_type_decl src/ppx.ml(224):7154-7455
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(224):7169-7454
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(230)<ghost>:7491-7602
                       (before Ppx.process_type_decl_list src/ppx.ml(231):7499-7602
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(234):7543-7602
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(234):7543-7562
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(235):7568-7602
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(235):7568-7594
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(236):7600-7602
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(232):7522-7524
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(238)<ghost>:7621-9700
                         (before Ppx.printdesc src/ppx.ml(239):7656-9700
                           (seq
                             (after Ppx.printdesc src/ppx.ml(239):7656-7722
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(239):7671-7721
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(240):7726-9700
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(241):7780-7856
                                     (after Ppx.printdesc src/ppx.ml(241):7780-7856
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(241):7795-7855
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(243):7925-8059
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(243):7925-8009
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(243):7940-8008
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(244):8015-8059
                                         (after Ppx.printdesc src/ppx.ml(244):8015-8059
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(245):8099-8176
                                     (after Ppx.printdesc src/ppx.ml(245):8099-8176
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(245):8114-8175
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(249):8261-8398
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(249):8261-8306
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(250):8312-8398
                                         (after Ppx.printdesc src/ppx.ml(250):8312-8398
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(250):8327-8397
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(253):8435-8506
                                     (after Ppx.printdesc src/ppx.ml(253):8435-8506
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(253):8450-8505
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8550-8631
                                     (after Ppx.printdesc src/ppx.ml(254):8550-8631
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8565-8630
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8666-8736
                                     (after Ppx.printdesc src/ppx.ml(255):8666-8736
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8681-8735
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8779-8858
                                     (after Ppx.printdesc src/ppx.ml(256):8779-8858
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8794-8857
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8902-8983
                                     (after Ppx.printdesc src/ppx.ml(257):8902-8983
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8917-8982
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):9034-9104
                                     (after Ppx.printdesc src/ppx.ml(259):9034-9104
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):9049-9103
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):9144-9218
                                     (after Ppx.printdesc src/ppx.ml(260):9144-9218
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9159-9217
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9267-9351
                                     (after Ppx.printdesc src/ppx.ml(261):9267-9351
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9282-9350
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9393-9469
                                     (after Ppx.printdesc src/ppx.ml(262):9393-9469
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9408-9468
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9502-9571
                                     (after Ppx.printdesc src/ppx.ml(263):9502-9571
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9517-9570
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9618-9700
                                     (after Ppx.printdesc src/ppx.ml(264):9618-9700
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9633-9699
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(268)<ghost>:9730-9942
                         (before Ppx.printone src/ppx.ml(269):9762-9942
                           (let (pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(275):9913-9942
                               (seq
                                 (after Ppx.printone src/ppx.ml(275):9913-9934
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(276):9940-9942
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(282)<ghost>:10070-10149
                         (before Ppx.printone2 src/ppx.ml(283):10082-10149
                           (seq
                             (after Ppx.printone2 src/ppx.ml(283):10082-10135
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(283):10097-10134
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(284):10139-10149
                               (after Ppx.printone2 src/ppx.ml(284):10139-10149
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(286)<ghost>:10163-10187
                         (before Ppx.proc1 src/ppx.ml(287):10171-10187
                           (seq
                             (after Ppx.proc1 src/ppx.ml(287):10171-10182
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(288):10186-10187
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(290)<ghost>:10199-10342
                         (before Ppx.debug src/ppx.ml(291):10219-10342
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(291):10232-10249
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(292):10255-10342
                               (seq
                                 (after Ppx.debug src/ppx.ml(292):10255-10336
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(292):10265-10329
                                         (before Ppx.debug.(fun) src/ppx.ml(292):10275-10328
                                           (after Ppx.debug.(fun) src/ppx.ml(292):10275-10328
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(292):10289-10328
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(293):10340-10342
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(295)<ghost>:10374-10487
                         (before Ppx.transform src/ppx.ml(296):10417-10487
                           (seq
                             (after Ppx.transform src/ppx.ml(296):10417-10463
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(296):10432-10462
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(297):10467-10487
                               (seq
                                 (after Ppx.transform src/ppx.ml(297):10467-10482
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(298):10486-10487
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(300):10501-10560
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))

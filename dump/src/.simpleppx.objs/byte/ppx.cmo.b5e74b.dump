[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[73,1962+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[73,1962+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[73,1962+23])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[73,1962+23])
                  Pexp_match
                  expression (src/ppx.ml[72,1943+10]..[72,1943+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1943+10]..[72,1943+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1962+6]..[73,1962+18])
                        Ppat_construct "Pexp_ident" (src/ppx.ml[73,1962+6]..[73,1962+16])
                        Some
                          []
                          pattern (src/ppx.ml[73,1962+17]..[73,1962+18])
                            Ppat_var "a" (src/ppx.ml[73,1962+17]..[73,1962+18])
                      expression (src/ppx.ml[73,1962+22]..[73,1962+23])
                        Pexp_ident "a" (src/ppx.ml[73,1962+22]..[73,1962+23])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[78,2090+0]..[166,5047+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[78,2090+8]..[78,2090+27])
          Ppat_var "process_record_kind" (src/ppx.ml[78,2090+8]..[78,2090+27])
        expression (src/ppx.ml[78,2090+27]..[92,2574+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[78,2090+27]..[78,2090+30])
            Ppat_var "x" (src/ppx.ml[78,2090+28]..[78,2090+29])
          expression (src/ppx.ml[79,2123+2]..[92,2574+47])
            Pexp_match
            expression (src/ppx.ml[79,2123+8]..[79,2123+9])
              Pexp_ident "x" (src/ppx.ml[79,2123+8]..[79,2123+9])
            [
              <case>
                pattern (src/ppx.ml[80,2138+4]..[86,2319+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[81,2144+5]..[81,2144+13]) ghost
                      pattern (src/ppx.ml[81,2144+5]..[81,2144+13])
                        Ppat_var "pld_name" (src/ppx.ml[81,2144+5]..[81,2144+13])
                    "pld_mutable" (src/ppx.ml[82,2177+5]..[82,2177+16]) ghost
                      pattern (src/ppx.ml[82,2177+5]..[82,2177+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[82,2177+5]..[82,2177+16])
                    "pld_type" (src/ppx.ml[83,2215+5]..[83,2215+13]) ghost
                      pattern (src/ppx.ml[83,2215+5]..[83,2215+13])
                        Ppat_var "pld_type" (src/ppx.ml[83,2215+5]..[83,2215+13])
                    "pld_loc" (src/ppx.ml[84,2247+5]..[84,2247+12]) ghost
                      pattern (src/ppx.ml[84,2247+5]..[84,2247+12])
                        Ppat_var "pld_loc" (src/ppx.ml[84,2247+5]..[84,2247+12])
                    "pld_attributes" (src/ppx.ml[85,2279+5]..[85,2279+19]) ghost
                      pattern (src/ppx.ml[85,2279+5]..[85,2279+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[85,2279+5]..[85,2279+19])
                  ]
                expression (src/ppx.ml[87,2327+4]..[92,2574+47])
                  Pexp_apply
                  expression (src/ppx.ml[87,2327+5]..[87,2327+18])
                    Pexp_ident "print_endline" (src/ppx.ml[87,2327+5]..[87,2327+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[87,2327+19]..[92,2574+46])
                        Pexp_apply
                        expression (src/ppx.ml[87,2327+20]..[87,2327+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[87,2327+20]..[87,2327+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[87,2327+35]..[92,2574+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[87,2327+36]..[87,2327+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[87,2327+37]..[87,2327+56]),None)
                                expression (src/ppx.ml[88,2388+36]..[88,2388+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[88,2388+36]..[88,2388+44])
                                expression (src/ppx.ml[89,2434+36]..[89,2434+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[89,2434+37]..[89,2434+44]),None)
                                expression (src/ppx.ml[90,2481+36]..[90,2481+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[90,2481+36]..[90,2481+47])
                                expression (src/ppx.ml[91,2530+36]..[91,2530+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[91,2530+37]..[91,2530+41]),None)
                                expression (src/ppx.ml[92,2574+36]..[92,2574+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[92,2574+36]..[92,2574+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[94,2626+0]..[94,2626+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[94,2626+0]..[94,2626+22])
        expression (src/ppx.ml[94,2626+23]..[140,4365+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[94,2626+23]..[94,2626+24])
            Ppat_var "x" (src/ppx.ml[94,2626+23]..[94,2626+24])
          expression (src/ppx.ml[95,2653+2]..[140,4365+65])
            Pexp_match
            expression (src/ppx.ml[95,2653+8]..[95,2653+9])
              Pexp_ident "x" (src/ppx.ml[95,2653+8]..[95,2653+9])
            [
              <case>
                pattern (src/ppx.ml[96,2668+4]..[96,2668+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[96,2668+4]..[96,2668+15])
                  Some
                    []
                    pattern (src/ppx.ml[96,2668+16]..[96,2668+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[96,2668+17]..[96,2668+18])
                          Ppat_var "a" (src/ppx.ml[96,2668+17]..[96,2668+18])
                        pattern (src/ppx.ml[96,2668+19]..[96,2668+20])
                          Ppat_var "b" (src/ppx.ml[96,2668+19]..[96,2668+20])
                      ]
                expression (src/ppx.ml[98,2739+4]..[107,2982+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[98,2739+8]..[98,2739+12])
                        Ppat_var "myid" (src/ppx.ml[98,2739+8]..[98,2739+12])
                      expression (src/ppx.ml[98,2739+15]..[98,2739+29])
                        Pexp_apply
                        expression (src/ppx.ml[98,2739+16]..[98,2739+26])
                          Pexp_ident "process_id" (src/ppx.ml[98,2739+16]..[98,2739+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[98,2739+27]..[98,2739+28])
                              Pexp_ident "a" (src/ppx.ml[98,2739+27]..[98,2739+28])
                        ]
                  ]
                  expression (src/ppx.ml[99,2772+4]..[107,2982+22])
                    Pexp_sequence
                    expression (src/ppx.ml[99,2772+4]..[99,2772+30])
                      Pexp_apply
                      expression (src/ppx.ml[99,2772+5]..[99,2772+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[99,2772+5]..[99,2772+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[99,2772+28]..[99,2772+29])
                            Pexp_ident "b" (src/ppx.ml[99,2772+28]..[99,2772+29])
                      ]
                    expression (src/ppx.ml[101,2805+4]..[107,2982+22])
                      Pexp_sequence
                      expression (src/ppx.ml[101,2805+4]..[101,2805+46])
                        Pexp_apply
                        expression (src/ppx.ml[101,2805+4]..[101,2805+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[101,2805+4]..[101,2805+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2805+18]..[101,2805+41])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[101,2805+19]..[101,2805+40]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2805+42]..[101,2805+46])
                              Pexp_ident "myid" (src/ppx.ml[101,2805+42]..[101,2805+46])
                        ]
                      expression (src/ppx.ml[104,2892+4]..[107,2982+22])
                        Pexp_apply
                        expression (src/ppx.ml[104,2892+5]..[104,2892+18])
                          Pexp_ident "print_endline" (src/ppx.ml[104,2892+5]..[104,2892+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2892+19]..[107,2982+21])
                              Pexp_apply
                              expression (src/ppx.ml[104,2892+20]..[104,2892+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[104,2892+20]..[104,2892+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[104,2892+35]..[107,2982+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[105,2929+9]..[105,2929+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[105,2929+10]..[105,2929+28]),None)
                                      expression (src/ppx.ml[106,2960+9]..[106,2960+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[106,2960+10]..[106,2960+12]),None)
                                      expression (src/ppx.ml[106,2960+14]..[106,2960+15])
                                        Pexp_ident "a" (src/ppx.ml[106,2960+14]..[106,2960+15])
                                      expression (src/ppx.ml[106,2960+16]..[106,2960+20])
                                        Pexp_ident "myid" (src/ppx.ml[106,2960+16]..[106,2960+20])
                                      expression (src/ppx.ml[107,2982+9]..[107,2982+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[107,2982+10]..[107,2982+15]),None)
                                      expression (src/ppx.ml[107,2982+17]..[107,2982+18])
                                        Pexp_ident "b" (src/ppx.ml[107,2982+17]..[107,2982+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[109,3006+4]..[109,3006+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[109,3006+4]..[109,3006+14])
                  Some
                    []
                    pattern (src/ppx.ml[109,3006+15]..[109,3006+16])
                      Ppat_var "a" (src/ppx.ml[109,3006+15]..[109,3006+16])
                expression (src/ppx.ml[111,3054+4]..[111,3054+59])
                  Pexp_apply
                  expression (src/ppx.ml[111,3054+5]..[111,3054+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3054+5]..[111,3054+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3054+19]..[111,3054+58])
                        Pexp_apply
                        expression (src/ppx.ml[111,3054+20]..[111,3054+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3054+20]..[111,3054+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3054+35]..[111,3054+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[111,3054+37]..[111,3054+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3133+4]..[114,3133+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[114,3133+4]..[114,3133+12])
                  None
                expression (src/ppx.ml[114,3133+17]..[114,3133+69])
                  Pexp_apply
                  expression (src/ppx.ml[114,3133+18]..[114,3133+31])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3133+18]..[114,3133+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3133+32]..[114,3133+68])
                        Pexp_apply
                        expression (src/ppx.ml[114,3133+33]..[114,3133+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3133+33]..[114,3133+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3133+48]..[114,3133+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[114,3133+50]..[114,3133+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3203+4]..[115,3203+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[115,3203+4]..[115,3203+12])
                  Some
                    []
                    pattern (src/ppx.ml[115,3203+13]..[115,3203+17])
                      Ppat_var "name" (src/ppx.ml[115,3203+13]..[115,3203+17])
                expression (src/ppx.ml[115,3203+20]..[115,3203+80])
                  Pexp_apply
                  expression (src/ppx.ml[115,3203+21]..[115,3203+34])
                    Pexp_ident "print_endline" (src/ppx.ml[115,3203+21]..[115,3203+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[115,3203+35]..[115,3203+79])
                        Pexp_apply
                        expression (src/ppx.ml[115,3203+36]..[115,3203+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[115,3203+36]..[115,3203+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[115,3203+51]..[115,3203+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[115,3203+52]..[115,3203+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[115,3203+53]..[115,3203+68]),None)
                                expression (src/ppx.ml[115,3203+73]..[115,3203+77])
                                  Pexp_ident "name" (src/ppx.ml[115,3203+73]..[115,3203+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[116,3284+4]..[116,3284+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[116,3284+4]..[116,3284+14])
                  Some
                    []
                    pattern (src/ppx.ml[116,3284+15]..[116,3284+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[116,3284+16]..[116,3284+25])
                          Ppat_var "arg_label" (src/ppx.ml[116,3284+16]..[116,3284+25])
                        pattern (src/ppx.ml[116,3284+28]..[116,3284+37])
                          Ppat_var "core_type" (src/ppx.ml[116,3284+28]..[116,3284+37])
                        pattern (src/ppx.ml[116,3284+40]..[116,3284+50])
                          Ppat_var "core_type2" (src/ppx.ml[116,3284+40]..[116,3284+50])
                      ]
                expression (src/ppx.ml[117,3339+4]..[117,3339+61])
                  Pexp_apply
                  expression (src/ppx.ml[117,3339+5]..[117,3339+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3339+5]..[117,3339+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3339+19]..[117,3339+60])
                        Pexp_apply
                        expression (src/ppx.ml[117,3339+20]..[117,3339+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3339+20]..[117,3339+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3339+35]..[117,3339+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[117,3339+37]..[117,3339+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[119,3402+4]..[119,3402+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[119,3402+4]..[119,3402+15])
                  Some
                    []
                    pattern (src/ppx.ml[119,3402+16]..[119,3402+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[119,3402+17]..[119,3402+18])
                          Ppat_var "a" (src/ppx.ml[119,3402+17]..[119,3402+18])
                        pattern (src/ppx.ml[119,3402+19]..[119,3402+20])
                          Ppat_var "b" (src/ppx.ml[119,3402+19]..[119,3402+20])
                      ]
                expression (src/ppx.ml[121,3471+4]..[121,3471+60])
                  Pexp_apply
                  expression (src/ppx.ml[121,3471+5]..[121,3471+18])
                    Pexp_ident "print_endline" (src/ppx.ml[121,3471+5]..[121,3471+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[121,3471+19]..[121,3471+59])
                        Pexp_apply
                        expression (src/ppx.ml[121,3471+20]..[121,3471+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[121,3471+20]..[121,3471+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[121,3471+35]..[121,3471+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[121,3471+37]..[121,3471+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3532+4]..[122,3532+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[122,3532+4]..[122,3532+14])
                  Some
                    []
                    pattern (src/ppx.ml[122,3532+15]..[122,3532+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[122,3532+16]..[122,3532+17])
                          Ppat_var "a" (src/ppx.ml[122,3532+16]..[122,3532+17])
                        pattern (src/ppx.ml[122,3532+18]..[122,3532+19])
                          Ppat_var "b" (src/ppx.ml[122,3532+18]..[122,3532+19])
                      ]
                expression (src/ppx.ml[124,3602+4]..[124,3602+60])
                  Pexp_apply
                  expression (src/ppx.ml[124,3602+5]..[124,3602+18])
                    Pexp_ident "print_endline" (src/ppx.ml[124,3602+5]..[124,3602+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[124,3602+19]..[124,3602+59])
                        Pexp_apply
                        expression (src/ppx.ml[124,3602+20]..[124,3602+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[124,3602+20]..[124,3602+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[124,3602+35]..[124,3602+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[124,3602+37]..[124,3602+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[125,3663+4]..[125,3663+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[125,3663+4]..[125,3663+14])
                  Some
                    []
                    pattern (src/ppx.ml[125,3663+15]..[125,3663+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[125,3663+16]..[125,3663+17])
                          Ppat_var "a" (src/ppx.ml[125,3663+16]..[125,3663+17])
                        pattern (src/ppx.ml[125,3663+18]..[125,3663+19])
                          Ppat_var "b" (src/ppx.ml[125,3663+18]..[125,3663+19])
                      ]
                expression (src/ppx.ml[127,3724+4]..[127,3724+60])
                  Pexp_apply
                  expression (src/ppx.ml[127,3724+5]..[127,3724+18])
                    Pexp_ident "print_endline" (src/ppx.ml[127,3724+5]..[127,3724+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[127,3724+19]..[127,3724+59])
                        Pexp_apply
                        expression (src/ppx.ml[127,3724+20]..[127,3724+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[127,3724+20]..[127,3724+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[127,3724+35]..[127,3724+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[127,3724+37]..[127,3724+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[128,3785+4]..[128,3785+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[128,3785+4]..[128,3785+16])
                  Some
                    []
                    pattern (src/ppx.ml[128,3785+17]..[128,3785+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[128,3785+18]..[128,3785+19])
                          Ppat_var "a" (src/ppx.ml[128,3785+18]..[128,3785+19])
                        pattern (src/ppx.ml[128,3785+20]..[128,3785+21])
                          Ppat_var "b" (src/ppx.ml[128,3785+20]..[128,3785+21])
                        pattern (src/ppx.ml[128,3785+22]..[128,3785+23])
                          Ppat_var "c" (src/ppx.ml[128,3785+22]..[128,3785+23])
                      ]
                expression (src/ppx.ml[130,3875+4]..[130,3875+60])
                  Pexp_apply
                  expression (src/ppx.ml[130,3875+5]..[130,3875+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,3875+5]..[130,3875+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,3875+19]..[130,3875+59])
                        Pexp_apply
                        expression (src/ppx.ml[130,3875+20]..[130,3875+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,3875+20]..[130,3875+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,3875+35]..[130,3875+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[130,3875+37]..[130,3875+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[131,3936+4]..[131,3936+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[131,3936+4]..[131,3936+13])
                  Some
                    []
                    pattern (src/ppx.ml[131,3936+14]..[131,3936+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[131,3936+15]..[131,3936+16])
                          Ppat_var "a" (src/ppx.ml[131,3936+15]..[131,3936+16])
                        pattern (src/ppx.ml[131,3936+17]..[131,3936+18])
                          Ppat_var "b" (src/ppx.ml[131,3936+17]..[131,3936+18])
                      ]
                expression (src/ppx.ml[133,4000+4]..[133,4000+60])
                  Pexp_apply
                  expression (src/ppx.ml[133,4000+5]..[133,4000+18])
                    Pexp_ident "print_endline" (src/ppx.ml[133,4000+5]..[133,4000+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[133,4000+19]..[133,4000+59])
                        Pexp_apply
                        expression (src/ppx.ml[133,4000+20]..[133,4000+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[133,4000+20]..[133,4000+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[133,4000+35]..[133,4000+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[133,4000+37]..[133,4000+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[134,4061+4]..[134,4061+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[134,4061+4]..[134,4061+16])
                  Some
                    []
                    pattern (src/ppx.ml[134,4061+17]..[134,4061+18])
                      Ppat_var "a" (src/ppx.ml[134,4061+17]..[134,4061+18])
                expression (src/ppx.ml[136,4109+4]..[136,4109+62])
                  Pexp_apply
                  expression (src/ppx.ml[136,4109+5]..[136,4109+18])
                    Pexp_ident "print_endline" (src/ppx.ml[136,4109+5]..[136,4109+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[136,4109+19]..[136,4109+61])
                        Pexp_apply
                        expression (src/ppx.ml[136,4109+20]..[136,4109+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[136,4109+20]..[136,4109+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[136,4109+35]..[136,4109+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[136,4109+36]..[136,4109+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[136,4109+37]..[136,4109+55]),None)
                                expression (src/ppx.ml[136,4109+57]..[136,4109+58])
                                  Pexp_ident "a" (src/ppx.ml[136,4109+57]..[136,4109+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[139,4317+4]..[139,4317+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[139,4317+4]..[139,4317+18])
                  Some
                    []
                    pattern (src/ppx.ml[139,4317+19]..[139,4317+20])
                      Ppat_var "a" (src/ppx.ml[139,4317+19]..[139,4317+20])
                expression (src/ppx.ml[140,4365+4]..[140,4365+65])
                  Pexp_apply
                  expression (src/ppx.ml[140,4365+5]..[140,4365+18])
                    Pexp_ident "print_endline" (src/ppx.ml[140,4365+5]..[140,4365+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[140,4365+19]..[140,4365+64])
                        Pexp_apply
                        expression (src/ppx.ml[140,4365+20]..[140,4365+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[140,4365+20]..[140,4365+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[140,4365+35]..[140,4365+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[140,4365+36]..[140,4365+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[140,4365+37]..[140,4365+58]),None)
                                expression (src/ppx.ml[140,4365+60]..[140,4365+61])
                                  Pexp_ident "a" (src/ppx.ml[140,4365+60]..[140,4365+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[142,4435+2]..[142,4435+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[142,4435+2]..[142,4435+26])
        expression (src/ppx.ml[142,4435+26]..[148,4572+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[142,4435+26]..[142,4435+29])
            Ppat_var "x" (src/ppx.ml[142,4435+27]..[142,4435+28])
          expression (src/ppx.ml[143,4467+2]..[148,4572+6])
            Pexp_match
            expression (src/ppx.ml[143,4467+8]..[143,4467+9])
              Pexp_ident "x" (src/ppx.ml[143,4467+8]..[143,4467+9])
            [
              <case>
                pattern (src/ppx.ml[144,4482+4]..[144,4482+6])
                  Ppat_construct "[]" (src/ppx.ml[144,4482+4]..[144,4482+6])
                  None
                expression (src/ppx.ml[144,4482+10]..[144,4482+12])
                  Pexp_construct "()" (src/ppx.ml[144,4482+10]..[144,4482+12])
                  None
              <case>
                pattern (src/ppx.ml[145,4495+4]..[145,4495+10])
                  Ppat_construct "::" (src/ppx.ml[145,4495+6]..[145,4495+8])
                  Some
                    []
                    pattern (src/ppx.ml[145,4495+4]..[145,4495+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[145,4495+4]..[145,4495+5])
                          Ppat_var "h" (src/ppx.ml[145,4495+4]..[145,4495+5])
                        pattern (src/ppx.ml[145,4495+9]..[145,4495+10])
                          Ppat_var "t" (src/ppx.ml[145,4495+9]..[145,4495+10])
                      ]
                expression (src/ppx.ml[146,4509+4]..[148,4572+6])
                  Pexp_sequence
                  expression (src/ppx.ml[146,4509+4]..[146,4509+27])
                    Pexp_apply
                    expression (src/ppx.ml[146,4509+5]..[146,4509+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[146,4509+5]..[146,4509+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[146,4509+25]..[146,4509+26])
                          Pexp_ident "h" (src/ppx.ml[146,4509+25]..[146,4509+26])
                    ]
                  expression (src/ppx.ml[147,4538+4]..[148,4572+6])
                    Pexp_sequence
                    expression (src/ppx.ml[147,4538+4]..[147,4538+32])
                      Pexp_apply
                      expression (src/ppx.ml[147,4538+5]..[147,4538+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[147,4538+5]..[147,4538+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[147,4538+30]..[147,4538+31])
                            Pexp_ident "t" (src/ppx.ml[147,4538+30]..[147,4538+31])
                      ]
                    expression (src/ppx.ml[148,4572+4]..[148,4572+6])
                      Pexp_construct "()" (src/ppx.ml[148,4572+4]..[148,4572+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[150,4583+0]..[150,4583+17])
          Ppat_var "process_core_type" (src/ppx.ml[150,4583+0]..[150,4583+17])
        expression (src/ppx.ml[150,4583+17]..[160,4850+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[150,4583+17]..[150,4583+20])
            Ppat_var "x" (src/ppx.ml[150,4583+18]..[150,4583+19])
          expression (src/ppx.ml[151,4606+2]..[160,4850+80])
            Pexp_match
            expression (src/ppx.ml[151,4606+8]..[151,4606+9])
              Pexp_ident "x" (src/ppx.ml[151,4606+8]..[151,4606+9])
            [
              <case>
                pattern (src/ppx.ml[152,4622+4]..[157,4783+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[153,4628+6]..[153,4628+15]) ghost
                      pattern (src/ppx.ml[153,4628+6]..[153,4628+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[153,4628+6]..[153,4628+15])
                    "ptyp_loc" (src/ppx.ml[154,4667+5]..[154,4667+13]) ghost
                      pattern (src/ppx.ml[154,4667+5]..[154,4667+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[154,4667+5]..[154,4667+13])
                    "ptyp_loc_stack" (src/ppx.ml[155,4700+5]..[155,4700+19]) ghost
                      pattern (src/ppx.ml[155,4700+5]..[155,4700+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[155,4700+5]..[155,4700+19])
                    "ptyp_attributes" (src/ppx.ml[156,4743+5]..[156,4743+20]) ghost
                      pattern (src/ppx.ml[156,4743+5]..[156,4743+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[156,4743+5]..[156,4743+20])
                  ]
                expression (src/ppx.ml[158,4791+4]..[160,4850+80])
                  Pexp_sequence
                  expression (src/ppx.ml[158,4791+4]..[158,4791+38])
                    Pexp_apply
                    expression (src/ppx.ml[158,4791+5]..[158,4791+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[158,4791+5]..[158,4791+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[158,4791+28]..[158,4791+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[158,4791+28]..[158,4791+37])
                    ]
                  expression (src/ppx.ml[160,4850+4]..[160,4850+80])
                    Pexp_apply
                    expression (src/ppx.ml[160,4850+5]..[160,4850+18])
                      Pexp_ident "print_endline" (src/ppx.ml[160,4850+5]..[160,4850+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[160,4850+19]..[160,4850+79])
                          Pexp_apply
                          expression (src/ppx.ml[160,4850+20]..[160,4850+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[160,4850+20]..[160,4850+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[160,4850+35]..[160,4850+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[160,4850+36]..[160,4850+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[160,4850+37]..[160,4850+63]),None)
                                  expression (src/ppx.ml[160,4850+68]..[160,4850+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[160,4850+68]..[160,4850+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[161,4931+4]..[161,4931+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[161,4931+4]..[161,4931+26])
        expression (src/ppx.ml[161,4931+26]..[166,5047+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[161,4931+26]..[161,4931+44])
            Ppat_constraint
            pattern (src/ppx.ml[161,4931+27]..[161,4931+28])
              Ppat_var "x" (src/ppx.ml[161,4931+27]..[161,4931+28])
            core_type (src/ppx.ml[161,4931+29]..[161,4931+43])
              Ptyp_constr "list" (src/ppx.ml[161,4931+39]..[161,4931+43])
              [
                core_type (src/ppx.ml[161,4931+29]..[161,4931+38])
                  Ptyp_constr "core_type" (src/ppx.ml[161,4931+29]..[161,4931+38])
                  []
              ]
          expression (src/ppx.ml[162,4978+2]..[166,5047+29])
            Pexp_match
            expression (src/ppx.ml[162,4978+8]..[162,4978+9])
              Pexp_ident "x" (src/ppx.ml[162,4978+8]..[162,4978+9])
            [
              <case>
                pattern (src/ppx.ml[163,4993+4]..[163,4993+6])
                  Ppat_construct "[]" (src/ppx.ml[163,4993+4]..[163,4993+6])
                  None
                expression (src/ppx.ml[163,4993+10]..[163,4993+12])
                  Pexp_construct "()" (src/ppx.ml[163,4993+10]..[163,4993+12])
                  None
              <case>
                pattern (src/ppx.ml[164,5006+4]..[164,5006+10])
                  Ppat_construct "::" (src/ppx.ml[164,5006+6]..[164,5006+8])
                  Some
                    []
                    pattern (src/ppx.ml[164,5006+4]..[164,5006+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[164,5006+4]..[164,5006+5])
                          Ppat_var "h" (src/ppx.ml[164,5006+4]..[164,5006+5])
                        pattern (src/ppx.ml[164,5006+9]..[164,5006+10])
                          Ppat_var "t" (src/ppx.ml[164,5006+9]..[164,5006+10])
                      ]
                expression (src/ppx.ml[165,5020+4]..[166,5047+29])
                  Pexp_sequence
                  expression (src/ppx.ml[165,5020+4]..[165,5020+25])
                    Pexp_apply
                    expression (src/ppx.ml[165,5020+4]..[165,5020+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[165,5020+4]..[165,5020+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,5020+22]..[165,5020+25])
                          Pexp_ident "h" (src/ppx.ml[165,5020+23]..[165,5020+24])
                    ]
                  expression (src/ppx.ml[166,5047+4]..[166,5047+29])
                    Pexp_apply
                    expression (src/ppx.ml[166,5047+4]..[166,5047+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,5047+4]..[166,5047+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,5047+26]..[166,5047+29])
                          Pexp_ident "t" (src/ppx.ml[166,5047+27]..[166,5047+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[173,5091+0]..[180,5290+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[173,5091+4]..[173,5091+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[173,5091+4]..[173,5091+31])
        expression (src/ppx.ml[173,5091+31]..[180,5290+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[173,5091+31]..[173,5091+34])
            Ppat_var "x" (src/ppx.ml[173,5091+32]..[173,5091+33])
          expression (src/ppx.ml[174,5128+2]..[180,5290+65])
            Pexp_match
            expression (src/ppx.ml[174,5128+8]..[174,5128+9])
              Pexp_ident "x" (src/ppx.ml[174,5128+8]..[174,5128+9])
            [
              <case>
                pattern (src/ppx.ml[175,5143+4]..[175,5143+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[175,5143+4]..[175,5143+15])
                  Some
                    []
                    pattern (src/ppx.ml[175,5143+16]..[175,5143+17])
                      Ppat_var "a" (src/ppx.ml[175,5143+16]..[175,5143+17])
                expression (src/ppx.ml[176,5164+4]..[177,5196+64])
                  Pexp_sequence
                  expression (src/ppx.ml[176,5164+4]..[176,5164+30])
                    Pexp_apply
                    expression (src/ppx.ml[176,5164+5]..[176,5164+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[176,5164+5]..[176,5164+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[176,5164+28]..[176,5164+29])
                          Pexp_ident "a" (src/ppx.ml[176,5164+28]..[176,5164+29])
                    ]
                  expression (src/ppx.ml[177,5196+4]..[177,5196+64])
                    Pexp_apply
                    expression (src/ppx.ml[177,5196+5]..[177,5196+18])
                      Pexp_ident "print_endline" (src/ppx.ml[177,5196+5]..[177,5196+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[177,5196+19]..[177,5196+63])
                          Pexp_apply
                          expression (src/ppx.ml[177,5196+20]..[177,5196+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[177,5196+20]..[177,5196+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[177,5196+35]..[177,5196+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[177,5196+36]..[177,5196+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[177,5196+37]..[177,5196+55]),None)
                                  expression (src/ppx.ml[177,5196+60]..[177,5196+61])
                                    Pexp_ident "a" (src/ppx.ml[177,5196+60]..[177,5196+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[179,5268+4]..[179,5268+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[179,5268+4]..[179,5268+16])
                  Some
                    []
                    pattern (src/ppx.ml[179,5268+17]..[179,5268+18])
                      Ppat_var "a" (src/ppx.ml[179,5268+17]..[179,5268+18])
                expression (src/ppx.ml[180,5290+4]..[180,5290+65])
                  Pexp_apply
                  expression (src/ppx.ml[180,5290+5]..[180,5290+18])
                    Pexp_ident "print_endline" (src/ppx.ml[180,5290+5]..[180,5290+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[180,5290+19]..[180,5290+64])
                        Pexp_apply
                        expression (src/ppx.ml[180,5290+20]..[180,5290+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[180,5290+20]..[180,5290+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[180,5290+35]..[180,5290+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[180,5290+36]..[180,5290+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[180,5290+37]..[180,5290+56]),None)
                                expression (src/ppx.ml[180,5290+61]..[180,5290+62])
                                  Pexp_ident "a" (src/ppx.ml[180,5290+61]..[180,5290+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[182,5357+0]..[214,6333+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[182,5357+8]..[182,5357+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[182,5357+8]..[182,5357+57])
        expression (src/ppx.ml[182,5357+57]..[214,6333+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[182,5357+57]..[182,5357+60])
            Ppat_var "x" (src/ppx.ml[182,5357+58]..[182,5357+59])
          expression (src/ppx.ml[183,5420+2]..[214,6333+8])
            Pexp_match
            expression (src/ppx.ml[183,5420+8]..[183,5420+9])
              Pexp_ident "x" (src/ppx.ml[183,5420+8]..[183,5420+9])
            [
              <case>
                pattern (src/ppx.ml[184,5435+4]..[184,5435+6])
                  Ppat_construct "[]" (src/ppx.ml[184,5435+4]..[184,5435+6])
                  None
                expression (src/ppx.ml[184,5435+10]..[184,5435+12])
                  Pexp_construct "()" (src/ppx.ml[184,5435+10]..[184,5435+12])
                  None
              <case>
                pattern (src/ppx.ml[185,5448+4]..[185,5448+10])
                  Ppat_construct "::" (src/ppx.ml[185,5448+6]..[185,5448+8])
                  Some
                    []
                    pattern (src/ppx.ml[185,5448+4]..[185,5448+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[185,5448+4]..[185,5448+5])
                          Ppat_var "h" (src/ppx.ml[185,5448+4]..[185,5448+5])
                        pattern (src/ppx.ml[185,5448+9]..[185,5448+10])
                          Ppat_var "t" (src/ppx.ml[185,5448+9]..[185,5448+10])
                      ]
                expression (src/ppx.ml[187,5527+4]..[214,6333+8])
                  Pexp_match
                  expression (src/ppx.ml[187,5527+10]..[187,5527+11])
                    Pexp_ident "h" (src/ppx.ml[187,5527+10]..[187,5527+11])
                  [
                    <case>
                      pattern (src/ppx.ml[188,5544+5]..[195,5782+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[189,5551+6]..[189,5551+14]) ghost
                            pattern (src/ppx.ml[189,5551+6]..[189,5551+14])
                              Ppat_var "pcd_name" (src/ppx.ml[189,5551+6]..[189,5551+14])
                          "pcd_vars" (src/ppx.ml[190,5585+6]..[190,5585+14]) ghost
                            pattern (src/ppx.ml[190,5585+6]..[190,5585+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[190,5585+6]..[190,5585+14])
                          "pcd_args" (src/ppx.ml[191,5624+6]..[191,5624+14]) ghost
                            pattern (src/ppx.ml[191,5624+6]..[191,5624+14])
                              Ppat_var "pcd_args" (src/ppx.ml[191,5624+6]..[191,5624+14])
                          "pcd_res" (src/ppx.ml[192,5669+6]..[192,5669+13]) ghost
                            pattern (src/ppx.ml[192,5669+6]..[192,5669+13])
                              Ppat_var "pcd_res" (src/ppx.ml[192,5669+6]..[192,5669+13])
                          "pcd_loc" (src/ppx.ml[193,5708+6]..[193,5708+13]) ghost
                            pattern (src/ppx.ml[193,5708+6]..[193,5708+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[193,5708+6]..[193,5708+13])
                          "pcd_attributes" (src/ppx.ml[194,5741+6]..[194,5741+20]) ghost
                            pattern (src/ppx.ml[194,5741+6]..[194,5741+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[194,5741+6]..[194,5741+20])
                        ]
                      expression (src/ppx.ml[198,5864+6]..[214,6333+8])
                        Pexp_sequence
                        expression (src/ppx.ml[198,5864+6]..[198,5864+43])
                          Pexp_apply
                          expression (src/ppx.ml[198,5864+6]..[198,5864+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[198,5864+6]..[198,5864+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[198,5864+33]..[198,5864+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[198,5864+34]..[198,5864+42])
                          ]
                        expression (src/ppx.ml[199,5909+6]..[214,6333+8])
                          Pexp_sequence
                          expression (src/ppx.ml[199,5909+6]..[212,6254+16])
                            Pexp_apply
                            expression (src/ppx.ml[199,5909+7]..[199,5909+20])
                              Pexp_ident "print_endline" (src/ppx.ml[199,5909+7]..[199,5909+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[199,5909+21]..[212,6254+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[199,5909+22]..[199,5909+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[199,5909+22]..[199,5909+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[199,5909+37]..[212,6254+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[200,5948+11]..[200,5948+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[200,5948+12]..[200,5948+36]),None)
                                          expression (src/ppx.ml[201,5987+15]..[201,5987+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[201,5987+15]..[201,5987+23])
                                          expression (src/ppx.ml[202,6012+15]..[202,6012+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[202,6012+16]..[202,6012+20]),None)
                                          expression (src/ppx.ml[203,6035+15]..[203,6035+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[203,6035+15]..[203,6035+23])
                                          expression (src/ppx.ml[204,6060+15]..[204,6060+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[204,6060+16]..[204,6060+20]),None)
                                          expression (src/ppx.ml[205,6083+15]..[205,6083+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[205,6083+15]..[205,6083+23])
                                          expression (src/ppx.ml[206,6108+15]..[206,6108+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[206,6108+16]..[206,6108+19]),None)
                                          expression (src/ppx.ml[207,6130+15]..[207,6130+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[207,6130+15]..[207,6130+22])
                                          expression (src/ppx.ml[208,6154+15]..[208,6154+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[208,6154+16]..[208,6154+19]),None)
                                          expression (src/ppx.ml[209,6176+15]..[209,6176+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[209,6176+15]..[209,6176+22])
                                          expression (src/ppx.ml[210,6200+15]..[210,6200+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[210,6200+16]..[210,6200+21]),None)
                                          expression (src/ppx.ml[211,6224+15]..[211,6224+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[211,6224+15]..[211,6224+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[213,6272+6]..[214,6333+8])
                            Pexp_sequence
                            expression (src/ppx.ml[213,6272+6]..[213,6272+59])
                              Pexp_apply
                              expression (src/ppx.ml[213,6272+7]..[213,6272+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[213,6272+7]..[213,6272+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[213,6272+57]..[213,6272+58])
                                    Pexp_ident "t" (src/ppx.ml[213,6272+57]..[213,6272+58])
                              ]
                            expression (src/ppx.ml[214,6333+6]..[214,6333+8])
                              Pexp_construct "()" (src/ppx.ml[214,6333+6]..[214,6333+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[216,6345+0]..[227,6742+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[216,6345+4]..[216,6345+16])
          Ppat_var "process_kind" (src/ppx.ml[216,6345+4]..[216,6345+16])
        expression (src/ppx.ml[216,6345+16]..[227,6742+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[216,6345+16]..[216,6345+19])
            Ppat_var "x" (src/ppx.ml[216,6345+17]..[216,6345+18])
          expression (src/ppx.ml[217,6367+2]..[227,6742+77])
            Pexp_match
            expression (src/ppx.ml[217,6367+8]..[217,6367+9])
              Pexp_ident "x" (src/ppx.ml[217,6367+8]..[217,6367+9])
            [
              <case>
                pattern (src/ppx.ml[219,6404+4]..[219,6404+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[219,6404+4]..[219,6404+18])
                  None
                expression (src/ppx.ml[219,6404+23]..[219,6404+81])
                  Pexp_apply
                  expression (src/ppx.ml[219,6404+24]..[219,6404+37])
                    Pexp_ident "print_endline" (src/ppx.ml[219,6404+24]..[219,6404+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[219,6404+38]..[219,6404+80])
                        Pexp_apply
                        expression (src/ppx.ml[219,6404+39]..[219,6404+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[219,6404+39]..[219,6404+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[219,6404+54]..[219,6404+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[219,6404+56]..[219,6404+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[220,6486+4]..[220,6486+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[220,6486+4]..[220,6486+17])
                  Some
                    []
                    pattern (src/ppx.ml[220,6486+18]..[220,6486+19])
                      Ppat_var "a" (src/ppx.ml[220,6486+18]..[220,6486+19])
                expression (src/ppx.ml[221,6509+4]..[222,6568+65])
                  Pexp_sequence
                  expression (src/ppx.ml[221,6509+4]..[221,6509+57])
                    Pexp_apply
                    expression (src/ppx.ml[221,6509+5]..[221,6509+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[221,6509+5]..[221,6509+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[221,6509+55]..[221,6509+56])
                          Pexp_ident "a" (src/ppx.ml[221,6509+55]..[221,6509+56])
                    ]
                  expression (src/ppx.ml[222,6568+4]..[222,6568+65])
                    Pexp_apply
                    expression (src/ppx.ml[222,6568+5]..[222,6568+18])
                      Pexp_ident "print_endline" (src/ppx.ml[222,6568+5]..[222,6568+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[222,6568+19]..[222,6568+64])
                          Pexp_apply
                          expression (src/ppx.ml[222,6568+20]..[222,6568+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[222,6568+20]..[222,6568+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[222,6568+35]..[222,6568+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[222,6568+36]..[222,6568+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[222,6568+37]..[222,6568+57]),None)
                                  expression (src/ppx.ml[222,6568+61]..[222,6568+62])
                                    Pexp_ident "a" (src/ppx.ml[222,6568+61]..[222,6568+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[225,6681+5]..[225,6681+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[225,6681+5]..[225,6681+17])
                  Some
                    []
                    pattern (src/ppx.ml[225,6681+18]..[225,6681+19])
                      Ppat_var "a" (src/ppx.ml[225,6681+18]..[225,6681+19])
                expression (src/ppx.ml[226,6709+5]..[226,6709+32])
                  Pexp_apply
                  expression (src/ppx.ml[226,6709+5]..[226,6709+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[226,6709+5]..[226,6709+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[226,6709+29]..[226,6709+32])
                        Pexp_ident "a" (src/ppx.ml[226,6709+30]..[226,6709+31])
                  ]
              <case>
                pattern (src/ppx.ml[227,6742+5]..[227,6742+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[227,6742+5]..[227,6742+15])
                  None
                expression (src/ppx.ml[227,6742+19]..[227,6742+77])
                  Pexp_apply
                  expression (src/ppx.ml[227,6742+20]..[227,6742+33])
                    Pexp_ident "print_endline" (src/ppx.ml[227,6742+20]..[227,6742+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[227,6742+34]..[227,6742+76])
                        Pexp_apply
                        expression (src/ppx.ml[227,6742+35]..[227,6742+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[227,6742+35]..[227,6742+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[227,6742+50]..[227,6742+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[227,6742+52]..[227,6742+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[229,6821+0]..[250,7827+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[229,6821+4]..[229,6821+19])
          Ppat_var "print_type_decl" (src/ppx.ml[229,6821+4]..[229,6821+19])
        expression (src/ppx.ml[229,6821+19]..[250,7827+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[229,6821+19]..[229,6821+22])
            Ppat_var "x" (src/ppx.ml[229,6821+20]..[229,6821+21])
          expression (src/ppx.ml[230,6846+2]..[250,7827+38])
            Pexp_match
            expression (src/ppx.ml[230,6846+8]..[230,6846+9])
              Pexp_ident "x" (src/ppx.ml[230,6846+8]..[230,6846+9])
            [
              <case>
                pattern (src/ppx.ml[231,6861+4]..[240,7242+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[232,6867+6]..[232,6867+16]) ghost
                      pattern (src/ppx.ml[232,6867+6]..[232,6867+16])
                        Ppat_var "ptype_name" (src/ppx.ml[232,6867+6]..[232,6867+16])
                    "ptype_params" (src/ppx.ml[233,6904+6]..[233,6904+18]) ghost
                      pattern (src/ppx.ml[233,6904+6]..[233,6904+18])
                        Ppat_var "ptype_params" (src/ppx.ml[233,6904+6]..[233,6904+18])
                    "ptype_cstrs" (src/ppx.ml[234,6976+6]..[234,6976+17]) ghost
                      pattern (src/ppx.ml[234,6976+6]..[234,6976+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[234,6976+6]..[234,6976+17])
                    "ptype_kind" (src/ppx.ml[235,7045+6]..[235,7045+16]) ghost
                      pattern (src/ppx.ml[235,7045+6]..[235,7045+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[235,7045+6]..[235,7045+16])
                    "ptype_private" (src/ppx.ml[236,7082+6]..[236,7082+19]) ghost
                      pattern (src/ppx.ml[236,7082+6]..[236,7082+19])
                        Ppat_var "ptype_private" (src/ppx.ml[236,7082+6]..[236,7082+19])
                    "ptype_manifest" (src/ppx.ml[237,7123+6]..[237,7123+20]) ghost
                      pattern (src/ppx.ml[237,7123+6]..[237,7123+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[237,7123+6]..[237,7123+20])
                    "ptype_attributes" (src/ppx.ml[238,7170+6]..[238,7170+22]) ghost
                      pattern (src/ppx.ml[238,7170+6]..[238,7170+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[238,7170+6]..[238,7170+22])
                    "ptype_loc" (src/ppx.ml[239,7211+6]..[239,7211+15]) ghost
                      pattern (src/ppx.ml[239,7211+6]..[239,7211+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[239,7211+6]..[239,7211+15])
                  ]
                expression (src/ppx.ml[241,7251+4]..[250,7827+38])
                  Pexp_sequence
                  expression (src/ppx.ml[241,7251+4]..[241,7251+69])
                    Pexp_apply
                    expression (src/ppx.ml[241,7251+5]..[241,7251+18])
                      Pexp_ident "print_endline" (src/ppx.ml[241,7251+5]..[241,7251+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[241,7251+19]..[241,7251+68])
                          Pexp_apply
                          expression (src/ppx.ml[241,7251+20]..[241,7251+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[241,7251+20]..[241,7251+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[241,7251+35]..[241,7251+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[241,7251+36]..[241,7251+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[241,7251+37]..[241,7251+53]),None)
                                  expression (src/ppx.ml[241,7251+56]..[241,7251+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[241,7251+56]..[241,7251+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[242,7322+4]..[250,7827+38])
                    Pexp_sequence
                    expression (src/ppx.ml[242,7322+4]..[242,7322+72])
                      Pexp_apply
                      expression (src/ppx.ml[242,7322+5]..[242,7322+18])
                        Pexp_ident "print_endline" (src/ppx.ml[242,7322+5]..[242,7322+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[242,7322+19]..[242,7322+71])
                            Pexp_apply
                            expression (src/ppx.ml[242,7322+20]..[242,7322+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[242,7322+20]..[242,7322+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[242,7322+35]..[242,7322+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[242,7322+36]..[242,7322+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[242,7322+37]..[242,7322+54]),None)
                                    expression (src/ppx.ml[242,7322+57]..[242,7322+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[242,7322+57]..[242,7322+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[243,7396+4]..[250,7827+38])
                      Pexp_sequence
                      expression (src/ppx.ml[243,7396+4]..[243,7396+66])
                        Pexp_apply
                        expression (src/ppx.ml[243,7396+5]..[243,7396+18])
                          Pexp_ident "print_endline" (src/ppx.ml[243,7396+5]..[243,7396+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[243,7396+19]..[243,7396+65])
                              Pexp_apply
                              expression (src/ppx.ml[243,7396+20]..[243,7396+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[243,7396+20]..[243,7396+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[243,7396+35]..[243,7396+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[243,7396+36]..[243,7396+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[243,7396+37]..[243,7396+49]),None)
                                      expression (src/ppx.ml[243,7396+52]..[243,7396+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[243,7396+52]..[243,7396+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[244,7464+4]..[250,7827+38])
                        Pexp_sequence
                        expression (src/ppx.ml[244,7464+4]..[244,7464+63])
                          Pexp_apply
                          expression (src/ppx.ml[244,7464+5]..[244,7464+18])
                            Pexp_ident "print_endline" (src/ppx.ml[244,7464+5]..[244,7464+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[244,7464+19]..[244,7464+62])
                                Pexp_apply
                                expression (src/ppx.ml[244,7464+20]..[244,7464+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[244,7464+20]..[244,7464+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[244,7464+35]..[244,7464+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[244,7464+36]..[244,7464+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[244,7464+37]..[244,7464+48]),None)
                                        expression (src/ppx.ml[244,7464+50]..[244,7464+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[244,7464+50]..[244,7464+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[245,7529+4]..[250,7827+38])
                          Pexp_sequence
                          expression (src/ppx.ml[245,7529+4]..[245,7529+29])
                            Pexp_apply
                            expression (src/ppx.ml[245,7529+5]..[245,7529+17])
                              Pexp_ident "process_kind" (src/ppx.ml[245,7529+5]..[245,7529+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,7529+18]..[245,7529+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[245,7529+18]..[245,7529+28])
                            ]
                          expression (src/ppx.ml[246,7560+4]..[250,7827+38])
                            Pexp_apply
                            expression (src/ppx.ml[246,7560+5]..[246,7560+18])
                              Pexp_ident "print_endline" (src/ppx.ml[246,7560+5]..[246,7560+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[246,7560+19]..[250,7827+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[246,7560+20]..[246,7560+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[246,7560+20]..[246,7560+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[246,7560+35]..[250,7827+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[246,7560+36]..[246,7560+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[246,7560+37]..[246,7560+51]),None)
                                          expression (src/ppx.ml[246,7560+55]..[246,7560+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[246,7560+55]..[246,7560+68])
                                          expression (src/ppx.ml[247,7630+36]..[247,7630+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[247,7630+37]..[247,7630+51]),None)
                                          expression (src/ppx.ml[247,7630+54]..[247,7630+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[247,7630+54]..[247,7630+68])
                                          expression (src/ppx.ml[248,7700+36]..[248,7700+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[248,7700+37]..[248,7700+47]),None)
                                          expression (src/ppx.ml[248,7700+50]..[248,7700+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[248,7700+50]..[248,7700+66])
                                          expression (src/ppx.ml[249,7768+36]..[249,7768+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[249,7768+37]..[249,7768+46]),None)
                                          expression (src/ppx.ml[249,7768+49]..[249,7768+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[249,7768+49]..[249,7768+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[252,7871+0]..[258,8006+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[252,7871+8]..[252,7871+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[252,7871+8]..[252,7871+30])
        expression (src/ppx.ml[252,7871+30]..[258,8006+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[252,7871+30]..[252,7871+33])
            Ppat_var "x" (src/ppx.ml[252,7871+31]..[252,7871+32])
          expression (src/ppx.ml[253,7907+2]..[258,8006+6])
            Pexp_match
            expression (src/ppx.ml[253,7907+8]..[253,7907+9])
              Pexp_ident "x" (src/ppx.ml[253,7907+8]..[253,7907+9])
            [
              <case>
                pattern (src/ppx.ml[254,7922+4]..[254,7922+6])
                  Ppat_construct "[]" (src/ppx.ml[254,7922+4]..[254,7922+6])
                  None
                expression (src/ppx.ml[254,7922+10]..[254,7922+12])
                  Pexp_construct "()" (src/ppx.ml[254,7922+10]..[254,7922+12])
                  None
              <case>
                pattern (src/ppx.ml[255,7935+4]..[255,7935+10])
                  Ppat_construct "::" (src/ppx.ml[255,7935+6]..[255,7935+8])
                  Some
                    []
                    pattern (src/ppx.ml[255,7935+4]..[255,7935+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[255,7935+4]..[255,7935+5])
                          Ppat_var "h" (src/ppx.ml[255,7935+4]..[255,7935+5])
                        pattern (src/ppx.ml[255,7935+9]..[255,7935+10])
                          Ppat_var "t" (src/ppx.ml[255,7935+9]..[255,7935+10])
                      ]
                expression (src/ppx.ml[256,7949+4]..[258,8006+6])
                  Pexp_sequence
                  expression (src/ppx.ml[256,7949+4]..[256,7949+23])
                    Pexp_apply
                    expression (src/ppx.ml[256,7949+5]..[256,7949+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[256,7949+5]..[256,7949+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[256,7949+21]..[256,7949+22])
                          Pexp_ident "h" (src/ppx.ml[256,7949+21]..[256,7949+22])
                    ]
                  expression (src/ppx.ml[257,7974+4]..[258,8006+6])
                    Pexp_sequence
                    expression (src/ppx.ml[257,7974+4]..[257,7974+30])
                      Pexp_apply
                      expression (src/ppx.ml[257,7974+5]..[257,7974+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[257,7974+5]..[257,7974+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,7974+28]..[257,7974+29])
                            Pexp_ident "t" (src/ppx.ml[257,7974+28]..[257,7974+29])
                      ]
                    expression (src/ppx.ml[258,8006+4]..[258,8006+6])
                      Pexp_construct "()" (src/ppx.ml[258,8006+4]..[258,8006+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[260,8018+0]..[286,9982+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[260,8018+4]..[260,8018+13])
          Ppat_var "printdesc" (src/ppx.ml[260,8018+4]..[260,8018+13])
        expression (src/ppx.ml[260,8018+13]..[286,9982+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[260,8018+13]..[260,8018+37])
            Ppat_constraint
            pattern (src/ppx.ml[260,8018+14]..[260,8018+15])
              Ppat_var "x" (src/ppx.ml[260,8018+14]..[260,8018+15])
            core_type (src/ppx.ml[260,8018+17]..[260,8018+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[260,8018+17]..[260,8018+36])
              []
          expression (src/ppx.ml[260,8018+38]..[286,9982+128])
            Pexp_constraint
            expression (src/ppx.ml[261,8064+2]..[286,9982+128])
              Pexp_sequence
              expression (src/ppx.ml[261,8064+2]..[261,8064+68])
                Pexp_apply
                expression (src/ppx.ml[261,8064+3]..[261,8064+16])
                  Pexp_ident "print_endline" (src/ppx.ml[261,8064+3]..[261,8064+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[261,8064+17]..[261,8064+67])
                      Pexp_apply
                      expression (src/ppx.ml[261,8064+18]..[261,8064+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[261,8064+18]..[261,8064+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[261,8064+33]..[261,8064+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[261,8064+34]..[261,8064+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[261,8064+35]..[261,8064+61]),None)
                              expression (src/ppx.ml[261,8064+64]..[261,8064+65])
                                Pexp_ident "x" (src/ppx.ml[261,8064+64]..[261,8064+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[262,8134+2]..[286,9982+128])
                Pexp_match
                expression (src/ppx.ml[262,8134+8]..[262,8134+9])
                  Pexp_ident "x" (src/ppx.ml[262,8134+8]..[262,8134+9])
                [
                  <case>
                    pattern (src/ppx.ml[263,8149+4]..[263,8149+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[263,8149+4]..[263,8149+13])
                      Some
                        []
                        pattern (src/ppx.ml[263,8149+14]..[263,8149+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[263,8149+15]..[263,8149+25])
                              Ppat_var "expression" (src/ppx.ml[263,8149+15]..[263,8149+25])
                            pattern (src/ppx.ml[263,8149+26]..[263,8149+36])
                              Ppat_var "attributes" (src/ppx.ml[263,8149+26]..[263,8149+36])
                          ]
                    expression (src/ppx.ml[263,8149+41]..[263,8149+117])
                      Pexp_apply
                      expression (src/ppx.ml[263,8149+42]..[263,8149+55])
                        Pexp_ident "print_endline" (src/ppx.ml[263,8149+42]..[263,8149+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[263,8149+56]..[263,8149+116])
                            Pexp_apply
                            expression (src/ppx.ml[263,8149+57]..[263,8149+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[263,8149+57]..[263,8149+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[263,8149+72]..[263,8149+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[263,8149+73]..[263,8149+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[263,8149+74]..[263,8149+90]),None)
                                    expression (src/ppx.ml[263,8149+93]..[263,8149+103])
                                      Pexp_ident "expression" (src/ppx.ml[263,8149+93]..[263,8149+103])
                                    expression (src/ppx.ml[263,8149+104]..[263,8149+114])
                                      Pexp_ident "attributes" (src/ppx.ml[263,8149+104]..[263,8149+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[265,8287+4]..[265,8287+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[265,8287+4]..[265,8287+14])
                      Some
                        []
                        pattern (src/ppx.ml[265,8287+15]..[265,8287+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[265,8287+16]..[265,8287+24])
                              Ppat_var "rec_flag" (src/ppx.ml[265,8287+16]..[265,8287+24])
                            pattern (src/ppx.ml[265,8287+26]..[265,8287+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[265,8287+26]..[265,8287+44])
                          ]
                    expression (src/ppx.ml[265,8287+48]..[266,8421+48])
                      Pexp_sequence
                      expression (src/ppx.ml[265,8287+48]..[265,8287+132])
                        Pexp_apply
                        expression (src/ppx.ml[265,8287+49]..[265,8287+62])
                          Pexp_ident "print_endline" (src/ppx.ml[265,8287+49]..[265,8287+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[265,8287+63]..[265,8287+131])
                              Pexp_apply
                              expression (src/ppx.ml[265,8287+64]..[265,8287+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[265,8287+64]..[265,8287+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[265,8287+79]..[265,8287+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[265,8287+80]..[265,8287+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[265,8287+81]..[265,8287+98]),None)
                                      expression (src/ppx.ml[265,8287+101]..[265,8287+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[265,8287+101]..[265,8287+109])
                                      expression (src/ppx.ml[265,8287+111]..[265,8287+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[265,8287+111]..[265,8287+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[266,8421+4]..[266,8421+48])
                        Pexp_apply
                        expression (src/ppx.ml[266,8421+4]..[266,8421+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[266,8421+4]..[266,8421+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[266,8421+28]..[266,8421+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[266,8421+29]..[266,8421+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[267,8470+4]..[267,8470+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[267,8470+4]..[267,8470+18])
                      Some
                        []
                        pattern (src/ppx.ml[267,8470+19]..[267,8470+36])
                          Ppat_var "value_description" (src/ppx.ml[267,8470+19]..[267,8470+36])
                    expression (src/ppx.ml[267,8470+39]..[267,8470+116])
                      Pexp_apply
                      expression (src/ppx.ml[267,8470+40]..[267,8470+53])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8470+40]..[267,8470+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8470+54]..[267,8470+115])
                            Pexp_apply
                            expression (src/ppx.ml[267,8470+55]..[267,8470+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8470+55]..[267,8470+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8470+70]..[267,8470+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8470+71]..[267,8470+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[267,8470+72]..[267,8470+93]),None)
                                    expression (src/ppx.ml[267,8470+96]..[267,8470+113])
                                      Pexp_ident "value_description" (src/ppx.ml[267,8470+96]..[267,8470+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,8588+4]..[269,8588+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[269,8588+4]..[269,8588+13])
                      Some
                        []
                        pattern (src/ppx.ml[269,8588+14]..[269,8588+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[269,8588+15]..[269,8588+23])
                              Ppat_var "rec_flag" (src/ppx.ml[269,8588+15]..[269,8588+23])
                            pattern (src/ppx.ml[269,8588+25]..[269,8588+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[269,8588+25]..[269,8588+46])
                          ]
                    expression (src/ppx.ml[271,8667+4]..[272,8718+90])
                      Pexp_sequence
                      expression (src/ppx.ml[271,8667+4]..[271,8667+49])
                        Pexp_apply
                        expression (src/ppx.ml[271,8667+4]..[271,8667+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[271,8667+4]..[271,8667+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[271,8667+26]..[271,8667+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[271,8667+27]..[271,8667+48])
                        ]
                      expression (src/ppx.ml[272,8718+4]..[272,8718+90])
                        Pexp_apply
                        expression (src/ppx.ml[272,8718+5]..[272,8718+18])
                          Pexp_ident "print_endline" (src/ppx.ml[272,8718+5]..[272,8718+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[272,8718+19]..[272,8718+89])
                              Pexp_apply
                              expression (src/ppx.ml[272,8718+20]..[272,8718+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[272,8718+20]..[272,8718+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[272,8718+35]..[272,8718+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[272,8718+36]..[272,8718+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[272,8718+37]..[272,8718+53]),None)
                                      expression (src/ppx.ml[272,8718+56]..[272,8718+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[272,8718+56]..[272,8718+64])
                                      expression (src/ppx.ml[272,8718+66]..[272,8718+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[272,8718+66]..[272,8718+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[275,8811+4]..[275,8811+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[275,8811+4]..[275,8811+15])
                      Some
                        []
                        pattern (src/ppx.ml[275,8811+17]..[275,8811+31])
                          Ppat_var "type_extension" (src/ppx.ml[275,8811+17]..[275,8811+31])
                    expression (src/ppx.ml[275,8811+34]..[275,8811+105])
                      Pexp_apply
                      expression (src/ppx.ml[275,8811+35]..[275,8811+48])
                        Pexp_ident "print_endline" (src/ppx.ml[275,8811+35]..[275,8811+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,8811+49]..[275,8811+104])
                            Pexp_apply
                            expression (src/ppx.ml[275,8811+50]..[275,8811+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,8811+50]..[275,8811+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,8811+65]..[275,8811+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,8811+66]..[275,8811+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[275,8811+67]..[275,8811+85]),None)
                                    expression (src/ppx.ml[275,8811+88]..[275,8811+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[275,8811+88]..[275,8811+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,8917+4]..[276,8917+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[276,8917+4]..[276,8917+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,8917+19]..[276,8917+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[276,8917+19]..[276,8917+40])
                    expression (src/ppx.ml[276,8917+43]..[276,8917+124])
                      Pexp_apply
                      expression (src/ppx.ml[276,8917+44]..[276,8917+57])
                        Pexp_ident "print_endline" (src/ppx.ml[276,8917+44]..[276,8917+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,8917+58]..[276,8917+123])
                            Pexp_apply
                            expression (src/ppx.ml[276,8917+59]..[276,8917+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,8917+59]..[276,8917+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,8917+74]..[276,8917+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,8917+75]..[276,8917+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[276,8917+76]..[276,8917+97]),None)
                                    expression (src/ppx.ml[276,8917+100]..[276,8917+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[276,8917+100]..[276,8917+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[277,9042+4]..[277,9042+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[277,9042+4]..[277,9042+15])
                      Some
                        []
                        pattern (src/ppx.ml[277,9042+17]..[277,9042+31])
                          Ppat_var "module_binding" (src/ppx.ml[277,9042+17]..[277,9042+31])
                    expression (src/ppx.ml[277,9042+34]..[277,9042+104])
                      Pexp_apply
                      expression (src/ppx.ml[277,9042+35]..[277,9042+48])
                        Pexp_ident "print_endline" (src/ppx.ml[277,9042+35]..[277,9042+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[277,9042+49]..[277,9042+103])
                            Pexp_apply
                            expression (src/ppx.ml[277,9042+50]..[277,9042+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[277,9042+50]..[277,9042+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[277,9042+65]..[277,9042+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[277,9042+66]..[277,9042+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[277,9042+67]..[277,9042+85]),None)
                                    expression (src/ppx.ml[277,9042+87]..[277,9042+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[277,9042+87]..[277,9042+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[278,9147+4]..[278,9147+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[278,9147+4]..[278,9147+18])
                      Some
                        []
                        pattern (src/ppx.ml[278,9147+20]..[278,9147+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[278,9147+20]..[278,9147+39])
                    expression (src/ppx.ml[278,9147+42]..[278,9147+121])
                      Pexp_apply
                      expression (src/ppx.ml[278,9147+43]..[278,9147+56])
                        Pexp_ident "print_endline" (src/ppx.ml[278,9147+43]..[278,9147+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,9147+57]..[278,9147+120])
                            Pexp_apply
                            expression (src/ppx.ml[278,9147+58]..[278,9147+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,9147+58]..[278,9147+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,9147+73]..[278,9147+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,9147+74]..[278,9147+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[278,9147+75]..[278,9147+96]),None)
                                    expression (src/ppx.ml[278,9147+99]..[278,9147+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[278,9147+99]..[278,9147+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[279,9269+4]..[279,9269+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[279,9269+4]..[279,9269+16])
                      Some
                        []
                        pattern (src/ppx.ml[279,9269+17]..[279,9269+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[279,9269+17]..[279,9269+40])
                    expression (src/ppx.ml[279,9269+43]..[279,9269+124])
                      Pexp_apply
                      expression (src/ppx.ml[279,9269+44]..[279,9269+57])
                        Pexp_ident "print_endline" (src/ppx.ml[279,9269+44]..[279,9269+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[279,9269+58]..[279,9269+123])
                            Pexp_apply
                            expression (src/ppx.ml[279,9269+59]..[279,9269+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[279,9269+59]..[279,9269+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[279,9269+74]..[279,9269+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[279,9269+75]..[279,9269+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[279,9269+76]..[279,9269+95]),None)
                                    expression (src/ppx.ml[279,9269+98]..[279,9269+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[279,9269+98]..[279,9269+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[281,9411+4]..[281,9411+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[281,9411+4]..[281,9411+13])
                      Some
                        []
                        pattern (src/ppx.ml[281,9411+14]..[281,9411+30])
                          Ppat_var "open_description" (src/ppx.ml[281,9411+14]..[281,9411+30])
                    expression (src/ppx.ml[281,9411+33]..[281,9411+103])
                      Pexp_apply
                      expression (src/ppx.ml[281,9411+34]..[281,9411+47])
                        Pexp_ident "print_endline" (src/ppx.ml[281,9411+34]..[281,9411+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[281,9411+48]..[281,9411+102])
                            Pexp_apply
                            expression (src/ppx.ml[281,9411+49]..[281,9411+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[281,9411+49]..[281,9411+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[281,9411+64]..[281,9411+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[281,9411+65]..[281,9411+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[281,9411+66]..[281,9411+81]),None)
                                    expression (src/ppx.ml[281,9411+84]..[281,9411+100])
                                      Pexp_ident "open_description" (src/ppx.ml[281,9411+84]..[281,9411+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[282,9515+4]..[282,9515+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[282,9515+4]..[282,9515+14])
                      Some
                        []
                        pattern (src/ppx.ml[282,9515+15]..[282,9515+36])
                          Ppat_var "class_declarations" (src/ppx.ml[282,9515+16]..[282,9515+34])
                    expression (src/ppx.ml[282,9515+39]..[282,9515+113])
                      Pexp_apply
                      expression (src/ppx.ml[282,9515+40]..[282,9515+53])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9515+40]..[282,9515+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9515+54]..[282,9515+112])
                            Pexp_apply
                            expression (src/ppx.ml[282,9515+55]..[282,9515+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9515+55]..[282,9515+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9515+70]..[282,9515+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9515+71]..[282,9515+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[282,9515+72]..[282,9515+89]),None)
                                    expression (src/ppx.ml[282,9515+92]..[282,9515+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[282,9515+92]..[282,9515+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[283,9629+4]..[283,9629+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[283,9629+4]..[283,9629+19])
                      Some
                        []
                        pattern (src/ppx.ml[283,9629+20]..[283,9629+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[283,9629+21]..[283,9629+44])
                    expression (src/ppx.ml[283,9629+48]..[283,9629+132])
                      Pexp_apply
                      expression (src/ppx.ml[283,9629+49]..[283,9629+62])
                        Pexp_ident "print_endline" (src/ppx.ml[283,9629+49]..[283,9629+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9629+63]..[283,9629+131])
                            Pexp_apply
                            expression (src/ppx.ml[283,9629+64]..[283,9629+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[283,9629+64]..[283,9629+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[283,9629+79]..[283,9629+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[283,9629+80]..[283,9629+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[283,9629+81]..[283,9629+103]),None)
                                    expression (src/ppx.ml[283,9629+106]..[283,9629+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[283,9629+106]..[283,9629+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9762+4]..[284,9762+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[284,9762+4]..[284,9762+16])
                      Some
                        []
                        pattern (src/ppx.ml[284,9762+18]..[284,9762+39])
                          Ppat_var "include_declaration" (src/ppx.ml[284,9762+19]..[284,9762+38])
                    expression (src/ppx.ml[284,9762+41]..[284,9762+117])
                      Pexp_apply
                      expression (src/ppx.ml[284,9762+42]..[284,9762+55])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9762+42]..[284,9762+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9762+56]..[284,9762+116])
                            Pexp_apply
                            expression (src/ppx.ml[284,9762+57]..[284,9762+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9762+57]..[284,9762+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9762+72]..[284,9762+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9762+73]..[284,9762+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[284,9762+74]..[284,9762+93]),None)
                                    expression (src/ppx.ml[284,9762+95]..[284,9762+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[284,9762+95]..[284,9762+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9880+4]..[285,9880+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[285,9880+4]..[285,9880+18])
                      Some
                        []
                        pattern (src/ppx.ml[285,9880+19]..[285,9880+30])
                          Ppat_var "attribute" (src/ppx.ml[285,9880+20]..[285,9880+29])
                    expression (src/ppx.ml[285,9880+32]..[285,9880+101])
                      Pexp_apply
                      expression (src/ppx.ml[285,9880+33]..[285,9880+46])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9880+33]..[285,9880+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9880+47]..[285,9880+100])
                            Pexp_apply
                            expression (src/ppx.ml[285,9880+48]..[285,9880+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9880+48]..[285,9880+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9880+63]..[285,9880+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9880+64]..[285,9880+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[285,9880+65]..[285,9880+86]),None)
                                    expression (src/ppx.ml[285,9880+89]..[285,9880+98])
                                      Pexp_ident "attribute" (src/ppx.ml[285,9880+89]..[285,9880+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[286,9982+4]..[286,9982+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[286,9982+4]..[286,9982+18])
                      Some
                        []
                        pattern (src/ppx.ml[286,9982+19]..[286,9982+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[286,9982+21]..[286,9982+30])
                              Ppat_var "extension" (src/ppx.ml[286,9982+21]..[286,9982+30])
                            pattern (src/ppx.ml[286,9982+33]..[286,9982+43])
                              Ppat_var "attributes" (src/ppx.ml[286,9982+33]..[286,9982+43])
                          ]
                    expression (src/ppx.ml[286,9982+46]..[286,9982+128])
                      Pexp_apply
                      expression (src/ppx.ml[286,9982+47]..[286,9982+60])
                        Pexp_ident "print_endline" (src/ppx.ml[286,9982+47]..[286,9982+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[286,9982+61]..[286,9982+127])
                            Pexp_apply
                            expression (src/ppx.ml[286,9982+62]..[286,9982+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[286,9982+62]..[286,9982+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[286,9982+77]..[286,9982+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[286,9982+78]..[286,9982+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[286,9982+79]..[286,9982+100]),None)
                                    expression (src/ppx.ml[286,9982+103]..[286,9982+112])
                                      Pexp_ident "extension" (src/ppx.ml[286,9982+103]..[286,9982+112])
                                    expression (src/ppx.ml[286,9982+115]..[286,9982+125])
                                      Pexp_ident "attributes" (src/ppx.ml[286,9982+115]..[286,9982+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[260,8018+39]..[260,8018+43])
              Ptyp_constr "unit" (src/ppx.ml[260,8018+39]..[260,8018+43])
              []
    ]
  structure_item (src/ppx.ml[288,10112+0]..[288,10112+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[288,10112+4]..[288,10112+7])
          Ppat_var "foo" (src/ppx.ml[288,10112+4]..[288,10112+7])
        expression (src/ppx.ml[288,10112+10]..[288,10112+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[290,10127+0]..[298,10346+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[290,10127+4]..[290,10127+12])
          Ppat_var "printone" (src/ppx.ml[290,10127+4]..[290,10127+12])
        expression (src/ppx.ml[290,10127+13]..[298,10346+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[290,10127+13]..[290,10127+34])
            Ppat_constraint
            pattern (src/ppx.ml[290,10127+14]..[290,10127+15])
              Ppat_var "x" (src/ppx.ml[290,10127+14]..[290,10127+15])
            core_type (src/ppx.ml[290,10127+18]..[290,10127+32])
              Ptyp_constr "structure_item" (src/ppx.ml[290,10127+18]..[290,10127+32])
              []
          expression (src/ppx.ml[290,10127+35]..[298,10346+6])
            Pexp_constraint
            expression (src/ppx.ml[291,10170+2]..[298,10346+6])
              Pexp_match
              expression (src/ppx.ml[291,10170+8]..[291,10170+9])
                Pexp_ident "x" (src/ppx.ml[291,10170+8]..[291,10170+9])
              [
                <case>
                  pattern (src/ppx.ml[292,10185+3]..[295,10235+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[293,10190+4]..[293,10190+13]) ghost
                        pattern (src/ppx.ml[293,10190+4]..[293,10190+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[293,10190+4]..[293,10190+13])
                    ]
                  expression (src/ppx.ml[297,10319+4]..[298,10346+6])
                    Pexp_sequence
                    expression (src/ppx.ml[297,10319+4]..[297,10319+25])
                      Pexp_apply
                      expression (src/ppx.ml[297,10319+5]..[297,10319+14])
                        Pexp_ident "printdesc" (src/ppx.ml[297,10319+5]..[297,10319+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[297,10319+15]..[297,10319+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[297,10319+15]..[297,10319+24])
                      ]
                    expression (src/ppx.ml[298,10346+4]..[298,10346+6])
                      Pexp_construct "()" (src/ppx.ml[298,10346+4]..[298,10346+6])
                      None
              ]
            core_type (src/ppx.ml[290,10127+36]..[290,10127+40])
              Ptyp_constr "unit" (src/ppx.ml[290,10127+36]..[290,10127+40])
              []
    ]
  structure_item (src/ppx.ml[304,10466+0]..[306,10547+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[304,10466+4]..[304,10466+13])
          Ppat_var "printone2" (src/ppx.ml[304,10466+4]..[304,10466+13])
        expression (src/ppx.ml[304,10466+14]..[306,10547+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[304,10466+14]..[304,10466+15])
            Ppat_var "x" (src/ppx.ml[304,10466+14]..[304,10466+15])
          expression (src/ppx.ml[304,10466+16]..[306,10547+12])
            Pexp_constraint
            expression (src/ppx.ml[305,10490+2]..[306,10547+12])
              Pexp_sequence
              expression (src/ppx.ml[305,10490+2]..[305,10490+55])
                Pexp_apply
                expression (src/ppx.ml[305,10490+3]..[305,10490+16])
                  Pexp_ident "print_endline" (src/ppx.ml[305,10490+3]..[305,10490+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[305,10490+17]..[305,10490+54])
                      Pexp_apply
                      expression (src/ppx.ml[305,10490+18]..[305,10490+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[305,10490+18]..[305,10490+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[305,10490+33]..[305,10490+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[305,10490+34]..[305,10490+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[305,10490+35]..[305,10490+49]),None)
                              expression (src/ppx.ml[305,10490+51]..[305,10490+52])
                                Pexp_ident "x" (src/ppx.ml[305,10490+51]..[305,10490+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[306,10547+2]..[306,10547+12])
                Pexp_apply
                expression (src/ppx.ml[306,10547+2]..[306,10547+10])
                  Pexp_ident "printone" (src/ppx.ml[306,10547+2]..[306,10547+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[306,10547+11]..[306,10547+12])
                      Pexp_ident "x" (src/ppx.ml[306,10547+11]..[306,10547+12])
                ]
            core_type (src/ppx.ml[304,10466+17]..[304,10466+21])
              Ptyp_constr "unit" (src/ppx.ml[304,10466+17]..[304,10466+21])
              []
    ]
  structure_item (src/ppx.ml[308,10563+0]..[310,10594+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[308,10563+4]..[308,10563+9])
          Ppat_var "proc1" (src/ppx.ml[308,10563+4]..[308,10563+9])
        expression (src/ppx.ml[308,10563+10]..[310,10594+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[308,10563+10]..[308,10563+11])
            Ppat_var "x" (src/ppx.ml[308,10563+10]..[308,10563+11])
          expression (src/ppx.ml[309,10579+2]..[310,10594+3])
            Pexp_sequence
            expression (src/ppx.ml[309,10579+2]..[309,10579+13])
              Pexp_apply
              expression (src/ppx.ml[309,10579+2]..[309,10579+11])
                Pexp_ident "printone2" (src/ppx.ml[309,10579+2]..[309,10579+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[309,10579+12]..[309,10579+13])
                    Pexp_ident "x" (src/ppx.ml[309,10579+12]..[309,10579+13])
              ]
            expression (src/ppx.ml[310,10594+2]..[310,10594+3])
              Pexp_ident "x" (src/ppx.ml[310,10594+2]..[310,10594+3])
    ]
  structure_item (src/ppx.ml[312,10599+0]..[315,10748+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10599+4]..[312,10599+9])
          Ppat_var "debug" (src/ppx.ml[312,10599+4]..[312,10599+9])
        expression (src/ppx.ml[312,10599+10]..[315,10748+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[312,10599+10]..[312,10599+14])
            Ppat_var "proc" (src/ppx.ml[312,10599+10]..[312,10599+14])
          expression (src/ppx.ml[312,10599+15]..[315,10748+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[312,10599+15]..[312,10599+18])
              Ppat_var "lst" (src/ppx.ml[312,10599+15]..[312,10599+18])
            expression (src/ppx.ml[312,10599+19]..[315,10748+4])
              Pexp_constraint
              expression (src/ppx.ml[313,10627+2]..[315,10748+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[313,10627+6]..[313,10627+12])
                      Ppat_var "result" (src/ppx.ml[313,10627+6]..[313,10627+12])
                    expression (src/ppx.ml[313,10627+15]..[313,10627+32])
                      Pexp_apply
                      expression (src/ppx.ml[313,10627+15]..[313,10627+23])
                        Pexp_ident "List.map" (src/ppx.ml[313,10627+15]..[313,10627+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[313,10627+24]..[313,10627+28])
                            Pexp_ident "proc" (src/ppx.ml[313,10627+24]..[313,10627+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[313,10627+29]..[313,10627+32])
                            Pexp_ident "lst" (src/ppx.ml[313,10627+29]..[313,10627+32])
                      ]
                ]
                expression (src/ppx.ml[314,10663+2]..[315,10748+4])
                  Pexp_sequence
                  expression (src/ppx.ml[314,10663+2]..[314,10663+83])
                    Pexp_apply
                    expression (src/ppx.ml[314,10663+2]..[314,10663+11])
                      Pexp_ident "List.iter" (src/ppx.ml[314,10663+2]..[314,10663+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[314,10663+12]..[314,10663+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[314,10663+17]..[314,10663+18])
                            Ppat_var "i" (src/ppx.ml[314,10663+17]..[314,10663+18])
                          expression (src/ppx.ml[314,10663+22]..[314,10663+75])
                            Pexp_apply
                            expression (src/ppx.ml[314,10663+22]..[314,10663+35])
                              Pexp_ident "print_endline" (src/ppx.ml[314,10663+22]..[314,10663+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[314,10663+36]..[314,10663+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[314,10663+37]..[314,10663+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[314,10663+37]..[314,10663+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[314,10663+52]..[314,10663+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[314,10663+53]..[314,10663+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[314,10663+54]..[314,10663+69]),None)
                                          expression (src/ppx.ml[314,10663+72]..[314,10663+73])
                                            Pexp_ident "i" (src/ppx.ml[314,10663+72]..[314,10663+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[314,10663+77]..[314,10663+83])
                          Pexp_ident "result" (src/ppx.ml[314,10663+77]..[314,10663+83])
                    ]
                  expression (src/ppx.ml[315,10748+2]..[315,10748+4])
                    Pexp_construct "()" (src/ppx.ml[315,10748+2]..[315,10748+4])
                    None
              core_type (src/ppx.ml[312,10599+21]..[312,10599+25])
                Ptyp_constr "unit" (src/ppx.ml[312,10599+21]..[312,10599+25])
                []
    ]
  structure_item (src/ppx.ml[317,10770+0]..[320,10894+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[317,10770+4]..[317,10770+13])
          Ppat_var "transform" (src/ppx.ml[317,10770+4]..[317,10770+13])
        expression (src/ppx.ml[317,10770+14]..[320,10894+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[317,10770+14]..[317,10770+15])
            Ppat_var "x" (src/ppx.ml[317,10770+14]..[317,10770+15])
          expression (src/ppx.ml[318,10825+2]..[320,10894+3])
            Pexp_sequence
            expression (src/ppx.ml[318,10825+2]..[318,10825+48])
              Pexp_apply
              expression (src/ppx.ml[318,10825+3]..[318,10825+16])
                Pexp_ident "print_endline" (src/ppx.ml[318,10825+3]..[318,10825+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[318,10825+17]..[318,10825+47])
                    Pexp_apply
                    expression (src/ppx.ml[318,10825+18]..[318,10825+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[318,10825+18]..[318,10825+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[318,10825+33]..[318,10825+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[318,10825+34]..[318,10825+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[318,10825+35]..[318,10825+42]),None)
                            expression (src/ppx.ml[318,10825+44]..[318,10825+45])
                              Pexp_ident "x" (src/ppx.ml[318,10825+44]..[318,10825+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[319,10875+2]..[320,10894+3])
              Pexp_sequence
              expression (src/ppx.ml[319,10875+2]..[319,10875+17])
                Pexp_apply
                expression (src/ppx.ml[319,10875+3]..[319,10875+8])
                  Pexp_ident "debug" (src/ppx.ml[319,10875+3]..[319,10875+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[319,10875+9]..[319,10875+14])
                      Pexp_ident "proc1" (src/ppx.ml[319,10875+9]..[319,10875+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[319,10875+15]..[319,10875+16])
                      Pexp_ident "x" (src/ppx.ml[319,10875+15]..[319,10875+16])
                ]
              expression (src/ppx.ml[320,10894+2]..[320,10894+3])
                Pexp_ident "x" (src/ppx.ml[320,10894+2]..[320,10894+3])
    ]
  structure_item (src/ppx.ml[322,10901+1]..[322,10901+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[322,10901+5]..[322,10901+7])
          Ppat_construct "()" (src/ppx.ml[322,10901+5]..[322,10901+7])
          None
        expression (src/ppx.ml[322,10901+10]..[322,10901+69])
          Pexp_apply
          expression (src/ppx.ml[322,10901+10]..[322,10901+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[322,10901+10]..[322,10901+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[322,10901+47]..[322,10901+56])
                Pexp_ident "transform" (src/ppx.ml[322,10901+47]..[322,10901+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[322,10901+57]..[322,10901+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[322,10901+58]..[322,10901+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with | { txt;_} -> (match txt with | Pexp_ident a -> a)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%s" myid;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

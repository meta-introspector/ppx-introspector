[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1578+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1578+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1578+62])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1578+62])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1578+62])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+62])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+61])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+60])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+49])
                                      Pexp_constant PConst_string("DEBUG55:pat",(src/ppx.ml[55,1334+37]..[55,1334+48]),None)
                                    expression (src/ppx.ml[55,1334+51]..[55,1334+58])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+51]..[55,1334+58])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1398+4]..[59,1578+62])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1398+4]..[56,1398+64])
                        Pexp_apply
                        expression (src/ppx.ml[56,1398+5]..[56,1398+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1398+5]..[56,1398+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1398+19]..[56,1398+63])
                              Pexp_apply
                              expression (src/ppx.ml[56,1398+20]..[56,1398+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1398+20]..[56,1398+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1398+35]..[56,1398+62])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1398+36]..[56,1398+50])
                                        Pexp_constant PConst_string("DEBUG55:expr",(src/ppx.ml[56,1398+37]..[56,1398+49]),None)
                                      expression (src/ppx.ml[56,1398+52]..[56,1398+60])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1398+52]..[56,1398+60])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1506+4]..[59,1578+62])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1506+4]..[58,1506+70])
                          Pexp_apply
                          expression (src/ppx.ml[58,1506+5]..[58,1506+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1506+5]..[58,1506+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1506+19]..[58,1506+69])
                                Pexp_apply
                                expression (src/ppx.ml[58,1506+20]..[58,1506+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1506+20]..[58,1506+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1506+35]..[58,1506+68])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1506+36]..[58,1506+50])
                                          Pexp_constant PConst_string("DEBUG55:atrr",(src/ppx.ml[58,1506+37]..[58,1506+49]),None)
                                        expression (src/ppx.ml[58,1506+52]..[58,1506+66])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1506+52]..[58,1506+66])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1578+4]..[59,1578+62])
                          Pexp_apply
                          expression (src/ppx.ml[59,1578+5]..[59,1578+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1578+5]..[59,1578+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1578+19]..[59,1578+61])
                                Pexp_apply
                                expression (src/ppx.ml[59,1578+20]..[59,1578+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1578+20]..[59,1578+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1578+35]..[59,1578+60])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1578+36]..[59,1578+49])
                                          Pexp_constant PConst_string("DEBUG55:loc",(src/ppx.ml[59,1578+37]..[59,1578+48]),None)
                                        expression (src/ppx.ml[59,1578+51]..[59,1578+58])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1578+51]..[59,1578+58])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1642+0]..[67,1819+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1642+8]..[61,1642+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1642+8]..[61,1642+32])
        expression (src/ppx.ml[61,1642+33]..[67,1819+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1642+33]..[61,1642+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1642+34]..[61,1642+35])
              Ppat_var "x" (src/ppx.ml[61,1642+34]..[61,1642+35])
            core_type (src/ppx.ml[61,1642+38]..[61,1642+56])
              Ptyp_constr "list" (src/ppx.ml[61,1642+52]..[61,1642+56])
              [
                core_type (src/ppx.ml[61,1642+38]..[61,1642+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1642+38]..[61,1642+51])
                  []
              ]
          expression (src/ppx.ml[61,1642+58]..[67,1819+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1708+2]..[67,1819+6])
              Pexp_match
              expression (src/ppx.ml[62,1708+8]..[62,1708+9])
                Pexp_ident "x" (src/ppx.ml[62,1708+8]..[62,1708+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1723+4]..[63,1723+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1723+4]..[63,1723+6])
                    None
                  expression (src/ppx.ml[63,1723+10]..[63,1723+12])
                    Pexp_construct "()" (src/ppx.ml[63,1723+10]..[63,1723+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1736+4]..[64,1736+10])
                    Ppat_construct "::" (src/ppx.ml[64,1736+6]..[64,1736+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1736+4]..[64,1736+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1736+4]..[64,1736+5])
                            Ppat_var "h" (src/ppx.ml[64,1736+4]..[64,1736+5])
                          pattern (src/ppx.ml[64,1736+9]..[64,1736+10])
                            Ppat_var "t" (src/ppx.ml[64,1736+9]..[64,1736+10])
                        ]
                  expression (src/ppx.ml[65,1750+4]..[67,1819+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1750+4]..[65,1750+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1750+5]..[65,1750+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1750+5]..[65,1750+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1750+31]..[65,1750+32])
                            Pexp_ident "h" (src/ppx.ml[65,1750+31]..[65,1750+32])
                      ]
                    expression (src/ppx.ml[66,1785+4]..[67,1819+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1785+4]..[66,1785+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1785+5]..[66,1785+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1785+5]..[66,1785+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1785+30]..[66,1785+31])
                              Pexp_ident "t" (src/ppx.ml[66,1785+30]..[66,1785+31])
                        ]
                      expression (src/ppx.ml[67,1819+4]..[67,1819+6])
                        Pexp_construct "()" (src/ppx.ml[67,1819+4]..[67,1819+6])
                        None
              ]
            core_type (src/ppx.ml[61,1642+60]..[61,1642+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1642+60]..[61,1642+64])
              []
    ]
  structure_item (src/ppx.ml[69,1827+0]..[144,4556+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1827+8]..[69,1827+27])
          Ppat_var "process_record_kind" (src/ppx.ml[69,1827+8]..[69,1827+27])
        expression (src/ppx.ml[69,1827+27]..[83,2305+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1827+27]..[69,1827+30])
            Ppat_var "x" (src/ppx.ml[69,1827+28]..[69,1827+29])
          expression (src/ppx.ml[70,1860+2]..[83,2305+47])
            Pexp_match
            expression (src/ppx.ml[70,1860+8]..[70,1860+9])
              Pexp_ident "x" (src/ppx.ml[70,1860+8]..[70,1860+9])
            [
              <case>
                pattern (src/ppx.ml[71,1875+4]..[77,2056+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[72,1881+5]..[72,1881+13]) ghost
                      pattern (src/ppx.ml[72,1881+5]..[72,1881+13])
                        Ppat_var "pld_name" (src/ppx.ml[72,1881+5]..[72,1881+13])
                    "pld_mutable" (src/ppx.ml[73,1914+5]..[73,1914+16]) ghost
                      pattern (src/ppx.ml[73,1914+5]..[73,1914+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[73,1914+5]..[73,1914+16])
                    "pld_type" (src/ppx.ml[74,1952+5]..[74,1952+13]) ghost
                      pattern (src/ppx.ml[74,1952+5]..[74,1952+13])
                        Ppat_var "pld_type" (src/ppx.ml[74,1952+5]..[74,1952+13])
                    "pld_loc" (src/ppx.ml[75,1984+5]..[75,1984+12]) ghost
                      pattern (src/ppx.ml[75,1984+5]..[75,1984+12])
                        Ppat_var "pld_loc" (src/ppx.ml[75,1984+5]..[75,1984+12])
                    "pld_attributes" (src/ppx.ml[76,2016+5]..[76,2016+19]) ghost
                      pattern (src/ppx.ml[76,2016+5]..[76,2016+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[76,2016+5]..[76,2016+19])
                  ]
                expression (src/ppx.ml[78,2064+4]..[83,2305+47])
                  Pexp_apply
                  expression (src/ppx.ml[78,2064+5]..[78,2064+18])
                    Pexp_ident "print_endline" (src/ppx.ml[78,2064+5]..[78,2064+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[78,2064+19]..[83,2305+46])
                        Pexp_apply
                        expression (src/ppx.ml[78,2064+20]..[78,2064+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[78,2064+20]..[78,2064+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[78,2064+35]..[83,2305+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[78,2064+36]..[78,2064+51])
                                  Pexp_constant PConst_string("precord_kind:",(src/ppx.ml[78,2064+37]..[78,2064+50]),None)
                                expression (src/ppx.ml[79,2119+36]..[79,2119+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[79,2119+36]..[79,2119+44])
                                expression (src/ppx.ml[80,2165+36]..[80,2165+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[80,2165+37]..[80,2165+44]),None)
                                expression (src/ppx.ml[81,2212+36]..[81,2212+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[81,2212+36]..[81,2212+47])
                                expression (src/ppx.ml[82,2261+36]..[82,2261+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[82,2261+37]..[82,2261+41]),None)
                                expression (src/ppx.ml[83,2305+36]..[83,2305+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[83,2305+36]..[83,2305+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[85,2357+0]..[85,2357+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[85,2357+0]..[85,2357+22])
        expression (src/ppx.ml[85,2357+23]..[119,3911+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2357+23]..[85,2357+24])
            Ppat_var "x" (src/ppx.ml[85,2357+23]..[85,2357+24])
          expression (src/ppx.ml[86,2384+2]..[119,3911+64])
            Pexp_match
            expression (src/ppx.ml[86,2384+8]..[86,2384+9])
              Pexp_ident "x" (src/ppx.ml[86,2384+8]..[86,2384+9])
            [
              <case>
                pattern (src/ppx.ml[87,2399+4]..[87,2399+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[87,2399+4]..[87,2399+12])
                  None
                expression (src/ppx.ml[87,2399+17]..[87,2399+68])
                  Pexp_apply
                  expression (src/ppx.ml[87,2399+18]..[87,2399+31])
                    Pexp_ident "print_endline" (src/ppx.ml[87,2399+18]..[87,2399+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[87,2399+32]..[87,2399+67])
                        Pexp_apply
                        expression (src/ppx.ml[87,2399+33]..[87,2399+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[87,2399+33]..[87,2399+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[87,2399+48]..[87,2399+66])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any",(src/ppx.ml[87,2399+50]..[87,2399+64]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[88,2468+4]..[88,2468+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[88,2468+4]..[88,2468+12])
                  Some
                    []
                    pattern (src/ppx.ml[88,2468+13]..[88,2468+17])
                      Ppat_var "name" (src/ppx.ml[88,2468+13]..[88,2468+17])
                expression (src/ppx.ml[88,2468+20]..[88,2468+79])
                  Pexp_apply
                  expression (src/ppx.ml[88,2468+21]..[88,2468+34])
                    Pexp_ident "print_endline" (src/ppx.ml[88,2468+21]..[88,2468+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[88,2468+35]..[88,2468+78])
                        Pexp_apply
                        expression (src/ppx.ml[88,2468+36]..[88,2468+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[88,2468+36]..[88,2468+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[88,2468+51]..[88,2468+77])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[88,2468+52]..[88,2468+68])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var",(src/ppx.ml[88,2468+53]..[88,2468+67]),None)
                                expression (src/ppx.ml[88,2468+72]..[88,2468+76])
                                  Pexp_ident "name" (src/ppx.ml[88,2468+72]..[88,2468+76])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[89,2548+4]..[89,2548+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[89,2548+4]..[89,2548+14])
                  Some
                    []
                    pattern (src/ppx.ml[89,2548+15]..[89,2548+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[89,2548+16]..[89,2548+25])
                          Ppat_var "arg_label" (src/ppx.ml[89,2548+16]..[89,2548+25])
                        pattern (src/ppx.ml[89,2548+28]..[89,2548+37])
                          Ppat_var "core_type" (src/ppx.ml[89,2548+28]..[89,2548+37])
                        pattern (src/ppx.ml[89,2548+40]..[89,2548+50])
                          Ppat_var "core_type2" (src/ppx.ml[89,2548+40]..[89,2548+50])
                      ]
                expression (src/ppx.ml[90,2603+4]..[90,2603+60])
                  Pexp_apply
                  expression (src/ppx.ml[90,2603+5]..[90,2603+18])
                    Pexp_ident "print_endline" (src/ppx.ml[90,2603+5]..[90,2603+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[90,2603+19]..[90,2603+59])
                        Pexp_apply
                        expression (src/ppx.ml[90,2603+20]..[90,2603+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[90,2603+20]..[90,2603+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[90,2603+35]..[90,2603+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10",(src/ppx.ml[90,2603+37]..[90,2603+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[91,2664+4]..[91,2664+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[91,2664+4]..[91,2664+14])
                  Some
                    []
                    pattern (src/ppx.ml[91,2664+15]..[91,2664+16])
                      Ppat_var "a" (src/ppx.ml[91,2664+15]..[91,2664+16])
                expression (src/ppx.ml[93,2712+4]..[93,2712+59])
                  Pexp_apply
                  expression (src/ppx.ml[93,2712+5]..[93,2712+18])
                    Pexp_ident "print_endline" (src/ppx.ml[93,2712+5]..[93,2712+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[93,2712+19]..[93,2712+58])
                        Pexp_apply
                        expression (src/ppx.ml[93,2712+20]..[93,2712+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[93,2712+20]..[93,2712+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[93,2712+35]..[93,2712+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow9",(src/ppx.ml[93,2712+37]..[93,2712+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[94,2772+4]..[94,2772+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[94,2772+4]..[94,2772+15])
                  Some
                    []
                    pattern (src/ppx.ml[94,2772+16]..[94,2772+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[94,2772+17]..[94,2772+18])
                          Ppat_var "a" (src/ppx.ml[94,2772+17]..[94,2772+18])
                        pattern (src/ppx.ml[94,2772+19]..[94,2772+20])
                          Ppat_var "b" (src/ppx.ml[94,2772+19]..[94,2772+20])
                      ]
                expression (src/ppx.ml[96,2843+4]..[97,2875+78])
                  Pexp_sequence
                  expression (src/ppx.ml[96,2843+4]..[96,2843+30])
                    Pexp_apply
                    expression (src/ppx.ml[96,2843+5]..[96,2843+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[96,2843+5]..[96,2843+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[96,2843+28]..[96,2843+29])
                          Pexp_ident "b" (src/ppx.ml[96,2843+28]..[96,2843+29])
                    ]
                  expression (src/ppx.ml[97,2875+4]..[97,2875+78])
                    Pexp_apply
                    expression (src/ppx.ml[97,2875+5]..[97,2875+18])
                      Pexp_ident "print_endline" (src/ppx.ml[97,2875+5]..[97,2875+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[97,2875+19]..[97,2875+77])
                          Pexp_apply
                          expression (src/ppx.ml[97,2875+20]..[97,2875+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[97,2875+20]..[97,2875+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[97,2875+35]..[97,2875+76])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[97,2875+36]..[97,2875+55])
                                    Pexp_constant PConst_string("DEBUG:Ptyp_constr",(src/ppx.ml[97,2875+37]..[97,2875+54]),None)
                                  expression (src/ppx.ml[97,2875+57]..[97,2875+61])
                                    Pexp_constant PConst_string("id",(src/ppx.ml[97,2875+58]..[97,2875+60]),None)
                                  expression (src/ppx.ml[97,2875+62]..[97,2875+63])
                                    Pexp_ident "a" (src/ppx.ml[97,2875+62]..[97,2875+63])
                                  expression (src/ppx.ml[97,2875+65]..[97,2875+72])
                                    Pexp_constant PConst_string("types",(src/ppx.ml[97,2875+66]..[97,2875+71]),None)
                                  expression (src/ppx.ml[97,2875+73]..[97,2875+74])
                                    Pexp_ident "b" (src/ppx.ml[97,2875+73]..[97,2875+74])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[98,2954+4]..[98,2954+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[98,2954+4]..[98,2954+15])
                  Some
                    []
                    pattern (src/ppx.ml[98,2954+16]..[98,2954+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[98,2954+17]..[98,2954+18])
                          Ppat_var "a" (src/ppx.ml[98,2954+17]..[98,2954+18])
                        pattern (src/ppx.ml[98,2954+19]..[98,2954+20])
                          Ppat_var "b" (src/ppx.ml[98,2954+19]..[98,2954+20])
                      ]
                expression (src/ppx.ml[100,3023+4]..[100,3023+59])
                  Pexp_apply
                  expression (src/ppx.ml[100,3023+5]..[100,3023+18])
                    Pexp_ident "print_endline" (src/ppx.ml[100,3023+5]..[100,3023+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[100,3023+19]..[100,3023+58])
                        Pexp_apply
                        expression (src/ppx.ml[100,3023+20]..[100,3023+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[100,3023+20]..[100,3023+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,3023+35]..[100,3023+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8",(src/ppx.ml[100,3023+37]..[100,3023+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[101,3083+4]..[101,3083+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[101,3083+4]..[101,3083+14])
                  Some
                    []
                    pattern (src/ppx.ml[101,3083+15]..[101,3083+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[101,3083+16]..[101,3083+17])
                          Ppat_var "a" (src/ppx.ml[101,3083+16]..[101,3083+17])
                        pattern (src/ppx.ml[101,3083+18]..[101,3083+19])
                          Ppat_var "b" (src/ppx.ml[101,3083+18]..[101,3083+19])
                      ]
                expression (src/ppx.ml[103,3153+4]..[103,3153+59])
                  Pexp_apply
                  expression (src/ppx.ml[103,3153+5]..[103,3153+18])
                    Pexp_ident "print_endline" (src/ppx.ml[103,3153+5]..[103,3153+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,3153+19]..[103,3153+58])
                        Pexp_apply
                        expression (src/ppx.ml[103,3153+20]..[103,3153+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,3153+20]..[103,3153+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,3153+35]..[103,3153+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7",(src/ppx.ml[103,3153+37]..[103,3153+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,3213+4]..[104,3213+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[104,3213+4]..[104,3213+14])
                  Some
                    []
                    pattern (src/ppx.ml[104,3213+15]..[104,3213+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[104,3213+16]..[104,3213+17])
                          Ppat_var "a" (src/ppx.ml[104,3213+16]..[104,3213+17])
                        pattern (src/ppx.ml[104,3213+18]..[104,3213+19])
                          Ppat_var "b" (src/ppx.ml[104,3213+18]..[104,3213+19])
                      ]
                expression (src/ppx.ml[106,3274+4]..[106,3274+59])
                  Pexp_apply
                  expression (src/ppx.ml[106,3274+5]..[106,3274+18])
                    Pexp_ident "print_endline" (src/ppx.ml[106,3274+5]..[106,3274+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[106,3274+19]..[106,3274+58])
                        Pexp_apply
                        expression (src/ppx.ml[106,3274+20]..[106,3274+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[106,3274+20]..[106,3274+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[106,3274+35]..[106,3274+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6",(src/ppx.ml[106,3274+37]..[106,3274+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3334+4]..[107,3334+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[107,3334+4]..[107,3334+16])
                  Some
                    []
                    pattern (src/ppx.ml[107,3334+17]..[107,3334+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[107,3334+18]..[107,3334+19])
                          Ppat_var "a" (src/ppx.ml[107,3334+18]..[107,3334+19])
                        pattern (src/ppx.ml[107,3334+20]..[107,3334+21])
                          Ppat_var "b" (src/ppx.ml[107,3334+20]..[107,3334+21])
                        pattern (src/ppx.ml[107,3334+22]..[107,3334+23])
                          Ppat_var "c" (src/ppx.ml[107,3334+22]..[107,3334+23])
                      ]
                expression (src/ppx.ml[109,3424+4]..[109,3424+59])
                  Pexp_apply
                  expression (src/ppx.ml[109,3424+5]..[109,3424+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3424+5]..[109,3424+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3424+19]..[109,3424+58])
                        Pexp_apply
                        expression (src/ppx.ml[109,3424+20]..[109,3424+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3424+20]..[109,3424+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3424+35]..[109,3424+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5",(src/ppx.ml[109,3424+37]..[109,3424+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[110,3484+4]..[110,3484+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[110,3484+4]..[110,3484+13])
                  Some
                    []
                    pattern (src/ppx.ml[110,3484+14]..[110,3484+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[110,3484+15]..[110,3484+16])
                          Ppat_var "a" (src/ppx.ml[110,3484+15]..[110,3484+16])
                        pattern (src/ppx.ml[110,3484+17]..[110,3484+18])
                          Ppat_var "b" (src/ppx.ml[110,3484+17]..[110,3484+18])
                      ]
                expression (src/ppx.ml[112,3548+4]..[112,3548+59])
                  Pexp_apply
                  expression (src/ppx.ml[112,3548+5]..[112,3548+18])
                    Pexp_ident "print_endline" (src/ppx.ml[112,3548+5]..[112,3548+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[112,3548+19]..[112,3548+58])
                        Pexp_apply
                        expression (src/ppx.ml[112,3548+20]..[112,3548+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[112,3548+20]..[112,3548+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[112,3548+35]..[112,3548+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4",(src/ppx.ml[112,3548+37]..[112,3548+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3608+4]..[113,3608+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[113,3608+4]..[113,3608+16])
                  Some
                    []
                    pattern (src/ppx.ml[113,3608+17]..[113,3608+18])
                      Ppat_var "a" (src/ppx.ml[113,3608+17]..[113,3608+18])
                expression (src/ppx.ml[115,3656+4]..[115,3656+61])
                  Pexp_apply
                  expression (src/ppx.ml[115,3656+5]..[115,3656+18])
                    Pexp_ident "print_endline" (src/ppx.ml[115,3656+5]..[115,3656+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[115,3656+19]..[115,3656+60])
                        Pexp_apply
                        expression (src/ppx.ml[115,3656+20]..[115,3656+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[115,3656+20]..[115,3656+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[115,3656+35]..[115,3656+59])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[115,3656+36]..[115,3656+55])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3",(src/ppx.ml[115,3656+37]..[115,3656+54]),None)
                                expression (src/ppx.ml[115,3656+56]..[115,3656+57])
                                  Pexp_ident "a" (src/ppx.ml[115,3656+56]..[115,3656+57])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3863+4]..[118,3863+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[118,3863+4]..[118,3863+18])
                  Some
                    []
                    pattern (src/ppx.ml[118,3863+19]..[118,3863+20])
                      Ppat_var "a" (src/ppx.ml[118,3863+19]..[118,3863+20])
                expression (src/ppx.ml[119,3911+4]..[119,3911+64])
                  Pexp_apply
                  expression (src/ppx.ml[119,3911+5]..[119,3911+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3911+5]..[119,3911+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3911+19]..[119,3911+63])
                        Pexp_apply
                        expression (src/ppx.ml[119,3911+20]..[119,3911+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3911+20]..[119,3911+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3911+35]..[119,3911+62])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[119,3911+36]..[119,3911+58])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension",(src/ppx.ml[119,3911+37]..[119,3911+57]),None)
                                expression (src/ppx.ml[119,3911+59]..[119,3911+60])
                                  Pexp_ident "a" (src/ppx.ml[119,3911+59]..[119,3911+60])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[121,3980+2]..[121,3980+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[121,3980+2]..[121,3980+26])
        expression (src/ppx.ml[121,3980+26]..[127,4117+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[121,3980+26]..[121,3980+29])
            Ppat_var "x" (src/ppx.ml[121,3980+27]..[121,3980+28])
          expression (src/ppx.ml[122,4012+2]..[127,4117+6])
            Pexp_match
            expression (src/ppx.ml[122,4012+8]..[122,4012+9])
              Pexp_ident "x" (src/ppx.ml[122,4012+8]..[122,4012+9])
            [
              <case>
                pattern (src/ppx.ml[123,4027+4]..[123,4027+6])
                  Ppat_construct "[]" (src/ppx.ml[123,4027+4]..[123,4027+6])
                  None
                expression (src/ppx.ml[123,4027+10]..[123,4027+12])
                  Pexp_construct "()" (src/ppx.ml[123,4027+10]..[123,4027+12])
                  None
              <case>
                pattern (src/ppx.ml[124,4040+4]..[124,4040+10])
                  Ppat_construct "::" (src/ppx.ml[124,4040+6]..[124,4040+8])
                  Some
                    []
                    pattern (src/ppx.ml[124,4040+4]..[124,4040+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[124,4040+4]..[124,4040+5])
                          Ppat_var "h" (src/ppx.ml[124,4040+4]..[124,4040+5])
                        pattern (src/ppx.ml[124,4040+9]..[124,4040+10])
                          Ppat_var "t" (src/ppx.ml[124,4040+9]..[124,4040+10])
                      ]
                expression (src/ppx.ml[125,4054+4]..[127,4117+6])
                  Pexp_sequence
                  expression (src/ppx.ml[125,4054+4]..[125,4054+27])
                    Pexp_apply
                    expression (src/ppx.ml[125,4054+5]..[125,4054+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[125,4054+5]..[125,4054+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[125,4054+25]..[125,4054+26])
                          Pexp_ident "h" (src/ppx.ml[125,4054+25]..[125,4054+26])
                    ]
                  expression (src/ppx.ml[126,4083+4]..[127,4117+6])
                    Pexp_sequence
                    expression (src/ppx.ml[126,4083+4]..[126,4083+32])
                      Pexp_apply
                      expression (src/ppx.ml[126,4083+5]..[126,4083+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[126,4083+5]..[126,4083+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[126,4083+30]..[126,4083+31])
                            Pexp_ident "t" (src/ppx.ml[126,4083+30]..[126,4083+31])
                      ]
                    expression (src/ppx.ml[127,4117+4]..[127,4117+6])
                      Pexp_construct "()" (src/ppx.ml[127,4117+4]..[127,4117+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[129,4128+0]..[129,4128+17])
          Ppat_var "process_core_type" (src/ppx.ml[129,4128+0]..[129,4128+17])
        expression (src/ppx.ml[129,4128+17]..[138,4376+63]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[129,4128+17]..[129,4128+20])
            Ppat_var "x" (src/ppx.ml[129,4128+18]..[129,4128+19])
          expression (src/ppx.ml[130,4151+2]..[138,4376+63])
            Pexp_match
            expression (src/ppx.ml[130,4151+8]..[130,4151+9])
              Pexp_ident "x" (src/ppx.ml[130,4151+8]..[130,4151+9])
            [
              <case>
                pattern (src/ppx.ml[131,4167+4]..[136,4328+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[132,4173+6]..[132,4173+15]) ghost
                      pattern (src/ppx.ml[132,4173+6]..[132,4173+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[132,4173+6]..[132,4173+15])
                    "ptyp_loc" (src/ppx.ml[133,4212+5]..[133,4212+13]) ghost
                      pattern (src/ppx.ml[133,4212+5]..[133,4212+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[133,4212+5]..[133,4212+13])
                    "ptyp_loc_stack" (src/ppx.ml[134,4245+5]..[134,4245+19]) ghost
                      pattern (src/ppx.ml[134,4245+5]..[134,4245+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[134,4245+5]..[134,4245+19])
                    "ptyp_attributes" (src/ppx.ml[135,4288+5]..[135,4288+20]) ghost
                      pattern (src/ppx.ml[135,4288+5]..[135,4288+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[135,4288+5]..[135,4288+20])
                  ]
                expression (src/ppx.ml[137,4336+4]..[138,4376+63])
                  Pexp_sequence
                  expression (src/ppx.ml[137,4336+4]..[137,4336+38])
                    Pexp_apply
                    expression (src/ppx.ml[137,4336+5]..[137,4336+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[137,4336+5]..[137,4336+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[137,4336+28]..[137,4336+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[137,4336+28]..[137,4336+37])
                    ]
                  expression (src/ppx.ml[138,4376+4]..[138,4376+63])
                    Pexp_apply
                    expression (src/ppx.ml[138,4376+5]..[138,4376+18])
                      Pexp_ident "print_endline" (src/ppx.ml[138,4376+5]..[138,4376+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[138,4376+19]..[138,4376+62])
                          Pexp_apply
                          expression (src/ppx.ml[138,4376+20]..[138,4376+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[138,4376+20]..[138,4376+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[138,4376+35]..[138,4376+61])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[138,4376+36]..[138,4376+47])
                                    Pexp_constant PConst_string("ptyp_desc",(src/ppx.ml[138,4376+37]..[138,4376+46]),None)
                                  expression (src/ppx.ml[138,4376+51]..[138,4376+60])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[138,4376+51]..[138,4376+60])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[139,4440+4]..[139,4440+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[139,4440+4]..[139,4440+26])
        expression (src/ppx.ml[139,4440+26]..[144,4556+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[139,4440+26]..[139,4440+44])
            Ppat_constraint
            pattern (src/ppx.ml[139,4440+27]..[139,4440+28])
              Ppat_var "x" (src/ppx.ml[139,4440+27]..[139,4440+28])
            core_type (src/ppx.ml[139,4440+29]..[139,4440+43])
              Ptyp_constr "list" (src/ppx.ml[139,4440+39]..[139,4440+43])
              [
                core_type (src/ppx.ml[139,4440+29]..[139,4440+38])
                  Ptyp_constr "core_type" (src/ppx.ml[139,4440+29]..[139,4440+38])
                  []
              ]
          expression (src/ppx.ml[140,4487+2]..[144,4556+29])
            Pexp_match
            expression (src/ppx.ml[140,4487+8]..[140,4487+9])
              Pexp_ident "x" (src/ppx.ml[140,4487+8]..[140,4487+9])
            [
              <case>
                pattern (src/ppx.ml[141,4502+4]..[141,4502+6])
                  Ppat_construct "[]" (src/ppx.ml[141,4502+4]..[141,4502+6])
                  None
                expression (src/ppx.ml[141,4502+10]..[141,4502+12])
                  Pexp_construct "()" (src/ppx.ml[141,4502+10]..[141,4502+12])
                  None
              <case>
                pattern (src/ppx.ml[142,4515+4]..[142,4515+10])
                  Ppat_construct "::" (src/ppx.ml[142,4515+6]..[142,4515+8])
                  Some
                    []
                    pattern (src/ppx.ml[142,4515+4]..[142,4515+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[142,4515+4]..[142,4515+5])
                          Ppat_var "h" (src/ppx.ml[142,4515+4]..[142,4515+5])
                        pattern (src/ppx.ml[142,4515+9]..[142,4515+10])
                          Ppat_var "t" (src/ppx.ml[142,4515+9]..[142,4515+10])
                      ]
                expression (src/ppx.ml[143,4529+4]..[144,4556+29])
                  Pexp_sequence
                  expression (src/ppx.ml[143,4529+4]..[143,4529+25])
                    Pexp_apply
                    expression (src/ppx.ml[143,4529+4]..[143,4529+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[143,4529+4]..[143,4529+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[143,4529+22]..[143,4529+25])
                          Pexp_ident "h" (src/ppx.ml[143,4529+23]..[143,4529+24])
                    ]
                  expression (src/ppx.ml[144,4556+4]..[144,4556+29])
                    Pexp_apply
                    expression (src/ppx.ml[144,4556+4]..[144,4556+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[144,4556+4]..[144,4556+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[144,4556+26]..[144,4556+29])
                          Pexp_ident "t" (src/ppx.ml[144,4556+27]..[144,4556+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[151,4600+0]..[158,4798+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[151,4600+4]..[151,4600+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[151,4600+4]..[151,4600+31])
        expression (src/ppx.ml[151,4600+31]..[158,4798+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4600+31]..[151,4600+34])
            Ppat_var "x" (src/ppx.ml[151,4600+32]..[151,4600+33])
          expression (src/ppx.ml[152,4637+2]..[158,4798+64])
            Pexp_match
            expression (src/ppx.ml[152,4637+8]..[152,4637+9])
              Pexp_ident "x" (src/ppx.ml[152,4637+8]..[152,4637+9])
            [
              <case>
                pattern (src/ppx.ml[153,4652+4]..[153,4652+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[153,4652+4]..[153,4652+15])
                  Some
                    []
                    pattern (src/ppx.ml[153,4652+16]..[153,4652+17])
                      Ppat_var "a" (src/ppx.ml[153,4652+16]..[153,4652+17])
                expression (src/ppx.ml[154,4673+4]..[155,4705+63])
                  Pexp_sequence
                  expression (src/ppx.ml[154,4673+4]..[154,4673+30])
                    Pexp_apply
                    expression (src/ppx.ml[154,4673+5]..[154,4673+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[154,4673+5]..[154,4673+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[154,4673+28]..[154,4673+29])
                          Pexp_ident "a" (src/ppx.ml[154,4673+28]..[154,4673+29])
                    ]
                  expression (src/ppx.ml[155,4705+4]..[155,4705+63])
                    Pexp_apply
                    expression (src/ppx.ml[155,4705+5]..[155,4705+18])
                      Pexp_ident "print_endline" (src/ppx.ml[155,4705+5]..[155,4705+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4705+19]..[155,4705+62])
                          Pexp_apply
                          expression (src/ppx.ml[155,4705+20]..[155,4705+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[155,4705+20]..[155,4705+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[155,4705+35]..[155,4705+61])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[155,4705+36]..[155,4705+55])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple",(src/ppx.ml[155,4705+37]..[155,4705+54]),None)
                                  expression (src/ppx.ml[155,4705+59]..[155,4705+60])
                                    Pexp_ident "a" (src/ppx.ml[155,4705+59]..[155,4705+60])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[157,4776+4]..[157,4776+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[157,4776+4]..[157,4776+16])
                  Some
                    []
                    pattern (src/ppx.ml[157,4776+17]..[157,4776+18])
                      Ppat_var "a" (src/ppx.ml[157,4776+17]..[157,4776+18])
                expression (src/ppx.ml[158,4798+4]..[158,4798+64])
                  Pexp_apply
                  expression (src/ppx.ml[158,4798+5]..[158,4798+18])
                    Pexp_ident "print_endline" (src/ppx.ml[158,4798+5]..[158,4798+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[158,4798+19]..[158,4798+63])
                        Pexp_apply
                        expression (src/ppx.ml[158,4798+20]..[158,4798+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[158,4798+20]..[158,4798+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[158,4798+35]..[158,4798+62])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[158,4798+36]..[158,4798+56])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record",(src/ppx.ml[158,4798+37]..[158,4798+55]),None)
                                expression (src/ppx.ml[158,4798+60]..[158,4798+61])
                                  Pexp_ident "a" (src/ppx.ml[158,4798+60]..[158,4798+61])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[160,4864+0]..[192,5843+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[160,4864+8]..[160,4864+58])
          Ppat_var "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[160,4864+8]..[160,4864+58])
        expression (src/ppx.ml[160,4864+58]..[192,5843+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[160,4864+58]..[160,4864+61])
            Ppat_var "x" (src/ppx.ml[160,4864+59]..[160,4864+60])
          expression (src/ppx.ml[161,4928+2]..[192,5843+8])
            Pexp_match
            expression (src/ppx.ml[161,4928+8]..[161,4928+9])
              Pexp_ident "x" (src/ppx.ml[161,4928+8]..[161,4928+9])
            [
              <case>
                pattern (src/ppx.ml[162,4943+4]..[162,4943+6])
                  Ppat_construct "[]" (src/ppx.ml[162,4943+4]..[162,4943+6])
                  None
                expression (src/ppx.ml[162,4943+10]..[162,4943+12])
                  Pexp_construct "()" (src/ppx.ml[162,4943+10]..[162,4943+12])
                  None
              <case>
                pattern (src/ppx.ml[163,4956+4]..[163,4956+10])
                  Ppat_construct "::" (src/ppx.ml[163,4956+6]..[163,4956+8])
                  Some
                    []
                    pattern (src/ppx.ml[163,4956+4]..[163,4956+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[163,4956+4]..[163,4956+5])
                          Ppat_var "h" (src/ppx.ml[163,4956+4]..[163,4956+5])
                        pattern (src/ppx.ml[163,4956+9]..[163,4956+10])
                          Ppat_var "t" (src/ppx.ml[163,4956+9]..[163,4956+10])
                      ]
                expression (src/ppx.ml[165,5036+4]..[192,5843+8])
                  Pexp_match
                  expression (src/ppx.ml[165,5036+10]..[165,5036+11])
                    Pexp_ident "h" (src/ppx.ml[165,5036+10]..[165,5036+11])
                  [
                    <case>
                      pattern (src/ppx.ml[166,5053+5]..[173,5291+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[167,5060+6]..[167,5060+14]) ghost
                            pattern (src/ppx.ml[167,5060+6]..[167,5060+14])
                              Ppat_var "pcd_name" (src/ppx.ml[167,5060+6]..[167,5060+14])
                          "pcd_vars" (src/ppx.ml[168,5094+6]..[168,5094+14]) ghost
                            pattern (src/ppx.ml[168,5094+6]..[168,5094+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[168,5094+6]..[168,5094+14])
                          "pcd_args" (src/ppx.ml[169,5133+6]..[169,5133+14]) ghost
                            pattern (src/ppx.ml[169,5133+6]..[169,5133+14])
                              Ppat_var "pcd_args" (src/ppx.ml[169,5133+6]..[169,5133+14])
                          "pcd_res" (src/ppx.ml[170,5178+6]..[170,5178+13]) ghost
                            pattern (src/ppx.ml[170,5178+6]..[170,5178+13])
                              Ppat_var "pcd_res" (src/ppx.ml[170,5178+6]..[170,5178+13])
                          "pcd_loc" (src/ppx.ml[171,5217+6]..[171,5217+13]) ghost
                            pattern (src/ppx.ml[171,5217+6]..[171,5217+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[171,5217+6]..[171,5217+13])
                          "pcd_attributes" (src/ppx.ml[172,5250+6]..[172,5250+20]) ghost
                            pattern (src/ppx.ml[172,5250+6]..[172,5250+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[172,5250+6]..[172,5250+20])
                        ]
                      expression (src/ppx.ml[176,5373+6]..[192,5843+8])
                        Pexp_sequence
                        expression (src/ppx.ml[176,5373+6]..[176,5373+43])
                          Pexp_apply
                          expression (src/ppx.ml[176,5373+6]..[176,5373+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[176,5373+6]..[176,5373+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[176,5373+33]..[176,5373+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[176,5373+34]..[176,5373+42])
                          ]
                        expression (src/ppx.ml[177,5418+6]..[192,5843+8])
                          Pexp_sequence
                          expression (src/ppx.ml[177,5418+6]..[190,5763+16])
                            Pexp_apply
                            expression (src/ppx.ml[177,5418+7]..[177,5418+20])
                              Pexp_ident "print_endline" (src/ppx.ml[177,5418+7]..[177,5418+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[177,5418+21]..[190,5763+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[177,5418+22]..[177,5418+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[177,5418+22]..[177,5418+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[177,5418+37]..[190,5763+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[178,5457+11]..[178,5457+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[178,5457+12]..[178,5457+36]),None)
                                          expression (src/ppx.ml[179,5496+15]..[179,5496+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[179,5496+15]..[179,5496+23])
                                          expression (src/ppx.ml[180,5521+15]..[180,5521+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[180,5521+16]..[180,5521+20]),None)
                                          expression (src/ppx.ml[181,5544+15]..[181,5544+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[181,5544+15]..[181,5544+23])
                                          expression (src/ppx.ml[182,5569+15]..[182,5569+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[182,5569+16]..[182,5569+20]),None)
                                          expression (src/ppx.ml[183,5592+15]..[183,5592+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[183,5592+15]..[183,5592+23])
                                          expression (src/ppx.ml[184,5617+15]..[184,5617+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[184,5617+16]..[184,5617+19]),None)
                                          expression (src/ppx.ml[185,5639+15]..[185,5639+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[185,5639+15]..[185,5639+22])
                                          expression (src/ppx.ml[186,5663+15]..[186,5663+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[186,5663+16]..[186,5663+19]),None)
                                          expression (src/ppx.ml[187,5685+15]..[187,5685+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[187,5685+15]..[187,5685+22])
                                          expression (src/ppx.ml[188,5709+15]..[188,5709+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[188,5709+16]..[188,5709+21]),None)
                                          expression (src/ppx.ml[189,5733+15]..[189,5733+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[189,5733+15]..[189,5733+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[191,5781+6]..[192,5843+8])
                            Pexp_sequence
                            expression (src/ppx.ml[191,5781+6]..[191,5781+60])
                              Pexp_apply
                              expression (src/ppx.ml[191,5781+7]..[191,5781+57])
                                Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[191,5781+7]..[191,5781+57])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[191,5781+58]..[191,5781+59])
                                    Pexp_ident "t" (src/ppx.ml[191,5781+58]..[191,5781+59])
                              ]
                            expression (src/ppx.ml[192,5843+6]..[192,5843+8])
                              Pexp_construct "()" (src/ppx.ml[192,5843+6]..[192,5843+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[194,5855+0]..[205,6253+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[194,5855+4]..[194,5855+16])
          Ppat_var "process_kind" (src/ppx.ml[194,5855+4]..[194,5855+16])
        expression (src/ppx.ml[194,5855+16]..[205,6253+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[194,5855+16]..[194,5855+19])
            Ppat_var "x" (src/ppx.ml[194,5855+17]..[194,5855+18])
          expression (src/ppx.ml[195,5877+2]..[205,6253+77])
            Pexp_match
            expression (src/ppx.ml[195,5877+8]..[195,5877+9])
              Pexp_ident "x" (src/ppx.ml[195,5877+8]..[195,5877+9])
            [
              <case>
                pattern (src/ppx.ml[197,5914+4]..[197,5914+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[197,5914+4]..[197,5914+18])
                  None
                expression (src/ppx.ml[197,5914+23]..[197,5914+81])
                  Pexp_apply
                  expression (src/ppx.ml[197,5914+24]..[197,5914+37])
                    Pexp_ident "print_endline" (src/ppx.ml[197,5914+24]..[197,5914+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[197,5914+38]..[197,5914+80])
                        Pexp_apply
                        expression (src/ppx.ml[197,5914+39]..[197,5914+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[197,5914+39]..[197,5914+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[197,5914+54]..[197,5914+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[197,5914+56]..[197,5914+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[198,5996+4]..[198,5996+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[198,5996+4]..[198,5996+17])
                  Some
                    []
                    pattern (src/ppx.ml[198,5996+18]..[198,5996+19])
                      Ppat_var "a" (src/ppx.ml[198,5996+18]..[198,5996+19])
                expression (src/ppx.ml[199,6019+4]..[200,6079+65])
                  Pexp_sequence
                  expression (src/ppx.ml[199,6019+4]..[199,6019+58])
                    Pexp_apply
                    expression (src/ppx.ml[199,6019+5]..[199,6019+55])
                      Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[199,6019+5]..[199,6019+55])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[199,6019+56]..[199,6019+57])
                          Pexp_ident "a" (src/ppx.ml[199,6019+56]..[199,6019+57])
                    ]
                  expression (src/ppx.ml[200,6079+4]..[200,6079+65])
                    Pexp_apply
                    expression (src/ppx.ml[200,6079+5]..[200,6079+18])
                      Pexp_ident "print_endline" (src/ppx.ml[200,6079+5]..[200,6079+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[200,6079+19]..[200,6079+64])
                          Pexp_apply
                          expression (src/ppx.ml[200,6079+20]..[200,6079+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[200,6079+20]..[200,6079+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[200,6079+35]..[200,6079+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[200,6079+36]..[200,6079+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[200,6079+37]..[200,6079+57]),None)
                                  expression (src/ppx.ml[200,6079+61]..[200,6079+62])
                                    Pexp_ident "a" (src/ppx.ml[200,6079+61]..[200,6079+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[203,6192+5]..[203,6192+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[203,6192+5]..[203,6192+17])
                  Some
                    []
                    pattern (src/ppx.ml[203,6192+18]..[203,6192+19])
                      Ppat_var "a" (src/ppx.ml[203,6192+18]..[203,6192+19])
                expression (src/ppx.ml[204,6220+5]..[204,6220+32])
                  Pexp_apply
                  expression (src/ppx.ml[204,6220+5]..[204,6220+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[204,6220+5]..[204,6220+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[204,6220+29]..[204,6220+32])
                        Pexp_ident "a" (src/ppx.ml[204,6220+30]..[204,6220+31])
                  ]
              <case>
                pattern (src/ppx.ml[205,6253+5]..[205,6253+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[205,6253+5]..[205,6253+15])
                  None
                expression (src/ppx.ml[205,6253+19]..[205,6253+77])
                  Pexp_apply
                  expression (src/ppx.ml[205,6253+20]..[205,6253+33])
                    Pexp_ident "print_endline" (src/ppx.ml[205,6253+20]..[205,6253+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[205,6253+34]..[205,6253+76])
                        Pexp_apply
                        expression (src/ppx.ml[205,6253+35]..[205,6253+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[205,6253+35]..[205,6253+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[205,6253+50]..[205,6253+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[205,6253+52]..[205,6253+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[207,6332+0]..[228,7290+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[207,6332+4]..[207,6332+19])
          Ppat_var "print_type_decl" (src/ppx.ml[207,6332+4]..[207,6332+19])
        expression (src/ppx.ml[207,6332+19]..[228,7290+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[207,6332+19]..[207,6332+22])
            Ppat_var "x" (src/ppx.ml[207,6332+20]..[207,6332+21])
          expression (src/ppx.ml[208,6357+2]..[228,7290+38])
            Pexp_match
            expression (src/ppx.ml[208,6357+8]..[208,6357+9])
              Pexp_ident "x" (src/ppx.ml[208,6357+8]..[208,6357+9])
            [
              <case>
                pattern (src/ppx.ml[209,6372+4]..[218,6753+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[210,6378+6]..[210,6378+16]) ghost
                      pattern (src/ppx.ml[210,6378+6]..[210,6378+16])
                        Ppat_var "ptype_name" (src/ppx.ml[210,6378+6]..[210,6378+16])
                    "ptype_params" (src/ppx.ml[211,6415+6]..[211,6415+18]) ghost
                      pattern (src/ppx.ml[211,6415+6]..[211,6415+18])
                        Ppat_var "ptype_params" (src/ppx.ml[211,6415+6]..[211,6415+18])
                    "ptype_cstrs" (src/ppx.ml[212,6487+6]..[212,6487+17]) ghost
                      pattern (src/ppx.ml[212,6487+6]..[212,6487+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[212,6487+6]..[212,6487+17])
                    "ptype_kind" (src/ppx.ml[213,6556+6]..[213,6556+16]) ghost
                      pattern (src/ppx.ml[213,6556+6]..[213,6556+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[213,6556+6]..[213,6556+16])
                    "ptype_private" (src/ppx.ml[214,6593+6]..[214,6593+19]) ghost
                      pattern (src/ppx.ml[214,6593+6]..[214,6593+19])
                        Ppat_var "ptype_private" (src/ppx.ml[214,6593+6]..[214,6593+19])
                    "ptype_manifest" (src/ppx.ml[215,6634+6]..[215,6634+20]) ghost
                      pattern (src/ppx.ml[215,6634+6]..[215,6634+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[215,6634+6]..[215,6634+20])
                    "ptype_attributes" (src/ppx.ml[216,6681+6]..[216,6681+22]) ghost
                      pattern (src/ppx.ml[216,6681+6]..[216,6681+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[216,6681+6]..[216,6681+22])
                    "ptype_loc" (src/ppx.ml[217,6722+6]..[217,6722+15]) ghost
                      pattern (src/ppx.ml[217,6722+6]..[217,6722+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[217,6722+6]..[217,6722+15])
                  ]
                expression (src/ppx.ml[219,6762+4]..[228,7290+38])
                  Pexp_sequence
                  expression (src/ppx.ml[219,6762+4]..[219,6762+63])
                    Pexp_apply
                    expression (src/ppx.ml[219,6762+5]..[219,6762+18])
                      Pexp_ident "print_endline" (src/ppx.ml[219,6762+5]..[219,6762+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[219,6762+19]..[219,6762+62])
                          Pexp_apply
                          expression (src/ppx.ml[219,6762+20]..[219,6762+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[219,6762+20]..[219,6762+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[219,6762+35]..[219,6762+61])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[219,6762+36]..[219,6762+48])
                                    Pexp_constant PConst_string("type_decl:",(src/ppx.ml[219,6762+37]..[219,6762+47]),None)
                                  expression (src/ppx.ml[219,6762+50]..[219,6762+60])
                                    Pexp_ident "ptype_name" (src/ppx.ml[219,6762+50]..[219,6762+60])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[220,6827+4]..[228,7290+38])
                    Pexp_sequence
                    expression (src/ppx.ml[220,6827+4]..[220,6827+66])
                      Pexp_apply
                      expression (src/ppx.ml[220,6827+5]..[220,6827+18])
                        Pexp_ident "print_endline" (src/ppx.ml[220,6827+5]..[220,6827+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[220,6827+19]..[220,6827+65])
                            Pexp_apply
                            expression (src/ppx.ml[220,6827+20]..[220,6827+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[220,6827+20]..[220,6827+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[220,6827+35]..[220,6827+64])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[220,6827+36]..[220,6827+49])
                                      Pexp_constant PConst_string("parameters:",(src/ppx.ml[220,6827+37]..[220,6827+48]),None)
                                    expression (src/ppx.ml[220,6827+51]..[220,6827+63])
                                      Pexp_ident "ptype_params" (src/ppx.ml[220,6827+51]..[220,6827+63])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[221,6895+4]..[228,7290+38])
                      Pexp_sequence
                      expression (src/ppx.ml[221,6895+4]..[221,6895+60])
                        Pexp_apply
                        expression (src/ppx.ml[221,6895+5]..[221,6895+18])
                          Pexp_ident "print_endline" (src/ppx.ml[221,6895+5]..[221,6895+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[221,6895+19]..[221,6895+59])
                              Pexp_apply
                              expression (src/ppx.ml[221,6895+20]..[221,6895+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[221,6895+20]..[221,6895+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[221,6895+35]..[221,6895+58])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[221,6895+36]..[221,6895+44])
                                        Pexp_constant PConst_string("cstrs:",(src/ppx.ml[221,6895+37]..[221,6895+43]),None)
                                      expression (src/ppx.ml[221,6895+46]..[221,6895+57])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[221,6895+46]..[221,6895+57])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[222,6957+4]..[228,7290+38])
                        Pexp_sequence
                        expression (src/ppx.ml[222,6957+4]..[222,6957+57])
                          Pexp_apply
                          expression (src/ppx.ml[222,6957+5]..[222,6957+18])
                            Pexp_ident "print_endline" (src/ppx.ml[222,6957+5]..[222,6957+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[222,6957+19]..[222,6957+56])
                                Pexp_apply
                                expression (src/ppx.ml[222,6957+20]..[222,6957+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[222,6957+20]..[222,6957+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[222,6957+35]..[222,6957+55])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[222,6957+36]..[222,6957+43])
                                          Pexp_constant PConst_string("kind:",(src/ppx.ml[222,6957+37]..[222,6957+42]),None)
                                        expression (src/ppx.ml[222,6957+44]..[222,6957+54])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[222,6957+44]..[222,6957+54])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[223,7016+4]..[228,7290+38])
                          Pexp_sequence
                          expression (src/ppx.ml[223,7016+4]..[223,7016+29])
                            Pexp_apply
                            expression (src/ppx.ml[223,7016+5]..[223,7016+17])
                              Pexp_ident "process_kind" (src/ppx.ml[223,7016+5]..[223,7016+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[223,7016+18]..[223,7016+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[223,7016+18]..[223,7016+28])
                            ]
                          expression (src/ppx.ml[224,7047+4]..[228,7290+38])
                            Pexp_apply
                            expression (src/ppx.ml[224,7047+5]..[224,7047+18])
                              Pexp_ident "print_endline" (src/ppx.ml[224,7047+5]..[224,7047+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[224,7047+19]..[228,7290+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[224,7047+20]..[224,7047+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[224,7047+20]..[224,7047+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[224,7047+35]..[228,7290+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[224,7047+36]..[224,7047+46])
                                            Pexp_constant PConst_string("private:",(src/ppx.ml[224,7047+37]..[224,7047+45]),None)
                                          expression (src/ppx.ml[224,7047+49]..[224,7047+62])
                                            Pexp_ident "ptype_private" (src/ppx.ml[224,7047+49]..[224,7047+62])
                                          expression (src/ppx.ml[225,7111+36]..[225,7111+46])
                                            Pexp_constant PConst_string("manifest",(src/ppx.ml[225,7111+37]..[225,7111+45]),None)
                                          expression (src/ppx.ml[225,7111+48]..[225,7111+62])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[225,7111+48]..[225,7111+62])
                                          expression (src/ppx.ml[226,7175+36]..[226,7175+42])
                                            Pexp_constant PConst_string("attr",(src/ppx.ml[226,7175+37]..[226,7175+41]),None)
                                          expression (src/ppx.ml[226,7175+44]..[226,7175+60])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[226,7175+44]..[226,7175+60])
                                          expression (src/ppx.ml[227,7237+36]..[227,7237+41])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[227,7237+37]..[227,7237+40]),None)
                                          expression (src/ppx.ml[227,7237+43]..[227,7237+52])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[227,7237+43]..[227,7237+52])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[230,7334+0]..[236,7469+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[230,7334+8]..[230,7334+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[230,7334+8]..[230,7334+30])
        expression (src/ppx.ml[230,7334+30]..[236,7469+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[230,7334+30]..[230,7334+33])
            Ppat_var "x" (src/ppx.ml[230,7334+31]..[230,7334+32])
          expression (src/ppx.ml[231,7370+2]..[236,7469+6])
            Pexp_match
            expression (src/ppx.ml[231,7370+8]..[231,7370+9])
              Pexp_ident "x" (src/ppx.ml[231,7370+8]..[231,7370+9])
            [
              <case>
                pattern (src/ppx.ml[232,7385+4]..[232,7385+6])
                  Ppat_construct "[]" (src/ppx.ml[232,7385+4]..[232,7385+6])
                  None
                expression (src/ppx.ml[232,7385+10]..[232,7385+12])
                  Pexp_construct "()" (src/ppx.ml[232,7385+10]..[232,7385+12])
                  None
              <case>
                pattern (src/ppx.ml[233,7398+4]..[233,7398+10])
                  Ppat_construct "::" (src/ppx.ml[233,7398+6]..[233,7398+8])
                  Some
                    []
                    pattern (src/ppx.ml[233,7398+4]..[233,7398+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[233,7398+4]..[233,7398+5])
                          Ppat_var "h" (src/ppx.ml[233,7398+4]..[233,7398+5])
                        pattern (src/ppx.ml[233,7398+9]..[233,7398+10])
                          Ppat_var "t" (src/ppx.ml[233,7398+9]..[233,7398+10])
                      ]
                expression (src/ppx.ml[234,7412+4]..[236,7469+6])
                  Pexp_sequence
                  expression (src/ppx.ml[234,7412+4]..[234,7412+23])
                    Pexp_apply
                    expression (src/ppx.ml[234,7412+5]..[234,7412+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[234,7412+5]..[234,7412+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[234,7412+21]..[234,7412+22])
                          Pexp_ident "h" (src/ppx.ml[234,7412+21]..[234,7412+22])
                    ]
                  expression (src/ppx.ml[235,7437+4]..[236,7469+6])
                    Pexp_sequence
                    expression (src/ppx.ml[235,7437+4]..[235,7437+30])
                      Pexp_apply
                      expression (src/ppx.ml[235,7437+5]..[235,7437+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[235,7437+5]..[235,7437+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[235,7437+28]..[235,7437+29])
                            Pexp_ident "t" (src/ppx.ml[235,7437+28]..[235,7437+29])
                      ]
                    expression (src/ppx.ml[236,7469+4]..[236,7469+6])
                      Pexp_construct "()" (src/ppx.ml[236,7469+4]..[236,7469+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[238,7481+0]..[264,9427+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[238,7481+4]..[238,7481+13])
          Ppat_var "printdesc" (src/ppx.ml[238,7481+4]..[238,7481+13])
        expression (src/ppx.ml[238,7481+13]..[264,9427+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[238,7481+13]..[238,7481+37])
            Ppat_constraint
            pattern (src/ppx.ml[238,7481+14]..[238,7481+15])
              Ppat_var "x" (src/ppx.ml[238,7481+14]..[238,7481+15])
            core_type (src/ppx.ml[238,7481+17]..[238,7481+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[238,7481+17]..[238,7481+36])
              []
          expression (src/ppx.ml[238,7481+38]..[264,9427+128])
            Pexp_constraint
            expression (src/ppx.ml[239,7527+2]..[264,9427+128])
              Pexp_sequence
              expression (src/ppx.ml[239,7527+2]..[239,7527+50])
                Pexp_apply
                expression (src/ppx.ml[239,7527+3]..[239,7527+16])
                  Pexp_ident "print_endline" (src/ppx.ml[239,7527+3]..[239,7527+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[239,7527+17]..[239,7527+49])
                      Pexp_apply
                      expression (src/ppx.ml[239,7527+18]..[239,7527+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[239,7527+18]..[239,7527+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[239,7527+33]..[239,7527+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[239,7527+34]..[239,7527+44])
                                Pexp_constant PConst_string("DEBUG44:",(src/ppx.ml[239,7527+35]..[239,7527+43]),None)
                              expression (src/ppx.ml[239,7527+46]..[239,7527+47])
                                Pexp_ident "x" (src/ppx.ml[239,7527+46]..[239,7527+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[240,7579+2]..[264,9427+128])
                Pexp_match
                expression (src/ppx.ml[240,7579+8]..[240,7579+9])
                  Pexp_ident "x" (src/ppx.ml[240,7579+8]..[240,7579+9])
                [
                  <case>
                    pattern (src/ppx.ml[241,7594+4]..[241,7594+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[241,7594+4]..[241,7594+13])
                      Some
                        []
                        pattern (src/ppx.ml[241,7594+14]..[241,7594+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[241,7594+15]..[241,7594+25])
                              Ppat_var "expression" (src/ppx.ml[241,7594+15]..[241,7594+25])
                            pattern (src/ppx.ml[241,7594+26]..[241,7594+36])
                              Ppat_var "attributes" (src/ppx.ml[241,7594+26]..[241,7594+36])
                          ]
                    expression (src/ppx.ml[241,7594+41]..[241,7594+117])
                      Pexp_apply
                      expression (src/ppx.ml[241,7594+42]..[241,7594+55])
                        Pexp_ident "print_endline" (src/ppx.ml[241,7594+42]..[241,7594+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[241,7594+56]..[241,7594+116])
                            Pexp_apply
                            expression (src/ppx.ml[241,7594+57]..[241,7594+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[241,7594+57]..[241,7594+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[241,7594+72]..[241,7594+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[241,7594+73]..[241,7594+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[241,7594+74]..[241,7594+90]),None)
                                    expression (src/ppx.ml[241,7594+93]..[241,7594+103])
                                      Pexp_ident "expression" (src/ppx.ml[241,7594+93]..[241,7594+103])
                                    expression (src/ppx.ml[241,7594+104]..[241,7594+114])
                                      Pexp_ident "attributes" (src/ppx.ml[241,7594+104]..[241,7594+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[243,7732+4]..[243,7732+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[243,7732+4]..[243,7732+14])
                      Some
                        []
                        pattern (src/ppx.ml[243,7732+15]..[243,7732+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[243,7732+16]..[243,7732+24])
                              Ppat_var "rec_flag" (src/ppx.ml[243,7732+16]..[243,7732+24])
                            pattern (src/ppx.ml[243,7732+26]..[243,7732+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[243,7732+26]..[243,7732+44])
                          ]
                    expression (src/ppx.ml[243,7732+48]..[244,7866+48])
                      Pexp_sequence
                      expression (src/ppx.ml[243,7732+48]..[243,7732+132])
                        Pexp_apply
                        expression (src/ppx.ml[243,7732+49]..[243,7732+62])
                          Pexp_ident "print_endline" (src/ppx.ml[243,7732+49]..[243,7732+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[243,7732+63]..[243,7732+131])
                              Pexp_apply
                              expression (src/ppx.ml[243,7732+64]..[243,7732+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[243,7732+64]..[243,7732+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[243,7732+79]..[243,7732+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[243,7732+80]..[243,7732+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[243,7732+81]..[243,7732+98]),None)
                                      expression (src/ppx.ml[243,7732+101]..[243,7732+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[243,7732+101]..[243,7732+109])
                                      expression (src/ppx.ml[243,7732+111]..[243,7732+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[243,7732+111]..[243,7732+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[244,7866+4]..[244,7866+48])
                        Pexp_apply
                        expression (src/ppx.ml[244,7866+4]..[244,7866+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[244,7866+4]..[244,7866+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[244,7866+28]..[244,7866+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[244,7866+29]..[244,7866+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[245,7915+4]..[245,7915+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[245,7915+4]..[245,7915+18])
                      Some
                        []
                        pattern (src/ppx.ml[245,7915+19]..[245,7915+36])
                          Ppat_var "value_description" (src/ppx.ml[245,7915+19]..[245,7915+36])
                    expression (src/ppx.ml[245,7915+39]..[245,7915+116])
                      Pexp_apply
                      expression (src/ppx.ml[245,7915+40]..[245,7915+53])
                        Pexp_ident "print_endline" (src/ppx.ml[245,7915+40]..[245,7915+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[245,7915+54]..[245,7915+115])
                            Pexp_apply
                            expression (src/ppx.ml[245,7915+55]..[245,7915+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[245,7915+55]..[245,7915+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,7915+70]..[245,7915+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[245,7915+71]..[245,7915+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[245,7915+72]..[245,7915+93]),None)
                                    expression (src/ppx.ml[245,7915+96]..[245,7915+113])
                                      Pexp_ident "value_description" (src/ppx.ml[245,7915+96]..[245,7915+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[247,8033+4]..[247,8033+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[247,8033+4]..[247,8033+13])
                      Some
                        []
                        pattern (src/ppx.ml[247,8033+14]..[247,8033+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[247,8033+15]..[247,8033+23])
                              Ppat_var "rec_flag" (src/ppx.ml[247,8033+15]..[247,8033+23])
                            pattern (src/ppx.ml[247,8033+25]..[247,8033+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[247,8033+25]..[247,8033+46])
                          ]
                    expression (src/ppx.ml[249,8112+4]..[250,8163+90])
                      Pexp_sequence
                      expression (src/ppx.ml[249,8112+4]..[249,8112+49])
                        Pexp_apply
                        expression (src/ppx.ml[249,8112+4]..[249,8112+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[249,8112+4]..[249,8112+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[249,8112+26]..[249,8112+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[249,8112+27]..[249,8112+48])
                        ]
                      expression (src/ppx.ml[250,8163+4]..[250,8163+90])
                        Pexp_apply
                        expression (src/ppx.ml[250,8163+5]..[250,8163+18])
                          Pexp_ident "print_endline" (src/ppx.ml[250,8163+5]..[250,8163+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[250,8163+19]..[250,8163+89])
                              Pexp_apply
                              expression (src/ppx.ml[250,8163+20]..[250,8163+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[250,8163+20]..[250,8163+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[250,8163+35]..[250,8163+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[250,8163+36]..[250,8163+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[250,8163+37]..[250,8163+53]),None)
                                      expression (src/ppx.ml[250,8163+56]..[250,8163+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[250,8163+56]..[250,8163+64])
                                      expression (src/ppx.ml[250,8163+66]..[250,8163+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[250,8163+66]..[250,8163+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[253,8256+4]..[253,8256+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[253,8256+4]..[253,8256+15])
                      Some
                        []
                        pattern (src/ppx.ml[253,8256+17]..[253,8256+31])
                          Ppat_var "type_extension" (src/ppx.ml[253,8256+17]..[253,8256+31])
                    expression (src/ppx.ml[253,8256+34]..[253,8256+105])
                      Pexp_apply
                      expression (src/ppx.ml[253,8256+35]..[253,8256+48])
                        Pexp_ident "print_endline" (src/ppx.ml[253,8256+35]..[253,8256+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,8256+49]..[253,8256+104])
                            Pexp_apply
                            expression (src/ppx.ml[253,8256+50]..[253,8256+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,8256+50]..[253,8256+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,8256+65]..[253,8256+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,8256+66]..[253,8256+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[253,8256+67]..[253,8256+85]),None)
                                    expression (src/ppx.ml[253,8256+88]..[253,8256+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[253,8256+88]..[253,8256+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[254,8362+4]..[254,8362+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[254,8362+4]..[254,8362+18])
                      Some
                        []
                        pattern (src/ppx.ml[254,8362+19]..[254,8362+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[254,8362+19]..[254,8362+40])
                    expression (src/ppx.ml[254,8362+43]..[254,8362+124])
                      Pexp_apply
                      expression (src/ppx.ml[254,8362+44]..[254,8362+57])
                        Pexp_ident "print_endline" (src/ppx.ml[254,8362+44]..[254,8362+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[254,8362+58]..[254,8362+123])
                            Pexp_apply
                            expression (src/ppx.ml[254,8362+59]..[254,8362+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[254,8362+59]..[254,8362+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[254,8362+74]..[254,8362+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[254,8362+75]..[254,8362+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[254,8362+76]..[254,8362+97]),None)
                                    expression (src/ppx.ml[254,8362+100]..[254,8362+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[254,8362+100]..[254,8362+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8487+4]..[255,8487+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[255,8487+4]..[255,8487+15])
                      Some
                        []
                        pattern (src/ppx.ml[255,8487+17]..[255,8487+31])
                          Ppat_var "module_binding" (src/ppx.ml[255,8487+17]..[255,8487+31])
                    expression (src/ppx.ml[255,8487+34]..[255,8487+104])
                      Pexp_apply
                      expression (src/ppx.ml[255,8487+35]..[255,8487+48])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8487+35]..[255,8487+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8487+49]..[255,8487+103])
                            Pexp_apply
                            expression (src/ppx.ml[255,8487+50]..[255,8487+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8487+50]..[255,8487+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8487+65]..[255,8487+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8487+66]..[255,8487+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[255,8487+67]..[255,8487+85]),None)
                                    expression (src/ppx.ml[255,8487+87]..[255,8487+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[255,8487+87]..[255,8487+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[256,8592+4]..[256,8592+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[256,8592+4]..[256,8592+18])
                      Some
                        []
                        pattern (src/ppx.ml[256,8592+20]..[256,8592+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[256,8592+20]..[256,8592+39])
                    expression (src/ppx.ml[256,8592+42]..[256,8592+121])
                      Pexp_apply
                      expression (src/ppx.ml[256,8592+43]..[256,8592+56])
                        Pexp_ident "print_endline" (src/ppx.ml[256,8592+43]..[256,8592+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[256,8592+57]..[256,8592+120])
                            Pexp_apply
                            expression (src/ppx.ml[256,8592+58]..[256,8592+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[256,8592+58]..[256,8592+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[256,8592+73]..[256,8592+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[256,8592+74]..[256,8592+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[256,8592+75]..[256,8592+96]),None)
                                    expression (src/ppx.ml[256,8592+99]..[256,8592+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[256,8592+99]..[256,8592+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8714+4]..[257,8714+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[257,8714+4]..[257,8714+16])
                      Some
                        []
                        pattern (src/ppx.ml[257,8714+17]..[257,8714+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[257,8714+17]..[257,8714+40])
                    expression (src/ppx.ml[257,8714+43]..[257,8714+124])
                      Pexp_apply
                      expression (src/ppx.ml[257,8714+44]..[257,8714+57])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8714+44]..[257,8714+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8714+58]..[257,8714+123])
                            Pexp_apply
                            expression (src/ppx.ml[257,8714+59]..[257,8714+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8714+59]..[257,8714+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8714+74]..[257,8714+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8714+75]..[257,8714+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[257,8714+76]..[257,8714+95]),None)
                                    expression (src/ppx.ml[257,8714+98]..[257,8714+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[257,8714+98]..[257,8714+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8856+4]..[259,8856+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[259,8856+4]..[259,8856+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8856+14]..[259,8856+30])
                          Ppat_var "open_description" (src/ppx.ml[259,8856+14]..[259,8856+30])
                    expression (src/ppx.ml[259,8856+33]..[259,8856+103])
                      Pexp_apply
                      expression (src/ppx.ml[259,8856+34]..[259,8856+47])
                        Pexp_ident "print_endline" (src/ppx.ml[259,8856+34]..[259,8856+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[259,8856+48]..[259,8856+102])
                            Pexp_apply
                            expression (src/ppx.ml[259,8856+49]..[259,8856+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[259,8856+49]..[259,8856+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[259,8856+64]..[259,8856+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[259,8856+65]..[259,8856+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[259,8856+66]..[259,8856+81]),None)
                                    expression (src/ppx.ml[259,8856+84]..[259,8856+100])
                                      Pexp_ident "open_description" (src/ppx.ml[259,8856+84]..[259,8856+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[260,8960+4]..[260,8960+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[260,8960+4]..[260,8960+14])
                      Some
                        []
                        pattern (src/ppx.ml[260,8960+15]..[260,8960+36])
                          Ppat_var "class_declarations" (src/ppx.ml[260,8960+16]..[260,8960+34])
                    expression (src/ppx.ml[260,8960+39]..[260,8960+113])
                      Pexp_apply
                      expression (src/ppx.ml[260,8960+40]..[260,8960+53])
                        Pexp_ident "print_endline" (src/ppx.ml[260,8960+40]..[260,8960+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,8960+54]..[260,8960+112])
                            Pexp_apply
                            expression (src/ppx.ml[260,8960+55]..[260,8960+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[260,8960+55]..[260,8960+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[260,8960+70]..[260,8960+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[260,8960+71]..[260,8960+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[260,8960+72]..[260,8960+89]),None)
                                    expression (src/ppx.ml[260,8960+92]..[260,8960+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[260,8960+92]..[260,8960+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,9074+4]..[261,9074+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[261,9074+4]..[261,9074+19])
                      Some
                        []
                        pattern (src/ppx.ml[261,9074+20]..[261,9074+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[261,9074+21]..[261,9074+44])
                    expression (src/ppx.ml[261,9074+48]..[261,9074+132])
                      Pexp_apply
                      expression (src/ppx.ml[261,9074+49]..[261,9074+62])
                        Pexp_ident "print_endline" (src/ppx.ml[261,9074+49]..[261,9074+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[261,9074+63]..[261,9074+131])
                            Pexp_apply
                            expression (src/ppx.ml[261,9074+64]..[261,9074+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[261,9074+64]..[261,9074+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[261,9074+79]..[261,9074+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[261,9074+80]..[261,9074+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[261,9074+81]..[261,9074+103]),None)
                                    expression (src/ppx.ml[261,9074+106]..[261,9074+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[261,9074+106]..[261,9074+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[262,9207+4]..[262,9207+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[262,9207+4]..[262,9207+16])
                      Some
                        []
                        pattern (src/ppx.ml[262,9207+18]..[262,9207+39])
                          Ppat_var "include_declaration" (src/ppx.ml[262,9207+19]..[262,9207+38])
                    expression (src/ppx.ml[262,9207+41]..[262,9207+117])
                      Pexp_apply
                      expression (src/ppx.ml[262,9207+42]..[262,9207+55])
                        Pexp_ident "print_endline" (src/ppx.ml[262,9207+42]..[262,9207+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,9207+56]..[262,9207+116])
                            Pexp_apply
                            expression (src/ppx.ml[262,9207+57]..[262,9207+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,9207+57]..[262,9207+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,9207+72]..[262,9207+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,9207+73]..[262,9207+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[262,9207+74]..[262,9207+93]),None)
                                    expression (src/ppx.ml[262,9207+95]..[262,9207+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[262,9207+95]..[262,9207+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[263,9325+4]..[263,9325+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[263,9325+4]..[263,9325+18])
                      Some
                        []
                        pattern (src/ppx.ml[263,9325+19]..[263,9325+30])
                          Ppat_var "attribute" (src/ppx.ml[263,9325+20]..[263,9325+29])
                    expression (src/ppx.ml[263,9325+32]..[263,9325+101])
                      Pexp_apply
                      expression (src/ppx.ml[263,9325+33]..[263,9325+46])
                        Pexp_ident "print_endline" (src/ppx.ml[263,9325+33]..[263,9325+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[263,9325+47]..[263,9325+100])
                            Pexp_apply
                            expression (src/ppx.ml[263,9325+48]..[263,9325+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[263,9325+48]..[263,9325+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[263,9325+63]..[263,9325+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[263,9325+64]..[263,9325+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[263,9325+65]..[263,9325+86]),None)
                                    expression (src/ppx.ml[263,9325+89]..[263,9325+98])
                                      Pexp_ident "attribute" (src/ppx.ml[263,9325+89]..[263,9325+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,9427+4]..[264,9427+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[264,9427+4]..[264,9427+18])
                      Some
                        []
                        pattern (src/ppx.ml[264,9427+19]..[264,9427+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[264,9427+21]..[264,9427+30])
                              Ppat_var "extension" (src/ppx.ml[264,9427+21]..[264,9427+30])
                            pattern (src/ppx.ml[264,9427+33]..[264,9427+43])
                              Ppat_var "attributes" (src/ppx.ml[264,9427+33]..[264,9427+43])
                          ]
                    expression (src/ppx.ml[264,9427+46]..[264,9427+128])
                      Pexp_apply
                      expression (src/ppx.ml[264,9427+47]..[264,9427+60])
                        Pexp_ident "print_endline" (src/ppx.ml[264,9427+47]..[264,9427+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,9427+61]..[264,9427+127])
                            Pexp_apply
                            expression (src/ppx.ml[264,9427+62]..[264,9427+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[264,9427+62]..[264,9427+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[264,9427+77]..[264,9427+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[264,9427+78]..[264,9427+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[264,9427+79]..[264,9427+100]),None)
                                    expression (src/ppx.ml[264,9427+103]..[264,9427+112])
                                      Pexp_ident "extension" (src/ppx.ml[264,9427+103]..[264,9427+112])
                                    expression (src/ppx.ml[264,9427+115]..[264,9427+125])
                                      Pexp_ident "attributes" (src/ppx.ml[264,9427+115]..[264,9427+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[238,7481+39]..[238,7481+43])
              Ptyp_constr "unit" (src/ppx.ml[238,7481+39]..[238,7481+43])
              []
    ]
  structure_item (src/ppx.ml[266,9557+0]..[266,9557+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[266,9557+4]..[266,9557+7])
          Ppat_var "foo" (src/ppx.ml[266,9557+4]..[266,9557+7])
        expression (src/ppx.ml[266,9557+10]..[266,9557+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[268,9572+0]..[276,9791+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[268,9572+4]..[268,9572+12])
          Ppat_var "printone" (src/ppx.ml[268,9572+4]..[268,9572+12])
        expression (src/ppx.ml[268,9572+13]..[276,9791+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[268,9572+13]..[268,9572+34])
            Ppat_constraint
            pattern (src/ppx.ml[268,9572+14]..[268,9572+15])
              Ppat_var "x" (src/ppx.ml[268,9572+14]..[268,9572+15])
            core_type (src/ppx.ml[268,9572+18]..[268,9572+32])
              Ptyp_constr "structure_item" (src/ppx.ml[268,9572+18]..[268,9572+32])
              []
          expression (src/ppx.ml[268,9572+35]..[276,9791+6])
            Pexp_constraint
            expression (src/ppx.ml[269,9615+2]..[276,9791+6])
              Pexp_match
              expression (src/ppx.ml[269,9615+8]..[269,9615+9])
                Pexp_ident "x" (src/ppx.ml[269,9615+8]..[269,9615+9])
              [
                <case>
                  pattern (src/ppx.ml[270,9630+3]..[273,9680+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[271,9635+4]..[271,9635+13]) ghost
                        pattern (src/ppx.ml[271,9635+4]..[271,9635+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[271,9635+4]..[271,9635+13])
                    ]
                  expression (src/ppx.ml[275,9764+4]..[276,9791+6])
                    Pexp_sequence
                    expression (src/ppx.ml[275,9764+4]..[275,9764+25])
                      Pexp_apply
                      expression (src/ppx.ml[275,9764+5]..[275,9764+14])
                        Pexp_ident "printdesc" (src/ppx.ml[275,9764+5]..[275,9764+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9764+15]..[275,9764+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[275,9764+15]..[275,9764+24])
                      ]
                    expression (src/ppx.ml[276,9791+4]..[276,9791+6])
                      Pexp_construct "()" (src/ppx.ml[276,9791+4]..[276,9791+6])
                      None
              ]
            core_type (src/ppx.ml[268,9572+36]..[268,9572+40])
              Ptyp_constr "unit" (src/ppx.ml[268,9572+36]..[268,9572+40])
              []
    ]
  structure_item (src/ppx.ml[282,9911+0]..[284,9985+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9911+4]..[282,9911+13])
          Ppat_var "printone2" (src/ppx.ml[282,9911+4]..[282,9911+13])
        expression (src/ppx.ml[282,9911+14]..[284,9985+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[282,9911+14]..[282,9911+15])
            Ppat_var "x" (src/ppx.ml[282,9911+14]..[282,9911+15])
          expression (src/ppx.ml[282,9911+16]..[284,9985+12])
            Pexp_constraint
            expression (src/ppx.ml[283,9935+2]..[284,9985+12])
              Pexp_sequence
              expression (src/ppx.ml[283,9935+2]..[283,9935+48])
                Pexp_apply
                expression (src/ppx.ml[283,9935+3]..[283,9935+16])
                  Pexp_ident "print_endline" (src/ppx.ml[283,9935+3]..[283,9935+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[283,9935+17]..[283,9935+47])
                      Pexp_apply
                      expression (src/ppx.ml[283,9935+18]..[283,9935+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[283,9935+18]..[283,9935+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9935+33]..[283,9935+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[283,9935+34]..[283,9935+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[283,9935+35]..[283,9935+42]),None)
                              expression (src/ppx.ml[283,9935+44]..[283,9935+45])
                                Pexp_ident "x" (src/ppx.ml[283,9935+44]..[283,9935+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[284,9985+2]..[284,9985+12])
                Pexp_apply
                expression (src/ppx.ml[284,9985+2]..[284,9985+10])
                  Pexp_ident "printone" (src/ppx.ml[284,9985+2]..[284,9985+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[284,9985+11]..[284,9985+12])
                      Pexp_ident "x" (src/ppx.ml[284,9985+11]..[284,9985+12])
                ]
            core_type (src/ppx.ml[282,9911+17]..[282,9911+21])
              Ptyp_constr "unit" (src/ppx.ml[282,9911+17]..[282,9911+21])
              []
    ]
  structure_item (src/ppx.ml[286,10001+0]..[288,10032+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[286,10001+4]..[286,10001+9])
          Ppat_var "proc1" (src/ppx.ml[286,10001+4]..[286,10001+9])
        expression (src/ppx.ml[286,10001+10]..[288,10032+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[286,10001+10]..[286,10001+11])
            Ppat_var "x" (src/ppx.ml[286,10001+10]..[286,10001+11])
          expression (src/ppx.ml[287,10017+2]..[288,10032+3])
            Pexp_sequence
            expression (src/ppx.ml[287,10017+2]..[287,10017+13])
              Pexp_apply
              expression (src/ppx.ml[287,10017+2]..[287,10017+11])
                Pexp_ident "printone2" (src/ppx.ml[287,10017+2]..[287,10017+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[287,10017+12]..[287,10017+13])
                    Pexp_ident "x" (src/ppx.ml[287,10017+12]..[287,10017+13])
              ]
            expression (src/ppx.ml[288,10032+2]..[288,10032+3])
              Pexp_ident "x" (src/ppx.ml[288,10032+2]..[288,10032+3])
    ]
  structure_item (src/ppx.ml[297,10257+0]..[300,10399+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10257+4]..[297,10257+9])
          Ppat_var "debug" (src/ppx.ml[297,10257+4]..[297,10257+9])
        expression (src/ppx.ml[297,10257+10]..[300,10399+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[297,10257+10]..[297,10257+14])
            Ppat_var "proc" (src/ppx.ml[297,10257+10]..[297,10257+14])
          expression (src/ppx.ml[297,10257+15]..[300,10399+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[297,10257+15]..[297,10257+18])
              Ppat_var "lst" (src/ppx.ml[297,10257+15]..[297,10257+18])
            expression (src/ppx.ml[297,10257+19]..[300,10399+4])
              Pexp_constraint
              expression (src/ppx.ml[298,10285+2]..[300,10399+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[298,10285+6]..[298,10285+12])
                      Ppat_var "result" (src/ppx.ml[298,10285+6]..[298,10285+12])
                    expression (src/ppx.ml[298,10285+15]..[298,10285+32])
                      Pexp_apply
                      expression (src/ppx.ml[298,10285+15]..[298,10285+23])
                        Pexp_ident "List.map" (src/ppx.ml[298,10285+15]..[298,10285+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[298,10285+24]..[298,10285+28])
                            Pexp_ident "proc" (src/ppx.ml[298,10285+24]..[298,10285+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[298,10285+29]..[298,10285+32])
                            Pexp_ident "lst" (src/ppx.ml[298,10285+29]..[298,10285+32])
                      ]
                ]
                expression (src/ppx.ml[299,10321+2]..[300,10399+4])
                  Pexp_sequence
                  expression (src/ppx.ml[299,10321+2]..[299,10321+76])
                    Pexp_apply
                    expression (src/ppx.ml[299,10321+2]..[299,10321+11])
                      Pexp_ident "List.iter" (src/ppx.ml[299,10321+2]..[299,10321+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[299,10321+12]..[299,10321+69])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[299,10321+17]..[299,10321+18])
                            Ppat_var "i" (src/ppx.ml[299,10321+17]..[299,10321+18])
                          expression (src/ppx.ml[299,10321+22]..[299,10321+68])
                            Pexp_apply
                            expression (src/ppx.ml[299,10321+22]..[299,10321+35])
                              Pexp_ident "print_endline" (src/ppx.ml[299,10321+22]..[299,10321+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[299,10321+36]..[299,10321+68])
                                  Pexp_apply
                                  expression (src/ppx.ml[299,10321+37]..[299,10321+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[299,10321+37]..[299,10321+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[299,10321+52]..[299,10321+67])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[299,10321+53]..[299,10321+63])
                                            Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[299,10321+54]..[299,10321+62]),None)
                                          expression (src/ppx.ml[299,10321+65]..[299,10321+66])
                                            Pexp_ident "i" (src/ppx.ml[299,10321+65]..[299,10321+66])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[299,10321+70]..[299,10321+76])
                          Pexp_ident "result" (src/ppx.ml[299,10321+70]..[299,10321+76])
                    ]
                  expression (src/ppx.ml[300,10399+2]..[300,10399+4])
                    Pexp_construct "()" (src/ppx.ml[300,10399+2]..[300,10399+4])
                    None
              core_type (src/ppx.ml[297,10257+21]..[297,10257+25])
                Ptyp_constr "unit" (src/ppx.ml[297,10257+21]..[297,10257+25])
                []
    ]
  structure_item (src/ppx.ml[302,10421+0]..[305,10545+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10421+4]..[302,10421+13])
          Ppat_var "transform" (src/ppx.ml[302,10421+4]..[302,10421+13])
        expression (src/ppx.ml[302,10421+14]..[305,10545+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10421+14]..[302,10421+15])
            Ppat_var "x" (src/ppx.ml[302,10421+14]..[302,10421+15])
          expression (src/ppx.ml[303,10476+2]..[305,10545+3])
            Pexp_sequence
            expression (src/ppx.ml[303,10476+2]..[303,10476+48])
              Pexp_apply
              expression (src/ppx.ml[303,10476+3]..[303,10476+16])
                Pexp_ident "print_endline" (src/ppx.ml[303,10476+3]..[303,10476+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[303,10476+17]..[303,10476+47])
                    Pexp_apply
                    expression (src/ppx.ml[303,10476+18]..[303,10476+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[303,10476+18]..[303,10476+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[303,10476+33]..[303,10476+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[303,10476+34]..[303,10476+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[303,10476+35]..[303,10476+42]),None)
                            expression (src/ppx.ml[303,10476+44]..[303,10476+45])
                              Pexp_ident "x" (src/ppx.ml[303,10476+44]..[303,10476+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[304,10526+2]..[305,10545+3])
              Pexp_sequence
              expression (src/ppx.ml[304,10526+2]..[304,10526+17])
                Pexp_apply
                expression (src/ppx.ml[304,10526+3]..[304,10526+8])
                  Pexp_ident "debug" (src/ppx.ml[304,10526+3]..[304,10526+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[304,10526+9]..[304,10526+14])
                      Pexp_ident "proc1" (src/ppx.ml[304,10526+9]..[304,10526+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[304,10526+15]..[304,10526+16])
                      Pexp_ident "x" (src/ppx.ml[304,10526+15]..[304,10526+16])
                ]
              expression (src/ppx.ml[305,10545+2]..[305,10545+3])
                Pexp_ident "x" (src/ppx.ml[305,10545+2]..[305,10545+3])
    ]
  structure_item (src/ppx.ml[307,10552+1]..[307,10552+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10552+5]..[307,10552+7])
          Ppat_construct "()" (src/ppx.ml[307,10552+5]..[307,10552+7])
          None
        expression (src/ppx.ml[307,10552+10]..[307,10552+69])
          Pexp_apply
          expression (src/ppx.ml[307,10552+10]..[307,10552+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[307,10552+10]..[307,10552+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[307,10552+47]..[307,10552+56])
                Pexp_ident "transform" (src/ppx.ml[307,10552+47]..[307,10552+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[307,10552+57]..[307,10552+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[307,10552+58]..[307,10552+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG55:pat", pvb_pat));
        print_endline (Batteries.dump ("DEBUG55:expr", pvb_expr));
        print_endline (Batteries.dump ("DEBUG55:atrr", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG55:loc", pvb_loc))) : unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10")
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow9")
  | Ptyp_constr (a, b) ->
      (process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr", "id", a, "types", b)))
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4")
  | Ptyp_package a -> print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline (Batteries.dump ("ptyp_desc", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record", a))
let rec process_Ptype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_Ptype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_Ptype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("type_decl:", ptype_name));
       print_endline (Batteries.dump ("parameters:", ptype_params));
       print_endline (Batteries.dump ("cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("private:", ptype_private, "manifest", ptype_manifest, "attr",
              ptype_attributes, "loc", ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG44:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG33:", i))) result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1578+62])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1578+62]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1578+62])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1578+62])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+62])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+61])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+60])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+49])
                                        Texp_constant Const_string("DEBUG55:pat",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+48]),None)
                                      expression (src/ppx.ml[55,1334+51]..src/ppx.ml[55,1334+58])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1398+4]..src/ppx.ml[59,1578+62])
                        Texp_sequence
                        expression (src/ppx.ml[56,1398+4]..src/ppx.ml[56,1398+64])
                          Texp_apply
                          expression (src/ppx.ml[56,1398+5]..src/ppx.ml[56,1398+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1398+19]..src/ppx.ml[56,1398+63])
                                Texp_apply
                                expression (src/ppx.ml[56,1398+20]..src/ppx.ml[56,1398+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1398+35]..src/ppx.ml[56,1398+62])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1398+36]..src/ppx.ml[56,1398+50])
                                          Texp_constant Const_string("DEBUG55:expr",(src/ppx.ml[56,1398+37]..src/ppx.ml[56,1398+49]),None)
                                        expression (src/ppx.ml[56,1398+52]..src/ppx.ml[56,1398+60])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1506+4]..src/ppx.ml[59,1578+62])
                          Texp_sequence
                          expression (src/ppx.ml[58,1506+4]..src/ppx.ml[58,1506+70])
                            Texp_apply
                            expression (src/ppx.ml[58,1506+5]..src/ppx.ml[58,1506+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1506+19]..src/ppx.ml[58,1506+69])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1506+20]..src/ppx.ml[58,1506+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1506+35]..src/ppx.ml[58,1506+68])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1506+36]..src/ppx.ml[58,1506+50])
                                            Texp_constant Const_string("DEBUG55:atrr",(src/ppx.ml[58,1506+37]..src/ppx.ml[58,1506+49]),None)
                                          expression (src/ppx.ml[58,1506+52]..src/ppx.ml[58,1506+66])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1578+4]..src/ppx.ml[59,1578+62])
                            Texp_apply
                            expression (src/ppx.ml[59,1578+5]..src/ppx.ml[59,1578+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1578+19]..src/ppx.ml[59,1578+61])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1578+20]..src/ppx.ml[59,1578+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1578+35]..src/ppx.ml[59,1578+60])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1578+36]..src/ppx.ml[59,1578+49])
                                            Texp_constant Const_string("DEBUG55:loc",(src/ppx.ml[59,1578+37]..src/ppx.ml[59,1578+48]),None)
                                          expression (src/ppx.ml[59,1578+51]..src/ppx.ml[59,1578+58])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1642+0]..src/ppx.ml[67,1819+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1642+8]..src/ppx.ml[61,1642+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1642+33]..src/ppx.ml[67,1819+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1642+34]..src/ppx.ml[61,1642+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1642+38]..src/ppx.ml[61,1642+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1642+38]..src/ppx.ml[61,1642+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1642+34]..src/ppx.ml[61,1642+35])
                  Tpat_any
              expression (src/ppx.ml[62,1708+2]..src/ppx.ml[67,1819+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1642+60]..src/ppx.ml[61,1642+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1708+8]..src/ppx.ml[62,1708+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1723+4]..src/ppx.ml[63,1723+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1723+4]..src/ppx.ml[63,1723+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1723+10]..src/ppx.ml[63,1723+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1736+4]..src/ppx.ml[64,1736+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1736+4]..src/ppx.ml[64,1736+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1736+4]..src/ppx.ml[64,1736+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1736+9]..src/ppx.ml[64,1736+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1750+4]..src/ppx.ml[67,1819+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1750+4]..src/ppx.ml[65,1750+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1750+5]..src/ppx.ml[65,1750+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1750+31]..src/ppx.ml[65,1750+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1785+4]..src/ppx.ml[67,1819+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1785+4]..src/ppx.ml[66,1785+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1785+5]..src/ppx.ml[66,1785+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1785+30]..src/ppx.ml[66,1785+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1819+4]..src/ppx.ml[67,1819+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1827+0]..src/ppx.ml[144,4556+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1827+8]..src/ppx.ml[69,1827+27])
          Tpat_var "process_record_kind/1437"
        expression (src/ppx.ml[69,1827+27]..src/ppx.ml[83,2305+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1827+27]..src/ppx.ml[69,1827+30])
                Tpat_var "x/1442"
              expression (src/ppx.ml[70,1860+2]..src/ppx.ml[83,2305+47])
                Texp_match
                expression (src/ppx.ml[70,1860+8]..src/ppx.ml[70,1860+9])
                  Texp_ident "x/1442"
                [
                  <case>
                    pattern (src/ppx.ml[71,1875+4]..src/ppx.ml[77,2056+4])
                      Tpat_value
                      pattern (src/ppx.ml[71,1875+4]..src/ppx.ml[77,2056+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[72,1881+5]..src/ppx.ml[72,1881+13])
                              Tpat_var "pld_name/1443"
                          "pld_mutable"
                            pattern (src/ppx.ml[73,1914+5]..src/ppx.ml[73,1914+16])
                              Tpat_var "pld_mutable/1444"
                          "pld_type"
                            pattern (src/ppx.ml[74,1952+5]..src/ppx.ml[74,1952+13])
                              Tpat_var "pld_type/1445"
                          "pld_loc"
                            pattern (src/ppx.ml[75,1984+5]..src/ppx.ml[75,1984+12])
                              Tpat_var "pld_loc/1446"
                          "pld_attributes"
                            pattern (src/ppx.ml[76,2016+5]..src/ppx.ml[76,2016+19])
                              Tpat_var "pld_attributes/1447"
                        ]
                    expression (src/ppx.ml[78,2064+4]..src/ppx.ml[83,2305+47])
                      Texp_apply
                      expression (src/ppx.ml[78,2064+5]..src/ppx.ml[78,2064+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[78,2064+19]..src/ppx.ml[83,2305+46])
                            Texp_apply
                            expression (src/ppx.ml[78,2064+20]..src/ppx.ml[78,2064+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[78,2064+35]..src/ppx.ml[83,2305+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[78,2064+36]..src/ppx.ml[78,2064+51])
                                      Texp_constant Const_string("precord_kind:",(src/ppx.ml[78,2064+37]..src/ppx.ml[78,2064+50]),None)
                                    expression (src/ppx.ml[79,2119+36]..src/ppx.ml[79,2119+44])
                                      Texp_ident "pld_name/1443"
                                    expression (src/ppx.ml[80,2165+36]..src/ppx.ml[80,2165+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[80,2165+37]..src/ppx.ml[80,2165+44]),None)
                                    expression (src/ppx.ml[81,2212+36]..src/ppx.ml[81,2212+47])
                                      Texp_ident "pld_mutable/1444"
                                    expression (src/ppx.ml[82,2261+36]..src/ppx.ml[82,2261+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[82,2261+37]..src/ppx.ml[82,2261+41]),None)
                                    expression (src/ppx.ml[83,2305+36]..src/ppx.ml[83,2305+44])
                                      Texp_ident "pld_type/1445"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[85,2357+0]..src/ppx.ml[85,2357+22])
          Tpat_var "process_core_type_desc/1438"
        expression (src/ppx.ml[85,2357+23]..src/ppx.ml[119,3911+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2357+23]..src/ppx.ml[85,2357+24])
                Tpat_var "x/1448"
              expression (src/ppx.ml[86,2384+2]..src/ppx.ml[119,3911+64])
                Texp_match
                expression (src/ppx.ml[86,2384+8]..src/ppx.ml[86,2384+9])
                  Texp_ident "x/1448"
                [
                  <case>
                    pattern (src/ppx.ml[87,2399+4]..src/ppx.ml[87,2399+12])
                      Tpat_value
                      pattern (src/ppx.ml[87,2399+4]..src/ppx.ml[87,2399+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[87,2399+17]..src/ppx.ml[87,2399+68])
                      Texp_apply
                      expression (src/ppx.ml[87,2399+18]..src/ppx.ml[87,2399+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[87,2399+32]..src/ppx.ml[87,2399+67])
                            Texp_apply
                            expression (src/ppx.ml[87,2399+33]..src/ppx.ml[87,2399+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[87,2399+48]..src/ppx.ml[87,2399+66])
                                  Texp_constant Const_string("DEBUG:Ptyp_any",(src/ppx.ml[87,2399+50]..src/ppx.ml[87,2399+64]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[88,2468+4]..src/ppx.ml[88,2468+17])
                      Tpat_value
                      pattern (src/ppx.ml[88,2468+4]..src/ppx.ml[88,2468+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[88,2468+13]..src/ppx.ml[88,2468+17])
                            Tpat_var "name/1449"
                        ]
                        None
                    expression (src/ppx.ml[88,2468+20]..src/ppx.ml[88,2468+79])
                      Texp_apply
                      expression (src/ppx.ml[88,2468+21]..src/ppx.ml[88,2468+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[88,2468+35]..src/ppx.ml[88,2468+78])
                            Texp_apply
                            expression (src/ppx.ml[88,2468+36]..src/ppx.ml[88,2468+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[88,2468+51]..src/ppx.ml[88,2468+77])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[88,2468+52]..src/ppx.ml[88,2468+68])
                                      Texp_constant Const_string("DEBUG:Ptyp_var",(src/ppx.ml[88,2468+53]..src/ppx.ml[88,2468+67]),None)
                                    expression (src/ppx.ml[88,2468+72]..src/ppx.ml[88,2468+76])
                                      Texp_ident "name/1449"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[89,2548+4]..src/ppx.ml[89,2548+51])
                      Tpat_value
                      pattern (src/ppx.ml[89,2548+4]..src/ppx.ml[89,2548+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[89,2548+16]..src/ppx.ml[89,2548+25])
                            Tpat_var "arg_label/1450"
                          pattern (src/ppx.ml[89,2548+28]..src/ppx.ml[89,2548+37])
                            Tpat_var "core_type/1451"
                          pattern (src/ppx.ml[89,2548+40]..src/ppx.ml[89,2548+50])
                            Tpat_var "core_type2/1452"
                        ]
                        None
                    expression (src/ppx.ml[90,2603+4]..src/ppx.ml[90,2603+60])
                      Texp_apply
                      expression (src/ppx.ml[90,2603+5]..src/ppx.ml[90,2603+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[90,2603+19]..src/ppx.ml[90,2603+59])
                            Texp_apply
                            expression (src/ppx.ml[90,2603+20]..src/ppx.ml[90,2603+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[90,2603+35]..src/ppx.ml[90,2603+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10",(src/ppx.ml[90,2603+37]..src/ppx.ml[90,2603+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[91,2664+4]..src/ppx.ml[91,2664+16])
                      Tpat_value
                      pattern (src/ppx.ml[91,2664+4]..src/ppx.ml[91,2664+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[91,2664+15]..src/ppx.ml[91,2664+16])
                            Tpat_var "a/1453"
                        ]
                        None
                    expression (src/ppx.ml[93,2712+4]..src/ppx.ml[93,2712+59])
                      Texp_apply
                      expression (src/ppx.ml[93,2712+5]..src/ppx.ml[93,2712+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[93,2712+19]..src/ppx.ml[93,2712+58])
                            Texp_apply
                            expression (src/ppx.ml[93,2712+20]..src/ppx.ml[93,2712+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[93,2712+35]..src/ppx.ml[93,2712+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow9",(src/ppx.ml[93,2712+37]..src/ppx.ml[93,2712+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[94,2772+4]..src/ppx.ml[94,2772+21])
                      Tpat_value
                      pattern (src/ppx.ml[94,2772+4]..src/ppx.ml[94,2772+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[94,2772+17]..src/ppx.ml[94,2772+18])
                            Tpat_var "a/1454"
                          pattern (src/ppx.ml[94,2772+19]..src/ppx.ml[94,2772+20])
                            Tpat_var "b/1455"
                        ]
                        None
                    expression (src/ppx.ml[96,2843+4]..src/ppx.ml[97,2875+78])
                      Texp_sequence
                      expression (src/ppx.ml[96,2843+4]..src/ppx.ml[96,2843+30])
                        Texp_apply
                        expression (src/ppx.ml[96,2843+5]..src/ppx.ml[96,2843+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[96,2843+28]..src/ppx.ml[96,2843+29])
                              Texp_ident "b/1455"
                        ]
                      expression (src/ppx.ml[97,2875+4]..src/ppx.ml[97,2875+78])
                        Texp_apply
                        expression (src/ppx.ml[97,2875+5]..src/ppx.ml[97,2875+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[97,2875+19]..src/ppx.ml[97,2875+77])
                              Texp_apply
                              expression (src/ppx.ml[97,2875+20]..src/ppx.ml[97,2875+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[97,2875+35]..src/ppx.ml[97,2875+76])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[97,2875+36]..src/ppx.ml[97,2875+55])
                                        Texp_constant Const_string("DEBUG:Ptyp_constr",(src/ppx.ml[97,2875+37]..src/ppx.ml[97,2875+54]),None)
                                      expression (src/ppx.ml[97,2875+57]..src/ppx.ml[97,2875+61])
                                        Texp_constant Const_string("id",(src/ppx.ml[97,2875+58]..src/ppx.ml[97,2875+60]),None)
                                      expression (src/ppx.ml[97,2875+62]..src/ppx.ml[97,2875+63])
                                        Texp_ident "a/1454"
                                      expression (src/ppx.ml[97,2875+65]..src/ppx.ml[97,2875+72])
                                        Texp_constant Const_string("types",(src/ppx.ml[97,2875+66]..src/ppx.ml[97,2875+71]),None)
                                      expression (src/ppx.ml[97,2875+73]..src/ppx.ml[97,2875+74])
                                        Texp_ident "b/1455"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[98,2954+4]..src/ppx.ml[98,2954+21])
                      Tpat_value
                      pattern (src/ppx.ml[98,2954+4]..src/ppx.ml[98,2954+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[98,2954+17]..src/ppx.ml[98,2954+18])
                            Tpat_var "a/1456"
                          pattern (src/ppx.ml[98,2954+19]..src/ppx.ml[98,2954+20])
                            Tpat_var "b/1457"
                        ]
                        None
                    expression (src/ppx.ml[100,3023+4]..src/ppx.ml[100,3023+59])
                      Texp_apply
                      expression (src/ppx.ml[100,3023+5]..src/ppx.ml[100,3023+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[100,3023+19]..src/ppx.ml[100,3023+58])
                            Texp_apply
                            expression (src/ppx.ml[100,3023+20]..src/ppx.ml[100,3023+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[100,3023+35]..src/ppx.ml[100,3023+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8",(src/ppx.ml[100,3023+37]..src/ppx.ml[100,3023+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[101,3083+4]..src/ppx.ml[101,3083+20])
                      Tpat_value
                      pattern (src/ppx.ml[101,3083+4]..src/ppx.ml[101,3083+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[101,3083+16]..src/ppx.ml[101,3083+17])
                            Tpat_var "a/1458"
                          pattern (src/ppx.ml[101,3083+18]..src/ppx.ml[101,3083+19])
                            Tpat_var "b/1459"
                        ]
                        None
                    expression (src/ppx.ml[103,3153+4]..src/ppx.ml[103,3153+59])
                      Texp_apply
                      expression (src/ppx.ml[103,3153+5]..src/ppx.ml[103,3153+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,3153+19]..src/ppx.ml[103,3153+58])
                            Texp_apply
                            expression (src/ppx.ml[103,3153+20]..src/ppx.ml[103,3153+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,3153+35]..src/ppx.ml[103,3153+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7",(src/ppx.ml[103,3153+37]..src/ppx.ml[103,3153+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,3213+4]..src/ppx.ml[104,3213+20])
                      Tpat_value
                      pattern (src/ppx.ml[104,3213+4]..src/ppx.ml[104,3213+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[104,3213+16]..src/ppx.ml[104,3213+17])
                            Tpat_var "a/1460"
                          pattern (src/ppx.ml[104,3213+18]..src/ppx.ml[104,3213+19])
                            Tpat_var "b/1461"
                        ]
                        None
                    expression (src/ppx.ml[106,3274+4]..src/ppx.ml[106,3274+59])
                      Texp_apply
                      expression (src/ppx.ml[106,3274+5]..src/ppx.ml[106,3274+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[106,3274+19]..src/ppx.ml[106,3274+58])
                            Texp_apply
                            expression (src/ppx.ml[106,3274+20]..src/ppx.ml[106,3274+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[106,3274+35]..src/ppx.ml[106,3274+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6",(src/ppx.ml[106,3274+37]..src/ppx.ml[106,3274+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3334+4]..src/ppx.ml[107,3334+24])
                      Tpat_value
                      pattern (src/ppx.ml[107,3334+4]..src/ppx.ml[107,3334+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[107,3334+18]..src/ppx.ml[107,3334+19])
                            Tpat_var "a/1462"
                          pattern (src/ppx.ml[107,3334+20]..src/ppx.ml[107,3334+21])
                            Tpat_var "b/1463"
                          pattern (src/ppx.ml[107,3334+22]..src/ppx.ml[107,3334+23])
                            Tpat_var "c/1464"
                        ]
                        None
                    expression (src/ppx.ml[109,3424+4]..src/ppx.ml[109,3424+59])
                      Texp_apply
                      expression (src/ppx.ml[109,3424+5]..src/ppx.ml[109,3424+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3424+19]..src/ppx.ml[109,3424+58])
                            Texp_apply
                            expression (src/ppx.ml[109,3424+20]..src/ppx.ml[109,3424+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3424+35]..src/ppx.ml[109,3424+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5",(src/ppx.ml[109,3424+37]..src/ppx.ml[109,3424+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[110,3484+4]..src/ppx.ml[110,3484+19])
                      Tpat_value
                      pattern (src/ppx.ml[110,3484+4]..src/ppx.ml[110,3484+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[110,3484+15]..src/ppx.ml[110,3484+16])
                            Tpat_var "a/1465"
                          pattern (src/ppx.ml[110,3484+17]..src/ppx.ml[110,3484+18])
                            Tpat_var "b/1466"
                        ]
                        None
                    expression (src/ppx.ml[112,3548+4]..src/ppx.ml[112,3548+59])
                      Texp_apply
                      expression (src/ppx.ml[112,3548+5]..src/ppx.ml[112,3548+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[112,3548+19]..src/ppx.ml[112,3548+58])
                            Texp_apply
                            expression (src/ppx.ml[112,3548+20]..src/ppx.ml[112,3548+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[112,3548+35]..src/ppx.ml[112,3548+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4",(src/ppx.ml[112,3548+37]..src/ppx.ml[112,3548+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[113,3608+4]..src/ppx.ml[113,3608+18])
                      Tpat_value
                      pattern (src/ppx.ml[113,3608+4]..src/ppx.ml[113,3608+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[113,3608+17]..src/ppx.ml[113,3608+18])
                            Tpat_var "a/1467"
                        ]
                        None
                    expression (src/ppx.ml[115,3656+4]..src/ppx.ml[115,3656+61])
                      Texp_apply
                      expression (src/ppx.ml[115,3656+5]..src/ppx.ml[115,3656+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[115,3656+19]..src/ppx.ml[115,3656+60])
                            Texp_apply
                            expression (src/ppx.ml[115,3656+20]..src/ppx.ml[115,3656+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[115,3656+35]..src/ppx.ml[115,3656+59])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[115,3656+36]..src/ppx.ml[115,3656+55])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3",(src/ppx.ml[115,3656+37]..src/ppx.ml[115,3656+54]),None)
                                    expression (src/ppx.ml[115,3656+56]..src/ppx.ml[115,3656+57])
                                      Texp_ident "a/1467"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[118,3863+4]..src/ppx.ml[118,3863+20])
                      Tpat_value
                      pattern (src/ppx.ml[118,3863+4]..src/ppx.ml[118,3863+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[118,3863+19]..src/ppx.ml[118,3863+20])
                            Tpat_var "a/1468"
                        ]
                        None
                    expression (src/ppx.ml[119,3911+4]..src/ppx.ml[119,3911+64])
                      Texp_apply
                      expression (src/ppx.ml[119,3911+5]..src/ppx.ml[119,3911+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3911+19]..src/ppx.ml[119,3911+63])
                            Texp_apply
                            expression (src/ppx.ml[119,3911+20]..src/ppx.ml[119,3911+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3911+35]..src/ppx.ml[119,3911+62])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[119,3911+36]..src/ppx.ml[119,3911+58])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension",(src/ppx.ml[119,3911+37]..src/ppx.ml[119,3911+57]),None)
                                    expression (src/ppx.ml[119,3911+59]..src/ppx.ml[119,3911+60])
                                      Texp_ident "a/1468"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[121,3980+2]..src/ppx.ml[121,3980+26])
          Tpat_var "process_record_kind_list/1439"
        expression (src/ppx.ml[121,3980+26]..src/ppx.ml[127,4117+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[121,3980+26]..src/ppx.ml[121,3980+29])
                Tpat_var "x/1791"
              expression (src/ppx.ml[122,4012+2]..src/ppx.ml[127,4117+6])
                Texp_match
                expression (src/ppx.ml[122,4012+8]..src/ppx.ml[122,4012+9])
                  Texp_ident "x/1791"
                [
                  <case>
                    pattern (src/ppx.ml[123,4027+4]..src/ppx.ml[123,4027+6])
                      Tpat_value
                      pattern (src/ppx.ml[123,4027+4]..src/ppx.ml[123,4027+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[123,4027+10]..src/ppx.ml[123,4027+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[124,4040+4]..src/ppx.ml[124,4040+10])
                      Tpat_value
                      pattern (src/ppx.ml[124,4040+4]..src/ppx.ml[124,4040+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[124,4040+4]..src/ppx.ml[124,4040+5])
                            Tpat_var "h/1792"
                          pattern (src/ppx.ml[124,4040+9]..src/ppx.ml[124,4040+10])
                            Tpat_var "t/1793"
                        ]
                        None
                    expression (src/ppx.ml[125,4054+4]..src/ppx.ml[127,4117+6])
                      Texp_sequence
                      expression (src/ppx.ml[125,4054+4]..src/ppx.ml[125,4054+27])
                        Texp_apply
                        expression (src/ppx.ml[125,4054+5]..src/ppx.ml[125,4054+24])
                          Texp_ident "process_record_kind/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[125,4054+25]..src/ppx.ml[125,4054+26])
                              Texp_ident "h/1792"
                        ]
                      expression (src/ppx.ml[126,4083+4]..src/ppx.ml[127,4117+6])
                        Texp_sequence
                        expression (src/ppx.ml[126,4083+4]..src/ppx.ml[126,4083+32])
                          Texp_apply
                          expression (src/ppx.ml[126,4083+5]..src/ppx.ml[126,4083+29])
                            Texp_ident "process_record_kind_list/1439"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[126,4083+30]..src/ppx.ml[126,4083+31])
                                Texp_ident "t/1793"
                          ]
                        expression (src/ppx.ml[127,4117+4]..src/ppx.ml[127,4117+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[129,4128+0]..src/ppx.ml[129,4128+17])
          Tpat_var "process_core_type/1440"
        expression (src/ppx.ml[129,4128+17]..src/ppx.ml[138,4376+63]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[129,4128+17]..src/ppx.ml[129,4128+20])
                Tpat_var "x/1794"
              expression (src/ppx.ml[130,4151+2]..src/ppx.ml[138,4376+63])
                Texp_match
                expression (src/ppx.ml[130,4151+8]..src/ppx.ml[130,4151+9])
                  Texp_ident "x/1794"
                [
                  <case>
                    pattern (src/ppx.ml[131,4167+4]..src/ppx.ml[136,4328+5])
                      Tpat_value
                      pattern (src/ppx.ml[131,4167+4]..src/ppx.ml[136,4328+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[132,4173+6]..src/ppx.ml[132,4173+15])
                              Tpat_var "ptyp_desc/1795"
                          "ptyp_loc"
                            pattern (src/ppx.ml[133,4212+5]..src/ppx.ml[133,4212+13])
                              Tpat_var "ptyp_loc/1796"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[134,4245+5]..src/ppx.ml[134,4245+19])
                              Tpat_var "ptyp_loc_stack/1797"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[135,4288+5]..src/ppx.ml[135,4288+20])
                              Tpat_var "ptyp_attributes/1798"
                        ]
                    expression (src/ppx.ml[137,4336+4]..src/ppx.ml[138,4376+63])
                      Texp_sequence
                      expression (src/ppx.ml[137,4336+4]..src/ppx.ml[137,4336+38])
                        Texp_apply
                        expression (src/ppx.ml[137,4336+5]..src/ppx.ml[137,4336+27])
                          Texp_ident "process_core_type_desc/1438"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[137,4336+28]..src/ppx.ml[137,4336+37])
                              Texp_ident "ptyp_desc/1795"
                        ]
                      expression (src/ppx.ml[138,4376+4]..src/ppx.ml[138,4376+63])
                        Texp_apply
                        expression (src/ppx.ml[138,4376+5]..src/ppx.ml[138,4376+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[138,4376+19]..src/ppx.ml[138,4376+62])
                              Texp_apply
                              expression (src/ppx.ml[138,4376+20]..src/ppx.ml[138,4376+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[138,4376+35]..src/ppx.ml[138,4376+61])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[138,4376+36]..src/ppx.ml[138,4376+47])
                                        Texp_constant Const_string("ptyp_desc",(src/ppx.ml[138,4376+37]..src/ppx.ml[138,4376+46]),None)
                                      expression (src/ppx.ml[138,4376+51]..src/ppx.ml[138,4376+60])
                                        Texp_ident "ptyp_desc/1795"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[139,4440+4]..src/ppx.ml[139,4440+26])
          Tpat_var "process_core_type_list/1441"
        expression (src/ppx.ml[139,4440+26]..src/ppx.ml[144,4556+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[139,4440+27]..src/ppx.ml[139,4440+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[139,4440+29]..src/ppx.ml[139,4440+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[139,4440+29]..src/ppx.ml[139,4440+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1799"
                pattern (src/ppx.ml[139,4440+27]..src/ppx.ml[139,4440+28])
                  Tpat_any
              expression (src/ppx.ml[140,4487+2]..src/ppx.ml[144,4556+29])
                Texp_match
                expression (src/ppx.ml[140,4487+8]..src/ppx.ml[140,4487+9])
                  Texp_ident "x/1799"
                [
                  <case>
                    pattern (src/ppx.ml[141,4502+4]..src/ppx.ml[141,4502+6])
                      Tpat_value
                      pattern (src/ppx.ml[141,4502+4]..src/ppx.ml[141,4502+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[141,4502+10]..src/ppx.ml[141,4502+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[142,4515+4]..src/ppx.ml[142,4515+10])
                      Tpat_value
                      pattern (src/ppx.ml[142,4515+4]..src/ppx.ml[142,4515+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[142,4515+4]..src/ppx.ml[142,4515+5])
                            Tpat_var "h/1800"
                          pattern (src/ppx.ml[142,4515+9]..src/ppx.ml[142,4515+10])
                            Tpat_var "t/1801"
                        ]
                        None
                    expression (src/ppx.ml[143,4529+4]..src/ppx.ml[144,4556+29])
                      Texp_sequence
                      expression (src/ppx.ml[143,4529+4]..src/ppx.ml[143,4529+25])
                        Texp_apply
                        expression (src/ppx.ml[143,4529+4]..src/ppx.ml[143,4529+21])
                          Texp_ident "process_core_type/1440"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[143,4529+22]..src/ppx.ml[143,4529+25])
                              Texp_ident "h/1800"
                        ]
                      expression (src/ppx.ml[144,4556+4]..src/ppx.ml[144,4556+29])
                        Texp_apply
                        expression (src/ppx.ml[144,4556+4]..src/ppx.ml[144,4556+26])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[144,4556+26]..src/ppx.ml[144,4556+29])
                              Texp_ident "t/1801"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[151,4600+0]..src/ppx.ml[158,4798+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[151,4600+4]..src/ppx.ml[151,4600+31])
          Tpat_var "print_constructor_arguments/1802"
        expression (src/ppx.ml[151,4600+31]..src/ppx.ml[158,4798+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[151,4600+31]..src/ppx.ml[151,4600+34])
                Tpat_var "x/1804"
              expression (src/ppx.ml[152,4637+2]..src/ppx.ml[158,4798+64])
                Texp_match
                expression (src/ppx.ml[152,4637+8]..src/ppx.ml[152,4637+9])
                  Texp_ident "x/1804"
                [
                  <case>
                    pattern (src/ppx.ml[153,4652+4]..src/ppx.ml[153,4652+17])
                      Tpat_value
                      pattern (src/ppx.ml[153,4652+4]..src/ppx.ml[153,4652+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[153,4652+16]..src/ppx.ml[153,4652+17])
                            Tpat_var "a/1805"
                        ]
                        None
                    expression (src/ppx.ml[154,4673+4]..src/ppx.ml[155,4705+63])
                      Texp_sequence
                      expression (src/ppx.ml[154,4673+4]..src/ppx.ml[154,4673+30])
                        Texp_apply
                        expression (src/ppx.ml[154,4673+5]..src/ppx.ml[154,4673+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[154,4673+28]..src/ppx.ml[154,4673+29])
                              Texp_ident "a/1805"
                        ]
                      expression (src/ppx.ml[155,4705+4]..src/ppx.ml[155,4705+63])
                        Texp_apply
                        expression (src/ppx.ml[155,4705+5]..src/ppx.ml[155,4705+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[155,4705+19]..src/ppx.ml[155,4705+62])
                              Texp_apply
                              expression (src/ppx.ml[155,4705+20]..src/ppx.ml[155,4705+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[155,4705+35]..src/ppx.ml[155,4705+61])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[155,4705+36]..src/ppx.ml[155,4705+55])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple",(src/ppx.ml[155,4705+37]..src/ppx.ml[155,4705+54]),None)
                                      expression (src/ppx.ml[155,4705+59]..src/ppx.ml[155,4705+60])
                                        Texp_ident "a/1805"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[157,4776+4]..src/ppx.ml[157,4776+18])
                      Tpat_value
                      pattern (src/ppx.ml[157,4776+4]..src/ppx.ml[157,4776+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[157,4776+17]..src/ppx.ml[157,4776+18])
                            Tpat_var "a/1806"
                        ]
                        None
                    expression (src/ppx.ml[158,4798+4]..src/ppx.ml[158,4798+64])
                      Texp_apply
                      expression (src/ppx.ml[158,4798+5]..src/ppx.ml[158,4798+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[158,4798+19]..src/ppx.ml[158,4798+63])
                            Texp_apply
                            expression (src/ppx.ml[158,4798+20]..src/ppx.ml[158,4798+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[158,4798+35]..src/ppx.ml[158,4798+62])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[158,4798+36]..src/ppx.ml[158,4798+56])
                                      Texp_constant Const_string("DEBUG:Pcstr_record",(src/ppx.ml[158,4798+37]..src/ppx.ml[158,4798+55]),None)
                                    expression (src/ppx.ml[158,4798+60]..src/ppx.ml[158,4798+61])
                                      Texp_ident "a/1806"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[160,4864+0]..src/ppx.ml[192,5843+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[160,4864+8]..src/ppx.ml[160,4864+58])
          Tpat_var "process_Ptype_variant_constructor_declaration_list/1807"
        expression (src/ppx.ml[160,4864+58]..src/ppx.ml[192,5843+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[160,4864+58]..src/ppx.ml[160,4864+61])
                Tpat_var "x/1808"
              expression (src/ppx.ml[161,4928+2]..src/ppx.ml[192,5843+8])
                Texp_match
                expression (src/ppx.ml[161,4928+8]..src/ppx.ml[161,4928+9])
                  Texp_ident "x/1808"
                [
                  <case>
                    pattern (src/ppx.ml[162,4943+4]..src/ppx.ml[162,4943+6])
                      Tpat_value
                      pattern (src/ppx.ml[162,4943+4]..src/ppx.ml[162,4943+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[162,4943+10]..src/ppx.ml[162,4943+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[163,4956+4]..src/ppx.ml[163,4956+10])
                      Tpat_value
                      pattern (src/ppx.ml[163,4956+4]..src/ppx.ml[163,4956+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[163,4956+4]..src/ppx.ml[163,4956+5])
                            Tpat_var "h/1809"
                          pattern (src/ppx.ml[163,4956+9]..src/ppx.ml[163,4956+10])
                            Tpat_var "t/1810"
                        ]
                        None
                    expression (src/ppx.ml[165,5036+4]..src/ppx.ml[192,5843+8])
                      Texp_match
                      expression (src/ppx.ml[165,5036+10]..src/ppx.ml[165,5036+11])
                        Texp_ident "h/1809"
                      [
                        <case>
                          pattern (src/ppx.ml[166,5053+5]..src/ppx.ml[173,5291+5])
                            Tpat_value
                            pattern (src/ppx.ml[166,5053+5]..src/ppx.ml[173,5291+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[167,5060+6]..src/ppx.ml[167,5060+14])
                                    Tpat_var "pcd_name/1811"
                                "pcd_vars"
                                  pattern (src/ppx.ml[168,5094+6]..src/ppx.ml[168,5094+14])
                                    Tpat_var "pcd_vars/1812"
                                "pcd_args"
                                  pattern (src/ppx.ml[169,5133+6]..src/ppx.ml[169,5133+14])
                                    Tpat_var "pcd_args/1813"
                                "pcd_res"
                                  pattern (src/ppx.ml[170,5178+6]..src/ppx.ml[170,5178+13])
                                    Tpat_var "pcd_res/1814"
                                "pcd_loc"
                                  pattern (src/ppx.ml[171,5217+6]..src/ppx.ml[171,5217+13])
                                    Tpat_var "pcd_loc/1815"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[172,5250+6]..src/ppx.ml[172,5250+20])
                                    Tpat_var "pcd_attributes/1816"
                              ]
                          expression (src/ppx.ml[176,5373+6]..src/ppx.ml[192,5843+8])
                            Texp_sequence
                            expression (src/ppx.ml[176,5373+6]..src/ppx.ml[176,5373+43])
                              Texp_apply
                              expression (src/ppx.ml[176,5373+6]..src/ppx.ml[176,5373+33])
                                Texp_ident "print_constructor_arguments/1802"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[176,5373+33]..src/ppx.ml[176,5373+43])
                                    Texp_ident "pcd_args/1813"
                              ]
                            expression (src/ppx.ml[177,5418+6]..src/ppx.ml[192,5843+8])
                              Texp_sequence
                              expression (src/ppx.ml[177,5418+6]..src/ppx.ml[190,5763+16])
                                Texp_apply
                                expression (src/ppx.ml[177,5418+7]..src/ppx.ml[177,5418+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[177,5418+21]..src/ppx.ml[190,5763+15])
                                      Texp_apply
                                      expression (src/ppx.ml[177,5418+22]..src/ppx.ml[177,5418+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[177,5418+37]..src/ppx.ml[190,5763+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[178,5457+11]..src/ppx.ml[178,5457+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[178,5457+12]..src/ppx.ml[178,5457+36]),None)
                                              expression (src/ppx.ml[179,5496+15]..src/ppx.ml[179,5496+23])
                                                Texp_ident "pcd_name/1811"
                                              expression (src/ppx.ml[180,5521+15]..src/ppx.ml[180,5521+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[180,5521+16]..src/ppx.ml[180,5521+20]),None)
                                              expression (src/ppx.ml[181,5544+15]..src/ppx.ml[181,5544+23])
                                                Texp_ident "pcd_vars/1812"
                                              expression (src/ppx.ml[182,5569+15]..src/ppx.ml[182,5569+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[182,5569+16]..src/ppx.ml[182,5569+20]),None)
                                              expression (src/ppx.ml[183,5592+15]..src/ppx.ml[183,5592+23])
                                                Texp_ident "pcd_args/1813"
                                              expression (src/ppx.ml[184,5617+15]..src/ppx.ml[184,5617+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[184,5617+16]..src/ppx.ml[184,5617+19]),None)
                                              expression (src/ppx.ml[185,5639+15]..src/ppx.ml[185,5639+22])
                                                Texp_ident "pcd_res/1814"
                                              expression (src/ppx.ml[186,5663+15]..src/ppx.ml[186,5663+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[186,5663+16]..src/ppx.ml[186,5663+19]),None)
                                              expression (src/ppx.ml[187,5685+15]..src/ppx.ml[187,5685+22])
                                                Texp_ident "pcd_loc/1815"
                                              expression (src/ppx.ml[188,5709+15]..src/ppx.ml[188,5709+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[188,5709+16]..src/ppx.ml[188,5709+21]),None)
                                              expression (src/ppx.ml[189,5733+15]..src/ppx.ml[189,5733+29])
                                                Texp_ident "pcd_attributes/1816"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[191,5781+6]..src/ppx.ml[192,5843+8])
                                Texp_sequence
                                expression (src/ppx.ml[191,5781+6]..src/ppx.ml[191,5781+60])
                                  Texp_apply
                                  expression (src/ppx.ml[191,5781+7]..src/ppx.ml[191,5781+57])
                                    Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[191,5781+58]..src/ppx.ml[191,5781+59])
                                        Texp_ident "t/1810"
                                  ]
                                expression (src/ppx.ml[192,5843+6]..src/ppx.ml[192,5843+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[194,5855+0]..src/ppx.ml[205,6253+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[194,5855+4]..src/ppx.ml[194,5855+16])
          Tpat_var "process_kind/1817"
        expression (src/ppx.ml[194,5855+16]..src/ppx.ml[205,6253+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[194,5855+16]..src/ppx.ml[194,5855+19])
                Tpat_var "x/1819"
              expression (src/ppx.ml[195,5877+2]..src/ppx.ml[205,6253+77])
                Texp_match
                expression (src/ppx.ml[195,5877+8]..src/ppx.ml[195,5877+9])
                  Texp_ident "x/1819"
                [
                  <case>
                    pattern (src/ppx.ml[197,5914+4]..src/ppx.ml[197,5914+18])
                      Tpat_value
                      pattern (src/ppx.ml[197,5914+4]..src/ppx.ml[197,5914+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[197,5914+23]..src/ppx.ml[197,5914+81])
                      Texp_apply
                      expression (src/ppx.ml[197,5914+24]..src/ppx.ml[197,5914+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[197,5914+38]..src/ppx.ml[197,5914+80])
                            Texp_apply
                            expression (src/ppx.ml[197,5914+39]..src/ppx.ml[197,5914+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[197,5914+54]..src/ppx.ml[197,5914+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[197,5914+56]..src/ppx.ml[197,5914+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[198,5996+4]..src/ppx.ml[198,5996+19])
                      Tpat_value
                      pattern (src/ppx.ml[198,5996+4]..src/ppx.ml[198,5996+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[198,5996+18]..src/ppx.ml[198,5996+19])
                            Tpat_var "a/1820"
                        ]
                        None
                    expression (src/ppx.ml[199,6019+4]..src/ppx.ml[200,6079+65])
                      Texp_sequence
                      expression (src/ppx.ml[199,6019+4]..src/ppx.ml[199,6019+58])
                        Texp_apply
                        expression (src/ppx.ml[199,6019+5]..src/ppx.ml[199,6019+55])
                          Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[199,6019+56]..src/ppx.ml[199,6019+57])
                              Texp_ident "a/1820"
                        ]
                      expression (src/ppx.ml[200,6079+4]..src/ppx.ml[200,6079+65])
                        Texp_apply
                        expression (src/ppx.ml[200,6079+5]..src/ppx.ml[200,6079+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[200,6079+19]..src/ppx.ml[200,6079+64])
                              Texp_apply
                              expression (src/ppx.ml[200,6079+20]..src/ppx.ml[200,6079+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[200,6079+35]..src/ppx.ml[200,6079+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[200,6079+36]..src/ppx.ml[200,6079+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[200,6079+37]..src/ppx.ml[200,6079+57]),None)
                                      expression (src/ppx.ml[200,6079+61]..src/ppx.ml[200,6079+62])
                                        Texp_ident "a/1820"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[203,6192+5]..src/ppx.ml[203,6192+19])
                      Tpat_value
                      pattern (src/ppx.ml[203,6192+5]..src/ppx.ml[203,6192+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[203,6192+18]..src/ppx.ml[203,6192+19])
                            Tpat_var "a/1821"
                        ]
                        None
                    expression (src/ppx.ml[204,6220+5]..src/ppx.ml[204,6220+32])
                      Texp_apply
                      expression (src/ppx.ml[204,6220+5]..src/ppx.ml[204,6220+29])
                        Texp_ident "process_record_kind_list/1439"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[204,6220+29]..src/ppx.ml[204,6220+32])
                            Texp_ident "a/1821"
                      ]
                  <case>
                    pattern (src/ppx.ml[205,6253+5]..src/ppx.ml[205,6253+15])
                      Tpat_value
                      pattern (src/ppx.ml[205,6253+5]..src/ppx.ml[205,6253+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[205,6253+19]..src/ppx.ml[205,6253+77])
                      Texp_apply
                      expression (src/ppx.ml[205,6253+20]..src/ppx.ml[205,6253+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[205,6253+34]..src/ppx.ml[205,6253+76])
                            Texp_apply
                            expression (src/ppx.ml[205,6253+35]..src/ppx.ml[205,6253+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[205,6253+50]..src/ppx.ml[205,6253+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[205,6253+52]..src/ppx.ml[205,6253+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[207,6332+0]..src/ppx.ml[228,7290+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[207,6332+4]..src/ppx.ml[207,6332+19])
          Tpat_var "print_type_decl/1822"
        expression (src/ppx.ml[207,6332+19]..src/ppx.ml[228,7290+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[207,6332+19]..src/ppx.ml[207,6332+22])
                Tpat_var "x/1824"
              expression (src/ppx.ml[208,6357+2]..src/ppx.ml[228,7290+38])
                Texp_match
                expression (src/ppx.ml[208,6357+8]..src/ppx.ml[208,6357+9])
                  Texp_ident "x/1824"
                [
                  <case>
                    pattern (src/ppx.ml[209,6372+4]..src/ppx.ml[218,6753+5])
                      Tpat_value
                      pattern (src/ppx.ml[209,6372+4]..src/ppx.ml[218,6753+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[210,6378+6]..src/ppx.ml[210,6378+16])
                              Tpat_var "ptype_name/1825"
                          "ptype_params"
                            pattern (src/ppx.ml[211,6415+6]..src/ppx.ml[211,6415+18])
                              Tpat_var "ptype_params/1826"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[212,6487+6]..src/ppx.ml[212,6487+17])
                              Tpat_var "ptype_cstrs/1827"
                          "ptype_kind"
                            pattern (src/ppx.ml[213,6556+6]..src/ppx.ml[213,6556+16])
                              Tpat_var "ptype_kind/1828"
                          "ptype_private"
                            pattern (src/ppx.ml[214,6593+6]..src/ppx.ml[214,6593+19])
                              Tpat_var "ptype_private/1829"
                          "ptype_manifest"
                            pattern (src/ppx.ml[215,6634+6]..src/ppx.ml[215,6634+20])
                              Tpat_var "ptype_manifest/1830"
                          "ptype_attributes"
                            pattern (src/ppx.ml[216,6681+6]..src/ppx.ml[216,6681+22])
                              Tpat_var "ptype_attributes/1831"
                          "ptype_loc"
                            pattern (src/ppx.ml[217,6722+6]..src/ppx.ml[217,6722+15])
                              Tpat_var "ptype_loc/1832"
                        ]
                    expression (src/ppx.ml[219,6762+4]..src/ppx.ml[228,7290+38])
                      Texp_sequence
                      expression (src/ppx.ml[219,6762+4]..src/ppx.ml[219,6762+63])
                        Texp_apply
                        expression (src/ppx.ml[219,6762+5]..src/ppx.ml[219,6762+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[219,6762+19]..src/ppx.ml[219,6762+62])
                              Texp_apply
                              expression (src/ppx.ml[219,6762+20]..src/ppx.ml[219,6762+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[219,6762+35]..src/ppx.ml[219,6762+61])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[219,6762+36]..src/ppx.ml[219,6762+48])
                                        Texp_constant Const_string("type_decl:",(src/ppx.ml[219,6762+37]..src/ppx.ml[219,6762+47]),None)
                                      expression (src/ppx.ml[219,6762+50]..src/ppx.ml[219,6762+60])
                                        Texp_ident "ptype_name/1825"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[220,6827+4]..src/ppx.ml[228,7290+38])
                        Texp_sequence
                        expression (src/ppx.ml[220,6827+4]..src/ppx.ml[220,6827+66])
                          Texp_apply
                          expression (src/ppx.ml[220,6827+5]..src/ppx.ml[220,6827+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[220,6827+19]..src/ppx.ml[220,6827+65])
                                Texp_apply
                                expression (src/ppx.ml[220,6827+20]..src/ppx.ml[220,6827+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[220,6827+35]..src/ppx.ml[220,6827+64])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[220,6827+36]..src/ppx.ml[220,6827+49])
                                          Texp_constant Const_string("parameters:",(src/ppx.ml[220,6827+37]..src/ppx.ml[220,6827+48]),None)
                                        expression (src/ppx.ml[220,6827+51]..src/ppx.ml[220,6827+63])
                                          Texp_ident "ptype_params/1826"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[221,6895+4]..src/ppx.ml[228,7290+38])
                          Texp_sequence
                          expression (src/ppx.ml[221,6895+4]..src/ppx.ml[221,6895+60])
                            Texp_apply
                            expression (src/ppx.ml[221,6895+5]..src/ppx.ml[221,6895+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[221,6895+19]..src/ppx.ml[221,6895+59])
                                  Texp_apply
                                  expression (src/ppx.ml[221,6895+20]..src/ppx.ml[221,6895+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[221,6895+35]..src/ppx.ml[221,6895+58])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[221,6895+36]..src/ppx.ml[221,6895+44])
                                            Texp_constant Const_string("cstrs:",(src/ppx.ml[221,6895+37]..src/ppx.ml[221,6895+43]),None)
                                          expression (src/ppx.ml[221,6895+46]..src/ppx.ml[221,6895+57])
                                            Texp_ident "ptype_cstrs/1827"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[222,6957+4]..src/ppx.ml[228,7290+38])
                            Texp_sequence
                            expression (src/ppx.ml[222,6957+4]..src/ppx.ml[222,6957+57])
                              Texp_apply
                              expression (src/ppx.ml[222,6957+5]..src/ppx.ml[222,6957+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[222,6957+19]..src/ppx.ml[222,6957+56])
                                    Texp_apply
                                    expression (src/ppx.ml[222,6957+20]..src/ppx.ml[222,6957+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[222,6957+35]..src/ppx.ml[222,6957+55])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[222,6957+36]..src/ppx.ml[222,6957+43])
                                              Texp_constant Const_string("kind:",(src/ppx.ml[222,6957+37]..src/ppx.ml[222,6957+42]),None)
                                            expression (src/ppx.ml[222,6957+44]..src/ppx.ml[222,6957+54])
                                              Texp_ident "ptype_kind/1828"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[223,7016+4]..src/ppx.ml[228,7290+38])
                              Texp_sequence
                              expression (src/ppx.ml[223,7016+4]..src/ppx.ml[223,7016+29])
                                Texp_apply
                                expression (src/ppx.ml[223,7016+5]..src/ppx.ml[223,7016+17])
                                  Texp_ident "process_kind/1817"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[223,7016+18]..src/ppx.ml[223,7016+28])
                                      Texp_ident "ptype_kind/1828"
                                ]
                              expression (src/ppx.ml[224,7047+4]..src/ppx.ml[228,7290+38])
                                Texp_apply
                                expression (src/ppx.ml[224,7047+5]..src/ppx.ml[224,7047+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[224,7047+19]..src/ppx.ml[228,7290+37])
                                      Texp_apply
                                      expression (src/ppx.ml[224,7047+20]..src/ppx.ml[224,7047+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[224,7047+35]..src/ppx.ml[228,7290+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[224,7047+36]..src/ppx.ml[224,7047+46])
                                                Texp_constant Const_string("private:",(src/ppx.ml[224,7047+37]..src/ppx.ml[224,7047+45]),None)
                                              expression (src/ppx.ml[224,7047+49]..src/ppx.ml[224,7047+62])
                                                Texp_ident "ptype_private/1829"
                                              expression (src/ppx.ml[225,7111+36]..src/ppx.ml[225,7111+46])
                                                Texp_constant Const_string("manifest",(src/ppx.ml[225,7111+37]..src/ppx.ml[225,7111+45]),None)
                                              expression (src/ppx.ml[225,7111+48]..src/ppx.ml[225,7111+62])
                                                Texp_ident "ptype_manifest/1830"
                                              expression (src/ppx.ml[226,7175+36]..src/ppx.ml[226,7175+42])
                                                Texp_constant Const_string("attr",(src/ppx.ml[226,7175+37]..src/ppx.ml[226,7175+41]),None)
                                              expression (src/ppx.ml[226,7175+44]..src/ppx.ml[226,7175+60])
                                                Texp_ident "ptype_attributes/1831"
                                              expression (src/ppx.ml[227,7237+36]..src/ppx.ml[227,7237+41])
                                                Texp_constant Const_string("loc",(src/ppx.ml[227,7237+37]..src/ppx.ml[227,7237+40]),None)
                                              expression (src/ppx.ml[227,7237+43]..src/ppx.ml[227,7237+52])
                                                Texp_ident "ptype_loc/1832"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[230,7334+0]..src/ppx.ml[236,7469+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[230,7334+8]..src/ppx.ml[230,7334+30])
          Tpat_var "process_type_decl_list/1833"
        expression (src/ppx.ml[230,7334+30]..src/ppx.ml[236,7469+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[230,7334+30]..src/ppx.ml[230,7334+33])
                Tpat_var "x/1834"
              expression (src/ppx.ml[231,7370+2]..src/ppx.ml[236,7469+6])
                Texp_match
                expression (src/ppx.ml[231,7370+8]..src/ppx.ml[231,7370+9])
                  Texp_ident "x/1834"
                [
                  <case>
                    pattern (src/ppx.ml[232,7385+4]..src/ppx.ml[232,7385+6])
                      Tpat_value
                      pattern (src/ppx.ml[232,7385+4]..src/ppx.ml[232,7385+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[232,7385+10]..src/ppx.ml[232,7385+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[233,7398+4]..src/ppx.ml[233,7398+10])
                      Tpat_value
                      pattern (src/ppx.ml[233,7398+4]..src/ppx.ml[233,7398+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[233,7398+4]..src/ppx.ml[233,7398+5])
                            Tpat_var "h/1835"
                          pattern (src/ppx.ml[233,7398+9]..src/ppx.ml[233,7398+10])
                            Tpat_var "t/1836"
                        ]
                        None
                    expression (src/ppx.ml[234,7412+4]..src/ppx.ml[236,7469+6])
                      Texp_sequence
                      expression (src/ppx.ml[234,7412+4]..src/ppx.ml[234,7412+23])
                        Texp_apply
                        expression (src/ppx.ml[234,7412+5]..src/ppx.ml[234,7412+20])
                          Texp_ident "print_type_decl/1822"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[234,7412+21]..src/ppx.ml[234,7412+22])
                              Texp_ident "h/1835"
                        ]
                      expression (src/ppx.ml[235,7437+4]..src/ppx.ml[236,7469+6])
                        Texp_sequence
                        expression (src/ppx.ml[235,7437+4]..src/ppx.ml[235,7437+30])
                          Texp_apply
                          expression (src/ppx.ml[235,7437+5]..src/ppx.ml[235,7437+27])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[235,7437+28]..src/ppx.ml[235,7437+29])
                                Texp_ident "t/1836"
                          ]
                        expression (src/ppx.ml[236,7469+4]..src/ppx.ml[236,7469+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[238,7481+0]..src/ppx.ml[264,9427+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[238,7481+4]..src/ppx.ml[238,7481+13])
          Tpat_var "printdesc/1837"
        expression (src/ppx.ml[238,7481+13]..src/ppx.ml[264,9427+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[238,7481+14]..src/ppx.ml[238,7481+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[238,7481+17]..src/ppx.ml[238,7481+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1839"
                pattern (src/ppx.ml[238,7481+14]..src/ppx.ml[238,7481+15])
                  Tpat_any
              expression (src/ppx.ml[239,7527+2]..src/ppx.ml[264,9427+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[238,7481+39]..src/ppx.ml[238,7481+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[239,7527+2]..src/ppx.ml[239,7527+50])
                  Texp_apply
                  expression (src/ppx.ml[239,7527+3]..src/ppx.ml[239,7527+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[239,7527+17]..src/ppx.ml[239,7527+49])
                        Texp_apply
                        expression (src/ppx.ml[239,7527+18]..src/ppx.ml[239,7527+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[239,7527+33]..src/ppx.ml[239,7527+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[239,7527+34]..src/ppx.ml[239,7527+44])
                                  Texp_constant Const_string("DEBUG44:",(src/ppx.ml[239,7527+35]..src/ppx.ml[239,7527+43]),None)
                                expression (src/ppx.ml[239,7527+46]..src/ppx.ml[239,7527+47])
                                  Texp_ident "x/1839"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[240,7579+2]..src/ppx.ml[264,9427+128])
                  Texp_match
                  expression (src/ppx.ml[240,7579+8]..src/ppx.ml[240,7579+9])
                    Texp_ident "x/1839"
                  [
                    <case>
                      pattern (src/ppx.ml[241,7594+4]..src/ppx.ml[241,7594+37])
                        Tpat_value
                        pattern (src/ppx.ml[241,7594+4]..src/ppx.ml[241,7594+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[241,7594+15]..src/ppx.ml[241,7594+25])
                              Tpat_var "expression/1840"
                            pattern (src/ppx.ml[241,7594+26]..src/ppx.ml[241,7594+36])
                              Tpat_var "attributes/1841"
                          ]
                          None
                      expression (src/ppx.ml[241,7594+41]..src/ppx.ml[241,7594+117])
                        Texp_apply
                        expression (src/ppx.ml[241,7594+42]..src/ppx.ml[241,7594+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[241,7594+56]..src/ppx.ml[241,7594+116])
                              Texp_apply
                              expression (src/ppx.ml[241,7594+57]..src/ppx.ml[241,7594+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[241,7594+72]..src/ppx.ml[241,7594+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[241,7594+73]..src/ppx.ml[241,7594+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[241,7594+74]..src/ppx.ml[241,7594+90]),None)
                                      expression (src/ppx.ml[241,7594+93]..src/ppx.ml[241,7594+103])
                                        Texp_ident "expression/1840"
                                      expression (src/ppx.ml[241,7594+104]..src/ppx.ml[241,7594+114])
                                        Texp_ident "attributes/1841"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[243,7732+4]..src/ppx.ml[243,7732+45])
                        Tpat_value
                        pattern (src/ppx.ml[243,7732+4]..src/ppx.ml[243,7732+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[243,7732+16]..src/ppx.ml[243,7732+24])
                              Tpat_var "rec_flag/1842"
                            pattern (src/ppx.ml[243,7732+26]..src/ppx.ml[243,7732+44])
                              Tpat_var "value_binding_list/1843"
                          ]
                          None
                      expression (src/ppx.ml[243,7732+48]..src/ppx.ml[244,7866+48])
                        Texp_sequence
                        expression (src/ppx.ml[243,7732+48]..src/ppx.ml[243,7732+132])
                          Texp_apply
                          expression (src/ppx.ml[243,7732+49]..src/ppx.ml[243,7732+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[243,7732+63]..src/ppx.ml[243,7732+131])
                                Texp_apply
                                expression (src/ppx.ml[243,7732+64]..src/ppx.ml[243,7732+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[243,7732+79]..src/ppx.ml[243,7732+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[243,7732+80]..src/ppx.ml[243,7732+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[243,7732+81]..src/ppx.ml[243,7732+98]),None)
                                        expression (src/ppx.ml[243,7732+101]..src/ppx.ml[243,7732+109])
                                          Texp_ident "rec_flag/1842"
                                        expression (src/ppx.ml[243,7732+111]..src/ppx.ml[243,7732+129])
                                          Texp_ident "value_binding_list/1843"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[244,7866+4]..src/ppx.ml[244,7866+48])
                          Texp_apply
                          expression (src/ppx.ml[244,7866+4]..src/ppx.ml[244,7866+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[244,7866+28]..src/ppx.ml[244,7866+48])
                                Texp_ident "value_binding_list/1843"
                          ]
                    <case>
                      pattern (src/ppx.ml[245,7915+4]..src/ppx.ml[245,7915+36])
                        Tpat_value
                        pattern (src/ppx.ml[245,7915+4]..src/ppx.ml[245,7915+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[245,7915+19]..src/ppx.ml[245,7915+36])
                              Tpat_var "value_description/1844"
                          ]
                          None
                      expression (src/ppx.ml[245,7915+39]..src/ppx.ml[245,7915+116])
                        Texp_apply
                        expression (src/ppx.ml[245,7915+40]..src/ppx.ml[245,7915+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[245,7915+54]..src/ppx.ml[245,7915+115])
                              Texp_apply
                              expression (src/ppx.ml[245,7915+55]..src/ppx.ml[245,7915+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[245,7915+70]..src/ppx.ml[245,7915+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[245,7915+71]..src/ppx.ml[245,7915+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[245,7915+72]..src/ppx.ml[245,7915+93]),None)
                                      expression (src/ppx.ml[245,7915+96]..src/ppx.ml[245,7915+113])
                                        Texp_ident "value_description/1844"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[247,8033+4]..src/ppx.ml[247,8033+47])
                        Tpat_value
                        pattern (src/ppx.ml[247,8033+4]..src/ppx.ml[247,8033+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[247,8033+15]..src/ppx.ml[247,8033+23])
                              Tpat_var "rec_flag/1845"
                            pattern (src/ppx.ml[247,8033+25]..src/ppx.ml[247,8033+46])
                              Tpat_var "type_declaration_list/1846"
                          ]
                          None
                      expression (src/ppx.ml[249,8112+4]..src/ppx.ml[250,8163+90])
                        Texp_sequence
                        expression (src/ppx.ml[249,8112+4]..src/ppx.ml[249,8112+49])
                          Texp_apply
                          expression (src/ppx.ml[249,8112+4]..src/ppx.ml[249,8112+26])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,8112+26]..src/ppx.ml[249,8112+49])
                                Texp_ident "type_declaration_list/1846"
                          ]
                        expression (src/ppx.ml[250,8163+4]..src/ppx.ml[250,8163+90])
                          Texp_apply
                          expression (src/ppx.ml[250,8163+5]..src/ppx.ml[250,8163+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[250,8163+19]..src/ppx.ml[250,8163+89])
                                Texp_apply
                                expression (src/ppx.ml[250,8163+20]..src/ppx.ml[250,8163+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[250,8163+35]..src/ppx.ml[250,8163+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[250,8163+36]..src/ppx.ml[250,8163+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[250,8163+37]..src/ppx.ml[250,8163+53]),None)
                                        expression (src/ppx.ml[250,8163+56]..src/ppx.ml[250,8163+64])
                                          Texp_ident "rec_flag/1845"
                                        expression (src/ppx.ml[250,8163+66]..src/ppx.ml[250,8163+87])
                                          Texp_ident "type_declaration_list/1846"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[253,8256+4]..src/ppx.ml[253,8256+31])
                        Tpat_value
                        pattern (src/ppx.ml[253,8256+4]..src/ppx.ml[253,8256+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[253,8256+17]..src/ppx.ml[253,8256+31])
                              Tpat_var "type_extension/1847"
                          ]
                          None
                      expression (src/ppx.ml[253,8256+34]..src/ppx.ml[253,8256+105])
                        Texp_apply
                        expression (src/ppx.ml[253,8256+35]..src/ppx.ml[253,8256+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,8256+49]..src/ppx.ml[253,8256+104])
                              Texp_apply
                              expression (src/ppx.ml[253,8256+50]..src/ppx.ml[253,8256+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[253,8256+65]..src/ppx.ml[253,8256+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[253,8256+66]..src/ppx.ml[253,8256+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[253,8256+67]..src/ppx.ml[253,8256+85]),None)
                                      expression (src/ppx.ml[253,8256+88]..src/ppx.ml[253,8256+102])
                                        Texp_ident "type_extension/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[254,8362+4]..src/ppx.ml[254,8362+40])
                        Tpat_value
                        pattern (src/ppx.ml[254,8362+4]..src/ppx.ml[254,8362+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[254,8362+19]..src/ppx.ml[254,8362+40])
                              Tpat_var "extension_constructor/1848"
                          ]
                          None
                      expression (src/ppx.ml[254,8362+43]..src/ppx.ml[254,8362+124])
                        Texp_apply
                        expression (src/ppx.ml[254,8362+44]..src/ppx.ml[254,8362+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[254,8362+58]..src/ppx.ml[254,8362+123])
                              Texp_apply
                              expression (src/ppx.ml[254,8362+59]..src/ppx.ml[254,8362+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[254,8362+74]..src/ppx.ml[254,8362+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[254,8362+75]..src/ppx.ml[254,8362+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[254,8362+76]..src/ppx.ml[254,8362+97]),None)
                                      expression (src/ppx.ml[254,8362+100]..src/ppx.ml[254,8362+121])
                                        Texp_ident "extension_constructor/1848"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[255,8487+4]..src/ppx.ml[255,8487+31])
                        Tpat_value
                        pattern (src/ppx.ml[255,8487+4]..src/ppx.ml[255,8487+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[255,8487+17]..src/ppx.ml[255,8487+31])
                              Tpat_var "module_binding/1849"
                          ]
                          None
                      expression (src/ppx.ml[255,8487+34]..src/ppx.ml[255,8487+104])
                        Texp_apply
                        expression (src/ppx.ml[255,8487+35]..src/ppx.ml[255,8487+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8487+49]..src/ppx.ml[255,8487+103])
                              Texp_apply
                              expression (src/ppx.ml[255,8487+50]..src/ppx.ml[255,8487+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8487+65]..src/ppx.ml[255,8487+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8487+66]..src/ppx.ml[255,8487+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[255,8487+67]..src/ppx.ml[255,8487+85]),None)
                                      expression (src/ppx.ml[255,8487+87]..src/ppx.ml[255,8487+101])
                                        Texp_ident "module_binding/1849"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[256,8592+4]..src/ppx.ml[256,8592+39])
                        Tpat_value
                        pattern (src/ppx.ml[256,8592+4]..src/ppx.ml[256,8592+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[256,8592+20]..src/ppx.ml[256,8592+39])
                              Tpat_var "module_binding_list/1850"
                          ]
                          None
                      expression (src/ppx.ml[256,8592+42]..src/ppx.ml[256,8592+121])
                        Texp_apply
                        expression (src/ppx.ml[256,8592+43]..src/ppx.ml[256,8592+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[256,8592+57]..src/ppx.ml[256,8592+120])
                              Texp_apply
                              expression (src/ppx.ml[256,8592+58]..src/ppx.ml[256,8592+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[256,8592+73]..src/ppx.ml[256,8592+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[256,8592+74]..src/ppx.ml[256,8592+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[256,8592+75]..src/ppx.ml[256,8592+96]),None)
                                      expression (src/ppx.ml[256,8592+99]..src/ppx.ml[256,8592+118])
                                        Texp_ident "module_binding_list/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8714+4]..src/ppx.ml[257,8714+40])
                        Tpat_value
                        pattern (src/ppx.ml[257,8714+4]..src/ppx.ml[257,8714+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[257,8714+17]..src/ppx.ml[257,8714+40])
                              Tpat_var "module_type_declaration/1851"
                          ]
                          None
                      expression (src/ppx.ml[257,8714+43]..src/ppx.ml[257,8714+124])
                        Texp_apply
                        expression (src/ppx.ml[257,8714+44]..src/ppx.ml[257,8714+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[257,8714+58]..src/ppx.ml[257,8714+123])
                              Texp_apply
                              expression (src/ppx.ml[257,8714+59]..src/ppx.ml[257,8714+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[257,8714+74]..src/ppx.ml[257,8714+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[257,8714+75]..src/ppx.ml[257,8714+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[257,8714+76]..src/ppx.ml[257,8714+95]),None)
                                      expression (src/ppx.ml[257,8714+98]..src/ppx.ml[257,8714+121])
                                        Texp_ident "module_type_declaration/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[259,8856+4]..src/ppx.ml[259,8856+30])
                        Tpat_value
                        pattern (src/ppx.ml[259,8856+4]..src/ppx.ml[259,8856+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[259,8856+14]..src/ppx.ml[259,8856+30])
                              Tpat_var "open_description/1852"
                          ]
                          None
                      expression (src/ppx.ml[259,8856+33]..src/ppx.ml[259,8856+103])
                        Texp_apply
                        expression (src/ppx.ml[259,8856+34]..src/ppx.ml[259,8856+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[259,8856+48]..src/ppx.ml[259,8856+102])
                              Texp_apply
                              expression (src/ppx.ml[259,8856+49]..src/ppx.ml[259,8856+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[259,8856+64]..src/ppx.ml[259,8856+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[259,8856+65]..src/ppx.ml[259,8856+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[259,8856+66]..src/ppx.ml[259,8856+81]),None)
                                      expression (src/ppx.ml[259,8856+84]..src/ppx.ml[259,8856+100])
                                        Texp_ident "open_description/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[260,8960+4]..src/ppx.ml[260,8960+36])
                        Tpat_value
                        pattern (src/ppx.ml[260,8960+4]..src/ppx.ml[260,8960+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[260,8960+15]..src/ppx.ml[260,8960+36])
                              Tpat_var "class_declarations/1853"
                          ]
                          None
                      expression (src/ppx.ml[260,8960+39]..src/ppx.ml[260,8960+113])
                        Texp_apply
                        expression (src/ppx.ml[260,8960+40]..src/ppx.ml[260,8960+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[260,8960+54]..src/ppx.ml[260,8960+112])
                              Texp_apply
                              expression (src/ppx.ml[260,8960+55]..src/ppx.ml[260,8960+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[260,8960+70]..src/ppx.ml[260,8960+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[260,8960+71]..src/ppx.ml[260,8960+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[260,8960+72]..src/ppx.ml[260,8960+89]),None)
                                      expression (src/ppx.ml[260,8960+92]..src/ppx.ml[260,8960+110])
                                        Texp_ident "class_declarations/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,9074+4]..src/ppx.ml[261,9074+45])
                        Tpat_value
                        pattern (src/ppx.ml[261,9074+4]..src/ppx.ml[261,9074+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[261,9074+20]..src/ppx.ml[261,9074+45])
                              Tpat_var "class_type_declarations/1854"
                          ]
                          None
                      expression (src/ppx.ml[261,9074+48]..src/ppx.ml[261,9074+132])
                        Texp_apply
                        expression (src/ppx.ml[261,9074+49]..src/ppx.ml[261,9074+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[261,9074+63]..src/ppx.ml[261,9074+131])
                              Texp_apply
                              expression (src/ppx.ml[261,9074+64]..src/ppx.ml[261,9074+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[261,9074+79]..src/ppx.ml[261,9074+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[261,9074+80]..src/ppx.ml[261,9074+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[261,9074+81]..src/ppx.ml[261,9074+103]),None)
                                      expression (src/ppx.ml[261,9074+106]..src/ppx.ml[261,9074+129])
                                        Texp_ident "class_type_declarations/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[262,9207+4]..src/ppx.ml[262,9207+39])
                        Tpat_value
                        pattern (src/ppx.ml[262,9207+4]..src/ppx.ml[262,9207+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[262,9207+18]..src/ppx.ml[262,9207+39])
                              Tpat_var "include_declaration/1855"
                          ]
                          None
                      expression (src/ppx.ml[262,9207+41]..src/ppx.ml[262,9207+117])
                        Texp_apply
                        expression (src/ppx.ml[262,9207+42]..src/ppx.ml[262,9207+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[262,9207+56]..src/ppx.ml[262,9207+116])
                              Texp_apply
                              expression (src/ppx.ml[262,9207+57]..src/ppx.ml[262,9207+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[262,9207+72]..src/ppx.ml[262,9207+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[262,9207+73]..src/ppx.ml[262,9207+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[262,9207+74]..src/ppx.ml[262,9207+93]),None)
                                      expression (src/ppx.ml[262,9207+95]..src/ppx.ml[262,9207+114])
                                        Texp_ident "include_declaration/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[263,9325+4]..src/ppx.ml[263,9325+30])
                        Tpat_value
                        pattern (src/ppx.ml[263,9325+4]..src/ppx.ml[263,9325+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[263,9325+19]..src/ppx.ml[263,9325+30])
                              Tpat_var "attribute/1856"
                          ]
                          None
                      expression (src/ppx.ml[263,9325+32]..src/ppx.ml[263,9325+101])
                        Texp_apply
                        expression (src/ppx.ml[263,9325+33]..src/ppx.ml[263,9325+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,9325+47]..src/ppx.ml[263,9325+100])
                              Texp_apply
                              expression (src/ppx.ml[263,9325+48]..src/ppx.ml[263,9325+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[263,9325+63]..src/ppx.ml[263,9325+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[263,9325+64]..src/ppx.ml[263,9325+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[263,9325+65]..src/ppx.ml[263,9325+86]),None)
                                      expression (src/ppx.ml[263,9325+89]..src/ppx.ml[263,9325+98])
                                        Texp_ident "attribute/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[264,9427+4]..src/ppx.ml[264,9427+44])
                        Tpat_value
                        pattern (src/ppx.ml[264,9427+4]..src/ppx.ml[264,9427+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[264,9427+21]..src/ppx.ml[264,9427+30])
                              Tpat_var "extension/1857"
                            pattern (src/ppx.ml[264,9427+33]..src/ppx.ml[264,9427+43])
                              Tpat_var "attributes/1858"
                          ]
                          None
                      expression (src/ppx.ml[264,9427+46]..src/ppx.ml[264,9427+128])
                        Texp_apply
                        expression (src/ppx.ml[264,9427+47]..src/ppx.ml[264,9427+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[264,9427+61]..src/ppx.ml[264,9427+127])
                              Texp_apply
                              expression (src/ppx.ml[264,9427+62]..src/ppx.ml[264,9427+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[264,9427+77]..src/ppx.ml[264,9427+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[264,9427+78]..src/ppx.ml[264,9427+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[264,9427+79]..src/ppx.ml[264,9427+100]),None)
                                      expression (src/ppx.ml[264,9427+103]..src/ppx.ml[264,9427+112])
                                        Texp_ident "extension/1857"
                                      expression (src/ppx.ml[264,9427+115]..src/ppx.ml[264,9427+125])
                                        Texp_ident "attributes/1858"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[266,9557+0]..src/ppx.ml[266,9557+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[266,9557+4]..src/ppx.ml[266,9557+7])
          Tpat_var "foo/1859"
        expression (src/ppx.ml[266,9557+10]..src/ppx.ml[266,9557+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[268,9572+0]..src/ppx.ml[276,9791+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[268,9572+4]..src/ppx.ml[268,9572+12])
          Tpat_var "printone/1860"
        expression (src/ppx.ml[268,9572+13]..src/ppx.ml[276,9791+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[268,9572+14]..src/ppx.ml[268,9572+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[268,9572+18]..src/ppx.ml[268,9572+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1861"
                pattern (src/ppx.ml[268,9572+14]..src/ppx.ml[268,9572+15])
                  Tpat_any
              expression (src/ppx.ml[269,9615+2]..src/ppx.ml[276,9791+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[268,9572+36]..src/ppx.ml[268,9572+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[269,9615+8]..src/ppx.ml[269,9615+9])
                  Texp_ident "x/1861"
                [
                  <case>
                    pattern (src/ppx.ml[270,9630+3]..src/ppx.ml[273,9680+3])
                      Tpat_value
                      pattern (src/ppx.ml[270,9630+3]..src/ppx.ml[273,9680+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[271,9635+4]..src/ppx.ml[271,9635+13])
                              Tpat_var "pstr_desc/1862"
                        ]
                    expression (src/ppx.ml[275,9764+4]..src/ppx.ml[276,9791+6])
                      Texp_sequence
                      expression (src/ppx.ml[275,9764+4]..src/ppx.ml[275,9764+25])
                        Texp_apply
                        expression (src/ppx.ml[275,9764+5]..src/ppx.ml[275,9764+14])
                          Texp_ident "printdesc/1837"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9764+15]..src/ppx.ml[275,9764+24])
                              Texp_ident "pstr_desc/1862"
                        ]
                      expression (src/ppx.ml[276,9791+4]..src/ppx.ml[276,9791+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[282,9911+0]..src/ppx.ml[284,9985+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9911+4]..src/ppx.ml[282,9911+13])
          Tpat_var "printone2/1863"
        expression (src/ppx.ml[282,9911+14]..src/ppx.ml[284,9985+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[282,9911+14]..src/ppx.ml[282,9911+15])
                Tpat_var "x/1864"
              expression (src/ppx.ml[283,9935+2]..src/ppx.ml[284,9985+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[282,9911+17]..src/ppx.ml[282,9911+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[283,9935+2]..src/ppx.ml[283,9935+48])
                  Texp_apply
                  expression (src/ppx.ml[283,9935+3]..src/ppx.ml[283,9935+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[283,9935+17]..src/ppx.ml[283,9935+47])
                        Texp_apply
                        expression (src/ppx.ml[283,9935+18]..src/ppx.ml[283,9935+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[283,9935+33]..src/ppx.ml[283,9935+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[283,9935+34]..src/ppx.ml[283,9935+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[283,9935+35]..src/ppx.ml[283,9935+42]),None)
                                expression (src/ppx.ml[283,9935+44]..src/ppx.ml[283,9935+45])
                                  Texp_ident "x/1864"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[284,9985+2]..src/ppx.ml[284,9985+12])
                  Texp_apply
                  expression (src/ppx.ml[284,9985+2]..src/ppx.ml[284,9985+10])
                    Texp_ident "printone/1860"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[284,9985+11]..src/ppx.ml[284,9985+12])
                        Texp_ident "x/1864"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[286,10001+0]..src/ppx.ml[288,10032+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[286,10001+4]..src/ppx.ml[286,10001+9])
          Tpat_var "proc1/1865"
        expression (src/ppx.ml[286,10001+10]..src/ppx.ml[288,10032+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[286,10001+10]..src/ppx.ml[286,10001+11])
                Tpat_var "x/1867"
              expression (src/ppx.ml[287,10017+2]..src/ppx.ml[288,10032+3])
                Texp_sequence
                expression (src/ppx.ml[287,10017+2]..src/ppx.ml[287,10017+13])
                  Texp_apply
                  expression (src/ppx.ml[287,10017+2]..src/ppx.ml[287,10017+11])
                    Texp_ident "printone2/1863"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[287,10017+12]..src/ppx.ml[287,10017+13])
                        Texp_ident "x/1867"
                  ]
                expression (src/ppx.ml[288,10032+2]..src/ppx.ml[288,10032+3])
                  Texp_ident "x/1867"
          ]
    ]
  structure_item (src/ppx.ml[297,10257+0]..src/ppx.ml[300,10399+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10257+4]..src/ppx.ml[297,10257+9])
          Tpat_var "debug/1868"
        expression (src/ppx.ml[297,10257+10]..src/ppx.ml[300,10399+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[297,10257+10]..src/ppx.ml[297,10257+14])
                Tpat_var "proc/1870"
              expression (src/ppx.ml[297,10257+15]..src/ppx.ml[300,10399+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[297,10257+15]..src/ppx.ml[297,10257+18])
                      Tpat_var "lst/1871"
                    expression (src/ppx.ml[298,10285+2]..src/ppx.ml[300,10399+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[297,10257+21]..src/ppx.ml[297,10257+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[298,10285+6]..src/ppx.ml[298,10285+12])
                            Tpat_var "result/1872"
                          expression (src/ppx.ml[298,10285+15]..src/ppx.ml[298,10285+32])
                            Texp_apply
                            expression (src/ppx.ml[298,10285+15]..src/ppx.ml[298,10285+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[298,10285+24]..src/ppx.ml[298,10285+28])
                                  Texp_ident "proc/1870"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[298,10285+29]..src/ppx.ml[298,10285+32])
                                  Texp_ident "lst/1871"
                            ]
                      ]
                      expression (src/ppx.ml[299,10321+2]..src/ppx.ml[300,10399+4])
                        Texp_sequence
                        expression (src/ppx.ml[299,10321+2]..src/ppx.ml[299,10321+76])
                          Texp_apply
                          expression (src/ppx.ml[299,10321+2]..src/ppx.ml[299,10321+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[299,10321+12]..src/ppx.ml[299,10321+69])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[299,10321+17]..src/ppx.ml[299,10321+18])
                                      Tpat_var "i/1936"
                                    expression (src/ppx.ml[299,10321+22]..src/ppx.ml[299,10321+68])
                                      Texp_apply
                                      expression (src/ppx.ml[299,10321+22]..src/ppx.ml[299,10321+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[299,10321+36]..src/ppx.ml[299,10321+68])
                                            Texp_apply
                                            expression (src/ppx.ml[299,10321+37]..src/ppx.ml[299,10321+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[299,10321+52]..src/ppx.ml[299,10321+67])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[299,10321+53]..src/ppx.ml[299,10321+63])
                                                      Texp_constant Const_string("DEBUG33:",(src/ppx.ml[299,10321+54]..src/ppx.ml[299,10321+62]),None)
                                                    expression (src/ppx.ml[299,10321+65]..src/ppx.ml[299,10321+66])
                                                      Texp_ident "i/1936"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[299,10321+70]..src/ppx.ml[299,10321+76])
                                Texp_ident "result/1872"
                          ]
                        expression (src/ppx.ml[300,10399+2]..src/ppx.ml[300,10399+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[302,10421+0]..src/ppx.ml[305,10545+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10421+4]..src/ppx.ml[302,10421+13])
          Tpat_var "transform/1937"
        expression (src/ppx.ml[302,10421+14]..src/ppx.ml[305,10545+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[302,10421+14]..src/ppx.ml[302,10421+15])
                Tpat_var "x/1939"
              expression (src/ppx.ml[303,10476+2]..src/ppx.ml[305,10545+3])
                Texp_sequence
                expression (src/ppx.ml[303,10476+2]..src/ppx.ml[303,10476+48])
                  Texp_apply
                  expression (src/ppx.ml[303,10476+3]..src/ppx.ml[303,10476+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[303,10476+17]..src/ppx.ml[303,10476+47])
                        Texp_apply
                        expression (src/ppx.ml[303,10476+18]..src/ppx.ml[303,10476+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[303,10476+33]..src/ppx.ml[303,10476+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[303,10476+34]..src/ppx.ml[303,10476+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[303,10476+35]..src/ppx.ml[303,10476+42]),None)
                                expression (src/ppx.ml[303,10476+44]..src/ppx.ml[303,10476+45])
                                  Texp_ident "x/1939"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[304,10526+2]..src/ppx.ml[305,10545+3])
                  Texp_sequence
                  expression (src/ppx.ml[304,10526+2]..src/ppx.ml[304,10526+17])
                    Texp_apply
                    expression (src/ppx.ml[304,10526+3]..src/ppx.ml[304,10526+8])
                      Texp_ident "debug/1868"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[304,10526+9]..src/ppx.ml[304,10526+14])
                          Texp_ident "proc1/1865"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[304,10526+15]..src/ppx.ml[304,10526+16])
                          Texp_ident "x/1939"
                    ]
                  expression (src/ppx.ml[305,10545+2]..src/ppx.ml[305,10545+3])
                    Texp_ident "x/1939"
          ]
    ]
  structure_item (src/ppx.ml[307,10552+1]..src/ppx.ml[307,10552+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10552+5]..src/ppx.ml[307,10552+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[307,10552+10]..src/ppx.ml[307,10552+69])
          Texp_apply
          expression (src/ppx.ml[307,10552+10]..src/ppx.ml[307,10552+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[307,10552+47]..src/ppx.ml[307,10552+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[307,10552+47]..src/ppx.ml[307,10552+56])
                    Texp_ident "transform/1937"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[307,10552+57]..src/ppx.ml[307,10552+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[307,10552+58]..src/ppx.ml[307,10552+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.131>;
 "foo"[value] -> <Ppx.123>;
 "print_constructor_arguments"[value] -> <Ppx.70>;
 "print_type_decl"[value] -> <Ppx.88>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.102>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.124>;
 "printone2"[value] -> <Ppx.127>;
 "proc1"[value] -> <Ppx.129>;
 "proc2"[value] -> <Ppx.7>;
 "process_Ptype_variant_constructor_declaration_list"[value] -> <Ppx.74>;
 "process_core_type"[value] -> <Ppx.30>;
 "process_core_type_desc"[value] -> <Ppx.28>;
 "process_core_type_list"[value] -> <Ppx.31>;
 "process_kind"[value] -> <Ppx.84>;
 "process_record_kind"[value] -> <Ppx.27>;
 "process_record_kind_list"[value] -> <Ppx.29>;
 "process_type_decl_list"[value] -> <Ppx.98>;
 "transform"[value] -> <Ppx.136>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5101 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1640
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1640
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1640
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1396
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1395
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG55:pat" pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1402-1640
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1402-1462
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1417-1461
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG55:expr" pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1510-1640
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1510-1576
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1525-1575
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG55:atrr"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1582-1640
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1582-1640
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1597-1639
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG55:loc" pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1675-1825
             (before Ppx.print_value_binding_list src/ppx.ml(62):1710-1825
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1754-1825
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1754-1783
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1789-1825
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1789-1817
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1823-1825
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1733-1735
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1854-2352
               (before Ppx.process_record_kind src/ppx.ml(70):1862-2352
                 (let
                   (pld_attributes/1447 =a (field 4 x/1442)
                    pld_loc/1446 =a (field 3 x/1442)
                    pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2068-2352
                     (after Ppx.process_record_kind src/ppx.ml(78):2068-2352
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2083-2351
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*) "precord_kind:"
                               pld_name/1443 "mutable" pld_mutable/1444
                               "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2380-3975
                (before Ppx.process_core_type_desc src/ppx.ml(86):2386-3975
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2416-2467
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2416-2467
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2431-2466
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2488-2547
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2488-2547
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2503-2546
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var" name/1449)))))))
                   case tag 1:
                    (let
                      (core_type2/1452 =a (field 2 x/1448)
                       core_type/1451 =a (field 1 x/1448)
                       arg_label/1450 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(90):2607-2663
                        (after Ppx.process_core_type_desc src/ppx.ml(90):2607-2663
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(90):2622-2662
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10"))))))
                   case tag 2:
                    (let (a/1453 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(93):2716-2771
                        (after Ppx.process_core_type_desc src/ppx.ml(93):2716-2771
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(93):2731-2770
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow9"))))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2847-2953
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2847-2873
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2879-2953
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2879-2953
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2894-2952
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (let
                      (b/1457 =a (field 1 x/1448) a/1456 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(100):3027-3082
                        (after Ppx.process_core_type_desc src/ppx.ml(100):3027-3082
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(100):3042-3081
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8"))))))
                   case tag 5:
                    (let
                      (b/1459 =a (field 1 x/1448) a/1458 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(103):3157-3212
                        (after Ppx.process_core_type_desc src/ppx.ml(103):3157-3212
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(103):3172-3211
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7"))))))
                   case tag 6:
                    (let
                      (b/1461 =a (field 1 x/1448) a/1460 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(106):3278-3333
                        (after Ppx.process_core_type_desc src/ppx.ml(106):3278-3333
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(106):3293-3332
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6"))))))
                   case tag 7:
                    (let
                      (c/1464 =a (field 2 x/1448)
                       b/1463 =a (field 1 x/1448)
                       a/1462 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(109):3428-3483
                        (after Ppx.process_core_type_desc src/ppx.ml(109):3428-3483
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(109):3443-3482
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5"))))))
                   case tag 8:
                    (let
                      (b/1466 =a (field 1 x/1448) a/1465 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(112):3552-3607
                        (after Ppx.process_core_type_desc src/ppx.ml(112):3552-3607
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(112):3567-3606
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4"))))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3660-3717
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3660-3717
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3675-3716
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3915-3975
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3915-3975
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3930-3974
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4006-4123
                (before Ppx.process_record_kind_list src/ppx.ml(122):4014-4123
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4058-4123
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4058-4081
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4087-4123
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4087-4115
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4121-4123
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4037-4039
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4145-4439
                (before Ppx.process_core_type src/ppx.ml(130):4153-4439
                  (let
                    (ptyp_attributes/1798 =a (field 3 x/1794)
                     ptyp_loc_stack/1797 =a (field 2 x/1794)
                     ptyp_loc/1796 =a (field 1 x/1794)
                     ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4340-4439
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4340-4374
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(138):4380-4439
                          (after Ppx.process_core_type src/ppx.ml(138):4380-4439
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(138):4395-4438
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "ptyp_desc" ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(139)<ghost>:4466-4585
                (before Ppx.process_core_type_list src/ppx.ml(140):4489-4585
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(143):4533-4585
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(143):4533-4554
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(144):4560-4585
                            (after Ppx.process_core_type_list src/ppx.ml(144):4560-4585
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(141):4512-4514
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(151)<ghost>:4631-4862
                 (before Ppx.print_constructor_arguments src/ppx.ml(152):4639-4862
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(154):4677-4768
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(154):4677-4703
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(155):4709-4768
                             (after Ppx.print_constructor_arguments src/ppx.ml(155):4709-4768
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(155):4724-4767
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple" a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(158):4802-4862
                         (after Ppx.print_constructor_arguments src/ppx.ml(158):4802-4862
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(158):4817-4861
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(160)<ghost>:4922-5851
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161):4930-5851
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(165):5040-5851
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5379-5851
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5379-5416
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5424-5851
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5424-5779
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5439-5778
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5787-5851
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5787-5841
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5849-5851
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):4953-4955
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(194)<ghost>:5871-6330
                     (before Ppx.process_kind src/ppx.ml(195):5879-6330
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(197):5937-5995
                           (after Ppx.process_kind src/ppx.ml(197):5937-5995
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(197):5952-5994
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(205):6272-6330
                           (after Ppx.process_kind src/ppx.ml(205):6272-6330
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(205):6287-6329
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(199):6023-6144
                             (seq
                               (after Ppx.process_kind src/ppx.ml(199):6023-6077
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(200):6083-6144
                                 (after Ppx.process_kind src/ppx.ml(200):6083-6144
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(200):6098-6143
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6225-6252
                             (after Ppx.process_kind src/ppx.ml(204):6225-6252
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(207)<ghost>:6351-7328
                     (before Ppx.print_type_decl src/ppx.ml(208):6359-7328
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(219):6766-7328
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(219):6766-6825
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(219):6781-6824
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(220):6831-7328
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(220):6831-6893
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(220):6846-6892
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(221):6899-7328
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(221):6899-6955
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(221):6914-6954
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(222):6961-7328
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(222):6961-7014
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(222):6976-7013
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(223):7020-7328
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(223):7020-7045
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(224):7051-7328
                                               (after Ppx.print_type_decl src/ppx.ml(224):7051-7328
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(224):7066-7327
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "private:"
                                                         ptype_private/1829
                                                         "manifest"
                                                         ptype_manifest/1830
                                                         "attr"
                                                         ptype_attributes/1831
                                                         "loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(230)<ghost>:7364-7475
                       (before Ppx.process_type_decl_list src/ppx.ml(231):7372-7475
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(234):7416-7475
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(234):7416-7435
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(235):7441-7475
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(235):7441-7467
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(236):7473-7475
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(232):7395-7397
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(238)<ghost>:7494-9555
                         (before Ppx.printdesc src/ppx.ml(239):7529-9555
                           (seq
                             (after Ppx.printdesc src/ppx.ml(239):7529-7577
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(239):7544-7576
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG44:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(240):7581-9555
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(241):7635-7711
                                     (after Ppx.printdesc src/ppx.ml(241):7635-7711
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(241):7650-7710
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(243):7780-7914
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(243):7780-7864
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(243):7795-7863
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(244):7870-7914
                                         (after Ppx.printdesc src/ppx.ml(244):7870-7914
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(245):7954-8031
                                     (after Ppx.printdesc src/ppx.ml(245):7954-8031
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(245):7969-8030
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(249):8116-8253
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(249):8116-8161
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(250):8167-8253
                                         (after Ppx.printdesc src/ppx.ml(250):8167-8253
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(250):8182-8252
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(253):8290-8361
                                     (after Ppx.printdesc src/ppx.ml(253):8290-8361
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(253):8305-8360
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8405-8486
                                     (after Ppx.printdesc src/ppx.ml(254):8405-8486
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8420-8485
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8521-8591
                                     (after Ppx.printdesc src/ppx.ml(255):8521-8591
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8536-8590
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8634-8713
                                     (after Ppx.printdesc src/ppx.ml(256):8634-8713
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8649-8712
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8757-8838
                                     (after Ppx.printdesc src/ppx.ml(257):8757-8838
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8772-8837
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):8889-8959
                                     (after Ppx.printdesc src/ppx.ml(259):8889-8959
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):8904-8958
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):8999-9073
                                     (after Ppx.printdesc src/ppx.ml(260):8999-9073
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9014-9072
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9122-9206
                                     (after Ppx.printdesc src/ppx.ml(261):9122-9206
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9137-9205
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9248-9324
                                     (after Ppx.printdesc src/ppx.ml(262):9248-9324
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9263-9323
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9357-9426
                                     (after Ppx.printdesc src/ppx.ml(263):9357-9426
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9372-9425
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9473-9555
                                     (after Ppx.printdesc src/ppx.ml(264):9473-9555
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9488-9554
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(268)<ghost>:9585-9797
                         (before Ppx.printone src/ppx.ml(269):9617-9797
                           (let
                             (*match*/5102 =a (field 1 x/1861)
                              pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(275):9768-9797
                               (seq
                                 (after Ppx.printone src/ppx.ml(275):9768-9789
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(276):9795-9797
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(282)<ghost>:9925-9997
                         (before Ppx.printone2 src/ppx.ml(283):9937-9997
                           (seq
                             (after Ppx.printone2 src/ppx.ml(283):9937-9983
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(283):9952-9982
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG1:" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(284):9987-9997
                               (after Ppx.printone2 src/ppx.ml(284):9987-9997
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(286)<ghost>:10011-10035
                         (before Ppx.proc1 src/ppx.ml(287):10019-10035
                           (seq
                             (after Ppx.proc1 src/ppx.ml(287):10019-10030
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(288):10034-10035
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(297)<ghost>:10267-10403
                         (before Ppx.debug src/ppx.ml(298):10287-10403
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(298):10300-10317
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(299):10323-10403
                               (seq
                                 (after Ppx.debug src/ppx.ml(299):10323-10397
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(299):10333-10390
                                         (before Ppx.debug.(fun) src/ppx.ml(299):10343-10389
                                           (after Ppx.debug.(fun) src/ppx.ml(299):10343-10389
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(299):10357-10389
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG33:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(300):10401-10403
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(302)<ghost>:10435-10548
                         (before Ppx.transform src/ppx.ml(303):10478-10548
                           (seq
                             (after Ppx.transform src/ppx.ml(303):10478-10524
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(303):10493-10523
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(304):10528-10548
                               (seq
                                 (after Ppx.transform src/ppx.ml(304):10528-10543
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(305):10547-10548
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(307):10562-10621
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1640
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1640
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1640
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1396
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1395
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG55:pat" pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1402-1640
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1402-1462
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1417-1461
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG55:expr" pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1510-1640
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1510-1576
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1525-1575
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG55:atrr"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1582-1640
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1582-1640
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1597-1639
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG55:loc" pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1675-1825
             (before Ppx.print_value_binding_list src/ppx.ml(62):1710-1825
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1754-1825
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1754-1783
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1789-1825
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1789-1817
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1823-1825
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1733-1735
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1854-2352
               (before Ppx.process_record_kind src/ppx.ml(70):1862-2352
                 (let
                   (pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2068-2352
                     (after Ppx.process_record_kind src/ppx.ml(78):2068-2352
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2083-2351
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*) "precord_kind:"
                               pld_name/1443 "mutable" pld_mutable/1444
                               "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2380-3975
                (before Ppx.process_core_type_desc src/ppx.ml(86):2386-3975
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2416-2467
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2416-2467
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2431-2466
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2488-2547
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2488-2547
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2503-2546
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var" name/1449)))))))
                   case tag 1:
                    (before Ppx.process_core_type_desc src/ppx.ml(90):2607-2663
                      (after Ppx.process_core_type_desc src/ppx.ml(90):2607-2663
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(90):2622-2662
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow10")))))
                   case tag 2:
                    (before Ppx.process_core_type_desc src/ppx.ml(93):2716-2771
                      (after Ppx.process_core_type_desc src/ppx.ml(93):2716-2771
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(93):2731-2770
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow9")))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2847-2953
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2847-2873
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2879-2953
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2879-2953
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2894-2952
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (before Ppx.process_core_type_desc src/ppx.ml(100):3027-3082
                      (after Ppx.process_core_type_desc src/ppx.ml(100):3027-3082
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(100):3042-3081
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow8")))))
                   case tag 5:
                    (before Ppx.process_core_type_desc src/ppx.ml(103):3157-3212
                      (after Ppx.process_core_type_desc src/ppx.ml(103):3157-3212
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(103):3172-3211
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow7")))))
                   case tag 6:
                    (before Ppx.process_core_type_desc src/ppx.ml(106):3278-3333
                      (after Ppx.process_core_type_desc src/ppx.ml(106):3278-3333
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(106):3293-3332
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow6")))))
                   case tag 7:
                    (before Ppx.process_core_type_desc src/ppx.ml(109):3428-3483
                      (after Ppx.process_core_type_desc src/ppx.ml(109):3428-3483
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(109):3443-3482
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow5")))))
                   case tag 8:
                    (before Ppx.process_core_type_desc src/ppx.ml(112):3552-3607
                      (after Ppx.process_core_type_desc src/ppx.ml(112):3552-3607
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(112):3567-3606
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow4")))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3660-3717
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3660-3717
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3675-3716
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3915-3975
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3915-3975
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3930-3974
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4006-4123
                (before Ppx.process_record_kind_list src/ppx.ml(122):4014-4123
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4058-4123
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4058-4081
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4087-4123
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4087-4115
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4121-4123
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4037-4039
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4145-4439
                (before Ppx.process_core_type src/ppx.ml(130):4153-4439
                  (let (ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4340-4439
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4340-4374
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(138):4380-4439
                          (after Ppx.process_core_type src/ppx.ml(138):4380-4439
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(138):4395-4438
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "ptyp_desc" ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(139)<ghost>:4466-4585
                (before Ppx.process_core_type_list src/ppx.ml(140):4489-4585
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(143):4533-4585
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(143):4533-4554
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(144):4560-4585
                            (after Ppx.process_core_type_list src/ppx.ml(144):4560-4585
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(141):4512-4514
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(151)<ghost>:4631-4862
                 (before Ppx.print_constructor_arguments src/ppx.ml(152):4639-4862
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(154):4677-4768
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(154):4677-4703
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(155):4709-4768
                             (after Ppx.print_constructor_arguments src/ppx.ml(155):4709-4768
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(155):4724-4767
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple" a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(158):4802-4862
                         (after Ppx.print_constructor_arguments src/ppx.ml(158):4802-4862
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(158):4817-4861
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(160)<ghost>:4922-5851
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161):4930-5851
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(165):5040-5851
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5379-5851
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(176):5379-5416
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5424-5851
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5424-5779
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5439-5778
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5787-5851
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(191):5787-5841
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5849-5851
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):4953-4955
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(194)<ghost>:5871-6330
                     (before Ppx.process_kind src/ppx.ml(195):5879-6330
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(197):5937-5995
                           (after Ppx.process_kind src/ppx.ml(197):5937-5995
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(197):5952-5994
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(205):6272-6330
                           (after Ppx.process_kind src/ppx.ml(205):6272-6330
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(205):6287-6329
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(199):6023-6144
                             (seq
                               (after Ppx.process_kind src/ppx.ml(199):6023-6077
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(200):6083-6144
                                 (after Ppx.process_kind src/ppx.ml(200):6083-6144
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(200):6098-6143
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6225-6252
                             (after Ppx.process_kind src/ppx.ml(204):6225-6252
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(207)<ghost>:6351-7328
                     (before Ppx.print_type_decl src/ppx.ml(208):6359-7328
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(219):6766-7328
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(219):6766-6825
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(219):6781-6824
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(220):6831-7328
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(220):6831-6893
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(220):6846-6892
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(221):6899-7328
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(221):6899-6955
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(221):6914-6954
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(222):6961-7328
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(222):6961-7014
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(222):6976-7013
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(223):7020-7328
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(223):7020-7045
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(224):7051-7328
                                               (after Ppx.print_type_decl src/ppx.ml(224):7051-7328
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(224):7066-7327
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "private:"
                                                         ptype_private/1829
                                                         "manifest"
                                                         ptype_manifest/1830
                                                         "attr"
                                                         ptype_attributes/1831
                                                         "loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(230)<ghost>:7364-7475
                       (before Ppx.process_type_decl_list src/ppx.ml(231):7372-7475
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(234):7416-7475
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(234):7416-7435
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(235):7441-7475
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(235):7441-7467
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(236):7473-7475
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(232):7395-7397
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(238)<ghost>:7494-9555
                         (before Ppx.printdesc src/ppx.ml(239):7529-9555
                           (seq
                             (after Ppx.printdesc src/ppx.ml(239):7529-7577
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(239):7544-7576
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG44:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(240):7581-9555
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(241):7635-7711
                                     (after Ppx.printdesc src/ppx.ml(241):7635-7711
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(241):7650-7710
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(243):7780-7914
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(243):7780-7864
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(243):7795-7863
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(244):7870-7914
                                         (after Ppx.printdesc src/ppx.ml(244):7870-7914
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(245):7954-8031
                                     (after Ppx.printdesc src/ppx.ml(245):7954-8031
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(245):7969-8030
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(249):8116-8253
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(249):8116-8161
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(250):8167-8253
                                         (after Ppx.printdesc src/ppx.ml(250):8167-8253
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(250):8182-8252
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(253):8290-8361
                                     (after Ppx.printdesc src/ppx.ml(253):8290-8361
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(253):8305-8360
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8405-8486
                                     (after Ppx.printdesc src/ppx.ml(254):8405-8486
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8420-8485
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8521-8591
                                     (after Ppx.printdesc src/ppx.ml(255):8521-8591
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8536-8590
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8634-8713
                                     (after Ppx.printdesc src/ppx.ml(256):8634-8713
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8649-8712
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8757-8838
                                     (after Ppx.printdesc src/ppx.ml(257):8757-8838
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8772-8837
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):8889-8959
                                     (after Ppx.printdesc src/ppx.ml(259):8889-8959
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):8904-8958
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):8999-9073
                                     (after Ppx.printdesc src/ppx.ml(260):8999-9073
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9014-9072
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9122-9206
                                     (after Ppx.printdesc src/ppx.ml(261):9122-9206
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9137-9205
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9248-9324
                                     (after Ppx.printdesc src/ppx.ml(262):9248-9324
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9263-9323
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9357-9426
                                     (after Ppx.printdesc src/ppx.ml(263):9357-9426
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9372-9425
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9473-9555
                                     (after Ppx.printdesc src/ppx.ml(264):9473-9555
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9488-9554
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(268)<ghost>:9585-9797
                         (before Ppx.printone src/ppx.ml(269):9617-9797
                           (let (pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(275):9768-9797
                               (seq
                                 (after Ppx.printone src/ppx.ml(275):9768-9789
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(276):9795-9797
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(282)<ghost>:9925-9997
                         (before Ppx.printone2 src/ppx.ml(283):9937-9997
                           (seq
                             (after Ppx.printone2 src/ppx.ml(283):9937-9983
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(283):9952-9982
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG1:" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(284):9987-9997
                               (after Ppx.printone2 src/ppx.ml(284):9987-9997
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(286)<ghost>:10011-10035
                         (before Ppx.proc1 src/ppx.ml(287):10019-10035
                           (seq
                             (after Ppx.proc1 src/ppx.ml(287):10019-10030
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(288):10034-10035
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(297)<ghost>:10267-10403
                         (before Ppx.debug src/ppx.ml(298):10287-10403
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(298):10300-10317
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(299):10323-10403
                               (seq
                                 (after Ppx.debug src/ppx.ml(299):10323-10397
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(299):10333-10390
                                         (before Ppx.debug.(fun) src/ppx.ml(299):10343-10389
                                           (after Ppx.debug.(fun) src/ppx.ml(299):10343-10389
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(299):10357-10389
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG33:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(300):10401-10403
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(302)<ghost>:10435-10548
                         (before Ppx.transform src/ppx.ml(303):10478-10548
                           (seq
                             (after Ppx.transform src/ppx.ml(303):10478-10524
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(303):10493-10523
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(304):10528-10548
                               (seq
                                 (after Ppx.transform src/ppx.ml(304):10528-10543
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(305):10547-10548
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(307):10562-10621
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))

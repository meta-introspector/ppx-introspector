[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[72,1927+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[72,1927+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+17])
            Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
          expression (src/ppx.ml[70,1899+2]..[72,1927+62])
            Pexp_match
            expression (src/ppx.ml[70,1899+8]..[70,1899+9])
              Pexp_ident "x" (src/ppx.ml[70,1899+8]..[70,1899+9])
            [
              <case>
                pattern (src/ppx.ml[71,1914+4]..[71,1914+9])
                  Ppat_tuple
                  [
                    pattern (src/ppx.ml[71,1914+5]..[71,1914+6])
                      Ppat_var "a" (src/ppx.ml[71,1914+5]..[71,1914+6])
                    pattern (src/ppx.ml[71,1914+7]..[71,1914+8])
                      Ppat_var "b" (src/ppx.ml[71,1914+7]..[71,1914+8])
                  ]
                expression (src/ppx.ml[72,1927+4]..[72,1927+62])
                  Pexp_apply
                  expression (src/ppx.ml[72,1927+5]..[72,1927+18])
                    Pexp_ident "print_endline" (src/ppx.ml[72,1927+5]..[72,1927+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[72,1927+19]..[72,1927+61])
                        Pexp_apply
                        expression (src/ppx.ml[72,1927+20]..[72,1927+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[72,1927+20]..[72,1927+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[72,1927+35]..[72,1927+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[72,1927+36]..[72,1927+55])
                                  Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[72,1927+37]..[72,1927+54]),None)
                                expression (src/ppx.ml[72,1927+58]..[72,1927+59])
                                  Pexp_ident "a" (src/ppx.ml[72,1927+58]..[72,1927+59])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[74,1993+0]..[156,4818+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[74,1993+8]..[74,1993+27])
          Ppat_var "process_record_kind" (src/ppx.ml[74,1993+8]..[74,1993+27])
        expression (src/ppx.ml[74,1993+27]..[88,2477+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[74,1993+27]..[74,1993+30])
            Ppat_var "x" (src/ppx.ml[74,1993+28]..[74,1993+29])
          expression (src/ppx.ml[75,2026+2]..[88,2477+47])
            Pexp_match
            expression (src/ppx.ml[75,2026+8]..[75,2026+9])
              Pexp_ident "x" (src/ppx.ml[75,2026+8]..[75,2026+9])
            [
              <case>
                pattern (src/ppx.ml[76,2041+4]..[82,2222+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[77,2047+5]..[77,2047+13]) ghost
                      pattern (src/ppx.ml[77,2047+5]..[77,2047+13])
                        Ppat_var "pld_name" (src/ppx.ml[77,2047+5]..[77,2047+13])
                    "pld_mutable" (src/ppx.ml[78,2080+5]..[78,2080+16]) ghost
                      pattern (src/ppx.ml[78,2080+5]..[78,2080+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[78,2080+5]..[78,2080+16])
                    "pld_type" (src/ppx.ml[79,2118+5]..[79,2118+13]) ghost
                      pattern (src/ppx.ml[79,2118+5]..[79,2118+13])
                        Ppat_var "pld_type" (src/ppx.ml[79,2118+5]..[79,2118+13])
                    "pld_loc" (src/ppx.ml[80,2150+5]..[80,2150+12]) ghost
                      pattern (src/ppx.ml[80,2150+5]..[80,2150+12])
                        Ppat_var "pld_loc" (src/ppx.ml[80,2150+5]..[80,2150+12])
                    "pld_attributes" (src/ppx.ml[81,2182+5]..[81,2182+19]) ghost
                      pattern (src/ppx.ml[81,2182+5]..[81,2182+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[81,2182+5]..[81,2182+19])
                  ]
                expression (src/ppx.ml[83,2230+4]..[88,2477+47])
                  Pexp_apply
                  expression (src/ppx.ml[83,2230+5]..[83,2230+18])
                    Pexp_ident "print_endline" (src/ppx.ml[83,2230+5]..[83,2230+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[83,2230+19]..[88,2477+46])
                        Pexp_apply
                        expression (src/ppx.ml[83,2230+20]..[83,2230+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[83,2230+20]..[83,2230+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[83,2230+35]..[88,2477+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[83,2230+36]..[83,2230+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[83,2230+37]..[83,2230+56]),None)
                                expression (src/ppx.ml[84,2291+36]..[84,2291+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[84,2291+36]..[84,2291+44])
                                expression (src/ppx.ml[85,2337+36]..[85,2337+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[85,2337+37]..[85,2337+44]),None)
                                expression (src/ppx.ml[86,2384+36]..[86,2384+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[86,2384+36]..[86,2384+47])
                                expression (src/ppx.ml[87,2433+36]..[87,2433+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[87,2433+37]..[87,2433+41]),None)
                                expression (src/ppx.ml[88,2477+36]..[88,2477+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[88,2477+36]..[88,2477+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[90,2529+0]..[90,2529+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[90,2529+0]..[90,2529+22])
        expression (src/ppx.ml[90,2529+23]..[130,4136+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[90,2529+23]..[90,2529+24])
            Ppat_var "x" (src/ppx.ml[90,2529+23]..[90,2529+24])
          expression (src/ppx.ml[91,2556+2]..[130,4136+65])
            Pexp_match
            expression (src/ppx.ml[91,2556+8]..[91,2556+9])
              Pexp_ident "x" (src/ppx.ml[91,2556+8]..[91,2556+9])
            [
              <case>
                pattern (src/ppx.ml[92,2571+4]..[92,2571+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[92,2571+4]..[92,2571+15])
                  Some
                    []
                    pattern (src/ppx.ml[92,2571+16]..[92,2571+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[92,2571+17]..[92,2571+18])
                          Ppat_var "a" (src/ppx.ml[92,2571+17]..[92,2571+18])
                        pattern (src/ppx.ml[92,2571+19]..[92,2571+20])
                          Ppat_var "b" (src/ppx.ml[92,2571+19]..[92,2571+20])
                      ]
                expression (src/ppx.ml[94,2642+4]..[97,2696+79])
                  Pexp_sequence
                  expression (src/ppx.ml[94,2642+4]..[94,2642+18])
                    Pexp_apply
                    expression (src/ppx.ml[94,2642+5]..[94,2642+15])
                      Pexp_ident "process_id" (src/ppx.ml[94,2642+5]..[94,2642+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[94,2642+16]..[94,2642+17])
                          Pexp_ident "a" (src/ppx.ml[94,2642+16]..[94,2642+17])
                    ]
                  expression (src/ppx.ml[95,2662+4]..[97,2696+79])
                    Pexp_sequence
                    expression (src/ppx.ml[95,2662+4]..[95,2662+30])
                      Pexp_apply
                      expression (src/ppx.ml[95,2662+5]..[95,2662+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[95,2662+5]..[95,2662+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[95,2662+28]..[95,2662+29])
                            Pexp_ident "b" (src/ppx.ml[95,2662+28]..[95,2662+29])
                      ]
                    expression (src/ppx.ml[97,2696+4]..[97,2696+79])
                      Pexp_apply
                      expression (src/ppx.ml[97,2696+5]..[97,2696+18])
                        Pexp_ident "print_endline" (src/ppx.ml[97,2696+5]..[97,2696+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[97,2696+19]..[97,2696+78])
                            Pexp_apply
                            expression (src/ppx.ml[97,2696+20]..[97,2696+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[97,2696+20]..[97,2696+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[97,2696+35]..[97,2696+77])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[97,2696+36]..[97,2696+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2696+37]..[97,2696+55]),None)
                                    expression (src/ppx.ml[97,2696+58]..[97,2696+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[97,2696+59]..[97,2696+61]),None)
                                    expression (src/ppx.ml[97,2696+63]..[97,2696+64])
                                      Pexp_ident "a" (src/ppx.ml[97,2696+63]..[97,2696+64])
                                    expression (src/ppx.ml[97,2696+66]..[97,2696+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[97,2696+67]..[97,2696+72]),None)
                                    expression (src/ppx.ml[97,2696+74]..[97,2696+75])
                                      Pexp_ident "b" (src/ppx.ml[97,2696+74]..[97,2696+75])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[99,2777+4]..[99,2777+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[99,2777+4]..[99,2777+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2777+15]..[99,2777+16])
                      Ppat_var "a" (src/ppx.ml[99,2777+15]..[99,2777+16])
                expression (src/ppx.ml[101,2825+4]..[101,2825+59])
                  Pexp_apply
                  expression (src/ppx.ml[101,2825+5]..[101,2825+18])
                    Pexp_ident "print_endline" (src/ppx.ml[101,2825+5]..[101,2825+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[101,2825+19]..[101,2825+58])
                        Pexp_apply
                        expression (src/ppx.ml[101,2825+20]..[101,2825+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[101,2825+20]..[101,2825+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2825+35]..[101,2825+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2825+37]..[101,2825+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,2904+4]..[104,2904+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[104,2904+4]..[104,2904+12])
                  None
                expression (src/ppx.ml[104,2904+17]..[104,2904+69])
                  Pexp_apply
                  expression (src/ppx.ml[104,2904+18]..[104,2904+31])
                    Pexp_ident "print_endline" (src/ppx.ml[104,2904+18]..[104,2904+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,2904+32]..[104,2904+68])
                        Pexp_apply
                        expression (src/ppx.ml[104,2904+33]..[104,2904+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,2904+33]..[104,2904+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2904+48]..[104,2904+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2904+50]..[104,2904+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,2974+4]..[105,2974+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[105,2974+4]..[105,2974+12])
                  Some
                    []
                    pattern (src/ppx.ml[105,2974+13]..[105,2974+17])
                      Ppat_var "name" (src/ppx.ml[105,2974+13]..[105,2974+17])
                expression (src/ppx.ml[105,2974+20]..[105,2974+80])
                  Pexp_apply
                  expression (src/ppx.ml[105,2974+21]..[105,2974+34])
                    Pexp_ident "print_endline" (src/ppx.ml[105,2974+21]..[105,2974+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,2974+35]..[105,2974+79])
                        Pexp_apply
                        expression (src/ppx.ml[105,2974+36]..[105,2974+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,2974+36]..[105,2974+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2974+51]..[105,2974+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[105,2974+52]..[105,2974+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,2974+53]..[105,2974+68]),None)
                                expression (src/ppx.ml[105,2974+73]..[105,2974+77])
                                  Pexp_ident "name" (src/ppx.ml[105,2974+73]..[105,2974+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,3055+4]..[106,3055+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[106,3055+4]..[106,3055+14])
                  Some
                    []
                    pattern (src/ppx.ml[106,3055+15]..[106,3055+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[106,3055+16]..[106,3055+25])
                          Ppat_var "arg_label" (src/ppx.ml[106,3055+16]..[106,3055+25])
                        pattern (src/ppx.ml[106,3055+28]..[106,3055+37])
                          Ppat_var "core_type" (src/ppx.ml[106,3055+28]..[106,3055+37])
                        pattern (src/ppx.ml[106,3055+40]..[106,3055+50])
                          Ppat_var "core_type2" (src/ppx.ml[106,3055+40]..[106,3055+50])
                      ]
                expression (src/ppx.ml[107,3110+4]..[107,3110+61])
                  Pexp_apply
                  expression (src/ppx.ml[107,3110+5]..[107,3110+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3110+5]..[107,3110+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3110+19]..[107,3110+60])
                        Pexp_apply
                        expression (src/ppx.ml[107,3110+20]..[107,3110+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3110+20]..[107,3110+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3110+35]..[107,3110+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3110+37]..[107,3110+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[109,3173+4]..[109,3173+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[109,3173+4]..[109,3173+15])
                  Some
                    []
                    pattern (src/ppx.ml[109,3173+16]..[109,3173+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[109,3173+17]..[109,3173+18])
                          Ppat_var "a" (src/ppx.ml[109,3173+17]..[109,3173+18])
                        pattern (src/ppx.ml[109,3173+19]..[109,3173+20])
                          Ppat_var "b" (src/ppx.ml[109,3173+19]..[109,3173+20])
                      ]
                expression (src/ppx.ml[111,3242+4]..[111,3242+60])
                  Pexp_apply
                  expression (src/ppx.ml[111,3242+5]..[111,3242+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3242+5]..[111,3242+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3242+19]..[111,3242+59])
                        Pexp_apply
                        expression (src/ppx.ml[111,3242+20]..[111,3242+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3242+20]..[111,3242+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3242+35]..[111,3242+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3242+37]..[111,3242+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[112,3303+4]..[112,3303+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[112,3303+4]..[112,3303+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3303+15]..[112,3303+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[112,3303+16]..[112,3303+17])
                          Ppat_var "a" (src/ppx.ml[112,3303+16]..[112,3303+17])
                        pattern (src/ppx.ml[112,3303+18]..[112,3303+19])
                          Ppat_var "b" (src/ppx.ml[112,3303+18]..[112,3303+19])
                      ]
                expression (src/ppx.ml[114,3373+4]..[114,3373+60])
                  Pexp_apply
                  expression (src/ppx.ml[114,3373+5]..[114,3373+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3373+5]..[114,3373+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3373+19]..[114,3373+59])
                        Pexp_apply
                        expression (src/ppx.ml[114,3373+20]..[114,3373+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3373+20]..[114,3373+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3373+35]..[114,3373+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3373+37]..[114,3373+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3434+4]..[115,3434+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[115,3434+4]..[115,3434+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3434+15]..[115,3434+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3434+16]..[115,3434+17])
                          Ppat_var "a" (src/ppx.ml[115,3434+16]..[115,3434+17])
                        pattern (src/ppx.ml[115,3434+18]..[115,3434+19])
                          Ppat_var "b" (src/ppx.ml[115,3434+18]..[115,3434+19])
                      ]
                expression (src/ppx.ml[117,3495+4]..[117,3495+60])
                  Pexp_apply
                  expression (src/ppx.ml[117,3495+5]..[117,3495+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3495+5]..[117,3495+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3495+19]..[117,3495+59])
                        Pexp_apply
                        expression (src/ppx.ml[117,3495+20]..[117,3495+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3495+20]..[117,3495+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3495+35]..[117,3495+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3495+37]..[117,3495+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3556+4]..[118,3556+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[118,3556+4]..[118,3556+16])
                  Some
                    []
                    pattern (src/ppx.ml[118,3556+17]..[118,3556+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3556+18]..[118,3556+19])
                          Ppat_var "a" (src/ppx.ml[118,3556+18]..[118,3556+19])
                        pattern (src/ppx.ml[118,3556+20]..[118,3556+21])
                          Ppat_var "b" (src/ppx.ml[118,3556+20]..[118,3556+21])
                        pattern (src/ppx.ml[118,3556+22]..[118,3556+23])
                          Ppat_var "c" (src/ppx.ml[118,3556+22]..[118,3556+23])
                      ]
                expression (src/ppx.ml[120,3646+4]..[120,3646+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3646+5]..[120,3646+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3646+5]..[120,3646+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3646+19]..[120,3646+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3646+20]..[120,3646+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3646+20]..[120,3646+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3646+35]..[120,3646+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3646+37]..[120,3646+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3707+4]..[121,3707+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[121,3707+4]..[121,3707+13])
                  Some
                    []
                    pattern (src/ppx.ml[121,3707+14]..[121,3707+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3707+15]..[121,3707+16])
                          Ppat_var "a" (src/ppx.ml[121,3707+15]..[121,3707+16])
                        pattern (src/ppx.ml[121,3707+17]..[121,3707+18])
                          Ppat_var "b" (src/ppx.ml[121,3707+17]..[121,3707+18])
                      ]
                expression (src/ppx.ml[123,3771+4]..[123,3771+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3771+5]..[123,3771+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3771+5]..[123,3771+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3771+19]..[123,3771+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3771+20]..[123,3771+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3771+20]..[123,3771+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3771+35]..[123,3771+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3771+37]..[123,3771+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3832+4]..[124,3832+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[124,3832+4]..[124,3832+16])
                  Some
                    []
                    pattern (src/ppx.ml[124,3832+17]..[124,3832+18])
                      Ppat_var "a" (src/ppx.ml[124,3832+17]..[124,3832+18])
                expression (src/ppx.ml[126,3880+4]..[126,3880+62])
                  Pexp_apply
                  expression (src/ppx.ml[126,3880+5]..[126,3880+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3880+5]..[126,3880+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3880+19]..[126,3880+61])
                        Pexp_apply
                        expression (src/ppx.ml[126,3880+20]..[126,3880+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3880+20]..[126,3880+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3880+35]..[126,3880+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[126,3880+36]..[126,3880+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3880+37]..[126,3880+55]),None)
                                expression (src/ppx.ml[126,3880+57]..[126,3880+58])
                                  Pexp_ident "a" (src/ppx.ml[126,3880+57]..[126,3880+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,4088+4]..[129,4088+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[129,4088+4]..[129,4088+18])
                  Some
                    []
                    pattern (src/ppx.ml[129,4088+19]..[129,4088+20])
                      Ppat_var "a" (src/ppx.ml[129,4088+19]..[129,4088+20])
                expression (src/ppx.ml[130,4136+4]..[130,4136+65])
                  Pexp_apply
                  expression (src/ppx.ml[130,4136+5]..[130,4136+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,4136+5]..[130,4136+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,4136+19]..[130,4136+64])
                        Pexp_apply
                        expression (src/ppx.ml[130,4136+20]..[130,4136+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,4136+20]..[130,4136+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,4136+35]..[130,4136+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[130,4136+36]..[130,4136+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4136+37]..[130,4136+58]),None)
                                expression (src/ppx.ml[130,4136+60]..[130,4136+61])
                                  Pexp_ident "a" (src/ppx.ml[130,4136+60]..[130,4136+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[132,4206+2]..[132,4206+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[132,4206+2]..[132,4206+26])
        expression (src/ppx.ml[132,4206+26]..[138,4343+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[132,4206+26]..[132,4206+29])
            Ppat_var "x" (src/ppx.ml[132,4206+27]..[132,4206+28])
          expression (src/ppx.ml[133,4238+2]..[138,4343+6])
            Pexp_match
            expression (src/ppx.ml[133,4238+8]..[133,4238+9])
              Pexp_ident "x" (src/ppx.ml[133,4238+8]..[133,4238+9])
            [
              <case>
                pattern (src/ppx.ml[134,4253+4]..[134,4253+6])
                  Ppat_construct "[]" (src/ppx.ml[134,4253+4]..[134,4253+6])
                  None
                expression (src/ppx.ml[134,4253+10]..[134,4253+12])
                  Pexp_construct "()" (src/ppx.ml[134,4253+10]..[134,4253+12])
                  None
              <case>
                pattern (src/ppx.ml[135,4266+4]..[135,4266+10])
                  Ppat_construct "::" (src/ppx.ml[135,4266+6]..[135,4266+8])
                  Some
                    []
                    pattern (src/ppx.ml[135,4266+4]..[135,4266+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4266+4]..[135,4266+5])
                          Ppat_var "h" (src/ppx.ml[135,4266+4]..[135,4266+5])
                        pattern (src/ppx.ml[135,4266+9]..[135,4266+10])
                          Ppat_var "t" (src/ppx.ml[135,4266+9]..[135,4266+10])
                      ]
                expression (src/ppx.ml[136,4280+4]..[138,4343+6])
                  Pexp_sequence
                  expression (src/ppx.ml[136,4280+4]..[136,4280+27])
                    Pexp_apply
                    expression (src/ppx.ml[136,4280+5]..[136,4280+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[136,4280+5]..[136,4280+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[136,4280+25]..[136,4280+26])
                          Pexp_ident "h" (src/ppx.ml[136,4280+25]..[136,4280+26])
                    ]
                  expression (src/ppx.ml[137,4309+4]..[138,4343+6])
                    Pexp_sequence
                    expression (src/ppx.ml[137,4309+4]..[137,4309+32])
                      Pexp_apply
                      expression (src/ppx.ml[137,4309+5]..[137,4309+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[137,4309+5]..[137,4309+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[137,4309+30]..[137,4309+31])
                            Pexp_ident "t" (src/ppx.ml[137,4309+30]..[137,4309+31])
                      ]
                    expression (src/ppx.ml[138,4343+4]..[138,4343+6])
                      Pexp_construct "()" (src/ppx.ml[138,4343+4]..[138,4343+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[140,4354+0]..[140,4354+17])
          Ppat_var "process_core_type" (src/ppx.ml[140,4354+0]..[140,4354+17])
        expression (src/ppx.ml[140,4354+17]..[150,4621+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4354+17]..[140,4354+20])
            Ppat_var "x" (src/ppx.ml[140,4354+18]..[140,4354+19])
          expression (src/ppx.ml[141,4377+2]..[150,4621+80])
            Pexp_match
            expression (src/ppx.ml[141,4377+8]..[141,4377+9])
              Pexp_ident "x" (src/ppx.ml[141,4377+8]..[141,4377+9])
            [
              <case>
                pattern (src/ppx.ml[142,4393+4]..[147,4554+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[143,4399+6]..[143,4399+15]) ghost
                      pattern (src/ppx.ml[143,4399+6]..[143,4399+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[143,4399+6]..[143,4399+15])
                    "ptyp_loc" (src/ppx.ml[144,4438+5]..[144,4438+13]) ghost
                      pattern (src/ppx.ml[144,4438+5]..[144,4438+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[144,4438+5]..[144,4438+13])
                    "ptyp_loc_stack" (src/ppx.ml[145,4471+5]..[145,4471+19]) ghost
                      pattern (src/ppx.ml[145,4471+5]..[145,4471+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[145,4471+5]..[145,4471+19])
                    "ptyp_attributes" (src/ppx.ml[146,4514+5]..[146,4514+20]) ghost
                      pattern (src/ppx.ml[146,4514+5]..[146,4514+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[146,4514+5]..[146,4514+20])
                  ]
                expression (src/ppx.ml[148,4562+4]..[150,4621+80])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4562+4]..[148,4562+38])
                    Pexp_apply
                    expression (src/ppx.ml[148,4562+5]..[148,4562+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[148,4562+5]..[148,4562+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4562+28]..[148,4562+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[148,4562+28]..[148,4562+37])
                    ]
                  expression (src/ppx.ml[150,4621+4]..[150,4621+80])
                    Pexp_apply
                    expression (src/ppx.ml[150,4621+5]..[150,4621+18])
                      Pexp_ident "print_endline" (src/ppx.ml[150,4621+5]..[150,4621+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4621+19]..[150,4621+79])
                          Pexp_apply
                          expression (src/ppx.ml[150,4621+20]..[150,4621+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[150,4621+20]..[150,4621+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[150,4621+35]..[150,4621+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[150,4621+36]..[150,4621+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4621+37]..[150,4621+63]),None)
                                  expression (src/ppx.ml[150,4621+68]..[150,4621+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[150,4621+68]..[150,4621+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[151,4702+4]..[151,4702+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[151,4702+4]..[151,4702+26])
        expression (src/ppx.ml[151,4702+26]..[156,4818+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4702+26]..[151,4702+44])
            Ppat_constraint
            pattern (src/ppx.ml[151,4702+27]..[151,4702+28])
              Ppat_var "x" (src/ppx.ml[151,4702+27]..[151,4702+28])
            core_type (src/ppx.ml[151,4702+29]..[151,4702+43])
              Ptyp_constr "list" (src/ppx.ml[151,4702+39]..[151,4702+43])
              [
                core_type (src/ppx.ml[151,4702+29]..[151,4702+38])
                  Ptyp_constr "core_type" (src/ppx.ml[151,4702+29]..[151,4702+38])
                  []
              ]
          expression (src/ppx.ml[152,4749+2]..[156,4818+29])
            Pexp_match
            expression (src/ppx.ml[152,4749+8]..[152,4749+9])
              Pexp_ident "x" (src/ppx.ml[152,4749+8]..[152,4749+9])
            [
              <case>
                pattern (src/ppx.ml[153,4764+4]..[153,4764+6])
                  Ppat_construct "[]" (src/ppx.ml[153,4764+4]..[153,4764+6])
                  None
                expression (src/ppx.ml[153,4764+10]..[153,4764+12])
                  Pexp_construct "()" (src/ppx.ml[153,4764+10]..[153,4764+12])
                  None
              <case>
                pattern (src/ppx.ml[154,4777+4]..[154,4777+10])
                  Ppat_construct "::" (src/ppx.ml[154,4777+6]..[154,4777+8])
                  Some
                    []
                    pattern (src/ppx.ml[154,4777+4]..[154,4777+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[154,4777+4]..[154,4777+5])
                          Ppat_var "h" (src/ppx.ml[154,4777+4]..[154,4777+5])
                        pattern (src/ppx.ml[154,4777+9]..[154,4777+10])
                          Ppat_var "t" (src/ppx.ml[154,4777+9]..[154,4777+10])
                      ]
                expression (src/ppx.ml[155,4791+4]..[156,4818+29])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4791+4]..[155,4791+25])
                    Pexp_apply
                    expression (src/ppx.ml[155,4791+4]..[155,4791+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[155,4791+4]..[155,4791+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4791+22]..[155,4791+25])
                          Pexp_ident "h" (src/ppx.ml[155,4791+23]..[155,4791+24])
                    ]
                  expression (src/ppx.ml[156,4818+4]..[156,4818+29])
                    Pexp_apply
                    expression (src/ppx.ml[156,4818+4]..[156,4818+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[156,4818+4]..[156,4818+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4818+26]..[156,4818+29])
                          Pexp_ident "t" (src/ppx.ml[156,4818+27]..[156,4818+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[163,4862+0]..[170,5061+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4862+4]..[163,4862+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[163,4862+4]..[163,4862+31])
        expression (src/ppx.ml[163,4862+31]..[170,5061+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[163,4862+31]..[163,4862+34])
            Ppat_var "x" (src/ppx.ml[163,4862+32]..[163,4862+33])
          expression (src/ppx.ml[164,4899+2]..[170,5061+65])
            Pexp_match
            expression (src/ppx.ml[164,4899+8]..[164,4899+9])
              Pexp_ident "x" (src/ppx.ml[164,4899+8]..[164,4899+9])
            [
              <case>
                pattern (src/ppx.ml[165,4914+4]..[165,4914+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[165,4914+4]..[165,4914+15])
                  Some
                    []
                    pattern (src/ppx.ml[165,4914+16]..[165,4914+17])
                      Ppat_var "a" (src/ppx.ml[165,4914+16]..[165,4914+17])
                expression (src/ppx.ml[166,4935+4]..[167,4967+64])
                  Pexp_sequence
                  expression (src/ppx.ml[166,4935+4]..[166,4935+30])
                    Pexp_apply
                    expression (src/ppx.ml[166,4935+5]..[166,4935+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,4935+5]..[166,4935+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,4935+28]..[166,4935+29])
                          Pexp_ident "a" (src/ppx.ml[166,4935+28]..[166,4935+29])
                    ]
                  expression (src/ppx.ml[167,4967+4]..[167,4967+64])
                    Pexp_apply
                    expression (src/ppx.ml[167,4967+5]..[167,4967+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,4967+5]..[167,4967+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,4967+19]..[167,4967+63])
                          Pexp_apply
                          expression (src/ppx.ml[167,4967+20]..[167,4967+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,4967+20]..[167,4967+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,4967+35]..[167,4967+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,4967+36]..[167,4967+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,4967+37]..[167,4967+55]),None)
                                  expression (src/ppx.ml[167,4967+60]..[167,4967+61])
                                    Pexp_ident "a" (src/ppx.ml[167,4967+60]..[167,4967+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[169,5039+4]..[169,5039+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[169,5039+4]..[169,5039+16])
                  Some
                    []
                    pattern (src/ppx.ml[169,5039+17]..[169,5039+18])
                      Ppat_var "a" (src/ppx.ml[169,5039+17]..[169,5039+18])
                expression (src/ppx.ml[170,5061+4]..[170,5061+65])
                  Pexp_apply
                  expression (src/ppx.ml[170,5061+5]..[170,5061+18])
                    Pexp_ident "print_endline" (src/ppx.ml[170,5061+5]..[170,5061+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[170,5061+19]..[170,5061+64])
                        Pexp_apply
                        expression (src/ppx.ml[170,5061+20]..[170,5061+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[170,5061+20]..[170,5061+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[170,5061+35]..[170,5061+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[170,5061+36]..[170,5061+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5061+37]..[170,5061+56]),None)
                                expression (src/ppx.ml[170,5061+61]..[170,5061+62])
                                  Pexp_ident "a" (src/ppx.ml[170,5061+61]..[170,5061+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[172,5128+0]..[204,6104+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5128+8]..[172,5128+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[172,5128+8]..[172,5128+57])
        expression (src/ppx.ml[172,5128+57]..[204,6104+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5128+57]..[172,5128+60])
            Ppat_var "x" (src/ppx.ml[172,5128+58]..[172,5128+59])
          expression (src/ppx.ml[173,5191+2]..[204,6104+8])
            Pexp_match
            expression (src/ppx.ml[173,5191+8]..[173,5191+9])
              Pexp_ident "x" (src/ppx.ml[173,5191+8]..[173,5191+9])
            [
              <case>
                pattern (src/ppx.ml[174,5206+4]..[174,5206+6])
                  Ppat_construct "[]" (src/ppx.ml[174,5206+4]..[174,5206+6])
                  None
                expression (src/ppx.ml[174,5206+10]..[174,5206+12])
                  Pexp_construct "()" (src/ppx.ml[174,5206+10]..[174,5206+12])
                  None
              <case>
                pattern (src/ppx.ml[175,5219+4]..[175,5219+10])
                  Ppat_construct "::" (src/ppx.ml[175,5219+6]..[175,5219+8])
                  Some
                    []
                    pattern (src/ppx.ml[175,5219+4]..[175,5219+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[175,5219+4]..[175,5219+5])
                          Ppat_var "h" (src/ppx.ml[175,5219+4]..[175,5219+5])
                        pattern (src/ppx.ml[175,5219+9]..[175,5219+10])
                          Ppat_var "t" (src/ppx.ml[175,5219+9]..[175,5219+10])
                      ]
                expression (src/ppx.ml[177,5298+4]..[204,6104+8])
                  Pexp_match
                  expression (src/ppx.ml[177,5298+10]..[177,5298+11])
                    Pexp_ident "h" (src/ppx.ml[177,5298+10]..[177,5298+11])
                  [
                    <case>
                      pattern (src/ppx.ml[178,5315+5]..[185,5553+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[179,5322+6]..[179,5322+14]) ghost
                            pattern (src/ppx.ml[179,5322+6]..[179,5322+14])
                              Ppat_var "pcd_name" (src/ppx.ml[179,5322+6]..[179,5322+14])
                          "pcd_vars" (src/ppx.ml[180,5356+6]..[180,5356+14]) ghost
                            pattern (src/ppx.ml[180,5356+6]..[180,5356+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[180,5356+6]..[180,5356+14])
                          "pcd_args" (src/ppx.ml[181,5395+6]..[181,5395+14]) ghost
                            pattern (src/ppx.ml[181,5395+6]..[181,5395+14])
                              Ppat_var "pcd_args" (src/ppx.ml[181,5395+6]..[181,5395+14])
                          "pcd_res" (src/ppx.ml[182,5440+6]..[182,5440+13]) ghost
                            pattern (src/ppx.ml[182,5440+6]..[182,5440+13])
                              Ppat_var "pcd_res" (src/ppx.ml[182,5440+6]..[182,5440+13])
                          "pcd_loc" (src/ppx.ml[183,5479+6]..[183,5479+13]) ghost
                            pattern (src/ppx.ml[183,5479+6]..[183,5479+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[183,5479+6]..[183,5479+13])
                          "pcd_attributes" (src/ppx.ml[184,5512+6]..[184,5512+20]) ghost
                            pattern (src/ppx.ml[184,5512+6]..[184,5512+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[184,5512+6]..[184,5512+20])
                        ]
                      expression (src/ppx.ml[188,5635+6]..[204,6104+8])
                        Pexp_sequence
                        expression (src/ppx.ml[188,5635+6]..[188,5635+43])
                          Pexp_apply
                          expression (src/ppx.ml[188,5635+6]..[188,5635+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[188,5635+6]..[188,5635+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[188,5635+33]..[188,5635+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[188,5635+34]..[188,5635+42])
                          ]
                        expression (src/ppx.ml[189,5680+6]..[204,6104+8])
                          Pexp_sequence
                          expression (src/ppx.ml[189,5680+6]..[202,6025+16])
                            Pexp_apply
                            expression (src/ppx.ml[189,5680+7]..[189,5680+20])
                              Pexp_ident "print_endline" (src/ppx.ml[189,5680+7]..[189,5680+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[189,5680+21]..[202,6025+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[189,5680+22]..[189,5680+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[189,5680+22]..[189,5680+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[189,5680+37]..[202,6025+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[190,5719+11]..[190,5719+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[190,5719+12]..[190,5719+36]),None)
                                          expression (src/ppx.ml[191,5758+15]..[191,5758+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[191,5758+15]..[191,5758+23])
                                          expression (src/ppx.ml[192,5783+15]..[192,5783+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[192,5783+16]..[192,5783+20]),None)
                                          expression (src/ppx.ml[193,5806+15]..[193,5806+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[193,5806+15]..[193,5806+23])
                                          expression (src/ppx.ml[194,5831+15]..[194,5831+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[194,5831+16]..[194,5831+20]),None)
                                          expression (src/ppx.ml[195,5854+15]..[195,5854+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[195,5854+15]..[195,5854+23])
                                          expression (src/ppx.ml[196,5879+15]..[196,5879+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[196,5879+16]..[196,5879+19]),None)
                                          expression (src/ppx.ml[197,5901+15]..[197,5901+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[197,5901+15]..[197,5901+22])
                                          expression (src/ppx.ml[198,5925+15]..[198,5925+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[198,5925+16]..[198,5925+19]),None)
                                          expression (src/ppx.ml[199,5947+15]..[199,5947+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[199,5947+15]..[199,5947+22])
                                          expression (src/ppx.ml[200,5971+15]..[200,5971+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[200,5971+16]..[200,5971+21]),None)
                                          expression (src/ppx.ml[201,5995+15]..[201,5995+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[201,5995+15]..[201,5995+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[203,6043+6]..[204,6104+8])
                            Pexp_sequence
                            expression (src/ppx.ml[203,6043+6]..[203,6043+59])
                              Pexp_apply
                              expression (src/ppx.ml[203,6043+7]..[203,6043+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[203,6043+7]..[203,6043+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[203,6043+57]..[203,6043+58])
                                    Pexp_ident "t" (src/ppx.ml[203,6043+57]..[203,6043+58])
                              ]
                            expression (src/ppx.ml[204,6104+6]..[204,6104+8])
                              Pexp_construct "()" (src/ppx.ml[204,6104+6]..[204,6104+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[206,6116+0]..[217,6513+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6116+4]..[206,6116+16])
          Ppat_var "process_kind" (src/ppx.ml[206,6116+4]..[206,6116+16])
        expression (src/ppx.ml[206,6116+16]..[217,6513+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[206,6116+16]..[206,6116+19])
            Ppat_var "x" (src/ppx.ml[206,6116+17]..[206,6116+18])
          expression (src/ppx.ml[207,6138+2]..[217,6513+77])
            Pexp_match
            expression (src/ppx.ml[207,6138+8]..[207,6138+9])
              Pexp_ident "x" (src/ppx.ml[207,6138+8]..[207,6138+9])
            [
              <case>
                pattern (src/ppx.ml[209,6175+4]..[209,6175+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[209,6175+4]..[209,6175+18])
                  None
                expression (src/ppx.ml[209,6175+23]..[209,6175+81])
                  Pexp_apply
                  expression (src/ppx.ml[209,6175+24]..[209,6175+37])
                    Pexp_ident "print_endline" (src/ppx.ml[209,6175+24]..[209,6175+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6175+38]..[209,6175+80])
                        Pexp_apply
                        expression (src/ppx.ml[209,6175+39]..[209,6175+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[209,6175+39]..[209,6175+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[209,6175+54]..[209,6175+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6175+56]..[209,6175+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[210,6257+4]..[210,6257+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[210,6257+4]..[210,6257+17])
                  Some
                    []
                    pattern (src/ppx.ml[210,6257+18]..[210,6257+19])
                      Ppat_var "a" (src/ppx.ml[210,6257+18]..[210,6257+19])
                expression (src/ppx.ml[211,6280+4]..[212,6339+65])
                  Pexp_sequence
                  expression (src/ppx.ml[211,6280+4]..[211,6280+57])
                    Pexp_apply
                    expression (src/ppx.ml[211,6280+5]..[211,6280+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[211,6280+5]..[211,6280+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[211,6280+55]..[211,6280+56])
                          Pexp_ident "a" (src/ppx.ml[211,6280+55]..[211,6280+56])
                    ]
                  expression (src/ppx.ml[212,6339+4]..[212,6339+65])
                    Pexp_apply
                    expression (src/ppx.ml[212,6339+5]..[212,6339+18])
                      Pexp_ident "print_endline" (src/ppx.ml[212,6339+5]..[212,6339+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[212,6339+19]..[212,6339+64])
                          Pexp_apply
                          expression (src/ppx.ml[212,6339+20]..[212,6339+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[212,6339+20]..[212,6339+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[212,6339+35]..[212,6339+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[212,6339+36]..[212,6339+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6339+37]..[212,6339+57]),None)
                                  expression (src/ppx.ml[212,6339+61]..[212,6339+62])
                                    Pexp_ident "a" (src/ppx.ml[212,6339+61]..[212,6339+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[215,6452+5]..[215,6452+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[215,6452+5]..[215,6452+17])
                  Some
                    []
                    pattern (src/ppx.ml[215,6452+18]..[215,6452+19])
                      Ppat_var "a" (src/ppx.ml[215,6452+18]..[215,6452+19])
                expression (src/ppx.ml[216,6480+5]..[216,6480+32])
                  Pexp_apply
                  expression (src/ppx.ml[216,6480+5]..[216,6480+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[216,6480+5]..[216,6480+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[216,6480+29]..[216,6480+32])
                        Pexp_ident "a" (src/ppx.ml[216,6480+30]..[216,6480+31])
                  ]
              <case>
                pattern (src/ppx.ml[217,6513+5]..[217,6513+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[217,6513+5]..[217,6513+15])
                  None
                expression (src/ppx.ml[217,6513+19]..[217,6513+77])
                  Pexp_apply
                  expression (src/ppx.ml[217,6513+20]..[217,6513+33])
                    Pexp_ident "print_endline" (src/ppx.ml[217,6513+20]..[217,6513+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[217,6513+34]..[217,6513+76])
                        Pexp_apply
                        expression (src/ppx.ml[217,6513+35]..[217,6513+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[217,6513+35]..[217,6513+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[217,6513+50]..[217,6513+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6513+52]..[217,6513+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6592+0]..[240,7598+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6592+4]..[219,6592+19])
          Ppat_var "print_type_decl" (src/ppx.ml[219,6592+4]..[219,6592+19])
        expression (src/ppx.ml[219,6592+19]..[240,7598+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6592+19]..[219,6592+22])
            Ppat_var "x" (src/ppx.ml[219,6592+20]..[219,6592+21])
          expression (src/ppx.ml[220,6617+2]..[240,7598+38])
            Pexp_match
            expression (src/ppx.ml[220,6617+8]..[220,6617+9])
              Pexp_ident "x" (src/ppx.ml[220,6617+8]..[220,6617+9])
            [
              <case>
                pattern (src/ppx.ml[221,6632+4]..[230,7013+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[222,6638+6]..[222,6638+16]) ghost
                      pattern (src/ppx.ml[222,6638+6]..[222,6638+16])
                        Ppat_var "ptype_name" (src/ppx.ml[222,6638+6]..[222,6638+16])
                    "ptype_params" (src/ppx.ml[223,6675+6]..[223,6675+18]) ghost
                      pattern (src/ppx.ml[223,6675+6]..[223,6675+18])
                        Ppat_var "ptype_params" (src/ppx.ml[223,6675+6]..[223,6675+18])
                    "ptype_cstrs" (src/ppx.ml[224,6747+6]..[224,6747+17]) ghost
                      pattern (src/ppx.ml[224,6747+6]..[224,6747+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[224,6747+6]..[224,6747+17])
                    "ptype_kind" (src/ppx.ml[225,6816+6]..[225,6816+16]) ghost
                      pattern (src/ppx.ml[225,6816+6]..[225,6816+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[225,6816+6]..[225,6816+16])
                    "ptype_private" (src/ppx.ml[226,6853+6]..[226,6853+19]) ghost
                      pattern (src/ppx.ml[226,6853+6]..[226,6853+19])
                        Ppat_var "ptype_private" (src/ppx.ml[226,6853+6]..[226,6853+19])
                    "ptype_manifest" (src/ppx.ml[227,6894+6]..[227,6894+20]) ghost
                      pattern (src/ppx.ml[227,6894+6]..[227,6894+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[227,6894+6]..[227,6894+20])
                    "ptype_attributes" (src/ppx.ml[228,6941+6]..[228,6941+22]) ghost
                      pattern (src/ppx.ml[228,6941+6]..[228,6941+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[228,6941+6]..[228,6941+22])
                    "ptype_loc" (src/ppx.ml[229,6982+6]..[229,6982+15]) ghost
                      pattern (src/ppx.ml[229,6982+6]..[229,6982+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[229,6982+6]..[229,6982+15])
                  ]
                expression (src/ppx.ml[231,7022+4]..[240,7598+38])
                  Pexp_sequence
                  expression (src/ppx.ml[231,7022+4]..[231,7022+69])
                    Pexp_apply
                    expression (src/ppx.ml[231,7022+5]..[231,7022+18])
                      Pexp_ident "print_endline" (src/ppx.ml[231,7022+5]..[231,7022+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[231,7022+19]..[231,7022+68])
                          Pexp_apply
                          expression (src/ppx.ml[231,7022+20]..[231,7022+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[231,7022+20]..[231,7022+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[231,7022+35]..[231,7022+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[231,7022+36]..[231,7022+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[231,7022+37]..[231,7022+53]),None)
                                  expression (src/ppx.ml[231,7022+56]..[231,7022+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[231,7022+56]..[231,7022+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[232,7093+4]..[240,7598+38])
                    Pexp_sequence
                    expression (src/ppx.ml[232,7093+4]..[232,7093+72])
                      Pexp_apply
                      expression (src/ppx.ml[232,7093+5]..[232,7093+18])
                        Pexp_ident "print_endline" (src/ppx.ml[232,7093+5]..[232,7093+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[232,7093+19]..[232,7093+71])
                            Pexp_apply
                            expression (src/ppx.ml[232,7093+20]..[232,7093+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[232,7093+20]..[232,7093+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[232,7093+35]..[232,7093+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[232,7093+36]..[232,7093+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[232,7093+37]..[232,7093+54]),None)
                                    expression (src/ppx.ml[232,7093+57]..[232,7093+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[232,7093+57]..[232,7093+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[233,7167+4]..[240,7598+38])
                      Pexp_sequence
                      expression (src/ppx.ml[233,7167+4]..[233,7167+66])
                        Pexp_apply
                        expression (src/ppx.ml[233,7167+5]..[233,7167+18])
                          Pexp_ident "print_endline" (src/ppx.ml[233,7167+5]..[233,7167+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[233,7167+19]..[233,7167+65])
                              Pexp_apply
                              expression (src/ppx.ml[233,7167+20]..[233,7167+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[233,7167+20]..[233,7167+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[233,7167+35]..[233,7167+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[233,7167+36]..[233,7167+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[233,7167+37]..[233,7167+49]),None)
                                      expression (src/ppx.ml[233,7167+52]..[233,7167+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[233,7167+52]..[233,7167+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7235+4]..[240,7598+38])
                        Pexp_sequence
                        expression (src/ppx.ml[234,7235+4]..[234,7235+63])
                          Pexp_apply
                          expression (src/ppx.ml[234,7235+5]..[234,7235+18])
                            Pexp_ident "print_endline" (src/ppx.ml[234,7235+5]..[234,7235+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[234,7235+19]..[234,7235+62])
                                Pexp_apply
                                expression (src/ppx.ml[234,7235+20]..[234,7235+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[234,7235+20]..[234,7235+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[234,7235+35]..[234,7235+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[234,7235+36]..[234,7235+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[234,7235+37]..[234,7235+48]),None)
                                        expression (src/ppx.ml[234,7235+50]..[234,7235+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[234,7235+50]..[234,7235+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7300+4]..[240,7598+38])
                          Pexp_sequence
                          expression (src/ppx.ml[235,7300+4]..[235,7300+29])
                            Pexp_apply
                            expression (src/ppx.ml[235,7300+5]..[235,7300+17])
                              Pexp_ident "process_kind" (src/ppx.ml[235,7300+5]..[235,7300+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[235,7300+18]..[235,7300+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[235,7300+18]..[235,7300+28])
                            ]
                          expression (src/ppx.ml[236,7331+4]..[240,7598+38])
                            Pexp_apply
                            expression (src/ppx.ml[236,7331+5]..[236,7331+18])
                              Pexp_ident "print_endline" (src/ppx.ml[236,7331+5]..[236,7331+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[236,7331+19]..[240,7598+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[236,7331+20]..[236,7331+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[236,7331+20]..[236,7331+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[236,7331+35]..[240,7598+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[236,7331+36]..[236,7331+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[236,7331+37]..[236,7331+51]),None)
                                          expression (src/ppx.ml[236,7331+55]..[236,7331+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[236,7331+55]..[236,7331+68])
                                          expression (src/ppx.ml[237,7401+36]..[237,7401+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[237,7401+37]..[237,7401+51]),None)
                                          expression (src/ppx.ml[237,7401+54]..[237,7401+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[237,7401+54]..[237,7401+68])
                                          expression (src/ppx.ml[238,7471+36]..[238,7471+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[238,7471+37]..[238,7471+47]),None)
                                          expression (src/ppx.ml[238,7471+50]..[238,7471+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[238,7471+50]..[238,7471+66])
                                          expression (src/ppx.ml[239,7539+36]..[239,7539+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[239,7539+37]..[239,7539+46]),None)
                                          expression (src/ppx.ml[239,7539+49]..[239,7539+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[239,7539+49]..[239,7539+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[242,7642+0]..[248,7777+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7642+8]..[242,7642+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[242,7642+8]..[242,7642+30])
        expression (src/ppx.ml[242,7642+30]..[248,7777+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[242,7642+30]..[242,7642+33])
            Ppat_var "x" (src/ppx.ml[242,7642+31]..[242,7642+32])
          expression (src/ppx.ml[243,7678+2]..[248,7777+6])
            Pexp_match
            expression (src/ppx.ml[243,7678+8]..[243,7678+9])
              Pexp_ident "x" (src/ppx.ml[243,7678+8]..[243,7678+9])
            [
              <case>
                pattern (src/ppx.ml[244,7693+4]..[244,7693+6])
                  Ppat_construct "[]" (src/ppx.ml[244,7693+4]..[244,7693+6])
                  None
                expression (src/ppx.ml[244,7693+10]..[244,7693+12])
                  Pexp_construct "()" (src/ppx.ml[244,7693+10]..[244,7693+12])
                  None
              <case>
                pattern (src/ppx.ml[245,7706+4]..[245,7706+10])
                  Ppat_construct "::" (src/ppx.ml[245,7706+6]..[245,7706+8])
                  Some
                    []
                    pattern (src/ppx.ml[245,7706+4]..[245,7706+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[245,7706+4]..[245,7706+5])
                          Ppat_var "h" (src/ppx.ml[245,7706+4]..[245,7706+5])
                        pattern (src/ppx.ml[245,7706+9]..[245,7706+10])
                          Ppat_var "t" (src/ppx.ml[245,7706+9]..[245,7706+10])
                      ]
                expression (src/ppx.ml[246,7720+4]..[248,7777+6])
                  Pexp_sequence
                  expression (src/ppx.ml[246,7720+4]..[246,7720+23])
                    Pexp_apply
                    expression (src/ppx.ml[246,7720+5]..[246,7720+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[246,7720+5]..[246,7720+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[246,7720+21]..[246,7720+22])
                          Pexp_ident "h" (src/ppx.ml[246,7720+21]..[246,7720+22])
                    ]
                  expression (src/ppx.ml[247,7745+4]..[248,7777+6])
                    Pexp_sequence
                    expression (src/ppx.ml[247,7745+4]..[247,7745+30])
                      Pexp_apply
                      expression (src/ppx.ml[247,7745+5]..[247,7745+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[247,7745+5]..[247,7745+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[247,7745+28]..[247,7745+29])
                            Pexp_ident "t" (src/ppx.ml[247,7745+28]..[247,7745+29])
                      ]
                    expression (src/ppx.ml[248,7777+4]..[248,7777+6])
                      Pexp_construct "()" (src/ppx.ml[248,7777+4]..[248,7777+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[250,7789+0]..[276,9753+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7789+4]..[250,7789+13])
          Ppat_var "printdesc" (src/ppx.ml[250,7789+4]..[250,7789+13])
        expression (src/ppx.ml[250,7789+13]..[276,9753+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[250,7789+13]..[250,7789+37])
            Ppat_constraint
            pattern (src/ppx.ml[250,7789+14]..[250,7789+15])
              Ppat_var "x" (src/ppx.ml[250,7789+14]..[250,7789+15])
            core_type (src/ppx.ml[250,7789+17]..[250,7789+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[250,7789+17]..[250,7789+36])
              []
          expression (src/ppx.ml[250,7789+38]..[276,9753+128])
            Pexp_constraint
            expression (src/ppx.ml[251,7835+2]..[276,9753+128])
              Pexp_sequence
              expression (src/ppx.ml[251,7835+2]..[251,7835+68])
                Pexp_apply
                expression (src/ppx.ml[251,7835+3]..[251,7835+16])
                  Pexp_ident "print_endline" (src/ppx.ml[251,7835+3]..[251,7835+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[251,7835+17]..[251,7835+67])
                      Pexp_apply
                      expression (src/ppx.ml[251,7835+18]..[251,7835+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[251,7835+18]..[251,7835+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7835+33]..[251,7835+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[251,7835+34]..[251,7835+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7835+35]..[251,7835+61]),None)
                              expression (src/ppx.ml[251,7835+64]..[251,7835+65])
                                Pexp_ident "x" (src/ppx.ml[251,7835+64]..[251,7835+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[252,7905+2]..[276,9753+128])
                Pexp_match
                expression (src/ppx.ml[252,7905+8]..[252,7905+9])
                  Pexp_ident "x" (src/ppx.ml[252,7905+8]..[252,7905+9])
                [
                  <case>
                    pattern (src/ppx.ml[253,7920+4]..[253,7920+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[253,7920+4]..[253,7920+13])
                      Some
                        []
                        pattern (src/ppx.ml[253,7920+14]..[253,7920+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,7920+15]..[253,7920+25])
                              Ppat_var "expression" (src/ppx.ml[253,7920+15]..[253,7920+25])
                            pattern (src/ppx.ml[253,7920+26]..[253,7920+36])
                              Ppat_var "attributes" (src/ppx.ml[253,7920+26]..[253,7920+36])
                          ]
                    expression (src/ppx.ml[253,7920+41]..[253,7920+117])
                      Pexp_apply
                      expression (src/ppx.ml[253,7920+42]..[253,7920+55])
                        Pexp_ident "print_endline" (src/ppx.ml[253,7920+42]..[253,7920+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7920+56]..[253,7920+116])
                            Pexp_apply
                            expression (src/ppx.ml[253,7920+57]..[253,7920+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,7920+57]..[253,7920+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7920+72]..[253,7920+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,7920+73]..[253,7920+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7920+74]..[253,7920+90]),None)
                                    expression (src/ppx.ml[253,7920+93]..[253,7920+103])
                                      Pexp_ident "expression" (src/ppx.ml[253,7920+93]..[253,7920+103])
                                    expression (src/ppx.ml[253,7920+104]..[253,7920+114])
                                      Pexp_ident "attributes" (src/ppx.ml[253,7920+104]..[253,7920+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8058+4]..[255,8058+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[255,8058+4]..[255,8058+14])
                      Some
                        []
                        pattern (src/ppx.ml[255,8058+15]..[255,8058+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8058+16]..[255,8058+24])
                              Ppat_var "rec_flag" (src/ppx.ml[255,8058+16]..[255,8058+24])
                            pattern (src/ppx.ml[255,8058+26]..[255,8058+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[255,8058+26]..[255,8058+44])
                          ]
                    expression (src/ppx.ml[255,8058+48]..[256,8192+48])
                      Pexp_sequence
                      expression (src/ppx.ml[255,8058+48]..[255,8058+132])
                        Pexp_apply
                        expression (src/ppx.ml[255,8058+49]..[255,8058+62])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8058+49]..[255,8058+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8058+63]..[255,8058+131])
                              Pexp_apply
                              expression (src/ppx.ml[255,8058+64]..[255,8058+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8058+64]..[255,8058+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8058+79]..[255,8058+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8058+80]..[255,8058+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8058+81]..[255,8058+98]),None)
                                      expression (src/ppx.ml[255,8058+101]..[255,8058+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8058+101]..[255,8058+109])
                                      expression (src/ppx.ml[255,8058+111]..[255,8058+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[255,8058+111]..[255,8058+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[256,8192+4]..[256,8192+48])
                        Pexp_apply
                        expression (src/ppx.ml[256,8192+4]..[256,8192+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[256,8192+4]..[256,8192+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[256,8192+28]..[256,8192+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[256,8192+29]..[256,8192+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[257,8241+4]..[257,8241+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[257,8241+4]..[257,8241+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8241+19]..[257,8241+36])
                          Ppat_var "value_description" (src/ppx.ml[257,8241+19]..[257,8241+36])
                    expression (src/ppx.ml[257,8241+39]..[257,8241+116])
                      Pexp_apply
                      expression (src/ppx.ml[257,8241+40]..[257,8241+53])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8241+40]..[257,8241+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8241+54]..[257,8241+115])
                            Pexp_apply
                            expression (src/ppx.ml[257,8241+55]..[257,8241+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8241+55]..[257,8241+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8241+70]..[257,8241+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8241+71]..[257,8241+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8241+72]..[257,8241+93]),None)
                                    expression (src/ppx.ml[257,8241+96]..[257,8241+113])
                                      Pexp_ident "value_description" (src/ppx.ml[257,8241+96]..[257,8241+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8359+4]..[259,8359+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[259,8359+4]..[259,8359+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8359+14]..[259,8359+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[259,8359+15]..[259,8359+23])
                              Ppat_var "rec_flag" (src/ppx.ml[259,8359+15]..[259,8359+23])
                            pattern (src/ppx.ml[259,8359+25]..[259,8359+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[259,8359+25]..[259,8359+46])
                          ]
                    expression (src/ppx.ml[261,8438+4]..[262,8489+90])
                      Pexp_sequence
                      expression (src/ppx.ml[261,8438+4]..[261,8438+49])
                        Pexp_apply
                        expression (src/ppx.ml[261,8438+4]..[261,8438+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[261,8438+4]..[261,8438+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[261,8438+26]..[261,8438+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[261,8438+27]..[261,8438+48])
                        ]
                      expression (src/ppx.ml[262,8489+4]..[262,8489+90])
                        Pexp_apply
                        expression (src/ppx.ml[262,8489+5]..[262,8489+18])
                          Pexp_ident "print_endline" (src/ppx.ml[262,8489+5]..[262,8489+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[262,8489+19]..[262,8489+89])
                              Pexp_apply
                              expression (src/ppx.ml[262,8489+20]..[262,8489+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[262,8489+20]..[262,8489+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[262,8489+35]..[262,8489+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[262,8489+36]..[262,8489+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8489+37]..[262,8489+53]),None)
                                      expression (src/ppx.ml[262,8489+56]..[262,8489+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[262,8489+56]..[262,8489+64])
                                      expression (src/ppx.ml[262,8489+66]..[262,8489+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[262,8489+66]..[262,8489+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[265,8582+4]..[265,8582+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[265,8582+4]..[265,8582+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8582+17]..[265,8582+31])
                          Ppat_var "type_extension" (src/ppx.ml[265,8582+17]..[265,8582+31])
                    expression (src/ppx.ml[265,8582+34]..[265,8582+105])
                      Pexp_apply
                      expression (src/ppx.ml[265,8582+35]..[265,8582+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8582+35]..[265,8582+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8582+49]..[265,8582+104])
                            Pexp_apply
                            expression (src/ppx.ml[265,8582+50]..[265,8582+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8582+50]..[265,8582+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8582+65]..[265,8582+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8582+66]..[265,8582+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8582+67]..[265,8582+85]),None)
                                    expression (src/ppx.ml[265,8582+88]..[265,8582+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[265,8582+88]..[265,8582+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8688+4]..[266,8688+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[266,8688+4]..[266,8688+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8688+19]..[266,8688+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[266,8688+19]..[266,8688+40])
                    expression (src/ppx.ml[266,8688+43]..[266,8688+124])
                      Pexp_apply
                      expression (src/ppx.ml[266,8688+44]..[266,8688+57])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8688+44]..[266,8688+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8688+58]..[266,8688+123])
                            Pexp_apply
                            expression (src/ppx.ml[266,8688+59]..[266,8688+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8688+59]..[266,8688+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8688+74]..[266,8688+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8688+75]..[266,8688+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8688+76]..[266,8688+97]),None)
                                    expression (src/ppx.ml[266,8688+100]..[266,8688+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[266,8688+100]..[266,8688+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,8813+4]..[267,8813+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[267,8813+4]..[267,8813+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8813+17]..[267,8813+31])
                          Ppat_var "module_binding" (src/ppx.ml[267,8813+17]..[267,8813+31])
                    expression (src/ppx.ml[267,8813+34]..[267,8813+104])
                      Pexp_apply
                      expression (src/ppx.ml[267,8813+35]..[267,8813+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8813+35]..[267,8813+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8813+49]..[267,8813+103])
                            Pexp_apply
                            expression (src/ppx.ml[267,8813+50]..[267,8813+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8813+50]..[267,8813+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8813+65]..[267,8813+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8813+66]..[267,8813+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8813+67]..[267,8813+85]),None)
                                    expression (src/ppx.ml[267,8813+87]..[267,8813+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[267,8813+87]..[267,8813+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8918+4]..[268,8918+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[268,8918+4]..[268,8918+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8918+20]..[268,8918+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[268,8918+20]..[268,8918+39])
                    expression (src/ppx.ml[268,8918+42]..[268,8918+121])
                      Pexp_apply
                      expression (src/ppx.ml[268,8918+43]..[268,8918+56])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8918+43]..[268,8918+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8918+57]..[268,8918+120])
                            Pexp_apply
                            expression (src/ppx.ml[268,8918+58]..[268,8918+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8918+58]..[268,8918+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8918+73]..[268,8918+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8918+74]..[268,8918+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8918+75]..[268,8918+96]),None)
                                    expression (src/ppx.ml[268,8918+99]..[268,8918+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[268,8918+99]..[268,8918+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9040+4]..[269,9040+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[269,9040+4]..[269,9040+16])
                      Some
                        []
                        pattern (src/ppx.ml[269,9040+17]..[269,9040+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[269,9040+17]..[269,9040+40])
                    expression (src/ppx.ml[269,9040+43]..[269,9040+124])
                      Pexp_apply
                      expression (src/ppx.ml[269,9040+44]..[269,9040+57])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9040+44]..[269,9040+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9040+58]..[269,9040+123])
                            Pexp_apply
                            expression (src/ppx.ml[269,9040+59]..[269,9040+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9040+59]..[269,9040+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9040+74]..[269,9040+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9040+75]..[269,9040+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9040+76]..[269,9040+95]),None)
                                    expression (src/ppx.ml[269,9040+98]..[269,9040+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[269,9040+98]..[269,9040+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9182+4]..[271,9182+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[271,9182+4]..[271,9182+13])
                      Some
                        []
                        pattern (src/ppx.ml[271,9182+14]..[271,9182+30])
                          Ppat_var "open_description" (src/ppx.ml[271,9182+14]..[271,9182+30])
                    expression (src/ppx.ml[271,9182+33]..[271,9182+103])
                      Pexp_apply
                      expression (src/ppx.ml[271,9182+34]..[271,9182+47])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9182+34]..[271,9182+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9182+48]..[271,9182+102])
                            Pexp_apply
                            expression (src/ppx.ml[271,9182+49]..[271,9182+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9182+49]..[271,9182+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9182+64]..[271,9182+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9182+65]..[271,9182+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[271,9182+66]..[271,9182+81]),None)
                                    expression (src/ppx.ml[271,9182+84]..[271,9182+100])
                                      Pexp_ident "open_description" (src/ppx.ml[271,9182+84]..[271,9182+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9286+4]..[272,9286+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[272,9286+4]..[272,9286+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,9286+15]..[272,9286+36])
                          Ppat_var "class_declarations" (src/ppx.ml[272,9286+16]..[272,9286+34])
                    expression (src/ppx.ml[272,9286+39]..[272,9286+113])
                      Pexp_apply
                      expression (src/ppx.ml[272,9286+40]..[272,9286+53])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9286+40]..[272,9286+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9286+54]..[272,9286+112])
                            Pexp_apply
                            expression (src/ppx.ml[272,9286+55]..[272,9286+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9286+55]..[272,9286+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9286+70]..[272,9286+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9286+71]..[272,9286+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9286+72]..[272,9286+89]),None)
                                    expression (src/ppx.ml[272,9286+92]..[272,9286+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[272,9286+92]..[272,9286+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9400+4]..[273,9400+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[273,9400+4]..[273,9400+19])
                      Some
                        []
                        pattern (src/ppx.ml[273,9400+20]..[273,9400+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[273,9400+21]..[273,9400+44])
                    expression (src/ppx.ml[273,9400+48]..[273,9400+132])
                      Pexp_apply
                      expression (src/ppx.ml[273,9400+49]..[273,9400+62])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9400+49]..[273,9400+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9400+63]..[273,9400+131])
                            Pexp_apply
                            expression (src/ppx.ml[273,9400+64]..[273,9400+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9400+64]..[273,9400+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9400+79]..[273,9400+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9400+80]..[273,9400+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9400+81]..[273,9400+103]),None)
                                    expression (src/ppx.ml[273,9400+106]..[273,9400+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[273,9400+106]..[273,9400+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9533+4]..[274,9533+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[274,9533+4]..[274,9533+16])
                      Some
                        []
                        pattern (src/ppx.ml[274,9533+18]..[274,9533+39])
                          Ppat_var "include_declaration" (src/ppx.ml[274,9533+19]..[274,9533+38])
                    expression (src/ppx.ml[274,9533+41]..[274,9533+117])
                      Pexp_apply
                      expression (src/ppx.ml[274,9533+42]..[274,9533+55])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9533+42]..[274,9533+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9533+56]..[274,9533+116])
                            Pexp_apply
                            expression (src/ppx.ml[274,9533+57]..[274,9533+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9533+57]..[274,9533+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9533+72]..[274,9533+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9533+73]..[274,9533+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9533+74]..[274,9533+93]),None)
                                    expression (src/ppx.ml[274,9533+95]..[274,9533+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[274,9533+95]..[274,9533+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9651+4]..[275,9651+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[275,9651+4]..[275,9651+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,9651+19]..[275,9651+30])
                          Ppat_var "attribute" (src/ppx.ml[275,9651+20]..[275,9651+29])
                    expression (src/ppx.ml[275,9651+32]..[275,9651+101])
                      Pexp_apply
                      expression (src/ppx.ml[275,9651+33]..[275,9651+46])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9651+33]..[275,9651+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9651+47]..[275,9651+100])
                            Pexp_apply
                            expression (src/ppx.ml[275,9651+48]..[275,9651+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9651+48]..[275,9651+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9651+63]..[275,9651+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9651+64]..[275,9651+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9651+65]..[275,9651+86]),None)
                                    expression (src/ppx.ml[275,9651+89]..[275,9651+98])
                                      Pexp_ident "attribute" (src/ppx.ml[275,9651+89]..[275,9651+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9753+4]..[276,9753+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[276,9753+4]..[276,9753+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,9753+19]..[276,9753+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,9753+21]..[276,9753+30])
                              Ppat_var "extension" (src/ppx.ml[276,9753+21]..[276,9753+30])
                            pattern (src/ppx.ml[276,9753+33]..[276,9753+43])
                              Ppat_var "attributes" (src/ppx.ml[276,9753+33]..[276,9753+43])
                          ]
                    expression (src/ppx.ml[276,9753+46]..[276,9753+128])
                      Pexp_apply
                      expression (src/ppx.ml[276,9753+47]..[276,9753+60])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9753+47]..[276,9753+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9753+61]..[276,9753+127])
                            Pexp_apply
                            expression (src/ppx.ml[276,9753+62]..[276,9753+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9753+62]..[276,9753+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9753+77]..[276,9753+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9753+78]..[276,9753+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9753+79]..[276,9753+100]),None)
                                    expression (src/ppx.ml[276,9753+103]..[276,9753+112])
                                      Pexp_ident "extension" (src/ppx.ml[276,9753+103]..[276,9753+112])
                                    expression (src/ppx.ml[276,9753+115]..[276,9753+125])
                                      Pexp_ident "attributes" (src/ppx.ml[276,9753+115]..[276,9753+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[250,7789+39]..[250,7789+43])
              Ptyp_constr "unit" (src/ppx.ml[250,7789+39]..[250,7789+43])
              []
    ]
  structure_item (src/ppx.ml[278,9883+0]..[278,9883+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9883+4]..[278,9883+7])
          Ppat_var "foo" (src/ppx.ml[278,9883+4]..[278,9883+7])
        expression (src/ppx.ml[278,9883+10]..[278,9883+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[280,9898+0]..[288,10117+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9898+4]..[280,9898+12])
          Ppat_var "printone" (src/ppx.ml[280,9898+4]..[280,9898+12])
        expression (src/ppx.ml[280,9898+13]..[288,10117+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[280,9898+13]..[280,9898+34])
            Ppat_constraint
            pattern (src/ppx.ml[280,9898+14]..[280,9898+15])
              Ppat_var "x" (src/ppx.ml[280,9898+14]..[280,9898+15])
            core_type (src/ppx.ml[280,9898+18]..[280,9898+32])
              Ptyp_constr "structure_item" (src/ppx.ml[280,9898+18]..[280,9898+32])
              []
          expression (src/ppx.ml[280,9898+35]..[288,10117+6])
            Pexp_constraint
            expression (src/ppx.ml[281,9941+2]..[288,10117+6])
              Pexp_match
              expression (src/ppx.ml[281,9941+8]..[281,9941+9])
                Pexp_ident "x" (src/ppx.ml[281,9941+8]..[281,9941+9])
              [
                <case>
                  pattern (src/ppx.ml[282,9956+3]..[285,10006+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[283,9961+4]..[283,9961+13]) ghost
                        pattern (src/ppx.ml[283,9961+4]..[283,9961+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[283,9961+4]..[283,9961+13])
                    ]
                  expression (src/ppx.ml[287,10090+4]..[288,10117+6])
                    Pexp_sequence
                    expression (src/ppx.ml[287,10090+4]..[287,10090+25])
                      Pexp_apply
                      expression (src/ppx.ml[287,10090+5]..[287,10090+14])
                        Pexp_ident "printdesc" (src/ppx.ml[287,10090+5]..[287,10090+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,10090+15]..[287,10090+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[287,10090+15]..[287,10090+24])
                      ]
                    expression (src/ppx.ml[288,10117+4]..[288,10117+6])
                      Pexp_construct "()" (src/ppx.ml[288,10117+4]..[288,10117+6])
                      None
              ]
            core_type (src/ppx.ml[280,9898+36]..[280,9898+40])
              Ptyp_constr "unit" (src/ppx.ml[280,9898+36]..[280,9898+40])
              []
    ]
  structure_item (src/ppx.ml[294,10237+0]..[296,10318+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10237+4]..[294,10237+13])
          Ppat_var "printone2" (src/ppx.ml[294,10237+4]..[294,10237+13])
        expression (src/ppx.ml[294,10237+14]..[296,10318+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[294,10237+14]..[294,10237+15])
            Ppat_var "x" (src/ppx.ml[294,10237+14]..[294,10237+15])
          expression (src/ppx.ml[294,10237+16]..[296,10318+12])
            Pexp_constraint
            expression (src/ppx.ml[295,10261+2]..[296,10318+12])
              Pexp_sequence
              expression (src/ppx.ml[295,10261+2]..[295,10261+55])
                Pexp_apply
                expression (src/ppx.ml[295,10261+3]..[295,10261+16])
                  Pexp_ident "print_endline" (src/ppx.ml[295,10261+3]..[295,10261+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[295,10261+17]..[295,10261+54])
                      Pexp_apply
                      expression (src/ppx.ml[295,10261+18]..[295,10261+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[295,10261+18]..[295,10261+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[295,10261+33]..[295,10261+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[295,10261+34]..[295,10261+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[295,10261+35]..[295,10261+49]),None)
                              expression (src/ppx.ml[295,10261+51]..[295,10261+52])
                                Pexp_ident "x" (src/ppx.ml[295,10261+51]..[295,10261+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[296,10318+2]..[296,10318+12])
                Pexp_apply
                expression (src/ppx.ml[296,10318+2]..[296,10318+10])
                  Pexp_ident "printone" (src/ppx.ml[296,10318+2]..[296,10318+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[296,10318+11]..[296,10318+12])
                      Pexp_ident "x" (src/ppx.ml[296,10318+11]..[296,10318+12])
                ]
            core_type (src/ppx.ml[294,10237+17]..[294,10237+21])
              Ptyp_constr "unit" (src/ppx.ml[294,10237+17]..[294,10237+21])
              []
    ]
  structure_item (src/ppx.ml[298,10334+0]..[300,10365+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10334+4]..[298,10334+9])
          Ppat_var "proc1" (src/ppx.ml[298,10334+4]..[298,10334+9])
        expression (src/ppx.ml[298,10334+10]..[300,10365+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[298,10334+10]..[298,10334+11])
            Ppat_var "x" (src/ppx.ml[298,10334+10]..[298,10334+11])
          expression (src/ppx.ml[299,10350+2]..[300,10365+3])
            Pexp_sequence
            expression (src/ppx.ml[299,10350+2]..[299,10350+13])
              Pexp_apply
              expression (src/ppx.ml[299,10350+2]..[299,10350+11])
                Pexp_ident "printone2" (src/ppx.ml[299,10350+2]..[299,10350+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[299,10350+12]..[299,10350+13])
                    Pexp_ident "x" (src/ppx.ml[299,10350+12]..[299,10350+13])
              ]
            expression (src/ppx.ml[300,10365+2]..[300,10365+3])
              Pexp_ident "x" (src/ppx.ml[300,10365+2]..[300,10365+3])
    ]
  structure_item (src/ppx.ml[302,10370+0]..[305,10519+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10370+4]..[302,10370+9])
          Ppat_var "debug" (src/ppx.ml[302,10370+4]..[302,10370+9])
        expression (src/ppx.ml[302,10370+10]..[305,10519+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10370+10]..[302,10370+14])
            Ppat_var "proc" (src/ppx.ml[302,10370+10]..[302,10370+14])
          expression (src/ppx.ml[302,10370+15]..[305,10519+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[302,10370+15]..[302,10370+18])
              Ppat_var "lst" (src/ppx.ml[302,10370+15]..[302,10370+18])
            expression (src/ppx.ml[302,10370+19]..[305,10519+4])
              Pexp_constraint
              expression (src/ppx.ml[303,10398+2]..[305,10519+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[303,10398+6]..[303,10398+12])
                      Ppat_var "result" (src/ppx.ml[303,10398+6]..[303,10398+12])
                    expression (src/ppx.ml[303,10398+15]..[303,10398+32])
                      Pexp_apply
                      expression (src/ppx.ml[303,10398+15]..[303,10398+23])
                        Pexp_ident "List.map" (src/ppx.ml[303,10398+15]..[303,10398+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10398+24]..[303,10398+28])
                            Pexp_ident "proc" (src/ppx.ml[303,10398+24]..[303,10398+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10398+29]..[303,10398+32])
                            Pexp_ident "lst" (src/ppx.ml[303,10398+29]..[303,10398+32])
                      ]
                ]
                expression (src/ppx.ml[304,10434+2]..[305,10519+4])
                  Pexp_sequence
                  expression (src/ppx.ml[304,10434+2]..[304,10434+83])
                    Pexp_apply
                    expression (src/ppx.ml[304,10434+2]..[304,10434+11])
                      Pexp_ident "List.iter" (src/ppx.ml[304,10434+2]..[304,10434+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10434+12]..[304,10434+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[304,10434+17]..[304,10434+18])
                            Ppat_var "i" (src/ppx.ml[304,10434+17]..[304,10434+18])
                          expression (src/ppx.ml[304,10434+22]..[304,10434+75])
                            Pexp_apply
                            expression (src/ppx.ml[304,10434+22]..[304,10434+35])
                              Pexp_ident "print_endline" (src/ppx.ml[304,10434+22]..[304,10434+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[304,10434+36]..[304,10434+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[304,10434+37]..[304,10434+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[304,10434+37]..[304,10434+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[304,10434+52]..[304,10434+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[304,10434+53]..[304,10434+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10434+54]..[304,10434+69]),None)
                                          expression (src/ppx.ml[304,10434+72]..[304,10434+73])
                                            Pexp_ident "i" (src/ppx.ml[304,10434+72]..[304,10434+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10434+77]..[304,10434+83])
                          Pexp_ident "result" (src/ppx.ml[304,10434+77]..[304,10434+83])
                    ]
                  expression (src/ppx.ml[305,10519+2]..[305,10519+4])
                    Pexp_construct "()" (src/ppx.ml[305,10519+2]..[305,10519+4])
                    None
              core_type (src/ppx.ml[302,10370+21]..[302,10370+25])
                Ptyp_constr "unit" (src/ppx.ml[302,10370+21]..[302,10370+25])
                []
    ]
  structure_item (src/ppx.ml[307,10541+0]..[310,10665+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10541+4]..[307,10541+13])
          Ppat_var "transform" (src/ppx.ml[307,10541+4]..[307,10541+13])
        expression (src/ppx.ml[307,10541+14]..[310,10665+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10541+14]..[307,10541+15])
            Ppat_var "x" (src/ppx.ml[307,10541+14]..[307,10541+15])
          expression (src/ppx.ml[308,10596+2]..[310,10665+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10596+2]..[308,10596+48])
              Pexp_apply
              expression (src/ppx.ml[308,10596+3]..[308,10596+16])
                Pexp_ident "print_endline" (src/ppx.ml[308,10596+3]..[308,10596+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10596+17]..[308,10596+47])
                    Pexp_apply
                    expression (src/ppx.ml[308,10596+18]..[308,10596+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[308,10596+18]..[308,10596+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[308,10596+33]..[308,10596+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[308,10596+34]..[308,10596+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[308,10596+35]..[308,10596+42]),None)
                            expression (src/ppx.ml[308,10596+44]..[308,10596+45])
                              Pexp_ident "x" (src/ppx.ml[308,10596+44]..[308,10596+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[309,10646+2]..[310,10665+3])
              Pexp_sequence
              expression (src/ppx.ml[309,10646+2]..[309,10646+17])
                Pexp_apply
                expression (src/ppx.ml[309,10646+3]..[309,10646+8])
                  Pexp_ident "debug" (src/ppx.ml[309,10646+3]..[309,10646+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10646+9]..[309,10646+14])
                      Pexp_ident "proc1" (src/ppx.ml[309,10646+9]..[309,10646+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10646+15]..[309,10646+16])
                      Pexp_ident "x" (src/ppx.ml[309,10646+15]..[309,10646+16])
                ]
              expression (src/ppx.ml[310,10665+2]..[310,10665+3])
                Pexp_ident "x" (src/ppx.ml[310,10665+2]..[310,10665+3])
    ]
  structure_item (src/ppx.ml[312,10672+1]..[312,10672+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10672+5]..[312,10672+7])
          Ppat_construct "()" (src/ppx.ml[312,10672+5]..[312,10672+7])
          None
        expression (src/ppx.ml[312,10672+10]..[312,10672+69])
          Pexp_apply
          expression (src/ppx.ml[312,10672+10]..[312,10672+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[312,10672+10]..[312,10672+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[312,10672+47]..[312,10672+56])
                Pexp_ident "transform" (src/ppx.ml[312,10672+47]..[312,10672+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[312,10672+57]..[312,10672+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[312,10672+58]..[312,10672+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id x =
  match x with
  | (a, b) -> print_endline (Batteries.dump ("DEBUG:process_id:", a))
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_id a;
       process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[70,1899+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[70,1899+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+17])
            Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
          expression (src/ppx.ml[70,1899+2]..[70,1899+60])
            Pexp_apply
            expression (src/ppx.ml[70,1899+3]..[70,1899+16])
              Pexp_ident "print_endline" (src/ppx.ml[70,1899+3]..[70,1899+16])
            [
              <arg>
              Nolabel
                expression (src/ppx.ml[70,1899+17]..[70,1899+59])
                  Pexp_apply
                  expression (src/ppx.ml[70,1899+18]..[70,1899+32])
                    Pexp_ident "Batteries.dump" (src/ppx.ml[70,1899+18]..[70,1899+32])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[70,1899+33]..[70,1899+58])
                        Pexp_tuple
                        [
                          expression (src/ppx.ml[70,1899+34]..[70,1899+53])
                            Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[70,1899+35]..[70,1899+52]),None)
                          expression (src/ppx.ml[70,1899+56]..[70,1899+57])
                            Pexp_ident "x" (src/ppx.ml[70,1899+56]..[70,1899+57])
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[72,1963+0]..[154,4788+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[72,1963+8]..[72,1963+27])
          Ppat_var "process_record_kind" (src/ppx.ml[72,1963+8]..[72,1963+27])
        expression (src/ppx.ml[72,1963+27]..[86,2447+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[72,1963+27]..[72,1963+30])
            Ppat_var "x" (src/ppx.ml[72,1963+28]..[72,1963+29])
          expression (src/ppx.ml[73,1996+2]..[86,2447+47])
            Pexp_match
            expression (src/ppx.ml[73,1996+8]..[73,1996+9])
              Pexp_ident "x" (src/ppx.ml[73,1996+8]..[73,1996+9])
            [
              <case>
                pattern (src/ppx.ml[74,2011+4]..[80,2192+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[75,2017+5]..[75,2017+13]) ghost
                      pattern (src/ppx.ml[75,2017+5]..[75,2017+13])
                        Ppat_var "pld_name" (src/ppx.ml[75,2017+5]..[75,2017+13])
                    "pld_mutable" (src/ppx.ml[76,2050+5]..[76,2050+16]) ghost
                      pattern (src/ppx.ml[76,2050+5]..[76,2050+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[76,2050+5]..[76,2050+16])
                    "pld_type" (src/ppx.ml[77,2088+5]..[77,2088+13]) ghost
                      pattern (src/ppx.ml[77,2088+5]..[77,2088+13])
                        Ppat_var "pld_type" (src/ppx.ml[77,2088+5]..[77,2088+13])
                    "pld_loc" (src/ppx.ml[78,2120+5]..[78,2120+12]) ghost
                      pattern (src/ppx.ml[78,2120+5]..[78,2120+12])
                        Ppat_var "pld_loc" (src/ppx.ml[78,2120+5]..[78,2120+12])
                    "pld_attributes" (src/ppx.ml[79,2152+5]..[79,2152+19]) ghost
                      pattern (src/ppx.ml[79,2152+5]..[79,2152+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[79,2152+5]..[79,2152+19])
                  ]
                expression (src/ppx.ml[81,2200+4]..[86,2447+47])
                  Pexp_apply
                  expression (src/ppx.ml[81,2200+5]..[81,2200+18])
                    Pexp_ident "print_endline" (src/ppx.ml[81,2200+5]..[81,2200+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[81,2200+19]..[86,2447+46])
                        Pexp_apply
                        expression (src/ppx.ml[81,2200+20]..[81,2200+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[81,2200+20]..[81,2200+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[81,2200+35]..[86,2447+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[81,2200+36]..[81,2200+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[81,2200+37]..[81,2200+56]),None)
                                expression (src/ppx.ml[82,2261+36]..[82,2261+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[82,2261+36]..[82,2261+44])
                                expression (src/ppx.ml[83,2307+36]..[83,2307+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[83,2307+37]..[83,2307+44]),None)
                                expression (src/ppx.ml[84,2354+36]..[84,2354+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[84,2354+36]..[84,2354+47])
                                expression (src/ppx.ml[85,2403+36]..[85,2403+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[85,2403+37]..[85,2403+41]),None)
                                expression (src/ppx.ml[86,2447+36]..[86,2447+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[86,2447+36]..[86,2447+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[88,2499+0]..[88,2499+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[88,2499+0]..[88,2499+22])
        expression (src/ppx.ml[88,2499+23]..[128,4106+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[88,2499+23]..[88,2499+24])
            Ppat_var "x" (src/ppx.ml[88,2499+23]..[88,2499+24])
          expression (src/ppx.ml[89,2526+2]..[128,4106+65])
            Pexp_match
            expression (src/ppx.ml[89,2526+8]..[89,2526+9])
              Pexp_ident "x" (src/ppx.ml[89,2526+8]..[89,2526+9])
            [
              <case>
                pattern (src/ppx.ml[90,2541+4]..[90,2541+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[90,2541+4]..[90,2541+15])
                  Some
                    []
                    pattern (src/ppx.ml[90,2541+16]..[90,2541+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[90,2541+17]..[90,2541+18])
                          Ppat_var "a" (src/ppx.ml[90,2541+17]..[90,2541+18])
                        pattern (src/ppx.ml[90,2541+19]..[90,2541+20])
                          Ppat_var "b" (src/ppx.ml[90,2541+19]..[90,2541+20])
                      ]
                expression (src/ppx.ml[92,2612+4]..[95,2666+79])
                  Pexp_sequence
                  expression (src/ppx.ml[92,2612+4]..[92,2612+18])
                    Pexp_apply
                    expression (src/ppx.ml[92,2612+5]..[92,2612+15])
                      Pexp_ident "process_id" (src/ppx.ml[92,2612+5]..[92,2612+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[92,2612+16]..[92,2612+17])
                          Pexp_ident "a" (src/ppx.ml[92,2612+16]..[92,2612+17])
                    ]
                  expression (src/ppx.ml[93,2632+4]..[95,2666+79])
                    Pexp_sequence
                    expression (src/ppx.ml[93,2632+4]..[93,2632+30])
                      Pexp_apply
                      expression (src/ppx.ml[93,2632+5]..[93,2632+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[93,2632+5]..[93,2632+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[93,2632+28]..[93,2632+29])
                            Pexp_ident "b" (src/ppx.ml[93,2632+28]..[93,2632+29])
                      ]
                    expression (src/ppx.ml[95,2666+4]..[95,2666+79])
                      Pexp_apply
                      expression (src/ppx.ml[95,2666+5]..[95,2666+18])
                        Pexp_ident "print_endline" (src/ppx.ml[95,2666+5]..[95,2666+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[95,2666+19]..[95,2666+78])
                            Pexp_apply
                            expression (src/ppx.ml[95,2666+20]..[95,2666+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[95,2666+20]..[95,2666+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[95,2666+35]..[95,2666+77])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[95,2666+36]..[95,2666+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[95,2666+37]..[95,2666+55]),None)
                                    expression (src/ppx.ml[95,2666+58]..[95,2666+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[95,2666+59]..[95,2666+61]),None)
                                    expression (src/ppx.ml[95,2666+63]..[95,2666+64])
                                      Pexp_ident "a" (src/ppx.ml[95,2666+63]..[95,2666+64])
                                    expression (src/ppx.ml[95,2666+66]..[95,2666+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[95,2666+67]..[95,2666+72]),None)
                                    expression (src/ppx.ml[95,2666+74]..[95,2666+75])
                                      Pexp_ident "b" (src/ppx.ml[95,2666+74]..[95,2666+75])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[97,2747+4]..[97,2747+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[97,2747+4]..[97,2747+14])
                  Some
                    []
                    pattern (src/ppx.ml[97,2747+15]..[97,2747+16])
                      Ppat_var "a" (src/ppx.ml[97,2747+15]..[97,2747+16])
                expression (src/ppx.ml[99,2795+4]..[99,2795+59])
                  Pexp_apply
                  expression (src/ppx.ml[99,2795+5]..[99,2795+18])
                    Pexp_ident "print_endline" (src/ppx.ml[99,2795+5]..[99,2795+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[99,2795+19]..[99,2795+58])
                        Pexp_apply
                        expression (src/ppx.ml[99,2795+20]..[99,2795+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[99,2795+20]..[99,2795+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[99,2795+35]..[99,2795+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[99,2795+37]..[99,2795+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[102,2874+4]..[102,2874+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[102,2874+4]..[102,2874+12])
                  None
                expression (src/ppx.ml[102,2874+17]..[102,2874+69])
                  Pexp_apply
                  expression (src/ppx.ml[102,2874+18]..[102,2874+31])
                    Pexp_ident "print_endline" (src/ppx.ml[102,2874+18]..[102,2874+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[102,2874+32]..[102,2874+68])
                        Pexp_apply
                        expression (src/ppx.ml[102,2874+33]..[102,2874+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[102,2874+33]..[102,2874+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[102,2874+48]..[102,2874+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[102,2874+50]..[102,2874+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[103,2944+4]..[103,2944+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[103,2944+4]..[103,2944+12])
                  Some
                    []
                    pattern (src/ppx.ml[103,2944+13]..[103,2944+17])
                      Ppat_var "name" (src/ppx.ml[103,2944+13]..[103,2944+17])
                expression (src/ppx.ml[103,2944+20]..[103,2944+80])
                  Pexp_apply
                  expression (src/ppx.ml[103,2944+21]..[103,2944+34])
                    Pexp_ident "print_endline" (src/ppx.ml[103,2944+21]..[103,2944+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,2944+35]..[103,2944+79])
                        Pexp_apply
                        expression (src/ppx.ml[103,2944+36]..[103,2944+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,2944+36]..[103,2944+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,2944+51]..[103,2944+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[103,2944+52]..[103,2944+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[103,2944+53]..[103,2944+68]),None)
                                expression (src/ppx.ml[103,2944+73]..[103,2944+77])
                                  Pexp_ident "name" (src/ppx.ml[103,2944+73]..[103,2944+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,3025+4]..[104,3025+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[104,3025+4]..[104,3025+14])
                  Some
                    []
                    pattern (src/ppx.ml[104,3025+15]..[104,3025+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[104,3025+16]..[104,3025+25])
                          Ppat_var "arg_label" (src/ppx.ml[104,3025+16]..[104,3025+25])
                        pattern (src/ppx.ml[104,3025+28]..[104,3025+37])
                          Ppat_var "core_type" (src/ppx.ml[104,3025+28]..[104,3025+37])
                        pattern (src/ppx.ml[104,3025+40]..[104,3025+50])
                          Ppat_var "core_type2" (src/ppx.ml[104,3025+40]..[104,3025+50])
                      ]
                expression (src/ppx.ml[105,3080+4]..[105,3080+61])
                  Pexp_apply
                  expression (src/ppx.ml[105,3080+5]..[105,3080+18])
                    Pexp_ident "print_endline" (src/ppx.ml[105,3080+5]..[105,3080+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,3080+19]..[105,3080+60])
                        Pexp_apply
                        expression (src/ppx.ml[105,3080+20]..[105,3080+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,3080+20]..[105,3080+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,3080+35]..[105,3080+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[105,3080+37]..[105,3080+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3143+4]..[107,3143+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[107,3143+4]..[107,3143+15])
                  Some
                    []
                    pattern (src/ppx.ml[107,3143+16]..[107,3143+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[107,3143+17]..[107,3143+18])
                          Ppat_var "a" (src/ppx.ml[107,3143+17]..[107,3143+18])
                        pattern (src/ppx.ml[107,3143+19]..[107,3143+20])
                          Ppat_var "b" (src/ppx.ml[107,3143+19]..[107,3143+20])
                      ]
                expression (src/ppx.ml[109,3212+4]..[109,3212+60])
                  Pexp_apply
                  expression (src/ppx.ml[109,3212+5]..[109,3212+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3212+5]..[109,3212+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3212+19]..[109,3212+59])
                        Pexp_apply
                        expression (src/ppx.ml[109,3212+20]..[109,3212+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3212+20]..[109,3212+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3212+35]..[109,3212+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[109,3212+37]..[109,3212+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[110,3273+4]..[110,3273+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[110,3273+4]..[110,3273+14])
                  Some
                    []
                    pattern (src/ppx.ml[110,3273+15]..[110,3273+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[110,3273+16]..[110,3273+17])
                          Ppat_var "a" (src/ppx.ml[110,3273+16]..[110,3273+17])
                        pattern (src/ppx.ml[110,3273+18]..[110,3273+19])
                          Ppat_var "b" (src/ppx.ml[110,3273+18]..[110,3273+19])
                      ]
                expression (src/ppx.ml[112,3343+4]..[112,3343+60])
                  Pexp_apply
                  expression (src/ppx.ml[112,3343+5]..[112,3343+18])
                    Pexp_ident "print_endline" (src/ppx.ml[112,3343+5]..[112,3343+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[112,3343+19]..[112,3343+59])
                        Pexp_apply
                        expression (src/ppx.ml[112,3343+20]..[112,3343+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[112,3343+20]..[112,3343+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[112,3343+35]..[112,3343+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[112,3343+37]..[112,3343+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3404+4]..[113,3404+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[113,3404+4]..[113,3404+14])
                  Some
                    []
                    pattern (src/ppx.ml[113,3404+15]..[113,3404+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[113,3404+16]..[113,3404+17])
                          Ppat_var "a" (src/ppx.ml[113,3404+16]..[113,3404+17])
                        pattern (src/ppx.ml[113,3404+18]..[113,3404+19])
                          Ppat_var "b" (src/ppx.ml[113,3404+18]..[113,3404+19])
                      ]
                expression (src/ppx.ml[115,3465+4]..[115,3465+60])
                  Pexp_apply
                  expression (src/ppx.ml[115,3465+5]..[115,3465+18])
                    Pexp_ident "print_endline" (src/ppx.ml[115,3465+5]..[115,3465+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[115,3465+19]..[115,3465+59])
                        Pexp_apply
                        expression (src/ppx.ml[115,3465+20]..[115,3465+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[115,3465+20]..[115,3465+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[115,3465+35]..[115,3465+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[115,3465+37]..[115,3465+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[116,3526+4]..[116,3526+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[116,3526+4]..[116,3526+16])
                  Some
                    []
                    pattern (src/ppx.ml[116,3526+17]..[116,3526+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[116,3526+18]..[116,3526+19])
                          Ppat_var "a" (src/ppx.ml[116,3526+18]..[116,3526+19])
                        pattern (src/ppx.ml[116,3526+20]..[116,3526+21])
                          Ppat_var "b" (src/ppx.ml[116,3526+20]..[116,3526+21])
                        pattern (src/ppx.ml[116,3526+22]..[116,3526+23])
                          Ppat_var "c" (src/ppx.ml[116,3526+22]..[116,3526+23])
                      ]
                expression (src/ppx.ml[118,3616+4]..[118,3616+60])
                  Pexp_apply
                  expression (src/ppx.ml[118,3616+5]..[118,3616+18])
                    Pexp_ident "print_endline" (src/ppx.ml[118,3616+5]..[118,3616+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[118,3616+19]..[118,3616+59])
                        Pexp_apply
                        expression (src/ppx.ml[118,3616+20]..[118,3616+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[118,3616+20]..[118,3616+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[118,3616+35]..[118,3616+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[118,3616+37]..[118,3616+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[119,3677+4]..[119,3677+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[119,3677+4]..[119,3677+13])
                  Some
                    []
                    pattern (src/ppx.ml[119,3677+14]..[119,3677+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[119,3677+15]..[119,3677+16])
                          Ppat_var "a" (src/ppx.ml[119,3677+15]..[119,3677+16])
                        pattern (src/ppx.ml[119,3677+17]..[119,3677+18])
                          Ppat_var "b" (src/ppx.ml[119,3677+17]..[119,3677+18])
                      ]
                expression (src/ppx.ml[121,3741+4]..[121,3741+60])
                  Pexp_apply
                  expression (src/ppx.ml[121,3741+5]..[121,3741+18])
                    Pexp_ident "print_endline" (src/ppx.ml[121,3741+5]..[121,3741+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[121,3741+19]..[121,3741+59])
                        Pexp_apply
                        expression (src/ppx.ml[121,3741+20]..[121,3741+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[121,3741+20]..[121,3741+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[121,3741+35]..[121,3741+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[121,3741+37]..[121,3741+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3802+4]..[122,3802+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[122,3802+4]..[122,3802+16])
                  Some
                    []
                    pattern (src/ppx.ml[122,3802+17]..[122,3802+18])
                      Ppat_var "a" (src/ppx.ml[122,3802+17]..[122,3802+18])
                expression (src/ppx.ml[124,3850+4]..[124,3850+62])
                  Pexp_apply
                  expression (src/ppx.ml[124,3850+5]..[124,3850+18])
                    Pexp_ident "print_endline" (src/ppx.ml[124,3850+5]..[124,3850+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[124,3850+19]..[124,3850+61])
                        Pexp_apply
                        expression (src/ppx.ml[124,3850+20]..[124,3850+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[124,3850+20]..[124,3850+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[124,3850+35]..[124,3850+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[124,3850+36]..[124,3850+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[124,3850+37]..[124,3850+55]),None)
                                expression (src/ppx.ml[124,3850+57]..[124,3850+58])
                                  Pexp_ident "a" (src/ppx.ml[124,3850+57]..[124,3850+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[127,4058+4]..[127,4058+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[127,4058+4]..[127,4058+18])
                  Some
                    []
                    pattern (src/ppx.ml[127,4058+19]..[127,4058+20])
                      Ppat_var "a" (src/ppx.ml[127,4058+19]..[127,4058+20])
                expression (src/ppx.ml[128,4106+4]..[128,4106+65])
                  Pexp_apply
                  expression (src/ppx.ml[128,4106+5]..[128,4106+18])
                    Pexp_ident "print_endline" (src/ppx.ml[128,4106+5]..[128,4106+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[128,4106+19]..[128,4106+64])
                        Pexp_apply
                        expression (src/ppx.ml[128,4106+20]..[128,4106+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[128,4106+20]..[128,4106+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[128,4106+35]..[128,4106+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[128,4106+36]..[128,4106+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[128,4106+37]..[128,4106+58]),None)
                                expression (src/ppx.ml[128,4106+60]..[128,4106+61])
                                  Pexp_ident "a" (src/ppx.ml[128,4106+60]..[128,4106+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[130,4176+2]..[130,4176+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[130,4176+2]..[130,4176+26])
        expression (src/ppx.ml[130,4176+26]..[136,4313+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[130,4176+26]..[130,4176+29])
            Ppat_var "x" (src/ppx.ml[130,4176+27]..[130,4176+28])
          expression (src/ppx.ml[131,4208+2]..[136,4313+6])
            Pexp_match
            expression (src/ppx.ml[131,4208+8]..[131,4208+9])
              Pexp_ident "x" (src/ppx.ml[131,4208+8]..[131,4208+9])
            [
              <case>
                pattern (src/ppx.ml[132,4223+4]..[132,4223+6])
                  Ppat_construct "[]" (src/ppx.ml[132,4223+4]..[132,4223+6])
                  None
                expression (src/ppx.ml[132,4223+10]..[132,4223+12])
                  Pexp_construct "()" (src/ppx.ml[132,4223+10]..[132,4223+12])
                  None
              <case>
                pattern (src/ppx.ml[133,4236+4]..[133,4236+10])
                  Ppat_construct "::" (src/ppx.ml[133,4236+6]..[133,4236+8])
                  Some
                    []
                    pattern (src/ppx.ml[133,4236+4]..[133,4236+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[133,4236+4]..[133,4236+5])
                          Ppat_var "h" (src/ppx.ml[133,4236+4]..[133,4236+5])
                        pattern (src/ppx.ml[133,4236+9]..[133,4236+10])
                          Ppat_var "t" (src/ppx.ml[133,4236+9]..[133,4236+10])
                      ]
                expression (src/ppx.ml[134,4250+4]..[136,4313+6])
                  Pexp_sequence
                  expression (src/ppx.ml[134,4250+4]..[134,4250+27])
                    Pexp_apply
                    expression (src/ppx.ml[134,4250+5]..[134,4250+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[134,4250+5]..[134,4250+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[134,4250+25]..[134,4250+26])
                          Pexp_ident "h" (src/ppx.ml[134,4250+25]..[134,4250+26])
                    ]
                  expression (src/ppx.ml[135,4279+4]..[136,4313+6])
                    Pexp_sequence
                    expression (src/ppx.ml[135,4279+4]..[135,4279+32])
                      Pexp_apply
                      expression (src/ppx.ml[135,4279+5]..[135,4279+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[135,4279+5]..[135,4279+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[135,4279+30]..[135,4279+31])
                            Pexp_ident "t" (src/ppx.ml[135,4279+30]..[135,4279+31])
                      ]
                    expression (src/ppx.ml[136,4313+4]..[136,4313+6])
                      Pexp_construct "()" (src/ppx.ml[136,4313+4]..[136,4313+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[138,4324+0]..[138,4324+17])
          Ppat_var "process_core_type" (src/ppx.ml[138,4324+0]..[138,4324+17])
        expression (src/ppx.ml[138,4324+17]..[148,4591+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[138,4324+17]..[138,4324+20])
            Ppat_var "x" (src/ppx.ml[138,4324+18]..[138,4324+19])
          expression (src/ppx.ml[139,4347+2]..[148,4591+80])
            Pexp_match
            expression (src/ppx.ml[139,4347+8]..[139,4347+9])
              Pexp_ident "x" (src/ppx.ml[139,4347+8]..[139,4347+9])
            [
              <case>
                pattern (src/ppx.ml[140,4363+4]..[145,4524+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[141,4369+6]..[141,4369+15]) ghost
                      pattern (src/ppx.ml[141,4369+6]..[141,4369+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[141,4369+6]..[141,4369+15])
                    "ptyp_loc" (src/ppx.ml[142,4408+5]..[142,4408+13]) ghost
                      pattern (src/ppx.ml[142,4408+5]..[142,4408+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[142,4408+5]..[142,4408+13])
                    "ptyp_loc_stack" (src/ppx.ml[143,4441+5]..[143,4441+19]) ghost
                      pattern (src/ppx.ml[143,4441+5]..[143,4441+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[143,4441+5]..[143,4441+19])
                    "ptyp_attributes" (src/ppx.ml[144,4484+5]..[144,4484+20]) ghost
                      pattern (src/ppx.ml[144,4484+5]..[144,4484+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[144,4484+5]..[144,4484+20])
                  ]
                expression (src/ppx.ml[146,4532+4]..[148,4591+80])
                  Pexp_sequence
                  expression (src/ppx.ml[146,4532+4]..[146,4532+38])
                    Pexp_apply
                    expression (src/ppx.ml[146,4532+5]..[146,4532+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[146,4532+5]..[146,4532+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[146,4532+28]..[146,4532+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[146,4532+28]..[146,4532+37])
                    ]
                  expression (src/ppx.ml[148,4591+4]..[148,4591+80])
                    Pexp_apply
                    expression (src/ppx.ml[148,4591+5]..[148,4591+18])
                      Pexp_ident "print_endline" (src/ppx.ml[148,4591+5]..[148,4591+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4591+19]..[148,4591+79])
                          Pexp_apply
                          expression (src/ppx.ml[148,4591+20]..[148,4591+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[148,4591+20]..[148,4591+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[148,4591+35]..[148,4591+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[148,4591+36]..[148,4591+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[148,4591+37]..[148,4591+63]),None)
                                  expression (src/ppx.ml[148,4591+68]..[148,4591+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[148,4591+68]..[148,4591+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[149,4672+4]..[149,4672+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[149,4672+4]..[149,4672+26])
        expression (src/ppx.ml[149,4672+26]..[154,4788+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[149,4672+26]..[149,4672+44])
            Ppat_constraint
            pattern (src/ppx.ml[149,4672+27]..[149,4672+28])
              Ppat_var "x" (src/ppx.ml[149,4672+27]..[149,4672+28])
            core_type (src/ppx.ml[149,4672+29]..[149,4672+43])
              Ptyp_constr "list" (src/ppx.ml[149,4672+39]..[149,4672+43])
              [
                core_type (src/ppx.ml[149,4672+29]..[149,4672+38])
                  Ptyp_constr "core_type" (src/ppx.ml[149,4672+29]..[149,4672+38])
                  []
              ]
          expression (src/ppx.ml[150,4719+2]..[154,4788+29])
            Pexp_match
            expression (src/ppx.ml[150,4719+8]..[150,4719+9])
              Pexp_ident "x" (src/ppx.ml[150,4719+8]..[150,4719+9])
            [
              <case>
                pattern (src/ppx.ml[151,4734+4]..[151,4734+6])
                  Ppat_construct "[]" (src/ppx.ml[151,4734+4]..[151,4734+6])
                  None
                expression (src/ppx.ml[151,4734+10]..[151,4734+12])
                  Pexp_construct "()" (src/ppx.ml[151,4734+10]..[151,4734+12])
                  None
              <case>
                pattern (src/ppx.ml[152,4747+4]..[152,4747+10])
                  Ppat_construct "::" (src/ppx.ml[152,4747+6]..[152,4747+8])
                  Some
                    []
                    pattern (src/ppx.ml[152,4747+4]..[152,4747+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[152,4747+4]..[152,4747+5])
                          Ppat_var "h" (src/ppx.ml[152,4747+4]..[152,4747+5])
                        pattern (src/ppx.ml[152,4747+9]..[152,4747+10])
                          Ppat_var "t" (src/ppx.ml[152,4747+9]..[152,4747+10])
                      ]
                expression (src/ppx.ml[153,4761+4]..[154,4788+29])
                  Pexp_sequence
                  expression (src/ppx.ml[153,4761+4]..[153,4761+25])
                    Pexp_apply
                    expression (src/ppx.ml[153,4761+4]..[153,4761+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[153,4761+4]..[153,4761+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[153,4761+22]..[153,4761+25])
                          Pexp_ident "h" (src/ppx.ml[153,4761+23]..[153,4761+24])
                    ]
                  expression (src/ppx.ml[154,4788+4]..[154,4788+29])
                    Pexp_apply
                    expression (src/ppx.ml[154,4788+4]..[154,4788+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[154,4788+4]..[154,4788+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[154,4788+26]..[154,4788+29])
                          Pexp_ident "t" (src/ppx.ml[154,4788+27]..[154,4788+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[161,4832+0]..[168,5031+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[161,4832+4]..[161,4832+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[161,4832+4]..[161,4832+31])
        expression (src/ppx.ml[161,4832+31]..[168,5031+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[161,4832+31]..[161,4832+34])
            Ppat_var "x" (src/ppx.ml[161,4832+32]..[161,4832+33])
          expression (src/ppx.ml[162,4869+2]..[168,5031+65])
            Pexp_match
            expression (src/ppx.ml[162,4869+8]..[162,4869+9])
              Pexp_ident "x" (src/ppx.ml[162,4869+8]..[162,4869+9])
            [
              <case>
                pattern (src/ppx.ml[163,4884+4]..[163,4884+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[163,4884+4]..[163,4884+15])
                  Some
                    []
                    pattern (src/ppx.ml[163,4884+16]..[163,4884+17])
                      Ppat_var "a" (src/ppx.ml[163,4884+16]..[163,4884+17])
                expression (src/ppx.ml[164,4905+4]..[165,4937+64])
                  Pexp_sequence
                  expression (src/ppx.ml[164,4905+4]..[164,4905+30])
                    Pexp_apply
                    expression (src/ppx.ml[164,4905+5]..[164,4905+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[164,4905+5]..[164,4905+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[164,4905+28]..[164,4905+29])
                          Pexp_ident "a" (src/ppx.ml[164,4905+28]..[164,4905+29])
                    ]
                  expression (src/ppx.ml[165,4937+4]..[165,4937+64])
                    Pexp_apply
                    expression (src/ppx.ml[165,4937+5]..[165,4937+18])
                      Pexp_ident "print_endline" (src/ppx.ml[165,4937+5]..[165,4937+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,4937+19]..[165,4937+63])
                          Pexp_apply
                          expression (src/ppx.ml[165,4937+20]..[165,4937+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[165,4937+20]..[165,4937+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[165,4937+35]..[165,4937+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[165,4937+36]..[165,4937+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[165,4937+37]..[165,4937+55]),None)
                                  expression (src/ppx.ml[165,4937+60]..[165,4937+61])
                                    Pexp_ident "a" (src/ppx.ml[165,4937+60]..[165,4937+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[167,5009+4]..[167,5009+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[167,5009+4]..[167,5009+16])
                  Some
                    []
                    pattern (src/ppx.ml[167,5009+17]..[167,5009+18])
                      Ppat_var "a" (src/ppx.ml[167,5009+17]..[167,5009+18])
                expression (src/ppx.ml[168,5031+4]..[168,5031+65])
                  Pexp_apply
                  expression (src/ppx.ml[168,5031+5]..[168,5031+18])
                    Pexp_ident "print_endline" (src/ppx.ml[168,5031+5]..[168,5031+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[168,5031+19]..[168,5031+64])
                        Pexp_apply
                        expression (src/ppx.ml[168,5031+20]..[168,5031+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[168,5031+20]..[168,5031+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[168,5031+35]..[168,5031+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[168,5031+36]..[168,5031+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[168,5031+37]..[168,5031+56]),None)
                                expression (src/ppx.ml[168,5031+61]..[168,5031+62])
                                  Pexp_ident "a" (src/ppx.ml[168,5031+61]..[168,5031+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[170,5098+0]..[202,6074+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[170,5098+8]..[170,5098+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[170,5098+8]..[170,5098+57])
        expression (src/ppx.ml[170,5098+57]..[202,6074+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[170,5098+57]..[170,5098+60])
            Ppat_var "x" (src/ppx.ml[170,5098+58]..[170,5098+59])
          expression (src/ppx.ml[171,5161+2]..[202,6074+8])
            Pexp_match
            expression (src/ppx.ml[171,5161+8]..[171,5161+9])
              Pexp_ident "x" (src/ppx.ml[171,5161+8]..[171,5161+9])
            [
              <case>
                pattern (src/ppx.ml[172,5176+4]..[172,5176+6])
                  Ppat_construct "[]" (src/ppx.ml[172,5176+4]..[172,5176+6])
                  None
                expression (src/ppx.ml[172,5176+10]..[172,5176+12])
                  Pexp_construct "()" (src/ppx.ml[172,5176+10]..[172,5176+12])
                  None
              <case>
                pattern (src/ppx.ml[173,5189+4]..[173,5189+10])
                  Ppat_construct "::" (src/ppx.ml[173,5189+6]..[173,5189+8])
                  Some
                    []
                    pattern (src/ppx.ml[173,5189+4]..[173,5189+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[173,5189+4]..[173,5189+5])
                          Ppat_var "h" (src/ppx.ml[173,5189+4]..[173,5189+5])
                        pattern (src/ppx.ml[173,5189+9]..[173,5189+10])
                          Ppat_var "t" (src/ppx.ml[173,5189+9]..[173,5189+10])
                      ]
                expression (src/ppx.ml[175,5268+4]..[202,6074+8])
                  Pexp_match
                  expression (src/ppx.ml[175,5268+10]..[175,5268+11])
                    Pexp_ident "h" (src/ppx.ml[175,5268+10]..[175,5268+11])
                  [
                    <case>
                      pattern (src/ppx.ml[176,5285+5]..[183,5523+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[177,5292+6]..[177,5292+14]) ghost
                            pattern (src/ppx.ml[177,5292+6]..[177,5292+14])
                              Ppat_var "pcd_name" (src/ppx.ml[177,5292+6]..[177,5292+14])
                          "pcd_vars" (src/ppx.ml[178,5326+6]..[178,5326+14]) ghost
                            pattern (src/ppx.ml[178,5326+6]..[178,5326+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[178,5326+6]..[178,5326+14])
                          "pcd_args" (src/ppx.ml[179,5365+6]..[179,5365+14]) ghost
                            pattern (src/ppx.ml[179,5365+6]..[179,5365+14])
                              Ppat_var "pcd_args" (src/ppx.ml[179,5365+6]..[179,5365+14])
                          "pcd_res" (src/ppx.ml[180,5410+6]..[180,5410+13]) ghost
                            pattern (src/ppx.ml[180,5410+6]..[180,5410+13])
                              Ppat_var "pcd_res" (src/ppx.ml[180,5410+6]..[180,5410+13])
                          "pcd_loc" (src/ppx.ml[181,5449+6]..[181,5449+13]) ghost
                            pattern (src/ppx.ml[181,5449+6]..[181,5449+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[181,5449+6]..[181,5449+13])
                          "pcd_attributes" (src/ppx.ml[182,5482+6]..[182,5482+20]) ghost
                            pattern (src/ppx.ml[182,5482+6]..[182,5482+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[182,5482+6]..[182,5482+20])
                        ]
                      expression (src/ppx.ml[186,5605+6]..[202,6074+8])
                        Pexp_sequence
                        expression (src/ppx.ml[186,5605+6]..[186,5605+43])
                          Pexp_apply
                          expression (src/ppx.ml[186,5605+6]..[186,5605+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[186,5605+6]..[186,5605+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[186,5605+33]..[186,5605+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[186,5605+34]..[186,5605+42])
                          ]
                        expression (src/ppx.ml[187,5650+6]..[202,6074+8])
                          Pexp_sequence
                          expression (src/ppx.ml[187,5650+6]..[200,5995+16])
                            Pexp_apply
                            expression (src/ppx.ml[187,5650+7]..[187,5650+20])
                              Pexp_ident "print_endline" (src/ppx.ml[187,5650+7]..[187,5650+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[187,5650+21]..[200,5995+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[187,5650+22]..[187,5650+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[187,5650+22]..[187,5650+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[187,5650+37]..[200,5995+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[188,5689+11]..[188,5689+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[188,5689+12]..[188,5689+36]),None)
                                          expression (src/ppx.ml[189,5728+15]..[189,5728+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[189,5728+15]..[189,5728+23])
                                          expression (src/ppx.ml[190,5753+15]..[190,5753+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[190,5753+16]..[190,5753+20]),None)
                                          expression (src/ppx.ml[191,5776+15]..[191,5776+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[191,5776+15]..[191,5776+23])
                                          expression (src/ppx.ml[192,5801+15]..[192,5801+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[192,5801+16]..[192,5801+20]),None)
                                          expression (src/ppx.ml[193,5824+15]..[193,5824+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[193,5824+15]..[193,5824+23])
                                          expression (src/ppx.ml[194,5849+15]..[194,5849+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[194,5849+16]..[194,5849+19]),None)
                                          expression (src/ppx.ml[195,5871+15]..[195,5871+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[195,5871+15]..[195,5871+22])
                                          expression (src/ppx.ml[196,5895+15]..[196,5895+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[196,5895+16]..[196,5895+19]),None)
                                          expression (src/ppx.ml[197,5917+15]..[197,5917+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[197,5917+15]..[197,5917+22])
                                          expression (src/ppx.ml[198,5941+15]..[198,5941+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[198,5941+16]..[198,5941+21]),None)
                                          expression (src/ppx.ml[199,5965+15]..[199,5965+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[199,5965+15]..[199,5965+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[201,6013+6]..[202,6074+8])
                            Pexp_sequence
                            expression (src/ppx.ml[201,6013+6]..[201,6013+59])
                              Pexp_apply
                              expression (src/ppx.ml[201,6013+7]..[201,6013+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[201,6013+7]..[201,6013+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[201,6013+57]..[201,6013+58])
                                    Pexp_ident "t" (src/ppx.ml[201,6013+57]..[201,6013+58])
                              ]
                            expression (src/ppx.ml[202,6074+6]..[202,6074+8])
                              Pexp_construct "()" (src/ppx.ml[202,6074+6]..[202,6074+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[204,6086+0]..[215,6483+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[204,6086+4]..[204,6086+16])
          Ppat_var "process_kind" (src/ppx.ml[204,6086+4]..[204,6086+16])
        expression (src/ppx.ml[204,6086+16]..[215,6483+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[204,6086+16]..[204,6086+19])
            Ppat_var "x" (src/ppx.ml[204,6086+17]..[204,6086+18])
          expression (src/ppx.ml[205,6108+2]..[215,6483+77])
            Pexp_match
            expression (src/ppx.ml[205,6108+8]..[205,6108+9])
              Pexp_ident "x" (src/ppx.ml[205,6108+8]..[205,6108+9])
            [
              <case>
                pattern (src/ppx.ml[207,6145+4]..[207,6145+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[207,6145+4]..[207,6145+18])
                  None
                expression (src/ppx.ml[207,6145+23]..[207,6145+81])
                  Pexp_apply
                  expression (src/ppx.ml[207,6145+24]..[207,6145+37])
                    Pexp_ident "print_endline" (src/ppx.ml[207,6145+24]..[207,6145+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[207,6145+38]..[207,6145+80])
                        Pexp_apply
                        expression (src/ppx.ml[207,6145+39]..[207,6145+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[207,6145+39]..[207,6145+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[207,6145+54]..[207,6145+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[207,6145+56]..[207,6145+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[208,6227+4]..[208,6227+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[208,6227+4]..[208,6227+17])
                  Some
                    []
                    pattern (src/ppx.ml[208,6227+18]..[208,6227+19])
                      Ppat_var "a" (src/ppx.ml[208,6227+18]..[208,6227+19])
                expression (src/ppx.ml[209,6250+4]..[210,6309+65])
                  Pexp_sequence
                  expression (src/ppx.ml[209,6250+4]..[209,6250+57])
                    Pexp_apply
                    expression (src/ppx.ml[209,6250+5]..[209,6250+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[209,6250+5]..[209,6250+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[209,6250+55]..[209,6250+56])
                          Pexp_ident "a" (src/ppx.ml[209,6250+55]..[209,6250+56])
                    ]
                  expression (src/ppx.ml[210,6309+4]..[210,6309+65])
                    Pexp_apply
                    expression (src/ppx.ml[210,6309+5]..[210,6309+18])
                      Pexp_ident "print_endline" (src/ppx.ml[210,6309+5]..[210,6309+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[210,6309+19]..[210,6309+64])
                          Pexp_apply
                          expression (src/ppx.ml[210,6309+20]..[210,6309+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[210,6309+20]..[210,6309+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[210,6309+35]..[210,6309+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[210,6309+36]..[210,6309+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[210,6309+37]..[210,6309+57]),None)
                                  expression (src/ppx.ml[210,6309+61]..[210,6309+62])
                                    Pexp_ident "a" (src/ppx.ml[210,6309+61]..[210,6309+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[213,6422+5]..[213,6422+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[213,6422+5]..[213,6422+17])
                  Some
                    []
                    pattern (src/ppx.ml[213,6422+18]..[213,6422+19])
                      Ppat_var "a" (src/ppx.ml[213,6422+18]..[213,6422+19])
                expression (src/ppx.ml[214,6450+5]..[214,6450+32])
                  Pexp_apply
                  expression (src/ppx.ml[214,6450+5]..[214,6450+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[214,6450+5]..[214,6450+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[214,6450+29]..[214,6450+32])
                        Pexp_ident "a" (src/ppx.ml[214,6450+30]..[214,6450+31])
                  ]
              <case>
                pattern (src/ppx.ml[215,6483+5]..[215,6483+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[215,6483+5]..[215,6483+15])
                  None
                expression (src/ppx.ml[215,6483+19]..[215,6483+77])
                  Pexp_apply
                  expression (src/ppx.ml[215,6483+20]..[215,6483+33])
                    Pexp_ident "print_endline" (src/ppx.ml[215,6483+20]..[215,6483+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[215,6483+34]..[215,6483+76])
                        Pexp_apply
                        expression (src/ppx.ml[215,6483+35]..[215,6483+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[215,6483+35]..[215,6483+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[215,6483+50]..[215,6483+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[215,6483+52]..[215,6483+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[217,6562+0]..[238,7568+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[217,6562+4]..[217,6562+19])
          Ppat_var "print_type_decl" (src/ppx.ml[217,6562+4]..[217,6562+19])
        expression (src/ppx.ml[217,6562+19]..[238,7568+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[217,6562+19]..[217,6562+22])
            Ppat_var "x" (src/ppx.ml[217,6562+20]..[217,6562+21])
          expression (src/ppx.ml[218,6587+2]..[238,7568+38])
            Pexp_match
            expression (src/ppx.ml[218,6587+8]..[218,6587+9])
              Pexp_ident "x" (src/ppx.ml[218,6587+8]..[218,6587+9])
            [
              <case>
                pattern (src/ppx.ml[219,6602+4]..[228,6983+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[220,6608+6]..[220,6608+16]) ghost
                      pattern (src/ppx.ml[220,6608+6]..[220,6608+16])
                        Ppat_var "ptype_name" (src/ppx.ml[220,6608+6]..[220,6608+16])
                    "ptype_params" (src/ppx.ml[221,6645+6]..[221,6645+18]) ghost
                      pattern (src/ppx.ml[221,6645+6]..[221,6645+18])
                        Ppat_var "ptype_params" (src/ppx.ml[221,6645+6]..[221,6645+18])
                    "ptype_cstrs" (src/ppx.ml[222,6717+6]..[222,6717+17]) ghost
                      pattern (src/ppx.ml[222,6717+6]..[222,6717+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[222,6717+6]..[222,6717+17])
                    "ptype_kind" (src/ppx.ml[223,6786+6]..[223,6786+16]) ghost
                      pattern (src/ppx.ml[223,6786+6]..[223,6786+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[223,6786+6]..[223,6786+16])
                    "ptype_private" (src/ppx.ml[224,6823+6]..[224,6823+19]) ghost
                      pattern (src/ppx.ml[224,6823+6]..[224,6823+19])
                        Ppat_var "ptype_private" (src/ppx.ml[224,6823+6]..[224,6823+19])
                    "ptype_manifest" (src/ppx.ml[225,6864+6]..[225,6864+20]) ghost
                      pattern (src/ppx.ml[225,6864+6]..[225,6864+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[225,6864+6]..[225,6864+20])
                    "ptype_attributes" (src/ppx.ml[226,6911+6]..[226,6911+22]) ghost
                      pattern (src/ppx.ml[226,6911+6]..[226,6911+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[226,6911+6]..[226,6911+22])
                    "ptype_loc" (src/ppx.ml[227,6952+6]..[227,6952+15]) ghost
                      pattern (src/ppx.ml[227,6952+6]..[227,6952+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[227,6952+6]..[227,6952+15])
                  ]
                expression (src/ppx.ml[229,6992+4]..[238,7568+38])
                  Pexp_sequence
                  expression (src/ppx.ml[229,6992+4]..[229,6992+69])
                    Pexp_apply
                    expression (src/ppx.ml[229,6992+5]..[229,6992+18])
                      Pexp_ident "print_endline" (src/ppx.ml[229,6992+5]..[229,6992+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[229,6992+19]..[229,6992+68])
                          Pexp_apply
                          expression (src/ppx.ml[229,6992+20]..[229,6992+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[229,6992+20]..[229,6992+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[229,6992+35]..[229,6992+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[229,6992+36]..[229,6992+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[229,6992+37]..[229,6992+53]),None)
                                  expression (src/ppx.ml[229,6992+56]..[229,6992+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[229,6992+56]..[229,6992+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[230,7063+4]..[238,7568+38])
                    Pexp_sequence
                    expression (src/ppx.ml[230,7063+4]..[230,7063+72])
                      Pexp_apply
                      expression (src/ppx.ml[230,7063+5]..[230,7063+18])
                        Pexp_ident "print_endline" (src/ppx.ml[230,7063+5]..[230,7063+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[230,7063+19]..[230,7063+71])
                            Pexp_apply
                            expression (src/ppx.ml[230,7063+20]..[230,7063+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[230,7063+20]..[230,7063+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[230,7063+35]..[230,7063+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[230,7063+36]..[230,7063+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[230,7063+37]..[230,7063+54]),None)
                                    expression (src/ppx.ml[230,7063+57]..[230,7063+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[230,7063+57]..[230,7063+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[231,7137+4]..[238,7568+38])
                      Pexp_sequence
                      expression (src/ppx.ml[231,7137+4]..[231,7137+66])
                        Pexp_apply
                        expression (src/ppx.ml[231,7137+5]..[231,7137+18])
                          Pexp_ident "print_endline" (src/ppx.ml[231,7137+5]..[231,7137+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[231,7137+19]..[231,7137+65])
                              Pexp_apply
                              expression (src/ppx.ml[231,7137+20]..[231,7137+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[231,7137+20]..[231,7137+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[231,7137+35]..[231,7137+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[231,7137+36]..[231,7137+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[231,7137+37]..[231,7137+49]),None)
                                      expression (src/ppx.ml[231,7137+52]..[231,7137+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[231,7137+52]..[231,7137+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[232,7205+4]..[238,7568+38])
                        Pexp_sequence
                        expression (src/ppx.ml[232,7205+4]..[232,7205+63])
                          Pexp_apply
                          expression (src/ppx.ml[232,7205+5]..[232,7205+18])
                            Pexp_ident "print_endline" (src/ppx.ml[232,7205+5]..[232,7205+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[232,7205+19]..[232,7205+62])
                                Pexp_apply
                                expression (src/ppx.ml[232,7205+20]..[232,7205+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[232,7205+20]..[232,7205+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[232,7205+35]..[232,7205+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[232,7205+36]..[232,7205+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[232,7205+37]..[232,7205+48]),None)
                                        expression (src/ppx.ml[232,7205+50]..[232,7205+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[232,7205+50]..[232,7205+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[233,7270+4]..[238,7568+38])
                          Pexp_sequence
                          expression (src/ppx.ml[233,7270+4]..[233,7270+29])
                            Pexp_apply
                            expression (src/ppx.ml[233,7270+5]..[233,7270+17])
                              Pexp_ident "process_kind" (src/ppx.ml[233,7270+5]..[233,7270+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[233,7270+18]..[233,7270+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[233,7270+18]..[233,7270+28])
                            ]
                          expression (src/ppx.ml[234,7301+4]..[238,7568+38])
                            Pexp_apply
                            expression (src/ppx.ml[234,7301+5]..[234,7301+18])
                              Pexp_ident "print_endline" (src/ppx.ml[234,7301+5]..[234,7301+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[234,7301+19]..[238,7568+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[234,7301+20]..[234,7301+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[234,7301+20]..[234,7301+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[234,7301+35]..[238,7568+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[234,7301+36]..[234,7301+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[234,7301+37]..[234,7301+51]),None)
                                          expression (src/ppx.ml[234,7301+55]..[234,7301+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[234,7301+55]..[234,7301+68])
                                          expression (src/ppx.ml[235,7371+36]..[235,7371+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[235,7371+37]..[235,7371+51]),None)
                                          expression (src/ppx.ml[235,7371+54]..[235,7371+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[235,7371+54]..[235,7371+68])
                                          expression (src/ppx.ml[236,7441+36]..[236,7441+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[236,7441+37]..[236,7441+47]),None)
                                          expression (src/ppx.ml[236,7441+50]..[236,7441+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[236,7441+50]..[236,7441+66])
                                          expression (src/ppx.ml[237,7509+36]..[237,7509+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[237,7509+37]..[237,7509+46]),None)
                                          expression (src/ppx.ml[237,7509+49]..[237,7509+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[237,7509+49]..[237,7509+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[240,7612+0]..[246,7747+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[240,7612+8]..[240,7612+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[240,7612+8]..[240,7612+30])
        expression (src/ppx.ml[240,7612+30]..[246,7747+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[240,7612+30]..[240,7612+33])
            Ppat_var "x" (src/ppx.ml[240,7612+31]..[240,7612+32])
          expression (src/ppx.ml[241,7648+2]..[246,7747+6])
            Pexp_match
            expression (src/ppx.ml[241,7648+8]..[241,7648+9])
              Pexp_ident "x" (src/ppx.ml[241,7648+8]..[241,7648+9])
            [
              <case>
                pattern (src/ppx.ml[242,7663+4]..[242,7663+6])
                  Ppat_construct "[]" (src/ppx.ml[242,7663+4]..[242,7663+6])
                  None
                expression (src/ppx.ml[242,7663+10]..[242,7663+12])
                  Pexp_construct "()" (src/ppx.ml[242,7663+10]..[242,7663+12])
                  None
              <case>
                pattern (src/ppx.ml[243,7676+4]..[243,7676+10])
                  Ppat_construct "::" (src/ppx.ml[243,7676+6]..[243,7676+8])
                  Some
                    []
                    pattern (src/ppx.ml[243,7676+4]..[243,7676+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[243,7676+4]..[243,7676+5])
                          Ppat_var "h" (src/ppx.ml[243,7676+4]..[243,7676+5])
                        pattern (src/ppx.ml[243,7676+9]..[243,7676+10])
                          Ppat_var "t" (src/ppx.ml[243,7676+9]..[243,7676+10])
                      ]
                expression (src/ppx.ml[244,7690+4]..[246,7747+6])
                  Pexp_sequence
                  expression (src/ppx.ml[244,7690+4]..[244,7690+23])
                    Pexp_apply
                    expression (src/ppx.ml[244,7690+5]..[244,7690+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[244,7690+5]..[244,7690+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[244,7690+21]..[244,7690+22])
                          Pexp_ident "h" (src/ppx.ml[244,7690+21]..[244,7690+22])
                    ]
                  expression (src/ppx.ml[245,7715+4]..[246,7747+6])
                    Pexp_sequence
                    expression (src/ppx.ml[245,7715+4]..[245,7715+30])
                      Pexp_apply
                      expression (src/ppx.ml[245,7715+5]..[245,7715+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[245,7715+5]..[245,7715+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[245,7715+28]..[245,7715+29])
                            Pexp_ident "t" (src/ppx.ml[245,7715+28]..[245,7715+29])
                      ]
                    expression (src/ppx.ml[246,7747+4]..[246,7747+6])
                      Pexp_construct "()" (src/ppx.ml[246,7747+4]..[246,7747+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[248,7759+0]..[274,9723+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[248,7759+4]..[248,7759+13])
          Ppat_var "printdesc" (src/ppx.ml[248,7759+4]..[248,7759+13])
        expression (src/ppx.ml[248,7759+13]..[274,9723+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[248,7759+13]..[248,7759+37])
            Ppat_constraint
            pattern (src/ppx.ml[248,7759+14]..[248,7759+15])
              Ppat_var "x" (src/ppx.ml[248,7759+14]..[248,7759+15])
            core_type (src/ppx.ml[248,7759+17]..[248,7759+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[248,7759+17]..[248,7759+36])
              []
          expression (src/ppx.ml[248,7759+38]..[274,9723+128])
            Pexp_constraint
            expression (src/ppx.ml[249,7805+2]..[274,9723+128])
              Pexp_sequence
              expression (src/ppx.ml[249,7805+2]..[249,7805+68])
                Pexp_apply
                expression (src/ppx.ml[249,7805+3]..[249,7805+16])
                  Pexp_ident "print_endline" (src/ppx.ml[249,7805+3]..[249,7805+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[249,7805+17]..[249,7805+67])
                      Pexp_apply
                      expression (src/ppx.ml[249,7805+18]..[249,7805+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[249,7805+18]..[249,7805+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[249,7805+33]..[249,7805+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[249,7805+34]..[249,7805+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[249,7805+35]..[249,7805+61]),None)
                              expression (src/ppx.ml[249,7805+64]..[249,7805+65])
                                Pexp_ident "x" (src/ppx.ml[249,7805+64]..[249,7805+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[250,7875+2]..[274,9723+128])
                Pexp_match
                expression (src/ppx.ml[250,7875+8]..[250,7875+9])
                  Pexp_ident "x" (src/ppx.ml[250,7875+8]..[250,7875+9])
                [
                  <case>
                    pattern (src/ppx.ml[251,7890+4]..[251,7890+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[251,7890+4]..[251,7890+13])
                      Some
                        []
                        pattern (src/ppx.ml[251,7890+14]..[251,7890+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[251,7890+15]..[251,7890+25])
                              Ppat_var "expression" (src/ppx.ml[251,7890+15]..[251,7890+25])
                            pattern (src/ppx.ml[251,7890+26]..[251,7890+36])
                              Ppat_var "attributes" (src/ppx.ml[251,7890+26]..[251,7890+36])
                          ]
                    expression (src/ppx.ml[251,7890+41]..[251,7890+117])
                      Pexp_apply
                      expression (src/ppx.ml[251,7890+42]..[251,7890+55])
                        Pexp_ident "print_endline" (src/ppx.ml[251,7890+42]..[251,7890+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7890+56]..[251,7890+116])
                            Pexp_apply
                            expression (src/ppx.ml[251,7890+57]..[251,7890+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[251,7890+57]..[251,7890+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[251,7890+72]..[251,7890+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[251,7890+73]..[251,7890+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[251,7890+74]..[251,7890+90]),None)
                                    expression (src/ppx.ml[251,7890+93]..[251,7890+103])
                                      Pexp_ident "expression" (src/ppx.ml[251,7890+93]..[251,7890+103])
                                    expression (src/ppx.ml[251,7890+104]..[251,7890+114])
                                      Pexp_ident "attributes" (src/ppx.ml[251,7890+104]..[251,7890+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[253,8028+4]..[253,8028+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[253,8028+4]..[253,8028+14])
                      Some
                        []
                        pattern (src/ppx.ml[253,8028+15]..[253,8028+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,8028+16]..[253,8028+24])
                              Ppat_var "rec_flag" (src/ppx.ml[253,8028+16]..[253,8028+24])
                            pattern (src/ppx.ml[253,8028+26]..[253,8028+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[253,8028+26]..[253,8028+44])
                          ]
                    expression (src/ppx.ml[253,8028+48]..[254,8162+48])
                      Pexp_sequence
                      expression (src/ppx.ml[253,8028+48]..[253,8028+132])
                        Pexp_apply
                        expression (src/ppx.ml[253,8028+49]..[253,8028+62])
                          Pexp_ident "print_endline" (src/ppx.ml[253,8028+49]..[253,8028+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[253,8028+63]..[253,8028+131])
                              Pexp_apply
                              expression (src/ppx.ml[253,8028+64]..[253,8028+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[253,8028+64]..[253,8028+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[253,8028+79]..[253,8028+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[253,8028+80]..[253,8028+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[253,8028+81]..[253,8028+98]),None)
                                      expression (src/ppx.ml[253,8028+101]..[253,8028+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[253,8028+101]..[253,8028+109])
                                      expression (src/ppx.ml[253,8028+111]..[253,8028+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[253,8028+111]..[253,8028+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[254,8162+4]..[254,8162+48])
                        Pexp_apply
                        expression (src/ppx.ml[254,8162+4]..[254,8162+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[254,8162+4]..[254,8162+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[254,8162+28]..[254,8162+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[254,8162+29]..[254,8162+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[255,8211+4]..[255,8211+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[255,8211+4]..[255,8211+18])
                      Some
                        []
                        pattern (src/ppx.ml[255,8211+19]..[255,8211+36])
                          Ppat_var "value_description" (src/ppx.ml[255,8211+19]..[255,8211+36])
                    expression (src/ppx.ml[255,8211+39]..[255,8211+116])
                      Pexp_apply
                      expression (src/ppx.ml[255,8211+40]..[255,8211+53])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8211+40]..[255,8211+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8211+54]..[255,8211+115])
                            Pexp_apply
                            expression (src/ppx.ml[255,8211+55]..[255,8211+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8211+55]..[255,8211+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8211+70]..[255,8211+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8211+71]..[255,8211+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[255,8211+72]..[255,8211+93]),None)
                                    expression (src/ppx.ml[255,8211+96]..[255,8211+113])
                                      Pexp_ident "value_description" (src/ppx.ml[255,8211+96]..[255,8211+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8329+4]..[257,8329+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[257,8329+4]..[257,8329+13])
                      Some
                        []
                        pattern (src/ppx.ml[257,8329+14]..[257,8329+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[257,8329+15]..[257,8329+23])
                              Ppat_var "rec_flag" (src/ppx.ml[257,8329+15]..[257,8329+23])
                            pattern (src/ppx.ml[257,8329+25]..[257,8329+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[257,8329+25]..[257,8329+46])
                          ]
                    expression (src/ppx.ml[259,8408+4]..[260,8459+90])
                      Pexp_sequence
                      expression (src/ppx.ml[259,8408+4]..[259,8408+49])
                        Pexp_apply
                        expression (src/ppx.ml[259,8408+4]..[259,8408+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[259,8408+4]..[259,8408+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[259,8408+26]..[259,8408+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[259,8408+27]..[259,8408+48])
                        ]
                      expression (src/ppx.ml[260,8459+4]..[260,8459+90])
                        Pexp_apply
                        expression (src/ppx.ml[260,8459+5]..[260,8459+18])
                          Pexp_ident "print_endline" (src/ppx.ml[260,8459+5]..[260,8459+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[260,8459+19]..[260,8459+89])
                              Pexp_apply
                              expression (src/ppx.ml[260,8459+20]..[260,8459+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[260,8459+20]..[260,8459+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[260,8459+35]..[260,8459+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[260,8459+36]..[260,8459+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[260,8459+37]..[260,8459+53]),None)
                                      expression (src/ppx.ml[260,8459+56]..[260,8459+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[260,8459+56]..[260,8459+64])
                                      expression (src/ppx.ml[260,8459+66]..[260,8459+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[260,8459+66]..[260,8459+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[263,8552+4]..[263,8552+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[263,8552+4]..[263,8552+15])
                      Some
                        []
                        pattern (src/ppx.ml[263,8552+17]..[263,8552+31])
                          Ppat_var "type_extension" (src/ppx.ml[263,8552+17]..[263,8552+31])
                    expression (src/ppx.ml[263,8552+34]..[263,8552+105])
                      Pexp_apply
                      expression (src/ppx.ml[263,8552+35]..[263,8552+48])
                        Pexp_ident "print_endline" (src/ppx.ml[263,8552+35]..[263,8552+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[263,8552+49]..[263,8552+104])
                            Pexp_apply
                            expression (src/ppx.ml[263,8552+50]..[263,8552+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[263,8552+50]..[263,8552+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[263,8552+65]..[263,8552+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[263,8552+66]..[263,8552+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[263,8552+67]..[263,8552+85]),None)
                                    expression (src/ppx.ml[263,8552+88]..[263,8552+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[263,8552+88]..[263,8552+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,8658+4]..[264,8658+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[264,8658+4]..[264,8658+18])
                      Some
                        []
                        pattern (src/ppx.ml[264,8658+19]..[264,8658+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[264,8658+19]..[264,8658+40])
                    expression (src/ppx.ml[264,8658+43]..[264,8658+124])
                      Pexp_apply
                      expression (src/ppx.ml[264,8658+44]..[264,8658+57])
                        Pexp_ident "print_endline" (src/ppx.ml[264,8658+44]..[264,8658+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,8658+58]..[264,8658+123])
                            Pexp_apply
                            expression (src/ppx.ml[264,8658+59]..[264,8658+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[264,8658+59]..[264,8658+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[264,8658+74]..[264,8658+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[264,8658+75]..[264,8658+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[264,8658+76]..[264,8658+97]),None)
                                    expression (src/ppx.ml[264,8658+100]..[264,8658+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[264,8658+100]..[264,8658+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[265,8783+4]..[265,8783+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[265,8783+4]..[265,8783+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8783+17]..[265,8783+31])
                          Ppat_var "module_binding" (src/ppx.ml[265,8783+17]..[265,8783+31])
                    expression (src/ppx.ml[265,8783+34]..[265,8783+104])
                      Pexp_apply
                      expression (src/ppx.ml[265,8783+35]..[265,8783+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8783+35]..[265,8783+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8783+49]..[265,8783+103])
                            Pexp_apply
                            expression (src/ppx.ml[265,8783+50]..[265,8783+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8783+50]..[265,8783+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8783+65]..[265,8783+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8783+66]..[265,8783+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[265,8783+67]..[265,8783+85]),None)
                                    expression (src/ppx.ml[265,8783+87]..[265,8783+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[265,8783+87]..[265,8783+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8888+4]..[266,8888+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[266,8888+4]..[266,8888+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8888+20]..[266,8888+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[266,8888+20]..[266,8888+39])
                    expression (src/ppx.ml[266,8888+42]..[266,8888+121])
                      Pexp_apply
                      expression (src/ppx.ml[266,8888+43]..[266,8888+56])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8888+43]..[266,8888+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8888+57]..[266,8888+120])
                            Pexp_apply
                            expression (src/ppx.ml[266,8888+58]..[266,8888+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8888+58]..[266,8888+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8888+73]..[266,8888+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8888+74]..[266,8888+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[266,8888+75]..[266,8888+96]),None)
                                    expression (src/ppx.ml[266,8888+99]..[266,8888+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[266,8888+99]..[266,8888+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,9010+4]..[267,9010+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[267,9010+4]..[267,9010+16])
                      Some
                        []
                        pattern (src/ppx.ml[267,9010+17]..[267,9010+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[267,9010+17]..[267,9010+40])
                    expression (src/ppx.ml[267,9010+43]..[267,9010+124])
                      Pexp_apply
                      expression (src/ppx.ml[267,9010+44]..[267,9010+57])
                        Pexp_ident "print_endline" (src/ppx.ml[267,9010+44]..[267,9010+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,9010+58]..[267,9010+123])
                            Pexp_apply
                            expression (src/ppx.ml[267,9010+59]..[267,9010+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,9010+59]..[267,9010+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,9010+74]..[267,9010+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,9010+75]..[267,9010+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[267,9010+76]..[267,9010+95]),None)
                                    expression (src/ppx.ml[267,9010+98]..[267,9010+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[267,9010+98]..[267,9010+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9152+4]..[269,9152+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[269,9152+4]..[269,9152+13])
                      Some
                        []
                        pattern (src/ppx.ml[269,9152+14]..[269,9152+30])
                          Ppat_var "open_description" (src/ppx.ml[269,9152+14]..[269,9152+30])
                    expression (src/ppx.ml[269,9152+33]..[269,9152+103])
                      Pexp_apply
                      expression (src/ppx.ml[269,9152+34]..[269,9152+47])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9152+34]..[269,9152+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9152+48]..[269,9152+102])
                            Pexp_apply
                            expression (src/ppx.ml[269,9152+49]..[269,9152+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9152+49]..[269,9152+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9152+64]..[269,9152+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9152+65]..[269,9152+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[269,9152+66]..[269,9152+81]),None)
                                    expression (src/ppx.ml[269,9152+84]..[269,9152+100])
                                      Pexp_ident "open_description" (src/ppx.ml[269,9152+84]..[269,9152+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[270,9256+4]..[270,9256+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[270,9256+4]..[270,9256+14])
                      Some
                        []
                        pattern (src/ppx.ml[270,9256+15]..[270,9256+36])
                          Ppat_var "class_declarations" (src/ppx.ml[270,9256+16]..[270,9256+34])
                    expression (src/ppx.ml[270,9256+39]..[270,9256+113])
                      Pexp_apply
                      expression (src/ppx.ml[270,9256+40]..[270,9256+53])
                        Pexp_ident "print_endline" (src/ppx.ml[270,9256+40]..[270,9256+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,9256+54]..[270,9256+112])
                            Pexp_apply
                            expression (src/ppx.ml[270,9256+55]..[270,9256+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,9256+55]..[270,9256+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,9256+70]..[270,9256+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,9256+71]..[270,9256+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[270,9256+72]..[270,9256+89]),None)
                                    expression (src/ppx.ml[270,9256+92]..[270,9256+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[270,9256+92]..[270,9256+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9370+4]..[271,9370+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[271,9370+4]..[271,9370+19])
                      Some
                        []
                        pattern (src/ppx.ml[271,9370+20]..[271,9370+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[271,9370+21]..[271,9370+44])
                    expression (src/ppx.ml[271,9370+48]..[271,9370+132])
                      Pexp_apply
                      expression (src/ppx.ml[271,9370+49]..[271,9370+62])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9370+49]..[271,9370+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9370+63]..[271,9370+131])
                            Pexp_apply
                            expression (src/ppx.ml[271,9370+64]..[271,9370+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9370+64]..[271,9370+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9370+79]..[271,9370+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9370+80]..[271,9370+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[271,9370+81]..[271,9370+103]),None)
                                    expression (src/ppx.ml[271,9370+106]..[271,9370+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[271,9370+106]..[271,9370+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9503+4]..[272,9503+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[272,9503+4]..[272,9503+16])
                      Some
                        []
                        pattern (src/ppx.ml[272,9503+18]..[272,9503+39])
                          Ppat_var "include_declaration" (src/ppx.ml[272,9503+19]..[272,9503+38])
                    expression (src/ppx.ml[272,9503+41]..[272,9503+117])
                      Pexp_apply
                      expression (src/ppx.ml[272,9503+42]..[272,9503+55])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9503+42]..[272,9503+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9503+56]..[272,9503+116])
                            Pexp_apply
                            expression (src/ppx.ml[272,9503+57]..[272,9503+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9503+57]..[272,9503+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9503+72]..[272,9503+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9503+73]..[272,9503+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[272,9503+74]..[272,9503+93]),None)
                                    expression (src/ppx.ml[272,9503+95]..[272,9503+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[272,9503+95]..[272,9503+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9621+4]..[273,9621+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[273,9621+4]..[273,9621+18])
                      Some
                        []
                        pattern (src/ppx.ml[273,9621+19]..[273,9621+30])
                          Ppat_var "attribute" (src/ppx.ml[273,9621+20]..[273,9621+29])
                    expression (src/ppx.ml[273,9621+32]..[273,9621+101])
                      Pexp_apply
                      expression (src/ppx.ml[273,9621+33]..[273,9621+46])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9621+33]..[273,9621+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9621+47]..[273,9621+100])
                            Pexp_apply
                            expression (src/ppx.ml[273,9621+48]..[273,9621+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9621+48]..[273,9621+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9621+63]..[273,9621+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9621+64]..[273,9621+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[273,9621+65]..[273,9621+86]),None)
                                    expression (src/ppx.ml[273,9621+89]..[273,9621+98])
                                      Pexp_ident "attribute" (src/ppx.ml[273,9621+89]..[273,9621+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9723+4]..[274,9723+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[274,9723+4]..[274,9723+18])
                      Some
                        []
                        pattern (src/ppx.ml[274,9723+19]..[274,9723+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[274,9723+21]..[274,9723+30])
                              Ppat_var "extension" (src/ppx.ml[274,9723+21]..[274,9723+30])
                            pattern (src/ppx.ml[274,9723+33]..[274,9723+43])
                              Ppat_var "attributes" (src/ppx.ml[274,9723+33]..[274,9723+43])
                          ]
                    expression (src/ppx.ml[274,9723+46]..[274,9723+128])
                      Pexp_apply
                      expression (src/ppx.ml[274,9723+47]..[274,9723+60])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9723+47]..[274,9723+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9723+61]..[274,9723+127])
                            Pexp_apply
                            expression (src/ppx.ml[274,9723+62]..[274,9723+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9723+62]..[274,9723+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9723+77]..[274,9723+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9723+78]..[274,9723+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[274,9723+79]..[274,9723+100]),None)
                                    expression (src/ppx.ml[274,9723+103]..[274,9723+112])
                                      Pexp_ident "extension" (src/ppx.ml[274,9723+103]..[274,9723+112])
                                    expression (src/ppx.ml[274,9723+115]..[274,9723+125])
                                      Pexp_ident "attributes" (src/ppx.ml[274,9723+115]..[274,9723+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[248,7759+39]..[248,7759+43])
              Ptyp_constr "unit" (src/ppx.ml[248,7759+39]..[248,7759+43])
              []
    ]
  structure_item (src/ppx.ml[276,9853+0]..[276,9853+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[276,9853+4]..[276,9853+7])
          Ppat_var "foo" (src/ppx.ml[276,9853+4]..[276,9853+7])
        expression (src/ppx.ml[276,9853+10]..[276,9853+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[278,9868+0]..[286,10087+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9868+4]..[278,9868+12])
          Ppat_var "printone" (src/ppx.ml[278,9868+4]..[278,9868+12])
        expression (src/ppx.ml[278,9868+13]..[286,10087+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[278,9868+13]..[278,9868+34])
            Ppat_constraint
            pattern (src/ppx.ml[278,9868+14]..[278,9868+15])
              Ppat_var "x" (src/ppx.ml[278,9868+14]..[278,9868+15])
            core_type (src/ppx.ml[278,9868+18]..[278,9868+32])
              Ptyp_constr "structure_item" (src/ppx.ml[278,9868+18]..[278,9868+32])
              []
          expression (src/ppx.ml[278,9868+35]..[286,10087+6])
            Pexp_constraint
            expression (src/ppx.ml[279,9911+2]..[286,10087+6])
              Pexp_match
              expression (src/ppx.ml[279,9911+8]..[279,9911+9])
                Pexp_ident "x" (src/ppx.ml[279,9911+8]..[279,9911+9])
              [
                <case>
                  pattern (src/ppx.ml[280,9926+3]..[283,9976+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[281,9931+4]..[281,9931+13]) ghost
                        pattern (src/ppx.ml[281,9931+4]..[281,9931+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[281,9931+4]..[281,9931+13])
                    ]
                  expression (src/ppx.ml[285,10060+4]..[286,10087+6])
                    Pexp_sequence
                    expression (src/ppx.ml[285,10060+4]..[285,10060+25])
                      Pexp_apply
                      expression (src/ppx.ml[285,10060+5]..[285,10060+14])
                        Pexp_ident "printdesc" (src/ppx.ml[285,10060+5]..[285,10060+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,10060+15]..[285,10060+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[285,10060+15]..[285,10060+24])
                      ]
                    expression (src/ppx.ml[286,10087+4]..[286,10087+6])
                      Pexp_construct "()" (src/ppx.ml[286,10087+4]..[286,10087+6])
                      None
              ]
            core_type (src/ppx.ml[278,9868+36]..[278,9868+40])
              Ptyp_constr "unit" (src/ppx.ml[278,9868+36]..[278,9868+40])
              []
    ]
  structure_item (src/ppx.ml[292,10207+0]..[294,10288+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[292,10207+4]..[292,10207+13])
          Ppat_var "printone2" (src/ppx.ml[292,10207+4]..[292,10207+13])
        expression (src/ppx.ml[292,10207+14]..[294,10288+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[292,10207+14]..[292,10207+15])
            Ppat_var "x" (src/ppx.ml[292,10207+14]..[292,10207+15])
          expression (src/ppx.ml[292,10207+16]..[294,10288+12])
            Pexp_constraint
            expression (src/ppx.ml[293,10231+2]..[294,10288+12])
              Pexp_sequence
              expression (src/ppx.ml[293,10231+2]..[293,10231+55])
                Pexp_apply
                expression (src/ppx.ml[293,10231+3]..[293,10231+16])
                  Pexp_ident "print_endline" (src/ppx.ml[293,10231+3]..[293,10231+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[293,10231+17]..[293,10231+54])
                      Pexp_apply
                      expression (src/ppx.ml[293,10231+18]..[293,10231+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[293,10231+18]..[293,10231+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[293,10231+33]..[293,10231+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[293,10231+34]..[293,10231+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[293,10231+35]..[293,10231+49]),None)
                              expression (src/ppx.ml[293,10231+51]..[293,10231+52])
                                Pexp_ident "x" (src/ppx.ml[293,10231+51]..[293,10231+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[294,10288+2]..[294,10288+12])
                Pexp_apply
                expression (src/ppx.ml[294,10288+2]..[294,10288+10])
                  Pexp_ident "printone" (src/ppx.ml[294,10288+2]..[294,10288+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[294,10288+11]..[294,10288+12])
                      Pexp_ident "x" (src/ppx.ml[294,10288+11]..[294,10288+12])
                ]
            core_type (src/ppx.ml[292,10207+17]..[292,10207+21])
              Ptyp_constr "unit" (src/ppx.ml[292,10207+17]..[292,10207+21])
              []
    ]
  structure_item (src/ppx.ml[296,10304+0]..[298,10335+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10304+4]..[296,10304+9])
          Ppat_var "proc1" (src/ppx.ml[296,10304+4]..[296,10304+9])
        expression (src/ppx.ml[296,10304+10]..[298,10335+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[296,10304+10]..[296,10304+11])
            Ppat_var "x" (src/ppx.ml[296,10304+10]..[296,10304+11])
          expression (src/ppx.ml[297,10320+2]..[298,10335+3])
            Pexp_sequence
            expression (src/ppx.ml[297,10320+2]..[297,10320+13])
              Pexp_apply
              expression (src/ppx.ml[297,10320+2]..[297,10320+11])
                Pexp_ident "printone2" (src/ppx.ml[297,10320+2]..[297,10320+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[297,10320+12]..[297,10320+13])
                    Pexp_ident "x" (src/ppx.ml[297,10320+12]..[297,10320+13])
              ]
            expression (src/ppx.ml[298,10335+2]..[298,10335+3])
              Pexp_ident "x" (src/ppx.ml[298,10335+2]..[298,10335+3])
    ]
  structure_item (src/ppx.ml[300,10340+0]..[303,10489+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10340+4]..[300,10340+9])
          Ppat_var "debug" (src/ppx.ml[300,10340+4]..[300,10340+9])
        expression (src/ppx.ml[300,10340+10]..[303,10489+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[300,10340+10]..[300,10340+14])
            Ppat_var "proc" (src/ppx.ml[300,10340+10]..[300,10340+14])
          expression (src/ppx.ml[300,10340+15]..[303,10489+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[300,10340+15]..[300,10340+18])
              Ppat_var "lst" (src/ppx.ml[300,10340+15]..[300,10340+18])
            expression (src/ppx.ml[300,10340+19]..[303,10489+4])
              Pexp_constraint
              expression (src/ppx.ml[301,10368+2]..[303,10489+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[301,10368+6]..[301,10368+12])
                      Ppat_var "result" (src/ppx.ml[301,10368+6]..[301,10368+12])
                    expression (src/ppx.ml[301,10368+15]..[301,10368+32])
                      Pexp_apply
                      expression (src/ppx.ml[301,10368+15]..[301,10368+23])
                        Pexp_ident "List.map" (src/ppx.ml[301,10368+15]..[301,10368+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[301,10368+24]..[301,10368+28])
                            Pexp_ident "proc" (src/ppx.ml[301,10368+24]..[301,10368+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[301,10368+29]..[301,10368+32])
                            Pexp_ident "lst" (src/ppx.ml[301,10368+29]..[301,10368+32])
                      ]
                ]
                expression (src/ppx.ml[302,10404+2]..[303,10489+4])
                  Pexp_sequence
                  expression (src/ppx.ml[302,10404+2]..[302,10404+83])
                    Pexp_apply
                    expression (src/ppx.ml[302,10404+2]..[302,10404+11])
                      Pexp_ident "List.iter" (src/ppx.ml[302,10404+2]..[302,10404+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[302,10404+12]..[302,10404+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[302,10404+17]..[302,10404+18])
                            Ppat_var "i" (src/ppx.ml[302,10404+17]..[302,10404+18])
                          expression (src/ppx.ml[302,10404+22]..[302,10404+75])
                            Pexp_apply
                            expression (src/ppx.ml[302,10404+22]..[302,10404+35])
                              Pexp_ident "print_endline" (src/ppx.ml[302,10404+22]..[302,10404+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[302,10404+36]..[302,10404+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[302,10404+37]..[302,10404+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[302,10404+37]..[302,10404+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[302,10404+52]..[302,10404+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[302,10404+53]..[302,10404+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[302,10404+54]..[302,10404+69]),None)
                                          expression (src/ppx.ml[302,10404+72]..[302,10404+73])
                                            Pexp_ident "i" (src/ppx.ml[302,10404+72]..[302,10404+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[302,10404+77]..[302,10404+83])
                          Pexp_ident "result" (src/ppx.ml[302,10404+77]..[302,10404+83])
                    ]
                  expression (src/ppx.ml[303,10489+2]..[303,10489+4])
                    Pexp_construct "()" (src/ppx.ml[303,10489+2]..[303,10489+4])
                    None
              core_type (src/ppx.ml[300,10340+21]..[300,10340+25])
                Ptyp_constr "unit" (src/ppx.ml[300,10340+21]..[300,10340+25])
                []
    ]
  structure_item (src/ppx.ml[305,10511+0]..[308,10635+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[305,10511+4]..[305,10511+13])
          Ppat_var "transform" (src/ppx.ml[305,10511+4]..[305,10511+13])
        expression (src/ppx.ml[305,10511+14]..[308,10635+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[305,10511+14]..[305,10511+15])
            Ppat_var "x" (src/ppx.ml[305,10511+14]..[305,10511+15])
          expression (src/ppx.ml[306,10566+2]..[308,10635+3])
            Pexp_sequence
            expression (src/ppx.ml[306,10566+2]..[306,10566+48])
              Pexp_apply
              expression (src/ppx.ml[306,10566+3]..[306,10566+16])
                Pexp_ident "print_endline" (src/ppx.ml[306,10566+3]..[306,10566+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[306,10566+17]..[306,10566+47])
                    Pexp_apply
                    expression (src/ppx.ml[306,10566+18]..[306,10566+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[306,10566+18]..[306,10566+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[306,10566+33]..[306,10566+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[306,10566+34]..[306,10566+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[306,10566+35]..[306,10566+42]),None)
                            expression (src/ppx.ml[306,10566+44]..[306,10566+45])
                              Pexp_ident "x" (src/ppx.ml[306,10566+44]..[306,10566+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[307,10616+2]..[308,10635+3])
              Pexp_sequence
              expression (src/ppx.ml[307,10616+2]..[307,10616+17])
                Pexp_apply
                expression (src/ppx.ml[307,10616+3]..[307,10616+8])
                  Pexp_ident "debug" (src/ppx.ml[307,10616+3]..[307,10616+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[307,10616+9]..[307,10616+14])
                      Pexp_ident "proc1" (src/ppx.ml[307,10616+9]..[307,10616+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[307,10616+15]..[307,10616+16])
                      Pexp_ident "x" (src/ppx.ml[307,10616+15]..[307,10616+16])
                ]
              expression (src/ppx.ml[308,10635+2]..[308,10635+3])
                Pexp_ident "x" (src/ppx.ml[308,10635+2]..[308,10635+3])
    ]
  structure_item (src/ppx.ml[310,10642+1]..[310,10642+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[310,10642+5]..[310,10642+7])
          Ppat_construct "()" (src/ppx.ml[310,10642+5]..[310,10642+7])
          None
        expression (src/ppx.ml[310,10642+10]..[310,10642+69])
          Pexp_apply
          expression (src/ppx.ml[310,10642+10]..[310,10642+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[310,10642+10]..[310,10642+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[310,10642+47]..[310,10642+56])
                Pexp_ident "transform" (src/ppx.ml[310,10642+47]..[310,10642+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[310,10642+57]..[310,10642+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[310,10642+58]..[310,10642+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id x = print_endline (Batteries.dump ("DEBUG:process_id:", x))
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_id a;
       process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[70,1899+60])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..src/ppx.ml[69,1879+14])
          Tpat_var "process_id/1437"
        expression (src/ppx.ml[69,1879+14]..src/ppx.ml[70,1899+60]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+14]..src/ppx.ml[69,1879+17])
                Tpat_var "x/1439"
              expression (src/ppx.ml[70,1899+2]..src/ppx.ml[70,1899+60])
                Texp_apply
                expression (src/ppx.ml[70,1899+3]..src/ppx.ml[70,1899+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[70,1899+17]..src/ppx.ml[70,1899+59])
                      Texp_apply
                      expression (src/ppx.ml[70,1899+18]..src/ppx.ml[70,1899+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[70,1899+33]..src/ppx.ml[70,1899+58])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[70,1899+34]..src/ppx.ml[70,1899+53])
                                Texp_constant Const_string("DEBUG:process_id:",(src/ppx.ml[70,1899+35]..src/ppx.ml[70,1899+52]),None)
                              expression (src/ppx.ml[70,1899+56]..src/ppx.ml[70,1899+57])
                                Texp_ident "x/1439"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[72,1963+0]..src/ppx.ml[154,4788+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[72,1963+8]..src/ppx.ml[72,1963+27])
          Tpat_var "process_record_kind/1440"
        expression (src/ppx.ml[72,1963+27]..src/ppx.ml[86,2447+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[72,1963+27]..src/ppx.ml[72,1963+30])
                Tpat_var "x/1445"
              expression (src/ppx.ml[73,1996+2]..src/ppx.ml[86,2447+47])
                Texp_match
                expression (src/ppx.ml[73,1996+8]..src/ppx.ml[73,1996+9])
                  Texp_ident "x/1445"
                [
                  <case>
                    pattern (src/ppx.ml[74,2011+4]..src/ppx.ml[80,2192+4])
                      Tpat_value
                      pattern (src/ppx.ml[74,2011+4]..src/ppx.ml[80,2192+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[75,2017+5]..src/ppx.ml[75,2017+13])
                              Tpat_var "pld_name/1446"
                          "pld_mutable"
                            pattern (src/ppx.ml[76,2050+5]..src/ppx.ml[76,2050+16])
                              Tpat_var "pld_mutable/1447"
                          "pld_type"
                            pattern (src/ppx.ml[77,2088+5]..src/ppx.ml[77,2088+13])
                              Tpat_var "pld_type/1448"
                          "pld_loc"
                            pattern (src/ppx.ml[78,2120+5]..src/ppx.ml[78,2120+12])
                              Tpat_var "pld_loc/1449"
                          "pld_attributes"
                            pattern (src/ppx.ml[79,2152+5]..src/ppx.ml[79,2152+19])
                              Tpat_var "pld_attributes/1450"
                        ]
                    expression (src/ppx.ml[81,2200+4]..src/ppx.ml[86,2447+47])
                      Texp_apply
                      expression (src/ppx.ml[81,2200+5]..src/ppx.ml[81,2200+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[81,2200+19]..src/ppx.ml[86,2447+46])
                            Texp_apply
                            expression (src/ppx.ml[81,2200+20]..src/ppx.ml[81,2200+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[81,2200+35]..src/ppx.ml[86,2447+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[81,2200+36]..src/ppx.ml[81,2200+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[81,2200+37]..src/ppx.ml[81,2200+56]),None)
                                    expression (src/ppx.ml[82,2261+36]..src/ppx.ml[82,2261+44])
                                      Texp_ident "pld_name/1446"
                                    expression (src/ppx.ml[83,2307+36]..src/ppx.ml[83,2307+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[83,2307+37]..src/ppx.ml[83,2307+44]),None)
                                    expression (src/ppx.ml[84,2354+36]..src/ppx.ml[84,2354+47])
                                      Texp_ident "pld_mutable/1447"
                                    expression (src/ppx.ml[85,2403+36]..src/ppx.ml[85,2403+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[85,2403+37]..src/ppx.ml[85,2403+41]),None)
                                    expression (src/ppx.ml[86,2447+36]..src/ppx.ml[86,2447+44])
                                      Texp_ident "pld_type/1448"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[88,2499+0]..src/ppx.ml[88,2499+22])
          Tpat_var "process_core_type_desc/1441"
        expression (src/ppx.ml[88,2499+23]..src/ppx.ml[128,4106+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[88,2499+23]..src/ppx.ml[88,2499+24])
                Tpat_var "x/1451"
              expression (src/ppx.ml[89,2526+2]..src/ppx.ml[128,4106+65])
                Texp_match
                expression (src/ppx.ml[89,2526+8]..src/ppx.ml[89,2526+9])
                  Texp_ident "x/1451"
                [
                  <case>
                    pattern (src/ppx.ml[90,2541+4]..src/ppx.ml[90,2541+21])
                      Tpat_value
                      pattern (src/ppx.ml[90,2541+4]..src/ppx.ml[90,2541+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[90,2541+17]..src/ppx.ml[90,2541+18])
                            Tpat_var "a/1452"
                          pattern (src/ppx.ml[90,2541+19]..src/ppx.ml[90,2541+20])
                            Tpat_var "b/1453"
                        ]
                        None
                    expression (src/ppx.ml[92,2612+4]..src/ppx.ml[95,2666+79])
                      Texp_sequence
                      expression (src/ppx.ml[92,2612+4]..src/ppx.ml[92,2612+18])
                        Texp_apply
                        expression (src/ppx.ml[92,2612+5]..src/ppx.ml[92,2612+15])
                          Texp_ident "process_id/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[92,2612+16]..src/ppx.ml[92,2612+17])
                              Texp_ident "a/1452"
                        ]
                      expression (src/ppx.ml[93,2632+4]..src/ppx.ml[95,2666+79])
                        Texp_sequence
                        expression (src/ppx.ml[93,2632+4]..src/ppx.ml[93,2632+30])
                          Texp_apply
                          expression (src/ppx.ml[93,2632+5]..src/ppx.ml[93,2632+27])
                            Texp_ident "process_core_type_list/1444"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[93,2632+28]..src/ppx.ml[93,2632+29])
                                Texp_ident "b/1453"
                          ]
                        expression (src/ppx.ml[95,2666+4]..src/ppx.ml[95,2666+79])
                          Texp_apply
                          expression (src/ppx.ml[95,2666+5]..src/ppx.ml[95,2666+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[95,2666+19]..src/ppx.ml[95,2666+78])
                                Texp_apply
                                expression (src/ppx.ml[95,2666+20]..src/ppx.ml[95,2666+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[95,2666+35]..src/ppx.ml[95,2666+77])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[95,2666+36]..src/ppx.ml[95,2666+56])
                                          Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[95,2666+37]..src/ppx.ml[95,2666+55]),None)
                                        expression (src/ppx.ml[95,2666+58]..src/ppx.ml[95,2666+62])
                                          Texp_constant Const_string("id",(src/ppx.ml[95,2666+59]..src/ppx.ml[95,2666+61]),None)
                                        expression (src/ppx.ml[95,2666+63]..src/ppx.ml[95,2666+64])
                                          Texp_ident "a/1452"
                                        expression (src/ppx.ml[95,2666+66]..src/ppx.ml[95,2666+73])
                                          Texp_constant Const_string("types",(src/ppx.ml[95,2666+67]..src/ppx.ml[95,2666+72]),None)
                                        expression (src/ppx.ml[95,2666+74]..src/ppx.ml[95,2666+75])
                                          Texp_ident "b/1453"
                                      ]
                                ]
                          ]
                  <case>
                    pattern (src/ppx.ml[97,2747+4]..src/ppx.ml[97,2747+16])
                      Tpat_value
                      pattern (src/ppx.ml[97,2747+4]..src/ppx.ml[97,2747+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[97,2747+15]..src/ppx.ml[97,2747+16])
                            Tpat_var "a/1454"
                        ]
                        None
                    expression (src/ppx.ml[99,2795+4]..src/ppx.ml[99,2795+59])
                      Texp_apply
                      expression (src/ppx.ml[99,2795+5]..src/ppx.ml[99,2795+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[99,2795+19]..src/ppx.ml[99,2795+58])
                            Texp_apply
                            expression (src/ppx.ml[99,2795+20]..src/ppx.ml[99,2795+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[99,2795+35]..src/ppx.ml[99,2795+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[99,2795+37]..src/ppx.ml[99,2795+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[102,2874+4]..src/ppx.ml[102,2874+12])
                      Tpat_value
                      pattern (src/ppx.ml[102,2874+4]..src/ppx.ml[102,2874+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[102,2874+17]..src/ppx.ml[102,2874+69])
                      Texp_apply
                      expression (src/ppx.ml[102,2874+18]..src/ppx.ml[102,2874+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[102,2874+32]..src/ppx.ml[102,2874+68])
                            Texp_apply
                            expression (src/ppx.ml[102,2874+33]..src/ppx.ml[102,2874+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[102,2874+48]..src/ppx.ml[102,2874+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[102,2874+50]..src/ppx.ml[102,2874+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[103,2944+4]..src/ppx.ml[103,2944+17])
                      Tpat_value
                      pattern (src/ppx.ml[103,2944+4]..src/ppx.ml[103,2944+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[103,2944+13]..src/ppx.ml[103,2944+17])
                            Tpat_var "name/1455"
                        ]
                        None
                    expression (src/ppx.ml[103,2944+20]..src/ppx.ml[103,2944+80])
                      Texp_apply
                      expression (src/ppx.ml[103,2944+21]..src/ppx.ml[103,2944+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,2944+35]..src/ppx.ml[103,2944+79])
                            Texp_apply
                            expression (src/ppx.ml[103,2944+36]..src/ppx.ml[103,2944+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,2944+51]..src/ppx.ml[103,2944+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[103,2944+52]..src/ppx.ml[103,2944+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[103,2944+53]..src/ppx.ml[103,2944+68]),None)
                                    expression (src/ppx.ml[103,2944+73]..src/ppx.ml[103,2944+77])
                                      Texp_ident "name/1455"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,3025+4]..src/ppx.ml[104,3025+51])
                      Tpat_value
                      pattern (src/ppx.ml[104,3025+4]..src/ppx.ml[104,3025+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[104,3025+16]..src/ppx.ml[104,3025+25])
                            Tpat_var "arg_label/1456"
                          pattern (src/ppx.ml[104,3025+28]..src/ppx.ml[104,3025+37])
                            Tpat_var "core_type/1457"
                          pattern (src/ppx.ml[104,3025+40]..src/ppx.ml[104,3025+50])
                            Tpat_var "core_type2/1458"
                        ]
                        None
                    expression (src/ppx.ml[105,3080+4]..src/ppx.ml[105,3080+61])
                      Texp_apply
                      expression (src/ppx.ml[105,3080+5]..src/ppx.ml[105,3080+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[105,3080+19]..src/ppx.ml[105,3080+60])
                            Texp_apply
                            expression (src/ppx.ml[105,3080+20]..src/ppx.ml[105,3080+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[105,3080+35]..src/ppx.ml[105,3080+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[105,3080+37]..src/ppx.ml[105,3080+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3143+4]..src/ppx.ml[107,3143+21])
                      Tpat_value
                      pattern (src/ppx.ml[107,3143+4]..src/ppx.ml[107,3143+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[107,3143+17]..src/ppx.ml[107,3143+18])
                            Tpat_var "a/1459"
                          pattern (src/ppx.ml[107,3143+19]..src/ppx.ml[107,3143+20])
                            Tpat_var "b/1460"
                        ]
                        None
                    expression (src/ppx.ml[109,3212+4]..src/ppx.ml[109,3212+60])
                      Texp_apply
                      expression (src/ppx.ml[109,3212+5]..src/ppx.ml[109,3212+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3212+19]..src/ppx.ml[109,3212+59])
                            Texp_apply
                            expression (src/ppx.ml[109,3212+20]..src/ppx.ml[109,3212+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3212+35]..src/ppx.ml[109,3212+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[109,3212+37]..src/ppx.ml[109,3212+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[110,3273+4]..src/ppx.ml[110,3273+20])
                      Tpat_value
                      pattern (src/ppx.ml[110,3273+4]..src/ppx.ml[110,3273+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[110,3273+16]..src/ppx.ml[110,3273+17])
                            Tpat_var "a/1461"
                          pattern (src/ppx.ml[110,3273+18]..src/ppx.ml[110,3273+19])
                            Tpat_var "b/1462"
                        ]
                        None
                    expression (src/ppx.ml[112,3343+4]..src/ppx.ml[112,3343+60])
                      Texp_apply
                      expression (src/ppx.ml[112,3343+5]..src/ppx.ml[112,3343+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[112,3343+19]..src/ppx.ml[112,3343+59])
                            Texp_apply
                            expression (src/ppx.ml[112,3343+20]..src/ppx.ml[112,3343+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[112,3343+35]..src/ppx.ml[112,3343+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[112,3343+37]..src/ppx.ml[112,3343+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[113,3404+4]..src/ppx.ml[113,3404+20])
                      Tpat_value
                      pattern (src/ppx.ml[113,3404+4]..src/ppx.ml[113,3404+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[113,3404+16]..src/ppx.ml[113,3404+17])
                            Tpat_var "a/1463"
                          pattern (src/ppx.ml[113,3404+18]..src/ppx.ml[113,3404+19])
                            Tpat_var "b/1464"
                        ]
                        None
                    expression (src/ppx.ml[115,3465+4]..src/ppx.ml[115,3465+60])
                      Texp_apply
                      expression (src/ppx.ml[115,3465+5]..src/ppx.ml[115,3465+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[115,3465+19]..src/ppx.ml[115,3465+59])
                            Texp_apply
                            expression (src/ppx.ml[115,3465+20]..src/ppx.ml[115,3465+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[115,3465+35]..src/ppx.ml[115,3465+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[115,3465+37]..src/ppx.ml[115,3465+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[116,3526+4]..src/ppx.ml[116,3526+24])
                      Tpat_value
                      pattern (src/ppx.ml[116,3526+4]..src/ppx.ml[116,3526+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[116,3526+18]..src/ppx.ml[116,3526+19])
                            Tpat_var "a/1465"
                          pattern (src/ppx.ml[116,3526+20]..src/ppx.ml[116,3526+21])
                            Tpat_var "b/1466"
                          pattern (src/ppx.ml[116,3526+22]..src/ppx.ml[116,3526+23])
                            Tpat_var "c/1467"
                        ]
                        None
                    expression (src/ppx.ml[118,3616+4]..src/ppx.ml[118,3616+60])
                      Texp_apply
                      expression (src/ppx.ml[118,3616+5]..src/ppx.ml[118,3616+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[118,3616+19]..src/ppx.ml[118,3616+59])
                            Texp_apply
                            expression (src/ppx.ml[118,3616+20]..src/ppx.ml[118,3616+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[118,3616+35]..src/ppx.ml[118,3616+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[118,3616+37]..src/ppx.ml[118,3616+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[119,3677+4]..src/ppx.ml[119,3677+19])
                      Tpat_value
                      pattern (src/ppx.ml[119,3677+4]..src/ppx.ml[119,3677+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[119,3677+15]..src/ppx.ml[119,3677+16])
                            Tpat_var "a/1468"
                          pattern (src/ppx.ml[119,3677+17]..src/ppx.ml[119,3677+18])
                            Tpat_var "b/1469"
                        ]
                        None
                    expression (src/ppx.ml[121,3741+4]..src/ppx.ml[121,3741+60])
                      Texp_apply
                      expression (src/ppx.ml[121,3741+5]..src/ppx.ml[121,3741+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[121,3741+19]..src/ppx.ml[121,3741+59])
                            Texp_apply
                            expression (src/ppx.ml[121,3741+20]..src/ppx.ml[121,3741+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[121,3741+35]..src/ppx.ml[121,3741+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[121,3741+37]..src/ppx.ml[121,3741+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[122,3802+4]..src/ppx.ml[122,3802+18])
                      Tpat_value
                      pattern (src/ppx.ml[122,3802+4]..src/ppx.ml[122,3802+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[122,3802+17]..src/ppx.ml[122,3802+18])
                            Tpat_var "a/1470"
                        ]
                        None
                    expression (src/ppx.ml[124,3850+4]..src/ppx.ml[124,3850+62])
                      Texp_apply
                      expression (src/ppx.ml[124,3850+5]..src/ppx.ml[124,3850+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[124,3850+19]..src/ppx.ml[124,3850+61])
                            Texp_apply
                            expression (src/ppx.ml[124,3850+20]..src/ppx.ml[124,3850+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[124,3850+35]..src/ppx.ml[124,3850+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[124,3850+36]..src/ppx.ml[124,3850+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[124,3850+37]..src/ppx.ml[124,3850+55]),None)
                                    expression (src/ppx.ml[124,3850+57]..src/ppx.ml[124,3850+58])
                                      Texp_ident "a/1470"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[127,4058+4]..src/ppx.ml[127,4058+20])
                      Tpat_value
                      pattern (src/ppx.ml[127,4058+4]..src/ppx.ml[127,4058+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[127,4058+19]..src/ppx.ml[127,4058+20])
                            Tpat_var "a/1471"
                        ]
                        None
                    expression (src/ppx.ml[128,4106+4]..src/ppx.ml[128,4106+65])
                      Texp_apply
                      expression (src/ppx.ml[128,4106+5]..src/ppx.ml[128,4106+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[128,4106+19]..src/ppx.ml[128,4106+64])
                            Texp_apply
                            expression (src/ppx.ml[128,4106+20]..src/ppx.ml[128,4106+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[128,4106+35]..src/ppx.ml[128,4106+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[128,4106+36]..src/ppx.ml[128,4106+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[128,4106+37]..src/ppx.ml[128,4106+58]),None)
                                    expression (src/ppx.ml[128,4106+60]..src/ppx.ml[128,4106+61])
                                      Texp_ident "a/1471"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[130,4176+2]..src/ppx.ml[130,4176+26])
          Tpat_var "process_record_kind_list/1442"
        expression (src/ppx.ml[130,4176+26]..src/ppx.ml[136,4313+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[130,4176+26]..src/ppx.ml[130,4176+29])
                Tpat_var "x/1794"
              expression (src/ppx.ml[131,4208+2]..src/ppx.ml[136,4313+6])
                Texp_match
                expression (src/ppx.ml[131,4208+8]..src/ppx.ml[131,4208+9])
                  Texp_ident "x/1794"
                [
                  <case>
                    pattern (src/ppx.ml[132,4223+4]..src/ppx.ml[132,4223+6])
                      Tpat_value
                      pattern (src/ppx.ml[132,4223+4]..src/ppx.ml[132,4223+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[132,4223+10]..src/ppx.ml[132,4223+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[133,4236+4]..src/ppx.ml[133,4236+10])
                      Tpat_value
                      pattern (src/ppx.ml[133,4236+4]..src/ppx.ml[133,4236+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[133,4236+4]..src/ppx.ml[133,4236+5])
                            Tpat_var "h/1795"
                          pattern (src/ppx.ml[133,4236+9]..src/ppx.ml[133,4236+10])
                            Tpat_var "t/1796"
                        ]
                        None
                    expression (src/ppx.ml[134,4250+4]..src/ppx.ml[136,4313+6])
                      Texp_sequence
                      expression (src/ppx.ml[134,4250+4]..src/ppx.ml[134,4250+27])
                        Texp_apply
                        expression (src/ppx.ml[134,4250+5]..src/ppx.ml[134,4250+24])
                          Texp_ident "process_record_kind/1440"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[134,4250+25]..src/ppx.ml[134,4250+26])
                              Texp_ident "h/1795"
                        ]
                      expression (src/ppx.ml[135,4279+4]..src/ppx.ml[136,4313+6])
                        Texp_sequence
                        expression (src/ppx.ml[135,4279+4]..src/ppx.ml[135,4279+32])
                          Texp_apply
                          expression (src/ppx.ml[135,4279+5]..src/ppx.ml[135,4279+29])
                            Texp_ident "process_record_kind_list/1442"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[135,4279+30]..src/ppx.ml[135,4279+31])
                                Texp_ident "t/1796"
                          ]
                        expression (src/ppx.ml[136,4313+4]..src/ppx.ml[136,4313+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[138,4324+0]..src/ppx.ml[138,4324+17])
          Tpat_var "process_core_type/1443"
        expression (src/ppx.ml[138,4324+17]..src/ppx.ml[148,4591+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[138,4324+17]..src/ppx.ml[138,4324+20])
                Tpat_var "x/1797"
              expression (src/ppx.ml[139,4347+2]..src/ppx.ml[148,4591+80])
                Texp_match
                expression (src/ppx.ml[139,4347+8]..src/ppx.ml[139,4347+9])
                  Texp_ident "x/1797"
                [
                  <case>
                    pattern (src/ppx.ml[140,4363+4]..src/ppx.ml[145,4524+5])
                      Tpat_value
                      pattern (src/ppx.ml[140,4363+4]..src/ppx.ml[145,4524+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[141,4369+6]..src/ppx.ml[141,4369+15])
                              Tpat_var "ptyp_desc/1798"
                          "ptyp_loc"
                            pattern (src/ppx.ml[142,4408+5]..src/ppx.ml[142,4408+13])
                              Tpat_var "ptyp_loc/1799"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[143,4441+5]..src/ppx.ml[143,4441+19])
                              Tpat_var "ptyp_loc_stack/1800"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[144,4484+5]..src/ppx.ml[144,4484+20])
                              Tpat_var "ptyp_attributes/1801"
                        ]
                    expression (src/ppx.ml[146,4532+4]..src/ppx.ml[148,4591+80])
                      Texp_sequence
                      expression (src/ppx.ml[146,4532+4]..src/ppx.ml[146,4532+38])
                        Texp_apply
                        expression (src/ppx.ml[146,4532+5]..src/ppx.ml[146,4532+27])
                          Texp_ident "process_core_type_desc/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[146,4532+28]..src/ppx.ml[146,4532+37])
                              Texp_ident "ptyp_desc/1798"
                        ]
                      expression (src/ppx.ml[148,4591+4]..src/ppx.ml[148,4591+80])
                        Texp_apply
                        expression (src/ppx.ml[148,4591+5]..src/ppx.ml[148,4591+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[148,4591+19]..src/ppx.ml[148,4591+79])
                              Texp_apply
                              expression (src/ppx.ml[148,4591+20]..src/ppx.ml[148,4591+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[148,4591+35]..src/ppx.ml[148,4591+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[148,4591+36]..src/ppx.ml[148,4591+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[148,4591+37]..src/ppx.ml[148,4591+63]),None)
                                      expression (src/ppx.ml[148,4591+68]..src/ppx.ml[148,4591+77])
                                        Texp_ident "ptyp_desc/1798"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[149,4672+4]..src/ppx.ml[149,4672+26])
          Tpat_var "process_core_type_list/1444"
        expression (src/ppx.ml[149,4672+26]..src/ppx.ml[154,4788+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[149,4672+27]..src/ppx.ml[149,4672+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[149,4672+29]..src/ppx.ml[149,4672+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[149,4672+29]..src/ppx.ml[149,4672+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1802"
                pattern (src/ppx.ml[149,4672+27]..src/ppx.ml[149,4672+28])
                  Tpat_any
              expression (src/ppx.ml[150,4719+2]..src/ppx.ml[154,4788+29])
                Texp_match
                expression (src/ppx.ml[150,4719+8]..src/ppx.ml[150,4719+9])
                  Texp_ident "x/1802"
                [
                  <case>
                    pattern (src/ppx.ml[151,4734+4]..src/ppx.ml[151,4734+6])
                      Tpat_value
                      pattern (src/ppx.ml[151,4734+4]..src/ppx.ml[151,4734+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[151,4734+10]..src/ppx.ml[151,4734+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[152,4747+4]..src/ppx.ml[152,4747+10])
                      Tpat_value
                      pattern (src/ppx.ml[152,4747+4]..src/ppx.ml[152,4747+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[152,4747+4]..src/ppx.ml[152,4747+5])
                            Tpat_var "h/1803"
                          pattern (src/ppx.ml[152,4747+9]..src/ppx.ml[152,4747+10])
                            Tpat_var "t/1804"
                        ]
                        None
                    expression (src/ppx.ml[153,4761+4]..src/ppx.ml[154,4788+29])
                      Texp_sequence
                      expression (src/ppx.ml[153,4761+4]..src/ppx.ml[153,4761+25])
                        Texp_apply
                        expression (src/ppx.ml[153,4761+4]..src/ppx.ml[153,4761+21])
                          Texp_ident "process_core_type/1443"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[153,4761+22]..src/ppx.ml[153,4761+25])
                              Texp_ident "h/1803"
                        ]
                      expression (src/ppx.ml[154,4788+4]..src/ppx.ml[154,4788+29])
                        Texp_apply
                        expression (src/ppx.ml[154,4788+4]..src/ppx.ml[154,4788+26])
                          Texp_ident "process_core_type_list/1444"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[154,4788+26]..src/ppx.ml[154,4788+29])
                              Texp_ident "t/1804"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[161,4832+0]..src/ppx.ml[168,5031+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[161,4832+4]..src/ppx.ml[161,4832+31])
          Tpat_var "print_constructor_arguments/1805"
        expression (src/ppx.ml[161,4832+31]..src/ppx.ml[168,5031+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[161,4832+31]..src/ppx.ml[161,4832+34])
                Tpat_var "x/1807"
              expression (src/ppx.ml[162,4869+2]..src/ppx.ml[168,5031+65])
                Texp_match
                expression (src/ppx.ml[162,4869+8]..src/ppx.ml[162,4869+9])
                  Texp_ident "x/1807"
                [
                  <case>
                    pattern (src/ppx.ml[163,4884+4]..src/ppx.ml[163,4884+17])
                      Tpat_value
                      pattern (src/ppx.ml[163,4884+4]..src/ppx.ml[163,4884+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[163,4884+16]..src/ppx.ml[163,4884+17])
                            Tpat_var "a/1808"
                        ]
                        None
                    expression (src/ppx.ml[164,4905+4]..src/ppx.ml[165,4937+64])
                      Texp_sequence
                      expression (src/ppx.ml[164,4905+4]..src/ppx.ml[164,4905+30])
                        Texp_apply
                        expression (src/ppx.ml[164,4905+5]..src/ppx.ml[164,4905+27])
                          Texp_ident "process_core_type_list/1444"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[164,4905+28]..src/ppx.ml[164,4905+29])
                              Texp_ident "a/1808"
                        ]
                      expression (src/ppx.ml[165,4937+4]..src/ppx.ml[165,4937+64])
                        Texp_apply
                        expression (src/ppx.ml[165,4937+5]..src/ppx.ml[165,4937+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[165,4937+19]..src/ppx.ml[165,4937+63])
                              Texp_apply
                              expression (src/ppx.ml[165,4937+20]..src/ppx.ml[165,4937+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[165,4937+35]..src/ppx.ml[165,4937+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[165,4937+36]..src/ppx.ml[165,4937+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[165,4937+37]..src/ppx.ml[165,4937+55]),None)
                                      expression (src/ppx.ml[165,4937+60]..src/ppx.ml[165,4937+61])
                                        Texp_ident "a/1808"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[167,5009+4]..src/ppx.ml[167,5009+18])
                      Tpat_value
                      pattern (src/ppx.ml[167,5009+4]..src/ppx.ml[167,5009+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[167,5009+17]..src/ppx.ml[167,5009+18])
                            Tpat_var "a/1809"
                        ]
                        None
                    expression (src/ppx.ml[168,5031+4]..src/ppx.ml[168,5031+65])
                      Texp_apply
                      expression (src/ppx.ml[168,5031+5]..src/ppx.ml[168,5031+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[168,5031+19]..src/ppx.ml[168,5031+64])
                            Texp_apply
                            expression (src/ppx.ml[168,5031+20]..src/ppx.ml[168,5031+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[168,5031+35]..src/ppx.ml[168,5031+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[168,5031+36]..src/ppx.ml[168,5031+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[168,5031+37]..src/ppx.ml[168,5031+56]),None)
                                    expression (src/ppx.ml[168,5031+61]..src/ppx.ml[168,5031+62])
                                      Texp_ident "a/1809"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[170,5098+0]..src/ppx.ml[202,6074+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[170,5098+8]..src/ppx.ml[170,5098+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1810"
        expression (src/ppx.ml[170,5098+57]..src/ppx.ml[202,6074+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[170,5098+57]..src/ppx.ml[170,5098+60])
                Tpat_var "x/1811"
              expression (src/ppx.ml[171,5161+2]..src/ppx.ml[202,6074+8])
                Texp_match
                expression (src/ppx.ml[171,5161+8]..src/ppx.ml[171,5161+9])
                  Texp_ident "x/1811"
                [
                  <case>
                    pattern (src/ppx.ml[172,5176+4]..src/ppx.ml[172,5176+6])
                      Tpat_value
                      pattern (src/ppx.ml[172,5176+4]..src/ppx.ml[172,5176+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[172,5176+10]..src/ppx.ml[172,5176+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[173,5189+4]..src/ppx.ml[173,5189+10])
                      Tpat_value
                      pattern (src/ppx.ml[173,5189+4]..src/ppx.ml[173,5189+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[173,5189+4]..src/ppx.ml[173,5189+5])
                            Tpat_var "h/1812"
                          pattern (src/ppx.ml[173,5189+9]..src/ppx.ml[173,5189+10])
                            Tpat_var "t/1813"
                        ]
                        None
                    expression (src/ppx.ml[175,5268+4]..src/ppx.ml[202,6074+8])
                      Texp_match
                      expression (src/ppx.ml[175,5268+10]..src/ppx.ml[175,5268+11])
                        Texp_ident "h/1812"
                      [
                        <case>
                          pattern (src/ppx.ml[176,5285+5]..src/ppx.ml[183,5523+5])
                            Tpat_value
                            pattern (src/ppx.ml[176,5285+5]..src/ppx.ml[183,5523+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[177,5292+6]..src/ppx.ml[177,5292+14])
                                    Tpat_var "pcd_name/1814"
                                "pcd_vars"
                                  pattern (src/ppx.ml[178,5326+6]..src/ppx.ml[178,5326+14])
                                    Tpat_var "pcd_vars/1815"
                                "pcd_args"
                                  pattern (src/ppx.ml[179,5365+6]..src/ppx.ml[179,5365+14])
                                    Tpat_var "pcd_args/1816"
                                "pcd_res"
                                  pattern (src/ppx.ml[180,5410+6]..src/ppx.ml[180,5410+13])
                                    Tpat_var "pcd_res/1817"
                                "pcd_loc"
                                  pattern (src/ppx.ml[181,5449+6]..src/ppx.ml[181,5449+13])
                                    Tpat_var "pcd_loc/1818"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[182,5482+6]..src/ppx.ml[182,5482+20])
                                    Tpat_var "pcd_attributes/1819"
                              ]
                          expression (src/ppx.ml[186,5605+6]..src/ppx.ml[202,6074+8])
                            Texp_sequence
                            expression (src/ppx.ml[186,5605+6]..src/ppx.ml[186,5605+43])
                              Texp_apply
                              expression (src/ppx.ml[186,5605+6]..src/ppx.ml[186,5605+33])
                                Texp_ident "print_constructor_arguments/1805"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[186,5605+33]..src/ppx.ml[186,5605+43])
                                    Texp_ident "pcd_args/1816"
                              ]
                            expression (src/ppx.ml[187,5650+6]..src/ppx.ml[202,6074+8])
                              Texp_sequence
                              expression (src/ppx.ml[187,5650+6]..src/ppx.ml[200,5995+16])
                                Texp_apply
                                expression (src/ppx.ml[187,5650+7]..src/ppx.ml[187,5650+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[187,5650+21]..src/ppx.ml[200,5995+15])
                                      Texp_apply
                                      expression (src/ppx.ml[187,5650+22]..src/ppx.ml[187,5650+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[187,5650+37]..src/ppx.ml[200,5995+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[188,5689+11]..src/ppx.ml[188,5689+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[188,5689+12]..src/ppx.ml[188,5689+36]),None)
                                              expression (src/ppx.ml[189,5728+15]..src/ppx.ml[189,5728+23])
                                                Texp_ident "pcd_name/1814"
                                              expression (src/ppx.ml[190,5753+15]..src/ppx.ml[190,5753+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[190,5753+16]..src/ppx.ml[190,5753+20]),None)
                                              expression (src/ppx.ml[191,5776+15]..src/ppx.ml[191,5776+23])
                                                Texp_ident "pcd_vars/1815"
                                              expression (src/ppx.ml[192,5801+15]..src/ppx.ml[192,5801+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[192,5801+16]..src/ppx.ml[192,5801+20]),None)
                                              expression (src/ppx.ml[193,5824+15]..src/ppx.ml[193,5824+23])
                                                Texp_ident "pcd_args/1816"
                                              expression (src/ppx.ml[194,5849+15]..src/ppx.ml[194,5849+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[194,5849+16]..src/ppx.ml[194,5849+19]),None)
                                              expression (src/ppx.ml[195,5871+15]..src/ppx.ml[195,5871+22])
                                                Texp_ident "pcd_res/1817"
                                              expression (src/ppx.ml[196,5895+15]..src/ppx.ml[196,5895+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[196,5895+16]..src/ppx.ml[196,5895+19]),None)
                                              expression (src/ppx.ml[197,5917+15]..src/ppx.ml[197,5917+22])
                                                Texp_ident "pcd_loc/1818"
                                              expression (src/ppx.ml[198,5941+15]..src/ppx.ml[198,5941+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[198,5941+16]..src/ppx.ml[198,5941+21]),None)
                                              expression (src/ppx.ml[199,5965+15]..src/ppx.ml[199,5965+29])
                                                Texp_ident "pcd_attributes/1819"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[201,6013+6]..src/ppx.ml[202,6074+8])
                                Texp_sequence
                                expression (src/ppx.ml[201,6013+6]..src/ppx.ml[201,6013+59])
                                  Texp_apply
                                  expression (src/ppx.ml[201,6013+7]..src/ppx.ml[201,6013+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1810"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[201,6013+57]..src/ppx.ml[201,6013+58])
                                        Texp_ident "t/1813"
                                  ]
                                expression (src/ppx.ml[202,6074+6]..src/ppx.ml[202,6074+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[204,6086+0]..src/ppx.ml[215,6483+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[204,6086+4]..src/ppx.ml[204,6086+16])
          Tpat_var "process_kind/1820"
        expression (src/ppx.ml[204,6086+16]..src/ppx.ml[215,6483+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[204,6086+16]..src/ppx.ml[204,6086+19])
                Tpat_var "x/1822"
              expression (src/ppx.ml[205,6108+2]..src/ppx.ml[215,6483+77])
                Texp_match
                expression (src/ppx.ml[205,6108+8]..src/ppx.ml[205,6108+9])
                  Texp_ident "x/1822"
                [
                  <case>
                    pattern (src/ppx.ml[207,6145+4]..src/ppx.ml[207,6145+18])
                      Tpat_value
                      pattern (src/ppx.ml[207,6145+4]..src/ppx.ml[207,6145+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[207,6145+23]..src/ppx.ml[207,6145+81])
                      Texp_apply
                      expression (src/ppx.ml[207,6145+24]..src/ppx.ml[207,6145+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[207,6145+38]..src/ppx.ml[207,6145+80])
                            Texp_apply
                            expression (src/ppx.ml[207,6145+39]..src/ppx.ml[207,6145+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[207,6145+54]..src/ppx.ml[207,6145+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[207,6145+56]..src/ppx.ml[207,6145+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[208,6227+4]..src/ppx.ml[208,6227+19])
                      Tpat_value
                      pattern (src/ppx.ml[208,6227+4]..src/ppx.ml[208,6227+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[208,6227+18]..src/ppx.ml[208,6227+19])
                            Tpat_var "a/1823"
                        ]
                        None
                    expression (src/ppx.ml[209,6250+4]..src/ppx.ml[210,6309+65])
                      Texp_sequence
                      expression (src/ppx.ml[209,6250+4]..src/ppx.ml[209,6250+57])
                        Texp_apply
                        expression (src/ppx.ml[209,6250+5]..src/ppx.ml[209,6250+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1810"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[209,6250+55]..src/ppx.ml[209,6250+56])
                              Texp_ident "a/1823"
                        ]
                      expression (src/ppx.ml[210,6309+4]..src/ppx.ml[210,6309+65])
                        Texp_apply
                        expression (src/ppx.ml[210,6309+5]..src/ppx.ml[210,6309+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[210,6309+19]..src/ppx.ml[210,6309+64])
                              Texp_apply
                              expression (src/ppx.ml[210,6309+20]..src/ppx.ml[210,6309+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[210,6309+35]..src/ppx.ml[210,6309+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[210,6309+36]..src/ppx.ml[210,6309+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[210,6309+37]..src/ppx.ml[210,6309+57]),None)
                                      expression (src/ppx.ml[210,6309+61]..src/ppx.ml[210,6309+62])
                                        Texp_ident "a/1823"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[213,6422+5]..src/ppx.ml[213,6422+19])
                      Tpat_value
                      pattern (src/ppx.ml[213,6422+5]..src/ppx.ml[213,6422+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[213,6422+18]..src/ppx.ml[213,6422+19])
                            Tpat_var "a/1824"
                        ]
                        None
                    expression (src/ppx.ml[214,6450+5]..src/ppx.ml[214,6450+32])
                      Texp_apply
                      expression (src/ppx.ml[214,6450+5]..src/ppx.ml[214,6450+29])
                        Texp_ident "process_record_kind_list/1442"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[214,6450+29]..src/ppx.ml[214,6450+32])
                            Texp_ident "a/1824"
                      ]
                  <case>
                    pattern (src/ppx.ml[215,6483+5]..src/ppx.ml[215,6483+15])
                      Tpat_value
                      pattern (src/ppx.ml[215,6483+5]..src/ppx.ml[215,6483+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[215,6483+19]..src/ppx.ml[215,6483+77])
                      Texp_apply
                      expression (src/ppx.ml[215,6483+20]..src/ppx.ml[215,6483+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[215,6483+34]..src/ppx.ml[215,6483+76])
                            Texp_apply
                            expression (src/ppx.ml[215,6483+35]..src/ppx.ml[215,6483+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[215,6483+50]..src/ppx.ml[215,6483+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[215,6483+52]..src/ppx.ml[215,6483+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[217,6562+0]..src/ppx.ml[238,7568+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[217,6562+4]..src/ppx.ml[217,6562+19])
          Tpat_var "print_type_decl/1825"
        expression (src/ppx.ml[217,6562+19]..src/ppx.ml[238,7568+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[217,6562+19]..src/ppx.ml[217,6562+22])
                Tpat_var "x/1827"
              expression (src/ppx.ml[218,6587+2]..src/ppx.ml[238,7568+38])
                Texp_match
                expression (src/ppx.ml[218,6587+8]..src/ppx.ml[218,6587+9])
                  Texp_ident "x/1827"
                [
                  <case>
                    pattern (src/ppx.ml[219,6602+4]..src/ppx.ml[228,6983+5])
                      Tpat_value
                      pattern (src/ppx.ml[219,6602+4]..src/ppx.ml[228,6983+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[220,6608+6]..src/ppx.ml[220,6608+16])
                              Tpat_var "ptype_name/1828"
                          "ptype_params"
                            pattern (src/ppx.ml[221,6645+6]..src/ppx.ml[221,6645+18])
                              Tpat_var "ptype_params/1829"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[222,6717+6]..src/ppx.ml[222,6717+17])
                              Tpat_var "ptype_cstrs/1830"
                          "ptype_kind"
                            pattern (src/ppx.ml[223,6786+6]..src/ppx.ml[223,6786+16])
                              Tpat_var "ptype_kind/1831"
                          "ptype_private"
                            pattern (src/ppx.ml[224,6823+6]..src/ppx.ml[224,6823+19])
                              Tpat_var "ptype_private/1832"
                          "ptype_manifest"
                            pattern (src/ppx.ml[225,6864+6]..src/ppx.ml[225,6864+20])
                              Tpat_var "ptype_manifest/1833"
                          "ptype_attributes"
                            pattern (src/ppx.ml[226,6911+6]..src/ppx.ml[226,6911+22])
                              Tpat_var "ptype_attributes/1834"
                          "ptype_loc"
                            pattern (src/ppx.ml[227,6952+6]..src/ppx.ml[227,6952+15])
                              Tpat_var "ptype_loc/1835"
                        ]
                    expression (src/ppx.ml[229,6992+4]..src/ppx.ml[238,7568+38])
                      Texp_sequence
                      expression (src/ppx.ml[229,6992+4]..src/ppx.ml[229,6992+69])
                        Texp_apply
                        expression (src/ppx.ml[229,6992+5]..src/ppx.ml[229,6992+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[229,6992+19]..src/ppx.ml[229,6992+68])
                              Texp_apply
                              expression (src/ppx.ml[229,6992+20]..src/ppx.ml[229,6992+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[229,6992+35]..src/ppx.ml[229,6992+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[229,6992+36]..src/ppx.ml[229,6992+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[229,6992+37]..src/ppx.ml[229,6992+53]),None)
                                      expression (src/ppx.ml[229,6992+56]..src/ppx.ml[229,6992+66])
                                        Texp_ident "ptype_name/1828"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[230,7063+4]..src/ppx.ml[238,7568+38])
                        Texp_sequence
                        expression (src/ppx.ml[230,7063+4]..src/ppx.ml[230,7063+72])
                          Texp_apply
                          expression (src/ppx.ml[230,7063+5]..src/ppx.ml[230,7063+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[230,7063+19]..src/ppx.ml[230,7063+71])
                                Texp_apply
                                expression (src/ppx.ml[230,7063+20]..src/ppx.ml[230,7063+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[230,7063+35]..src/ppx.ml[230,7063+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[230,7063+36]..src/ppx.ml[230,7063+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[230,7063+37]..src/ppx.ml[230,7063+54]),None)
                                        expression (src/ppx.ml[230,7063+57]..src/ppx.ml[230,7063+69])
                                          Texp_ident "ptype_params/1829"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[231,7137+4]..src/ppx.ml[238,7568+38])
                          Texp_sequence
                          expression (src/ppx.ml[231,7137+4]..src/ppx.ml[231,7137+66])
                            Texp_apply
                            expression (src/ppx.ml[231,7137+5]..src/ppx.ml[231,7137+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[231,7137+19]..src/ppx.ml[231,7137+65])
                                  Texp_apply
                                  expression (src/ppx.ml[231,7137+20]..src/ppx.ml[231,7137+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[231,7137+35]..src/ppx.ml[231,7137+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[231,7137+36]..src/ppx.ml[231,7137+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[231,7137+37]..src/ppx.ml[231,7137+49]),None)
                                          expression (src/ppx.ml[231,7137+52]..src/ppx.ml[231,7137+63])
                                            Texp_ident "ptype_cstrs/1830"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[232,7205+4]..src/ppx.ml[238,7568+38])
                            Texp_sequence
                            expression (src/ppx.ml[232,7205+4]..src/ppx.ml[232,7205+63])
                              Texp_apply
                              expression (src/ppx.ml[232,7205+5]..src/ppx.ml[232,7205+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[232,7205+19]..src/ppx.ml[232,7205+62])
                                    Texp_apply
                                    expression (src/ppx.ml[232,7205+20]..src/ppx.ml[232,7205+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[232,7205+35]..src/ppx.ml[232,7205+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[232,7205+36]..src/ppx.ml[232,7205+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[232,7205+37]..src/ppx.ml[232,7205+48]),None)
                                            expression (src/ppx.ml[232,7205+50]..src/ppx.ml[232,7205+60])
                                              Texp_ident "ptype_kind/1831"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[233,7270+4]..src/ppx.ml[238,7568+38])
                              Texp_sequence
                              expression (src/ppx.ml[233,7270+4]..src/ppx.ml[233,7270+29])
                                Texp_apply
                                expression (src/ppx.ml[233,7270+5]..src/ppx.ml[233,7270+17])
                                  Texp_ident "process_kind/1820"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[233,7270+18]..src/ppx.ml[233,7270+28])
                                      Texp_ident "ptype_kind/1831"
                                ]
                              expression (src/ppx.ml[234,7301+4]..src/ppx.ml[238,7568+38])
                                Texp_apply
                                expression (src/ppx.ml[234,7301+5]..src/ppx.ml[234,7301+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[234,7301+19]..src/ppx.ml[238,7568+37])
                                      Texp_apply
                                      expression (src/ppx.ml[234,7301+20]..src/ppx.ml[234,7301+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[234,7301+35]..src/ppx.ml[238,7568+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[234,7301+36]..src/ppx.ml[234,7301+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[234,7301+37]..src/ppx.ml[234,7301+51]),None)
                                              expression (src/ppx.ml[234,7301+55]..src/ppx.ml[234,7301+68])
                                                Texp_ident "ptype_private/1832"
                                              expression (src/ppx.ml[235,7371+36]..src/ppx.ml[235,7371+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[235,7371+37]..src/ppx.ml[235,7371+51]),None)
                                              expression (src/ppx.ml[235,7371+54]..src/ppx.ml[235,7371+68])
                                                Texp_ident "ptype_manifest/1833"
                                              expression (src/ppx.ml[236,7441+36]..src/ppx.ml[236,7441+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[236,7441+37]..src/ppx.ml[236,7441+47]),None)
                                              expression (src/ppx.ml[236,7441+50]..src/ppx.ml[236,7441+66])
                                                Texp_ident "ptype_attributes/1834"
                                              expression (src/ppx.ml[237,7509+36]..src/ppx.ml[237,7509+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[237,7509+37]..src/ppx.ml[237,7509+46]),None)
                                              expression (src/ppx.ml[237,7509+49]..src/ppx.ml[237,7509+58])
                                                Texp_ident "ptype_loc/1835"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[240,7612+0]..src/ppx.ml[246,7747+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[240,7612+8]..src/ppx.ml[240,7612+30])
          Tpat_var "process_type_decl_list/1836"
        expression (src/ppx.ml[240,7612+30]..src/ppx.ml[246,7747+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[240,7612+30]..src/ppx.ml[240,7612+33])
                Tpat_var "x/1837"
              expression (src/ppx.ml[241,7648+2]..src/ppx.ml[246,7747+6])
                Texp_match
                expression (src/ppx.ml[241,7648+8]..src/ppx.ml[241,7648+9])
                  Texp_ident "x/1837"
                [
                  <case>
                    pattern (src/ppx.ml[242,7663+4]..src/ppx.ml[242,7663+6])
                      Tpat_value
                      pattern (src/ppx.ml[242,7663+4]..src/ppx.ml[242,7663+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[242,7663+10]..src/ppx.ml[242,7663+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[243,7676+4]..src/ppx.ml[243,7676+10])
                      Tpat_value
                      pattern (src/ppx.ml[243,7676+4]..src/ppx.ml[243,7676+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[243,7676+4]..src/ppx.ml[243,7676+5])
                            Tpat_var "h/1838"
                          pattern (src/ppx.ml[243,7676+9]..src/ppx.ml[243,7676+10])
                            Tpat_var "t/1839"
                        ]
                        None
                    expression (src/ppx.ml[244,7690+4]..src/ppx.ml[246,7747+6])
                      Texp_sequence
                      expression (src/ppx.ml[244,7690+4]..src/ppx.ml[244,7690+23])
                        Texp_apply
                        expression (src/ppx.ml[244,7690+5]..src/ppx.ml[244,7690+20])
                          Texp_ident "print_type_decl/1825"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[244,7690+21]..src/ppx.ml[244,7690+22])
                              Texp_ident "h/1838"
                        ]
                      expression (src/ppx.ml[245,7715+4]..src/ppx.ml[246,7747+6])
                        Texp_sequence
                        expression (src/ppx.ml[245,7715+4]..src/ppx.ml[245,7715+30])
                          Texp_apply
                          expression (src/ppx.ml[245,7715+5]..src/ppx.ml[245,7715+27])
                            Texp_ident "process_type_decl_list/1836"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[245,7715+28]..src/ppx.ml[245,7715+29])
                                Texp_ident "t/1839"
                          ]
                        expression (src/ppx.ml[246,7747+4]..src/ppx.ml[246,7747+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[248,7759+0]..src/ppx.ml[274,9723+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[248,7759+4]..src/ppx.ml[248,7759+13])
          Tpat_var "printdesc/1840"
        expression (src/ppx.ml[248,7759+13]..src/ppx.ml[274,9723+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[248,7759+14]..src/ppx.ml[248,7759+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[248,7759+17]..src/ppx.ml[248,7759+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1842"
                pattern (src/ppx.ml[248,7759+14]..src/ppx.ml[248,7759+15])
                  Tpat_any
              expression (src/ppx.ml[249,7805+2]..src/ppx.ml[274,9723+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[248,7759+39]..src/ppx.ml[248,7759+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[249,7805+2]..src/ppx.ml[249,7805+68])
                  Texp_apply
                  expression (src/ppx.ml[249,7805+3]..src/ppx.ml[249,7805+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[249,7805+17]..src/ppx.ml[249,7805+67])
                        Texp_apply
                        expression (src/ppx.ml[249,7805+18]..src/ppx.ml[249,7805+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[249,7805+33]..src/ppx.ml[249,7805+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[249,7805+34]..src/ppx.ml[249,7805+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[249,7805+35]..src/ppx.ml[249,7805+61]),None)
                                expression (src/ppx.ml[249,7805+64]..src/ppx.ml[249,7805+65])
                                  Texp_ident "x/1842"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[250,7875+2]..src/ppx.ml[274,9723+128])
                  Texp_match
                  expression (src/ppx.ml[250,7875+8]..src/ppx.ml[250,7875+9])
                    Texp_ident "x/1842"
                  [
                    <case>
                      pattern (src/ppx.ml[251,7890+4]..src/ppx.ml[251,7890+37])
                        Tpat_value
                        pattern (src/ppx.ml[251,7890+4]..src/ppx.ml[251,7890+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[251,7890+15]..src/ppx.ml[251,7890+25])
                              Tpat_var "expression/1843"
                            pattern (src/ppx.ml[251,7890+26]..src/ppx.ml[251,7890+36])
                              Tpat_var "attributes/1844"
                          ]
                          None
                      expression (src/ppx.ml[251,7890+41]..src/ppx.ml[251,7890+117])
                        Texp_apply
                        expression (src/ppx.ml[251,7890+42]..src/ppx.ml[251,7890+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[251,7890+56]..src/ppx.ml[251,7890+116])
                              Texp_apply
                              expression (src/ppx.ml[251,7890+57]..src/ppx.ml[251,7890+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[251,7890+72]..src/ppx.ml[251,7890+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[251,7890+73]..src/ppx.ml[251,7890+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[251,7890+74]..src/ppx.ml[251,7890+90]),None)
                                      expression (src/ppx.ml[251,7890+93]..src/ppx.ml[251,7890+103])
                                        Texp_ident "expression/1843"
                                      expression (src/ppx.ml[251,7890+104]..src/ppx.ml[251,7890+114])
                                        Texp_ident "attributes/1844"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[253,8028+4]..src/ppx.ml[253,8028+45])
                        Tpat_value
                        pattern (src/ppx.ml[253,8028+4]..src/ppx.ml[253,8028+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[253,8028+16]..src/ppx.ml[253,8028+24])
                              Tpat_var "rec_flag/1845"
                            pattern (src/ppx.ml[253,8028+26]..src/ppx.ml[253,8028+44])
                              Tpat_var "value_binding_list/1846"
                          ]
                          None
                      expression (src/ppx.ml[253,8028+48]..src/ppx.ml[254,8162+48])
                        Texp_sequence
                        expression (src/ppx.ml[253,8028+48]..src/ppx.ml[253,8028+132])
                          Texp_apply
                          expression (src/ppx.ml[253,8028+49]..src/ppx.ml[253,8028+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[253,8028+63]..src/ppx.ml[253,8028+131])
                                Texp_apply
                                expression (src/ppx.ml[253,8028+64]..src/ppx.ml[253,8028+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[253,8028+79]..src/ppx.ml[253,8028+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[253,8028+80]..src/ppx.ml[253,8028+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[253,8028+81]..src/ppx.ml[253,8028+98]),None)
                                        expression (src/ppx.ml[253,8028+101]..src/ppx.ml[253,8028+109])
                                          Texp_ident "rec_flag/1845"
                                        expression (src/ppx.ml[253,8028+111]..src/ppx.ml[253,8028+129])
                                          Texp_ident "value_binding_list/1846"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[254,8162+4]..src/ppx.ml[254,8162+48])
                          Texp_apply
                          expression (src/ppx.ml[254,8162+4]..src/ppx.ml[254,8162+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[254,8162+28]..src/ppx.ml[254,8162+48])
                                Texp_ident "value_binding_list/1846"
                          ]
                    <case>
                      pattern (src/ppx.ml[255,8211+4]..src/ppx.ml[255,8211+36])
                        Tpat_value
                        pattern (src/ppx.ml[255,8211+4]..src/ppx.ml[255,8211+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[255,8211+19]..src/ppx.ml[255,8211+36])
                              Tpat_var "value_description/1847"
                          ]
                          None
                      expression (src/ppx.ml[255,8211+39]..src/ppx.ml[255,8211+116])
                        Texp_apply
                        expression (src/ppx.ml[255,8211+40]..src/ppx.ml[255,8211+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8211+54]..src/ppx.ml[255,8211+115])
                              Texp_apply
                              expression (src/ppx.ml[255,8211+55]..src/ppx.ml[255,8211+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8211+70]..src/ppx.ml[255,8211+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8211+71]..src/ppx.ml[255,8211+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[255,8211+72]..src/ppx.ml[255,8211+93]),None)
                                      expression (src/ppx.ml[255,8211+96]..src/ppx.ml[255,8211+113])
                                        Texp_ident "value_description/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8329+4]..src/ppx.ml[257,8329+47])
                        Tpat_value
                        pattern (src/ppx.ml[257,8329+4]..src/ppx.ml[257,8329+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[257,8329+15]..src/ppx.ml[257,8329+23])
                              Tpat_var "rec_flag/1848"
                            pattern (src/ppx.ml[257,8329+25]..src/ppx.ml[257,8329+46])
                              Tpat_var "type_declaration_list/1849"
                          ]
                          None
                      expression (src/ppx.ml[259,8408+4]..src/ppx.ml[260,8459+90])
                        Texp_sequence
                        expression (src/ppx.ml[259,8408+4]..src/ppx.ml[259,8408+49])
                          Texp_apply
                          expression (src/ppx.ml[259,8408+4]..src/ppx.ml[259,8408+26])
                            Texp_ident "process_type_decl_list/1836"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[259,8408+26]..src/ppx.ml[259,8408+49])
                                Texp_ident "type_declaration_list/1849"
                          ]
                        expression (src/ppx.ml[260,8459+4]..src/ppx.ml[260,8459+90])
                          Texp_apply
                          expression (src/ppx.ml[260,8459+5]..src/ppx.ml[260,8459+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[260,8459+19]..src/ppx.ml[260,8459+89])
                                Texp_apply
                                expression (src/ppx.ml[260,8459+20]..src/ppx.ml[260,8459+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[260,8459+35]..src/ppx.ml[260,8459+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[260,8459+36]..src/ppx.ml[260,8459+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[260,8459+37]..src/ppx.ml[260,8459+53]),None)
                                        expression (src/ppx.ml[260,8459+56]..src/ppx.ml[260,8459+64])
                                          Texp_ident "rec_flag/1848"
                                        expression (src/ppx.ml[260,8459+66]..src/ppx.ml[260,8459+87])
                                          Texp_ident "type_declaration_list/1849"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[263,8552+4]..src/ppx.ml[263,8552+31])
                        Tpat_value
                        pattern (src/ppx.ml[263,8552+4]..src/ppx.ml[263,8552+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[263,8552+17]..src/ppx.ml[263,8552+31])
                              Tpat_var "type_extension/1850"
                          ]
                          None
                      expression (src/ppx.ml[263,8552+34]..src/ppx.ml[263,8552+105])
                        Texp_apply
                        expression (src/ppx.ml[263,8552+35]..src/ppx.ml[263,8552+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,8552+49]..src/ppx.ml[263,8552+104])
                              Texp_apply
                              expression (src/ppx.ml[263,8552+50]..src/ppx.ml[263,8552+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[263,8552+65]..src/ppx.ml[263,8552+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[263,8552+66]..src/ppx.ml[263,8552+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[263,8552+67]..src/ppx.ml[263,8552+85]),None)
                                      expression (src/ppx.ml[263,8552+88]..src/ppx.ml[263,8552+102])
                                        Texp_ident "type_extension/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[264,8658+4]..src/ppx.ml[264,8658+40])
                        Tpat_value
                        pattern (src/ppx.ml[264,8658+4]..src/ppx.ml[264,8658+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[264,8658+19]..src/ppx.ml[264,8658+40])
                              Tpat_var "extension_constructor/1851"
                          ]
                          None
                      expression (src/ppx.ml[264,8658+43]..src/ppx.ml[264,8658+124])
                        Texp_apply
                        expression (src/ppx.ml[264,8658+44]..src/ppx.ml[264,8658+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[264,8658+58]..src/ppx.ml[264,8658+123])
                              Texp_apply
                              expression (src/ppx.ml[264,8658+59]..src/ppx.ml[264,8658+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[264,8658+74]..src/ppx.ml[264,8658+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[264,8658+75]..src/ppx.ml[264,8658+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[264,8658+76]..src/ppx.ml[264,8658+97]),None)
                                      expression (src/ppx.ml[264,8658+100]..src/ppx.ml[264,8658+121])
                                        Texp_ident "extension_constructor/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[265,8783+4]..src/ppx.ml[265,8783+31])
                        Tpat_value
                        pattern (src/ppx.ml[265,8783+4]..src/ppx.ml[265,8783+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[265,8783+17]..src/ppx.ml[265,8783+31])
                              Tpat_var "module_binding/1852"
                          ]
                          None
                      expression (src/ppx.ml[265,8783+34]..src/ppx.ml[265,8783+104])
                        Texp_apply
                        expression (src/ppx.ml[265,8783+35]..src/ppx.ml[265,8783+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[265,8783+49]..src/ppx.ml[265,8783+103])
                              Texp_apply
                              expression (src/ppx.ml[265,8783+50]..src/ppx.ml[265,8783+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[265,8783+65]..src/ppx.ml[265,8783+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[265,8783+66]..src/ppx.ml[265,8783+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[265,8783+67]..src/ppx.ml[265,8783+85]),None)
                                      expression (src/ppx.ml[265,8783+87]..src/ppx.ml[265,8783+101])
                                        Texp_ident "module_binding/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[266,8888+4]..src/ppx.ml[266,8888+39])
                        Tpat_value
                        pattern (src/ppx.ml[266,8888+4]..src/ppx.ml[266,8888+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[266,8888+20]..src/ppx.ml[266,8888+39])
                              Tpat_var "module_binding_list/1853"
                          ]
                          None
                      expression (src/ppx.ml[266,8888+42]..src/ppx.ml[266,8888+121])
                        Texp_apply
                        expression (src/ppx.ml[266,8888+43]..src/ppx.ml[266,8888+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[266,8888+57]..src/ppx.ml[266,8888+120])
                              Texp_apply
                              expression (src/ppx.ml[266,8888+58]..src/ppx.ml[266,8888+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[266,8888+73]..src/ppx.ml[266,8888+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[266,8888+74]..src/ppx.ml[266,8888+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[266,8888+75]..src/ppx.ml[266,8888+96]),None)
                                      expression (src/ppx.ml[266,8888+99]..src/ppx.ml[266,8888+118])
                                        Texp_ident "module_binding_list/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[267,9010+4]..src/ppx.ml[267,9010+40])
                        Tpat_value
                        pattern (src/ppx.ml[267,9010+4]..src/ppx.ml[267,9010+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[267,9010+17]..src/ppx.ml[267,9010+40])
                              Tpat_var "module_type_declaration/1854"
                          ]
                          None
                      expression (src/ppx.ml[267,9010+43]..src/ppx.ml[267,9010+124])
                        Texp_apply
                        expression (src/ppx.ml[267,9010+44]..src/ppx.ml[267,9010+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,9010+58]..src/ppx.ml[267,9010+123])
                              Texp_apply
                              expression (src/ppx.ml[267,9010+59]..src/ppx.ml[267,9010+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,9010+74]..src/ppx.ml[267,9010+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,9010+75]..src/ppx.ml[267,9010+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[267,9010+76]..src/ppx.ml[267,9010+95]),None)
                                      expression (src/ppx.ml[267,9010+98]..src/ppx.ml[267,9010+121])
                                        Texp_ident "module_type_declaration/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,9152+4]..src/ppx.ml[269,9152+30])
                        Tpat_value
                        pattern (src/ppx.ml[269,9152+4]..src/ppx.ml[269,9152+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[269,9152+14]..src/ppx.ml[269,9152+30])
                              Tpat_var "open_description/1855"
                          ]
                          None
                      expression (src/ppx.ml[269,9152+33]..src/ppx.ml[269,9152+103])
                        Texp_apply
                        expression (src/ppx.ml[269,9152+34]..src/ppx.ml[269,9152+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,9152+48]..src/ppx.ml[269,9152+102])
                              Texp_apply
                              expression (src/ppx.ml[269,9152+49]..src/ppx.ml[269,9152+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,9152+64]..src/ppx.ml[269,9152+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,9152+65]..src/ppx.ml[269,9152+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[269,9152+66]..src/ppx.ml[269,9152+81]),None)
                                      expression (src/ppx.ml[269,9152+84]..src/ppx.ml[269,9152+100])
                                        Texp_ident "open_description/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[270,9256+4]..src/ppx.ml[270,9256+36])
                        Tpat_value
                        pattern (src/ppx.ml[270,9256+4]..src/ppx.ml[270,9256+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[270,9256+15]..src/ppx.ml[270,9256+36])
                              Tpat_var "class_declarations/1856"
                          ]
                          None
                      expression (src/ppx.ml[270,9256+39]..src/ppx.ml[270,9256+113])
                        Texp_apply
                        expression (src/ppx.ml[270,9256+40]..src/ppx.ml[270,9256+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[270,9256+54]..src/ppx.ml[270,9256+112])
                              Texp_apply
                              expression (src/ppx.ml[270,9256+55]..src/ppx.ml[270,9256+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[270,9256+70]..src/ppx.ml[270,9256+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[270,9256+71]..src/ppx.ml[270,9256+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[270,9256+72]..src/ppx.ml[270,9256+89]),None)
                                      expression (src/ppx.ml[270,9256+92]..src/ppx.ml[270,9256+110])
                                        Texp_ident "class_declarations/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[271,9370+4]..src/ppx.ml[271,9370+45])
                        Tpat_value
                        pattern (src/ppx.ml[271,9370+4]..src/ppx.ml[271,9370+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[271,9370+20]..src/ppx.ml[271,9370+45])
                              Tpat_var "class_type_declarations/1857"
                          ]
                          None
                      expression (src/ppx.ml[271,9370+48]..src/ppx.ml[271,9370+132])
                        Texp_apply
                        expression (src/ppx.ml[271,9370+49]..src/ppx.ml[271,9370+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[271,9370+63]..src/ppx.ml[271,9370+131])
                              Texp_apply
                              expression (src/ppx.ml[271,9370+64]..src/ppx.ml[271,9370+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[271,9370+79]..src/ppx.ml[271,9370+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[271,9370+80]..src/ppx.ml[271,9370+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[271,9370+81]..src/ppx.ml[271,9370+103]),None)
                                      expression (src/ppx.ml[271,9370+106]..src/ppx.ml[271,9370+129])
                                        Texp_ident "class_type_declarations/1857"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[272,9503+4]..src/ppx.ml[272,9503+39])
                        Tpat_value
                        pattern (src/ppx.ml[272,9503+4]..src/ppx.ml[272,9503+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[272,9503+18]..src/ppx.ml[272,9503+39])
                              Tpat_var "include_declaration/1858"
                          ]
                          None
                      expression (src/ppx.ml[272,9503+41]..src/ppx.ml[272,9503+117])
                        Texp_apply
                        expression (src/ppx.ml[272,9503+42]..src/ppx.ml[272,9503+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[272,9503+56]..src/ppx.ml[272,9503+116])
                              Texp_apply
                              expression (src/ppx.ml[272,9503+57]..src/ppx.ml[272,9503+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[272,9503+72]..src/ppx.ml[272,9503+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[272,9503+73]..src/ppx.ml[272,9503+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[272,9503+74]..src/ppx.ml[272,9503+93]),None)
                                      expression (src/ppx.ml[272,9503+95]..src/ppx.ml[272,9503+114])
                                        Texp_ident "include_declaration/1858"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[273,9621+4]..src/ppx.ml[273,9621+30])
                        Tpat_value
                        pattern (src/ppx.ml[273,9621+4]..src/ppx.ml[273,9621+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[273,9621+19]..src/ppx.ml[273,9621+30])
                              Tpat_var "attribute/1859"
                          ]
                          None
                      expression (src/ppx.ml[273,9621+32]..src/ppx.ml[273,9621+101])
                        Texp_apply
                        expression (src/ppx.ml[273,9621+33]..src/ppx.ml[273,9621+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[273,9621+47]..src/ppx.ml[273,9621+100])
                              Texp_apply
                              expression (src/ppx.ml[273,9621+48]..src/ppx.ml[273,9621+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[273,9621+63]..src/ppx.ml[273,9621+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[273,9621+64]..src/ppx.ml[273,9621+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[273,9621+65]..src/ppx.ml[273,9621+86]),None)
                                      expression (src/ppx.ml[273,9621+89]..src/ppx.ml[273,9621+98])
                                        Texp_ident "attribute/1859"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[274,9723+4]..src/ppx.ml[274,9723+44])
                        Tpat_value
                        pattern (src/ppx.ml[274,9723+4]..src/ppx.ml[274,9723+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[274,9723+21]..src/ppx.ml[274,9723+30])
                              Tpat_var "extension/1860"
                            pattern (src/ppx.ml[274,9723+33]..src/ppx.ml[274,9723+43])
                              Tpat_var "attributes/1861"
                          ]
                          None
                      expression (src/ppx.ml[274,9723+46]..src/ppx.ml[274,9723+128])
                        Texp_apply
                        expression (src/ppx.ml[274,9723+47]..src/ppx.ml[274,9723+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,9723+61]..src/ppx.ml[274,9723+127])
                              Texp_apply
                              expression (src/ppx.ml[274,9723+62]..src/ppx.ml[274,9723+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,9723+77]..src/ppx.ml[274,9723+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,9723+78]..src/ppx.ml[274,9723+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[274,9723+79]..src/ppx.ml[274,9723+100]),None)
                                      expression (src/ppx.ml[274,9723+103]..src/ppx.ml[274,9723+112])
                                        Texp_ident "extension/1860"
                                      expression (src/ppx.ml[274,9723+115]..src/ppx.ml[274,9723+125])
                                        Texp_ident "attributes/1861"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[276,9853+0]..src/ppx.ml[276,9853+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[276,9853+4]..src/ppx.ml[276,9853+7])
          Tpat_var "foo/1862"
        expression (src/ppx.ml[276,9853+10]..src/ppx.ml[276,9853+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[278,9868+0]..src/ppx.ml[286,10087+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9868+4]..src/ppx.ml[278,9868+12])
          Tpat_var "printone/1863"
        expression (src/ppx.ml[278,9868+13]..src/ppx.ml[286,10087+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[278,9868+14]..src/ppx.ml[278,9868+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[278,9868+18]..src/ppx.ml[278,9868+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1864"
                pattern (src/ppx.ml[278,9868+14]..src/ppx.ml[278,9868+15])
                  Tpat_any
              expression (src/ppx.ml[279,9911+2]..src/ppx.ml[286,10087+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[278,9868+36]..src/ppx.ml[278,9868+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[279,9911+8]..src/ppx.ml[279,9911+9])
                  Texp_ident "x/1864"
                [
                  <case>
                    pattern (src/ppx.ml[280,9926+3]..src/ppx.ml[283,9976+3])
                      Tpat_value
                      pattern (src/ppx.ml[280,9926+3]..src/ppx.ml[283,9976+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[281,9931+4]..src/ppx.ml[281,9931+13])
                              Tpat_var "pstr_desc/1865"
                        ]
                    expression (src/ppx.ml[285,10060+4]..src/ppx.ml[286,10087+6])
                      Texp_sequence
                      expression (src/ppx.ml[285,10060+4]..src/ppx.ml[285,10060+25])
                        Texp_apply
                        expression (src/ppx.ml[285,10060+5]..src/ppx.ml[285,10060+14])
                          Texp_ident "printdesc/1840"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[285,10060+15]..src/ppx.ml[285,10060+24])
                              Texp_ident "pstr_desc/1865"
                        ]
                      expression (src/ppx.ml[286,10087+4]..src/ppx.ml[286,10087+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[292,10207+0]..src/ppx.ml[294,10288+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[292,10207+4]..src/ppx.ml[292,10207+13])
          Tpat_var "printone2/1866"
        expression (src/ppx.ml[292,10207+14]..src/ppx.ml[294,10288+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[292,10207+14]..src/ppx.ml[292,10207+15])
                Tpat_var "x/1867"
              expression (src/ppx.ml[293,10231+2]..src/ppx.ml[294,10288+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[292,10207+17]..src/ppx.ml[292,10207+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[293,10231+2]..src/ppx.ml[293,10231+55])
                  Texp_apply
                  expression (src/ppx.ml[293,10231+3]..src/ppx.ml[293,10231+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[293,10231+17]..src/ppx.ml[293,10231+54])
                        Texp_apply
                        expression (src/ppx.ml[293,10231+18]..src/ppx.ml[293,10231+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[293,10231+33]..src/ppx.ml[293,10231+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[293,10231+34]..src/ppx.ml[293,10231+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[293,10231+35]..src/ppx.ml[293,10231+49]),None)
                                expression (src/ppx.ml[293,10231+51]..src/ppx.ml[293,10231+52])
                                  Texp_ident "x/1867"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[294,10288+2]..src/ppx.ml[294,10288+12])
                  Texp_apply
                  expression (src/ppx.ml[294,10288+2]..src/ppx.ml[294,10288+10])
                    Texp_ident "printone/1863"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[294,10288+11]..src/ppx.ml[294,10288+12])
                        Texp_ident "x/1867"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[296,10304+0]..src/ppx.ml[298,10335+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10304+4]..src/ppx.ml[296,10304+9])
          Tpat_var "proc1/1868"
        expression (src/ppx.ml[296,10304+10]..src/ppx.ml[298,10335+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[296,10304+10]..src/ppx.ml[296,10304+11])
                Tpat_var "x/1870"
              expression (src/ppx.ml[297,10320+2]..src/ppx.ml[298,10335+3])
                Texp_sequence
                expression (src/ppx.ml[297,10320+2]..src/ppx.ml[297,10320+13])
                  Texp_apply
                  expression (src/ppx.ml[297,10320+2]..src/ppx.ml[297,10320+11])
                    Texp_ident "printone2/1866"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[297,10320+12]..src/ppx.ml[297,10320+13])
                        Texp_ident "x/1870"
                  ]
                expression (src/ppx.ml[298,10335+2]..src/ppx.ml[298,10335+3])
                  Texp_ident "x/1870"
          ]
    ]
  structure_item (src/ppx.ml[300,10340+0]..src/ppx.ml[303,10489+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10340+4]..src/ppx.ml[300,10340+9])
          Tpat_var "debug/1871"
        expression (src/ppx.ml[300,10340+10]..src/ppx.ml[303,10489+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[300,10340+10]..src/ppx.ml[300,10340+14])
                Tpat_var "proc/1873"
              expression (src/ppx.ml[300,10340+15]..src/ppx.ml[303,10489+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[300,10340+15]..src/ppx.ml[300,10340+18])
                      Tpat_var "lst/1874"
                    expression (src/ppx.ml[301,10368+2]..src/ppx.ml[303,10489+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[300,10340+21]..src/ppx.ml[300,10340+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[301,10368+6]..src/ppx.ml[301,10368+12])
                            Tpat_var "result/1875"
                          expression (src/ppx.ml[301,10368+15]..src/ppx.ml[301,10368+32])
                            Texp_apply
                            expression (src/ppx.ml[301,10368+15]..src/ppx.ml[301,10368+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[301,10368+24]..src/ppx.ml[301,10368+28])
                                  Texp_ident "proc/1873"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[301,10368+29]..src/ppx.ml[301,10368+32])
                                  Texp_ident "lst/1874"
                            ]
                      ]
                      expression (src/ppx.ml[302,10404+2]..src/ppx.ml[303,10489+4])
                        Texp_sequence
                        expression (src/ppx.ml[302,10404+2]..src/ppx.ml[302,10404+83])
                          Texp_apply
                          expression (src/ppx.ml[302,10404+2]..src/ppx.ml[302,10404+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[302,10404+12]..src/ppx.ml[302,10404+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[302,10404+17]..src/ppx.ml[302,10404+18])
                                      Tpat_var "i/1939"
                                    expression (src/ppx.ml[302,10404+22]..src/ppx.ml[302,10404+75])
                                      Texp_apply
                                      expression (src/ppx.ml[302,10404+22]..src/ppx.ml[302,10404+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[302,10404+36]..src/ppx.ml[302,10404+75])
                                            Texp_apply
                                            expression (src/ppx.ml[302,10404+37]..src/ppx.ml[302,10404+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[302,10404+52]..src/ppx.ml[302,10404+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[302,10404+53]..src/ppx.ml[302,10404+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[302,10404+54]..src/ppx.ml[302,10404+69]),None)
                                                    expression (src/ppx.ml[302,10404+72]..src/ppx.ml[302,10404+73])
                                                      Texp_ident "i/1939"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[302,10404+77]..src/ppx.ml[302,10404+83])
                                Texp_ident "result/1875"
                          ]
                        expression (src/ppx.ml[303,10489+2]..src/ppx.ml[303,10489+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[305,10511+0]..src/ppx.ml[308,10635+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[305,10511+4]..src/ppx.ml[305,10511+13])
          Tpat_var "transform/1940"
        expression (src/ppx.ml[305,10511+14]..src/ppx.ml[308,10635+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[305,10511+14]..src/ppx.ml[305,10511+15])
                Tpat_var "x/1942"
              expression (src/ppx.ml[306,10566+2]..src/ppx.ml[308,10635+3])
                Texp_sequence
                expression (src/ppx.ml[306,10566+2]..src/ppx.ml[306,10566+48])
                  Texp_apply
                  expression (src/ppx.ml[306,10566+3]..src/ppx.ml[306,10566+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[306,10566+17]..src/ppx.ml[306,10566+47])
                        Texp_apply
                        expression (src/ppx.ml[306,10566+18]..src/ppx.ml[306,10566+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[306,10566+33]..src/ppx.ml[306,10566+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[306,10566+34]..src/ppx.ml[306,10566+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[306,10566+35]..src/ppx.ml[306,10566+42]),None)
                                expression (src/ppx.ml[306,10566+44]..src/ppx.ml[306,10566+45])
                                  Texp_ident "x/1942"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[307,10616+2]..src/ppx.ml[308,10635+3])
                  Texp_sequence
                  expression (src/ppx.ml[307,10616+2]..src/ppx.ml[307,10616+17])
                    Texp_apply
                    expression (src/ppx.ml[307,10616+3]..src/ppx.ml[307,10616+8])
                      Texp_ident "debug/1871"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[307,10616+9]..src/ppx.ml[307,10616+14])
                          Texp_ident "proc1/1868"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[307,10616+15]..src/ppx.ml[307,10616+16])
                          Texp_ident "x/1942"
                    ]
                  expression (src/ppx.ml[308,10635+2]..src/ppx.ml[308,10635+3])
                    Texp_ident "x/1942"
          ]
    ]
  structure_item (src/ppx.ml[310,10642+1]..src/ppx.ml[310,10642+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[310,10642+5]..src/ppx.ml[310,10642+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[310,10642+10]..src/ppx.ml[310,10642+69])
          Texp_apply
          expression (src/ppx.ml[310,10642+10]..src/ppx.ml[310,10642+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[310,10642+47]..src/ppx.ml[310,10642+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[310,10642+47]..src/ppx.ml[310,10642+56])
                    Texp_ident "transform/1940"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[310,10642+57]..src/ppx.ml[310,10642+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[310,10642+58]..src/ppx.ml[310,10642+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.133>;
 "foo"[value] -> <Ppx.125>;
 "print_constructor_arguments"[value] -> <Ppx.72>;
 "print_type_decl"[value] -> <Ppx.90>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.104>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.126>;
 "printone2"[value] -> <Ppx.129>;
 "proc1"[value] -> <Ppx.131>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.32>;
 "process_core_type_desc"[value] -> <Ppx.30>;
 "process_core_type_list"[value] -> <Ppx.33>;
 "process_id"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.86>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.76>;
 "process_record_kind"[value] -> <Ppx.29>;
 "process_record_kind_list"[value] -> <Ppx.31>;
 "process_type_decl_list"[value] -> <Ppx.100>;
 "transform"[value] -> <Ppx.138>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5105 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (let
        (process_id/1437 =
           (function x/1439 : int
             (funct-body Ppx.process_id src/ppx.ml(69)<ghost>:1893-1959
               (before Ppx.process_id src/ppx.ml(70):1901-1959
                 (after Ppx.process_id src/ppx.ml(70):1901-1959
                   (apply (field 45 (global Stdlib!))
                     (after Ppx.process_id src/ppx.ml(70):1916-1958
                       (apply (field 65 (global Batteries!))
                         (makeblock 0 "DEBUG:process_id:" x/1439)))))))))
        (letrec
          (process_record_kind/1440
             (function x/1445 : int
               (funct-body Ppx.process_record_kind src/ppx.ml(72)<ghost>:1990-2494
                 (before Ppx.process_record_kind src/ppx.ml(73):1998-2494
                   (let
                     (pld_attributes/1450 =a (field 4 x/1445)
                      pld_loc/1449 =a (field 3 x/1445)
                      pld_type/1448 =a (field 2 x/1445)
                      pld_mutable/1447 =a (field 1 x/1445)
                      pld_name/1446 =a (field 0 x/1445))
                     (before Ppx.process_record_kind src/ppx.ml(81):2204-2494
                       (after Ppx.process_record_kind src/ppx.ml(81):2204-2494
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.process_record_kind src/ppx.ml(81):2219-2493
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 (*,*,*,int,*,*)
                                 "DEBUG:precord_kind:" pld_name/1446
                                 "mutable" pld_mutable/1447 "type"
                                 pld_type/1448))))))))))
            process_core_type_desc/1441
              (function x/1451 : int
                (funct-body Ppx.process_core_type_desc src/ppx.ml(88)<ghost>:2522-4171
                  (before Ppx.process_core_type_desc src/ppx.ml(89):2528-4171
                    (switch* x/1451
                     case int 0:
                      (before Ppx.process_core_type_desc src/ppx.ml(102):2891-2943
                        (after Ppx.process_core_type_desc src/ppx.ml(102):2891-2943
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(102):2906-2942
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_any:")))))
                     case tag 0:
                      (let (name/1455 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(103):2964-3024
                          (after Ppx.process_core_type_desc src/ppx.ml(103):2964-3024
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(103):2979-3023
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_var:" name/1455)))))))
                     case tag 1:
                      (let
                        (core_type2/1458 =a (field 2 x/1451)
                         core_type/1457 =a (field 1 x/1451)
                         arg_label/1456 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(105):3084-3141
                          (after Ppx.process_core_type_desc src/ppx.ml(105):3084-3141
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(105):3099-3140
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow10:"))))))
                     case tag 2:
                      (let (a/1454 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(99):2799-2854
                          (after Ppx.process_core_type_desc src/ppx.ml(99):2799-2854
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(99):2814-2853
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_tuple:"))))))
                     case tag 3:
                      (let
                        (b/1453 =a (field 1 x/1451)
                         a/1452 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(92):2616-2745
                          (seq
                            (after Ppx.process_core_type_desc src/ppx.ml(92):2616-2630
                              (apply process_id/1437 a/1452))
                            (before Ppx.process_core_type_desc src/ppx.ml(93):2636-2745
                              (seq
                                (after Ppx.process_core_type_desc src/ppx.ml(93):2636-2662
                                  (apply process_core_type_list/1444 b/1453))
                                (before Ppx.process_core_type_desc src/ppx.ml(95):2670-2745
                                  (after Ppx.process_core_type_desc src/ppx.ml(95):2670-2745
                                    (apply (field 45 (global Stdlib!))
                                      (after Ppx.process_core_type_desc src/ppx.ml(95):2685-2744
                                        (apply (field 65 (global Batteries!))
                                          (makeblock 0 "DEBUG:Ptyp_constr:"
                                            "id" a/1452 "types" b/1453)))))))))))
                     case tag 4:
                      (let
                        (b/1460 =a (field 1 x/1451)
                         a/1459 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(109):3216-3272
                          (after Ppx.process_core_type_desc src/ppx.ml(109):3216-3272
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(109):3231-3271
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow8:"))))))
                     case tag 5:
                      (let
                        (b/1462 =a (field 1 x/1451)
                         a/1461 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(112):3347-3403
                          (after Ppx.process_core_type_desc src/ppx.ml(112):3347-3403
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(112):3362-3402
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow7:"))))))
                     case tag 6:
                      (let
                        (b/1464 =a (field 1 x/1451)
                         a/1463 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(115):3469-3525
                          (after Ppx.process_core_type_desc src/ppx.ml(115):3469-3525
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(115):3484-3524
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow6:"))))))
                     case tag 7:
                      (let
                        (c/1467 =a (field 2 x/1451)
                         b/1466 =a (field 1 x/1451)
                         a/1465 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(118):3620-3676
                          (after Ppx.process_core_type_desc src/ppx.ml(118):3620-3676
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(118):3635-3675
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow5:"))))))
                     case tag 8:
                      (let
                        (b/1469 =a (field 1 x/1451)
                         a/1468 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(121):3745-3801
                          (after Ppx.process_core_type_desc src/ppx.ml(121):3745-3801
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(121):3760-3800
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow4:"))))))
                     case tag 9:
                      (let (a/1470 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(124):3854-3912
                          (after Ppx.process_core_type_desc src/ppx.ml(124):3854-3912
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(124):3869-3911
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1470)))))))
                     case tag 10:
                      (let (a/1471 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(128):4110-4171
                          (after Ppx.process_core_type_desc src/ppx.ml(128):4110-4171
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):4125-4170
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_extension:"
                                    a/1471)))))))))))
            process_record_kind_list/1442
              (function x/1794 : int
                (funct-body Ppx.process_record_kind_list src/ppx.ml(130)<ghost>:4202-4319
                  (before Ppx.process_record_kind_list src/ppx.ml(131):4210-4319
                    (if x/1794
                      (let
                        (t/1796 =a (field 1 x/1794)
                         h/1795 =a (field 0 x/1794))
                        (before Ppx.process_record_kind_list src/ppx.ml(134):4254-4319
                          (seq
                            (after Ppx.process_record_kind_list src/ppx.ml(134):4254-4277
                              (apply process_record_kind/1440 h/1795))
                            (before Ppx.process_record_kind_list src/ppx.ml(135):4283-4319
                              (seq
                                (after Ppx.process_record_kind_list src/ppx.ml(135):4283-4311
                                  (apply process_record_kind_list/1442
                                    t/1796))
                                (before Ppx.process_record_kind_list src/ppx.ml(136):4317-4319
                                  0))))))
                      (before Ppx.process_record_kind_list src/ppx.ml(132):4233-4235
                        0)))))
            process_core_type/1443
              (function x/1797 : int
                (funct-body Ppx.process_core_type src/ppx.ml(138)<ghost>:4341-4671
                  (before Ppx.process_core_type src/ppx.ml(139):4349-4671
                    (let
                      (ptyp_attributes/1801 =a (field 3 x/1797)
                       ptyp_loc_stack/1800 =a (field 2 x/1797)
                       ptyp_loc/1799 =a (field 1 x/1797)
                       ptyp_desc/1798 =a (field 0 x/1797))
                      (before Ppx.process_core_type src/ppx.ml(146):4536-4671
                        (seq
                          (after Ppx.process_core_type src/ppx.ml(146):4536-4570
                            (apply process_core_type_desc/1441
                              ptyp_desc/1798))
                          (before Ppx.process_core_type src/ppx.ml(148):4595-4671
                            (after Ppx.process_core_type src/ppx.ml(148):4595-4671
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type src/ppx.ml(148):4610-4670
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                      ptyp_desc/1798))))))))))))
            process_core_type_list/1444
              (function x/1802 : int
                (funct-body Ppx.process_core_type_list src/ppx.ml(149)<ghost>:4698-4817
                  (before Ppx.process_core_type_list src/ppx.ml(150):4721-4817
                    (if x/1802
                      (let
                        (t/1804 =a (field 1 x/1802)
                         h/1803 =a (field 0 x/1802))
                        (before Ppx.process_core_type_list src/ppx.ml(153):4765-4817
                          (seq
                            (after Ppx.process_core_type_list src/ppx.ml(153):4765-4786
                              (apply process_core_type/1443 h/1803))
                            (before Ppx.process_core_type_list src/ppx.ml(154):4792-4817
                              (after Ppx.process_core_type_list src/ppx.ml(154):4792-4817
                                (apply process_core_type_list/1444 t/1804))))))
                      (before Ppx.process_core_type_list src/ppx.ml(151):4744-4746
                        0))))))
          (let
            (print_constructor_arguments/1805 =
               (function x/1807 : int
                 (funct-body Ppx.print_constructor_arguments src/ppx.ml(161)<ghost>:4863-5096
                   (before Ppx.print_constructor_arguments src/ppx.ml(162):4871-5096
                     (switch* x/1807
                      case tag 0:
                       (let (a/1808 =a (field 0 x/1807))
                         (before Ppx.print_constructor_arguments src/ppx.ml(164):4909-5001
                           (seq
                             (after Ppx.print_constructor_arguments src/ppx.ml(164):4909-4935
                               (apply process_core_type_list/1444 a/1808))
                             (before Ppx.print_constructor_arguments src/ppx.ml(165):4941-5001
                               (after Ppx.print_constructor_arguments src/ppx.ml(165):4941-5001
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_constructor_arguments src/ppx.ml(165):4956-5000
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:Pcstr_tuple:"
                                         a/1808)))))))))
                      case tag 1:
                       (let (a/1809 =a (field 0 x/1807))
                         (before Ppx.print_constructor_arguments src/ppx.ml(168):5035-5096
                           (after Ppx.print_constructor_arguments src/ppx.ml(168):5035-5096
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_constructor_arguments src/ppx.ml(168):5050-5095
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:Pcstr_record:" a/1809))))))))))))
            (letrec
              (process_pype_variant_constructor_declaration_list/1810
                 (function x/1811 : int
                   (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(170)<ghost>:5155-6082
                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(171):5163-6082
                       (if x/1811
                         (let
                           (t/1813 =a (field 1 x/1811)
                            h/1812 =a (field 0 x/1811))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(175):5272-6082
                             (let
                               (pcd_attributes/1819 =a (field 5 h/1812)
                                pcd_loc/1818 =a (field 4 h/1812)
                                pcd_res/1817 =a (field 3 h/1812)
                                pcd_args/1816 =a (field 2 h/1812)
                                pcd_vars/1815 =a (field 1 h/1812)
                                pcd_name/1814 =a (field 0 h/1812))
                               (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(186):5611-6082
                                 (seq
                                   (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(186):5611-5648
                                     (apply print_constructor_arguments/1805
                                       pcd_args/1816))
                                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5656-6082
                                     (seq
                                       (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5656-6011
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5671-6010
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "constructor_declaration:"
                                                 pcd_name/1814 "vars"
                                                 pcd_vars/1815 "args"
                                                 pcd_args/1816 "res"
                                                 pcd_res/1817 "loc"
                                                 pcd_loc/1818 "attrs"
                                                 pcd_attributes/1819)))))
                                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(201):6019-6082
                                         (seq
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(201):6019-6072
                                             (apply
                                               process_pype_variant_constructor_declaration_list/1810
                                               t/1813))
                                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(202):6080-6082
                                             0))))))))))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(172):5186-5188
                           0))))))
              (let
                (process_kind/1820 =
                   (function x/1822 : int
                     (funct-body Ppx.process_kind src/ppx.ml(204)<ghost>:6102-6560
                       (before Ppx.process_kind src/ppx.ml(205):6110-6560
                         (switch* x/1822
                          case int 0:
                           (before Ppx.process_kind src/ppx.ml(207):6168-6226
                             (after Ppx.process_kind src/ppx.ml(207):6168-6226
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(207):6183-6225
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case int 1:
                           (before Ppx.process_kind src/ppx.ml(215):6502-6560
                             (after Ppx.process_kind src/ppx.ml(215):6502-6560
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(215):6517-6559
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case tag 0:
                           (let (a/1823 =a (field 0 x/1822))
                             (before Ppx.process_kind src/ppx.ml(209):6254-6374
                               (seq
                                 (after Ppx.process_kind src/ppx.ml(209):6254-6307
                                   (apply
                                     process_pype_variant_constructor_declaration_list/1810
                                     a/1823))
                                 (before Ppx.process_kind src/ppx.ml(210):6313-6374
                                   (after Ppx.process_kind src/ppx.ml(210):6313-6374
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.process_kind src/ppx.ml(210):6328-6373
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0
                                             "DEBUG:Ptype_variant:" a/1823)))))))))
                          case tag 1:
                           (let (a/1824 =a (field 0 x/1822))
                             (before Ppx.process_kind src/ppx.ml(214):6455-6482
                               (after Ppx.process_kind src/ppx.ml(214):6455-6482
                                 (apply process_record_kind_list/1442 a/1824))))))))
                 print_type_decl/1825 =
                   (function x/1827 : int
                     (funct-body Ppx.print_type_decl src/ppx.ml(217)<ghost>:6581-7606
                       (before Ppx.print_type_decl src/ppx.ml(218):6589-7606
                         (let
                           (ptype_loc/1835 =a (field 7 x/1827)
                            ptype_attributes/1834 =a (field 6 x/1827)
                            ptype_manifest/1833 =a (field 5 x/1827)
                            ptype_private/1832 =a (field 4 x/1827)
                            ptype_kind/1831 =a (field 3 x/1827)
                            ptype_cstrs/1830 =a (field 2 x/1827)
                            ptype_params/1829 =a (field 1 x/1827)
                            ptype_name/1828 =a (field 0 x/1827))
                           (before Ppx.print_type_decl src/ppx.ml(229):6996-7606
                             (seq
                               (after Ppx.print_type_decl src/ppx.ml(229):6996-7061
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_type_decl src/ppx.ml(229):7011-7060
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:type_decl:"
                                         ptype_name/1828)))))
                               (before Ppx.print_type_decl src/ppx.ml(230):7067-7606
                                 (seq
                                   (after Ppx.print_type_decl src/ppx.ml(230):7067-7135
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.print_type_decl src/ppx.ml(230):7082-7134
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0 "DEBUG:parameters:"
                                             ptype_params/1829)))))
                                   (before Ppx.print_type_decl src/ppx.ml(231):7141-7606
                                     (seq
                                       (after Ppx.print_type_decl src/ppx.ml(231):7141-7203
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.print_type_decl src/ppx.ml(231):7156-7202
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:cstrs:"
                                                 ptype_cstrs/1830)))))
                                       (before Ppx.print_type_decl src/ppx.ml(232):7209-7606
                                         (seq
                                           (after Ppx.print_type_decl src/ppx.ml(232):7209-7268
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.print_type_decl src/ppx.ml(232):7224-7267
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG:kind:"
                                                     ptype_kind/1831)))))
                                           (before Ppx.print_type_decl src/ppx.ml(233):7274-7606
                                             (seq
                                               (after Ppx.print_type_decl src/ppx.ml(233):7274-7299
                                                 (apply process_kind/1820
                                                   ptype_kind/1831))
                                               (before Ppx.print_type_decl src/ppx.ml(234):7305-7606
                                                 (after Ppx.print_type_decl src/ppx.ml(234):7305-7606
                                                   (apply
                                                     (field 45
                                                       (global Stdlib!))
                                                     (after Ppx.print_type_decl src/ppx.ml(234):7320-7605
                                                       (apply
                                                         (field 65
                                                           (global Batteries!))
                                                         (makeblock 0 (*,int,*,*,*,*,*,*)
                                                           "DEBUG:private:"
                                                           ptype_private/1832
                                                           "DEBUG:manifest"
                                                           ptype_manifest/1833
                                                           "DEBUG:attr"
                                                           ptype_attributes/1834
                                                           "DEBUG:loc"
                                                           ptype_loc/1835)))))))))))))))))))))
                (letrec
                  (process_type_decl_list/1836
                     (function x/1837 : int
                       (funct-body Ppx.process_type_decl_list src/ppx.ml(240)<ghost>:7642-7753
                         (before Ppx.process_type_decl_list src/ppx.ml(241):7650-7753
                           (if x/1837
                             (let
                               (t/1839 =a (field 1 x/1837)
                                h/1838 =a (field 0 x/1837))
                               (before Ppx.process_type_decl_list src/ppx.ml(244):7694-7753
                                 (seq
                                   (after Ppx.process_type_decl_list src/ppx.ml(244):7694-7713
                                     (apply print_type_decl/1825 h/1838))
                                   (before Ppx.process_type_decl_list src/ppx.ml(245):7719-7753
                                     (seq
                                       (after Ppx.process_type_decl_list src/ppx.ml(245):7719-7745
                                         (apply process_type_decl_list/1836
                                           t/1839))
                                       (before Ppx.process_type_decl_list src/ppx.ml(246):7751-7753
                                         0))))))
                             (before Ppx.process_type_decl_list src/ppx.ml(242):7673-7675
                               0))))))
                  (let
                    (printdesc/1840 =
                       (function x/1842 : int
                         (funct-body Ppx.printdesc src/ppx.ml(248)<ghost>:7772-9851
                           (before Ppx.printdesc src/ppx.ml(249):7807-9851
                             (seq
                               (after Ppx.printdesc src/ppx.ml(249):7807-7873
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printdesc src/ppx.ml(249):7822-7872
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0
                                         "DEBUG:structure_item_desc:" x/1842)))))
                               (before Ppx.printdesc src/ppx.ml(250):7877-9851
                                 (switch* x/1842
                                  case tag 0:
                                   (let
                                     (attributes/1844 =a (field 1 x/1842)
                                      expression/1843 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(251):7931-8007
                                       (after Ppx.printdesc src/ppx.ml(251):7931-8007
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(251):7946-8006
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_eval:"
                                                 expression/1843
                                                 attributes/1844)))))))
                                  case tag 1:
                                   (let
                                     (value_binding_list/1846 =a
                                        (field 1 x/1842)
                                      rec_flag/1845 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(253):8076-8210
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(253):8076-8160
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(253):8091-8159
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_value:"
                                                   rec_flag/1845
                                                   value_binding_list/1846)))))
                                         (before Ppx.printdesc src/ppx.ml(254):8166-8210
                                           (after Ppx.printdesc src/ppx.ml(254):8166-8210
                                             (apply
                                               print_value_binding_list/1298
                                               value_binding_list/1846))))))
                                  case tag 2:
                                   (let
                                     (value_description/1847 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(255):8250-8327
                                       (after Ppx.printdesc src/ppx.ml(255):8250-8327
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(255):8265-8326
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_primitive:"
                                                 value_description/1847)))))))
                                  case tag 3:
                                   (let
                                     (type_declaration_list/1849 =a
                                        (field 1 x/1842)
                                      rec_flag/1848 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(259):8412-8549
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(259):8412-8457
                                           (apply process_type_decl_list/1836
                                             type_declaration_list/1849))
                                         (before Ppx.printdesc src/ppx.ml(260):8463-8549
                                           (after Ppx.printdesc src/ppx.ml(260):8463-8549
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(260):8478-8548
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_type:"
                                                     rec_flag/1848
                                                     type_declaration_list/1849)))))))))
                                  case tag 4:
                                   (let
                                     (type_extension/1850 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(263):8586-8657
                                       (after Ppx.printdesc src/ppx.ml(263):8586-8657
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(263):8601-8656
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_typext:"
                                                 type_extension/1850)))))))
                                  case tag 5:
                                   (let
                                     (extension_constructor/1851 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(264):8701-8782
                                       (after Ppx.printdesc src/ppx.ml(264):8701-8782
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(264):8716-8781
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_exception:"
                                                 extension_constructor/1851)))))))
                                  case tag 6:
                                   (let
                                     (module_binding/1852 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(265):8817-8887
                                       (after Ppx.printdesc src/ppx.ml(265):8817-8887
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(265):8832-8886
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_module:"
                                                 module_binding/1852)))))))
                                  case tag 7:
                                   (let
                                     (module_binding_list/1853 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(266):8930-9009
                                       (after Ppx.printdesc src/ppx.ml(266):8930-9009
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(266):8945-9008
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_recmodule:"
                                                 module_binding_list/1853)))))))
                                  case tag 8:
                                   (let
                                     (module_type_declaration/1854 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(267):9053-9134
                                       (after Ppx.printdesc src/ppx.ml(267):9053-9134
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(267):9068-9133
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_modtype:"
                                                 module_type_declaration/1854)))))))
                                  case tag 9:
                                   (let
                                     (open_description/1855 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(269):9185-9255
                                       (after Ppx.printdesc src/ppx.ml(269):9185-9255
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(269):9200-9254
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:Pstr_open"
                                                 open_description/1855)))))))
                                  case tag 10:
                                   (let
                                     (class_declarations/1856 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(270):9295-9369
                                       (after Ppx.printdesc src/ppx.ml(270):9295-9369
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(270):9310-9368
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class:"
                                                 class_declarations/1856)))))))
                                  case tag 11:
                                   (let
                                     (class_type_declarations/1857 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(271):9418-9502
                                       (after Ppx.printdesc src/ppx.ml(271):9418-9502
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(271):9433-9501
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class_type:"
                                                 class_type_declarations/1857)))))))
                                  case tag 12:
                                   (let
                                     (include_declaration/1858 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(272):9544-9620
                                       (after Ppx.printdesc src/ppx.ml(272):9544-9620
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(272):9559-9619
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_include:"
                                                 include_declaration/1858)))))))
                                  case tag 13:
                                   (let (attribute/1859 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(273):9653-9722
                                       (after Ppx.printdesc src/ppx.ml(273):9653-9722
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(273):9668-9721
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_attribute:"
                                                 attribute/1859)))))))
                                  case tag 14:
                                   (let
                                     (attributes/1861 =a (field 1 x/1842)
                                      extension/1860 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(274):9769-9851
                                       (after Ppx.printdesc src/ppx.ml(274):9769-9851
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(274):9784-9850
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_extension:"
                                                 extension/1860
                                                 attributes/1861)))))))))))))
                     foo/1862 =[int] 1
                     printone/1863 =
                       (function x/1864 : int
                         (funct-body Ppx.printone src/ppx.ml(278)<ghost>:9881-10093
                           (before Ppx.printone src/ppx.ml(279):9913-10093
                             (let
                               (*match*/5106 =a (field 1 x/1864)
                                pstr_desc/1865 =a (field 0 x/1864))
                               (before Ppx.printone src/ppx.ml(285):10064-10093
                                 (seq
                                   (after Ppx.printone src/ppx.ml(285):10064-10085
                                     (apply printdesc/1840 pstr_desc/1865))
                                   (before Ppx.printone src/ppx.ml(286):10091-10093
                                     0)))))))
                     printone2/1866 =
                       (function x/1867 : int
                         (funct-body Ppx.printone2 src/ppx.ml(292)<ghost>:10221-10300
                           (before Ppx.printone2 src/ppx.ml(293):10233-10300
                             (seq
                               (after Ppx.printone2 src/ppx.ml(293):10233-10286
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printone2 src/ppx.ml(293):10248-10285
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:SECOND::" x/1867)))))
                               (before Ppx.printone2 src/ppx.ml(294):10290-10300
                                 (after Ppx.printone2 src/ppx.ml(294):10290-10300
                                   (apply printone/1863 x/1867)))))))
                     proc1/1868 =
                       (function x/1870
                         (funct-body Ppx.proc1 src/ppx.ml(296)<ghost>:10314-10338
                           (before Ppx.proc1 src/ppx.ml(297):10322-10338
                             (seq
                               (after Ppx.proc1 src/ppx.ml(297):10322-10333
                                 (apply printone2/1866 x/1870))
                               (before Ppx.proc1 src/ppx.ml(298):10337-10338
                                 x/1870)))))
                     debug/1871 =
                       (function proc/1873 lst/1874 : int
                         (funct-body Ppx.debug src/ppx.ml(300)<ghost>:10350-10493
                           (before Ppx.debug src/ppx.ml(301):10370-10493
                             (let
                               (result/1875 =
                                  (after Ppx.debug src/ppx.ml(301):10383-10400
                                    (apply (field 18 (global Stdlib__List!))
                                      proc/1873 lst/1874)))
                               (before Ppx.debug src/ppx.ml(302):10406-10493
                                 (seq
                                   (after Ppx.debug src/ppx.ml(302):10406-10487
                                     (apply (field 16 (global Stdlib__List!))
                                       (function i/1939 : int
                                         (funct-body Ppx.debug.(fun) src/ppx.ml(302):10416-10480
                                           (before Ppx.debug.(fun) src/ppx.ml(302):10426-10479
                                             (after Ppx.debug.(fun) src/ppx.ml(302):10426-10479
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.debug.(fun) src/ppx.ml(302):10440-10479
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:TOPLEVEL:"
                                                       i/1939))))))))
                                       result/1875))
                                   (before Ppx.debug src/ppx.ml(303):10491-10493
                                     0)))))))
                     transform/1940 =
                       (function x/1942
                         (funct-body Ppx.transform src/ppx.ml(305)<ghost>:10525-10638
                           (before Ppx.transform src/ppx.ml(306):10568-10638
                             (seq
                               (after Ppx.transform src/ppx.ml(306):10568-10614
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.transform src/ppx.ml(306):10583-10613
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG3:" x/1942)))))
                               (before Ppx.transform src/ppx.ml(307):10618-10638
                                 (seq
                                   (after Ppx.transform src/ppx.ml(307):10618-10633
                                     (apply debug/1871 proc1/1868 x/1942))
                                   (before Ppx.transform src/ppx.ml(308):10637-10638
                                     x/1942)))))))
                     *match*/5108 =
                       (after Ppx src/ppx.ml(310):10652-10711
                         (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                           (makeblock 0 transform/1940) 0 0 0 0 0 0 0
                           "simple-ppx")))
                    (pseudo <unknown location>
                      (makeblock 0 proc2/1279 printdesc2/1282
                        print_value_binding_expr/1284
                        print_value_binding_list2/1291
                        print_value_binding_list/1298 process_id/1437
                        process_record_kind/1440 process_core_type_desc/1441
                        process_record_kind_list/1442 process_core_type/1443
                        process_core_type_list/1444
                        print_constructor_arguments/1805
                        process_pype_variant_constructor_declaration_list/1810
                        process_kind/1820 print_type_decl/1825
                        process_type_decl_list/1836 printdesc/1840 foo/1862
                        printone/1863 printone2/1866 proc1/1868 debug/1871
                        transform/1940))))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (let
        (process_id/1437 =
           (function x/1439 : int
             (funct-body Ppx.process_id src/ppx.ml(69)<ghost>:1893-1959
               (before Ppx.process_id src/ppx.ml(70):1901-1959
                 (after Ppx.process_id src/ppx.ml(70):1901-1959
                   (apply (field 45 (global Stdlib!))
                     (after Ppx.process_id src/ppx.ml(70):1916-1958
                       (apply (field 65 (global Batteries!))
                         (makeblock 0 "DEBUG:process_id:" x/1439)))))))))
        (letrec
          (process_record_kind/1440
             (function x/1445 : int
               (funct-body Ppx.process_record_kind src/ppx.ml(72)<ghost>:1990-2494
                 (before Ppx.process_record_kind src/ppx.ml(73):1998-2494
                   (let
                     (pld_type/1448 =a (field 2 x/1445)
                      pld_mutable/1447 =a (field 1 x/1445)
                      pld_name/1446 =a (field 0 x/1445))
                     (before Ppx.process_record_kind src/ppx.ml(81):2204-2494
                       (after Ppx.process_record_kind src/ppx.ml(81):2204-2494
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.process_record_kind src/ppx.ml(81):2219-2493
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 (*,*,*,int,*,*)
                                 "DEBUG:precord_kind:" pld_name/1446
                                 "mutable" pld_mutable/1447 "type"
                                 pld_type/1448))))))))))
            process_core_type_desc/1441
              (function x/1451 : int
                (funct-body Ppx.process_core_type_desc src/ppx.ml(88)<ghost>:2522-4171
                  (before Ppx.process_core_type_desc src/ppx.ml(89):2528-4171
                    (switch* x/1451
                     case int 0:
                      (before Ppx.process_core_type_desc src/ppx.ml(102):2891-2943
                        (after Ppx.process_core_type_desc src/ppx.ml(102):2891-2943
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(102):2906-2942
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_any:")))))
                     case tag 0:
                      (let (name/1455 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(103):2964-3024
                          (after Ppx.process_core_type_desc src/ppx.ml(103):2964-3024
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(103):2979-3023
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_var:" name/1455)))))))
                     case tag 1:
                      (before Ppx.process_core_type_desc src/ppx.ml(105):3084-3141
                        (after Ppx.process_core_type_desc src/ppx.ml(105):3084-3141
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(105):3099-3140
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10:")))))
                     case tag 2:
                      (before Ppx.process_core_type_desc src/ppx.ml(99):2799-2854
                        (after Ppx.process_core_type_desc src/ppx.ml(99):2799-2854
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(99):2814-2853
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_tuple:")))))
                     case tag 3:
                      (let
                        (b/1453 =a (field 1 x/1451)
                         a/1452 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(92):2616-2745
                          (seq
                            (after Ppx.process_core_type_desc src/ppx.ml(92):2616-2630
                              (apply process_id/1437 a/1452))
                            (before Ppx.process_core_type_desc src/ppx.ml(93):2636-2745
                              (seq
                                (after Ppx.process_core_type_desc src/ppx.ml(93):2636-2662
                                  (apply process_core_type_list/1444 b/1453))
                                (before Ppx.process_core_type_desc src/ppx.ml(95):2670-2745
                                  (after Ppx.process_core_type_desc src/ppx.ml(95):2670-2745
                                    (apply (field 45 (global Stdlib!))
                                      (after Ppx.process_core_type_desc src/ppx.ml(95):2685-2744
                                        (apply (field 65 (global Batteries!))
                                          (makeblock 0 "DEBUG:Ptyp_constr:"
                                            "id" a/1452 "types" b/1453)))))))))))
                     case tag 4:
                      (before Ppx.process_core_type_desc src/ppx.ml(109):3216-3272
                        (after Ppx.process_core_type_desc src/ppx.ml(109):3216-3272
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(109):3231-3271
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8:")))))
                     case tag 5:
                      (before Ppx.process_core_type_desc src/ppx.ml(112):3347-3403
                        (after Ppx.process_core_type_desc src/ppx.ml(112):3347-3403
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(112):3362-3402
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7:")))))
                     case tag 6:
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3469-3525
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3469-3525
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3484-3524
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6:")))))
                     case tag 7:
                      (before Ppx.process_core_type_desc src/ppx.ml(118):3620-3676
                        (after Ppx.process_core_type_desc src/ppx.ml(118):3620-3676
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(118):3635-3675
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5:")))))
                     case tag 8:
                      (before Ppx.process_core_type_desc src/ppx.ml(121):3745-3801
                        (after Ppx.process_core_type_desc src/ppx.ml(121):3745-3801
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(121):3760-3800
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4:")))))
                     case tag 9:
                      (let (a/1470 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(124):3854-3912
                          (after Ppx.process_core_type_desc src/ppx.ml(124):3854-3912
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(124):3869-3911
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1470)))))))
                     case tag 10:
                      (let (a/1471 =a (field 0 x/1451))
                        (before Ppx.process_core_type_desc src/ppx.ml(128):4110-4171
                          (after Ppx.process_core_type_desc src/ppx.ml(128):4110-4171
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):4125-4170
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_extension:"
                                    a/1471)))))))))))
            process_record_kind_list/1442
              (function x/1794 : int
                (funct-body Ppx.process_record_kind_list src/ppx.ml(130)<ghost>:4202-4319
                  (before Ppx.process_record_kind_list src/ppx.ml(131):4210-4319
                    (if x/1794
                      (let
                        (t/1796 =a (field 1 x/1794)
                         h/1795 =a (field 0 x/1794))
                        (before Ppx.process_record_kind_list src/ppx.ml(134):4254-4319
                          (seq
                            (after Ppx.process_record_kind_list src/ppx.ml(134):4254-4277
                              (apply process_record_kind/1440 h/1795))
                            (before Ppx.process_record_kind_list src/ppx.ml(135):4283-4319
                              (seq
                                (after Ppx.process_record_kind_list src/ppx.ml(135):4283-4311
                                  (apply process_record_kind_list/1442
                                    t/1796))
                                (before Ppx.process_record_kind_list src/ppx.ml(136):4317-4319
                                  0))))))
                      (before Ppx.process_record_kind_list src/ppx.ml(132):4233-4235
                        0)))))
            process_core_type/1443
              (function x/1797 : int
                (funct-body Ppx.process_core_type src/ppx.ml(138)<ghost>:4341-4671
                  (before Ppx.process_core_type src/ppx.ml(139):4349-4671
                    (let (ptyp_desc/1798 =a (field 0 x/1797))
                      (before Ppx.process_core_type src/ppx.ml(146):4536-4671
                        (seq
                          (after Ppx.process_core_type src/ppx.ml(146):4536-4570
                            (apply process_core_type_desc/1441
                              ptyp_desc/1798))
                          (before Ppx.process_core_type src/ppx.ml(148):4595-4671
                            (after Ppx.process_core_type src/ppx.ml(148):4595-4671
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type src/ppx.ml(148):4610-4670
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                      ptyp_desc/1798))))))))))))
            process_core_type_list/1444
              (function x/1802 : int
                (funct-body Ppx.process_core_type_list src/ppx.ml(149)<ghost>:4698-4817
                  (before Ppx.process_core_type_list src/ppx.ml(150):4721-4817
                    (if x/1802
                      (let
                        (t/1804 =a (field 1 x/1802)
                         h/1803 =a (field 0 x/1802))
                        (before Ppx.process_core_type_list src/ppx.ml(153):4765-4817
                          (seq
                            (after Ppx.process_core_type_list src/ppx.ml(153):4765-4786
                              (apply process_core_type/1443 h/1803))
                            (before Ppx.process_core_type_list src/ppx.ml(154):4792-4817
                              (after Ppx.process_core_type_list src/ppx.ml(154):4792-4817
                                (apply process_core_type_list/1444 t/1804))))))
                      (before Ppx.process_core_type_list src/ppx.ml(151):4744-4746
                        0))))))
          (let
            (print_constructor_arguments/1805 =
               (function x/1807 : int
                 (funct-body Ppx.print_constructor_arguments src/ppx.ml(161)<ghost>:4863-5096
                   (before Ppx.print_constructor_arguments src/ppx.ml(162):4871-5096
                     (switch* x/1807
                      case tag 0:
                       (let (a/1808 =a (field 0 x/1807))
                         (before Ppx.print_constructor_arguments src/ppx.ml(164):4909-5001
                           (seq
                             (after Ppx.print_constructor_arguments src/ppx.ml(164):4909-4935
                               (apply process_core_type_list/1444 a/1808))
                             (before Ppx.print_constructor_arguments src/ppx.ml(165):4941-5001
                               (after Ppx.print_constructor_arguments src/ppx.ml(165):4941-5001
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_constructor_arguments src/ppx.ml(165):4956-5000
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:Pcstr_tuple:"
                                         a/1808)))))))))
                      case tag 1:
                       (let (a/1809 =a (field 0 x/1807))
                         (before Ppx.print_constructor_arguments src/ppx.ml(168):5035-5096
                           (after Ppx.print_constructor_arguments src/ppx.ml(168):5035-5096
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_constructor_arguments src/ppx.ml(168):5050-5095
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:Pcstr_record:" a/1809))))))))))))
            (letrec
              (process_pype_variant_constructor_declaration_list/1810
                 (function x/1811 : int
                   (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(170)<ghost>:5155-6082
                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(171):5163-6082
                       (if x/1811
                         (let
                           (t/1813 =a (field 1 x/1811)
                            h/1812 =a (field 0 x/1811))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(175):5272-6082
                             (let
                               (pcd_attributes/1819 =a (field 5 h/1812)
                                pcd_loc/1818 =a (field 4 h/1812)
                                pcd_res/1817 =a (field 3 h/1812)
                                pcd_args/1816 =a (field 2 h/1812)
                                pcd_vars/1815 =a (field 1 h/1812)
                                pcd_name/1814 =a (field 0 h/1812))
                               (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(186):5611-6082
                                 (seq
                                   (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(186):5611-5648
                                     (apply print_constructor_arguments/1805
                                       pcd_args/1816))
                                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5656-6082
                                     (seq
                                       (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5656-6011
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(187):5671-6010
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "constructor_declaration:"
                                                 pcd_name/1814 "vars"
                                                 pcd_vars/1815 "args"
                                                 pcd_args/1816 "res"
                                                 pcd_res/1817 "loc"
                                                 pcd_loc/1818 "attrs"
                                                 pcd_attributes/1819)))))
                                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(201):6019-6082
                                         (seq
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(201):6019-6072
                                             (apply
                                               process_pype_variant_constructor_declaration_list/1810
                                               t/1813))
                                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(202):6080-6082
                                             0))))))))))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(172):5186-5188
                           0))))))
              (let
                (process_kind/1820 =
                   (function x/1822 : int
                     (funct-body Ppx.process_kind src/ppx.ml(204)<ghost>:6102-6560
                       (before Ppx.process_kind src/ppx.ml(205):6110-6560
                         (switch* x/1822
                          case int 0:
                           (before Ppx.process_kind src/ppx.ml(207):6168-6226
                             (after Ppx.process_kind src/ppx.ml(207):6168-6226
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(207):6183-6225
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case int 1:
                           (before Ppx.process_kind src/ppx.ml(215):6502-6560
                             (after Ppx.process_kind src/ppx.ml(215):6502-6560
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(215):6517-6559
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case tag 0:
                           (let (a/1823 =a (field 0 x/1822))
                             (before Ppx.process_kind src/ppx.ml(209):6254-6374
                               (seq
                                 (after Ppx.process_kind src/ppx.ml(209):6254-6307
                                   (apply
                                     process_pype_variant_constructor_declaration_list/1810
                                     a/1823))
                                 (before Ppx.process_kind src/ppx.ml(210):6313-6374
                                   (after Ppx.process_kind src/ppx.ml(210):6313-6374
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.process_kind src/ppx.ml(210):6328-6373
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0
                                             "DEBUG:Ptype_variant:" a/1823)))))))))
                          case tag 1:
                           (let (a/1824 =a (field 0 x/1822))
                             (before Ppx.process_kind src/ppx.ml(214):6455-6482
                               (after Ppx.process_kind src/ppx.ml(214):6455-6482
                                 (apply process_record_kind_list/1442 a/1824))))))))
                 print_type_decl/1825 =
                   (function x/1827 : int
                     (funct-body Ppx.print_type_decl src/ppx.ml(217)<ghost>:6581-7606
                       (before Ppx.print_type_decl src/ppx.ml(218):6589-7606
                         (let
                           (ptype_loc/1835 =a (field 7 x/1827)
                            ptype_attributes/1834 =a (field 6 x/1827)
                            ptype_manifest/1833 =a (field 5 x/1827)
                            ptype_private/1832 =a (field 4 x/1827)
                            ptype_kind/1831 =a (field 3 x/1827)
                            ptype_cstrs/1830 =a (field 2 x/1827)
                            ptype_params/1829 =a (field 1 x/1827)
                            ptype_name/1828 =a (field 0 x/1827))
                           (before Ppx.print_type_decl src/ppx.ml(229):6996-7606
                             (seq
                               (after Ppx.print_type_decl src/ppx.ml(229):6996-7061
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_type_decl src/ppx.ml(229):7011-7060
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:type_decl:"
                                         ptype_name/1828)))))
                               (before Ppx.print_type_decl src/ppx.ml(230):7067-7606
                                 (seq
                                   (after Ppx.print_type_decl src/ppx.ml(230):7067-7135
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.print_type_decl src/ppx.ml(230):7082-7134
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0 "DEBUG:parameters:"
                                             ptype_params/1829)))))
                                   (before Ppx.print_type_decl src/ppx.ml(231):7141-7606
                                     (seq
                                       (after Ppx.print_type_decl src/ppx.ml(231):7141-7203
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.print_type_decl src/ppx.ml(231):7156-7202
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:cstrs:"
                                                 ptype_cstrs/1830)))))
                                       (before Ppx.print_type_decl src/ppx.ml(232):7209-7606
                                         (seq
                                           (after Ppx.print_type_decl src/ppx.ml(232):7209-7268
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.print_type_decl src/ppx.ml(232):7224-7267
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG:kind:"
                                                     ptype_kind/1831)))))
                                           (before Ppx.print_type_decl src/ppx.ml(233):7274-7606
                                             (seq
                                               (after Ppx.print_type_decl src/ppx.ml(233):7274-7299
                                                 (apply process_kind/1820
                                                   ptype_kind/1831))
                                               (before Ppx.print_type_decl src/ppx.ml(234):7305-7606
                                                 (after Ppx.print_type_decl src/ppx.ml(234):7305-7606
                                                   (apply
                                                     (field 45
                                                       (global Stdlib!))
                                                     (after Ppx.print_type_decl src/ppx.ml(234):7320-7605
                                                       (apply
                                                         (field 65
                                                           (global Batteries!))
                                                         (makeblock 0 (*,int,*,*,*,*,*,*)
                                                           "DEBUG:private:"
                                                           ptype_private/1832
                                                           "DEBUG:manifest"
                                                           ptype_manifest/1833
                                                           "DEBUG:attr"
                                                           ptype_attributes/1834
                                                           "DEBUG:loc"
                                                           ptype_loc/1835)))))))))))))))))))))
                (letrec
                  (process_type_decl_list/1836
                     (function x/1837 : int
                       (funct-body Ppx.process_type_decl_list src/ppx.ml(240)<ghost>:7642-7753
                         (before Ppx.process_type_decl_list src/ppx.ml(241):7650-7753
                           (if x/1837
                             (let
                               (t/1839 =a (field 1 x/1837)
                                h/1838 =a (field 0 x/1837))
                               (before Ppx.process_type_decl_list src/ppx.ml(244):7694-7753
                                 (seq
                                   (after Ppx.process_type_decl_list src/ppx.ml(244):7694-7713
                                     (apply print_type_decl/1825 h/1838))
                                   (before Ppx.process_type_decl_list src/ppx.ml(245):7719-7753
                                     (seq
                                       (after Ppx.process_type_decl_list src/ppx.ml(245):7719-7745
                                         (apply process_type_decl_list/1836
                                           t/1839))
                                       (before Ppx.process_type_decl_list src/ppx.ml(246):7751-7753
                                         0))))))
                             (before Ppx.process_type_decl_list src/ppx.ml(242):7673-7675
                               0))))))
                  (let
                    (printdesc/1840 =
                       (function x/1842 : int
                         (funct-body Ppx.printdesc src/ppx.ml(248)<ghost>:7772-9851
                           (before Ppx.printdesc src/ppx.ml(249):7807-9851
                             (seq
                               (after Ppx.printdesc src/ppx.ml(249):7807-7873
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printdesc src/ppx.ml(249):7822-7872
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0
                                         "DEBUG:structure_item_desc:" x/1842)))))
                               (before Ppx.printdesc src/ppx.ml(250):7877-9851
                                 (switch* x/1842
                                  case tag 0:
                                   (let
                                     (attributes/1844 =a (field 1 x/1842)
                                      expression/1843 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(251):7931-8007
                                       (after Ppx.printdesc src/ppx.ml(251):7931-8007
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(251):7946-8006
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_eval:"
                                                 expression/1843
                                                 attributes/1844)))))))
                                  case tag 1:
                                   (let
                                     (value_binding_list/1846 =a
                                        (field 1 x/1842)
                                      rec_flag/1845 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(253):8076-8210
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(253):8076-8160
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(253):8091-8159
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_value:"
                                                   rec_flag/1845
                                                   value_binding_list/1846)))))
                                         (before Ppx.printdesc src/ppx.ml(254):8166-8210
                                           (after Ppx.printdesc src/ppx.ml(254):8166-8210
                                             (apply
                                               print_value_binding_list/1298
                                               value_binding_list/1846))))))
                                  case tag 2:
                                   (let
                                     (value_description/1847 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(255):8250-8327
                                       (after Ppx.printdesc src/ppx.ml(255):8250-8327
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(255):8265-8326
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_primitive:"
                                                 value_description/1847)))))))
                                  case tag 3:
                                   (let
                                     (type_declaration_list/1849 =a
                                        (field 1 x/1842)
                                      rec_flag/1848 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(259):8412-8549
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(259):8412-8457
                                           (apply process_type_decl_list/1836
                                             type_declaration_list/1849))
                                         (before Ppx.printdesc src/ppx.ml(260):8463-8549
                                           (after Ppx.printdesc src/ppx.ml(260):8463-8549
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(260):8478-8548
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_type:"
                                                     rec_flag/1848
                                                     type_declaration_list/1849)))))))))
                                  case tag 4:
                                   (let
                                     (type_extension/1850 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(263):8586-8657
                                       (after Ppx.printdesc src/ppx.ml(263):8586-8657
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(263):8601-8656
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_typext:"
                                                 type_extension/1850)))))))
                                  case tag 5:
                                   (let
                                     (extension_constructor/1851 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(264):8701-8782
                                       (after Ppx.printdesc src/ppx.ml(264):8701-8782
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(264):8716-8781
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_exception:"
                                                 extension_constructor/1851)))))))
                                  case tag 6:
                                   (let
                                     (module_binding/1852 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(265):8817-8887
                                       (after Ppx.printdesc src/ppx.ml(265):8817-8887
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(265):8832-8886
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_module:"
                                                 module_binding/1852)))))))
                                  case tag 7:
                                   (let
                                     (module_binding_list/1853 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(266):8930-9009
                                       (after Ppx.printdesc src/ppx.ml(266):8930-9009
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(266):8945-9008
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_recmodule:"
                                                 module_binding_list/1853)))))))
                                  case tag 8:
                                   (let
                                     (module_type_declaration/1854 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(267):9053-9134
                                       (after Ppx.printdesc src/ppx.ml(267):9053-9134
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(267):9068-9133
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_modtype:"
                                                 module_type_declaration/1854)))))))
                                  case tag 9:
                                   (let
                                     (open_description/1855 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(269):9185-9255
                                       (after Ppx.printdesc src/ppx.ml(269):9185-9255
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(269):9200-9254
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:Pstr_open"
                                                 open_description/1855)))))))
                                  case tag 10:
                                   (let
                                     (class_declarations/1856 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(270):9295-9369
                                       (after Ppx.printdesc src/ppx.ml(270):9295-9369
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(270):9310-9368
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class:"
                                                 class_declarations/1856)))))))
                                  case tag 11:
                                   (let
                                     (class_type_declarations/1857 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(271):9418-9502
                                       (after Ppx.printdesc src/ppx.ml(271):9418-9502
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(271):9433-9501
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class_type:"
                                                 class_type_declarations/1857)))))))
                                  case tag 12:
                                   (let
                                     (include_declaration/1858 =a
                                        (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(272):9544-9620
                                       (after Ppx.printdesc src/ppx.ml(272):9544-9620
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(272):9559-9619
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_include:"
                                                 include_declaration/1858)))))))
                                  case tag 13:
                                   (let (attribute/1859 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(273):9653-9722
                                       (after Ppx.printdesc src/ppx.ml(273):9653-9722
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(273):9668-9721
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_attribute:"
                                                 attribute/1859)))))))
                                  case tag 14:
                                   (let
                                     (attributes/1861 =a (field 1 x/1842)
                                      extension/1860 =a (field 0 x/1842))
                                     (before Ppx.printdesc src/ppx.ml(274):9769-9851
                                       (after Ppx.printdesc src/ppx.ml(274):9769-9851
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(274):9784-9850
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_extension:"
                                                 extension/1860
                                                 attributes/1861)))))))))))))
                     foo/1862 =[int] 1
                     printone/1863 =
                       (function x/1864 : int
                         (funct-body Ppx.printone src/ppx.ml(278)<ghost>:9881-10093
                           (before Ppx.printone src/ppx.ml(279):9913-10093
                             (let (pstr_desc/1865 =a (field 0 x/1864))
                               (before Ppx.printone src/ppx.ml(285):10064-10093
                                 (seq
                                   (after Ppx.printone src/ppx.ml(285):10064-10085
                                     (apply printdesc/1840 pstr_desc/1865))
                                   (before Ppx.printone src/ppx.ml(286):10091-10093
                                     0)))))))
                     printone2/1866 =
                       (function x/1867 : int
                         (funct-body Ppx.printone2 src/ppx.ml(292)<ghost>:10221-10300
                           (before Ppx.printone2 src/ppx.ml(293):10233-10300
                             (seq
                               (after Ppx.printone2 src/ppx.ml(293):10233-10286
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printone2 src/ppx.ml(293):10248-10285
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:SECOND::" x/1867)))))
                               (before Ppx.printone2 src/ppx.ml(294):10290-10300
                                 (after Ppx.printone2 src/ppx.ml(294):10290-10300
                                   (apply printone/1863 x/1867)))))))
                     proc1/1868 =
                       (function x/1870
                         (funct-body Ppx.proc1 src/ppx.ml(296)<ghost>:10314-10338
                           (before Ppx.proc1 src/ppx.ml(297):10322-10338
                             (seq
                               (after Ppx.proc1 src/ppx.ml(297):10322-10333
                                 (apply printone2/1866 x/1870))
                               (before Ppx.proc1 src/ppx.ml(298):10337-10338
                                 x/1870)))))
                     debug/1871 =
                       (function proc/1873 lst/1874 : int
                         (funct-body Ppx.debug src/ppx.ml(300)<ghost>:10350-10493
                           (before Ppx.debug src/ppx.ml(301):10370-10493
                             (let
                               (result/1875 =
                                  (after Ppx.debug src/ppx.ml(301):10383-10400
                                    (apply (field 18 (global Stdlib__List!))
                                      proc/1873 lst/1874)))
                               (before Ppx.debug src/ppx.ml(302):10406-10493
                                 (seq
                                   (after Ppx.debug src/ppx.ml(302):10406-10487
                                     (apply (field 16 (global Stdlib__List!))
                                       (function i/1939 : int
                                         (funct-body Ppx.debug.(fun) src/ppx.ml(302):10416-10480
                                           (before Ppx.debug.(fun) src/ppx.ml(302):10426-10479
                                             (after Ppx.debug.(fun) src/ppx.ml(302):10426-10479
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.debug.(fun) src/ppx.ml(302):10440-10479
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:TOPLEVEL:"
                                                       i/1939))))))))
                                       result/1875))
                                   (before Ppx.debug src/ppx.ml(303):10491-10493
                                     0)))))))
                     transform/1940 =
                       (function x/1942
                         (funct-body Ppx.transform src/ppx.ml(305)<ghost>:10525-10638
                           (before Ppx.transform src/ppx.ml(306):10568-10638
                             (seq
                               (after Ppx.transform src/ppx.ml(306):10568-10614
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.transform src/ppx.ml(306):10583-10613
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG3:" x/1942)))))
                               (before Ppx.transform src/ppx.ml(307):10618-10638
                                 (seq
                                   (after Ppx.transform src/ppx.ml(307):10618-10633
                                     (apply debug/1871 proc1/1868 x/1942))
                                   (before Ppx.transform src/ppx.ml(308):10637-10638
                                     x/1942)))))))
                     *match*/5108 =
                       (after Ppx src/ppx.ml(310):10652-10711
                         (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                           (makeblock 0 transform/1940) 0 0 0 0 0 0 0
                           "simple-ppx")))
                    (pseudo <unknown location>
                      (makeblock 0 proc2/1279 printdesc2/1282
                        print_value_binding_expr/1284
                        print_value_binding_list2/1291
                        print_value_binding_list/1298 process_id/1437
                        process_record_kind/1440 process_core_type_desc/1441
                        process_record_kind_list/1442 process_core_type/1443
                        process_core_type_list/1444
                        print_constructor_arguments/1805
                        process_pype_variant_constructor_declaration_list/1810
                        process_kind/1820 print_type_decl/1825
                        process_type_decl_list/1836 printdesc/1840 foo/1862
                        printone/1863 printone2/1866 proc1/1868 debug/1871
                        transform/1940))))))))))))

[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[149,4686+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+27])
          Ppat_var "process_record_kind" (src/ppx.ml[69,1879+8]..[69,1879+27])
        expression (src/ppx.ml[69,1879+27]..[83,2363+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+27]..[69,1879+30])
            Ppat_var "x" (src/ppx.ml[69,1879+28]..[69,1879+29])
          expression (src/ppx.ml[70,1912+2]..[83,2363+47])
            Pexp_match
            expression (src/ppx.ml[70,1912+8]..[70,1912+9])
              Pexp_ident "x" (src/ppx.ml[70,1912+8]..[70,1912+9])
            [
              <case>
                pattern (src/ppx.ml[71,1927+4]..[77,2108+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13]) ghost
                      pattern (src/ppx.ml[72,1933+5]..[72,1933+13])
                        Ppat_var "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13])
                    "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16]) ghost
                      pattern (src/ppx.ml[73,1966+5]..[73,1966+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16])
                    "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13]) ghost
                      pattern (src/ppx.ml[74,2004+5]..[74,2004+13])
                        Ppat_var "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13])
                    "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12]) ghost
                      pattern (src/ppx.ml[75,2036+5]..[75,2036+12])
                        Ppat_var "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12])
                    "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19]) ghost
                      pattern (src/ppx.ml[76,2068+5]..[76,2068+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19])
                  ]
                expression (src/ppx.ml[78,2116+4]..[83,2363+47])
                  Pexp_apply
                  expression (src/ppx.ml[78,2116+5]..[78,2116+18])
                    Pexp_ident "print_endline" (src/ppx.ml[78,2116+5]..[78,2116+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[78,2116+19]..[83,2363+46])
                        Pexp_apply
                        expression (src/ppx.ml[78,2116+20]..[78,2116+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[78,2116+20]..[78,2116+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[78,2116+35]..[83,2363+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[78,2116+36]..[78,2116+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..[78,2116+56]),None)
                                expression (src/ppx.ml[79,2177+36]..[79,2177+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[79,2177+36]..[79,2177+44])
                                expression (src/ppx.ml[80,2223+36]..[80,2223+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[80,2223+37]..[80,2223+44]),None)
                                expression (src/ppx.ml[81,2270+36]..[81,2270+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[81,2270+36]..[81,2270+47])
                                expression (src/ppx.ml[82,2319+36]..[82,2319+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[82,2319+37]..[82,2319+41]),None)
                                expression (src/ppx.ml[83,2363+36]..[83,2363+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[83,2363+36]..[83,2363+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..[85,2415+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[85,2415+0]..[85,2415+22])
        expression (src/ppx.ml[85,2415+23]..[123,4004+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2415+23]..[85,2415+24])
            Ppat_var "x" (src/ppx.ml[85,2415+23]..[85,2415+24])
          expression (src/ppx.ml[86,2442+2]..[123,4004+65])
            Pexp_match
            expression (src/ppx.ml[86,2442+8]..[86,2442+9])
              Pexp_ident "x" (src/ppx.ml[86,2442+8]..[86,2442+9])
            [
              <case>
                pattern (src/ppx.ml[87,2457+4]..[87,2457+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[87,2457+4]..[87,2457+15])
                  Some
                    []
                    pattern (src/ppx.ml[87,2457+16]..[87,2457+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[87,2457+17]..[87,2457+18])
                          Ppat_var "a" (src/ppx.ml[87,2457+17]..[87,2457+18])
                        pattern (src/ppx.ml[87,2457+19]..[87,2457+20])
                          Ppat_var "b" (src/ppx.ml[87,2457+19]..[87,2457+20])
                      ]
                expression (src/ppx.ml[89,2528+4]..[90,2560+79])
                  Pexp_sequence
                  expression (src/ppx.ml[89,2528+4]..[89,2528+30])
                    Pexp_apply
                    expression (src/ppx.ml[89,2528+5]..[89,2528+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[89,2528+5]..[89,2528+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[89,2528+28]..[89,2528+29])
                          Pexp_ident "b" (src/ppx.ml[89,2528+28]..[89,2528+29])
                    ]
                  expression (src/ppx.ml[90,2560+4]..[90,2560+79])
                    Pexp_apply
                    expression (src/ppx.ml[90,2560+5]..[90,2560+18])
                      Pexp_ident "print_endline" (src/ppx.ml[90,2560+5]..[90,2560+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[90,2560+19]..[90,2560+78])
                          Pexp_apply
                          expression (src/ppx.ml[90,2560+20]..[90,2560+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[90,2560+20]..[90,2560+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[90,2560+35]..[90,2560+77])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[90,2560+36]..[90,2560+56])
                                    Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[90,2560+37]..[90,2560+55]),None)
                                  expression (src/ppx.ml[90,2560+58]..[90,2560+62])
                                    Pexp_constant PConst_string("id",(src/ppx.ml[90,2560+59]..[90,2560+61]),None)
                                  expression (src/ppx.ml[90,2560+63]..[90,2560+64])
                                    Pexp_ident "a" (src/ppx.ml[90,2560+63]..[90,2560+64])
                                  expression (src/ppx.ml[90,2560+66]..[90,2560+73])
                                    Pexp_constant PConst_string("types",(src/ppx.ml[90,2560+67]..[90,2560+72]),None)
                                  expression (src/ppx.ml[90,2560+74]..[90,2560+75])
                                    Pexp_ident "b" (src/ppx.ml[90,2560+74]..[90,2560+75])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[92,2645+4]..[92,2645+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[92,2645+4]..[92,2645+14])
                  Some
                    []
                    pattern (src/ppx.ml[92,2645+15]..[92,2645+16])
                      Ppat_var "a" (src/ppx.ml[92,2645+15]..[92,2645+16])
                expression (src/ppx.ml[94,2693+4]..[94,2693+59])
                  Pexp_apply
                  expression (src/ppx.ml[94,2693+5]..[94,2693+18])
                    Pexp_ident "print_endline" (src/ppx.ml[94,2693+5]..[94,2693+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[94,2693+19]..[94,2693+58])
                        Pexp_apply
                        expression (src/ppx.ml[94,2693+20]..[94,2693+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[94,2693+20]..[94,2693+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[94,2693+35]..[94,2693+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[94,2693+37]..[94,2693+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[97,2772+4]..[97,2772+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[97,2772+4]..[97,2772+12])
                  None
                expression (src/ppx.ml[97,2772+17]..[97,2772+69])
                  Pexp_apply
                  expression (src/ppx.ml[97,2772+18]..[97,2772+31])
                    Pexp_ident "print_endline" (src/ppx.ml[97,2772+18]..[97,2772+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[97,2772+32]..[97,2772+68])
                        Pexp_apply
                        expression (src/ppx.ml[97,2772+33]..[97,2772+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[97,2772+33]..[97,2772+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[97,2772+48]..[97,2772+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[97,2772+50]..[97,2772+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[98,2842+4]..[98,2842+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[98,2842+4]..[98,2842+12])
                  Some
                    []
                    pattern (src/ppx.ml[98,2842+13]..[98,2842+17])
                      Ppat_var "name" (src/ppx.ml[98,2842+13]..[98,2842+17])
                expression (src/ppx.ml[98,2842+20]..[98,2842+80])
                  Pexp_apply
                  expression (src/ppx.ml[98,2842+21]..[98,2842+34])
                    Pexp_ident "print_endline" (src/ppx.ml[98,2842+21]..[98,2842+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[98,2842+35]..[98,2842+79])
                        Pexp_apply
                        expression (src/ppx.ml[98,2842+36]..[98,2842+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[98,2842+36]..[98,2842+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[98,2842+51]..[98,2842+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[98,2842+52]..[98,2842+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[98,2842+53]..[98,2842+68]),None)
                                expression (src/ppx.ml[98,2842+73]..[98,2842+77])
                                  Pexp_ident "name" (src/ppx.ml[98,2842+73]..[98,2842+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[99,2923+4]..[99,2923+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[99,2923+4]..[99,2923+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2923+15]..[99,2923+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[99,2923+16]..[99,2923+25])
                          Ppat_var "arg_label" (src/ppx.ml[99,2923+16]..[99,2923+25])
                        pattern (src/ppx.ml[99,2923+28]..[99,2923+37])
                          Ppat_var "core_type" (src/ppx.ml[99,2923+28]..[99,2923+37])
                        pattern (src/ppx.ml[99,2923+40]..[99,2923+50])
                          Ppat_var "core_type2" (src/ppx.ml[99,2923+40]..[99,2923+50])
                      ]
                expression (src/ppx.ml[100,2978+4]..[100,2978+61])
                  Pexp_apply
                  expression (src/ppx.ml[100,2978+5]..[100,2978+18])
                    Pexp_ident "print_endline" (src/ppx.ml[100,2978+5]..[100,2978+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[100,2978+19]..[100,2978+60])
                        Pexp_apply
                        expression (src/ppx.ml[100,2978+20]..[100,2978+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[100,2978+20]..[100,2978+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,2978+35]..[100,2978+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[100,2978+37]..[100,2978+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[102,3041+4]..[102,3041+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[102,3041+4]..[102,3041+15])
                  Some
                    []
                    pattern (src/ppx.ml[102,3041+16]..[102,3041+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[102,3041+17]..[102,3041+18])
                          Ppat_var "a" (src/ppx.ml[102,3041+17]..[102,3041+18])
                        pattern (src/ppx.ml[102,3041+19]..[102,3041+20])
                          Ppat_var "b" (src/ppx.ml[102,3041+19]..[102,3041+20])
                      ]
                expression (src/ppx.ml[104,3110+4]..[104,3110+60])
                  Pexp_apply
                  expression (src/ppx.ml[104,3110+5]..[104,3110+18])
                    Pexp_ident "print_endline" (src/ppx.ml[104,3110+5]..[104,3110+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,3110+19]..[104,3110+59])
                        Pexp_apply
                        expression (src/ppx.ml[104,3110+20]..[104,3110+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,3110+20]..[104,3110+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,3110+35]..[104,3110+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[104,3110+37]..[104,3110+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,3171+4]..[105,3171+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[105,3171+4]..[105,3171+14])
                  Some
                    []
                    pattern (src/ppx.ml[105,3171+15]..[105,3171+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[105,3171+16]..[105,3171+17])
                          Ppat_var "a" (src/ppx.ml[105,3171+16]..[105,3171+17])
                        pattern (src/ppx.ml[105,3171+18]..[105,3171+19])
                          Ppat_var "b" (src/ppx.ml[105,3171+18]..[105,3171+19])
                      ]
                expression (src/ppx.ml[107,3241+4]..[107,3241+60])
                  Pexp_apply
                  expression (src/ppx.ml[107,3241+5]..[107,3241+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3241+5]..[107,3241+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3241+19]..[107,3241+59])
                        Pexp_apply
                        expression (src/ppx.ml[107,3241+20]..[107,3241+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3241+20]..[107,3241+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3241+35]..[107,3241+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[107,3241+37]..[107,3241+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[108,3302+4]..[108,3302+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[108,3302+4]..[108,3302+14])
                  Some
                    []
                    pattern (src/ppx.ml[108,3302+15]..[108,3302+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[108,3302+16]..[108,3302+17])
                          Ppat_var "a" (src/ppx.ml[108,3302+16]..[108,3302+17])
                        pattern (src/ppx.ml[108,3302+18]..[108,3302+19])
                          Ppat_var "b" (src/ppx.ml[108,3302+18]..[108,3302+19])
                      ]
                expression (src/ppx.ml[110,3363+4]..[110,3363+60])
                  Pexp_apply
                  expression (src/ppx.ml[110,3363+5]..[110,3363+18])
                    Pexp_ident "print_endline" (src/ppx.ml[110,3363+5]..[110,3363+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[110,3363+19]..[110,3363+59])
                        Pexp_apply
                        expression (src/ppx.ml[110,3363+20]..[110,3363+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[110,3363+20]..[110,3363+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[110,3363+35]..[110,3363+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[110,3363+37]..[110,3363+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[111,3424+4]..[111,3424+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[111,3424+4]..[111,3424+16])
                  Some
                    []
                    pattern (src/ppx.ml[111,3424+17]..[111,3424+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[111,3424+18]..[111,3424+19])
                          Ppat_var "a" (src/ppx.ml[111,3424+18]..[111,3424+19])
                        pattern (src/ppx.ml[111,3424+20]..[111,3424+21])
                          Ppat_var "b" (src/ppx.ml[111,3424+20]..[111,3424+21])
                        pattern (src/ppx.ml[111,3424+22]..[111,3424+23])
                          Ppat_var "c" (src/ppx.ml[111,3424+22]..[111,3424+23])
                      ]
                expression (src/ppx.ml[113,3514+4]..[113,3514+60])
                  Pexp_apply
                  expression (src/ppx.ml[113,3514+5]..[113,3514+18])
                    Pexp_ident "print_endline" (src/ppx.ml[113,3514+5]..[113,3514+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[113,3514+19]..[113,3514+59])
                        Pexp_apply
                        expression (src/ppx.ml[113,3514+20]..[113,3514+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[113,3514+20]..[113,3514+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[113,3514+35]..[113,3514+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[113,3514+37]..[113,3514+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3575+4]..[114,3575+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[114,3575+4]..[114,3575+13])
                  Some
                    []
                    pattern (src/ppx.ml[114,3575+14]..[114,3575+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[114,3575+15]..[114,3575+16])
                          Ppat_var "a" (src/ppx.ml[114,3575+15]..[114,3575+16])
                        pattern (src/ppx.ml[114,3575+17]..[114,3575+18])
                          Ppat_var "b" (src/ppx.ml[114,3575+17]..[114,3575+18])
                      ]
                expression (src/ppx.ml[116,3639+4]..[116,3639+60])
                  Pexp_apply
                  expression (src/ppx.ml[116,3639+5]..[116,3639+18])
                    Pexp_ident "print_endline" (src/ppx.ml[116,3639+5]..[116,3639+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[116,3639+19]..[116,3639+59])
                        Pexp_apply
                        expression (src/ppx.ml[116,3639+20]..[116,3639+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[116,3639+20]..[116,3639+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[116,3639+35]..[116,3639+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[116,3639+37]..[116,3639+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[117,3700+4]..[117,3700+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[117,3700+4]..[117,3700+16])
                  Some
                    []
                    pattern (src/ppx.ml[117,3700+17]..[117,3700+18])
                      Ppat_var "a" (src/ppx.ml[117,3700+17]..[117,3700+18])
                expression (src/ppx.ml[119,3748+4]..[119,3748+62])
                  Pexp_apply
                  expression (src/ppx.ml[119,3748+5]..[119,3748+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3748+5]..[119,3748+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3748+19]..[119,3748+61])
                        Pexp_apply
                        expression (src/ppx.ml[119,3748+20]..[119,3748+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3748+20]..[119,3748+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3748+35]..[119,3748+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[119,3748+36]..[119,3748+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[119,3748+37]..[119,3748+55]),None)
                                expression (src/ppx.ml[119,3748+57]..[119,3748+58])
                                  Pexp_ident "a" (src/ppx.ml[119,3748+57]..[119,3748+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3956+4]..[122,3956+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[122,3956+4]..[122,3956+18])
                  Some
                    []
                    pattern (src/ppx.ml[122,3956+19]..[122,3956+20])
                      Ppat_var "a" (src/ppx.ml[122,3956+19]..[122,3956+20])
                expression (src/ppx.ml[123,4004+4]..[123,4004+65])
                  Pexp_apply
                  expression (src/ppx.ml[123,4004+5]..[123,4004+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,4004+5]..[123,4004+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,4004+19]..[123,4004+64])
                        Pexp_apply
                        expression (src/ppx.ml[123,4004+20]..[123,4004+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,4004+20]..[123,4004+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,4004+35]..[123,4004+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[123,4004+36]..[123,4004+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[123,4004+37]..[123,4004+58]),None)
                                expression (src/ppx.ml[123,4004+60]..[123,4004+61])
                                  Pexp_ident "a" (src/ppx.ml[123,4004+60]..[123,4004+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[125,4074+2]..[125,4074+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[125,4074+2]..[125,4074+26])
        expression (src/ppx.ml[125,4074+26]..[131,4211+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[125,4074+26]..[125,4074+29])
            Ppat_var "x" (src/ppx.ml[125,4074+27]..[125,4074+28])
          expression (src/ppx.ml[126,4106+2]..[131,4211+6])
            Pexp_match
            expression (src/ppx.ml[126,4106+8]..[126,4106+9])
              Pexp_ident "x" (src/ppx.ml[126,4106+8]..[126,4106+9])
            [
              <case>
                pattern (src/ppx.ml[127,4121+4]..[127,4121+6])
                  Ppat_construct "[]" (src/ppx.ml[127,4121+4]..[127,4121+6])
                  None
                expression (src/ppx.ml[127,4121+10]..[127,4121+12])
                  Pexp_construct "()" (src/ppx.ml[127,4121+10]..[127,4121+12])
                  None
              <case>
                pattern (src/ppx.ml[128,4134+4]..[128,4134+10])
                  Ppat_construct "::" (src/ppx.ml[128,4134+6]..[128,4134+8])
                  Some
                    []
                    pattern (src/ppx.ml[128,4134+4]..[128,4134+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[128,4134+4]..[128,4134+5])
                          Ppat_var "h" (src/ppx.ml[128,4134+4]..[128,4134+5])
                        pattern (src/ppx.ml[128,4134+9]..[128,4134+10])
                          Ppat_var "t" (src/ppx.ml[128,4134+9]..[128,4134+10])
                      ]
                expression (src/ppx.ml[129,4148+4]..[131,4211+6])
                  Pexp_sequence
                  expression (src/ppx.ml[129,4148+4]..[129,4148+27])
                    Pexp_apply
                    expression (src/ppx.ml[129,4148+5]..[129,4148+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[129,4148+5]..[129,4148+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[129,4148+25]..[129,4148+26])
                          Pexp_ident "h" (src/ppx.ml[129,4148+25]..[129,4148+26])
                    ]
                  expression (src/ppx.ml[130,4177+4]..[131,4211+6])
                    Pexp_sequence
                    expression (src/ppx.ml[130,4177+4]..[130,4177+32])
                      Pexp_apply
                      expression (src/ppx.ml[130,4177+5]..[130,4177+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[130,4177+5]..[130,4177+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[130,4177+30]..[130,4177+31])
                            Pexp_ident "t" (src/ppx.ml[130,4177+30]..[130,4177+31])
                      ]
                    expression (src/ppx.ml[131,4211+4]..[131,4211+6])
                      Pexp_construct "()" (src/ppx.ml[131,4211+4]..[131,4211+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[133,4222+0]..[133,4222+17])
          Ppat_var "process_core_type" (src/ppx.ml[133,4222+0]..[133,4222+17])
        expression (src/ppx.ml[133,4222+17]..[143,4489+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[133,4222+17]..[133,4222+20])
            Ppat_var "x" (src/ppx.ml[133,4222+18]..[133,4222+19])
          expression (src/ppx.ml[134,4245+2]..[143,4489+80])
            Pexp_match
            expression (src/ppx.ml[134,4245+8]..[134,4245+9])
              Pexp_ident "x" (src/ppx.ml[134,4245+8]..[134,4245+9])
            [
              <case>
                pattern (src/ppx.ml[135,4261+4]..[140,4422+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[136,4267+6]..[136,4267+15]) ghost
                      pattern (src/ppx.ml[136,4267+6]..[136,4267+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[136,4267+6]..[136,4267+15])
                    "ptyp_loc" (src/ppx.ml[137,4306+5]..[137,4306+13]) ghost
                      pattern (src/ppx.ml[137,4306+5]..[137,4306+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[137,4306+5]..[137,4306+13])
                    "ptyp_loc_stack" (src/ppx.ml[138,4339+5]..[138,4339+19]) ghost
                      pattern (src/ppx.ml[138,4339+5]..[138,4339+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[138,4339+5]..[138,4339+19])
                    "ptyp_attributes" (src/ppx.ml[139,4382+5]..[139,4382+20]) ghost
                      pattern (src/ppx.ml[139,4382+5]..[139,4382+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[139,4382+5]..[139,4382+20])
                  ]
                expression (src/ppx.ml[141,4430+4]..[143,4489+80])
                  Pexp_sequence
                  expression (src/ppx.ml[141,4430+4]..[141,4430+38])
                    Pexp_apply
                    expression (src/ppx.ml[141,4430+5]..[141,4430+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[141,4430+5]..[141,4430+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[141,4430+28]..[141,4430+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[141,4430+28]..[141,4430+37])
                    ]
                  expression (src/ppx.ml[143,4489+4]..[143,4489+80])
                    Pexp_apply
                    expression (src/ppx.ml[143,4489+5]..[143,4489+18])
                      Pexp_ident "print_endline" (src/ppx.ml[143,4489+5]..[143,4489+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[143,4489+19]..[143,4489+79])
                          Pexp_apply
                          expression (src/ppx.ml[143,4489+20]..[143,4489+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[143,4489+20]..[143,4489+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[143,4489+35]..[143,4489+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[143,4489+36]..[143,4489+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[143,4489+37]..[143,4489+63]),None)
                                  expression (src/ppx.ml[143,4489+68]..[143,4489+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[143,4489+68]..[143,4489+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[144,4570+4]..[144,4570+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[144,4570+4]..[144,4570+26])
        expression (src/ppx.ml[144,4570+26]..[149,4686+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[144,4570+26]..[144,4570+44])
            Ppat_constraint
            pattern (src/ppx.ml[144,4570+27]..[144,4570+28])
              Ppat_var "x" (src/ppx.ml[144,4570+27]..[144,4570+28])
            core_type (src/ppx.ml[144,4570+29]..[144,4570+43])
              Ptyp_constr "list" (src/ppx.ml[144,4570+39]..[144,4570+43])
              [
                core_type (src/ppx.ml[144,4570+29]..[144,4570+38])
                  Ptyp_constr "core_type" (src/ppx.ml[144,4570+29]..[144,4570+38])
                  []
              ]
          expression (src/ppx.ml[145,4617+2]..[149,4686+29])
            Pexp_match
            expression (src/ppx.ml[145,4617+8]..[145,4617+9])
              Pexp_ident "x" (src/ppx.ml[145,4617+8]..[145,4617+9])
            [
              <case>
                pattern (src/ppx.ml[146,4632+4]..[146,4632+6])
                  Ppat_construct "[]" (src/ppx.ml[146,4632+4]..[146,4632+6])
                  None
                expression (src/ppx.ml[146,4632+10]..[146,4632+12])
                  Pexp_construct "()" (src/ppx.ml[146,4632+10]..[146,4632+12])
                  None
              <case>
                pattern (src/ppx.ml[147,4645+4]..[147,4645+10])
                  Ppat_construct "::" (src/ppx.ml[147,4645+6]..[147,4645+8])
                  Some
                    []
                    pattern (src/ppx.ml[147,4645+4]..[147,4645+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[147,4645+4]..[147,4645+5])
                          Ppat_var "h" (src/ppx.ml[147,4645+4]..[147,4645+5])
                        pattern (src/ppx.ml[147,4645+9]..[147,4645+10])
                          Ppat_var "t" (src/ppx.ml[147,4645+9]..[147,4645+10])
                      ]
                expression (src/ppx.ml[148,4659+4]..[149,4686+29])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4659+4]..[148,4659+25])
                    Pexp_apply
                    expression (src/ppx.ml[148,4659+4]..[148,4659+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[148,4659+4]..[148,4659+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4659+22]..[148,4659+25])
                          Pexp_ident "h" (src/ppx.ml[148,4659+23]..[148,4659+24])
                    ]
                  expression (src/ppx.ml[149,4686+4]..[149,4686+29])
                    Pexp_apply
                    expression (src/ppx.ml[149,4686+4]..[149,4686+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[149,4686+4]..[149,4686+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[149,4686+26]..[149,4686+29])
                          Pexp_ident "t" (src/ppx.ml[149,4686+27]..[149,4686+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[156,4730+0]..[163,4929+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[156,4730+4]..[156,4730+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[156,4730+4]..[156,4730+31])
        expression (src/ppx.ml[156,4730+31]..[163,4929+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[156,4730+31]..[156,4730+34])
            Ppat_var "x" (src/ppx.ml[156,4730+32]..[156,4730+33])
          expression (src/ppx.ml[157,4767+2]..[163,4929+65])
            Pexp_match
            expression (src/ppx.ml[157,4767+8]..[157,4767+9])
              Pexp_ident "x" (src/ppx.ml[157,4767+8]..[157,4767+9])
            [
              <case>
                pattern (src/ppx.ml[158,4782+4]..[158,4782+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[158,4782+4]..[158,4782+15])
                  Some
                    []
                    pattern (src/ppx.ml[158,4782+16]..[158,4782+17])
                      Ppat_var "a" (src/ppx.ml[158,4782+16]..[158,4782+17])
                expression (src/ppx.ml[159,4803+4]..[160,4835+64])
                  Pexp_sequence
                  expression (src/ppx.ml[159,4803+4]..[159,4803+30])
                    Pexp_apply
                    expression (src/ppx.ml[159,4803+5]..[159,4803+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[159,4803+5]..[159,4803+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[159,4803+28]..[159,4803+29])
                          Pexp_ident "a" (src/ppx.ml[159,4803+28]..[159,4803+29])
                    ]
                  expression (src/ppx.ml[160,4835+4]..[160,4835+64])
                    Pexp_apply
                    expression (src/ppx.ml[160,4835+5]..[160,4835+18])
                      Pexp_ident "print_endline" (src/ppx.ml[160,4835+5]..[160,4835+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[160,4835+19]..[160,4835+63])
                          Pexp_apply
                          expression (src/ppx.ml[160,4835+20]..[160,4835+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[160,4835+20]..[160,4835+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[160,4835+35]..[160,4835+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[160,4835+36]..[160,4835+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[160,4835+37]..[160,4835+55]),None)
                                  expression (src/ppx.ml[160,4835+60]..[160,4835+61])
                                    Pexp_ident "a" (src/ppx.ml[160,4835+60]..[160,4835+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[162,4907+4]..[162,4907+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[162,4907+4]..[162,4907+16])
                  Some
                    []
                    pattern (src/ppx.ml[162,4907+17]..[162,4907+18])
                      Ppat_var "a" (src/ppx.ml[162,4907+17]..[162,4907+18])
                expression (src/ppx.ml[163,4929+4]..[163,4929+65])
                  Pexp_apply
                  expression (src/ppx.ml[163,4929+5]..[163,4929+18])
                    Pexp_ident "print_endline" (src/ppx.ml[163,4929+5]..[163,4929+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[163,4929+19]..[163,4929+64])
                        Pexp_apply
                        expression (src/ppx.ml[163,4929+20]..[163,4929+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[163,4929+20]..[163,4929+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[163,4929+35]..[163,4929+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[163,4929+36]..[163,4929+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[163,4929+37]..[163,4929+56]),None)
                                expression (src/ppx.ml[163,4929+61]..[163,4929+62])
                                  Pexp_ident "a" (src/ppx.ml[163,4929+61]..[163,4929+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[165,4996+0]..[197,5972+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[165,4996+8]..[165,4996+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[165,4996+8]..[165,4996+57])
        expression (src/ppx.ml[165,4996+57]..[197,5972+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[165,4996+57]..[165,4996+60])
            Ppat_var "x" (src/ppx.ml[165,4996+58]..[165,4996+59])
          expression (src/ppx.ml[166,5059+2]..[197,5972+8])
            Pexp_match
            expression (src/ppx.ml[166,5059+8]..[166,5059+9])
              Pexp_ident "x" (src/ppx.ml[166,5059+8]..[166,5059+9])
            [
              <case>
                pattern (src/ppx.ml[167,5074+4]..[167,5074+6])
                  Ppat_construct "[]" (src/ppx.ml[167,5074+4]..[167,5074+6])
                  None
                expression (src/ppx.ml[167,5074+10]..[167,5074+12])
                  Pexp_construct "()" (src/ppx.ml[167,5074+10]..[167,5074+12])
                  None
              <case>
                pattern (src/ppx.ml[168,5087+4]..[168,5087+10])
                  Ppat_construct "::" (src/ppx.ml[168,5087+6]..[168,5087+8])
                  Some
                    []
                    pattern (src/ppx.ml[168,5087+4]..[168,5087+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[168,5087+4]..[168,5087+5])
                          Ppat_var "h" (src/ppx.ml[168,5087+4]..[168,5087+5])
                        pattern (src/ppx.ml[168,5087+9]..[168,5087+10])
                          Ppat_var "t" (src/ppx.ml[168,5087+9]..[168,5087+10])
                      ]
                expression (src/ppx.ml[170,5166+4]..[197,5972+8])
                  Pexp_match
                  expression (src/ppx.ml[170,5166+10]..[170,5166+11])
                    Pexp_ident "h" (src/ppx.ml[170,5166+10]..[170,5166+11])
                  [
                    <case>
                      pattern (src/ppx.ml[171,5183+5]..[178,5421+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[172,5190+6]..[172,5190+14]) ghost
                            pattern (src/ppx.ml[172,5190+6]..[172,5190+14])
                              Ppat_var "pcd_name" (src/ppx.ml[172,5190+6]..[172,5190+14])
                          "pcd_vars" (src/ppx.ml[173,5224+6]..[173,5224+14]) ghost
                            pattern (src/ppx.ml[173,5224+6]..[173,5224+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[173,5224+6]..[173,5224+14])
                          "pcd_args" (src/ppx.ml[174,5263+6]..[174,5263+14]) ghost
                            pattern (src/ppx.ml[174,5263+6]..[174,5263+14])
                              Ppat_var "pcd_args" (src/ppx.ml[174,5263+6]..[174,5263+14])
                          "pcd_res" (src/ppx.ml[175,5308+6]..[175,5308+13]) ghost
                            pattern (src/ppx.ml[175,5308+6]..[175,5308+13])
                              Ppat_var "pcd_res" (src/ppx.ml[175,5308+6]..[175,5308+13])
                          "pcd_loc" (src/ppx.ml[176,5347+6]..[176,5347+13]) ghost
                            pattern (src/ppx.ml[176,5347+6]..[176,5347+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[176,5347+6]..[176,5347+13])
                          "pcd_attributes" (src/ppx.ml[177,5380+6]..[177,5380+20]) ghost
                            pattern (src/ppx.ml[177,5380+6]..[177,5380+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[177,5380+6]..[177,5380+20])
                        ]
                      expression (src/ppx.ml[181,5503+6]..[197,5972+8])
                        Pexp_sequence
                        expression (src/ppx.ml[181,5503+6]..[181,5503+43])
                          Pexp_apply
                          expression (src/ppx.ml[181,5503+6]..[181,5503+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[181,5503+6]..[181,5503+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[181,5503+33]..[181,5503+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[181,5503+34]..[181,5503+42])
                          ]
                        expression (src/ppx.ml[182,5548+6]..[197,5972+8])
                          Pexp_sequence
                          expression (src/ppx.ml[182,5548+6]..[195,5893+16])
                            Pexp_apply
                            expression (src/ppx.ml[182,5548+7]..[182,5548+20])
                              Pexp_ident "print_endline" (src/ppx.ml[182,5548+7]..[182,5548+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[182,5548+21]..[195,5893+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[182,5548+22]..[182,5548+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[182,5548+22]..[182,5548+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[182,5548+37]..[195,5893+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[183,5587+11]..[183,5587+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[183,5587+12]..[183,5587+36]),None)
                                          expression (src/ppx.ml[184,5626+15]..[184,5626+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[184,5626+15]..[184,5626+23])
                                          expression (src/ppx.ml[185,5651+15]..[185,5651+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[185,5651+16]..[185,5651+20]),None)
                                          expression (src/ppx.ml[186,5674+15]..[186,5674+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[186,5674+15]..[186,5674+23])
                                          expression (src/ppx.ml[187,5699+15]..[187,5699+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[187,5699+16]..[187,5699+20]),None)
                                          expression (src/ppx.ml[188,5722+15]..[188,5722+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[188,5722+15]..[188,5722+23])
                                          expression (src/ppx.ml[189,5747+15]..[189,5747+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[189,5747+16]..[189,5747+19]),None)
                                          expression (src/ppx.ml[190,5769+15]..[190,5769+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[190,5769+15]..[190,5769+22])
                                          expression (src/ppx.ml[191,5793+15]..[191,5793+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[191,5793+16]..[191,5793+19]),None)
                                          expression (src/ppx.ml[192,5815+15]..[192,5815+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[192,5815+15]..[192,5815+22])
                                          expression (src/ppx.ml[193,5839+15]..[193,5839+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[193,5839+16]..[193,5839+21]),None)
                                          expression (src/ppx.ml[194,5863+15]..[194,5863+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[194,5863+15]..[194,5863+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[196,5911+6]..[197,5972+8])
                            Pexp_sequence
                            expression (src/ppx.ml[196,5911+6]..[196,5911+59])
                              Pexp_apply
                              expression (src/ppx.ml[196,5911+7]..[196,5911+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[196,5911+7]..[196,5911+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[196,5911+57]..[196,5911+58])
                                    Pexp_ident "t" (src/ppx.ml[196,5911+57]..[196,5911+58])
                              ]
                            expression (src/ppx.ml[197,5972+6]..[197,5972+8])
                              Pexp_construct "()" (src/ppx.ml[197,5972+6]..[197,5972+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[199,5984+0]..[210,6381+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[199,5984+4]..[199,5984+16])
          Ppat_var "process_kind" (src/ppx.ml[199,5984+4]..[199,5984+16])
        expression (src/ppx.ml[199,5984+16]..[210,6381+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[199,5984+16]..[199,5984+19])
            Ppat_var "x" (src/ppx.ml[199,5984+17]..[199,5984+18])
          expression (src/ppx.ml[200,6006+2]..[210,6381+77])
            Pexp_match
            expression (src/ppx.ml[200,6006+8]..[200,6006+9])
              Pexp_ident "x" (src/ppx.ml[200,6006+8]..[200,6006+9])
            [
              <case>
                pattern (src/ppx.ml[202,6043+4]..[202,6043+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[202,6043+4]..[202,6043+18])
                  None
                expression (src/ppx.ml[202,6043+23]..[202,6043+81])
                  Pexp_apply
                  expression (src/ppx.ml[202,6043+24]..[202,6043+37])
                    Pexp_ident "print_endline" (src/ppx.ml[202,6043+24]..[202,6043+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[202,6043+38]..[202,6043+80])
                        Pexp_apply
                        expression (src/ppx.ml[202,6043+39]..[202,6043+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[202,6043+39]..[202,6043+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[202,6043+54]..[202,6043+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[202,6043+56]..[202,6043+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[203,6125+4]..[203,6125+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[203,6125+4]..[203,6125+17])
                  Some
                    []
                    pattern (src/ppx.ml[203,6125+18]..[203,6125+19])
                      Ppat_var "a" (src/ppx.ml[203,6125+18]..[203,6125+19])
                expression (src/ppx.ml[204,6148+4]..[205,6207+65])
                  Pexp_sequence
                  expression (src/ppx.ml[204,6148+4]..[204,6148+57])
                    Pexp_apply
                    expression (src/ppx.ml[204,6148+5]..[204,6148+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[204,6148+5]..[204,6148+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[204,6148+55]..[204,6148+56])
                          Pexp_ident "a" (src/ppx.ml[204,6148+55]..[204,6148+56])
                    ]
                  expression (src/ppx.ml[205,6207+4]..[205,6207+65])
                    Pexp_apply
                    expression (src/ppx.ml[205,6207+5]..[205,6207+18])
                      Pexp_ident "print_endline" (src/ppx.ml[205,6207+5]..[205,6207+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[205,6207+19]..[205,6207+64])
                          Pexp_apply
                          expression (src/ppx.ml[205,6207+20]..[205,6207+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[205,6207+20]..[205,6207+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[205,6207+35]..[205,6207+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[205,6207+36]..[205,6207+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[205,6207+37]..[205,6207+57]),None)
                                  expression (src/ppx.ml[205,6207+61]..[205,6207+62])
                                    Pexp_ident "a" (src/ppx.ml[205,6207+61]..[205,6207+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[208,6320+5]..[208,6320+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[208,6320+5]..[208,6320+17])
                  Some
                    []
                    pattern (src/ppx.ml[208,6320+18]..[208,6320+19])
                      Ppat_var "a" (src/ppx.ml[208,6320+18]..[208,6320+19])
                expression (src/ppx.ml[209,6348+5]..[209,6348+32])
                  Pexp_apply
                  expression (src/ppx.ml[209,6348+5]..[209,6348+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[209,6348+5]..[209,6348+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6348+29]..[209,6348+32])
                        Pexp_ident "a" (src/ppx.ml[209,6348+30]..[209,6348+31])
                  ]
              <case>
                pattern (src/ppx.ml[210,6381+5]..[210,6381+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[210,6381+5]..[210,6381+15])
                  None
                expression (src/ppx.ml[210,6381+19]..[210,6381+77])
                  Pexp_apply
                  expression (src/ppx.ml[210,6381+20]..[210,6381+33])
                    Pexp_ident "print_endline" (src/ppx.ml[210,6381+20]..[210,6381+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[210,6381+34]..[210,6381+76])
                        Pexp_apply
                        expression (src/ppx.ml[210,6381+35]..[210,6381+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[210,6381+35]..[210,6381+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[210,6381+50]..[210,6381+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[210,6381+52]..[210,6381+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[212,6460+0]..[233,7466+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[212,6460+4]..[212,6460+19])
          Ppat_var "print_type_decl" (src/ppx.ml[212,6460+4]..[212,6460+19])
        expression (src/ppx.ml[212,6460+19]..[233,7466+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[212,6460+19]..[212,6460+22])
            Ppat_var "x" (src/ppx.ml[212,6460+20]..[212,6460+21])
          expression (src/ppx.ml[213,6485+2]..[233,7466+38])
            Pexp_match
            expression (src/ppx.ml[213,6485+8]..[213,6485+9])
              Pexp_ident "x" (src/ppx.ml[213,6485+8]..[213,6485+9])
            [
              <case>
                pattern (src/ppx.ml[214,6500+4]..[223,6881+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[215,6506+6]..[215,6506+16]) ghost
                      pattern (src/ppx.ml[215,6506+6]..[215,6506+16])
                        Ppat_var "ptype_name" (src/ppx.ml[215,6506+6]..[215,6506+16])
                    "ptype_params" (src/ppx.ml[216,6543+6]..[216,6543+18]) ghost
                      pattern (src/ppx.ml[216,6543+6]..[216,6543+18])
                        Ppat_var "ptype_params" (src/ppx.ml[216,6543+6]..[216,6543+18])
                    "ptype_cstrs" (src/ppx.ml[217,6615+6]..[217,6615+17]) ghost
                      pattern (src/ppx.ml[217,6615+6]..[217,6615+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[217,6615+6]..[217,6615+17])
                    "ptype_kind" (src/ppx.ml[218,6684+6]..[218,6684+16]) ghost
                      pattern (src/ppx.ml[218,6684+6]..[218,6684+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[218,6684+6]..[218,6684+16])
                    "ptype_private" (src/ppx.ml[219,6721+6]..[219,6721+19]) ghost
                      pattern (src/ppx.ml[219,6721+6]..[219,6721+19])
                        Ppat_var "ptype_private" (src/ppx.ml[219,6721+6]..[219,6721+19])
                    "ptype_manifest" (src/ppx.ml[220,6762+6]..[220,6762+20]) ghost
                      pattern (src/ppx.ml[220,6762+6]..[220,6762+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[220,6762+6]..[220,6762+20])
                    "ptype_attributes" (src/ppx.ml[221,6809+6]..[221,6809+22]) ghost
                      pattern (src/ppx.ml[221,6809+6]..[221,6809+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[221,6809+6]..[221,6809+22])
                    "ptype_loc" (src/ppx.ml[222,6850+6]..[222,6850+15]) ghost
                      pattern (src/ppx.ml[222,6850+6]..[222,6850+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[222,6850+6]..[222,6850+15])
                  ]
                expression (src/ppx.ml[224,6890+4]..[233,7466+38])
                  Pexp_sequence
                  expression (src/ppx.ml[224,6890+4]..[224,6890+69])
                    Pexp_apply
                    expression (src/ppx.ml[224,6890+5]..[224,6890+18])
                      Pexp_ident "print_endline" (src/ppx.ml[224,6890+5]..[224,6890+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[224,6890+19]..[224,6890+68])
                          Pexp_apply
                          expression (src/ppx.ml[224,6890+20]..[224,6890+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[224,6890+20]..[224,6890+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[224,6890+35]..[224,6890+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[224,6890+36]..[224,6890+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[224,6890+37]..[224,6890+53]),None)
                                  expression (src/ppx.ml[224,6890+56]..[224,6890+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[224,6890+56]..[224,6890+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[225,6961+4]..[233,7466+38])
                    Pexp_sequence
                    expression (src/ppx.ml[225,6961+4]..[225,6961+72])
                      Pexp_apply
                      expression (src/ppx.ml[225,6961+5]..[225,6961+18])
                        Pexp_ident "print_endline" (src/ppx.ml[225,6961+5]..[225,6961+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[225,6961+19]..[225,6961+71])
                            Pexp_apply
                            expression (src/ppx.ml[225,6961+20]..[225,6961+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[225,6961+20]..[225,6961+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[225,6961+35]..[225,6961+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[225,6961+36]..[225,6961+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[225,6961+37]..[225,6961+54]),None)
                                    expression (src/ppx.ml[225,6961+57]..[225,6961+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[225,6961+57]..[225,6961+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[226,7035+4]..[233,7466+38])
                      Pexp_sequence
                      expression (src/ppx.ml[226,7035+4]..[226,7035+66])
                        Pexp_apply
                        expression (src/ppx.ml[226,7035+5]..[226,7035+18])
                          Pexp_ident "print_endline" (src/ppx.ml[226,7035+5]..[226,7035+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[226,7035+19]..[226,7035+65])
                              Pexp_apply
                              expression (src/ppx.ml[226,7035+20]..[226,7035+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[226,7035+20]..[226,7035+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[226,7035+35]..[226,7035+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[226,7035+36]..[226,7035+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[226,7035+37]..[226,7035+49]),None)
                                      expression (src/ppx.ml[226,7035+52]..[226,7035+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[226,7035+52]..[226,7035+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[227,7103+4]..[233,7466+38])
                        Pexp_sequence
                        expression (src/ppx.ml[227,7103+4]..[227,7103+63])
                          Pexp_apply
                          expression (src/ppx.ml[227,7103+5]..[227,7103+18])
                            Pexp_ident "print_endline" (src/ppx.ml[227,7103+5]..[227,7103+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[227,7103+19]..[227,7103+62])
                                Pexp_apply
                                expression (src/ppx.ml[227,7103+20]..[227,7103+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[227,7103+20]..[227,7103+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[227,7103+35]..[227,7103+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[227,7103+36]..[227,7103+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[227,7103+37]..[227,7103+48]),None)
                                        expression (src/ppx.ml[227,7103+50]..[227,7103+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[227,7103+50]..[227,7103+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[228,7168+4]..[233,7466+38])
                          Pexp_sequence
                          expression (src/ppx.ml[228,7168+4]..[228,7168+29])
                            Pexp_apply
                            expression (src/ppx.ml[228,7168+5]..[228,7168+17])
                              Pexp_ident "process_kind" (src/ppx.ml[228,7168+5]..[228,7168+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[228,7168+18]..[228,7168+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[228,7168+18]..[228,7168+28])
                            ]
                          expression (src/ppx.ml[229,7199+4]..[233,7466+38])
                            Pexp_apply
                            expression (src/ppx.ml[229,7199+5]..[229,7199+18])
                              Pexp_ident "print_endline" (src/ppx.ml[229,7199+5]..[229,7199+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[229,7199+19]..[233,7466+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[229,7199+20]..[229,7199+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[229,7199+20]..[229,7199+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[229,7199+35]..[233,7466+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[229,7199+36]..[229,7199+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[229,7199+37]..[229,7199+51]),None)
                                          expression (src/ppx.ml[229,7199+55]..[229,7199+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[229,7199+55]..[229,7199+68])
                                          expression (src/ppx.ml[230,7269+36]..[230,7269+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[230,7269+37]..[230,7269+51]),None)
                                          expression (src/ppx.ml[230,7269+54]..[230,7269+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[230,7269+54]..[230,7269+68])
                                          expression (src/ppx.ml[231,7339+36]..[231,7339+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[231,7339+37]..[231,7339+47]),None)
                                          expression (src/ppx.ml[231,7339+50]..[231,7339+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[231,7339+50]..[231,7339+66])
                                          expression (src/ppx.ml[232,7407+36]..[232,7407+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[232,7407+37]..[232,7407+46]),None)
                                          expression (src/ppx.ml[232,7407+49]..[232,7407+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[232,7407+49]..[232,7407+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[235,7510+0]..[241,7645+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[235,7510+8]..[235,7510+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[235,7510+8]..[235,7510+30])
        expression (src/ppx.ml[235,7510+30]..[241,7645+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[235,7510+30]..[235,7510+33])
            Ppat_var "x" (src/ppx.ml[235,7510+31]..[235,7510+32])
          expression (src/ppx.ml[236,7546+2]..[241,7645+6])
            Pexp_match
            expression (src/ppx.ml[236,7546+8]..[236,7546+9])
              Pexp_ident "x" (src/ppx.ml[236,7546+8]..[236,7546+9])
            [
              <case>
                pattern (src/ppx.ml[237,7561+4]..[237,7561+6])
                  Ppat_construct "[]" (src/ppx.ml[237,7561+4]..[237,7561+6])
                  None
                expression (src/ppx.ml[237,7561+10]..[237,7561+12])
                  Pexp_construct "()" (src/ppx.ml[237,7561+10]..[237,7561+12])
                  None
              <case>
                pattern (src/ppx.ml[238,7574+4]..[238,7574+10])
                  Ppat_construct "::" (src/ppx.ml[238,7574+6]..[238,7574+8])
                  Some
                    []
                    pattern (src/ppx.ml[238,7574+4]..[238,7574+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[238,7574+4]..[238,7574+5])
                          Ppat_var "h" (src/ppx.ml[238,7574+4]..[238,7574+5])
                        pattern (src/ppx.ml[238,7574+9]..[238,7574+10])
                          Ppat_var "t" (src/ppx.ml[238,7574+9]..[238,7574+10])
                      ]
                expression (src/ppx.ml[239,7588+4]..[241,7645+6])
                  Pexp_sequence
                  expression (src/ppx.ml[239,7588+4]..[239,7588+23])
                    Pexp_apply
                    expression (src/ppx.ml[239,7588+5]..[239,7588+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[239,7588+5]..[239,7588+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[239,7588+21]..[239,7588+22])
                          Pexp_ident "h" (src/ppx.ml[239,7588+21]..[239,7588+22])
                    ]
                  expression (src/ppx.ml[240,7613+4]..[241,7645+6])
                    Pexp_sequence
                    expression (src/ppx.ml[240,7613+4]..[240,7613+30])
                      Pexp_apply
                      expression (src/ppx.ml[240,7613+5]..[240,7613+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[240,7613+5]..[240,7613+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[240,7613+28]..[240,7613+29])
                            Pexp_ident "t" (src/ppx.ml[240,7613+28]..[240,7613+29])
                      ]
                    expression (src/ppx.ml[241,7645+4]..[241,7645+6])
                      Pexp_construct "()" (src/ppx.ml[241,7645+4]..[241,7645+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[243,7657+0]..[269,9621+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[243,7657+4]..[243,7657+13])
          Ppat_var "printdesc" (src/ppx.ml[243,7657+4]..[243,7657+13])
        expression (src/ppx.ml[243,7657+13]..[269,9621+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[243,7657+13]..[243,7657+37])
            Ppat_constraint
            pattern (src/ppx.ml[243,7657+14]..[243,7657+15])
              Ppat_var "x" (src/ppx.ml[243,7657+14]..[243,7657+15])
            core_type (src/ppx.ml[243,7657+17]..[243,7657+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[243,7657+17]..[243,7657+36])
              []
          expression (src/ppx.ml[243,7657+38]..[269,9621+128])
            Pexp_constraint
            expression (src/ppx.ml[244,7703+2]..[269,9621+128])
              Pexp_sequence
              expression (src/ppx.ml[244,7703+2]..[244,7703+68])
                Pexp_apply
                expression (src/ppx.ml[244,7703+3]..[244,7703+16])
                  Pexp_ident "print_endline" (src/ppx.ml[244,7703+3]..[244,7703+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[244,7703+17]..[244,7703+67])
                      Pexp_apply
                      expression (src/ppx.ml[244,7703+18]..[244,7703+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[244,7703+18]..[244,7703+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[244,7703+33]..[244,7703+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[244,7703+34]..[244,7703+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[244,7703+35]..[244,7703+61]),None)
                              expression (src/ppx.ml[244,7703+64]..[244,7703+65])
                                Pexp_ident "x" (src/ppx.ml[244,7703+64]..[244,7703+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[245,7773+2]..[269,9621+128])
                Pexp_match
                expression (src/ppx.ml[245,7773+8]..[245,7773+9])
                  Pexp_ident "x" (src/ppx.ml[245,7773+8]..[245,7773+9])
                [
                  <case>
                    pattern (src/ppx.ml[246,7788+4]..[246,7788+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[246,7788+4]..[246,7788+13])
                      Some
                        []
                        pattern (src/ppx.ml[246,7788+14]..[246,7788+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[246,7788+15]..[246,7788+25])
                              Ppat_var "expression" (src/ppx.ml[246,7788+15]..[246,7788+25])
                            pattern (src/ppx.ml[246,7788+26]..[246,7788+36])
                              Ppat_var "attributes" (src/ppx.ml[246,7788+26]..[246,7788+36])
                          ]
                    expression (src/ppx.ml[246,7788+41]..[246,7788+117])
                      Pexp_apply
                      expression (src/ppx.ml[246,7788+42]..[246,7788+55])
                        Pexp_ident "print_endline" (src/ppx.ml[246,7788+42]..[246,7788+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[246,7788+56]..[246,7788+116])
                            Pexp_apply
                            expression (src/ppx.ml[246,7788+57]..[246,7788+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[246,7788+57]..[246,7788+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[246,7788+72]..[246,7788+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[246,7788+73]..[246,7788+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[246,7788+74]..[246,7788+90]),None)
                                    expression (src/ppx.ml[246,7788+93]..[246,7788+103])
                                      Pexp_ident "expression" (src/ppx.ml[246,7788+93]..[246,7788+103])
                                    expression (src/ppx.ml[246,7788+104]..[246,7788+114])
                                      Pexp_ident "attributes" (src/ppx.ml[246,7788+104]..[246,7788+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[248,7926+4]..[248,7926+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[248,7926+4]..[248,7926+14])
                      Some
                        []
                        pattern (src/ppx.ml[248,7926+15]..[248,7926+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[248,7926+16]..[248,7926+24])
                              Ppat_var "rec_flag" (src/ppx.ml[248,7926+16]..[248,7926+24])
                            pattern (src/ppx.ml[248,7926+26]..[248,7926+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[248,7926+26]..[248,7926+44])
                          ]
                    expression (src/ppx.ml[248,7926+48]..[249,8060+48])
                      Pexp_sequence
                      expression (src/ppx.ml[248,7926+48]..[248,7926+132])
                        Pexp_apply
                        expression (src/ppx.ml[248,7926+49]..[248,7926+62])
                          Pexp_ident "print_endline" (src/ppx.ml[248,7926+49]..[248,7926+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[248,7926+63]..[248,7926+131])
                              Pexp_apply
                              expression (src/ppx.ml[248,7926+64]..[248,7926+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[248,7926+64]..[248,7926+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[248,7926+79]..[248,7926+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[248,7926+80]..[248,7926+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[248,7926+81]..[248,7926+98]),None)
                                      expression (src/ppx.ml[248,7926+101]..[248,7926+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[248,7926+101]..[248,7926+109])
                                      expression (src/ppx.ml[248,7926+111]..[248,7926+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[248,7926+111]..[248,7926+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[249,8060+4]..[249,8060+48])
                        Pexp_apply
                        expression (src/ppx.ml[249,8060+4]..[249,8060+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[249,8060+4]..[249,8060+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[249,8060+28]..[249,8060+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[249,8060+29]..[249,8060+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[250,8109+4]..[250,8109+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[250,8109+4]..[250,8109+18])
                      Some
                        []
                        pattern (src/ppx.ml[250,8109+19]..[250,8109+36])
                          Ppat_var "value_description" (src/ppx.ml[250,8109+19]..[250,8109+36])
                    expression (src/ppx.ml[250,8109+39]..[250,8109+116])
                      Pexp_apply
                      expression (src/ppx.ml[250,8109+40]..[250,8109+53])
                        Pexp_ident "print_endline" (src/ppx.ml[250,8109+40]..[250,8109+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[250,8109+54]..[250,8109+115])
                            Pexp_apply
                            expression (src/ppx.ml[250,8109+55]..[250,8109+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[250,8109+55]..[250,8109+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[250,8109+70]..[250,8109+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[250,8109+71]..[250,8109+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[250,8109+72]..[250,8109+93]),None)
                                    expression (src/ppx.ml[250,8109+96]..[250,8109+113])
                                      Pexp_ident "value_description" (src/ppx.ml[250,8109+96]..[250,8109+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[252,8227+4]..[252,8227+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[252,8227+4]..[252,8227+13])
                      Some
                        []
                        pattern (src/ppx.ml[252,8227+14]..[252,8227+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[252,8227+15]..[252,8227+23])
                              Ppat_var "rec_flag" (src/ppx.ml[252,8227+15]..[252,8227+23])
                            pattern (src/ppx.ml[252,8227+25]..[252,8227+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[252,8227+25]..[252,8227+46])
                          ]
                    expression (src/ppx.ml[254,8306+4]..[255,8357+90])
                      Pexp_sequence
                      expression (src/ppx.ml[254,8306+4]..[254,8306+49])
                        Pexp_apply
                        expression (src/ppx.ml[254,8306+4]..[254,8306+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[254,8306+4]..[254,8306+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[254,8306+26]..[254,8306+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[254,8306+27]..[254,8306+48])
                        ]
                      expression (src/ppx.ml[255,8357+4]..[255,8357+90])
                        Pexp_apply
                        expression (src/ppx.ml[255,8357+5]..[255,8357+18])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8357+5]..[255,8357+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8357+19]..[255,8357+89])
                              Pexp_apply
                              expression (src/ppx.ml[255,8357+20]..[255,8357+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8357+20]..[255,8357+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8357+35]..[255,8357+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8357+36]..[255,8357+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[255,8357+37]..[255,8357+53]),None)
                                      expression (src/ppx.ml[255,8357+56]..[255,8357+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8357+56]..[255,8357+64])
                                      expression (src/ppx.ml[255,8357+66]..[255,8357+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[255,8357+66]..[255,8357+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[258,8450+4]..[258,8450+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[258,8450+4]..[258,8450+15])
                      Some
                        []
                        pattern (src/ppx.ml[258,8450+17]..[258,8450+31])
                          Ppat_var "type_extension" (src/ppx.ml[258,8450+17]..[258,8450+31])
                    expression (src/ppx.ml[258,8450+34]..[258,8450+105])
                      Pexp_apply
                      expression (src/ppx.ml[258,8450+35]..[258,8450+48])
                        Pexp_ident "print_endline" (src/ppx.ml[258,8450+35]..[258,8450+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[258,8450+49]..[258,8450+104])
                            Pexp_apply
                            expression (src/ppx.ml[258,8450+50]..[258,8450+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[258,8450+50]..[258,8450+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[258,8450+65]..[258,8450+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[258,8450+66]..[258,8450+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[258,8450+67]..[258,8450+85]),None)
                                    expression (src/ppx.ml[258,8450+88]..[258,8450+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[258,8450+88]..[258,8450+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8556+4]..[259,8556+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[259,8556+4]..[259,8556+18])
                      Some
                        []
                        pattern (src/ppx.ml[259,8556+19]..[259,8556+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[259,8556+19]..[259,8556+40])
                    expression (src/ppx.ml[259,8556+43]..[259,8556+124])
                      Pexp_apply
                      expression (src/ppx.ml[259,8556+44]..[259,8556+57])
                        Pexp_ident "print_endline" (src/ppx.ml[259,8556+44]..[259,8556+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[259,8556+58]..[259,8556+123])
                            Pexp_apply
                            expression (src/ppx.ml[259,8556+59]..[259,8556+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[259,8556+59]..[259,8556+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[259,8556+74]..[259,8556+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[259,8556+75]..[259,8556+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[259,8556+76]..[259,8556+97]),None)
                                    expression (src/ppx.ml[259,8556+100]..[259,8556+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[259,8556+100]..[259,8556+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[260,8681+4]..[260,8681+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[260,8681+4]..[260,8681+15])
                      Some
                        []
                        pattern (src/ppx.ml[260,8681+17]..[260,8681+31])
                          Ppat_var "module_binding" (src/ppx.ml[260,8681+17]..[260,8681+31])
                    expression (src/ppx.ml[260,8681+34]..[260,8681+104])
                      Pexp_apply
                      expression (src/ppx.ml[260,8681+35]..[260,8681+48])
                        Pexp_ident "print_endline" (src/ppx.ml[260,8681+35]..[260,8681+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,8681+49]..[260,8681+103])
                            Pexp_apply
                            expression (src/ppx.ml[260,8681+50]..[260,8681+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[260,8681+50]..[260,8681+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[260,8681+65]..[260,8681+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[260,8681+66]..[260,8681+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[260,8681+67]..[260,8681+85]),None)
                                    expression (src/ppx.ml[260,8681+87]..[260,8681+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[260,8681+87]..[260,8681+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,8786+4]..[261,8786+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[261,8786+4]..[261,8786+18])
                      Some
                        []
                        pattern (src/ppx.ml[261,8786+20]..[261,8786+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[261,8786+20]..[261,8786+39])
                    expression (src/ppx.ml[261,8786+42]..[261,8786+121])
                      Pexp_apply
                      expression (src/ppx.ml[261,8786+43]..[261,8786+56])
                        Pexp_ident "print_endline" (src/ppx.ml[261,8786+43]..[261,8786+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[261,8786+57]..[261,8786+120])
                            Pexp_apply
                            expression (src/ppx.ml[261,8786+58]..[261,8786+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[261,8786+58]..[261,8786+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[261,8786+73]..[261,8786+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[261,8786+74]..[261,8786+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[261,8786+75]..[261,8786+96]),None)
                                    expression (src/ppx.ml[261,8786+99]..[261,8786+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[261,8786+99]..[261,8786+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[262,8908+4]..[262,8908+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[262,8908+4]..[262,8908+16])
                      Some
                        []
                        pattern (src/ppx.ml[262,8908+17]..[262,8908+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[262,8908+17]..[262,8908+40])
                    expression (src/ppx.ml[262,8908+43]..[262,8908+124])
                      Pexp_apply
                      expression (src/ppx.ml[262,8908+44]..[262,8908+57])
                        Pexp_ident "print_endline" (src/ppx.ml[262,8908+44]..[262,8908+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,8908+58]..[262,8908+123])
                            Pexp_apply
                            expression (src/ppx.ml[262,8908+59]..[262,8908+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,8908+59]..[262,8908+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,8908+74]..[262,8908+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,8908+75]..[262,8908+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[262,8908+76]..[262,8908+95]),None)
                                    expression (src/ppx.ml[262,8908+98]..[262,8908+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[262,8908+98]..[262,8908+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,9050+4]..[264,9050+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[264,9050+4]..[264,9050+13])
                      Some
                        []
                        pattern (src/ppx.ml[264,9050+14]..[264,9050+30])
                          Ppat_var "open_description" (src/ppx.ml[264,9050+14]..[264,9050+30])
                    expression (src/ppx.ml[264,9050+33]..[264,9050+103])
                      Pexp_apply
                      expression (src/ppx.ml[264,9050+34]..[264,9050+47])
                        Pexp_ident "print_endline" (src/ppx.ml[264,9050+34]..[264,9050+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,9050+48]..[264,9050+102])
                            Pexp_apply
                            expression (src/ppx.ml[264,9050+49]..[264,9050+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[264,9050+49]..[264,9050+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[264,9050+64]..[264,9050+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[264,9050+65]..[264,9050+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[264,9050+66]..[264,9050+81]),None)
                                    expression (src/ppx.ml[264,9050+84]..[264,9050+100])
                                      Pexp_ident "open_description" (src/ppx.ml[264,9050+84]..[264,9050+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[265,9154+4]..[265,9154+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[265,9154+4]..[265,9154+14])
                      Some
                        []
                        pattern (src/ppx.ml[265,9154+15]..[265,9154+36])
                          Ppat_var "class_declarations" (src/ppx.ml[265,9154+16]..[265,9154+34])
                    expression (src/ppx.ml[265,9154+39]..[265,9154+113])
                      Pexp_apply
                      expression (src/ppx.ml[265,9154+40]..[265,9154+53])
                        Pexp_ident "print_endline" (src/ppx.ml[265,9154+40]..[265,9154+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,9154+54]..[265,9154+112])
                            Pexp_apply
                            expression (src/ppx.ml[265,9154+55]..[265,9154+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,9154+55]..[265,9154+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,9154+70]..[265,9154+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,9154+71]..[265,9154+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[265,9154+72]..[265,9154+89]),None)
                                    expression (src/ppx.ml[265,9154+92]..[265,9154+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[265,9154+92]..[265,9154+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,9268+4]..[266,9268+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[266,9268+4]..[266,9268+19])
                      Some
                        []
                        pattern (src/ppx.ml[266,9268+20]..[266,9268+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[266,9268+21]..[266,9268+44])
                    expression (src/ppx.ml[266,9268+48]..[266,9268+132])
                      Pexp_apply
                      expression (src/ppx.ml[266,9268+49]..[266,9268+62])
                        Pexp_ident "print_endline" (src/ppx.ml[266,9268+49]..[266,9268+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,9268+63]..[266,9268+131])
                            Pexp_apply
                            expression (src/ppx.ml[266,9268+64]..[266,9268+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,9268+64]..[266,9268+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,9268+79]..[266,9268+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,9268+80]..[266,9268+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[266,9268+81]..[266,9268+103]),None)
                                    expression (src/ppx.ml[266,9268+106]..[266,9268+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[266,9268+106]..[266,9268+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,9401+4]..[267,9401+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[267,9401+4]..[267,9401+16])
                      Some
                        []
                        pattern (src/ppx.ml[267,9401+18]..[267,9401+39])
                          Ppat_var "include_declaration" (src/ppx.ml[267,9401+19]..[267,9401+38])
                    expression (src/ppx.ml[267,9401+41]..[267,9401+117])
                      Pexp_apply
                      expression (src/ppx.ml[267,9401+42]..[267,9401+55])
                        Pexp_ident "print_endline" (src/ppx.ml[267,9401+42]..[267,9401+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,9401+56]..[267,9401+116])
                            Pexp_apply
                            expression (src/ppx.ml[267,9401+57]..[267,9401+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,9401+57]..[267,9401+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,9401+72]..[267,9401+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,9401+73]..[267,9401+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[267,9401+74]..[267,9401+93]),None)
                                    expression (src/ppx.ml[267,9401+95]..[267,9401+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[267,9401+95]..[267,9401+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,9519+4]..[268,9519+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[268,9519+4]..[268,9519+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,9519+19]..[268,9519+30])
                          Ppat_var "attribute" (src/ppx.ml[268,9519+20]..[268,9519+29])
                    expression (src/ppx.ml[268,9519+32]..[268,9519+101])
                      Pexp_apply
                      expression (src/ppx.ml[268,9519+33]..[268,9519+46])
                        Pexp_ident "print_endline" (src/ppx.ml[268,9519+33]..[268,9519+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,9519+47]..[268,9519+100])
                            Pexp_apply
                            expression (src/ppx.ml[268,9519+48]..[268,9519+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,9519+48]..[268,9519+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,9519+63]..[268,9519+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,9519+64]..[268,9519+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[268,9519+65]..[268,9519+86]),None)
                                    expression (src/ppx.ml[268,9519+89]..[268,9519+98])
                                      Pexp_ident "attribute" (src/ppx.ml[268,9519+89]..[268,9519+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9621+4]..[269,9621+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[269,9621+4]..[269,9621+18])
                      Some
                        []
                        pattern (src/ppx.ml[269,9621+19]..[269,9621+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[269,9621+21]..[269,9621+30])
                              Ppat_var "extension" (src/ppx.ml[269,9621+21]..[269,9621+30])
                            pattern (src/ppx.ml[269,9621+33]..[269,9621+43])
                              Ppat_var "attributes" (src/ppx.ml[269,9621+33]..[269,9621+43])
                          ]
                    expression (src/ppx.ml[269,9621+46]..[269,9621+128])
                      Pexp_apply
                      expression (src/ppx.ml[269,9621+47]..[269,9621+60])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9621+47]..[269,9621+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9621+61]..[269,9621+127])
                            Pexp_apply
                            expression (src/ppx.ml[269,9621+62]..[269,9621+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9621+62]..[269,9621+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9621+77]..[269,9621+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9621+78]..[269,9621+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[269,9621+79]..[269,9621+100]),None)
                                    expression (src/ppx.ml[269,9621+103]..[269,9621+112])
                                      Pexp_ident "extension" (src/ppx.ml[269,9621+103]..[269,9621+112])
                                    expression (src/ppx.ml[269,9621+115]..[269,9621+125])
                                      Pexp_ident "attributes" (src/ppx.ml[269,9621+115]..[269,9621+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[243,7657+39]..[243,7657+43])
              Ptyp_constr "unit" (src/ppx.ml[243,7657+39]..[243,7657+43])
              []
    ]
  structure_item (src/ppx.ml[271,9751+0]..[271,9751+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[271,9751+4]..[271,9751+7])
          Ppat_var "foo" (src/ppx.ml[271,9751+4]..[271,9751+7])
        expression (src/ppx.ml[271,9751+10]..[271,9751+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[273,9766+0]..[281,9985+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[273,9766+4]..[273,9766+12])
          Ppat_var "printone" (src/ppx.ml[273,9766+4]..[273,9766+12])
        expression (src/ppx.ml[273,9766+13]..[281,9985+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[273,9766+13]..[273,9766+34])
            Ppat_constraint
            pattern (src/ppx.ml[273,9766+14]..[273,9766+15])
              Ppat_var "x" (src/ppx.ml[273,9766+14]..[273,9766+15])
            core_type (src/ppx.ml[273,9766+18]..[273,9766+32])
              Ptyp_constr "structure_item" (src/ppx.ml[273,9766+18]..[273,9766+32])
              []
          expression (src/ppx.ml[273,9766+35]..[281,9985+6])
            Pexp_constraint
            expression (src/ppx.ml[274,9809+2]..[281,9985+6])
              Pexp_match
              expression (src/ppx.ml[274,9809+8]..[274,9809+9])
                Pexp_ident "x" (src/ppx.ml[274,9809+8]..[274,9809+9])
              [
                <case>
                  pattern (src/ppx.ml[275,9824+3]..[278,9874+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[276,9829+4]..[276,9829+13]) ghost
                        pattern (src/ppx.ml[276,9829+4]..[276,9829+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[276,9829+4]..[276,9829+13])
                    ]
                  expression (src/ppx.ml[280,9958+4]..[281,9985+6])
                    Pexp_sequence
                    expression (src/ppx.ml[280,9958+4]..[280,9958+25])
                      Pexp_apply
                      expression (src/ppx.ml[280,9958+5]..[280,9958+14])
                        Pexp_ident "printdesc" (src/ppx.ml[280,9958+5]..[280,9958+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[280,9958+15]..[280,9958+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[280,9958+15]..[280,9958+24])
                      ]
                    expression (src/ppx.ml[281,9985+4]..[281,9985+6])
                      Pexp_construct "()" (src/ppx.ml[281,9985+4]..[281,9985+6])
                      None
              ]
            core_type (src/ppx.ml[273,9766+36]..[273,9766+40])
              Ptyp_constr "unit" (src/ppx.ml[273,9766+36]..[273,9766+40])
              []
    ]
  structure_item (src/ppx.ml[287,10105+0]..[289,10186+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10105+4]..[287,10105+13])
          Ppat_var "printone2" (src/ppx.ml[287,10105+4]..[287,10105+13])
        expression (src/ppx.ml[287,10105+14]..[289,10186+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[287,10105+14]..[287,10105+15])
            Ppat_var "x" (src/ppx.ml[287,10105+14]..[287,10105+15])
          expression (src/ppx.ml[287,10105+16]..[289,10186+12])
            Pexp_constraint
            expression (src/ppx.ml[288,10129+2]..[289,10186+12])
              Pexp_sequence
              expression (src/ppx.ml[288,10129+2]..[288,10129+55])
                Pexp_apply
                expression (src/ppx.ml[288,10129+3]..[288,10129+16])
                  Pexp_ident "print_endline" (src/ppx.ml[288,10129+3]..[288,10129+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[288,10129+17]..[288,10129+54])
                      Pexp_apply
                      expression (src/ppx.ml[288,10129+18]..[288,10129+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[288,10129+18]..[288,10129+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[288,10129+33]..[288,10129+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[288,10129+34]..[288,10129+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[288,10129+35]..[288,10129+49]),None)
                              expression (src/ppx.ml[288,10129+51]..[288,10129+52])
                                Pexp_ident "x" (src/ppx.ml[288,10129+51]..[288,10129+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[289,10186+2]..[289,10186+12])
                Pexp_apply
                expression (src/ppx.ml[289,10186+2]..[289,10186+10])
                  Pexp_ident "printone" (src/ppx.ml[289,10186+2]..[289,10186+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[289,10186+11]..[289,10186+12])
                      Pexp_ident "x" (src/ppx.ml[289,10186+11]..[289,10186+12])
                ]
            core_type (src/ppx.ml[287,10105+17]..[287,10105+21])
              Ptyp_constr "unit" (src/ppx.ml[287,10105+17]..[287,10105+21])
              []
    ]
  structure_item (src/ppx.ml[291,10202+0]..[293,10233+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[291,10202+4]..[291,10202+9])
          Ppat_var "proc1" (src/ppx.ml[291,10202+4]..[291,10202+9])
        expression (src/ppx.ml[291,10202+10]..[293,10233+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[291,10202+10]..[291,10202+11])
            Ppat_var "x" (src/ppx.ml[291,10202+10]..[291,10202+11])
          expression (src/ppx.ml[292,10218+2]..[293,10233+3])
            Pexp_sequence
            expression (src/ppx.ml[292,10218+2]..[292,10218+13])
              Pexp_apply
              expression (src/ppx.ml[292,10218+2]..[292,10218+11])
                Pexp_ident "printone2" (src/ppx.ml[292,10218+2]..[292,10218+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[292,10218+12]..[292,10218+13])
                    Pexp_ident "x" (src/ppx.ml[292,10218+12]..[292,10218+13])
              ]
            expression (src/ppx.ml[293,10233+2]..[293,10233+3])
              Pexp_ident "x" (src/ppx.ml[293,10233+2]..[293,10233+3])
    ]
  structure_item (src/ppx.ml[295,10238+0]..[298,10387+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10238+4]..[295,10238+9])
          Ppat_var "debug" (src/ppx.ml[295,10238+4]..[295,10238+9])
        expression (src/ppx.ml[295,10238+10]..[298,10387+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[295,10238+10]..[295,10238+14])
            Ppat_var "proc" (src/ppx.ml[295,10238+10]..[295,10238+14])
          expression (src/ppx.ml[295,10238+15]..[298,10387+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[295,10238+15]..[295,10238+18])
              Ppat_var "lst" (src/ppx.ml[295,10238+15]..[295,10238+18])
            expression (src/ppx.ml[295,10238+19]..[298,10387+4])
              Pexp_constraint
              expression (src/ppx.ml[296,10266+2]..[298,10387+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[296,10266+6]..[296,10266+12])
                      Ppat_var "result" (src/ppx.ml[296,10266+6]..[296,10266+12])
                    expression (src/ppx.ml[296,10266+15]..[296,10266+32])
                      Pexp_apply
                      expression (src/ppx.ml[296,10266+15]..[296,10266+23])
                        Pexp_ident "List.map" (src/ppx.ml[296,10266+15]..[296,10266+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[296,10266+24]..[296,10266+28])
                            Pexp_ident "proc" (src/ppx.ml[296,10266+24]..[296,10266+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[296,10266+29]..[296,10266+32])
                            Pexp_ident "lst" (src/ppx.ml[296,10266+29]..[296,10266+32])
                      ]
                ]
                expression (src/ppx.ml[297,10302+2]..[298,10387+4])
                  Pexp_sequence
                  expression (src/ppx.ml[297,10302+2]..[297,10302+83])
                    Pexp_apply
                    expression (src/ppx.ml[297,10302+2]..[297,10302+11])
                      Pexp_ident "List.iter" (src/ppx.ml[297,10302+2]..[297,10302+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[297,10302+12]..[297,10302+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[297,10302+17]..[297,10302+18])
                            Ppat_var "i" (src/ppx.ml[297,10302+17]..[297,10302+18])
                          expression (src/ppx.ml[297,10302+22]..[297,10302+75])
                            Pexp_apply
                            expression (src/ppx.ml[297,10302+22]..[297,10302+35])
                              Pexp_ident "print_endline" (src/ppx.ml[297,10302+22]..[297,10302+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[297,10302+36]..[297,10302+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[297,10302+37]..[297,10302+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[297,10302+37]..[297,10302+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[297,10302+52]..[297,10302+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[297,10302+53]..[297,10302+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[297,10302+54]..[297,10302+69]),None)
                                          expression (src/ppx.ml[297,10302+72]..[297,10302+73])
                                            Pexp_ident "i" (src/ppx.ml[297,10302+72]..[297,10302+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[297,10302+77]..[297,10302+83])
                          Pexp_ident "result" (src/ppx.ml[297,10302+77]..[297,10302+83])
                    ]
                  expression (src/ppx.ml[298,10387+2]..[298,10387+4])
                    Pexp_construct "()" (src/ppx.ml[298,10387+2]..[298,10387+4])
                    None
              core_type (src/ppx.ml[295,10238+21]..[295,10238+25])
                Ptyp_constr "unit" (src/ppx.ml[295,10238+21]..[295,10238+25])
                []
    ]
  structure_item (src/ppx.ml[300,10409+0]..[303,10533+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10409+4]..[300,10409+13])
          Ppat_var "transform" (src/ppx.ml[300,10409+4]..[300,10409+13])
        expression (src/ppx.ml[300,10409+14]..[303,10533+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[300,10409+14]..[300,10409+15])
            Ppat_var "x" (src/ppx.ml[300,10409+14]..[300,10409+15])
          expression (src/ppx.ml[301,10464+2]..[303,10533+3])
            Pexp_sequence
            expression (src/ppx.ml[301,10464+2]..[301,10464+48])
              Pexp_apply
              expression (src/ppx.ml[301,10464+3]..[301,10464+16])
                Pexp_ident "print_endline" (src/ppx.ml[301,10464+3]..[301,10464+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[301,10464+17]..[301,10464+47])
                    Pexp_apply
                    expression (src/ppx.ml[301,10464+18]..[301,10464+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[301,10464+18]..[301,10464+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[301,10464+33]..[301,10464+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[301,10464+34]..[301,10464+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[301,10464+35]..[301,10464+42]),None)
                            expression (src/ppx.ml[301,10464+44]..[301,10464+45])
                              Pexp_ident "x" (src/ppx.ml[301,10464+44]..[301,10464+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[302,10514+2]..[303,10533+3])
              Pexp_sequence
              expression (src/ppx.ml[302,10514+2]..[302,10514+17])
                Pexp_apply
                expression (src/ppx.ml[302,10514+3]..[302,10514+8])
                  Pexp_ident "debug" (src/ppx.ml[302,10514+3]..[302,10514+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[302,10514+9]..[302,10514+14])
                      Pexp_ident "proc1" (src/ppx.ml[302,10514+9]..[302,10514+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[302,10514+15]..[302,10514+16])
                      Pexp_ident "x" (src/ppx.ml[302,10514+15]..[302,10514+16])
                ]
              expression (src/ppx.ml[303,10533+2]..[303,10533+3])
                Pexp_ident "x" (src/ppx.ml[303,10533+2]..[303,10533+3])
    ]
  structure_item (src/ppx.ml[305,10540+1]..[305,10540+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[305,10540+5]..[305,10540+7])
          Ppat_construct "()" (src/ppx.ml[305,10540+5]..[305,10540+7])
          None
        expression (src/ppx.ml[305,10540+10]..[305,10540+69])
          Pexp_apply
          expression (src/ppx.ml[305,10540+10]..[305,10540+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[305,10540+10]..[305,10540+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[305,10540+47]..[305,10540+56])
                Pexp_ident "transform" (src/ppx.ml[305,10540+47]..[305,10540+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[305,10540+57]..[305,10540+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[305,10540+58]..[305,10540+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[149,4686+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..src/ppx.ml[69,1879+27])
          Tpat_var "process_record_kind/1437"
        expression (src/ppx.ml[69,1879+27]..src/ppx.ml[83,2363+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+27]..src/ppx.ml[69,1879+30])
                Tpat_var "x/1442"
              expression (src/ppx.ml[70,1912+2]..src/ppx.ml[83,2363+47])
                Texp_match
                expression (src/ppx.ml[70,1912+8]..src/ppx.ml[70,1912+9])
                  Texp_ident "x/1442"
                [
                  <case>
                    pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                      Tpat_value
                      pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[72,1933+5]..src/ppx.ml[72,1933+13])
                              Tpat_var "pld_name/1443"
                          "pld_mutable"
                            pattern (src/ppx.ml[73,1966+5]..src/ppx.ml[73,1966+16])
                              Tpat_var "pld_mutable/1444"
                          "pld_type"
                            pattern (src/ppx.ml[74,2004+5]..src/ppx.ml[74,2004+13])
                              Tpat_var "pld_type/1445"
                          "pld_loc"
                            pattern (src/ppx.ml[75,2036+5]..src/ppx.ml[75,2036+12])
                              Tpat_var "pld_loc/1446"
                          "pld_attributes"
                            pattern (src/ppx.ml[76,2068+5]..src/ppx.ml[76,2068+19])
                              Tpat_var "pld_attributes/1447"
                        ]
                    expression (src/ppx.ml[78,2116+4]..src/ppx.ml[83,2363+47])
                      Texp_apply
                      expression (src/ppx.ml[78,2116+5]..src/ppx.ml[78,2116+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[78,2116+19]..src/ppx.ml[83,2363+46])
                            Texp_apply
                            expression (src/ppx.ml[78,2116+20]..src/ppx.ml[78,2116+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[78,2116+35]..src/ppx.ml[83,2363+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[78,2116+36]..src/ppx.ml[78,2116+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..src/ppx.ml[78,2116+56]),None)
                                    expression (src/ppx.ml[79,2177+36]..src/ppx.ml[79,2177+44])
                                      Texp_ident "pld_name/1443"
                                    expression (src/ppx.ml[80,2223+36]..src/ppx.ml[80,2223+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[80,2223+37]..src/ppx.ml[80,2223+44]),None)
                                    expression (src/ppx.ml[81,2270+36]..src/ppx.ml[81,2270+47])
                                      Texp_ident "pld_mutable/1444"
                                    expression (src/ppx.ml[82,2319+36]..src/ppx.ml[82,2319+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[82,2319+37]..src/ppx.ml[82,2319+41]),None)
                                    expression (src/ppx.ml[83,2363+36]..src/ppx.ml[83,2363+44])
                                      Texp_ident "pld_type/1445"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..src/ppx.ml[85,2415+22])
          Tpat_var "process_core_type_desc/1438"
        expression (src/ppx.ml[85,2415+23]..src/ppx.ml[123,4004+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2415+23]..src/ppx.ml[85,2415+24])
                Tpat_var "x/1448"
              expression (src/ppx.ml[86,2442+2]..src/ppx.ml[123,4004+65])
                Texp_match
                expression (src/ppx.ml[86,2442+8]..src/ppx.ml[86,2442+9])
                  Texp_ident "x/1448"
                [
                  <case>
                    pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+21])
                      Tpat_value
                      pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[87,2457+17]..src/ppx.ml[87,2457+18])
                            Tpat_var "a/1449"
                          pattern (src/ppx.ml[87,2457+19]..src/ppx.ml[87,2457+20])
                            Tpat_var "b/1450"
                        ]
                        None
                    expression (src/ppx.ml[89,2528+4]..src/ppx.ml[90,2560+79])
                      Texp_sequence
                      expression (src/ppx.ml[89,2528+4]..src/ppx.ml[89,2528+30])
                        Texp_apply
                        expression (src/ppx.ml[89,2528+5]..src/ppx.ml[89,2528+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[89,2528+28]..src/ppx.ml[89,2528+29])
                              Texp_ident "b/1450"
                        ]
                      expression (src/ppx.ml[90,2560+4]..src/ppx.ml[90,2560+79])
                        Texp_apply
                        expression (src/ppx.ml[90,2560+5]..src/ppx.ml[90,2560+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[90,2560+19]..src/ppx.ml[90,2560+78])
                              Texp_apply
                              expression (src/ppx.ml[90,2560+20]..src/ppx.ml[90,2560+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[90,2560+35]..src/ppx.ml[90,2560+77])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[90,2560+36]..src/ppx.ml[90,2560+56])
                                        Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[90,2560+37]..src/ppx.ml[90,2560+55]),None)
                                      expression (src/ppx.ml[90,2560+58]..src/ppx.ml[90,2560+62])
                                        Texp_constant Const_string("id",(src/ppx.ml[90,2560+59]..src/ppx.ml[90,2560+61]),None)
                                      expression (src/ppx.ml[90,2560+63]..src/ppx.ml[90,2560+64])
                                        Texp_ident "a/1449"
                                      expression (src/ppx.ml[90,2560+66]..src/ppx.ml[90,2560+73])
                                        Texp_constant Const_string("types",(src/ppx.ml[90,2560+67]..src/ppx.ml[90,2560+72]),None)
                                      expression (src/ppx.ml[90,2560+74]..src/ppx.ml[90,2560+75])
                                        Texp_ident "b/1450"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[92,2645+4]..src/ppx.ml[92,2645+16])
                      Tpat_value
                      pattern (src/ppx.ml[92,2645+4]..src/ppx.ml[92,2645+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[92,2645+15]..src/ppx.ml[92,2645+16])
                            Tpat_var "a/1451"
                        ]
                        None
                    expression (src/ppx.ml[94,2693+4]..src/ppx.ml[94,2693+59])
                      Texp_apply
                      expression (src/ppx.ml[94,2693+5]..src/ppx.ml[94,2693+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[94,2693+19]..src/ppx.ml[94,2693+58])
                            Texp_apply
                            expression (src/ppx.ml[94,2693+20]..src/ppx.ml[94,2693+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[94,2693+35]..src/ppx.ml[94,2693+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[94,2693+37]..src/ppx.ml[94,2693+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[97,2772+4]..src/ppx.ml[97,2772+12])
                      Tpat_value
                      pattern (src/ppx.ml[97,2772+4]..src/ppx.ml[97,2772+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[97,2772+17]..src/ppx.ml[97,2772+69])
                      Texp_apply
                      expression (src/ppx.ml[97,2772+18]..src/ppx.ml[97,2772+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[97,2772+32]..src/ppx.ml[97,2772+68])
                            Texp_apply
                            expression (src/ppx.ml[97,2772+33]..src/ppx.ml[97,2772+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[97,2772+48]..src/ppx.ml[97,2772+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[97,2772+50]..src/ppx.ml[97,2772+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[98,2842+4]..src/ppx.ml[98,2842+17])
                      Tpat_value
                      pattern (src/ppx.ml[98,2842+4]..src/ppx.ml[98,2842+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[98,2842+13]..src/ppx.ml[98,2842+17])
                            Tpat_var "name/1452"
                        ]
                        None
                    expression (src/ppx.ml[98,2842+20]..src/ppx.ml[98,2842+80])
                      Texp_apply
                      expression (src/ppx.ml[98,2842+21]..src/ppx.ml[98,2842+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[98,2842+35]..src/ppx.ml[98,2842+79])
                            Texp_apply
                            expression (src/ppx.ml[98,2842+36]..src/ppx.ml[98,2842+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[98,2842+51]..src/ppx.ml[98,2842+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[98,2842+52]..src/ppx.ml[98,2842+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[98,2842+53]..src/ppx.ml[98,2842+68]),None)
                                    expression (src/ppx.ml[98,2842+73]..src/ppx.ml[98,2842+77])
                                      Texp_ident "name/1452"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[99,2923+4]..src/ppx.ml[99,2923+51])
                      Tpat_value
                      pattern (src/ppx.ml[99,2923+4]..src/ppx.ml[99,2923+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[99,2923+16]..src/ppx.ml[99,2923+25])
                            Tpat_var "arg_label/1453"
                          pattern (src/ppx.ml[99,2923+28]..src/ppx.ml[99,2923+37])
                            Tpat_var "core_type/1454"
                          pattern (src/ppx.ml[99,2923+40]..src/ppx.ml[99,2923+50])
                            Tpat_var "core_type2/1455"
                        ]
                        None
                    expression (src/ppx.ml[100,2978+4]..src/ppx.ml[100,2978+61])
                      Texp_apply
                      expression (src/ppx.ml[100,2978+5]..src/ppx.ml[100,2978+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[100,2978+19]..src/ppx.ml[100,2978+60])
                            Texp_apply
                            expression (src/ppx.ml[100,2978+20]..src/ppx.ml[100,2978+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[100,2978+35]..src/ppx.ml[100,2978+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[100,2978+37]..src/ppx.ml[100,2978+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[102,3041+4]..src/ppx.ml[102,3041+21])
                      Tpat_value
                      pattern (src/ppx.ml[102,3041+4]..src/ppx.ml[102,3041+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[102,3041+17]..src/ppx.ml[102,3041+18])
                            Tpat_var "a/1456"
                          pattern (src/ppx.ml[102,3041+19]..src/ppx.ml[102,3041+20])
                            Tpat_var "b/1457"
                        ]
                        None
                    expression (src/ppx.ml[104,3110+4]..src/ppx.ml[104,3110+60])
                      Texp_apply
                      expression (src/ppx.ml[104,3110+5]..src/ppx.ml[104,3110+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[104,3110+19]..src/ppx.ml[104,3110+59])
                            Texp_apply
                            expression (src/ppx.ml[104,3110+20]..src/ppx.ml[104,3110+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[104,3110+35]..src/ppx.ml[104,3110+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[104,3110+37]..src/ppx.ml[104,3110+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[105,3171+4]..src/ppx.ml[105,3171+20])
                      Tpat_value
                      pattern (src/ppx.ml[105,3171+4]..src/ppx.ml[105,3171+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[105,3171+16]..src/ppx.ml[105,3171+17])
                            Tpat_var "a/1458"
                          pattern (src/ppx.ml[105,3171+18]..src/ppx.ml[105,3171+19])
                            Tpat_var "b/1459"
                        ]
                        None
                    expression (src/ppx.ml[107,3241+4]..src/ppx.ml[107,3241+60])
                      Texp_apply
                      expression (src/ppx.ml[107,3241+5]..src/ppx.ml[107,3241+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[107,3241+19]..src/ppx.ml[107,3241+59])
                            Texp_apply
                            expression (src/ppx.ml[107,3241+20]..src/ppx.ml[107,3241+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[107,3241+35]..src/ppx.ml[107,3241+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[107,3241+37]..src/ppx.ml[107,3241+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[108,3302+4]..src/ppx.ml[108,3302+20])
                      Tpat_value
                      pattern (src/ppx.ml[108,3302+4]..src/ppx.ml[108,3302+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[108,3302+16]..src/ppx.ml[108,3302+17])
                            Tpat_var "a/1460"
                          pattern (src/ppx.ml[108,3302+18]..src/ppx.ml[108,3302+19])
                            Tpat_var "b/1461"
                        ]
                        None
                    expression (src/ppx.ml[110,3363+4]..src/ppx.ml[110,3363+60])
                      Texp_apply
                      expression (src/ppx.ml[110,3363+5]..src/ppx.ml[110,3363+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[110,3363+19]..src/ppx.ml[110,3363+59])
                            Texp_apply
                            expression (src/ppx.ml[110,3363+20]..src/ppx.ml[110,3363+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[110,3363+35]..src/ppx.ml[110,3363+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[110,3363+37]..src/ppx.ml[110,3363+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[111,3424+4]..src/ppx.ml[111,3424+24])
                      Tpat_value
                      pattern (src/ppx.ml[111,3424+4]..src/ppx.ml[111,3424+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[111,3424+18]..src/ppx.ml[111,3424+19])
                            Tpat_var "a/1462"
                          pattern (src/ppx.ml[111,3424+20]..src/ppx.ml[111,3424+21])
                            Tpat_var "b/1463"
                          pattern (src/ppx.ml[111,3424+22]..src/ppx.ml[111,3424+23])
                            Tpat_var "c/1464"
                        ]
                        None
                    expression (src/ppx.ml[113,3514+4]..src/ppx.ml[113,3514+60])
                      Texp_apply
                      expression (src/ppx.ml[113,3514+5]..src/ppx.ml[113,3514+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[113,3514+19]..src/ppx.ml[113,3514+59])
                            Texp_apply
                            expression (src/ppx.ml[113,3514+20]..src/ppx.ml[113,3514+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[113,3514+35]..src/ppx.ml[113,3514+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[113,3514+37]..src/ppx.ml[113,3514+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[114,3575+4]..src/ppx.ml[114,3575+19])
                      Tpat_value
                      pattern (src/ppx.ml[114,3575+4]..src/ppx.ml[114,3575+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[114,3575+15]..src/ppx.ml[114,3575+16])
                            Tpat_var "a/1465"
                          pattern (src/ppx.ml[114,3575+17]..src/ppx.ml[114,3575+18])
                            Tpat_var "b/1466"
                        ]
                        None
                    expression (src/ppx.ml[116,3639+4]..src/ppx.ml[116,3639+60])
                      Texp_apply
                      expression (src/ppx.ml[116,3639+5]..src/ppx.ml[116,3639+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[116,3639+19]..src/ppx.ml[116,3639+59])
                            Texp_apply
                            expression (src/ppx.ml[116,3639+20]..src/ppx.ml[116,3639+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[116,3639+35]..src/ppx.ml[116,3639+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[116,3639+37]..src/ppx.ml[116,3639+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[117,3700+4]..src/ppx.ml[117,3700+18])
                      Tpat_value
                      pattern (src/ppx.ml[117,3700+4]..src/ppx.ml[117,3700+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[117,3700+17]..src/ppx.ml[117,3700+18])
                            Tpat_var "a/1467"
                        ]
                        None
                    expression (src/ppx.ml[119,3748+4]..src/ppx.ml[119,3748+62])
                      Texp_apply
                      expression (src/ppx.ml[119,3748+5]..src/ppx.ml[119,3748+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3748+19]..src/ppx.ml[119,3748+61])
                            Texp_apply
                            expression (src/ppx.ml[119,3748+20]..src/ppx.ml[119,3748+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3748+35]..src/ppx.ml[119,3748+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[119,3748+36]..src/ppx.ml[119,3748+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[119,3748+37]..src/ppx.ml[119,3748+55]),None)
                                    expression (src/ppx.ml[119,3748+57]..src/ppx.ml[119,3748+58])
                                      Texp_ident "a/1467"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[122,3956+4]..src/ppx.ml[122,3956+20])
                      Tpat_value
                      pattern (src/ppx.ml[122,3956+4]..src/ppx.ml[122,3956+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[122,3956+19]..src/ppx.ml[122,3956+20])
                            Tpat_var "a/1468"
                        ]
                        None
                    expression (src/ppx.ml[123,4004+4]..src/ppx.ml[123,4004+65])
                      Texp_apply
                      expression (src/ppx.ml[123,4004+5]..src/ppx.ml[123,4004+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[123,4004+19]..src/ppx.ml[123,4004+64])
                            Texp_apply
                            expression (src/ppx.ml[123,4004+20]..src/ppx.ml[123,4004+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[123,4004+35]..src/ppx.ml[123,4004+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[123,4004+36]..src/ppx.ml[123,4004+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[123,4004+37]..src/ppx.ml[123,4004+58]),None)
                                    expression (src/ppx.ml[123,4004+60]..src/ppx.ml[123,4004+61])
                                      Texp_ident "a/1468"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[125,4074+2]..src/ppx.ml[125,4074+26])
          Tpat_var "process_record_kind_list/1439"
        expression (src/ppx.ml[125,4074+26]..src/ppx.ml[131,4211+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[125,4074+26]..src/ppx.ml[125,4074+29])
                Tpat_var "x/1791"
              expression (src/ppx.ml[126,4106+2]..src/ppx.ml[131,4211+6])
                Texp_match
                expression (src/ppx.ml[126,4106+8]..src/ppx.ml[126,4106+9])
                  Texp_ident "x/1791"
                [
                  <case>
                    pattern (src/ppx.ml[127,4121+4]..src/ppx.ml[127,4121+6])
                      Tpat_value
                      pattern (src/ppx.ml[127,4121+4]..src/ppx.ml[127,4121+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[127,4121+10]..src/ppx.ml[127,4121+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[128,4134+4]..src/ppx.ml[128,4134+10])
                      Tpat_value
                      pattern (src/ppx.ml[128,4134+4]..src/ppx.ml[128,4134+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[128,4134+4]..src/ppx.ml[128,4134+5])
                            Tpat_var "h/1792"
                          pattern (src/ppx.ml[128,4134+9]..src/ppx.ml[128,4134+10])
                            Tpat_var "t/1793"
                        ]
                        None
                    expression (src/ppx.ml[129,4148+4]..src/ppx.ml[131,4211+6])
                      Texp_sequence
                      expression (src/ppx.ml[129,4148+4]..src/ppx.ml[129,4148+27])
                        Texp_apply
                        expression (src/ppx.ml[129,4148+5]..src/ppx.ml[129,4148+24])
                          Texp_ident "process_record_kind/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[129,4148+25]..src/ppx.ml[129,4148+26])
                              Texp_ident "h/1792"
                        ]
                      expression (src/ppx.ml[130,4177+4]..src/ppx.ml[131,4211+6])
                        Texp_sequence
                        expression (src/ppx.ml[130,4177+4]..src/ppx.ml[130,4177+32])
                          Texp_apply
                          expression (src/ppx.ml[130,4177+5]..src/ppx.ml[130,4177+29])
                            Texp_ident "process_record_kind_list/1439"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[130,4177+30]..src/ppx.ml[130,4177+31])
                                Texp_ident "t/1793"
                          ]
                        expression (src/ppx.ml[131,4211+4]..src/ppx.ml[131,4211+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[133,4222+0]..src/ppx.ml[133,4222+17])
          Tpat_var "process_core_type/1440"
        expression (src/ppx.ml[133,4222+17]..src/ppx.ml[143,4489+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[133,4222+17]..src/ppx.ml[133,4222+20])
                Tpat_var "x/1794"
              expression (src/ppx.ml[134,4245+2]..src/ppx.ml[143,4489+80])
                Texp_match
                expression (src/ppx.ml[134,4245+8]..src/ppx.ml[134,4245+9])
                  Texp_ident "x/1794"
                [
                  <case>
                    pattern (src/ppx.ml[135,4261+4]..src/ppx.ml[140,4422+5])
                      Tpat_value
                      pattern (src/ppx.ml[135,4261+4]..src/ppx.ml[140,4422+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[136,4267+6]..src/ppx.ml[136,4267+15])
                              Tpat_var "ptyp_desc/1795"
                          "ptyp_loc"
                            pattern (src/ppx.ml[137,4306+5]..src/ppx.ml[137,4306+13])
                              Tpat_var "ptyp_loc/1796"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[138,4339+5]..src/ppx.ml[138,4339+19])
                              Tpat_var "ptyp_loc_stack/1797"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[139,4382+5]..src/ppx.ml[139,4382+20])
                              Tpat_var "ptyp_attributes/1798"
                        ]
                    expression (src/ppx.ml[141,4430+4]..src/ppx.ml[143,4489+80])
                      Texp_sequence
                      expression (src/ppx.ml[141,4430+4]..src/ppx.ml[141,4430+38])
                        Texp_apply
                        expression (src/ppx.ml[141,4430+5]..src/ppx.ml[141,4430+27])
                          Texp_ident "process_core_type_desc/1438"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[141,4430+28]..src/ppx.ml[141,4430+37])
                              Texp_ident "ptyp_desc/1795"
                        ]
                      expression (src/ppx.ml[143,4489+4]..src/ppx.ml[143,4489+80])
                        Texp_apply
                        expression (src/ppx.ml[143,4489+5]..src/ppx.ml[143,4489+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[143,4489+19]..src/ppx.ml[143,4489+79])
                              Texp_apply
                              expression (src/ppx.ml[143,4489+20]..src/ppx.ml[143,4489+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[143,4489+35]..src/ppx.ml[143,4489+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[143,4489+36]..src/ppx.ml[143,4489+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[143,4489+37]..src/ppx.ml[143,4489+63]),None)
                                      expression (src/ppx.ml[143,4489+68]..src/ppx.ml[143,4489+77])
                                        Texp_ident "ptyp_desc/1795"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[144,4570+4]..src/ppx.ml[144,4570+26])
          Tpat_var "process_core_type_list/1441"
        expression (src/ppx.ml[144,4570+26]..src/ppx.ml[149,4686+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[144,4570+27]..src/ppx.ml[144,4570+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[144,4570+29]..src/ppx.ml[144,4570+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[144,4570+29]..src/ppx.ml[144,4570+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1799"
                pattern (src/ppx.ml[144,4570+27]..src/ppx.ml[144,4570+28])
                  Tpat_any
              expression (src/ppx.ml[145,4617+2]..src/ppx.ml[149,4686+29])
                Texp_match
                expression (src/ppx.ml[145,4617+8]..src/ppx.ml[145,4617+9])
                  Texp_ident "x/1799"
                [
                  <case>
                    pattern (src/ppx.ml[146,4632+4]..src/ppx.ml[146,4632+6])
                      Tpat_value
                      pattern (src/ppx.ml[146,4632+4]..src/ppx.ml[146,4632+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[146,4632+10]..src/ppx.ml[146,4632+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[147,4645+4]..src/ppx.ml[147,4645+10])
                      Tpat_value
                      pattern (src/ppx.ml[147,4645+4]..src/ppx.ml[147,4645+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[147,4645+4]..src/ppx.ml[147,4645+5])
                            Tpat_var "h/1800"
                          pattern (src/ppx.ml[147,4645+9]..src/ppx.ml[147,4645+10])
                            Tpat_var "t/1801"
                        ]
                        None
                    expression (src/ppx.ml[148,4659+4]..src/ppx.ml[149,4686+29])
                      Texp_sequence
                      expression (src/ppx.ml[148,4659+4]..src/ppx.ml[148,4659+25])
                        Texp_apply
                        expression (src/ppx.ml[148,4659+4]..src/ppx.ml[148,4659+21])
                          Texp_ident "process_core_type/1440"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[148,4659+22]..src/ppx.ml[148,4659+25])
                              Texp_ident "h/1800"
                        ]
                      expression (src/ppx.ml[149,4686+4]..src/ppx.ml[149,4686+29])
                        Texp_apply
                        expression (src/ppx.ml[149,4686+4]..src/ppx.ml[149,4686+26])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[149,4686+26]..src/ppx.ml[149,4686+29])
                              Texp_ident "t/1801"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[156,4730+0]..src/ppx.ml[163,4929+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[156,4730+4]..src/ppx.ml[156,4730+31])
          Tpat_var "print_constructor_arguments/1802"
        expression (src/ppx.ml[156,4730+31]..src/ppx.ml[163,4929+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[156,4730+31]..src/ppx.ml[156,4730+34])
                Tpat_var "x/1804"
              expression (src/ppx.ml[157,4767+2]..src/ppx.ml[163,4929+65])
                Texp_match
                expression (src/ppx.ml[157,4767+8]..src/ppx.ml[157,4767+9])
                  Texp_ident "x/1804"
                [
                  <case>
                    pattern (src/ppx.ml[158,4782+4]..src/ppx.ml[158,4782+17])
                      Tpat_value
                      pattern (src/ppx.ml[158,4782+4]..src/ppx.ml[158,4782+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[158,4782+16]..src/ppx.ml[158,4782+17])
                            Tpat_var "a/1805"
                        ]
                        None
                    expression (src/ppx.ml[159,4803+4]..src/ppx.ml[160,4835+64])
                      Texp_sequence
                      expression (src/ppx.ml[159,4803+4]..src/ppx.ml[159,4803+30])
                        Texp_apply
                        expression (src/ppx.ml[159,4803+5]..src/ppx.ml[159,4803+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[159,4803+28]..src/ppx.ml[159,4803+29])
                              Texp_ident "a/1805"
                        ]
                      expression (src/ppx.ml[160,4835+4]..src/ppx.ml[160,4835+64])
                        Texp_apply
                        expression (src/ppx.ml[160,4835+5]..src/ppx.ml[160,4835+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[160,4835+19]..src/ppx.ml[160,4835+63])
                              Texp_apply
                              expression (src/ppx.ml[160,4835+20]..src/ppx.ml[160,4835+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[160,4835+35]..src/ppx.ml[160,4835+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[160,4835+36]..src/ppx.ml[160,4835+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[160,4835+37]..src/ppx.ml[160,4835+55]),None)
                                      expression (src/ppx.ml[160,4835+60]..src/ppx.ml[160,4835+61])
                                        Texp_ident "a/1805"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[162,4907+4]..src/ppx.ml[162,4907+18])
                      Tpat_value
                      pattern (src/ppx.ml[162,4907+4]..src/ppx.ml[162,4907+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[162,4907+17]..src/ppx.ml[162,4907+18])
                            Tpat_var "a/1806"
                        ]
                        None
                    expression (src/ppx.ml[163,4929+4]..src/ppx.ml[163,4929+65])
                      Texp_apply
                      expression (src/ppx.ml[163,4929+5]..src/ppx.ml[163,4929+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[163,4929+19]..src/ppx.ml[163,4929+64])
                            Texp_apply
                            expression (src/ppx.ml[163,4929+20]..src/ppx.ml[163,4929+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[163,4929+35]..src/ppx.ml[163,4929+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[163,4929+36]..src/ppx.ml[163,4929+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[163,4929+37]..src/ppx.ml[163,4929+56]),None)
                                    expression (src/ppx.ml[163,4929+61]..src/ppx.ml[163,4929+62])
                                      Texp_ident "a/1806"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[165,4996+0]..src/ppx.ml[197,5972+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[165,4996+8]..src/ppx.ml[165,4996+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1807"
        expression (src/ppx.ml[165,4996+57]..src/ppx.ml[197,5972+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[165,4996+57]..src/ppx.ml[165,4996+60])
                Tpat_var "x/1808"
              expression (src/ppx.ml[166,5059+2]..src/ppx.ml[197,5972+8])
                Texp_match
                expression (src/ppx.ml[166,5059+8]..src/ppx.ml[166,5059+9])
                  Texp_ident "x/1808"
                [
                  <case>
                    pattern (src/ppx.ml[167,5074+4]..src/ppx.ml[167,5074+6])
                      Tpat_value
                      pattern (src/ppx.ml[167,5074+4]..src/ppx.ml[167,5074+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[167,5074+10]..src/ppx.ml[167,5074+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[168,5087+4]..src/ppx.ml[168,5087+10])
                      Tpat_value
                      pattern (src/ppx.ml[168,5087+4]..src/ppx.ml[168,5087+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[168,5087+4]..src/ppx.ml[168,5087+5])
                            Tpat_var "h/1809"
                          pattern (src/ppx.ml[168,5087+9]..src/ppx.ml[168,5087+10])
                            Tpat_var "t/1810"
                        ]
                        None
                    expression (src/ppx.ml[170,5166+4]..src/ppx.ml[197,5972+8])
                      Texp_match
                      expression (src/ppx.ml[170,5166+10]..src/ppx.ml[170,5166+11])
                        Texp_ident "h/1809"
                      [
                        <case>
                          pattern (src/ppx.ml[171,5183+5]..src/ppx.ml[178,5421+5])
                            Tpat_value
                            pattern (src/ppx.ml[171,5183+5]..src/ppx.ml[178,5421+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[172,5190+6]..src/ppx.ml[172,5190+14])
                                    Tpat_var "pcd_name/1811"
                                "pcd_vars"
                                  pattern (src/ppx.ml[173,5224+6]..src/ppx.ml[173,5224+14])
                                    Tpat_var "pcd_vars/1812"
                                "pcd_args"
                                  pattern (src/ppx.ml[174,5263+6]..src/ppx.ml[174,5263+14])
                                    Tpat_var "pcd_args/1813"
                                "pcd_res"
                                  pattern (src/ppx.ml[175,5308+6]..src/ppx.ml[175,5308+13])
                                    Tpat_var "pcd_res/1814"
                                "pcd_loc"
                                  pattern (src/ppx.ml[176,5347+6]..src/ppx.ml[176,5347+13])
                                    Tpat_var "pcd_loc/1815"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[177,5380+6]..src/ppx.ml[177,5380+20])
                                    Tpat_var "pcd_attributes/1816"
                              ]
                          expression (src/ppx.ml[181,5503+6]..src/ppx.ml[197,5972+8])
                            Texp_sequence
                            expression (src/ppx.ml[181,5503+6]..src/ppx.ml[181,5503+43])
                              Texp_apply
                              expression (src/ppx.ml[181,5503+6]..src/ppx.ml[181,5503+33])
                                Texp_ident "print_constructor_arguments/1802"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[181,5503+33]..src/ppx.ml[181,5503+43])
                                    Texp_ident "pcd_args/1813"
                              ]
                            expression (src/ppx.ml[182,5548+6]..src/ppx.ml[197,5972+8])
                              Texp_sequence
                              expression (src/ppx.ml[182,5548+6]..src/ppx.ml[195,5893+16])
                                Texp_apply
                                expression (src/ppx.ml[182,5548+7]..src/ppx.ml[182,5548+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[182,5548+21]..src/ppx.ml[195,5893+15])
                                      Texp_apply
                                      expression (src/ppx.ml[182,5548+22]..src/ppx.ml[182,5548+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[182,5548+37]..src/ppx.ml[195,5893+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[183,5587+11]..src/ppx.ml[183,5587+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[183,5587+12]..src/ppx.ml[183,5587+36]),None)
                                              expression (src/ppx.ml[184,5626+15]..src/ppx.ml[184,5626+23])
                                                Texp_ident "pcd_name/1811"
                                              expression (src/ppx.ml[185,5651+15]..src/ppx.ml[185,5651+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[185,5651+16]..src/ppx.ml[185,5651+20]),None)
                                              expression (src/ppx.ml[186,5674+15]..src/ppx.ml[186,5674+23])
                                                Texp_ident "pcd_vars/1812"
                                              expression (src/ppx.ml[187,5699+15]..src/ppx.ml[187,5699+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[187,5699+16]..src/ppx.ml[187,5699+20]),None)
                                              expression (src/ppx.ml[188,5722+15]..src/ppx.ml[188,5722+23])
                                                Texp_ident "pcd_args/1813"
                                              expression (src/ppx.ml[189,5747+15]..src/ppx.ml[189,5747+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[189,5747+16]..src/ppx.ml[189,5747+19]),None)
                                              expression (src/ppx.ml[190,5769+15]..src/ppx.ml[190,5769+22])
                                                Texp_ident "pcd_res/1814"
                                              expression (src/ppx.ml[191,5793+15]..src/ppx.ml[191,5793+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[191,5793+16]..src/ppx.ml[191,5793+19]),None)
                                              expression (src/ppx.ml[192,5815+15]..src/ppx.ml[192,5815+22])
                                                Texp_ident "pcd_loc/1815"
                                              expression (src/ppx.ml[193,5839+15]..src/ppx.ml[193,5839+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[193,5839+16]..src/ppx.ml[193,5839+21]),None)
                                              expression (src/ppx.ml[194,5863+15]..src/ppx.ml[194,5863+29])
                                                Texp_ident "pcd_attributes/1816"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[196,5911+6]..src/ppx.ml[197,5972+8])
                                Texp_sequence
                                expression (src/ppx.ml[196,5911+6]..src/ppx.ml[196,5911+59])
                                  Texp_apply
                                  expression (src/ppx.ml[196,5911+7]..src/ppx.ml[196,5911+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1807"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[196,5911+57]..src/ppx.ml[196,5911+58])
                                        Texp_ident "t/1810"
                                  ]
                                expression (src/ppx.ml[197,5972+6]..src/ppx.ml[197,5972+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[199,5984+0]..src/ppx.ml[210,6381+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[199,5984+4]..src/ppx.ml[199,5984+16])
          Tpat_var "process_kind/1817"
        expression (src/ppx.ml[199,5984+16]..src/ppx.ml[210,6381+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[199,5984+16]..src/ppx.ml[199,5984+19])
                Tpat_var "x/1819"
              expression (src/ppx.ml[200,6006+2]..src/ppx.ml[210,6381+77])
                Texp_match
                expression (src/ppx.ml[200,6006+8]..src/ppx.ml[200,6006+9])
                  Texp_ident "x/1819"
                [
                  <case>
                    pattern (src/ppx.ml[202,6043+4]..src/ppx.ml[202,6043+18])
                      Tpat_value
                      pattern (src/ppx.ml[202,6043+4]..src/ppx.ml[202,6043+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[202,6043+23]..src/ppx.ml[202,6043+81])
                      Texp_apply
                      expression (src/ppx.ml[202,6043+24]..src/ppx.ml[202,6043+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[202,6043+38]..src/ppx.ml[202,6043+80])
                            Texp_apply
                            expression (src/ppx.ml[202,6043+39]..src/ppx.ml[202,6043+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[202,6043+54]..src/ppx.ml[202,6043+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[202,6043+56]..src/ppx.ml[202,6043+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[203,6125+4]..src/ppx.ml[203,6125+19])
                      Tpat_value
                      pattern (src/ppx.ml[203,6125+4]..src/ppx.ml[203,6125+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[203,6125+18]..src/ppx.ml[203,6125+19])
                            Tpat_var "a/1820"
                        ]
                        None
                    expression (src/ppx.ml[204,6148+4]..src/ppx.ml[205,6207+65])
                      Texp_sequence
                      expression (src/ppx.ml[204,6148+4]..src/ppx.ml[204,6148+57])
                        Texp_apply
                        expression (src/ppx.ml[204,6148+5]..src/ppx.ml[204,6148+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1807"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[204,6148+55]..src/ppx.ml[204,6148+56])
                              Texp_ident "a/1820"
                        ]
                      expression (src/ppx.ml[205,6207+4]..src/ppx.ml[205,6207+65])
                        Texp_apply
                        expression (src/ppx.ml[205,6207+5]..src/ppx.ml[205,6207+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[205,6207+19]..src/ppx.ml[205,6207+64])
                              Texp_apply
                              expression (src/ppx.ml[205,6207+20]..src/ppx.ml[205,6207+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[205,6207+35]..src/ppx.ml[205,6207+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[205,6207+36]..src/ppx.ml[205,6207+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[205,6207+37]..src/ppx.ml[205,6207+57]),None)
                                      expression (src/ppx.ml[205,6207+61]..src/ppx.ml[205,6207+62])
                                        Texp_ident "a/1820"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[208,6320+5]..src/ppx.ml[208,6320+19])
                      Tpat_value
                      pattern (src/ppx.ml[208,6320+5]..src/ppx.ml[208,6320+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[208,6320+18]..src/ppx.ml[208,6320+19])
                            Tpat_var "a/1821"
                        ]
                        None
                    expression (src/ppx.ml[209,6348+5]..src/ppx.ml[209,6348+32])
                      Texp_apply
                      expression (src/ppx.ml[209,6348+5]..src/ppx.ml[209,6348+29])
                        Texp_ident "process_record_kind_list/1439"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[209,6348+29]..src/ppx.ml[209,6348+32])
                            Texp_ident "a/1821"
                      ]
                  <case>
                    pattern (src/ppx.ml[210,6381+5]..src/ppx.ml[210,6381+15])
                      Tpat_value
                      pattern (src/ppx.ml[210,6381+5]..src/ppx.ml[210,6381+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[210,6381+19]..src/ppx.ml[210,6381+77])
                      Texp_apply
                      expression (src/ppx.ml[210,6381+20]..src/ppx.ml[210,6381+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[210,6381+34]..src/ppx.ml[210,6381+76])
                            Texp_apply
                            expression (src/ppx.ml[210,6381+35]..src/ppx.ml[210,6381+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[210,6381+50]..src/ppx.ml[210,6381+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[210,6381+52]..src/ppx.ml[210,6381+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[212,6460+0]..src/ppx.ml[233,7466+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[212,6460+4]..src/ppx.ml[212,6460+19])
          Tpat_var "print_type_decl/1822"
        expression (src/ppx.ml[212,6460+19]..src/ppx.ml[233,7466+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[212,6460+19]..src/ppx.ml[212,6460+22])
                Tpat_var "x/1824"
              expression (src/ppx.ml[213,6485+2]..src/ppx.ml[233,7466+38])
                Texp_match
                expression (src/ppx.ml[213,6485+8]..src/ppx.ml[213,6485+9])
                  Texp_ident "x/1824"
                [
                  <case>
                    pattern (src/ppx.ml[214,6500+4]..src/ppx.ml[223,6881+5])
                      Tpat_value
                      pattern (src/ppx.ml[214,6500+4]..src/ppx.ml[223,6881+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[215,6506+6]..src/ppx.ml[215,6506+16])
                              Tpat_var "ptype_name/1825"
                          "ptype_params"
                            pattern (src/ppx.ml[216,6543+6]..src/ppx.ml[216,6543+18])
                              Tpat_var "ptype_params/1826"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[217,6615+6]..src/ppx.ml[217,6615+17])
                              Tpat_var "ptype_cstrs/1827"
                          "ptype_kind"
                            pattern (src/ppx.ml[218,6684+6]..src/ppx.ml[218,6684+16])
                              Tpat_var "ptype_kind/1828"
                          "ptype_private"
                            pattern (src/ppx.ml[219,6721+6]..src/ppx.ml[219,6721+19])
                              Tpat_var "ptype_private/1829"
                          "ptype_manifest"
                            pattern (src/ppx.ml[220,6762+6]..src/ppx.ml[220,6762+20])
                              Tpat_var "ptype_manifest/1830"
                          "ptype_attributes"
                            pattern (src/ppx.ml[221,6809+6]..src/ppx.ml[221,6809+22])
                              Tpat_var "ptype_attributes/1831"
                          "ptype_loc"
                            pattern (src/ppx.ml[222,6850+6]..src/ppx.ml[222,6850+15])
                              Tpat_var "ptype_loc/1832"
                        ]
                    expression (src/ppx.ml[224,6890+4]..src/ppx.ml[233,7466+38])
                      Texp_sequence
                      expression (src/ppx.ml[224,6890+4]..src/ppx.ml[224,6890+69])
                        Texp_apply
                        expression (src/ppx.ml[224,6890+5]..src/ppx.ml[224,6890+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[224,6890+19]..src/ppx.ml[224,6890+68])
                              Texp_apply
                              expression (src/ppx.ml[224,6890+20]..src/ppx.ml[224,6890+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[224,6890+35]..src/ppx.ml[224,6890+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[224,6890+36]..src/ppx.ml[224,6890+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[224,6890+37]..src/ppx.ml[224,6890+53]),None)
                                      expression (src/ppx.ml[224,6890+56]..src/ppx.ml[224,6890+66])
                                        Texp_ident "ptype_name/1825"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[225,6961+4]..src/ppx.ml[233,7466+38])
                        Texp_sequence
                        expression (src/ppx.ml[225,6961+4]..src/ppx.ml[225,6961+72])
                          Texp_apply
                          expression (src/ppx.ml[225,6961+5]..src/ppx.ml[225,6961+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[225,6961+19]..src/ppx.ml[225,6961+71])
                                Texp_apply
                                expression (src/ppx.ml[225,6961+20]..src/ppx.ml[225,6961+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[225,6961+35]..src/ppx.ml[225,6961+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[225,6961+36]..src/ppx.ml[225,6961+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[225,6961+37]..src/ppx.ml[225,6961+54]),None)
                                        expression (src/ppx.ml[225,6961+57]..src/ppx.ml[225,6961+69])
                                          Texp_ident "ptype_params/1826"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[226,7035+4]..src/ppx.ml[233,7466+38])
                          Texp_sequence
                          expression (src/ppx.ml[226,7035+4]..src/ppx.ml[226,7035+66])
                            Texp_apply
                            expression (src/ppx.ml[226,7035+5]..src/ppx.ml[226,7035+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[226,7035+19]..src/ppx.ml[226,7035+65])
                                  Texp_apply
                                  expression (src/ppx.ml[226,7035+20]..src/ppx.ml[226,7035+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[226,7035+35]..src/ppx.ml[226,7035+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[226,7035+36]..src/ppx.ml[226,7035+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[226,7035+37]..src/ppx.ml[226,7035+49]),None)
                                          expression (src/ppx.ml[226,7035+52]..src/ppx.ml[226,7035+63])
                                            Texp_ident "ptype_cstrs/1827"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[227,7103+4]..src/ppx.ml[233,7466+38])
                            Texp_sequence
                            expression (src/ppx.ml[227,7103+4]..src/ppx.ml[227,7103+63])
                              Texp_apply
                              expression (src/ppx.ml[227,7103+5]..src/ppx.ml[227,7103+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[227,7103+19]..src/ppx.ml[227,7103+62])
                                    Texp_apply
                                    expression (src/ppx.ml[227,7103+20]..src/ppx.ml[227,7103+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[227,7103+35]..src/ppx.ml[227,7103+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[227,7103+36]..src/ppx.ml[227,7103+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[227,7103+37]..src/ppx.ml[227,7103+48]),None)
                                            expression (src/ppx.ml[227,7103+50]..src/ppx.ml[227,7103+60])
                                              Texp_ident "ptype_kind/1828"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[228,7168+4]..src/ppx.ml[233,7466+38])
                              Texp_sequence
                              expression (src/ppx.ml[228,7168+4]..src/ppx.ml[228,7168+29])
                                Texp_apply
                                expression (src/ppx.ml[228,7168+5]..src/ppx.ml[228,7168+17])
                                  Texp_ident "process_kind/1817"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[228,7168+18]..src/ppx.ml[228,7168+28])
                                      Texp_ident "ptype_kind/1828"
                                ]
                              expression (src/ppx.ml[229,7199+4]..src/ppx.ml[233,7466+38])
                                Texp_apply
                                expression (src/ppx.ml[229,7199+5]..src/ppx.ml[229,7199+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[229,7199+19]..src/ppx.ml[233,7466+37])
                                      Texp_apply
                                      expression (src/ppx.ml[229,7199+20]..src/ppx.ml[229,7199+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[229,7199+35]..src/ppx.ml[233,7466+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[229,7199+36]..src/ppx.ml[229,7199+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[229,7199+37]..src/ppx.ml[229,7199+51]),None)
                                              expression (src/ppx.ml[229,7199+55]..src/ppx.ml[229,7199+68])
                                                Texp_ident "ptype_private/1829"
                                              expression (src/ppx.ml[230,7269+36]..src/ppx.ml[230,7269+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[230,7269+37]..src/ppx.ml[230,7269+51]),None)
                                              expression (src/ppx.ml[230,7269+54]..src/ppx.ml[230,7269+68])
                                                Texp_ident "ptype_manifest/1830"
                                              expression (src/ppx.ml[231,7339+36]..src/ppx.ml[231,7339+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[231,7339+37]..src/ppx.ml[231,7339+47]),None)
                                              expression (src/ppx.ml[231,7339+50]..src/ppx.ml[231,7339+66])
                                                Texp_ident "ptype_attributes/1831"
                                              expression (src/ppx.ml[232,7407+36]..src/ppx.ml[232,7407+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[232,7407+37]..src/ppx.ml[232,7407+46]),None)
                                              expression (src/ppx.ml[232,7407+49]..src/ppx.ml[232,7407+58])
                                                Texp_ident "ptype_loc/1832"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[235,7510+0]..src/ppx.ml[241,7645+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[235,7510+8]..src/ppx.ml[235,7510+30])
          Tpat_var "process_type_decl_list/1833"
        expression (src/ppx.ml[235,7510+30]..src/ppx.ml[241,7645+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[235,7510+30]..src/ppx.ml[235,7510+33])
                Tpat_var "x/1834"
              expression (src/ppx.ml[236,7546+2]..src/ppx.ml[241,7645+6])
                Texp_match
                expression (src/ppx.ml[236,7546+8]..src/ppx.ml[236,7546+9])
                  Texp_ident "x/1834"
                [
                  <case>
                    pattern (src/ppx.ml[237,7561+4]..src/ppx.ml[237,7561+6])
                      Tpat_value
                      pattern (src/ppx.ml[237,7561+4]..src/ppx.ml[237,7561+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[237,7561+10]..src/ppx.ml[237,7561+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[238,7574+4]..src/ppx.ml[238,7574+10])
                      Tpat_value
                      pattern (src/ppx.ml[238,7574+4]..src/ppx.ml[238,7574+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[238,7574+4]..src/ppx.ml[238,7574+5])
                            Tpat_var "h/1835"
                          pattern (src/ppx.ml[238,7574+9]..src/ppx.ml[238,7574+10])
                            Tpat_var "t/1836"
                        ]
                        None
                    expression (src/ppx.ml[239,7588+4]..src/ppx.ml[241,7645+6])
                      Texp_sequence
                      expression (src/ppx.ml[239,7588+4]..src/ppx.ml[239,7588+23])
                        Texp_apply
                        expression (src/ppx.ml[239,7588+5]..src/ppx.ml[239,7588+20])
                          Texp_ident "print_type_decl/1822"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[239,7588+21]..src/ppx.ml[239,7588+22])
                              Texp_ident "h/1835"
                        ]
                      expression (src/ppx.ml[240,7613+4]..src/ppx.ml[241,7645+6])
                        Texp_sequence
                        expression (src/ppx.ml[240,7613+4]..src/ppx.ml[240,7613+30])
                          Texp_apply
                          expression (src/ppx.ml[240,7613+5]..src/ppx.ml[240,7613+27])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[240,7613+28]..src/ppx.ml[240,7613+29])
                                Texp_ident "t/1836"
                          ]
                        expression (src/ppx.ml[241,7645+4]..src/ppx.ml[241,7645+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[243,7657+0]..src/ppx.ml[269,9621+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[243,7657+4]..src/ppx.ml[243,7657+13])
          Tpat_var "printdesc/1837"
        expression (src/ppx.ml[243,7657+13]..src/ppx.ml[269,9621+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[243,7657+14]..src/ppx.ml[243,7657+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[243,7657+17]..src/ppx.ml[243,7657+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1839"
                pattern (src/ppx.ml[243,7657+14]..src/ppx.ml[243,7657+15])
                  Tpat_any
              expression (src/ppx.ml[244,7703+2]..src/ppx.ml[269,9621+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[243,7657+39]..src/ppx.ml[243,7657+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[244,7703+2]..src/ppx.ml[244,7703+68])
                  Texp_apply
                  expression (src/ppx.ml[244,7703+3]..src/ppx.ml[244,7703+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[244,7703+17]..src/ppx.ml[244,7703+67])
                        Texp_apply
                        expression (src/ppx.ml[244,7703+18]..src/ppx.ml[244,7703+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[244,7703+33]..src/ppx.ml[244,7703+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[244,7703+34]..src/ppx.ml[244,7703+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[244,7703+35]..src/ppx.ml[244,7703+61]),None)
                                expression (src/ppx.ml[244,7703+64]..src/ppx.ml[244,7703+65])
                                  Texp_ident "x/1839"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[245,7773+2]..src/ppx.ml[269,9621+128])
                  Texp_match
                  expression (src/ppx.ml[245,7773+8]..src/ppx.ml[245,7773+9])
                    Texp_ident "x/1839"
                  [
                    <case>
                      pattern (src/ppx.ml[246,7788+4]..src/ppx.ml[246,7788+37])
                        Tpat_value
                        pattern (src/ppx.ml[246,7788+4]..src/ppx.ml[246,7788+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[246,7788+15]..src/ppx.ml[246,7788+25])
                              Tpat_var "expression/1840"
                            pattern (src/ppx.ml[246,7788+26]..src/ppx.ml[246,7788+36])
                              Tpat_var "attributes/1841"
                          ]
                          None
                      expression (src/ppx.ml[246,7788+41]..src/ppx.ml[246,7788+117])
                        Texp_apply
                        expression (src/ppx.ml[246,7788+42]..src/ppx.ml[246,7788+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[246,7788+56]..src/ppx.ml[246,7788+116])
                              Texp_apply
                              expression (src/ppx.ml[246,7788+57]..src/ppx.ml[246,7788+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[246,7788+72]..src/ppx.ml[246,7788+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[246,7788+73]..src/ppx.ml[246,7788+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[246,7788+74]..src/ppx.ml[246,7788+90]),None)
                                      expression (src/ppx.ml[246,7788+93]..src/ppx.ml[246,7788+103])
                                        Texp_ident "expression/1840"
                                      expression (src/ppx.ml[246,7788+104]..src/ppx.ml[246,7788+114])
                                        Texp_ident "attributes/1841"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[248,7926+4]..src/ppx.ml[248,7926+45])
                        Tpat_value
                        pattern (src/ppx.ml[248,7926+4]..src/ppx.ml[248,7926+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[248,7926+16]..src/ppx.ml[248,7926+24])
                              Tpat_var "rec_flag/1842"
                            pattern (src/ppx.ml[248,7926+26]..src/ppx.ml[248,7926+44])
                              Tpat_var "value_binding_list/1843"
                          ]
                          None
                      expression (src/ppx.ml[248,7926+48]..src/ppx.ml[249,8060+48])
                        Texp_sequence
                        expression (src/ppx.ml[248,7926+48]..src/ppx.ml[248,7926+132])
                          Texp_apply
                          expression (src/ppx.ml[248,7926+49]..src/ppx.ml[248,7926+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[248,7926+63]..src/ppx.ml[248,7926+131])
                                Texp_apply
                                expression (src/ppx.ml[248,7926+64]..src/ppx.ml[248,7926+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[248,7926+79]..src/ppx.ml[248,7926+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[248,7926+80]..src/ppx.ml[248,7926+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[248,7926+81]..src/ppx.ml[248,7926+98]),None)
                                        expression (src/ppx.ml[248,7926+101]..src/ppx.ml[248,7926+109])
                                          Texp_ident "rec_flag/1842"
                                        expression (src/ppx.ml[248,7926+111]..src/ppx.ml[248,7926+129])
                                          Texp_ident "value_binding_list/1843"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[249,8060+4]..src/ppx.ml[249,8060+48])
                          Texp_apply
                          expression (src/ppx.ml[249,8060+4]..src/ppx.ml[249,8060+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,8060+28]..src/ppx.ml[249,8060+48])
                                Texp_ident "value_binding_list/1843"
                          ]
                    <case>
                      pattern (src/ppx.ml[250,8109+4]..src/ppx.ml[250,8109+36])
                        Tpat_value
                        pattern (src/ppx.ml[250,8109+4]..src/ppx.ml[250,8109+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[250,8109+19]..src/ppx.ml[250,8109+36])
                              Tpat_var "value_description/1844"
                          ]
                          None
                      expression (src/ppx.ml[250,8109+39]..src/ppx.ml[250,8109+116])
                        Texp_apply
                        expression (src/ppx.ml[250,8109+40]..src/ppx.ml[250,8109+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[250,8109+54]..src/ppx.ml[250,8109+115])
                              Texp_apply
                              expression (src/ppx.ml[250,8109+55]..src/ppx.ml[250,8109+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[250,8109+70]..src/ppx.ml[250,8109+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[250,8109+71]..src/ppx.ml[250,8109+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[250,8109+72]..src/ppx.ml[250,8109+93]),None)
                                      expression (src/ppx.ml[250,8109+96]..src/ppx.ml[250,8109+113])
                                        Texp_ident "value_description/1844"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[252,8227+4]..src/ppx.ml[252,8227+47])
                        Tpat_value
                        pattern (src/ppx.ml[252,8227+4]..src/ppx.ml[252,8227+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[252,8227+15]..src/ppx.ml[252,8227+23])
                              Tpat_var "rec_flag/1845"
                            pattern (src/ppx.ml[252,8227+25]..src/ppx.ml[252,8227+46])
                              Tpat_var "type_declaration_list/1846"
                          ]
                          None
                      expression (src/ppx.ml[254,8306+4]..src/ppx.ml[255,8357+90])
                        Texp_sequence
                        expression (src/ppx.ml[254,8306+4]..src/ppx.ml[254,8306+49])
                          Texp_apply
                          expression (src/ppx.ml[254,8306+4]..src/ppx.ml[254,8306+26])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[254,8306+26]..src/ppx.ml[254,8306+49])
                                Texp_ident "type_declaration_list/1846"
                          ]
                        expression (src/ppx.ml[255,8357+4]..src/ppx.ml[255,8357+90])
                          Texp_apply
                          expression (src/ppx.ml[255,8357+5]..src/ppx.ml[255,8357+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[255,8357+19]..src/ppx.ml[255,8357+89])
                                Texp_apply
                                expression (src/ppx.ml[255,8357+20]..src/ppx.ml[255,8357+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[255,8357+35]..src/ppx.ml[255,8357+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[255,8357+36]..src/ppx.ml[255,8357+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[255,8357+37]..src/ppx.ml[255,8357+53]),None)
                                        expression (src/ppx.ml[255,8357+56]..src/ppx.ml[255,8357+64])
                                          Texp_ident "rec_flag/1845"
                                        expression (src/ppx.ml[255,8357+66]..src/ppx.ml[255,8357+87])
                                          Texp_ident "type_declaration_list/1846"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[258,8450+4]..src/ppx.ml[258,8450+31])
                        Tpat_value
                        pattern (src/ppx.ml[258,8450+4]..src/ppx.ml[258,8450+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[258,8450+17]..src/ppx.ml[258,8450+31])
                              Tpat_var "type_extension/1847"
                          ]
                          None
                      expression (src/ppx.ml[258,8450+34]..src/ppx.ml[258,8450+105])
                        Texp_apply
                        expression (src/ppx.ml[258,8450+35]..src/ppx.ml[258,8450+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[258,8450+49]..src/ppx.ml[258,8450+104])
                              Texp_apply
                              expression (src/ppx.ml[258,8450+50]..src/ppx.ml[258,8450+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[258,8450+65]..src/ppx.ml[258,8450+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[258,8450+66]..src/ppx.ml[258,8450+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[258,8450+67]..src/ppx.ml[258,8450+85]),None)
                                      expression (src/ppx.ml[258,8450+88]..src/ppx.ml[258,8450+102])
                                        Texp_ident "type_extension/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[259,8556+4]..src/ppx.ml[259,8556+40])
                        Tpat_value
                        pattern (src/ppx.ml[259,8556+4]..src/ppx.ml[259,8556+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[259,8556+19]..src/ppx.ml[259,8556+40])
                              Tpat_var "extension_constructor/1848"
                          ]
                          None
                      expression (src/ppx.ml[259,8556+43]..src/ppx.ml[259,8556+124])
                        Texp_apply
                        expression (src/ppx.ml[259,8556+44]..src/ppx.ml[259,8556+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[259,8556+58]..src/ppx.ml[259,8556+123])
                              Texp_apply
                              expression (src/ppx.ml[259,8556+59]..src/ppx.ml[259,8556+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[259,8556+74]..src/ppx.ml[259,8556+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[259,8556+75]..src/ppx.ml[259,8556+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[259,8556+76]..src/ppx.ml[259,8556+97]),None)
                                      expression (src/ppx.ml[259,8556+100]..src/ppx.ml[259,8556+121])
                                        Texp_ident "extension_constructor/1848"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[260,8681+4]..src/ppx.ml[260,8681+31])
                        Tpat_value
                        pattern (src/ppx.ml[260,8681+4]..src/ppx.ml[260,8681+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[260,8681+17]..src/ppx.ml[260,8681+31])
                              Tpat_var "module_binding/1849"
                          ]
                          None
                      expression (src/ppx.ml[260,8681+34]..src/ppx.ml[260,8681+104])
                        Texp_apply
                        expression (src/ppx.ml[260,8681+35]..src/ppx.ml[260,8681+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[260,8681+49]..src/ppx.ml[260,8681+103])
                              Texp_apply
                              expression (src/ppx.ml[260,8681+50]..src/ppx.ml[260,8681+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[260,8681+65]..src/ppx.ml[260,8681+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[260,8681+66]..src/ppx.ml[260,8681+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[260,8681+67]..src/ppx.ml[260,8681+85]),None)
                                      expression (src/ppx.ml[260,8681+87]..src/ppx.ml[260,8681+101])
                                        Texp_ident "module_binding/1849"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,8786+4]..src/ppx.ml[261,8786+39])
                        Tpat_value
                        pattern (src/ppx.ml[261,8786+4]..src/ppx.ml[261,8786+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[261,8786+20]..src/ppx.ml[261,8786+39])
                              Tpat_var "module_binding_list/1850"
                          ]
                          None
                      expression (src/ppx.ml[261,8786+42]..src/ppx.ml[261,8786+121])
                        Texp_apply
                        expression (src/ppx.ml[261,8786+43]..src/ppx.ml[261,8786+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[261,8786+57]..src/ppx.ml[261,8786+120])
                              Texp_apply
                              expression (src/ppx.ml[261,8786+58]..src/ppx.ml[261,8786+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[261,8786+73]..src/ppx.ml[261,8786+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[261,8786+74]..src/ppx.ml[261,8786+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[261,8786+75]..src/ppx.ml[261,8786+96]),None)
                                      expression (src/ppx.ml[261,8786+99]..src/ppx.ml[261,8786+118])
                                        Texp_ident "module_binding_list/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[262,8908+4]..src/ppx.ml[262,8908+40])
                        Tpat_value
                        pattern (src/ppx.ml[262,8908+4]..src/ppx.ml[262,8908+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[262,8908+17]..src/ppx.ml[262,8908+40])
                              Tpat_var "module_type_declaration/1851"
                          ]
                          None
                      expression (src/ppx.ml[262,8908+43]..src/ppx.ml[262,8908+124])
                        Texp_apply
                        expression (src/ppx.ml[262,8908+44]..src/ppx.ml[262,8908+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[262,8908+58]..src/ppx.ml[262,8908+123])
                              Texp_apply
                              expression (src/ppx.ml[262,8908+59]..src/ppx.ml[262,8908+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[262,8908+74]..src/ppx.ml[262,8908+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[262,8908+75]..src/ppx.ml[262,8908+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[262,8908+76]..src/ppx.ml[262,8908+95]),None)
                                      expression (src/ppx.ml[262,8908+98]..src/ppx.ml[262,8908+121])
                                        Texp_ident "module_type_declaration/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[264,9050+4]..src/ppx.ml[264,9050+30])
                        Tpat_value
                        pattern (src/ppx.ml[264,9050+4]..src/ppx.ml[264,9050+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[264,9050+14]..src/ppx.ml[264,9050+30])
                              Tpat_var "open_description/1852"
                          ]
                          None
                      expression (src/ppx.ml[264,9050+33]..src/ppx.ml[264,9050+103])
                        Texp_apply
                        expression (src/ppx.ml[264,9050+34]..src/ppx.ml[264,9050+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[264,9050+48]..src/ppx.ml[264,9050+102])
                              Texp_apply
                              expression (src/ppx.ml[264,9050+49]..src/ppx.ml[264,9050+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[264,9050+64]..src/ppx.ml[264,9050+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[264,9050+65]..src/ppx.ml[264,9050+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[264,9050+66]..src/ppx.ml[264,9050+81]),None)
                                      expression (src/ppx.ml[264,9050+84]..src/ppx.ml[264,9050+100])
                                        Texp_ident "open_description/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[265,9154+4]..src/ppx.ml[265,9154+36])
                        Tpat_value
                        pattern (src/ppx.ml[265,9154+4]..src/ppx.ml[265,9154+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[265,9154+15]..src/ppx.ml[265,9154+36])
                              Tpat_var "class_declarations/1853"
                          ]
                          None
                      expression (src/ppx.ml[265,9154+39]..src/ppx.ml[265,9154+113])
                        Texp_apply
                        expression (src/ppx.ml[265,9154+40]..src/ppx.ml[265,9154+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[265,9154+54]..src/ppx.ml[265,9154+112])
                              Texp_apply
                              expression (src/ppx.ml[265,9154+55]..src/ppx.ml[265,9154+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[265,9154+70]..src/ppx.ml[265,9154+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[265,9154+71]..src/ppx.ml[265,9154+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[265,9154+72]..src/ppx.ml[265,9154+89]),None)
                                      expression (src/ppx.ml[265,9154+92]..src/ppx.ml[265,9154+110])
                                        Texp_ident "class_declarations/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[266,9268+4]..src/ppx.ml[266,9268+45])
                        Tpat_value
                        pattern (src/ppx.ml[266,9268+4]..src/ppx.ml[266,9268+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[266,9268+20]..src/ppx.ml[266,9268+45])
                              Tpat_var "class_type_declarations/1854"
                          ]
                          None
                      expression (src/ppx.ml[266,9268+48]..src/ppx.ml[266,9268+132])
                        Texp_apply
                        expression (src/ppx.ml[266,9268+49]..src/ppx.ml[266,9268+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[266,9268+63]..src/ppx.ml[266,9268+131])
                              Texp_apply
                              expression (src/ppx.ml[266,9268+64]..src/ppx.ml[266,9268+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[266,9268+79]..src/ppx.ml[266,9268+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[266,9268+80]..src/ppx.ml[266,9268+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[266,9268+81]..src/ppx.ml[266,9268+103]),None)
                                      expression (src/ppx.ml[266,9268+106]..src/ppx.ml[266,9268+129])
                                        Texp_ident "class_type_declarations/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[267,9401+4]..src/ppx.ml[267,9401+39])
                        Tpat_value
                        pattern (src/ppx.ml[267,9401+4]..src/ppx.ml[267,9401+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[267,9401+18]..src/ppx.ml[267,9401+39])
                              Tpat_var "include_declaration/1855"
                          ]
                          None
                      expression (src/ppx.ml[267,9401+41]..src/ppx.ml[267,9401+117])
                        Texp_apply
                        expression (src/ppx.ml[267,9401+42]..src/ppx.ml[267,9401+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,9401+56]..src/ppx.ml[267,9401+116])
                              Texp_apply
                              expression (src/ppx.ml[267,9401+57]..src/ppx.ml[267,9401+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,9401+72]..src/ppx.ml[267,9401+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,9401+73]..src/ppx.ml[267,9401+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[267,9401+74]..src/ppx.ml[267,9401+93]),None)
                                      expression (src/ppx.ml[267,9401+95]..src/ppx.ml[267,9401+114])
                                        Texp_ident "include_declaration/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[268,9519+4]..src/ppx.ml[268,9519+30])
                        Tpat_value
                        pattern (src/ppx.ml[268,9519+4]..src/ppx.ml[268,9519+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[268,9519+19]..src/ppx.ml[268,9519+30])
                              Tpat_var "attribute/1856"
                          ]
                          None
                      expression (src/ppx.ml[268,9519+32]..src/ppx.ml[268,9519+101])
                        Texp_apply
                        expression (src/ppx.ml[268,9519+33]..src/ppx.ml[268,9519+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,9519+47]..src/ppx.ml[268,9519+100])
                              Texp_apply
                              expression (src/ppx.ml[268,9519+48]..src/ppx.ml[268,9519+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[268,9519+63]..src/ppx.ml[268,9519+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[268,9519+64]..src/ppx.ml[268,9519+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[268,9519+65]..src/ppx.ml[268,9519+86]),None)
                                      expression (src/ppx.ml[268,9519+89]..src/ppx.ml[268,9519+98])
                                        Texp_ident "attribute/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,9621+4]..src/ppx.ml[269,9621+44])
                        Tpat_value
                        pattern (src/ppx.ml[269,9621+4]..src/ppx.ml[269,9621+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[269,9621+21]..src/ppx.ml[269,9621+30])
                              Tpat_var "extension/1857"
                            pattern (src/ppx.ml[269,9621+33]..src/ppx.ml[269,9621+43])
                              Tpat_var "attributes/1858"
                          ]
                          None
                      expression (src/ppx.ml[269,9621+46]..src/ppx.ml[269,9621+128])
                        Texp_apply
                        expression (src/ppx.ml[269,9621+47]..src/ppx.ml[269,9621+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,9621+61]..src/ppx.ml[269,9621+127])
                              Texp_apply
                              expression (src/ppx.ml[269,9621+62]..src/ppx.ml[269,9621+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,9621+77]..src/ppx.ml[269,9621+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,9621+78]..src/ppx.ml[269,9621+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[269,9621+79]..src/ppx.ml[269,9621+100]),None)
                                      expression (src/ppx.ml[269,9621+103]..src/ppx.ml[269,9621+112])
                                        Texp_ident "extension/1857"
                                      expression (src/ppx.ml[269,9621+115]..src/ppx.ml[269,9621+125])
                                        Texp_ident "attributes/1858"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[271,9751+0]..src/ppx.ml[271,9751+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[271,9751+4]..src/ppx.ml[271,9751+7])
          Tpat_var "foo/1859"
        expression (src/ppx.ml[271,9751+10]..src/ppx.ml[271,9751+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[273,9766+0]..src/ppx.ml[281,9985+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[273,9766+4]..src/ppx.ml[273,9766+12])
          Tpat_var "printone/1860"
        expression (src/ppx.ml[273,9766+13]..src/ppx.ml[281,9985+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[273,9766+14]..src/ppx.ml[273,9766+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[273,9766+18]..src/ppx.ml[273,9766+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1861"
                pattern (src/ppx.ml[273,9766+14]..src/ppx.ml[273,9766+15])
                  Tpat_any
              expression (src/ppx.ml[274,9809+2]..src/ppx.ml[281,9985+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[273,9766+36]..src/ppx.ml[273,9766+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[274,9809+8]..src/ppx.ml[274,9809+9])
                  Texp_ident "x/1861"
                [
                  <case>
                    pattern (src/ppx.ml[275,9824+3]..src/ppx.ml[278,9874+3])
                      Tpat_value
                      pattern (src/ppx.ml[275,9824+3]..src/ppx.ml[278,9874+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[276,9829+4]..src/ppx.ml[276,9829+13])
                              Tpat_var "pstr_desc/1862"
                        ]
                    expression (src/ppx.ml[280,9958+4]..src/ppx.ml[281,9985+6])
                      Texp_sequence
                      expression (src/ppx.ml[280,9958+4]..src/ppx.ml[280,9958+25])
                        Texp_apply
                        expression (src/ppx.ml[280,9958+5]..src/ppx.ml[280,9958+14])
                          Texp_ident "printdesc/1837"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[280,9958+15]..src/ppx.ml[280,9958+24])
                              Texp_ident "pstr_desc/1862"
                        ]
                      expression (src/ppx.ml[281,9985+4]..src/ppx.ml[281,9985+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[287,10105+0]..src/ppx.ml[289,10186+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10105+4]..src/ppx.ml[287,10105+13])
          Tpat_var "printone2/1863"
        expression (src/ppx.ml[287,10105+14]..src/ppx.ml[289,10186+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[287,10105+14]..src/ppx.ml[287,10105+15])
                Tpat_var "x/1864"
              expression (src/ppx.ml[288,10129+2]..src/ppx.ml[289,10186+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[287,10105+17]..src/ppx.ml[287,10105+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[288,10129+2]..src/ppx.ml[288,10129+55])
                  Texp_apply
                  expression (src/ppx.ml[288,10129+3]..src/ppx.ml[288,10129+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[288,10129+17]..src/ppx.ml[288,10129+54])
                        Texp_apply
                        expression (src/ppx.ml[288,10129+18]..src/ppx.ml[288,10129+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[288,10129+33]..src/ppx.ml[288,10129+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[288,10129+34]..src/ppx.ml[288,10129+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[288,10129+35]..src/ppx.ml[288,10129+49]),None)
                                expression (src/ppx.ml[288,10129+51]..src/ppx.ml[288,10129+52])
                                  Texp_ident "x/1864"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[289,10186+2]..src/ppx.ml[289,10186+12])
                  Texp_apply
                  expression (src/ppx.ml[289,10186+2]..src/ppx.ml[289,10186+10])
                    Texp_ident "printone/1860"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[289,10186+11]..src/ppx.ml[289,10186+12])
                        Texp_ident "x/1864"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[291,10202+0]..src/ppx.ml[293,10233+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[291,10202+4]..src/ppx.ml[291,10202+9])
          Tpat_var "proc1/1865"
        expression (src/ppx.ml[291,10202+10]..src/ppx.ml[293,10233+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[291,10202+10]..src/ppx.ml[291,10202+11])
                Tpat_var "x/1867"
              expression (src/ppx.ml[292,10218+2]..src/ppx.ml[293,10233+3])
                Texp_sequence
                expression (src/ppx.ml[292,10218+2]..src/ppx.ml[292,10218+13])
                  Texp_apply
                  expression (src/ppx.ml[292,10218+2]..src/ppx.ml[292,10218+11])
                    Texp_ident "printone2/1863"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[292,10218+12]..src/ppx.ml[292,10218+13])
                        Texp_ident "x/1867"
                  ]
                expression (src/ppx.ml[293,10233+2]..src/ppx.ml[293,10233+3])
                  Texp_ident "x/1867"
          ]
    ]
  structure_item (src/ppx.ml[295,10238+0]..src/ppx.ml[298,10387+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10238+4]..src/ppx.ml[295,10238+9])
          Tpat_var "debug/1868"
        expression (src/ppx.ml[295,10238+10]..src/ppx.ml[298,10387+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[295,10238+10]..src/ppx.ml[295,10238+14])
                Tpat_var "proc/1870"
              expression (src/ppx.ml[295,10238+15]..src/ppx.ml[298,10387+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[295,10238+15]..src/ppx.ml[295,10238+18])
                      Tpat_var "lst/1871"
                    expression (src/ppx.ml[296,10266+2]..src/ppx.ml[298,10387+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[295,10238+21]..src/ppx.ml[295,10238+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[296,10266+6]..src/ppx.ml[296,10266+12])
                            Tpat_var "result/1872"
                          expression (src/ppx.ml[296,10266+15]..src/ppx.ml[296,10266+32])
                            Texp_apply
                            expression (src/ppx.ml[296,10266+15]..src/ppx.ml[296,10266+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[296,10266+24]..src/ppx.ml[296,10266+28])
                                  Texp_ident "proc/1870"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[296,10266+29]..src/ppx.ml[296,10266+32])
                                  Texp_ident "lst/1871"
                            ]
                      ]
                      expression (src/ppx.ml[297,10302+2]..src/ppx.ml[298,10387+4])
                        Texp_sequence
                        expression (src/ppx.ml[297,10302+2]..src/ppx.ml[297,10302+83])
                          Texp_apply
                          expression (src/ppx.ml[297,10302+2]..src/ppx.ml[297,10302+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[297,10302+12]..src/ppx.ml[297,10302+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[297,10302+17]..src/ppx.ml[297,10302+18])
                                      Tpat_var "i/1936"
                                    expression (src/ppx.ml[297,10302+22]..src/ppx.ml[297,10302+75])
                                      Texp_apply
                                      expression (src/ppx.ml[297,10302+22]..src/ppx.ml[297,10302+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[297,10302+36]..src/ppx.ml[297,10302+75])
                                            Texp_apply
                                            expression (src/ppx.ml[297,10302+37]..src/ppx.ml[297,10302+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[297,10302+52]..src/ppx.ml[297,10302+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[297,10302+53]..src/ppx.ml[297,10302+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[297,10302+54]..src/ppx.ml[297,10302+69]),None)
                                                    expression (src/ppx.ml[297,10302+72]..src/ppx.ml[297,10302+73])
                                                      Texp_ident "i/1936"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[297,10302+77]..src/ppx.ml[297,10302+83])
                                Texp_ident "result/1872"
                          ]
                        expression (src/ppx.ml[298,10387+2]..src/ppx.ml[298,10387+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[300,10409+0]..src/ppx.ml[303,10533+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10409+4]..src/ppx.ml[300,10409+13])
          Tpat_var "transform/1937"
        expression (src/ppx.ml[300,10409+14]..src/ppx.ml[303,10533+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[300,10409+14]..src/ppx.ml[300,10409+15])
                Tpat_var "x/1939"
              expression (src/ppx.ml[301,10464+2]..src/ppx.ml[303,10533+3])
                Texp_sequence
                expression (src/ppx.ml[301,10464+2]..src/ppx.ml[301,10464+48])
                  Texp_apply
                  expression (src/ppx.ml[301,10464+3]..src/ppx.ml[301,10464+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[301,10464+17]..src/ppx.ml[301,10464+47])
                        Texp_apply
                        expression (src/ppx.ml[301,10464+18]..src/ppx.ml[301,10464+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[301,10464+33]..src/ppx.ml[301,10464+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[301,10464+34]..src/ppx.ml[301,10464+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[301,10464+35]..src/ppx.ml[301,10464+42]),None)
                                expression (src/ppx.ml[301,10464+44]..src/ppx.ml[301,10464+45])
                                  Texp_ident "x/1939"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[302,10514+2]..src/ppx.ml[303,10533+3])
                  Texp_sequence
                  expression (src/ppx.ml[302,10514+2]..src/ppx.ml[302,10514+17])
                    Texp_apply
                    expression (src/ppx.ml[302,10514+3]..src/ppx.ml[302,10514+8])
                      Texp_ident "debug/1868"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[302,10514+9]..src/ppx.ml[302,10514+14])
                          Texp_ident "proc1/1865"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[302,10514+15]..src/ppx.ml[302,10514+16])
                          Texp_ident "x/1939"
                    ]
                  expression (src/ppx.ml[303,10533+2]..src/ppx.ml[303,10533+3])
                    Texp_ident "x/1939"
          ]
    ]
  structure_item (src/ppx.ml[305,10540+1]..src/ppx.ml[305,10540+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[305,10540+5]..src/ppx.ml[305,10540+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[305,10540+10]..src/ppx.ml[305,10540+69])
          Texp_apply
          expression (src/ppx.ml[305,10540+10]..src/ppx.ml[305,10540+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[305,10540+47]..src/ppx.ml[305,10540+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[305,10540+47]..src/ppx.ml[305,10540+56])
                    Texp_ident "transform/1937"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[305,10540+57]..src/ppx.ml[305,10540+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[305,10540+58]..src/ppx.ml[305,10540+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.131>;
 "foo"[value] -> <Ppx.123>;
 "print_constructor_arguments"[value] -> <Ppx.70>;
 "print_type_decl"[value] -> <Ppx.88>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.102>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.124>;
 "printone2"[value] -> <Ppx.127>;
 "proc1"[value] -> <Ppx.129>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.30>;
 "process_core_type_desc"[value] -> <Ppx.28>;
 "process_core_type_list"[value] -> <Ppx.31>;
 "process_kind"[value] -> <Ppx.84>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.74>;
 "process_record_kind"[value] -> <Ppx.27>;
 "process_record_kind_list"[value] -> <Ppx.29>;
 "process_type_decl_list"[value] -> <Ppx.98>;
 "transform"[value] -> <Ppx.136>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5101 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_attributes/1447 =a (field 4 x/1442)
                    pld_loc/1446 =a (field 3 x/1442)
                    pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4069
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4069
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(97):2789-2841
                      (after Ppx.process_core_type_desc src/ppx.ml(97):2789-2841
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(97):2804-2840
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1452 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(98):2862-2922
                        (after Ppx.process_core_type_desc src/ppx.ml(98):2862-2922
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(98):2877-2921
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1452)))))))
                   case tag 1:
                    (let
                      (core_type2/1455 =a (field 2 x/1448)
                       core_type/1454 =a (field 1 x/1448)
                       arg_label/1453 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(100):2982-3039
                        (after Ppx.process_core_type_desc src/ppx.ml(100):2982-3039
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(100):2997-3038
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10:"))))))
                   case tag 2:
                    (let (a/1451 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(94):2697-2752
                        (after Ppx.process_core_type_desc src/ppx.ml(94):2697-2752
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(94):2712-2751
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_tuple:"))))))
                   case tag 3:
                    (let
                      (b/1450 =a (field 1 x/1448) a/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(89):2532-2639
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(89):2532-2558
                            (apply process_core_type_list/1441 b/1450))
                          (before Ppx.process_core_type_desc src/ppx.ml(90):2564-2639
                            (after Ppx.process_core_type_desc src/ppx.ml(90):2564-2639
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(90):2579-2638
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1449 "types" b/1450)))))))))
                   case tag 4:
                    (let
                      (b/1457 =a (field 1 x/1448) a/1456 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(104):3114-3170
                        (after Ppx.process_core_type_desc src/ppx.ml(104):3114-3170
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(104):3129-3169
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8:"))))))
                   case tag 5:
                    (let
                      (b/1459 =a (field 1 x/1448) a/1458 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(107):3245-3301
                        (after Ppx.process_core_type_desc src/ppx.ml(107):3245-3301
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(107):3260-3300
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7:"))))))
                   case tag 6:
                    (let
                      (b/1461 =a (field 1 x/1448) a/1460 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(110):3367-3423
                        (after Ppx.process_core_type_desc src/ppx.ml(110):3367-3423
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(110):3382-3422
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6:"))))))
                   case tag 7:
                    (let
                      (c/1464 =a (field 2 x/1448)
                       b/1463 =a (field 1 x/1448)
                       a/1462 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(113):3518-3574
                        (after Ppx.process_core_type_desc src/ppx.ml(113):3518-3574
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(113):3533-3573
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5:"))))))
                   case tag 8:
                    (let
                      (b/1466 =a (field 1 x/1448) a/1465 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(116):3643-3699
                        (after Ppx.process_core_type_desc src/ppx.ml(116):3643-3699
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(116):3658-3698
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4:"))))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3752-3810
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3752-3810
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3767-3809
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(123):4008-4069
                        (after Ppx.process_core_type_desc src/ppx.ml(123):4008-4069
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(123):4023-4068
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(125)<ghost>:4100-4217
                (before Ppx.process_record_kind_list src/ppx.ml(126):4108-4217
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(129):4152-4217
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(129):4152-4175
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(130):4181-4217
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(130):4181-4209
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(131):4215-4217
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(127):4131-4133
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(133)<ghost>:4239-4569
                (before Ppx.process_core_type src/ppx.ml(134):4247-4569
                  (let
                    (ptyp_attributes/1798 =a (field 3 x/1794)
                     ptyp_loc_stack/1797 =a (field 2 x/1794)
                     ptyp_loc/1796 =a (field 1 x/1794)
                     ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(141):4434-4569
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(141):4434-4468
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(143):4493-4569
                          (after Ppx.process_core_type src/ppx.ml(143):4493-4569
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(143):4508-4568
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(144)<ghost>:4596-4715
                (before Ppx.process_core_type_list src/ppx.ml(145):4619-4715
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(148):4663-4715
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(148):4663-4684
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(149):4690-4715
                            (after Ppx.process_core_type_list src/ppx.ml(149):4690-4715
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(146):4642-4644
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(156)<ghost>:4761-4994
                 (before Ppx.print_constructor_arguments src/ppx.ml(157):4769-4994
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(159):4807-4899
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(159):4807-4833
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(160):4839-4899
                             (after Ppx.print_constructor_arguments src/ppx.ml(160):4839-4899
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(160):4854-4898
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(163):4933-4994
                         (after Ppx.print_constructor_arguments src/ppx.ml(163):4933-4994
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(163):4948-4993
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_pype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(165)<ghost>:5053-5980
                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(166):5061-5980
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(170):5170-5980
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(181):5509-5980
                               (seq
                                 (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(181):5509-5546
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5554-5980
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5554-5909
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5569-5908
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(196):5917-5980
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(196):5917-5970
                                           (apply
                                             process_pype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(197):5978-5980
                                           0))))))))))
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(167):5084-5086
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(199)<ghost>:6000-6458
                     (before Ppx.process_kind src/ppx.ml(200):6008-6458
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(202):6066-6124
                           (after Ppx.process_kind src/ppx.ml(202):6066-6124
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(202):6081-6123
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(210):6400-6458
                           (after Ppx.process_kind src/ppx.ml(210):6400-6458
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(210):6415-6457
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6152-6272
                             (seq
                               (after Ppx.process_kind src/ppx.ml(204):6152-6205
                                 (apply
                                   process_pype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(205):6211-6272
                                 (after Ppx.process_kind src/ppx.ml(205):6211-6272
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(205):6226-6271
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(209):6353-6380
                             (after Ppx.process_kind src/ppx.ml(209):6353-6380
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(212)<ghost>:6479-7504
                     (before Ppx.print_type_decl src/ppx.ml(213):6487-7504
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(224):6894-7504
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(224):6894-6959
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(224):6909-6958
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(225):6965-7504
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(225):6965-7033
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(225):6980-7032
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(226):7039-7504
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(226):7039-7101
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(226):7054-7100
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(227):7107-7504
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(227):7107-7166
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(227):7122-7165
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(228):7172-7504
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(228):7172-7197
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(229):7203-7504
                                               (after Ppx.print_type_decl src/ppx.ml(229):7203-7504
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(229):7218-7503
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(235)<ghost>:7540-7651
                       (before Ppx.process_type_decl_list src/ppx.ml(236):7548-7651
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(239):7592-7651
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(239):7592-7611
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(240):7617-7651
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(240):7617-7643
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(241):7649-7651
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(237):7571-7573
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(243)<ghost>:7670-9749
                         (before Ppx.printdesc src/ppx.ml(244):7705-9749
                           (seq
                             (after Ppx.printdesc src/ppx.ml(244):7705-7771
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(244):7720-7770
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(245):7775-9749
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(246):7829-7905
                                     (after Ppx.printdesc src/ppx.ml(246):7829-7905
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(246):7844-7904
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(248):7974-8108
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(248):7974-8058
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(248):7989-8057
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(249):8064-8108
                                         (after Ppx.printdesc src/ppx.ml(249):8064-8108
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(250):8148-8225
                                     (after Ppx.printdesc src/ppx.ml(250):8148-8225
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(250):8163-8224
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8310-8447
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(254):8310-8355
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(255):8361-8447
                                         (after Ppx.printdesc src/ppx.ml(255):8361-8447
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(255):8376-8446
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(258):8484-8555
                                     (after Ppx.printdesc src/ppx.ml(258):8484-8555
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(258):8499-8554
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):8599-8680
                                     (after Ppx.printdesc src/ppx.ml(259):8599-8680
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):8614-8679
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):8715-8785
                                     (after Ppx.printdesc src/ppx.ml(260):8715-8785
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):8730-8784
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):8828-8907
                                     (after Ppx.printdesc src/ppx.ml(261):8828-8907
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):8843-8906
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):8951-9032
                                     (after Ppx.printdesc src/ppx.ml(262):8951-9032
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):8966-9031
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9083-9153
                                     (after Ppx.printdesc src/ppx.ml(264):9083-9153
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9098-9152
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(265):9193-9267
                                     (after Ppx.printdesc src/ppx.ml(265):9193-9267
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(265):9208-9266
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(266):9316-9400
                                     (after Ppx.printdesc src/ppx.ml(266):9316-9400
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(266):9331-9399
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(267):9442-9518
                                     (after Ppx.printdesc src/ppx.ml(267):9442-9518
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(267):9457-9517
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(268):9551-9620
                                     (after Ppx.printdesc src/ppx.ml(268):9551-9620
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(268):9566-9619
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(269):9667-9749
                                     (after Ppx.printdesc src/ppx.ml(269):9667-9749
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(269):9682-9748
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(273)<ghost>:9779-9991
                         (before Ppx.printone src/ppx.ml(274):9811-9991
                           (let
                             (*match*/5102 =a (field 1 x/1861)
                              pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(280):9962-9991
                               (seq
                                 (after Ppx.printone src/ppx.ml(280):9962-9983
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(281):9989-9991
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(287)<ghost>:10119-10198
                         (before Ppx.printone2 src/ppx.ml(288):10131-10198
                           (seq
                             (after Ppx.printone2 src/ppx.ml(288):10131-10184
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(288):10146-10183
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(289):10188-10198
                               (after Ppx.printone2 src/ppx.ml(289):10188-10198
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(291)<ghost>:10212-10236
                         (before Ppx.proc1 src/ppx.ml(292):10220-10236
                           (seq
                             (after Ppx.proc1 src/ppx.ml(292):10220-10231
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(293):10235-10236
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(295)<ghost>:10248-10391
                         (before Ppx.debug src/ppx.ml(296):10268-10391
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(296):10281-10298
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(297):10304-10391
                               (seq
                                 (after Ppx.debug src/ppx.ml(297):10304-10385
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(297):10314-10378
                                         (before Ppx.debug.(fun) src/ppx.ml(297):10324-10377
                                           (after Ppx.debug.(fun) src/ppx.ml(297):10324-10377
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(297):10338-10377
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(298):10389-10391
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(300)<ghost>:10423-10536
                         (before Ppx.transform src/ppx.ml(301):10466-10536
                           (seq
                             (after Ppx.transform src/ppx.ml(301):10466-10512
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(301):10481-10511
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(302):10516-10536
                               (seq
                                 (after Ppx.transform src/ppx.ml(302):10516-10531
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(303):10535-10536
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(305):10550-10609
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_pype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4069
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4069
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(97):2789-2841
                      (after Ppx.process_core_type_desc src/ppx.ml(97):2789-2841
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(97):2804-2840
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1452 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(98):2862-2922
                        (after Ppx.process_core_type_desc src/ppx.ml(98):2862-2922
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(98):2877-2921
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1452)))))))
                   case tag 1:
                    (before Ppx.process_core_type_desc src/ppx.ml(100):2982-3039
                      (after Ppx.process_core_type_desc src/ppx.ml(100):2982-3039
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(100):2997-3038
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow10:")))))
                   case tag 2:
                    (before Ppx.process_core_type_desc src/ppx.ml(94):2697-2752
                      (after Ppx.process_core_type_desc src/ppx.ml(94):2697-2752
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(94):2712-2751
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_tuple:")))))
                   case tag 3:
                    (let
                      (b/1450 =a (field 1 x/1448) a/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(89):2532-2639
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(89):2532-2558
                            (apply process_core_type_list/1441 b/1450))
                          (before Ppx.process_core_type_desc src/ppx.ml(90):2564-2639
                            (after Ppx.process_core_type_desc src/ppx.ml(90):2564-2639
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(90):2579-2638
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1449 "types" b/1450)))))))))
                   case tag 4:
                    (before Ppx.process_core_type_desc src/ppx.ml(104):3114-3170
                      (after Ppx.process_core_type_desc src/ppx.ml(104):3114-3170
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(104):3129-3169
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow8:")))))
                   case tag 5:
                    (before Ppx.process_core_type_desc src/ppx.ml(107):3245-3301
                      (after Ppx.process_core_type_desc src/ppx.ml(107):3245-3301
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(107):3260-3300
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow7:")))))
                   case tag 6:
                    (before Ppx.process_core_type_desc src/ppx.ml(110):3367-3423
                      (after Ppx.process_core_type_desc src/ppx.ml(110):3367-3423
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(110):3382-3422
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow6:")))))
                   case tag 7:
                    (before Ppx.process_core_type_desc src/ppx.ml(113):3518-3574
                      (after Ppx.process_core_type_desc src/ppx.ml(113):3518-3574
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(113):3533-3573
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow5:")))))
                   case tag 8:
                    (before Ppx.process_core_type_desc src/ppx.ml(116):3643-3699
                      (after Ppx.process_core_type_desc src/ppx.ml(116):3643-3699
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(116):3658-3698
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow4:")))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3752-3810
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3752-3810
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3767-3809
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(123):4008-4069
                        (after Ppx.process_core_type_desc src/ppx.ml(123):4008-4069
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(123):4023-4068
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(125)<ghost>:4100-4217
                (before Ppx.process_record_kind_list src/ppx.ml(126):4108-4217
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(129):4152-4217
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(129):4152-4175
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(130):4181-4217
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(130):4181-4209
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(131):4215-4217
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(127):4131-4133
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(133)<ghost>:4239-4569
                (before Ppx.process_core_type src/ppx.ml(134):4247-4569
                  (let (ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(141):4434-4569
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(141):4434-4468
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(143):4493-4569
                          (after Ppx.process_core_type src/ppx.ml(143):4493-4569
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(143):4508-4568
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(144)<ghost>:4596-4715
                (before Ppx.process_core_type_list src/ppx.ml(145):4619-4715
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(148):4663-4715
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(148):4663-4684
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(149):4690-4715
                            (after Ppx.process_core_type_list src/ppx.ml(149):4690-4715
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(146):4642-4644
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(156)<ghost>:4761-4994
                 (before Ppx.print_constructor_arguments src/ppx.ml(157):4769-4994
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(159):4807-4899
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(159):4807-4833
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(160):4839-4899
                             (after Ppx.print_constructor_arguments src/ppx.ml(160):4839-4899
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(160):4854-4898
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(163):4933-4994
                         (after Ppx.print_constructor_arguments src/ppx.ml(163):4933-4994
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(163):4948-4993
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_pype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(165)<ghost>:5053-5980
                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(166):5061-5980
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(170):5170-5980
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(181):5509-5980
                               (seq
                                 (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(181):5509-5546
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5554-5980
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5554-5909
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(182):5569-5908
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(196):5917-5980
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(196):5917-5970
                                           (apply
                                             process_pype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(197):5978-5980
                                           0))))))))))
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(167):5084-5086
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(199)<ghost>:6000-6458
                     (before Ppx.process_kind src/ppx.ml(200):6008-6458
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(202):6066-6124
                           (after Ppx.process_kind src/ppx.ml(202):6066-6124
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(202):6081-6123
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(210):6400-6458
                           (after Ppx.process_kind src/ppx.ml(210):6400-6458
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(210):6415-6457
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(204):6152-6272
                             (seq
                               (after Ppx.process_kind src/ppx.ml(204):6152-6205
                                 (apply
                                   process_pype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(205):6211-6272
                                 (after Ppx.process_kind src/ppx.ml(205):6211-6272
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(205):6226-6271
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(209):6353-6380
                             (after Ppx.process_kind src/ppx.ml(209):6353-6380
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(212)<ghost>:6479-7504
                     (before Ppx.print_type_decl src/ppx.ml(213):6487-7504
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(224):6894-7504
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(224):6894-6959
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(224):6909-6958
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(225):6965-7504
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(225):6965-7033
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(225):6980-7032
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(226):7039-7504
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(226):7039-7101
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(226):7054-7100
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(227):7107-7504
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(227):7107-7166
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(227):7122-7165
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(228):7172-7504
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(228):7172-7197
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(229):7203-7504
                                               (after Ppx.print_type_decl src/ppx.ml(229):7203-7504
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(229):7218-7503
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(235)<ghost>:7540-7651
                       (before Ppx.process_type_decl_list src/ppx.ml(236):7548-7651
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(239):7592-7651
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(239):7592-7611
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(240):7617-7651
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(240):7617-7643
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(241):7649-7651
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(237):7571-7573
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(243)<ghost>:7670-9749
                         (before Ppx.printdesc src/ppx.ml(244):7705-9749
                           (seq
                             (after Ppx.printdesc src/ppx.ml(244):7705-7771
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(244):7720-7770
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(245):7775-9749
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(246):7829-7905
                                     (after Ppx.printdesc src/ppx.ml(246):7829-7905
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(246):7844-7904
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(248):7974-8108
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(248):7974-8058
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(248):7989-8057
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(249):8064-8108
                                         (after Ppx.printdesc src/ppx.ml(249):8064-8108
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(250):8148-8225
                                     (after Ppx.printdesc src/ppx.ml(250):8148-8225
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(250):8163-8224
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8310-8447
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(254):8310-8355
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(255):8361-8447
                                         (after Ppx.printdesc src/ppx.ml(255):8361-8447
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(255):8376-8446
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(258):8484-8555
                                     (after Ppx.printdesc src/ppx.ml(258):8484-8555
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(258):8499-8554
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(259):8599-8680
                                     (after Ppx.printdesc src/ppx.ml(259):8599-8680
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(259):8614-8679
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):8715-8785
                                     (after Ppx.printdesc src/ppx.ml(260):8715-8785
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):8730-8784
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):8828-8907
                                     (after Ppx.printdesc src/ppx.ml(261):8828-8907
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):8843-8906
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):8951-9032
                                     (after Ppx.printdesc src/ppx.ml(262):8951-9032
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):8966-9031
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9083-9153
                                     (after Ppx.printdesc src/ppx.ml(264):9083-9153
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9098-9152
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(265):9193-9267
                                     (after Ppx.printdesc src/ppx.ml(265):9193-9267
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(265):9208-9266
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(266):9316-9400
                                     (after Ppx.printdesc src/ppx.ml(266):9316-9400
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(266):9331-9399
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(267):9442-9518
                                     (after Ppx.printdesc src/ppx.ml(267):9442-9518
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(267):9457-9517
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(268):9551-9620
                                     (after Ppx.printdesc src/ppx.ml(268):9551-9620
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(268):9566-9619
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(269):9667-9749
                                     (after Ppx.printdesc src/ppx.ml(269):9667-9749
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(269):9682-9748
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(273)<ghost>:9779-9991
                         (before Ppx.printone src/ppx.ml(274):9811-9991
                           (let (pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(280):9962-9991
                               (seq
                                 (after Ppx.printone src/ppx.ml(280):9962-9983
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(281):9989-9991
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(287)<ghost>:10119-10198
                         (before Ppx.printone2 src/ppx.ml(288):10131-10198
                           (seq
                             (after Ppx.printone2 src/ppx.ml(288):10131-10184
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(288):10146-10183
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(289):10188-10198
                               (after Ppx.printone2 src/ppx.ml(289):10188-10198
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(291)<ghost>:10212-10236
                         (before Ppx.proc1 src/ppx.ml(292):10220-10236
                           (seq
                             (after Ppx.proc1 src/ppx.ml(292):10220-10231
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(293):10235-10236
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(295)<ghost>:10248-10391
                         (before Ppx.debug src/ppx.ml(296):10268-10391
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(296):10281-10298
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(297):10304-10391
                               (seq
                                 (after Ppx.debug src/ppx.ml(297):10304-10385
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(297):10314-10378
                                         (before Ppx.debug.(fun) src/ppx.ml(297):10324-10377
                                           (after Ppx.debug.(fun) src/ppx.ml(297):10324-10377
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(297):10338-10377
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(298):10389-10391
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(300)<ghost>:10423-10536
                         (before Ppx.transform src/ppx.ml(301):10466-10536
                           (seq
                             (after Ppx.transform src/ppx.ml(301):10466-10512
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(301):10481-10511
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(302):10516-10536
                               (seq
                                 (after Ppx.transform src/ppx.ml(302):10516-10531
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(303):10535-10536
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(305):10550-10609
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_pype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))

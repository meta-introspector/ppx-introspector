[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[72,1943+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[72,1943+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+17])
            Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
          expression (src/ppx.ml[69,1879+17]..[72,1943+70])
            Pexp_constraint
            expression (src/ppx.ml[70,1904+2]..[72,1943+70])
              Pexp_match
              expression (src/ppx.ml[70,1904+8]..[70,1904+9])
                Pexp_ident "x" (src/ppx.ml[70,1904+8]..[70,1904+9])
              [
                <case>
                  pattern (src/ppx.ml[71,1919+4]..[71,1919+20])
                    Ppat_tuple
                    [
                      pattern (src/ppx.ml[71,1919+5]..[71,1919+14])
                        Ppat_var "longident" (src/ppx.ml[71,1919+5]..[71,1919+14])
                      pattern (src/ppx.ml[71,1919+16]..[71,1919+19])
                        Ppat_var "loc" (src/ppx.ml[71,1919+16]..[71,1919+19])
                    ]
                  expression (src/ppx.ml[72,1943+4]..[72,1943+70])
                    Pexp_apply
                    expression (src/ppx.ml[72,1943+5]..[72,1943+18])
                      Pexp_ident "print_endline" (src/ppx.ml[72,1943+5]..[72,1943+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[72,1943+19]..[72,1943+69])
                          Pexp_apply
                          expression (src/ppx.ml[72,1943+20]..[72,1943+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[72,1943+20]..[72,1943+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[72,1943+35]..[72,1943+68])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[72,1943+36]..[72,1943+55])
                                    Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[72,1943+37]..[72,1943+54]),None)
                                  expression (src/ppx.ml[72,1943+58]..[72,1943+67])
                                    Pexp_ident "longident" (src/ppx.ml[72,1943+58]..[72,1943+67])
                                ]
                          ]
                    ]
              ]
            core_type (src/ppx.ml[69,1879+18]..[69,1879+22])
              Ptyp_constr "unit" (src/ppx.ml[69,1879+18]..[69,1879+22])
              []
    ]
  structure_item (src/ppx.ml[74,2017+0]..[156,4842+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[74,2017+8]..[74,2017+27])
          Ppat_var "process_record_kind" (src/ppx.ml[74,2017+8]..[74,2017+27])
        expression (src/ppx.ml[74,2017+27]..[88,2501+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[74,2017+27]..[74,2017+30])
            Ppat_var "x" (src/ppx.ml[74,2017+28]..[74,2017+29])
          expression (src/ppx.ml[75,2050+2]..[88,2501+47])
            Pexp_match
            expression (src/ppx.ml[75,2050+8]..[75,2050+9])
              Pexp_ident "x" (src/ppx.ml[75,2050+8]..[75,2050+9])
            [
              <case>
                pattern (src/ppx.ml[76,2065+4]..[82,2246+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[77,2071+5]..[77,2071+13]) ghost
                      pattern (src/ppx.ml[77,2071+5]..[77,2071+13])
                        Ppat_var "pld_name" (src/ppx.ml[77,2071+5]..[77,2071+13])
                    "pld_mutable" (src/ppx.ml[78,2104+5]..[78,2104+16]) ghost
                      pattern (src/ppx.ml[78,2104+5]..[78,2104+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[78,2104+5]..[78,2104+16])
                    "pld_type" (src/ppx.ml[79,2142+5]..[79,2142+13]) ghost
                      pattern (src/ppx.ml[79,2142+5]..[79,2142+13])
                        Ppat_var "pld_type" (src/ppx.ml[79,2142+5]..[79,2142+13])
                    "pld_loc" (src/ppx.ml[80,2174+5]..[80,2174+12]) ghost
                      pattern (src/ppx.ml[80,2174+5]..[80,2174+12])
                        Ppat_var "pld_loc" (src/ppx.ml[80,2174+5]..[80,2174+12])
                    "pld_attributes" (src/ppx.ml[81,2206+5]..[81,2206+19]) ghost
                      pattern (src/ppx.ml[81,2206+5]..[81,2206+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[81,2206+5]..[81,2206+19])
                  ]
                expression (src/ppx.ml[83,2254+4]..[88,2501+47])
                  Pexp_apply
                  expression (src/ppx.ml[83,2254+5]..[83,2254+18])
                    Pexp_ident "print_endline" (src/ppx.ml[83,2254+5]..[83,2254+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[83,2254+19]..[88,2501+46])
                        Pexp_apply
                        expression (src/ppx.ml[83,2254+20]..[83,2254+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[83,2254+20]..[83,2254+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[83,2254+35]..[88,2501+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[83,2254+36]..[83,2254+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[83,2254+37]..[83,2254+56]),None)
                                expression (src/ppx.ml[84,2315+36]..[84,2315+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[84,2315+36]..[84,2315+44])
                                expression (src/ppx.ml[85,2361+36]..[85,2361+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[85,2361+37]..[85,2361+44]),None)
                                expression (src/ppx.ml[86,2408+36]..[86,2408+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[86,2408+36]..[86,2408+47])
                                expression (src/ppx.ml[87,2457+36]..[87,2457+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[87,2457+37]..[87,2457+41]),None)
                                expression (src/ppx.ml[88,2501+36]..[88,2501+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[88,2501+36]..[88,2501+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[90,2553+0]..[90,2553+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[90,2553+0]..[90,2553+22])
        expression (src/ppx.ml[90,2553+23]..[130,4160+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[90,2553+23]..[90,2553+24])
            Ppat_var "x" (src/ppx.ml[90,2553+23]..[90,2553+24])
          expression (src/ppx.ml[91,2580+2]..[130,4160+65])
            Pexp_match
            expression (src/ppx.ml[91,2580+8]..[91,2580+9])
              Pexp_ident "x" (src/ppx.ml[91,2580+8]..[91,2580+9])
            [
              <case>
                pattern (src/ppx.ml[92,2595+4]..[92,2595+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[92,2595+4]..[92,2595+15])
                  Some
                    []
                    pattern (src/ppx.ml[92,2595+16]..[92,2595+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[92,2595+17]..[92,2595+18])
                          Ppat_var "a" (src/ppx.ml[92,2595+17]..[92,2595+18])
                        pattern (src/ppx.ml[92,2595+19]..[92,2595+20])
                          Ppat_var "b" (src/ppx.ml[92,2595+19]..[92,2595+20])
                      ]
                expression (src/ppx.ml[94,2666+4]..[97,2720+79])
                  Pexp_sequence
                  expression (src/ppx.ml[94,2666+4]..[94,2666+18])
                    Pexp_apply
                    expression (src/ppx.ml[94,2666+5]..[94,2666+15])
                      Pexp_ident "process_id" (src/ppx.ml[94,2666+5]..[94,2666+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[94,2666+16]..[94,2666+17])
                          Pexp_ident "a" (src/ppx.ml[94,2666+16]..[94,2666+17])
                    ]
                  expression (src/ppx.ml[95,2686+4]..[97,2720+79])
                    Pexp_sequence
                    expression (src/ppx.ml[95,2686+4]..[95,2686+30])
                      Pexp_apply
                      expression (src/ppx.ml[95,2686+5]..[95,2686+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[95,2686+5]..[95,2686+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[95,2686+28]..[95,2686+29])
                            Pexp_ident "b" (src/ppx.ml[95,2686+28]..[95,2686+29])
                      ]
                    expression (src/ppx.ml[97,2720+4]..[97,2720+79])
                      Pexp_apply
                      expression (src/ppx.ml[97,2720+5]..[97,2720+18])
                        Pexp_ident "print_endline" (src/ppx.ml[97,2720+5]..[97,2720+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[97,2720+19]..[97,2720+78])
                            Pexp_apply
                            expression (src/ppx.ml[97,2720+20]..[97,2720+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[97,2720+20]..[97,2720+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[97,2720+35]..[97,2720+77])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[97,2720+36]..[97,2720+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2720+37]..[97,2720+55]),None)
                                    expression (src/ppx.ml[97,2720+58]..[97,2720+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[97,2720+59]..[97,2720+61]),None)
                                    expression (src/ppx.ml[97,2720+63]..[97,2720+64])
                                      Pexp_ident "a" (src/ppx.ml[97,2720+63]..[97,2720+64])
                                    expression (src/ppx.ml[97,2720+66]..[97,2720+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[97,2720+67]..[97,2720+72]),None)
                                    expression (src/ppx.ml[97,2720+74]..[97,2720+75])
                                      Pexp_ident "b" (src/ppx.ml[97,2720+74]..[97,2720+75])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[99,2801+4]..[99,2801+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[99,2801+4]..[99,2801+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2801+15]..[99,2801+16])
                      Ppat_var "a" (src/ppx.ml[99,2801+15]..[99,2801+16])
                expression (src/ppx.ml[101,2849+4]..[101,2849+59])
                  Pexp_apply
                  expression (src/ppx.ml[101,2849+5]..[101,2849+18])
                    Pexp_ident "print_endline" (src/ppx.ml[101,2849+5]..[101,2849+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[101,2849+19]..[101,2849+58])
                        Pexp_apply
                        expression (src/ppx.ml[101,2849+20]..[101,2849+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[101,2849+20]..[101,2849+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2849+35]..[101,2849+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2849+37]..[101,2849+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,2928+4]..[104,2928+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[104,2928+4]..[104,2928+12])
                  None
                expression (src/ppx.ml[104,2928+17]..[104,2928+69])
                  Pexp_apply
                  expression (src/ppx.ml[104,2928+18]..[104,2928+31])
                    Pexp_ident "print_endline" (src/ppx.ml[104,2928+18]..[104,2928+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,2928+32]..[104,2928+68])
                        Pexp_apply
                        expression (src/ppx.ml[104,2928+33]..[104,2928+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,2928+33]..[104,2928+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2928+48]..[104,2928+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2928+50]..[104,2928+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,2998+4]..[105,2998+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[105,2998+4]..[105,2998+12])
                  Some
                    []
                    pattern (src/ppx.ml[105,2998+13]..[105,2998+17])
                      Ppat_var "name" (src/ppx.ml[105,2998+13]..[105,2998+17])
                expression (src/ppx.ml[105,2998+20]..[105,2998+80])
                  Pexp_apply
                  expression (src/ppx.ml[105,2998+21]..[105,2998+34])
                    Pexp_ident "print_endline" (src/ppx.ml[105,2998+21]..[105,2998+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,2998+35]..[105,2998+79])
                        Pexp_apply
                        expression (src/ppx.ml[105,2998+36]..[105,2998+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,2998+36]..[105,2998+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2998+51]..[105,2998+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[105,2998+52]..[105,2998+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,2998+53]..[105,2998+68]),None)
                                expression (src/ppx.ml[105,2998+73]..[105,2998+77])
                                  Pexp_ident "name" (src/ppx.ml[105,2998+73]..[105,2998+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,3079+4]..[106,3079+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[106,3079+4]..[106,3079+14])
                  Some
                    []
                    pattern (src/ppx.ml[106,3079+15]..[106,3079+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[106,3079+16]..[106,3079+25])
                          Ppat_var "arg_label" (src/ppx.ml[106,3079+16]..[106,3079+25])
                        pattern (src/ppx.ml[106,3079+28]..[106,3079+37])
                          Ppat_var "core_type" (src/ppx.ml[106,3079+28]..[106,3079+37])
                        pattern (src/ppx.ml[106,3079+40]..[106,3079+50])
                          Ppat_var "core_type2" (src/ppx.ml[106,3079+40]..[106,3079+50])
                      ]
                expression (src/ppx.ml[107,3134+4]..[107,3134+61])
                  Pexp_apply
                  expression (src/ppx.ml[107,3134+5]..[107,3134+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3134+5]..[107,3134+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3134+19]..[107,3134+60])
                        Pexp_apply
                        expression (src/ppx.ml[107,3134+20]..[107,3134+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3134+20]..[107,3134+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3134+35]..[107,3134+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3134+37]..[107,3134+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[109,3197+4]..[109,3197+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[109,3197+4]..[109,3197+15])
                  Some
                    []
                    pattern (src/ppx.ml[109,3197+16]..[109,3197+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[109,3197+17]..[109,3197+18])
                          Ppat_var "a" (src/ppx.ml[109,3197+17]..[109,3197+18])
                        pattern (src/ppx.ml[109,3197+19]..[109,3197+20])
                          Ppat_var "b" (src/ppx.ml[109,3197+19]..[109,3197+20])
                      ]
                expression (src/ppx.ml[111,3266+4]..[111,3266+60])
                  Pexp_apply
                  expression (src/ppx.ml[111,3266+5]..[111,3266+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3266+5]..[111,3266+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3266+19]..[111,3266+59])
                        Pexp_apply
                        expression (src/ppx.ml[111,3266+20]..[111,3266+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3266+20]..[111,3266+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3266+35]..[111,3266+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3266+37]..[111,3266+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[112,3327+4]..[112,3327+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[112,3327+4]..[112,3327+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3327+15]..[112,3327+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[112,3327+16]..[112,3327+17])
                          Ppat_var "a" (src/ppx.ml[112,3327+16]..[112,3327+17])
                        pattern (src/ppx.ml[112,3327+18]..[112,3327+19])
                          Ppat_var "b" (src/ppx.ml[112,3327+18]..[112,3327+19])
                      ]
                expression (src/ppx.ml[114,3397+4]..[114,3397+60])
                  Pexp_apply
                  expression (src/ppx.ml[114,3397+5]..[114,3397+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3397+5]..[114,3397+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3397+19]..[114,3397+59])
                        Pexp_apply
                        expression (src/ppx.ml[114,3397+20]..[114,3397+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3397+20]..[114,3397+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3397+35]..[114,3397+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3397+37]..[114,3397+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3458+4]..[115,3458+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[115,3458+4]..[115,3458+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3458+15]..[115,3458+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3458+16]..[115,3458+17])
                          Ppat_var "a" (src/ppx.ml[115,3458+16]..[115,3458+17])
                        pattern (src/ppx.ml[115,3458+18]..[115,3458+19])
                          Ppat_var "b" (src/ppx.ml[115,3458+18]..[115,3458+19])
                      ]
                expression (src/ppx.ml[117,3519+4]..[117,3519+60])
                  Pexp_apply
                  expression (src/ppx.ml[117,3519+5]..[117,3519+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3519+5]..[117,3519+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3519+19]..[117,3519+59])
                        Pexp_apply
                        expression (src/ppx.ml[117,3519+20]..[117,3519+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3519+20]..[117,3519+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3519+35]..[117,3519+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3519+37]..[117,3519+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3580+4]..[118,3580+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[118,3580+4]..[118,3580+16])
                  Some
                    []
                    pattern (src/ppx.ml[118,3580+17]..[118,3580+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3580+18]..[118,3580+19])
                          Ppat_var "a" (src/ppx.ml[118,3580+18]..[118,3580+19])
                        pattern (src/ppx.ml[118,3580+20]..[118,3580+21])
                          Ppat_var "b" (src/ppx.ml[118,3580+20]..[118,3580+21])
                        pattern (src/ppx.ml[118,3580+22]..[118,3580+23])
                          Ppat_var "c" (src/ppx.ml[118,3580+22]..[118,3580+23])
                      ]
                expression (src/ppx.ml[120,3670+4]..[120,3670+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3670+5]..[120,3670+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3670+5]..[120,3670+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3670+19]..[120,3670+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3670+20]..[120,3670+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3670+20]..[120,3670+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3670+35]..[120,3670+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3670+37]..[120,3670+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3731+4]..[121,3731+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[121,3731+4]..[121,3731+13])
                  Some
                    []
                    pattern (src/ppx.ml[121,3731+14]..[121,3731+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3731+15]..[121,3731+16])
                          Ppat_var "a" (src/ppx.ml[121,3731+15]..[121,3731+16])
                        pattern (src/ppx.ml[121,3731+17]..[121,3731+18])
                          Ppat_var "b" (src/ppx.ml[121,3731+17]..[121,3731+18])
                      ]
                expression (src/ppx.ml[123,3795+4]..[123,3795+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3795+5]..[123,3795+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3795+5]..[123,3795+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3795+19]..[123,3795+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3795+20]..[123,3795+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3795+20]..[123,3795+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3795+35]..[123,3795+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3795+37]..[123,3795+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3856+4]..[124,3856+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[124,3856+4]..[124,3856+16])
                  Some
                    []
                    pattern (src/ppx.ml[124,3856+17]..[124,3856+18])
                      Ppat_var "a" (src/ppx.ml[124,3856+17]..[124,3856+18])
                expression (src/ppx.ml[126,3904+4]..[126,3904+62])
                  Pexp_apply
                  expression (src/ppx.ml[126,3904+5]..[126,3904+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3904+5]..[126,3904+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3904+19]..[126,3904+61])
                        Pexp_apply
                        expression (src/ppx.ml[126,3904+20]..[126,3904+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3904+20]..[126,3904+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3904+35]..[126,3904+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[126,3904+36]..[126,3904+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3904+37]..[126,3904+55]),None)
                                expression (src/ppx.ml[126,3904+57]..[126,3904+58])
                                  Pexp_ident "a" (src/ppx.ml[126,3904+57]..[126,3904+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,4112+4]..[129,4112+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[129,4112+4]..[129,4112+18])
                  Some
                    []
                    pattern (src/ppx.ml[129,4112+19]..[129,4112+20])
                      Ppat_var "a" (src/ppx.ml[129,4112+19]..[129,4112+20])
                expression (src/ppx.ml[130,4160+4]..[130,4160+65])
                  Pexp_apply
                  expression (src/ppx.ml[130,4160+5]..[130,4160+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,4160+5]..[130,4160+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,4160+19]..[130,4160+64])
                        Pexp_apply
                        expression (src/ppx.ml[130,4160+20]..[130,4160+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,4160+20]..[130,4160+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,4160+35]..[130,4160+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[130,4160+36]..[130,4160+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4160+37]..[130,4160+58]),None)
                                expression (src/ppx.ml[130,4160+60]..[130,4160+61])
                                  Pexp_ident "a" (src/ppx.ml[130,4160+60]..[130,4160+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[132,4230+2]..[132,4230+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[132,4230+2]..[132,4230+26])
        expression (src/ppx.ml[132,4230+26]..[138,4367+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[132,4230+26]..[132,4230+29])
            Ppat_var "x" (src/ppx.ml[132,4230+27]..[132,4230+28])
          expression (src/ppx.ml[133,4262+2]..[138,4367+6])
            Pexp_match
            expression (src/ppx.ml[133,4262+8]..[133,4262+9])
              Pexp_ident "x" (src/ppx.ml[133,4262+8]..[133,4262+9])
            [
              <case>
                pattern (src/ppx.ml[134,4277+4]..[134,4277+6])
                  Ppat_construct "[]" (src/ppx.ml[134,4277+4]..[134,4277+6])
                  None
                expression (src/ppx.ml[134,4277+10]..[134,4277+12])
                  Pexp_construct "()" (src/ppx.ml[134,4277+10]..[134,4277+12])
                  None
              <case>
                pattern (src/ppx.ml[135,4290+4]..[135,4290+10])
                  Ppat_construct "::" (src/ppx.ml[135,4290+6]..[135,4290+8])
                  Some
                    []
                    pattern (src/ppx.ml[135,4290+4]..[135,4290+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4290+4]..[135,4290+5])
                          Ppat_var "h" (src/ppx.ml[135,4290+4]..[135,4290+5])
                        pattern (src/ppx.ml[135,4290+9]..[135,4290+10])
                          Ppat_var "t" (src/ppx.ml[135,4290+9]..[135,4290+10])
                      ]
                expression (src/ppx.ml[136,4304+4]..[138,4367+6])
                  Pexp_sequence
                  expression (src/ppx.ml[136,4304+4]..[136,4304+27])
                    Pexp_apply
                    expression (src/ppx.ml[136,4304+5]..[136,4304+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[136,4304+5]..[136,4304+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[136,4304+25]..[136,4304+26])
                          Pexp_ident "h" (src/ppx.ml[136,4304+25]..[136,4304+26])
                    ]
                  expression (src/ppx.ml[137,4333+4]..[138,4367+6])
                    Pexp_sequence
                    expression (src/ppx.ml[137,4333+4]..[137,4333+32])
                      Pexp_apply
                      expression (src/ppx.ml[137,4333+5]..[137,4333+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[137,4333+5]..[137,4333+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[137,4333+30]..[137,4333+31])
                            Pexp_ident "t" (src/ppx.ml[137,4333+30]..[137,4333+31])
                      ]
                    expression (src/ppx.ml[138,4367+4]..[138,4367+6])
                      Pexp_construct "()" (src/ppx.ml[138,4367+4]..[138,4367+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[140,4378+0]..[140,4378+17])
          Ppat_var "process_core_type" (src/ppx.ml[140,4378+0]..[140,4378+17])
        expression (src/ppx.ml[140,4378+17]..[150,4645+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4378+17]..[140,4378+20])
            Ppat_var "x" (src/ppx.ml[140,4378+18]..[140,4378+19])
          expression (src/ppx.ml[141,4401+2]..[150,4645+80])
            Pexp_match
            expression (src/ppx.ml[141,4401+8]..[141,4401+9])
              Pexp_ident "x" (src/ppx.ml[141,4401+8]..[141,4401+9])
            [
              <case>
                pattern (src/ppx.ml[142,4417+4]..[147,4578+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[143,4423+6]..[143,4423+15]) ghost
                      pattern (src/ppx.ml[143,4423+6]..[143,4423+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[143,4423+6]..[143,4423+15])
                    "ptyp_loc" (src/ppx.ml[144,4462+5]..[144,4462+13]) ghost
                      pattern (src/ppx.ml[144,4462+5]..[144,4462+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[144,4462+5]..[144,4462+13])
                    "ptyp_loc_stack" (src/ppx.ml[145,4495+5]..[145,4495+19]) ghost
                      pattern (src/ppx.ml[145,4495+5]..[145,4495+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[145,4495+5]..[145,4495+19])
                    "ptyp_attributes" (src/ppx.ml[146,4538+5]..[146,4538+20]) ghost
                      pattern (src/ppx.ml[146,4538+5]..[146,4538+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[146,4538+5]..[146,4538+20])
                  ]
                expression (src/ppx.ml[148,4586+4]..[150,4645+80])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4586+4]..[148,4586+38])
                    Pexp_apply
                    expression (src/ppx.ml[148,4586+5]..[148,4586+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[148,4586+5]..[148,4586+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4586+28]..[148,4586+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[148,4586+28]..[148,4586+37])
                    ]
                  expression (src/ppx.ml[150,4645+4]..[150,4645+80])
                    Pexp_apply
                    expression (src/ppx.ml[150,4645+5]..[150,4645+18])
                      Pexp_ident "print_endline" (src/ppx.ml[150,4645+5]..[150,4645+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4645+19]..[150,4645+79])
                          Pexp_apply
                          expression (src/ppx.ml[150,4645+20]..[150,4645+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[150,4645+20]..[150,4645+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[150,4645+35]..[150,4645+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[150,4645+36]..[150,4645+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4645+37]..[150,4645+63]),None)
                                  expression (src/ppx.ml[150,4645+68]..[150,4645+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[150,4645+68]..[150,4645+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[151,4726+4]..[151,4726+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[151,4726+4]..[151,4726+26])
        expression (src/ppx.ml[151,4726+26]..[156,4842+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4726+26]..[151,4726+44])
            Ppat_constraint
            pattern (src/ppx.ml[151,4726+27]..[151,4726+28])
              Ppat_var "x" (src/ppx.ml[151,4726+27]..[151,4726+28])
            core_type (src/ppx.ml[151,4726+29]..[151,4726+43])
              Ptyp_constr "list" (src/ppx.ml[151,4726+39]..[151,4726+43])
              [
                core_type (src/ppx.ml[151,4726+29]..[151,4726+38])
                  Ptyp_constr "core_type" (src/ppx.ml[151,4726+29]..[151,4726+38])
                  []
              ]
          expression (src/ppx.ml[152,4773+2]..[156,4842+29])
            Pexp_match
            expression (src/ppx.ml[152,4773+8]..[152,4773+9])
              Pexp_ident "x" (src/ppx.ml[152,4773+8]..[152,4773+9])
            [
              <case>
                pattern (src/ppx.ml[153,4788+4]..[153,4788+6])
                  Ppat_construct "[]" (src/ppx.ml[153,4788+4]..[153,4788+6])
                  None
                expression (src/ppx.ml[153,4788+10]..[153,4788+12])
                  Pexp_construct "()" (src/ppx.ml[153,4788+10]..[153,4788+12])
                  None
              <case>
                pattern (src/ppx.ml[154,4801+4]..[154,4801+10])
                  Ppat_construct "::" (src/ppx.ml[154,4801+6]..[154,4801+8])
                  Some
                    []
                    pattern (src/ppx.ml[154,4801+4]..[154,4801+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[154,4801+4]..[154,4801+5])
                          Ppat_var "h" (src/ppx.ml[154,4801+4]..[154,4801+5])
                        pattern (src/ppx.ml[154,4801+9]..[154,4801+10])
                          Ppat_var "t" (src/ppx.ml[154,4801+9]..[154,4801+10])
                      ]
                expression (src/ppx.ml[155,4815+4]..[156,4842+29])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4815+4]..[155,4815+25])
                    Pexp_apply
                    expression (src/ppx.ml[155,4815+4]..[155,4815+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[155,4815+4]..[155,4815+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4815+22]..[155,4815+25])
                          Pexp_ident "h" (src/ppx.ml[155,4815+23]..[155,4815+24])
                    ]
                  expression (src/ppx.ml[156,4842+4]..[156,4842+29])
                    Pexp_apply
                    expression (src/ppx.ml[156,4842+4]..[156,4842+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[156,4842+4]..[156,4842+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4842+26]..[156,4842+29])
                          Pexp_ident "t" (src/ppx.ml[156,4842+27]..[156,4842+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[163,4886+0]..[170,5085+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4886+4]..[163,4886+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[163,4886+4]..[163,4886+31])
        expression (src/ppx.ml[163,4886+31]..[170,5085+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[163,4886+31]..[163,4886+34])
            Ppat_var "x" (src/ppx.ml[163,4886+32]..[163,4886+33])
          expression (src/ppx.ml[164,4923+2]..[170,5085+65])
            Pexp_match
            expression (src/ppx.ml[164,4923+8]..[164,4923+9])
              Pexp_ident "x" (src/ppx.ml[164,4923+8]..[164,4923+9])
            [
              <case>
                pattern (src/ppx.ml[165,4938+4]..[165,4938+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[165,4938+4]..[165,4938+15])
                  Some
                    []
                    pattern (src/ppx.ml[165,4938+16]..[165,4938+17])
                      Ppat_var "a" (src/ppx.ml[165,4938+16]..[165,4938+17])
                expression (src/ppx.ml[166,4959+4]..[167,4991+64])
                  Pexp_sequence
                  expression (src/ppx.ml[166,4959+4]..[166,4959+30])
                    Pexp_apply
                    expression (src/ppx.ml[166,4959+5]..[166,4959+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,4959+5]..[166,4959+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,4959+28]..[166,4959+29])
                          Pexp_ident "a" (src/ppx.ml[166,4959+28]..[166,4959+29])
                    ]
                  expression (src/ppx.ml[167,4991+4]..[167,4991+64])
                    Pexp_apply
                    expression (src/ppx.ml[167,4991+5]..[167,4991+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,4991+5]..[167,4991+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,4991+19]..[167,4991+63])
                          Pexp_apply
                          expression (src/ppx.ml[167,4991+20]..[167,4991+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,4991+20]..[167,4991+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,4991+35]..[167,4991+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,4991+36]..[167,4991+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,4991+37]..[167,4991+55]),None)
                                  expression (src/ppx.ml[167,4991+60]..[167,4991+61])
                                    Pexp_ident "a" (src/ppx.ml[167,4991+60]..[167,4991+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[169,5063+4]..[169,5063+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[169,5063+4]..[169,5063+16])
                  Some
                    []
                    pattern (src/ppx.ml[169,5063+17]..[169,5063+18])
                      Ppat_var "a" (src/ppx.ml[169,5063+17]..[169,5063+18])
                expression (src/ppx.ml[170,5085+4]..[170,5085+65])
                  Pexp_apply
                  expression (src/ppx.ml[170,5085+5]..[170,5085+18])
                    Pexp_ident "print_endline" (src/ppx.ml[170,5085+5]..[170,5085+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[170,5085+19]..[170,5085+64])
                        Pexp_apply
                        expression (src/ppx.ml[170,5085+20]..[170,5085+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[170,5085+20]..[170,5085+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[170,5085+35]..[170,5085+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[170,5085+36]..[170,5085+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5085+37]..[170,5085+56]),None)
                                expression (src/ppx.ml[170,5085+61]..[170,5085+62])
                                  Pexp_ident "a" (src/ppx.ml[170,5085+61]..[170,5085+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[172,5152+0]..[204,6128+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5152+8]..[172,5152+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[172,5152+8]..[172,5152+57])
        expression (src/ppx.ml[172,5152+57]..[204,6128+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5152+57]..[172,5152+60])
            Ppat_var "x" (src/ppx.ml[172,5152+58]..[172,5152+59])
          expression (src/ppx.ml[173,5215+2]..[204,6128+8])
            Pexp_match
            expression (src/ppx.ml[173,5215+8]..[173,5215+9])
              Pexp_ident "x" (src/ppx.ml[173,5215+8]..[173,5215+9])
            [
              <case>
                pattern (src/ppx.ml[174,5230+4]..[174,5230+6])
                  Ppat_construct "[]" (src/ppx.ml[174,5230+4]..[174,5230+6])
                  None
                expression (src/ppx.ml[174,5230+10]..[174,5230+12])
                  Pexp_construct "()" (src/ppx.ml[174,5230+10]..[174,5230+12])
                  None
              <case>
                pattern (src/ppx.ml[175,5243+4]..[175,5243+10])
                  Ppat_construct "::" (src/ppx.ml[175,5243+6]..[175,5243+8])
                  Some
                    []
                    pattern (src/ppx.ml[175,5243+4]..[175,5243+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[175,5243+4]..[175,5243+5])
                          Ppat_var "h" (src/ppx.ml[175,5243+4]..[175,5243+5])
                        pattern (src/ppx.ml[175,5243+9]..[175,5243+10])
                          Ppat_var "t" (src/ppx.ml[175,5243+9]..[175,5243+10])
                      ]
                expression (src/ppx.ml[177,5322+4]..[204,6128+8])
                  Pexp_match
                  expression (src/ppx.ml[177,5322+10]..[177,5322+11])
                    Pexp_ident "h" (src/ppx.ml[177,5322+10]..[177,5322+11])
                  [
                    <case>
                      pattern (src/ppx.ml[178,5339+5]..[185,5577+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[179,5346+6]..[179,5346+14]) ghost
                            pattern (src/ppx.ml[179,5346+6]..[179,5346+14])
                              Ppat_var "pcd_name" (src/ppx.ml[179,5346+6]..[179,5346+14])
                          "pcd_vars" (src/ppx.ml[180,5380+6]..[180,5380+14]) ghost
                            pattern (src/ppx.ml[180,5380+6]..[180,5380+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[180,5380+6]..[180,5380+14])
                          "pcd_args" (src/ppx.ml[181,5419+6]..[181,5419+14]) ghost
                            pattern (src/ppx.ml[181,5419+6]..[181,5419+14])
                              Ppat_var "pcd_args" (src/ppx.ml[181,5419+6]..[181,5419+14])
                          "pcd_res" (src/ppx.ml[182,5464+6]..[182,5464+13]) ghost
                            pattern (src/ppx.ml[182,5464+6]..[182,5464+13])
                              Ppat_var "pcd_res" (src/ppx.ml[182,5464+6]..[182,5464+13])
                          "pcd_loc" (src/ppx.ml[183,5503+6]..[183,5503+13]) ghost
                            pattern (src/ppx.ml[183,5503+6]..[183,5503+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[183,5503+6]..[183,5503+13])
                          "pcd_attributes" (src/ppx.ml[184,5536+6]..[184,5536+20]) ghost
                            pattern (src/ppx.ml[184,5536+6]..[184,5536+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[184,5536+6]..[184,5536+20])
                        ]
                      expression (src/ppx.ml[188,5659+6]..[204,6128+8])
                        Pexp_sequence
                        expression (src/ppx.ml[188,5659+6]..[188,5659+43])
                          Pexp_apply
                          expression (src/ppx.ml[188,5659+6]..[188,5659+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[188,5659+6]..[188,5659+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[188,5659+33]..[188,5659+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[188,5659+34]..[188,5659+42])
                          ]
                        expression (src/ppx.ml[189,5704+6]..[204,6128+8])
                          Pexp_sequence
                          expression (src/ppx.ml[189,5704+6]..[202,6049+16])
                            Pexp_apply
                            expression (src/ppx.ml[189,5704+7]..[189,5704+20])
                              Pexp_ident "print_endline" (src/ppx.ml[189,5704+7]..[189,5704+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[189,5704+21]..[202,6049+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[189,5704+22]..[189,5704+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[189,5704+22]..[189,5704+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[189,5704+37]..[202,6049+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[190,5743+11]..[190,5743+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[190,5743+12]..[190,5743+36]),None)
                                          expression (src/ppx.ml[191,5782+15]..[191,5782+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[191,5782+15]..[191,5782+23])
                                          expression (src/ppx.ml[192,5807+15]..[192,5807+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[192,5807+16]..[192,5807+20]),None)
                                          expression (src/ppx.ml[193,5830+15]..[193,5830+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[193,5830+15]..[193,5830+23])
                                          expression (src/ppx.ml[194,5855+15]..[194,5855+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[194,5855+16]..[194,5855+20]),None)
                                          expression (src/ppx.ml[195,5878+15]..[195,5878+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[195,5878+15]..[195,5878+23])
                                          expression (src/ppx.ml[196,5903+15]..[196,5903+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[196,5903+16]..[196,5903+19]),None)
                                          expression (src/ppx.ml[197,5925+15]..[197,5925+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[197,5925+15]..[197,5925+22])
                                          expression (src/ppx.ml[198,5949+15]..[198,5949+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[198,5949+16]..[198,5949+19]),None)
                                          expression (src/ppx.ml[199,5971+15]..[199,5971+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[199,5971+15]..[199,5971+22])
                                          expression (src/ppx.ml[200,5995+15]..[200,5995+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[200,5995+16]..[200,5995+21]),None)
                                          expression (src/ppx.ml[201,6019+15]..[201,6019+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[201,6019+15]..[201,6019+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[203,6067+6]..[204,6128+8])
                            Pexp_sequence
                            expression (src/ppx.ml[203,6067+6]..[203,6067+59])
                              Pexp_apply
                              expression (src/ppx.ml[203,6067+7]..[203,6067+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[203,6067+7]..[203,6067+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[203,6067+57]..[203,6067+58])
                                    Pexp_ident "t" (src/ppx.ml[203,6067+57]..[203,6067+58])
                              ]
                            expression (src/ppx.ml[204,6128+6]..[204,6128+8])
                              Pexp_construct "()" (src/ppx.ml[204,6128+6]..[204,6128+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[206,6140+0]..[217,6537+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6140+4]..[206,6140+16])
          Ppat_var "process_kind" (src/ppx.ml[206,6140+4]..[206,6140+16])
        expression (src/ppx.ml[206,6140+16]..[217,6537+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[206,6140+16]..[206,6140+19])
            Ppat_var "x" (src/ppx.ml[206,6140+17]..[206,6140+18])
          expression (src/ppx.ml[207,6162+2]..[217,6537+77])
            Pexp_match
            expression (src/ppx.ml[207,6162+8]..[207,6162+9])
              Pexp_ident "x" (src/ppx.ml[207,6162+8]..[207,6162+9])
            [
              <case>
                pattern (src/ppx.ml[209,6199+4]..[209,6199+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[209,6199+4]..[209,6199+18])
                  None
                expression (src/ppx.ml[209,6199+23]..[209,6199+81])
                  Pexp_apply
                  expression (src/ppx.ml[209,6199+24]..[209,6199+37])
                    Pexp_ident "print_endline" (src/ppx.ml[209,6199+24]..[209,6199+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6199+38]..[209,6199+80])
                        Pexp_apply
                        expression (src/ppx.ml[209,6199+39]..[209,6199+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[209,6199+39]..[209,6199+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[209,6199+54]..[209,6199+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6199+56]..[209,6199+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[210,6281+4]..[210,6281+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[210,6281+4]..[210,6281+17])
                  Some
                    []
                    pattern (src/ppx.ml[210,6281+18]..[210,6281+19])
                      Ppat_var "a" (src/ppx.ml[210,6281+18]..[210,6281+19])
                expression (src/ppx.ml[211,6304+4]..[212,6363+65])
                  Pexp_sequence
                  expression (src/ppx.ml[211,6304+4]..[211,6304+57])
                    Pexp_apply
                    expression (src/ppx.ml[211,6304+5]..[211,6304+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[211,6304+5]..[211,6304+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[211,6304+55]..[211,6304+56])
                          Pexp_ident "a" (src/ppx.ml[211,6304+55]..[211,6304+56])
                    ]
                  expression (src/ppx.ml[212,6363+4]..[212,6363+65])
                    Pexp_apply
                    expression (src/ppx.ml[212,6363+5]..[212,6363+18])
                      Pexp_ident "print_endline" (src/ppx.ml[212,6363+5]..[212,6363+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[212,6363+19]..[212,6363+64])
                          Pexp_apply
                          expression (src/ppx.ml[212,6363+20]..[212,6363+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[212,6363+20]..[212,6363+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[212,6363+35]..[212,6363+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[212,6363+36]..[212,6363+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6363+37]..[212,6363+57]),None)
                                  expression (src/ppx.ml[212,6363+61]..[212,6363+62])
                                    Pexp_ident "a" (src/ppx.ml[212,6363+61]..[212,6363+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[215,6476+5]..[215,6476+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[215,6476+5]..[215,6476+17])
                  Some
                    []
                    pattern (src/ppx.ml[215,6476+18]..[215,6476+19])
                      Ppat_var "a" (src/ppx.ml[215,6476+18]..[215,6476+19])
                expression (src/ppx.ml[216,6504+5]..[216,6504+32])
                  Pexp_apply
                  expression (src/ppx.ml[216,6504+5]..[216,6504+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[216,6504+5]..[216,6504+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[216,6504+29]..[216,6504+32])
                        Pexp_ident "a" (src/ppx.ml[216,6504+30]..[216,6504+31])
                  ]
              <case>
                pattern (src/ppx.ml[217,6537+5]..[217,6537+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[217,6537+5]..[217,6537+15])
                  None
                expression (src/ppx.ml[217,6537+19]..[217,6537+77])
                  Pexp_apply
                  expression (src/ppx.ml[217,6537+20]..[217,6537+33])
                    Pexp_ident "print_endline" (src/ppx.ml[217,6537+20]..[217,6537+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[217,6537+34]..[217,6537+76])
                        Pexp_apply
                        expression (src/ppx.ml[217,6537+35]..[217,6537+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[217,6537+35]..[217,6537+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[217,6537+50]..[217,6537+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6537+52]..[217,6537+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6616+0]..[240,7622+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6616+4]..[219,6616+19])
          Ppat_var "print_type_decl" (src/ppx.ml[219,6616+4]..[219,6616+19])
        expression (src/ppx.ml[219,6616+19]..[240,7622+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6616+19]..[219,6616+22])
            Ppat_var "x" (src/ppx.ml[219,6616+20]..[219,6616+21])
          expression (src/ppx.ml[220,6641+2]..[240,7622+38])
            Pexp_match
            expression (src/ppx.ml[220,6641+8]..[220,6641+9])
              Pexp_ident "x" (src/ppx.ml[220,6641+8]..[220,6641+9])
            [
              <case>
                pattern (src/ppx.ml[221,6656+4]..[230,7037+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[222,6662+6]..[222,6662+16]) ghost
                      pattern (src/ppx.ml[222,6662+6]..[222,6662+16])
                        Ppat_var "ptype_name" (src/ppx.ml[222,6662+6]..[222,6662+16])
                    "ptype_params" (src/ppx.ml[223,6699+6]..[223,6699+18]) ghost
                      pattern (src/ppx.ml[223,6699+6]..[223,6699+18])
                        Ppat_var "ptype_params" (src/ppx.ml[223,6699+6]..[223,6699+18])
                    "ptype_cstrs" (src/ppx.ml[224,6771+6]..[224,6771+17]) ghost
                      pattern (src/ppx.ml[224,6771+6]..[224,6771+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[224,6771+6]..[224,6771+17])
                    "ptype_kind" (src/ppx.ml[225,6840+6]..[225,6840+16]) ghost
                      pattern (src/ppx.ml[225,6840+6]..[225,6840+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[225,6840+6]..[225,6840+16])
                    "ptype_private" (src/ppx.ml[226,6877+6]..[226,6877+19]) ghost
                      pattern (src/ppx.ml[226,6877+6]..[226,6877+19])
                        Ppat_var "ptype_private" (src/ppx.ml[226,6877+6]..[226,6877+19])
                    "ptype_manifest" (src/ppx.ml[227,6918+6]..[227,6918+20]) ghost
                      pattern (src/ppx.ml[227,6918+6]..[227,6918+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[227,6918+6]..[227,6918+20])
                    "ptype_attributes" (src/ppx.ml[228,6965+6]..[228,6965+22]) ghost
                      pattern (src/ppx.ml[228,6965+6]..[228,6965+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[228,6965+6]..[228,6965+22])
                    "ptype_loc" (src/ppx.ml[229,7006+6]..[229,7006+15]) ghost
                      pattern (src/ppx.ml[229,7006+6]..[229,7006+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[229,7006+6]..[229,7006+15])
                  ]
                expression (src/ppx.ml[231,7046+4]..[240,7622+38])
                  Pexp_sequence
                  expression (src/ppx.ml[231,7046+4]..[231,7046+69])
                    Pexp_apply
                    expression (src/ppx.ml[231,7046+5]..[231,7046+18])
                      Pexp_ident "print_endline" (src/ppx.ml[231,7046+5]..[231,7046+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[231,7046+19]..[231,7046+68])
                          Pexp_apply
                          expression (src/ppx.ml[231,7046+20]..[231,7046+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[231,7046+20]..[231,7046+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[231,7046+35]..[231,7046+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[231,7046+36]..[231,7046+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[231,7046+37]..[231,7046+53]),None)
                                  expression (src/ppx.ml[231,7046+56]..[231,7046+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[231,7046+56]..[231,7046+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[232,7117+4]..[240,7622+38])
                    Pexp_sequence
                    expression (src/ppx.ml[232,7117+4]..[232,7117+72])
                      Pexp_apply
                      expression (src/ppx.ml[232,7117+5]..[232,7117+18])
                        Pexp_ident "print_endline" (src/ppx.ml[232,7117+5]..[232,7117+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[232,7117+19]..[232,7117+71])
                            Pexp_apply
                            expression (src/ppx.ml[232,7117+20]..[232,7117+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[232,7117+20]..[232,7117+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[232,7117+35]..[232,7117+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[232,7117+36]..[232,7117+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[232,7117+37]..[232,7117+54]),None)
                                    expression (src/ppx.ml[232,7117+57]..[232,7117+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[232,7117+57]..[232,7117+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[233,7191+4]..[240,7622+38])
                      Pexp_sequence
                      expression (src/ppx.ml[233,7191+4]..[233,7191+66])
                        Pexp_apply
                        expression (src/ppx.ml[233,7191+5]..[233,7191+18])
                          Pexp_ident "print_endline" (src/ppx.ml[233,7191+5]..[233,7191+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[233,7191+19]..[233,7191+65])
                              Pexp_apply
                              expression (src/ppx.ml[233,7191+20]..[233,7191+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[233,7191+20]..[233,7191+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[233,7191+35]..[233,7191+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[233,7191+36]..[233,7191+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[233,7191+37]..[233,7191+49]),None)
                                      expression (src/ppx.ml[233,7191+52]..[233,7191+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[233,7191+52]..[233,7191+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7259+4]..[240,7622+38])
                        Pexp_sequence
                        expression (src/ppx.ml[234,7259+4]..[234,7259+63])
                          Pexp_apply
                          expression (src/ppx.ml[234,7259+5]..[234,7259+18])
                            Pexp_ident "print_endline" (src/ppx.ml[234,7259+5]..[234,7259+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[234,7259+19]..[234,7259+62])
                                Pexp_apply
                                expression (src/ppx.ml[234,7259+20]..[234,7259+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[234,7259+20]..[234,7259+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[234,7259+35]..[234,7259+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[234,7259+36]..[234,7259+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[234,7259+37]..[234,7259+48]),None)
                                        expression (src/ppx.ml[234,7259+50]..[234,7259+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[234,7259+50]..[234,7259+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7324+4]..[240,7622+38])
                          Pexp_sequence
                          expression (src/ppx.ml[235,7324+4]..[235,7324+29])
                            Pexp_apply
                            expression (src/ppx.ml[235,7324+5]..[235,7324+17])
                              Pexp_ident "process_kind" (src/ppx.ml[235,7324+5]..[235,7324+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[235,7324+18]..[235,7324+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[235,7324+18]..[235,7324+28])
                            ]
                          expression (src/ppx.ml[236,7355+4]..[240,7622+38])
                            Pexp_apply
                            expression (src/ppx.ml[236,7355+5]..[236,7355+18])
                              Pexp_ident "print_endline" (src/ppx.ml[236,7355+5]..[236,7355+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[236,7355+19]..[240,7622+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[236,7355+20]..[236,7355+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[236,7355+20]..[236,7355+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[236,7355+35]..[240,7622+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[236,7355+36]..[236,7355+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[236,7355+37]..[236,7355+51]),None)
                                          expression (src/ppx.ml[236,7355+55]..[236,7355+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[236,7355+55]..[236,7355+68])
                                          expression (src/ppx.ml[237,7425+36]..[237,7425+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[237,7425+37]..[237,7425+51]),None)
                                          expression (src/ppx.ml[237,7425+54]..[237,7425+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[237,7425+54]..[237,7425+68])
                                          expression (src/ppx.ml[238,7495+36]..[238,7495+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[238,7495+37]..[238,7495+47]),None)
                                          expression (src/ppx.ml[238,7495+50]..[238,7495+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[238,7495+50]..[238,7495+66])
                                          expression (src/ppx.ml[239,7563+36]..[239,7563+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[239,7563+37]..[239,7563+46]),None)
                                          expression (src/ppx.ml[239,7563+49]..[239,7563+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[239,7563+49]..[239,7563+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[242,7666+0]..[248,7801+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7666+8]..[242,7666+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[242,7666+8]..[242,7666+30])
        expression (src/ppx.ml[242,7666+30]..[248,7801+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[242,7666+30]..[242,7666+33])
            Ppat_var "x" (src/ppx.ml[242,7666+31]..[242,7666+32])
          expression (src/ppx.ml[243,7702+2]..[248,7801+6])
            Pexp_match
            expression (src/ppx.ml[243,7702+8]..[243,7702+9])
              Pexp_ident "x" (src/ppx.ml[243,7702+8]..[243,7702+9])
            [
              <case>
                pattern (src/ppx.ml[244,7717+4]..[244,7717+6])
                  Ppat_construct "[]" (src/ppx.ml[244,7717+4]..[244,7717+6])
                  None
                expression (src/ppx.ml[244,7717+10]..[244,7717+12])
                  Pexp_construct "()" (src/ppx.ml[244,7717+10]..[244,7717+12])
                  None
              <case>
                pattern (src/ppx.ml[245,7730+4]..[245,7730+10])
                  Ppat_construct "::" (src/ppx.ml[245,7730+6]..[245,7730+8])
                  Some
                    []
                    pattern (src/ppx.ml[245,7730+4]..[245,7730+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[245,7730+4]..[245,7730+5])
                          Ppat_var "h" (src/ppx.ml[245,7730+4]..[245,7730+5])
                        pattern (src/ppx.ml[245,7730+9]..[245,7730+10])
                          Ppat_var "t" (src/ppx.ml[245,7730+9]..[245,7730+10])
                      ]
                expression (src/ppx.ml[246,7744+4]..[248,7801+6])
                  Pexp_sequence
                  expression (src/ppx.ml[246,7744+4]..[246,7744+23])
                    Pexp_apply
                    expression (src/ppx.ml[246,7744+5]..[246,7744+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[246,7744+5]..[246,7744+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[246,7744+21]..[246,7744+22])
                          Pexp_ident "h" (src/ppx.ml[246,7744+21]..[246,7744+22])
                    ]
                  expression (src/ppx.ml[247,7769+4]..[248,7801+6])
                    Pexp_sequence
                    expression (src/ppx.ml[247,7769+4]..[247,7769+30])
                      Pexp_apply
                      expression (src/ppx.ml[247,7769+5]..[247,7769+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[247,7769+5]..[247,7769+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[247,7769+28]..[247,7769+29])
                            Pexp_ident "t" (src/ppx.ml[247,7769+28]..[247,7769+29])
                      ]
                    expression (src/ppx.ml[248,7801+4]..[248,7801+6])
                      Pexp_construct "()" (src/ppx.ml[248,7801+4]..[248,7801+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[250,7813+0]..[276,9777+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7813+4]..[250,7813+13])
          Ppat_var "printdesc" (src/ppx.ml[250,7813+4]..[250,7813+13])
        expression (src/ppx.ml[250,7813+13]..[276,9777+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[250,7813+13]..[250,7813+37])
            Ppat_constraint
            pattern (src/ppx.ml[250,7813+14]..[250,7813+15])
              Ppat_var "x" (src/ppx.ml[250,7813+14]..[250,7813+15])
            core_type (src/ppx.ml[250,7813+17]..[250,7813+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[250,7813+17]..[250,7813+36])
              []
          expression (src/ppx.ml[250,7813+38]..[276,9777+128])
            Pexp_constraint
            expression (src/ppx.ml[251,7859+2]..[276,9777+128])
              Pexp_sequence
              expression (src/ppx.ml[251,7859+2]..[251,7859+68])
                Pexp_apply
                expression (src/ppx.ml[251,7859+3]..[251,7859+16])
                  Pexp_ident "print_endline" (src/ppx.ml[251,7859+3]..[251,7859+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[251,7859+17]..[251,7859+67])
                      Pexp_apply
                      expression (src/ppx.ml[251,7859+18]..[251,7859+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[251,7859+18]..[251,7859+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7859+33]..[251,7859+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[251,7859+34]..[251,7859+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7859+35]..[251,7859+61]),None)
                              expression (src/ppx.ml[251,7859+64]..[251,7859+65])
                                Pexp_ident "x" (src/ppx.ml[251,7859+64]..[251,7859+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[252,7929+2]..[276,9777+128])
                Pexp_match
                expression (src/ppx.ml[252,7929+8]..[252,7929+9])
                  Pexp_ident "x" (src/ppx.ml[252,7929+8]..[252,7929+9])
                [
                  <case>
                    pattern (src/ppx.ml[253,7944+4]..[253,7944+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[253,7944+4]..[253,7944+13])
                      Some
                        []
                        pattern (src/ppx.ml[253,7944+14]..[253,7944+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,7944+15]..[253,7944+25])
                              Ppat_var "expression" (src/ppx.ml[253,7944+15]..[253,7944+25])
                            pattern (src/ppx.ml[253,7944+26]..[253,7944+36])
                              Ppat_var "attributes" (src/ppx.ml[253,7944+26]..[253,7944+36])
                          ]
                    expression (src/ppx.ml[253,7944+41]..[253,7944+117])
                      Pexp_apply
                      expression (src/ppx.ml[253,7944+42]..[253,7944+55])
                        Pexp_ident "print_endline" (src/ppx.ml[253,7944+42]..[253,7944+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7944+56]..[253,7944+116])
                            Pexp_apply
                            expression (src/ppx.ml[253,7944+57]..[253,7944+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,7944+57]..[253,7944+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7944+72]..[253,7944+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,7944+73]..[253,7944+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7944+74]..[253,7944+90]),None)
                                    expression (src/ppx.ml[253,7944+93]..[253,7944+103])
                                      Pexp_ident "expression" (src/ppx.ml[253,7944+93]..[253,7944+103])
                                    expression (src/ppx.ml[253,7944+104]..[253,7944+114])
                                      Pexp_ident "attributes" (src/ppx.ml[253,7944+104]..[253,7944+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8082+4]..[255,8082+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[255,8082+4]..[255,8082+14])
                      Some
                        []
                        pattern (src/ppx.ml[255,8082+15]..[255,8082+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8082+16]..[255,8082+24])
                              Ppat_var "rec_flag" (src/ppx.ml[255,8082+16]..[255,8082+24])
                            pattern (src/ppx.ml[255,8082+26]..[255,8082+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[255,8082+26]..[255,8082+44])
                          ]
                    expression (src/ppx.ml[255,8082+48]..[256,8216+48])
                      Pexp_sequence
                      expression (src/ppx.ml[255,8082+48]..[255,8082+132])
                        Pexp_apply
                        expression (src/ppx.ml[255,8082+49]..[255,8082+62])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8082+49]..[255,8082+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8082+63]..[255,8082+131])
                              Pexp_apply
                              expression (src/ppx.ml[255,8082+64]..[255,8082+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8082+64]..[255,8082+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8082+79]..[255,8082+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8082+80]..[255,8082+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8082+81]..[255,8082+98]),None)
                                      expression (src/ppx.ml[255,8082+101]..[255,8082+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8082+101]..[255,8082+109])
                                      expression (src/ppx.ml[255,8082+111]..[255,8082+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[255,8082+111]..[255,8082+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[256,8216+4]..[256,8216+48])
                        Pexp_apply
                        expression (src/ppx.ml[256,8216+4]..[256,8216+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[256,8216+4]..[256,8216+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[256,8216+28]..[256,8216+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[256,8216+29]..[256,8216+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[257,8265+4]..[257,8265+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[257,8265+4]..[257,8265+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8265+19]..[257,8265+36])
                          Ppat_var "value_description" (src/ppx.ml[257,8265+19]..[257,8265+36])
                    expression (src/ppx.ml[257,8265+39]..[257,8265+116])
                      Pexp_apply
                      expression (src/ppx.ml[257,8265+40]..[257,8265+53])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8265+40]..[257,8265+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8265+54]..[257,8265+115])
                            Pexp_apply
                            expression (src/ppx.ml[257,8265+55]..[257,8265+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8265+55]..[257,8265+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8265+70]..[257,8265+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8265+71]..[257,8265+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8265+72]..[257,8265+93]),None)
                                    expression (src/ppx.ml[257,8265+96]..[257,8265+113])
                                      Pexp_ident "value_description" (src/ppx.ml[257,8265+96]..[257,8265+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8383+4]..[259,8383+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[259,8383+4]..[259,8383+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8383+14]..[259,8383+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[259,8383+15]..[259,8383+23])
                              Ppat_var "rec_flag" (src/ppx.ml[259,8383+15]..[259,8383+23])
                            pattern (src/ppx.ml[259,8383+25]..[259,8383+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[259,8383+25]..[259,8383+46])
                          ]
                    expression (src/ppx.ml[261,8462+4]..[262,8513+90])
                      Pexp_sequence
                      expression (src/ppx.ml[261,8462+4]..[261,8462+49])
                        Pexp_apply
                        expression (src/ppx.ml[261,8462+4]..[261,8462+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[261,8462+4]..[261,8462+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[261,8462+26]..[261,8462+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[261,8462+27]..[261,8462+48])
                        ]
                      expression (src/ppx.ml[262,8513+4]..[262,8513+90])
                        Pexp_apply
                        expression (src/ppx.ml[262,8513+5]..[262,8513+18])
                          Pexp_ident "print_endline" (src/ppx.ml[262,8513+5]..[262,8513+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[262,8513+19]..[262,8513+89])
                              Pexp_apply
                              expression (src/ppx.ml[262,8513+20]..[262,8513+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[262,8513+20]..[262,8513+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[262,8513+35]..[262,8513+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[262,8513+36]..[262,8513+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8513+37]..[262,8513+53]),None)
                                      expression (src/ppx.ml[262,8513+56]..[262,8513+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[262,8513+56]..[262,8513+64])
                                      expression (src/ppx.ml[262,8513+66]..[262,8513+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[262,8513+66]..[262,8513+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[265,8606+4]..[265,8606+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[265,8606+4]..[265,8606+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8606+17]..[265,8606+31])
                          Ppat_var "type_extension" (src/ppx.ml[265,8606+17]..[265,8606+31])
                    expression (src/ppx.ml[265,8606+34]..[265,8606+105])
                      Pexp_apply
                      expression (src/ppx.ml[265,8606+35]..[265,8606+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8606+35]..[265,8606+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8606+49]..[265,8606+104])
                            Pexp_apply
                            expression (src/ppx.ml[265,8606+50]..[265,8606+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8606+50]..[265,8606+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8606+65]..[265,8606+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8606+66]..[265,8606+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8606+67]..[265,8606+85]),None)
                                    expression (src/ppx.ml[265,8606+88]..[265,8606+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[265,8606+88]..[265,8606+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8712+4]..[266,8712+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[266,8712+4]..[266,8712+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8712+19]..[266,8712+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[266,8712+19]..[266,8712+40])
                    expression (src/ppx.ml[266,8712+43]..[266,8712+124])
                      Pexp_apply
                      expression (src/ppx.ml[266,8712+44]..[266,8712+57])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8712+44]..[266,8712+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8712+58]..[266,8712+123])
                            Pexp_apply
                            expression (src/ppx.ml[266,8712+59]..[266,8712+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8712+59]..[266,8712+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8712+74]..[266,8712+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8712+75]..[266,8712+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8712+76]..[266,8712+97]),None)
                                    expression (src/ppx.ml[266,8712+100]..[266,8712+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[266,8712+100]..[266,8712+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,8837+4]..[267,8837+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[267,8837+4]..[267,8837+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8837+17]..[267,8837+31])
                          Ppat_var "module_binding" (src/ppx.ml[267,8837+17]..[267,8837+31])
                    expression (src/ppx.ml[267,8837+34]..[267,8837+104])
                      Pexp_apply
                      expression (src/ppx.ml[267,8837+35]..[267,8837+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8837+35]..[267,8837+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8837+49]..[267,8837+103])
                            Pexp_apply
                            expression (src/ppx.ml[267,8837+50]..[267,8837+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8837+50]..[267,8837+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8837+65]..[267,8837+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8837+66]..[267,8837+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8837+67]..[267,8837+85]),None)
                                    expression (src/ppx.ml[267,8837+87]..[267,8837+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[267,8837+87]..[267,8837+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8942+4]..[268,8942+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[268,8942+4]..[268,8942+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8942+20]..[268,8942+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[268,8942+20]..[268,8942+39])
                    expression (src/ppx.ml[268,8942+42]..[268,8942+121])
                      Pexp_apply
                      expression (src/ppx.ml[268,8942+43]..[268,8942+56])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8942+43]..[268,8942+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8942+57]..[268,8942+120])
                            Pexp_apply
                            expression (src/ppx.ml[268,8942+58]..[268,8942+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8942+58]..[268,8942+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8942+73]..[268,8942+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8942+74]..[268,8942+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8942+75]..[268,8942+96]),None)
                                    expression (src/ppx.ml[268,8942+99]..[268,8942+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[268,8942+99]..[268,8942+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9064+4]..[269,9064+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[269,9064+4]..[269,9064+16])
                      Some
                        []
                        pattern (src/ppx.ml[269,9064+17]..[269,9064+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[269,9064+17]..[269,9064+40])
                    expression (src/ppx.ml[269,9064+43]..[269,9064+124])
                      Pexp_apply
                      expression (src/ppx.ml[269,9064+44]..[269,9064+57])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9064+44]..[269,9064+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9064+58]..[269,9064+123])
                            Pexp_apply
                            expression (src/ppx.ml[269,9064+59]..[269,9064+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9064+59]..[269,9064+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9064+74]..[269,9064+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9064+75]..[269,9064+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9064+76]..[269,9064+95]),None)
                                    expression (src/ppx.ml[269,9064+98]..[269,9064+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[269,9064+98]..[269,9064+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9206+4]..[271,9206+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[271,9206+4]..[271,9206+13])
                      Some
                        []
                        pattern (src/ppx.ml[271,9206+14]..[271,9206+30])
                          Ppat_var "open_description" (src/ppx.ml[271,9206+14]..[271,9206+30])
                    expression (src/ppx.ml[271,9206+33]..[271,9206+103])
                      Pexp_apply
                      expression (src/ppx.ml[271,9206+34]..[271,9206+47])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9206+34]..[271,9206+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9206+48]..[271,9206+102])
                            Pexp_apply
                            expression (src/ppx.ml[271,9206+49]..[271,9206+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9206+49]..[271,9206+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9206+64]..[271,9206+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9206+65]..[271,9206+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[271,9206+66]..[271,9206+81]),None)
                                    expression (src/ppx.ml[271,9206+84]..[271,9206+100])
                                      Pexp_ident "open_description" (src/ppx.ml[271,9206+84]..[271,9206+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9310+4]..[272,9310+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[272,9310+4]..[272,9310+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,9310+15]..[272,9310+36])
                          Ppat_var "class_declarations" (src/ppx.ml[272,9310+16]..[272,9310+34])
                    expression (src/ppx.ml[272,9310+39]..[272,9310+113])
                      Pexp_apply
                      expression (src/ppx.ml[272,9310+40]..[272,9310+53])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9310+40]..[272,9310+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9310+54]..[272,9310+112])
                            Pexp_apply
                            expression (src/ppx.ml[272,9310+55]..[272,9310+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9310+55]..[272,9310+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9310+70]..[272,9310+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9310+71]..[272,9310+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9310+72]..[272,9310+89]),None)
                                    expression (src/ppx.ml[272,9310+92]..[272,9310+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[272,9310+92]..[272,9310+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9424+4]..[273,9424+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[273,9424+4]..[273,9424+19])
                      Some
                        []
                        pattern (src/ppx.ml[273,9424+20]..[273,9424+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[273,9424+21]..[273,9424+44])
                    expression (src/ppx.ml[273,9424+48]..[273,9424+132])
                      Pexp_apply
                      expression (src/ppx.ml[273,9424+49]..[273,9424+62])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9424+49]..[273,9424+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9424+63]..[273,9424+131])
                            Pexp_apply
                            expression (src/ppx.ml[273,9424+64]..[273,9424+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9424+64]..[273,9424+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9424+79]..[273,9424+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9424+80]..[273,9424+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9424+81]..[273,9424+103]),None)
                                    expression (src/ppx.ml[273,9424+106]..[273,9424+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[273,9424+106]..[273,9424+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9557+4]..[274,9557+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[274,9557+4]..[274,9557+16])
                      Some
                        []
                        pattern (src/ppx.ml[274,9557+18]..[274,9557+39])
                          Ppat_var "include_declaration" (src/ppx.ml[274,9557+19]..[274,9557+38])
                    expression (src/ppx.ml[274,9557+41]..[274,9557+117])
                      Pexp_apply
                      expression (src/ppx.ml[274,9557+42]..[274,9557+55])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9557+42]..[274,9557+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9557+56]..[274,9557+116])
                            Pexp_apply
                            expression (src/ppx.ml[274,9557+57]..[274,9557+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9557+57]..[274,9557+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9557+72]..[274,9557+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9557+73]..[274,9557+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9557+74]..[274,9557+93]),None)
                                    expression (src/ppx.ml[274,9557+95]..[274,9557+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[274,9557+95]..[274,9557+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9675+4]..[275,9675+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[275,9675+4]..[275,9675+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,9675+19]..[275,9675+30])
                          Ppat_var "attribute" (src/ppx.ml[275,9675+20]..[275,9675+29])
                    expression (src/ppx.ml[275,9675+32]..[275,9675+101])
                      Pexp_apply
                      expression (src/ppx.ml[275,9675+33]..[275,9675+46])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9675+33]..[275,9675+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9675+47]..[275,9675+100])
                            Pexp_apply
                            expression (src/ppx.ml[275,9675+48]..[275,9675+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9675+48]..[275,9675+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9675+63]..[275,9675+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9675+64]..[275,9675+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9675+65]..[275,9675+86]),None)
                                    expression (src/ppx.ml[275,9675+89]..[275,9675+98])
                                      Pexp_ident "attribute" (src/ppx.ml[275,9675+89]..[275,9675+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9777+4]..[276,9777+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[276,9777+4]..[276,9777+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,9777+19]..[276,9777+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,9777+21]..[276,9777+30])
                              Ppat_var "extension" (src/ppx.ml[276,9777+21]..[276,9777+30])
                            pattern (src/ppx.ml[276,9777+33]..[276,9777+43])
                              Ppat_var "attributes" (src/ppx.ml[276,9777+33]..[276,9777+43])
                          ]
                    expression (src/ppx.ml[276,9777+46]..[276,9777+128])
                      Pexp_apply
                      expression (src/ppx.ml[276,9777+47]..[276,9777+60])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9777+47]..[276,9777+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9777+61]..[276,9777+127])
                            Pexp_apply
                            expression (src/ppx.ml[276,9777+62]..[276,9777+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9777+62]..[276,9777+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9777+77]..[276,9777+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9777+78]..[276,9777+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9777+79]..[276,9777+100]),None)
                                    expression (src/ppx.ml[276,9777+103]..[276,9777+112])
                                      Pexp_ident "extension" (src/ppx.ml[276,9777+103]..[276,9777+112])
                                    expression (src/ppx.ml[276,9777+115]..[276,9777+125])
                                      Pexp_ident "attributes" (src/ppx.ml[276,9777+115]..[276,9777+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[250,7813+39]..[250,7813+43])
              Ptyp_constr "unit" (src/ppx.ml[250,7813+39]..[250,7813+43])
              []
    ]
  structure_item (src/ppx.ml[278,9907+0]..[278,9907+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9907+4]..[278,9907+7])
          Ppat_var "foo" (src/ppx.ml[278,9907+4]..[278,9907+7])
        expression (src/ppx.ml[278,9907+10]..[278,9907+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[280,9922+0]..[288,10141+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9922+4]..[280,9922+12])
          Ppat_var "printone" (src/ppx.ml[280,9922+4]..[280,9922+12])
        expression (src/ppx.ml[280,9922+13]..[288,10141+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[280,9922+13]..[280,9922+34])
            Ppat_constraint
            pattern (src/ppx.ml[280,9922+14]..[280,9922+15])
              Ppat_var "x" (src/ppx.ml[280,9922+14]..[280,9922+15])
            core_type (src/ppx.ml[280,9922+18]..[280,9922+32])
              Ptyp_constr "structure_item" (src/ppx.ml[280,9922+18]..[280,9922+32])
              []
          expression (src/ppx.ml[280,9922+35]..[288,10141+6])
            Pexp_constraint
            expression (src/ppx.ml[281,9965+2]..[288,10141+6])
              Pexp_match
              expression (src/ppx.ml[281,9965+8]..[281,9965+9])
                Pexp_ident "x" (src/ppx.ml[281,9965+8]..[281,9965+9])
              [
                <case>
                  pattern (src/ppx.ml[282,9980+3]..[285,10030+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[283,9985+4]..[283,9985+13]) ghost
                        pattern (src/ppx.ml[283,9985+4]..[283,9985+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[283,9985+4]..[283,9985+13])
                    ]
                  expression (src/ppx.ml[287,10114+4]..[288,10141+6])
                    Pexp_sequence
                    expression (src/ppx.ml[287,10114+4]..[287,10114+25])
                      Pexp_apply
                      expression (src/ppx.ml[287,10114+5]..[287,10114+14])
                        Pexp_ident "printdesc" (src/ppx.ml[287,10114+5]..[287,10114+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,10114+15]..[287,10114+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[287,10114+15]..[287,10114+24])
                      ]
                    expression (src/ppx.ml[288,10141+4]..[288,10141+6])
                      Pexp_construct "()" (src/ppx.ml[288,10141+4]..[288,10141+6])
                      None
              ]
            core_type (src/ppx.ml[280,9922+36]..[280,9922+40])
              Ptyp_constr "unit" (src/ppx.ml[280,9922+36]..[280,9922+40])
              []
    ]
  structure_item (src/ppx.ml[294,10261+0]..[296,10342+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10261+4]..[294,10261+13])
          Ppat_var "printone2" (src/ppx.ml[294,10261+4]..[294,10261+13])
        expression (src/ppx.ml[294,10261+14]..[296,10342+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[294,10261+14]..[294,10261+15])
            Ppat_var "x" (src/ppx.ml[294,10261+14]..[294,10261+15])
          expression (src/ppx.ml[294,10261+16]..[296,10342+12])
            Pexp_constraint
            expression (src/ppx.ml[295,10285+2]..[296,10342+12])
              Pexp_sequence
              expression (src/ppx.ml[295,10285+2]..[295,10285+55])
                Pexp_apply
                expression (src/ppx.ml[295,10285+3]..[295,10285+16])
                  Pexp_ident "print_endline" (src/ppx.ml[295,10285+3]..[295,10285+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[295,10285+17]..[295,10285+54])
                      Pexp_apply
                      expression (src/ppx.ml[295,10285+18]..[295,10285+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[295,10285+18]..[295,10285+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[295,10285+33]..[295,10285+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[295,10285+34]..[295,10285+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[295,10285+35]..[295,10285+49]),None)
                              expression (src/ppx.ml[295,10285+51]..[295,10285+52])
                                Pexp_ident "x" (src/ppx.ml[295,10285+51]..[295,10285+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[296,10342+2]..[296,10342+12])
                Pexp_apply
                expression (src/ppx.ml[296,10342+2]..[296,10342+10])
                  Pexp_ident "printone" (src/ppx.ml[296,10342+2]..[296,10342+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[296,10342+11]..[296,10342+12])
                      Pexp_ident "x" (src/ppx.ml[296,10342+11]..[296,10342+12])
                ]
            core_type (src/ppx.ml[294,10261+17]..[294,10261+21])
              Ptyp_constr "unit" (src/ppx.ml[294,10261+17]..[294,10261+21])
              []
    ]
  structure_item (src/ppx.ml[298,10358+0]..[300,10389+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10358+4]..[298,10358+9])
          Ppat_var "proc1" (src/ppx.ml[298,10358+4]..[298,10358+9])
        expression (src/ppx.ml[298,10358+10]..[300,10389+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[298,10358+10]..[298,10358+11])
            Ppat_var "x" (src/ppx.ml[298,10358+10]..[298,10358+11])
          expression (src/ppx.ml[299,10374+2]..[300,10389+3])
            Pexp_sequence
            expression (src/ppx.ml[299,10374+2]..[299,10374+13])
              Pexp_apply
              expression (src/ppx.ml[299,10374+2]..[299,10374+11])
                Pexp_ident "printone2" (src/ppx.ml[299,10374+2]..[299,10374+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[299,10374+12]..[299,10374+13])
                    Pexp_ident "x" (src/ppx.ml[299,10374+12]..[299,10374+13])
              ]
            expression (src/ppx.ml[300,10389+2]..[300,10389+3])
              Pexp_ident "x" (src/ppx.ml[300,10389+2]..[300,10389+3])
    ]
  structure_item (src/ppx.ml[302,10394+0]..[305,10543+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10394+4]..[302,10394+9])
          Ppat_var "debug" (src/ppx.ml[302,10394+4]..[302,10394+9])
        expression (src/ppx.ml[302,10394+10]..[305,10543+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10394+10]..[302,10394+14])
            Ppat_var "proc" (src/ppx.ml[302,10394+10]..[302,10394+14])
          expression (src/ppx.ml[302,10394+15]..[305,10543+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[302,10394+15]..[302,10394+18])
              Ppat_var "lst" (src/ppx.ml[302,10394+15]..[302,10394+18])
            expression (src/ppx.ml[302,10394+19]..[305,10543+4])
              Pexp_constraint
              expression (src/ppx.ml[303,10422+2]..[305,10543+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[303,10422+6]..[303,10422+12])
                      Ppat_var "result" (src/ppx.ml[303,10422+6]..[303,10422+12])
                    expression (src/ppx.ml[303,10422+15]..[303,10422+32])
                      Pexp_apply
                      expression (src/ppx.ml[303,10422+15]..[303,10422+23])
                        Pexp_ident "List.map" (src/ppx.ml[303,10422+15]..[303,10422+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10422+24]..[303,10422+28])
                            Pexp_ident "proc" (src/ppx.ml[303,10422+24]..[303,10422+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10422+29]..[303,10422+32])
                            Pexp_ident "lst" (src/ppx.ml[303,10422+29]..[303,10422+32])
                      ]
                ]
                expression (src/ppx.ml[304,10458+2]..[305,10543+4])
                  Pexp_sequence
                  expression (src/ppx.ml[304,10458+2]..[304,10458+83])
                    Pexp_apply
                    expression (src/ppx.ml[304,10458+2]..[304,10458+11])
                      Pexp_ident "List.iter" (src/ppx.ml[304,10458+2]..[304,10458+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10458+12]..[304,10458+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[304,10458+17]..[304,10458+18])
                            Ppat_var "i" (src/ppx.ml[304,10458+17]..[304,10458+18])
                          expression (src/ppx.ml[304,10458+22]..[304,10458+75])
                            Pexp_apply
                            expression (src/ppx.ml[304,10458+22]..[304,10458+35])
                              Pexp_ident "print_endline" (src/ppx.ml[304,10458+22]..[304,10458+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[304,10458+36]..[304,10458+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[304,10458+37]..[304,10458+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[304,10458+37]..[304,10458+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[304,10458+52]..[304,10458+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[304,10458+53]..[304,10458+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10458+54]..[304,10458+69]),None)
                                          expression (src/ppx.ml[304,10458+72]..[304,10458+73])
                                            Pexp_ident "i" (src/ppx.ml[304,10458+72]..[304,10458+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10458+77]..[304,10458+83])
                          Pexp_ident "result" (src/ppx.ml[304,10458+77]..[304,10458+83])
                    ]
                  expression (src/ppx.ml[305,10543+2]..[305,10543+4])
                    Pexp_construct "()" (src/ppx.ml[305,10543+2]..[305,10543+4])
                    None
              core_type (src/ppx.ml[302,10394+21]..[302,10394+25])
                Ptyp_constr "unit" (src/ppx.ml[302,10394+21]..[302,10394+25])
                []
    ]
  structure_item (src/ppx.ml[307,10565+0]..[310,10689+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10565+4]..[307,10565+13])
          Ppat_var "transform" (src/ppx.ml[307,10565+4]..[307,10565+13])
        expression (src/ppx.ml[307,10565+14]..[310,10689+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10565+14]..[307,10565+15])
            Ppat_var "x" (src/ppx.ml[307,10565+14]..[307,10565+15])
          expression (src/ppx.ml[308,10620+2]..[310,10689+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10620+2]..[308,10620+48])
              Pexp_apply
              expression (src/ppx.ml[308,10620+3]..[308,10620+16])
                Pexp_ident "print_endline" (src/ppx.ml[308,10620+3]..[308,10620+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10620+17]..[308,10620+47])
                    Pexp_apply
                    expression (src/ppx.ml[308,10620+18]..[308,10620+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[308,10620+18]..[308,10620+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[308,10620+33]..[308,10620+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[308,10620+34]..[308,10620+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[308,10620+35]..[308,10620+42]),None)
                            expression (src/ppx.ml[308,10620+44]..[308,10620+45])
                              Pexp_ident "x" (src/ppx.ml[308,10620+44]..[308,10620+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[309,10670+2]..[310,10689+3])
              Pexp_sequence
              expression (src/ppx.ml[309,10670+2]..[309,10670+17])
                Pexp_apply
                expression (src/ppx.ml[309,10670+3]..[309,10670+8])
                  Pexp_ident "debug" (src/ppx.ml[309,10670+3]..[309,10670+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10670+9]..[309,10670+14])
                      Pexp_ident "proc1" (src/ppx.ml[309,10670+9]..[309,10670+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10670+15]..[309,10670+16])
                      Pexp_ident "x" (src/ppx.ml[309,10670+15]..[309,10670+16])
                ]
              expression (src/ppx.ml[310,10689+2]..[310,10689+3])
                Pexp_ident "x" (src/ppx.ml[310,10689+2]..[310,10689+3])
    ]
  structure_item (src/ppx.ml[312,10696+1]..[312,10696+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10696+5]..[312,10696+7])
          Ppat_construct "()" (src/ppx.ml[312,10696+5]..[312,10696+7])
          None
        expression (src/ppx.ml[312,10696+10]..[312,10696+69])
          Pexp_apply
          expression (src/ppx.ml[312,10696+10]..[312,10696+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[312,10696+10]..[312,10696+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[312,10696+47]..[312,10696+56])
                Pexp_ident "transform" (src/ppx.ml[312,10696+47]..[312,10696+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[312,10696+57]..[312,10696+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[312,10696+58]..[312,10696+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id x =
  (match x with
   | (longident, loc) ->
       print_endline (Batteries.dump ("DEBUG:process_id:", longident)) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_id a;
       process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

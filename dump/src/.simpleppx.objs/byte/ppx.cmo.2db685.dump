[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[76,2104+34])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+19])
          Ppat_var "process_id2" (src/ppx.ml[69,1879+8]..[69,1879+19])
        expression (src/ppx.ml[69,1879+19]..[76,2104+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+19]..[69,1879+32])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+20]..[69,1879+21])
              Ppat_var "x" (src/ppx.ml[69,1879+20]..[69,1879+21])
            core_type (src/ppx.ml[69,1879+22]..[69,1879+31])
              Ptyp_constr "longident" (src/ppx.ml[69,1879+22]..[69,1879+31])
              []
          expression (src/ppx.ml[70,1914+2]..[76,2104+34])
            Pexp_match
            expression (src/ppx.ml[70,1914+8]..[70,1914+9])
              Pexp_ident "x" (src/ppx.ml[70,1914+8]..[70,1914+9])
            [
              <case>
                pattern (src/ppx.ml[71,1929+4]..[71,1929+17])
                  Ppat_construct "Lident" (src/ppx.ml[71,1929+4]..[71,1929+10])
                  Some
                    []
                    pattern (src/ppx.ml[71,1929+11]..[71,1929+17])
                      Ppat_var "string" (src/ppx.ml[71,1929+11]..[71,1929+17])
                expression (src/ppx.ml[71,1929+21]..[71,1929+27])
                  Pexp_ident "string" (src/ppx.ml[71,1929+21]..[71,1929+27])
              <case>
                pattern (src/ppx.ml[72,1957+4]..[72,1957+28])
                  Ppat_construct "Ldot" (src/ppx.ml[72,1957+4]..[72,1957+8])
                  Some
                    []
                    pattern (src/ppx.ml[72,1957+9]..[72,1957+28])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[72,1957+10]..[72,1957+19])
                          Ppat_var "longident" (src/ppx.ml[72,1957+10]..[72,1957+19])
                        pattern (src/ppx.ml[72,1957+21]..[72,1957+27])
                          Ppat_var "string" (src/ppx.ml[72,1957+21]..[72,1957+27])
                      ]
                expression (src/ppx.ml[73,1989+4]..[73,1989+42])
                  Pexp_apply
                  expression (src/ppx.ml[73,1989+28]..[73,1989+29])
                    Pexp_ident "^" (src/ppx.ml[73,1989+28]..[73,1989+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[73,1989+4]..[73,1989+27])
                        Pexp_apply
                        expression (src/ppx.ml[73,1989+5]..[73,1989+16])
                          Pexp_ident "process_id2" (src/ppx.ml[73,1989+5]..[73,1989+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+17]..[73,1989+26])
                              Pexp_ident "longident" (src/ppx.ml[73,1989+17]..[73,1989+26])
                        ]
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[73,1989+30]..[73,1989+42])
                        Pexp_apply
                        expression (src/ppx.ml[73,1989+34]..[73,1989+35])
                          Pexp_ident "^" (src/ppx.ml[73,1989+34]..[73,1989+35])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+30]..[73,1989+33])
                              Pexp_constant PConst_string(".",(src/ppx.ml[73,1989+31]..[73,1989+32]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+36]..[73,1989+42])
                              Pexp_ident "string" (src/ppx.ml[73,1989+36]..[73,1989+42])
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[74,2032+4]..[74,2032+33])
                  Ppat_construct "Lapply" (src/ppx.ml[74,2032+4]..[74,2032+10])
                  Some
                    []
                    pattern (src/ppx.ml[74,2032+11]..[74,2032+33])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[74,2032+12]..[74,2032+21])
                          Ppat_var "longident" (src/ppx.ml[74,2032+12]..[74,2032+21])
                        pattern (src/ppx.ml[74,2032+22]..[74,2032+32])
                          Ppat_var "longident2" (src/ppx.ml[74,2032+22]..[74,2032+32])
                      ]
                expression (src/ppx.ml[75,2066+7]..[76,2104+34])
                  Pexp_apply
                  expression (src/ppx.ml[75,2066+32]..[75,2066+33])
                    Pexp_ident "^" (src/ppx.ml[75,2066+32]..[75,2066+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[75,2066+7]..[75,2066+30])
                        Pexp_apply
                        expression (src/ppx.ml[75,2066+8]..[75,2066+19])
                          Pexp_ident "process_id2" (src/ppx.ml[75,2066+8]..[75,2066+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2066+20]..[75,2066+29])
                              Pexp_ident "longident" (src/ppx.ml[75,2066+20]..[75,2066+29])
                        ]
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[75,2066+34]..[76,2104+34])
                        Pexp_apply
                        expression (src/ppx.ml[76,2104+7]..[76,2104+8])
                          Pexp_ident "^" (src/ppx.ml[76,2104+7]..[76,2104+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2066+34]..[75,2066+37])
                              Pexp_constant PConst_string(".",(src/ppx.ml[75,2066+35]..[75,2066+36]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[76,2104+9]..[76,2104+34])
                              Pexp_apply
                              expression (src/ppx.ml[76,2104+10]..[76,2104+21])
                                Pexp_ident "process_id2" (src/ppx.ml[76,2104+10]..[76,2104+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[76,2104+22]..[76,2104+32])
                                    Pexp_ident "longident2" (src/ppx.ml[76,2104+22]..[76,2104+32])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[78,2140+0]..[80,2193+31])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[78,2140+8]..[78,2140+18])
          Ppat_var "process_id" (src/ppx.ml[78,2140+8]..[78,2140+18])
        expression (src/ppx.ml[78,2140+18]..[80,2193+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[78,2140+18]..[78,2140+35])
            Ppat_constraint
            pattern (src/ppx.ml[78,2140+19]..[78,2140+20])
              Ppat_var "x" (src/ppx.ml[78,2140+19]..[78,2140+20])
            core_type (src/ppx.ml[78,2140+21]..[78,2140+34])
              Ptyp_constr "longident_loc" (src/ppx.ml[78,2140+21]..[78,2140+34])
              []
          expression (src/ppx.ml[79,2178+2]..[80,2193+31])
            Pexp_match
            expression (src/ppx.ml[79,2178+8]..[79,2178+9])
              Pexp_ident "x" (src/ppx.ml[79,2178+8]..[79,2178+9])
            [
              <case>
                pattern (src/ppx.ml[80,2193+4]..[80,2193+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[80,2193+5]..[80,2193+8]) ghost
                      pattern (src/ppx.ml[80,2193+5]..[80,2193+8])
                        Ppat_var "txt" (src/ppx.ml[80,2193+5]..[80,2193+8])
                  ]
                expression (src/ppx.ml[80,2193+14]..[80,2193+31])
                  Pexp_apply
                  expression (src/ppx.ml[80,2193+15]..[80,2193+26])
                    Pexp_ident "process_id2" (src/ppx.ml[80,2193+15]..[80,2193+26])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[80,2193+27]..[80,2193+30])
                        Pexp_ident "txt" (src/ppx.ml[80,2193+27]..[80,2193+30])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[85,2329+0]..[173,5286+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[85,2329+8]..[85,2329+27])
          Ppat_var "process_record_kind" (src/ppx.ml[85,2329+8]..[85,2329+27])
        expression (src/ppx.ml[85,2329+27]..[99,2813+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2329+27]..[85,2329+30])
            Ppat_var "x" (src/ppx.ml[85,2329+28]..[85,2329+29])
          expression (src/ppx.ml[86,2362+2]..[99,2813+47])
            Pexp_match
            expression (src/ppx.ml[86,2362+8]..[86,2362+9])
              Pexp_ident "x" (src/ppx.ml[86,2362+8]..[86,2362+9])
            [
              <case>
                pattern (src/ppx.ml[87,2377+4]..[93,2558+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[88,2383+5]..[88,2383+13]) ghost
                      pattern (src/ppx.ml[88,2383+5]..[88,2383+13])
                        Ppat_var "pld_name" (src/ppx.ml[88,2383+5]..[88,2383+13])
                    "pld_mutable" (src/ppx.ml[89,2416+5]..[89,2416+16]) ghost
                      pattern (src/ppx.ml[89,2416+5]..[89,2416+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[89,2416+5]..[89,2416+16])
                    "pld_type" (src/ppx.ml[90,2454+5]..[90,2454+13]) ghost
                      pattern (src/ppx.ml[90,2454+5]..[90,2454+13])
                        Ppat_var "pld_type" (src/ppx.ml[90,2454+5]..[90,2454+13])
                    "pld_loc" (src/ppx.ml[91,2486+5]..[91,2486+12]) ghost
                      pattern (src/ppx.ml[91,2486+5]..[91,2486+12])
                        Ppat_var "pld_loc" (src/ppx.ml[91,2486+5]..[91,2486+12])
                    "pld_attributes" (src/ppx.ml[92,2518+5]..[92,2518+19]) ghost
                      pattern (src/ppx.ml[92,2518+5]..[92,2518+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[92,2518+5]..[92,2518+19])
                  ]
                expression (src/ppx.ml[94,2566+4]..[99,2813+47])
                  Pexp_apply
                  expression (src/ppx.ml[94,2566+5]..[94,2566+18])
                    Pexp_ident "print_endline" (src/ppx.ml[94,2566+5]..[94,2566+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[94,2566+19]..[99,2813+46])
                        Pexp_apply
                        expression (src/ppx.ml[94,2566+20]..[94,2566+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[94,2566+20]..[94,2566+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[94,2566+35]..[99,2813+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[94,2566+36]..[94,2566+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[94,2566+37]..[94,2566+56]),None)
                                expression (src/ppx.ml[95,2627+36]..[95,2627+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[95,2627+36]..[95,2627+44])
                                expression (src/ppx.ml[96,2673+36]..[96,2673+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[96,2673+37]..[96,2673+44]),None)
                                expression (src/ppx.ml[97,2720+36]..[97,2720+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[97,2720+36]..[97,2720+47])
                                expression (src/ppx.ml[98,2769+36]..[98,2769+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[98,2769+37]..[98,2769+41]),None)
                                expression (src/ppx.ml[99,2813+36]..[99,2813+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[99,2813+36]..[99,2813+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[101,2865+0]..[101,2865+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[101,2865+0]..[101,2865+22])
        expression (src/ppx.ml[101,2865+23]..[147,4604+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[101,2865+23]..[101,2865+24])
            Ppat_var "x" (src/ppx.ml[101,2865+23]..[101,2865+24])
          expression (src/ppx.ml[102,2892+2]..[147,4604+65])
            Pexp_match
            expression (src/ppx.ml[102,2892+8]..[102,2892+9])
              Pexp_ident "x" (src/ppx.ml[102,2892+8]..[102,2892+9])
            [
              <case>
                pattern (src/ppx.ml[103,2907+4]..[103,2907+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[103,2907+4]..[103,2907+15])
                  Some
                    []
                    pattern (src/ppx.ml[103,2907+16]..[103,2907+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[103,2907+17]..[103,2907+18])
                          Ppat_var "a" (src/ppx.ml[103,2907+17]..[103,2907+18])
                        pattern (src/ppx.ml[103,2907+19]..[103,2907+20])
                          Ppat_var "b" (src/ppx.ml[103,2907+19]..[103,2907+20])
                      ]
                expression (src/ppx.ml[105,2978+4]..[114,3221+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[105,2978+8]..[105,2978+12])
                        Ppat_var "myid" (src/ppx.ml[105,2978+8]..[105,2978+12])
                      expression (src/ppx.ml[105,2978+15]..[105,2978+29])
                        Pexp_apply
                        expression (src/ppx.ml[105,2978+16]..[105,2978+26])
                          Pexp_ident "process_id" (src/ppx.ml[105,2978+16]..[105,2978+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2978+27]..[105,2978+28])
                              Pexp_ident "a" (src/ppx.ml[105,2978+27]..[105,2978+28])
                        ]
                  ]
                  expression (src/ppx.ml[106,3011+4]..[114,3221+22])
                    Pexp_sequence
                    expression (src/ppx.ml[106,3011+4]..[106,3011+30])
                      Pexp_apply
                      expression (src/ppx.ml[106,3011+5]..[106,3011+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[106,3011+5]..[106,3011+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[106,3011+28]..[106,3011+29])
                            Pexp_ident "b" (src/ppx.ml[106,3011+28]..[106,3011+29])
                      ]
                    expression (src/ppx.ml[108,3044+4]..[114,3221+22])
                      Pexp_sequence
                      expression (src/ppx.ml[108,3044+4]..[108,3044+46])
                        Pexp_apply
                        expression (src/ppx.ml[108,3044+4]..[108,3044+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[108,3044+4]..[108,3044+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[108,3044+18]..[108,3044+41])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[108,3044+19]..[108,3044+40]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[108,3044+42]..[108,3044+46])
                              Pexp_ident "myid" (src/ppx.ml[108,3044+42]..[108,3044+46])
                        ]
                      expression (src/ppx.ml[111,3131+4]..[114,3221+22])
                        Pexp_apply
                        expression (src/ppx.ml[111,3131+5]..[111,3131+18])
                          Pexp_ident "print_endline" (src/ppx.ml[111,3131+5]..[111,3131+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3131+19]..[114,3221+21])
                              Pexp_apply
                              expression (src/ppx.ml[111,3131+20]..[111,3131+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[111,3131+20]..[111,3131+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[111,3131+35]..[114,3221+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[112,3168+9]..[112,3168+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[112,3168+10]..[112,3168+28]),None)
                                      expression (src/ppx.ml[113,3199+9]..[113,3199+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[113,3199+10]..[113,3199+12]),None)
                                      expression (src/ppx.ml[113,3199+14]..[113,3199+15])
                                        Pexp_ident "a" (src/ppx.ml[113,3199+14]..[113,3199+15])
                                      expression (src/ppx.ml[113,3199+16]..[113,3199+20])
                                        Pexp_ident "myid" (src/ppx.ml[113,3199+16]..[113,3199+20])
                                      expression (src/ppx.ml[114,3221+9]..[114,3221+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[114,3221+10]..[114,3221+15]),None)
                                      expression (src/ppx.ml[114,3221+17]..[114,3221+18])
                                        Pexp_ident "b" (src/ppx.ml[114,3221+17]..[114,3221+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[116,3245+4]..[116,3245+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[116,3245+4]..[116,3245+14])
                  Some
                    []
                    pattern (src/ppx.ml[116,3245+15]..[116,3245+16])
                      Ppat_var "a" (src/ppx.ml[116,3245+15]..[116,3245+16])
                expression (src/ppx.ml[118,3293+4]..[118,3293+59])
                  Pexp_apply
                  expression (src/ppx.ml[118,3293+5]..[118,3293+18])
                    Pexp_ident "print_endline" (src/ppx.ml[118,3293+5]..[118,3293+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[118,3293+19]..[118,3293+58])
                        Pexp_apply
                        expression (src/ppx.ml[118,3293+20]..[118,3293+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[118,3293+20]..[118,3293+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[118,3293+35]..[118,3293+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[118,3293+37]..[118,3293+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3372+4]..[121,3372+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[121,3372+4]..[121,3372+12])
                  None
                expression (src/ppx.ml[121,3372+17]..[121,3372+69])
                  Pexp_apply
                  expression (src/ppx.ml[121,3372+18]..[121,3372+31])
                    Pexp_ident "print_endline" (src/ppx.ml[121,3372+18]..[121,3372+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[121,3372+32]..[121,3372+68])
                        Pexp_apply
                        expression (src/ppx.ml[121,3372+33]..[121,3372+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[121,3372+33]..[121,3372+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[121,3372+48]..[121,3372+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[121,3372+50]..[121,3372+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3442+4]..[122,3442+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[122,3442+4]..[122,3442+12])
                  Some
                    []
                    pattern (src/ppx.ml[122,3442+13]..[122,3442+17])
                      Ppat_var "name" (src/ppx.ml[122,3442+13]..[122,3442+17])
                expression (src/ppx.ml[122,3442+20]..[122,3442+80])
                  Pexp_apply
                  expression (src/ppx.ml[122,3442+21]..[122,3442+34])
                    Pexp_ident "print_endline" (src/ppx.ml[122,3442+21]..[122,3442+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[122,3442+35]..[122,3442+79])
                        Pexp_apply
                        expression (src/ppx.ml[122,3442+36]..[122,3442+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[122,3442+36]..[122,3442+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[122,3442+51]..[122,3442+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[122,3442+52]..[122,3442+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[122,3442+53]..[122,3442+68]),None)
                                expression (src/ppx.ml[122,3442+73]..[122,3442+77])
                                  Pexp_ident "name" (src/ppx.ml[122,3442+73]..[122,3442+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[123,3523+4]..[123,3523+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[123,3523+4]..[123,3523+14])
                  Some
                    []
                    pattern (src/ppx.ml[123,3523+15]..[123,3523+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[123,3523+16]..[123,3523+25])
                          Ppat_var "arg_label" (src/ppx.ml[123,3523+16]..[123,3523+25])
                        pattern (src/ppx.ml[123,3523+28]..[123,3523+37])
                          Ppat_var "core_type" (src/ppx.ml[123,3523+28]..[123,3523+37])
                        pattern (src/ppx.ml[123,3523+40]..[123,3523+50])
                          Ppat_var "core_type2" (src/ppx.ml[123,3523+40]..[123,3523+50])
                      ]
                expression (src/ppx.ml[124,3578+4]..[124,3578+61])
                  Pexp_apply
                  expression (src/ppx.ml[124,3578+5]..[124,3578+18])
                    Pexp_ident "print_endline" (src/ppx.ml[124,3578+5]..[124,3578+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[124,3578+19]..[124,3578+60])
                        Pexp_apply
                        expression (src/ppx.ml[124,3578+20]..[124,3578+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[124,3578+20]..[124,3578+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[124,3578+35]..[124,3578+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[124,3578+37]..[124,3578+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[126,3641+4]..[126,3641+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[126,3641+4]..[126,3641+15])
                  Some
                    []
                    pattern (src/ppx.ml[126,3641+16]..[126,3641+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[126,3641+17]..[126,3641+18])
                          Ppat_var "a" (src/ppx.ml[126,3641+17]..[126,3641+18])
                        pattern (src/ppx.ml[126,3641+19]..[126,3641+20])
                          Ppat_var "b" (src/ppx.ml[126,3641+19]..[126,3641+20])
                      ]
                expression (src/ppx.ml[128,3710+4]..[128,3710+60])
                  Pexp_apply
                  expression (src/ppx.ml[128,3710+5]..[128,3710+18])
                    Pexp_ident "print_endline" (src/ppx.ml[128,3710+5]..[128,3710+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[128,3710+19]..[128,3710+59])
                        Pexp_apply
                        expression (src/ppx.ml[128,3710+20]..[128,3710+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[128,3710+20]..[128,3710+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[128,3710+35]..[128,3710+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[128,3710+37]..[128,3710+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,3771+4]..[129,3771+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[129,3771+4]..[129,3771+14])
                  Some
                    []
                    pattern (src/ppx.ml[129,3771+15]..[129,3771+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[129,3771+16]..[129,3771+17])
                          Ppat_var "a" (src/ppx.ml[129,3771+16]..[129,3771+17])
                        pattern (src/ppx.ml[129,3771+18]..[129,3771+19])
                          Ppat_var "b" (src/ppx.ml[129,3771+18]..[129,3771+19])
                      ]
                expression (src/ppx.ml[131,3841+4]..[131,3841+60])
                  Pexp_apply
                  expression (src/ppx.ml[131,3841+5]..[131,3841+18])
                    Pexp_ident "print_endline" (src/ppx.ml[131,3841+5]..[131,3841+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[131,3841+19]..[131,3841+59])
                        Pexp_apply
                        expression (src/ppx.ml[131,3841+20]..[131,3841+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[131,3841+20]..[131,3841+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[131,3841+35]..[131,3841+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[131,3841+37]..[131,3841+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[132,3902+4]..[132,3902+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[132,3902+4]..[132,3902+14])
                  Some
                    []
                    pattern (src/ppx.ml[132,3902+15]..[132,3902+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[132,3902+16]..[132,3902+17])
                          Ppat_var "a" (src/ppx.ml[132,3902+16]..[132,3902+17])
                        pattern (src/ppx.ml[132,3902+18]..[132,3902+19])
                          Ppat_var "b" (src/ppx.ml[132,3902+18]..[132,3902+19])
                      ]
                expression (src/ppx.ml[134,3963+4]..[134,3963+60])
                  Pexp_apply
                  expression (src/ppx.ml[134,3963+5]..[134,3963+18])
                    Pexp_ident "print_endline" (src/ppx.ml[134,3963+5]..[134,3963+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[134,3963+19]..[134,3963+59])
                        Pexp_apply
                        expression (src/ppx.ml[134,3963+20]..[134,3963+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[134,3963+20]..[134,3963+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[134,3963+35]..[134,3963+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[134,3963+37]..[134,3963+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[135,4024+4]..[135,4024+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[135,4024+4]..[135,4024+16])
                  Some
                    []
                    pattern (src/ppx.ml[135,4024+17]..[135,4024+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4024+18]..[135,4024+19])
                          Ppat_var "a" (src/ppx.ml[135,4024+18]..[135,4024+19])
                        pattern (src/ppx.ml[135,4024+20]..[135,4024+21])
                          Ppat_var "b" (src/ppx.ml[135,4024+20]..[135,4024+21])
                        pattern (src/ppx.ml[135,4024+22]..[135,4024+23])
                          Ppat_var "c" (src/ppx.ml[135,4024+22]..[135,4024+23])
                      ]
                expression (src/ppx.ml[137,4114+4]..[137,4114+60])
                  Pexp_apply
                  expression (src/ppx.ml[137,4114+5]..[137,4114+18])
                    Pexp_ident "print_endline" (src/ppx.ml[137,4114+5]..[137,4114+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[137,4114+19]..[137,4114+59])
                        Pexp_apply
                        expression (src/ppx.ml[137,4114+20]..[137,4114+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[137,4114+20]..[137,4114+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[137,4114+35]..[137,4114+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[137,4114+37]..[137,4114+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[138,4175+4]..[138,4175+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[138,4175+4]..[138,4175+13])
                  Some
                    []
                    pattern (src/ppx.ml[138,4175+14]..[138,4175+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[138,4175+15]..[138,4175+16])
                          Ppat_var "a" (src/ppx.ml[138,4175+15]..[138,4175+16])
                        pattern (src/ppx.ml[138,4175+17]..[138,4175+18])
                          Ppat_var "b" (src/ppx.ml[138,4175+17]..[138,4175+18])
                      ]
                expression (src/ppx.ml[140,4239+4]..[140,4239+60])
                  Pexp_apply
                  expression (src/ppx.ml[140,4239+5]..[140,4239+18])
                    Pexp_ident "print_endline" (src/ppx.ml[140,4239+5]..[140,4239+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[140,4239+19]..[140,4239+59])
                        Pexp_apply
                        expression (src/ppx.ml[140,4239+20]..[140,4239+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[140,4239+20]..[140,4239+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[140,4239+35]..[140,4239+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[140,4239+37]..[140,4239+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[141,4300+4]..[141,4300+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[141,4300+4]..[141,4300+16])
                  Some
                    []
                    pattern (src/ppx.ml[141,4300+17]..[141,4300+18])
                      Ppat_var "a" (src/ppx.ml[141,4300+17]..[141,4300+18])
                expression (src/ppx.ml[143,4348+4]..[143,4348+62])
                  Pexp_apply
                  expression (src/ppx.ml[143,4348+5]..[143,4348+18])
                    Pexp_ident "print_endline" (src/ppx.ml[143,4348+5]..[143,4348+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[143,4348+19]..[143,4348+61])
                        Pexp_apply
                        expression (src/ppx.ml[143,4348+20]..[143,4348+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[143,4348+20]..[143,4348+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[143,4348+35]..[143,4348+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[143,4348+36]..[143,4348+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[143,4348+37]..[143,4348+55]),None)
                                expression (src/ppx.ml[143,4348+57]..[143,4348+58])
                                  Pexp_ident "a" (src/ppx.ml[143,4348+57]..[143,4348+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[146,4556+4]..[146,4556+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[146,4556+4]..[146,4556+18])
                  Some
                    []
                    pattern (src/ppx.ml[146,4556+19]..[146,4556+20])
                      Ppat_var "a" (src/ppx.ml[146,4556+19]..[146,4556+20])
                expression (src/ppx.ml[147,4604+4]..[147,4604+65])
                  Pexp_apply
                  expression (src/ppx.ml[147,4604+5]..[147,4604+18])
                    Pexp_ident "print_endline" (src/ppx.ml[147,4604+5]..[147,4604+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[147,4604+19]..[147,4604+64])
                        Pexp_apply
                        expression (src/ppx.ml[147,4604+20]..[147,4604+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[147,4604+20]..[147,4604+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[147,4604+35]..[147,4604+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[147,4604+36]..[147,4604+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[147,4604+37]..[147,4604+58]),None)
                                expression (src/ppx.ml[147,4604+60]..[147,4604+61])
                                  Pexp_ident "a" (src/ppx.ml[147,4604+60]..[147,4604+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[149,4674+2]..[149,4674+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[149,4674+2]..[149,4674+26])
        expression (src/ppx.ml[149,4674+26]..[155,4811+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[149,4674+26]..[149,4674+29])
            Ppat_var "x" (src/ppx.ml[149,4674+27]..[149,4674+28])
          expression (src/ppx.ml[150,4706+2]..[155,4811+6])
            Pexp_match
            expression (src/ppx.ml[150,4706+8]..[150,4706+9])
              Pexp_ident "x" (src/ppx.ml[150,4706+8]..[150,4706+9])
            [
              <case>
                pattern (src/ppx.ml[151,4721+4]..[151,4721+6])
                  Ppat_construct "[]" (src/ppx.ml[151,4721+4]..[151,4721+6])
                  None
                expression (src/ppx.ml[151,4721+10]..[151,4721+12])
                  Pexp_construct "()" (src/ppx.ml[151,4721+10]..[151,4721+12])
                  None
              <case>
                pattern (src/ppx.ml[152,4734+4]..[152,4734+10])
                  Ppat_construct "::" (src/ppx.ml[152,4734+6]..[152,4734+8])
                  Some
                    []
                    pattern (src/ppx.ml[152,4734+4]..[152,4734+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[152,4734+4]..[152,4734+5])
                          Ppat_var "h" (src/ppx.ml[152,4734+4]..[152,4734+5])
                        pattern (src/ppx.ml[152,4734+9]..[152,4734+10])
                          Ppat_var "t" (src/ppx.ml[152,4734+9]..[152,4734+10])
                      ]
                expression (src/ppx.ml[153,4748+4]..[155,4811+6])
                  Pexp_sequence
                  expression (src/ppx.ml[153,4748+4]..[153,4748+27])
                    Pexp_apply
                    expression (src/ppx.ml[153,4748+5]..[153,4748+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[153,4748+5]..[153,4748+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[153,4748+25]..[153,4748+26])
                          Pexp_ident "h" (src/ppx.ml[153,4748+25]..[153,4748+26])
                    ]
                  expression (src/ppx.ml[154,4777+4]..[155,4811+6])
                    Pexp_sequence
                    expression (src/ppx.ml[154,4777+4]..[154,4777+32])
                      Pexp_apply
                      expression (src/ppx.ml[154,4777+5]..[154,4777+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[154,4777+5]..[154,4777+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[154,4777+30]..[154,4777+31])
                            Pexp_ident "t" (src/ppx.ml[154,4777+30]..[154,4777+31])
                      ]
                    expression (src/ppx.ml[155,4811+4]..[155,4811+6])
                      Pexp_construct "()" (src/ppx.ml[155,4811+4]..[155,4811+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[157,4822+0]..[157,4822+17])
          Ppat_var "process_core_type" (src/ppx.ml[157,4822+0]..[157,4822+17])
        expression (src/ppx.ml[157,4822+17]..[167,5089+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[157,4822+17]..[157,4822+20])
            Ppat_var "x" (src/ppx.ml[157,4822+18]..[157,4822+19])
          expression (src/ppx.ml[158,4845+2]..[167,5089+80])
            Pexp_match
            expression (src/ppx.ml[158,4845+8]..[158,4845+9])
              Pexp_ident "x" (src/ppx.ml[158,4845+8]..[158,4845+9])
            [
              <case>
                pattern (src/ppx.ml[159,4861+4]..[164,5022+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[160,4867+6]..[160,4867+15]) ghost
                      pattern (src/ppx.ml[160,4867+6]..[160,4867+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[160,4867+6]..[160,4867+15])
                    "ptyp_loc" (src/ppx.ml[161,4906+5]..[161,4906+13]) ghost
                      pattern (src/ppx.ml[161,4906+5]..[161,4906+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[161,4906+5]..[161,4906+13])
                    "ptyp_loc_stack" (src/ppx.ml[162,4939+5]..[162,4939+19]) ghost
                      pattern (src/ppx.ml[162,4939+5]..[162,4939+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[162,4939+5]..[162,4939+19])
                    "ptyp_attributes" (src/ppx.ml[163,4982+5]..[163,4982+20]) ghost
                      pattern (src/ppx.ml[163,4982+5]..[163,4982+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[163,4982+5]..[163,4982+20])
                  ]
                expression (src/ppx.ml[165,5030+4]..[167,5089+80])
                  Pexp_sequence
                  expression (src/ppx.ml[165,5030+4]..[165,5030+38])
                    Pexp_apply
                    expression (src/ppx.ml[165,5030+5]..[165,5030+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[165,5030+5]..[165,5030+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,5030+28]..[165,5030+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[165,5030+28]..[165,5030+37])
                    ]
                  expression (src/ppx.ml[167,5089+4]..[167,5089+80])
                    Pexp_apply
                    expression (src/ppx.ml[167,5089+5]..[167,5089+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,5089+5]..[167,5089+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,5089+19]..[167,5089+79])
                          Pexp_apply
                          expression (src/ppx.ml[167,5089+20]..[167,5089+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,5089+20]..[167,5089+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,5089+35]..[167,5089+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,5089+36]..[167,5089+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[167,5089+37]..[167,5089+63]),None)
                                  expression (src/ppx.ml[167,5089+68]..[167,5089+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[167,5089+68]..[167,5089+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[168,5170+4]..[168,5170+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[168,5170+4]..[168,5170+26])
        expression (src/ppx.ml[168,5170+26]..[173,5286+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[168,5170+26]..[168,5170+44])
            Ppat_constraint
            pattern (src/ppx.ml[168,5170+27]..[168,5170+28])
              Ppat_var "x" (src/ppx.ml[168,5170+27]..[168,5170+28])
            core_type (src/ppx.ml[168,5170+29]..[168,5170+43])
              Ptyp_constr "list" (src/ppx.ml[168,5170+39]..[168,5170+43])
              [
                core_type (src/ppx.ml[168,5170+29]..[168,5170+38])
                  Ptyp_constr "core_type" (src/ppx.ml[168,5170+29]..[168,5170+38])
                  []
              ]
          expression (src/ppx.ml[169,5217+2]..[173,5286+29])
            Pexp_match
            expression (src/ppx.ml[169,5217+8]..[169,5217+9])
              Pexp_ident "x" (src/ppx.ml[169,5217+8]..[169,5217+9])
            [
              <case>
                pattern (src/ppx.ml[170,5232+4]..[170,5232+6])
                  Ppat_construct "[]" (src/ppx.ml[170,5232+4]..[170,5232+6])
                  None
                expression (src/ppx.ml[170,5232+10]..[170,5232+12])
                  Pexp_construct "()" (src/ppx.ml[170,5232+10]..[170,5232+12])
                  None
              <case>
                pattern (src/ppx.ml[171,5245+4]..[171,5245+10])
                  Ppat_construct "::" (src/ppx.ml[171,5245+6]..[171,5245+8])
                  Some
                    []
                    pattern (src/ppx.ml[171,5245+4]..[171,5245+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[171,5245+4]..[171,5245+5])
                          Ppat_var "h" (src/ppx.ml[171,5245+4]..[171,5245+5])
                        pattern (src/ppx.ml[171,5245+9]..[171,5245+10])
                          Ppat_var "t" (src/ppx.ml[171,5245+9]..[171,5245+10])
                      ]
                expression (src/ppx.ml[172,5259+4]..[173,5286+29])
                  Pexp_sequence
                  expression (src/ppx.ml[172,5259+4]..[172,5259+25])
                    Pexp_apply
                    expression (src/ppx.ml[172,5259+4]..[172,5259+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[172,5259+4]..[172,5259+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[172,5259+22]..[172,5259+25])
                          Pexp_ident "h" (src/ppx.ml[172,5259+23]..[172,5259+24])
                    ]
                  expression (src/ppx.ml[173,5286+4]..[173,5286+29])
                    Pexp_apply
                    expression (src/ppx.ml[173,5286+4]..[173,5286+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[173,5286+4]..[173,5286+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[173,5286+26]..[173,5286+29])
                          Pexp_ident "t" (src/ppx.ml[173,5286+27]..[173,5286+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[180,5330+0]..[187,5529+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[180,5330+4]..[180,5330+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[180,5330+4]..[180,5330+31])
        expression (src/ppx.ml[180,5330+31]..[187,5529+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[180,5330+31]..[180,5330+34])
            Ppat_var "x" (src/ppx.ml[180,5330+32]..[180,5330+33])
          expression (src/ppx.ml[181,5367+2]..[187,5529+65])
            Pexp_match
            expression (src/ppx.ml[181,5367+8]..[181,5367+9])
              Pexp_ident "x" (src/ppx.ml[181,5367+8]..[181,5367+9])
            [
              <case>
                pattern (src/ppx.ml[182,5382+4]..[182,5382+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[182,5382+4]..[182,5382+15])
                  Some
                    []
                    pattern (src/ppx.ml[182,5382+16]..[182,5382+17])
                      Ppat_var "a" (src/ppx.ml[182,5382+16]..[182,5382+17])
                expression (src/ppx.ml[183,5403+4]..[184,5435+64])
                  Pexp_sequence
                  expression (src/ppx.ml[183,5403+4]..[183,5403+30])
                    Pexp_apply
                    expression (src/ppx.ml[183,5403+5]..[183,5403+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[183,5403+5]..[183,5403+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[183,5403+28]..[183,5403+29])
                          Pexp_ident "a" (src/ppx.ml[183,5403+28]..[183,5403+29])
                    ]
                  expression (src/ppx.ml[184,5435+4]..[184,5435+64])
                    Pexp_apply
                    expression (src/ppx.ml[184,5435+5]..[184,5435+18])
                      Pexp_ident "print_endline" (src/ppx.ml[184,5435+5]..[184,5435+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[184,5435+19]..[184,5435+63])
                          Pexp_apply
                          expression (src/ppx.ml[184,5435+20]..[184,5435+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[184,5435+20]..[184,5435+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[184,5435+35]..[184,5435+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[184,5435+36]..[184,5435+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[184,5435+37]..[184,5435+55]),None)
                                  expression (src/ppx.ml[184,5435+60]..[184,5435+61])
                                    Pexp_ident "a" (src/ppx.ml[184,5435+60]..[184,5435+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[186,5507+4]..[186,5507+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[186,5507+4]..[186,5507+16])
                  Some
                    []
                    pattern (src/ppx.ml[186,5507+17]..[186,5507+18])
                      Ppat_var "a" (src/ppx.ml[186,5507+17]..[186,5507+18])
                expression (src/ppx.ml[187,5529+4]..[187,5529+65])
                  Pexp_apply
                  expression (src/ppx.ml[187,5529+5]..[187,5529+18])
                    Pexp_ident "print_endline" (src/ppx.ml[187,5529+5]..[187,5529+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[187,5529+19]..[187,5529+64])
                        Pexp_apply
                        expression (src/ppx.ml[187,5529+20]..[187,5529+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[187,5529+20]..[187,5529+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[187,5529+35]..[187,5529+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[187,5529+36]..[187,5529+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[187,5529+37]..[187,5529+56]),None)
                                expression (src/ppx.ml[187,5529+61]..[187,5529+62])
                                  Pexp_ident "a" (src/ppx.ml[187,5529+61]..[187,5529+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[189,5596+0]..[221,6572+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[189,5596+8]..[189,5596+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[189,5596+8]..[189,5596+57])
        expression (src/ppx.ml[189,5596+57]..[221,6572+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[189,5596+57]..[189,5596+60])
            Ppat_var "x" (src/ppx.ml[189,5596+58]..[189,5596+59])
          expression (src/ppx.ml[190,5659+2]..[221,6572+8])
            Pexp_match
            expression (src/ppx.ml[190,5659+8]..[190,5659+9])
              Pexp_ident "x" (src/ppx.ml[190,5659+8]..[190,5659+9])
            [
              <case>
                pattern (src/ppx.ml[191,5674+4]..[191,5674+6])
                  Ppat_construct "[]" (src/ppx.ml[191,5674+4]..[191,5674+6])
                  None
                expression (src/ppx.ml[191,5674+10]..[191,5674+12])
                  Pexp_construct "()" (src/ppx.ml[191,5674+10]..[191,5674+12])
                  None
              <case>
                pattern (src/ppx.ml[192,5687+4]..[192,5687+10])
                  Ppat_construct "::" (src/ppx.ml[192,5687+6]..[192,5687+8])
                  Some
                    []
                    pattern (src/ppx.ml[192,5687+4]..[192,5687+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[192,5687+4]..[192,5687+5])
                          Ppat_var "h" (src/ppx.ml[192,5687+4]..[192,5687+5])
                        pattern (src/ppx.ml[192,5687+9]..[192,5687+10])
                          Ppat_var "t" (src/ppx.ml[192,5687+9]..[192,5687+10])
                      ]
                expression (src/ppx.ml[194,5766+4]..[221,6572+8])
                  Pexp_match
                  expression (src/ppx.ml[194,5766+10]..[194,5766+11])
                    Pexp_ident "h" (src/ppx.ml[194,5766+10]..[194,5766+11])
                  [
                    <case>
                      pattern (src/ppx.ml[195,5783+5]..[202,6021+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[196,5790+6]..[196,5790+14]) ghost
                            pattern (src/ppx.ml[196,5790+6]..[196,5790+14])
                              Ppat_var "pcd_name" (src/ppx.ml[196,5790+6]..[196,5790+14])
                          "pcd_vars" (src/ppx.ml[197,5824+6]..[197,5824+14]) ghost
                            pattern (src/ppx.ml[197,5824+6]..[197,5824+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[197,5824+6]..[197,5824+14])
                          "pcd_args" (src/ppx.ml[198,5863+6]..[198,5863+14]) ghost
                            pattern (src/ppx.ml[198,5863+6]..[198,5863+14])
                              Ppat_var "pcd_args" (src/ppx.ml[198,5863+6]..[198,5863+14])
                          "pcd_res" (src/ppx.ml[199,5908+6]..[199,5908+13]) ghost
                            pattern (src/ppx.ml[199,5908+6]..[199,5908+13])
                              Ppat_var "pcd_res" (src/ppx.ml[199,5908+6]..[199,5908+13])
                          "pcd_loc" (src/ppx.ml[200,5947+6]..[200,5947+13]) ghost
                            pattern (src/ppx.ml[200,5947+6]..[200,5947+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[200,5947+6]..[200,5947+13])
                          "pcd_attributes" (src/ppx.ml[201,5980+6]..[201,5980+20]) ghost
                            pattern (src/ppx.ml[201,5980+6]..[201,5980+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[201,5980+6]..[201,5980+20])
                        ]
                      expression (src/ppx.ml[205,6103+6]..[221,6572+8])
                        Pexp_sequence
                        expression (src/ppx.ml[205,6103+6]..[205,6103+43])
                          Pexp_apply
                          expression (src/ppx.ml[205,6103+6]..[205,6103+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[205,6103+6]..[205,6103+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[205,6103+33]..[205,6103+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[205,6103+34]..[205,6103+42])
                          ]
                        expression (src/ppx.ml[206,6148+6]..[221,6572+8])
                          Pexp_sequence
                          expression (src/ppx.ml[206,6148+6]..[219,6493+16])
                            Pexp_apply
                            expression (src/ppx.ml[206,6148+7]..[206,6148+20])
                              Pexp_ident "print_endline" (src/ppx.ml[206,6148+7]..[206,6148+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[206,6148+21]..[219,6493+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[206,6148+22]..[206,6148+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[206,6148+22]..[206,6148+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[206,6148+37]..[219,6493+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[207,6187+11]..[207,6187+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[207,6187+12]..[207,6187+36]),None)
                                          expression (src/ppx.ml[208,6226+15]..[208,6226+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[208,6226+15]..[208,6226+23])
                                          expression (src/ppx.ml[209,6251+15]..[209,6251+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[209,6251+16]..[209,6251+20]),None)
                                          expression (src/ppx.ml[210,6274+15]..[210,6274+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[210,6274+15]..[210,6274+23])
                                          expression (src/ppx.ml[211,6299+15]..[211,6299+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[211,6299+16]..[211,6299+20]),None)
                                          expression (src/ppx.ml[212,6322+15]..[212,6322+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[212,6322+15]..[212,6322+23])
                                          expression (src/ppx.ml[213,6347+15]..[213,6347+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[213,6347+16]..[213,6347+19]),None)
                                          expression (src/ppx.ml[214,6369+15]..[214,6369+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[214,6369+15]..[214,6369+22])
                                          expression (src/ppx.ml[215,6393+15]..[215,6393+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[215,6393+16]..[215,6393+19]),None)
                                          expression (src/ppx.ml[216,6415+15]..[216,6415+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[216,6415+15]..[216,6415+22])
                                          expression (src/ppx.ml[217,6439+15]..[217,6439+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[217,6439+16]..[217,6439+21]),None)
                                          expression (src/ppx.ml[218,6463+15]..[218,6463+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[218,6463+15]..[218,6463+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[220,6511+6]..[221,6572+8])
                            Pexp_sequence
                            expression (src/ppx.ml[220,6511+6]..[220,6511+59])
                              Pexp_apply
                              expression (src/ppx.ml[220,6511+7]..[220,6511+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[220,6511+7]..[220,6511+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[220,6511+57]..[220,6511+58])
                                    Pexp_ident "t" (src/ppx.ml[220,6511+57]..[220,6511+58])
                              ]
                            expression (src/ppx.ml[221,6572+6]..[221,6572+8])
                              Pexp_construct "()" (src/ppx.ml[221,6572+6]..[221,6572+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[223,6584+0]..[234,6981+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[223,6584+4]..[223,6584+16])
          Ppat_var "process_kind" (src/ppx.ml[223,6584+4]..[223,6584+16])
        expression (src/ppx.ml[223,6584+16]..[234,6981+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[223,6584+16]..[223,6584+19])
            Ppat_var "x" (src/ppx.ml[223,6584+17]..[223,6584+18])
          expression (src/ppx.ml[224,6606+2]..[234,6981+77])
            Pexp_match
            expression (src/ppx.ml[224,6606+8]..[224,6606+9])
              Pexp_ident "x" (src/ppx.ml[224,6606+8]..[224,6606+9])
            [
              <case>
                pattern (src/ppx.ml[226,6643+4]..[226,6643+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[226,6643+4]..[226,6643+18])
                  None
                expression (src/ppx.ml[226,6643+23]..[226,6643+81])
                  Pexp_apply
                  expression (src/ppx.ml[226,6643+24]..[226,6643+37])
                    Pexp_ident "print_endline" (src/ppx.ml[226,6643+24]..[226,6643+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[226,6643+38]..[226,6643+80])
                        Pexp_apply
                        expression (src/ppx.ml[226,6643+39]..[226,6643+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[226,6643+39]..[226,6643+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[226,6643+54]..[226,6643+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6643+56]..[226,6643+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[227,6725+4]..[227,6725+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[227,6725+4]..[227,6725+17])
                  Some
                    []
                    pattern (src/ppx.ml[227,6725+18]..[227,6725+19])
                      Ppat_var "a" (src/ppx.ml[227,6725+18]..[227,6725+19])
                expression (src/ppx.ml[228,6748+4]..[229,6807+65])
                  Pexp_sequence
                  expression (src/ppx.ml[228,6748+4]..[228,6748+57])
                    Pexp_apply
                    expression (src/ppx.ml[228,6748+5]..[228,6748+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[228,6748+5]..[228,6748+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[228,6748+55]..[228,6748+56])
                          Pexp_ident "a" (src/ppx.ml[228,6748+55]..[228,6748+56])
                    ]
                  expression (src/ppx.ml[229,6807+4]..[229,6807+65])
                    Pexp_apply
                    expression (src/ppx.ml[229,6807+5]..[229,6807+18])
                      Pexp_ident "print_endline" (src/ppx.ml[229,6807+5]..[229,6807+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[229,6807+19]..[229,6807+64])
                          Pexp_apply
                          expression (src/ppx.ml[229,6807+20]..[229,6807+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[229,6807+20]..[229,6807+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[229,6807+35]..[229,6807+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[229,6807+36]..[229,6807+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[229,6807+37]..[229,6807+57]),None)
                                  expression (src/ppx.ml[229,6807+61]..[229,6807+62])
                                    Pexp_ident "a" (src/ppx.ml[229,6807+61]..[229,6807+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[232,6920+5]..[232,6920+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[232,6920+5]..[232,6920+17])
                  Some
                    []
                    pattern (src/ppx.ml[232,6920+18]..[232,6920+19])
                      Ppat_var "a" (src/ppx.ml[232,6920+18]..[232,6920+19])
                expression (src/ppx.ml[233,6948+5]..[233,6948+32])
                  Pexp_apply
                  expression (src/ppx.ml[233,6948+5]..[233,6948+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[233,6948+5]..[233,6948+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[233,6948+29]..[233,6948+32])
                        Pexp_ident "a" (src/ppx.ml[233,6948+30]..[233,6948+31])
                  ]
              <case>
                pattern (src/ppx.ml[234,6981+5]..[234,6981+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[234,6981+5]..[234,6981+15])
                  None
                expression (src/ppx.ml[234,6981+19]..[234,6981+77])
                  Pexp_apply
                  expression (src/ppx.ml[234,6981+20]..[234,6981+33])
                    Pexp_ident "print_endline" (src/ppx.ml[234,6981+20]..[234,6981+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[234,6981+34]..[234,6981+76])
                        Pexp_apply
                        expression (src/ppx.ml[234,6981+35]..[234,6981+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[234,6981+35]..[234,6981+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[234,6981+50]..[234,6981+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[234,6981+52]..[234,6981+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[236,7060+0]..[257,8066+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[236,7060+4]..[236,7060+19])
          Ppat_var "print_type_decl" (src/ppx.ml[236,7060+4]..[236,7060+19])
        expression (src/ppx.ml[236,7060+19]..[257,8066+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[236,7060+19]..[236,7060+22])
            Ppat_var "x" (src/ppx.ml[236,7060+20]..[236,7060+21])
          expression (src/ppx.ml[237,7085+2]..[257,8066+38])
            Pexp_match
            expression (src/ppx.ml[237,7085+8]..[237,7085+9])
              Pexp_ident "x" (src/ppx.ml[237,7085+8]..[237,7085+9])
            [
              <case>
                pattern (src/ppx.ml[238,7100+4]..[247,7481+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[239,7106+6]..[239,7106+16]) ghost
                      pattern (src/ppx.ml[239,7106+6]..[239,7106+16])
                        Ppat_var "ptype_name" (src/ppx.ml[239,7106+6]..[239,7106+16])
                    "ptype_params" (src/ppx.ml[240,7143+6]..[240,7143+18]) ghost
                      pattern (src/ppx.ml[240,7143+6]..[240,7143+18])
                        Ppat_var "ptype_params" (src/ppx.ml[240,7143+6]..[240,7143+18])
                    "ptype_cstrs" (src/ppx.ml[241,7215+6]..[241,7215+17]) ghost
                      pattern (src/ppx.ml[241,7215+6]..[241,7215+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[241,7215+6]..[241,7215+17])
                    "ptype_kind" (src/ppx.ml[242,7284+6]..[242,7284+16]) ghost
                      pattern (src/ppx.ml[242,7284+6]..[242,7284+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[242,7284+6]..[242,7284+16])
                    "ptype_private" (src/ppx.ml[243,7321+6]..[243,7321+19]) ghost
                      pattern (src/ppx.ml[243,7321+6]..[243,7321+19])
                        Ppat_var "ptype_private" (src/ppx.ml[243,7321+6]..[243,7321+19])
                    "ptype_manifest" (src/ppx.ml[244,7362+6]..[244,7362+20]) ghost
                      pattern (src/ppx.ml[244,7362+6]..[244,7362+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[244,7362+6]..[244,7362+20])
                    "ptype_attributes" (src/ppx.ml[245,7409+6]..[245,7409+22]) ghost
                      pattern (src/ppx.ml[245,7409+6]..[245,7409+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[245,7409+6]..[245,7409+22])
                    "ptype_loc" (src/ppx.ml[246,7450+6]..[246,7450+15]) ghost
                      pattern (src/ppx.ml[246,7450+6]..[246,7450+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[246,7450+6]..[246,7450+15])
                  ]
                expression (src/ppx.ml[248,7490+4]..[257,8066+38])
                  Pexp_sequence
                  expression (src/ppx.ml[248,7490+4]..[248,7490+69])
                    Pexp_apply
                    expression (src/ppx.ml[248,7490+5]..[248,7490+18])
                      Pexp_ident "print_endline" (src/ppx.ml[248,7490+5]..[248,7490+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[248,7490+19]..[248,7490+68])
                          Pexp_apply
                          expression (src/ppx.ml[248,7490+20]..[248,7490+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[248,7490+20]..[248,7490+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[248,7490+35]..[248,7490+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[248,7490+36]..[248,7490+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[248,7490+37]..[248,7490+53]),None)
                                  expression (src/ppx.ml[248,7490+56]..[248,7490+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[248,7490+56]..[248,7490+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[249,7561+4]..[257,8066+38])
                    Pexp_sequence
                    expression (src/ppx.ml[249,7561+4]..[249,7561+72])
                      Pexp_apply
                      expression (src/ppx.ml[249,7561+5]..[249,7561+18])
                        Pexp_ident "print_endline" (src/ppx.ml[249,7561+5]..[249,7561+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[249,7561+19]..[249,7561+71])
                            Pexp_apply
                            expression (src/ppx.ml[249,7561+20]..[249,7561+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[249,7561+20]..[249,7561+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[249,7561+35]..[249,7561+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[249,7561+36]..[249,7561+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[249,7561+37]..[249,7561+54]),None)
                                    expression (src/ppx.ml[249,7561+57]..[249,7561+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[249,7561+57]..[249,7561+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[250,7635+4]..[257,8066+38])
                      Pexp_sequence
                      expression (src/ppx.ml[250,7635+4]..[250,7635+66])
                        Pexp_apply
                        expression (src/ppx.ml[250,7635+5]..[250,7635+18])
                          Pexp_ident "print_endline" (src/ppx.ml[250,7635+5]..[250,7635+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[250,7635+19]..[250,7635+65])
                              Pexp_apply
                              expression (src/ppx.ml[250,7635+20]..[250,7635+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[250,7635+20]..[250,7635+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[250,7635+35]..[250,7635+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[250,7635+36]..[250,7635+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[250,7635+37]..[250,7635+49]),None)
                                      expression (src/ppx.ml[250,7635+52]..[250,7635+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[250,7635+52]..[250,7635+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[251,7703+4]..[257,8066+38])
                        Pexp_sequence
                        expression (src/ppx.ml[251,7703+4]..[251,7703+63])
                          Pexp_apply
                          expression (src/ppx.ml[251,7703+5]..[251,7703+18])
                            Pexp_ident "print_endline" (src/ppx.ml[251,7703+5]..[251,7703+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[251,7703+19]..[251,7703+62])
                                Pexp_apply
                                expression (src/ppx.ml[251,7703+20]..[251,7703+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[251,7703+20]..[251,7703+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[251,7703+35]..[251,7703+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[251,7703+36]..[251,7703+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[251,7703+37]..[251,7703+48]),None)
                                        expression (src/ppx.ml[251,7703+50]..[251,7703+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[251,7703+50]..[251,7703+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[252,7768+4]..[257,8066+38])
                          Pexp_sequence
                          expression (src/ppx.ml[252,7768+4]..[252,7768+29])
                            Pexp_apply
                            expression (src/ppx.ml[252,7768+5]..[252,7768+17])
                              Pexp_ident "process_kind" (src/ppx.ml[252,7768+5]..[252,7768+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[252,7768+18]..[252,7768+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[252,7768+18]..[252,7768+28])
                            ]
                          expression (src/ppx.ml[253,7799+4]..[257,8066+38])
                            Pexp_apply
                            expression (src/ppx.ml[253,7799+5]..[253,7799+18])
                              Pexp_ident "print_endline" (src/ppx.ml[253,7799+5]..[253,7799+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7799+19]..[257,8066+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[253,7799+20]..[253,7799+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[253,7799+20]..[253,7799+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[253,7799+35]..[257,8066+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[253,7799+36]..[253,7799+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[253,7799+37]..[253,7799+51]),None)
                                          expression (src/ppx.ml[253,7799+55]..[253,7799+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[253,7799+55]..[253,7799+68])
                                          expression (src/ppx.ml[254,7869+36]..[254,7869+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[254,7869+37]..[254,7869+51]),None)
                                          expression (src/ppx.ml[254,7869+54]..[254,7869+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[254,7869+54]..[254,7869+68])
                                          expression (src/ppx.ml[255,7939+36]..[255,7939+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[255,7939+37]..[255,7939+47]),None)
                                          expression (src/ppx.ml[255,7939+50]..[255,7939+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[255,7939+50]..[255,7939+66])
                                          expression (src/ppx.ml[256,8007+36]..[256,8007+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[256,8007+37]..[256,8007+46]),None)
                                          expression (src/ppx.ml[256,8007+49]..[256,8007+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[256,8007+49]..[256,8007+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[259,8110+0]..[265,8245+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[259,8110+8]..[259,8110+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[259,8110+8]..[259,8110+30])
        expression (src/ppx.ml[259,8110+30]..[265,8245+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[259,8110+30]..[259,8110+33])
            Ppat_var "x" (src/ppx.ml[259,8110+31]..[259,8110+32])
          expression (src/ppx.ml[260,8146+2]..[265,8245+6])
            Pexp_match
            expression (src/ppx.ml[260,8146+8]..[260,8146+9])
              Pexp_ident "x" (src/ppx.ml[260,8146+8]..[260,8146+9])
            [
              <case>
                pattern (src/ppx.ml[261,8161+4]..[261,8161+6])
                  Ppat_construct "[]" (src/ppx.ml[261,8161+4]..[261,8161+6])
                  None
                expression (src/ppx.ml[261,8161+10]..[261,8161+12])
                  Pexp_construct "()" (src/ppx.ml[261,8161+10]..[261,8161+12])
                  None
              <case>
                pattern (src/ppx.ml[262,8174+4]..[262,8174+10])
                  Ppat_construct "::" (src/ppx.ml[262,8174+6]..[262,8174+8])
                  Some
                    []
                    pattern (src/ppx.ml[262,8174+4]..[262,8174+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[262,8174+4]..[262,8174+5])
                          Ppat_var "h" (src/ppx.ml[262,8174+4]..[262,8174+5])
                        pattern (src/ppx.ml[262,8174+9]..[262,8174+10])
                          Ppat_var "t" (src/ppx.ml[262,8174+9]..[262,8174+10])
                      ]
                expression (src/ppx.ml[263,8188+4]..[265,8245+6])
                  Pexp_sequence
                  expression (src/ppx.ml[263,8188+4]..[263,8188+23])
                    Pexp_apply
                    expression (src/ppx.ml[263,8188+5]..[263,8188+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[263,8188+5]..[263,8188+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[263,8188+21]..[263,8188+22])
                          Pexp_ident "h" (src/ppx.ml[263,8188+21]..[263,8188+22])
                    ]
                  expression (src/ppx.ml[264,8213+4]..[265,8245+6])
                    Pexp_sequence
                    expression (src/ppx.ml[264,8213+4]..[264,8213+30])
                      Pexp_apply
                      expression (src/ppx.ml[264,8213+5]..[264,8213+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[264,8213+5]..[264,8213+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,8213+28]..[264,8213+29])
                            Pexp_ident "t" (src/ppx.ml[264,8213+28]..[264,8213+29])
                      ]
                    expression (src/ppx.ml[265,8245+4]..[265,8245+6])
                      Pexp_construct "()" (src/ppx.ml[265,8245+4]..[265,8245+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[267,8257+0]..[293,10221+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,8257+4]..[267,8257+13])
          Ppat_var "printdesc" (src/ppx.ml[267,8257+4]..[267,8257+13])
        expression (src/ppx.ml[267,8257+13]..[293,10221+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[267,8257+13]..[267,8257+37])
            Ppat_constraint
            pattern (src/ppx.ml[267,8257+14]..[267,8257+15])
              Ppat_var "x" (src/ppx.ml[267,8257+14]..[267,8257+15])
            core_type (src/ppx.ml[267,8257+17]..[267,8257+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[267,8257+17]..[267,8257+36])
              []
          expression (src/ppx.ml[267,8257+38]..[293,10221+128])
            Pexp_constraint
            expression (src/ppx.ml[268,8303+2]..[293,10221+128])
              Pexp_sequence
              expression (src/ppx.ml[268,8303+2]..[268,8303+68])
                Pexp_apply
                expression (src/ppx.ml[268,8303+3]..[268,8303+16])
                  Pexp_ident "print_endline" (src/ppx.ml[268,8303+3]..[268,8303+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[268,8303+17]..[268,8303+67])
                      Pexp_apply
                      expression (src/ppx.ml[268,8303+18]..[268,8303+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[268,8303+18]..[268,8303+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8303+33]..[268,8303+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[268,8303+34]..[268,8303+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[268,8303+35]..[268,8303+61]),None)
                              expression (src/ppx.ml[268,8303+64]..[268,8303+65])
                                Pexp_ident "x" (src/ppx.ml[268,8303+64]..[268,8303+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[269,8373+2]..[293,10221+128])
                Pexp_match
                expression (src/ppx.ml[269,8373+8]..[269,8373+9])
                  Pexp_ident "x" (src/ppx.ml[269,8373+8]..[269,8373+9])
                [
                  <case>
                    pattern (src/ppx.ml[270,8388+4]..[270,8388+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[270,8388+4]..[270,8388+13])
                      Some
                        []
                        pattern (src/ppx.ml[270,8388+14]..[270,8388+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[270,8388+15]..[270,8388+25])
                              Ppat_var "expression" (src/ppx.ml[270,8388+15]..[270,8388+25])
                            pattern (src/ppx.ml[270,8388+26]..[270,8388+36])
                              Ppat_var "attributes" (src/ppx.ml[270,8388+26]..[270,8388+36])
                          ]
                    expression (src/ppx.ml[270,8388+41]..[270,8388+117])
                      Pexp_apply
                      expression (src/ppx.ml[270,8388+42]..[270,8388+55])
                        Pexp_ident "print_endline" (src/ppx.ml[270,8388+42]..[270,8388+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,8388+56]..[270,8388+116])
                            Pexp_apply
                            expression (src/ppx.ml[270,8388+57]..[270,8388+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,8388+57]..[270,8388+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,8388+72]..[270,8388+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,8388+73]..[270,8388+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[270,8388+74]..[270,8388+90]),None)
                                    expression (src/ppx.ml[270,8388+93]..[270,8388+103])
                                      Pexp_ident "expression" (src/ppx.ml[270,8388+93]..[270,8388+103])
                                    expression (src/ppx.ml[270,8388+104]..[270,8388+114])
                                      Pexp_ident "attributes" (src/ppx.ml[270,8388+104]..[270,8388+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,8526+4]..[272,8526+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[272,8526+4]..[272,8526+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,8526+15]..[272,8526+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[272,8526+16]..[272,8526+24])
                              Ppat_var "rec_flag" (src/ppx.ml[272,8526+16]..[272,8526+24])
                            pattern (src/ppx.ml[272,8526+26]..[272,8526+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[272,8526+26]..[272,8526+44])
                          ]
                    expression (src/ppx.ml[272,8526+48]..[273,8660+48])
                      Pexp_sequence
                      expression (src/ppx.ml[272,8526+48]..[272,8526+132])
                        Pexp_apply
                        expression (src/ppx.ml[272,8526+49]..[272,8526+62])
                          Pexp_ident "print_endline" (src/ppx.ml[272,8526+49]..[272,8526+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[272,8526+63]..[272,8526+131])
                              Pexp_apply
                              expression (src/ppx.ml[272,8526+64]..[272,8526+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[272,8526+64]..[272,8526+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[272,8526+79]..[272,8526+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[272,8526+80]..[272,8526+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[272,8526+81]..[272,8526+98]),None)
                                      expression (src/ppx.ml[272,8526+101]..[272,8526+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[272,8526+101]..[272,8526+109])
                                      expression (src/ppx.ml[272,8526+111]..[272,8526+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[272,8526+111]..[272,8526+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[273,8660+4]..[273,8660+48])
                        Pexp_apply
                        expression (src/ppx.ml[273,8660+4]..[273,8660+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[273,8660+4]..[273,8660+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[273,8660+28]..[273,8660+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[273,8660+29]..[273,8660+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[274,8709+4]..[274,8709+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[274,8709+4]..[274,8709+18])
                      Some
                        []
                        pattern (src/ppx.ml[274,8709+19]..[274,8709+36])
                          Ppat_var "value_description" (src/ppx.ml[274,8709+19]..[274,8709+36])
                    expression (src/ppx.ml[274,8709+39]..[274,8709+116])
                      Pexp_apply
                      expression (src/ppx.ml[274,8709+40]..[274,8709+53])
                        Pexp_ident "print_endline" (src/ppx.ml[274,8709+40]..[274,8709+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,8709+54]..[274,8709+115])
                            Pexp_apply
                            expression (src/ppx.ml[274,8709+55]..[274,8709+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,8709+55]..[274,8709+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,8709+70]..[274,8709+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,8709+71]..[274,8709+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[274,8709+72]..[274,8709+93]),None)
                                    expression (src/ppx.ml[274,8709+96]..[274,8709+113])
                                      Pexp_ident "value_description" (src/ppx.ml[274,8709+96]..[274,8709+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,8827+4]..[276,8827+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[276,8827+4]..[276,8827+13])
                      Some
                        []
                        pattern (src/ppx.ml[276,8827+14]..[276,8827+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,8827+15]..[276,8827+23])
                              Ppat_var "rec_flag" (src/ppx.ml[276,8827+15]..[276,8827+23])
                            pattern (src/ppx.ml[276,8827+25]..[276,8827+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[276,8827+25]..[276,8827+46])
                          ]
                    expression (src/ppx.ml[278,8906+4]..[279,8957+90])
                      Pexp_sequence
                      expression (src/ppx.ml[278,8906+4]..[278,8906+49])
                        Pexp_apply
                        expression (src/ppx.ml[278,8906+4]..[278,8906+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[278,8906+4]..[278,8906+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[278,8906+26]..[278,8906+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[278,8906+27]..[278,8906+48])
                        ]
                      expression (src/ppx.ml[279,8957+4]..[279,8957+90])
                        Pexp_apply
                        expression (src/ppx.ml[279,8957+5]..[279,8957+18])
                          Pexp_ident "print_endline" (src/ppx.ml[279,8957+5]..[279,8957+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[279,8957+19]..[279,8957+89])
                              Pexp_apply
                              expression (src/ppx.ml[279,8957+20]..[279,8957+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[279,8957+20]..[279,8957+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[279,8957+35]..[279,8957+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[279,8957+36]..[279,8957+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[279,8957+37]..[279,8957+53]),None)
                                      expression (src/ppx.ml[279,8957+56]..[279,8957+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[279,8957+56]..[279,8957+64])
                                      expression (src/ppx.ml[279,8957+66]..[279,8957+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[279,8957+66]..[279,8957+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[282,9050+4]..[282,9050+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[282,9050+4]..[282,9050+15])
                      Some
                        []
                        pattern (src/ppx.ml[282,9050+17]..[282,9050+31])
                          Ppat_var "type_extension" (src/ppx.ml[282,9050+17]..[282,9050+31])
                    expression (src/ppx.ml[282,9050+34]..[282,9050+105])
                      Pexp_apply
                      expression (src/ppx.ml[282,9050+35]..[282,9050+48])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9050+35]..[282,9050+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9050+49]..[282,9050+104])
                            Pexp_apply
                            expression (src/ppx.ml[282,9050+50]..[282,9050+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9050+50]..[282,9050+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9050+65]..[282,9050+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9050+66]..[282,9050+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[282,9050+67]..[282,9050+85]),None)
                                    expression (src/ppx.ml[282,9050+88]..[282,9050+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[282,9050+88]..[282,9050+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[283,9156+4]..[283,9156+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[283,9156+4]..[283,9156+18])
                      Some
                        []
                        pattern (src/ppx.ml[283,9156+19]..[283,9156+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[283,9156+19]..[283,9156+40])
                    expression (src/ppx.ml[283,9156+43]..[283,9156+124])
                      Pexp_apply
                      expression (src/ppx.ml[283,9156+44]..[283,9156+57])
                        Pexp_ident "print_endline" (src/ppx.ml[283,9156+44]..[283,9156+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9156+58]..[283,9156+123])
                            Pexp_apply
                            expression (src/ppx.ml[283,9156+59]..[283,9156+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[283,9156+59]..[283,9156+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[283,9156+74]..[283,9156+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[283,9156+75]..[283,9156+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[283,9156+76]..[283,9156+97]),None)
                                    expression (src/ppx.ml[283,9156+100]..[283,9156+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[283,9156+100]..[283,9156+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9281+4]..[284,9281+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[284,9281+4]..[284,9281+15])
                      Some
                        []
                        pattern (src/ppx.ml[284,9281+17]..[284,9281+31])
                          Ppat_var "module_binding" (src/ppx.ml[284,9281+17]..[284,9281+31])
                    expression (src/ppx.ml[284,9281+34]..[284,9281+104])
                      Pexp_apply
                      expression (src/ppx.ml[284,9281+35]..[284,9281+48])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9281+35]..[284,9281+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9281+49]..[284,9281+103])
                            Pexp_apply
                            expression (src/ppx.ml[284,9281+50]..[284,9281+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9281+50]..[284,9281+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9281+65]..[284,9281+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9281+66]..[284,9281+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[284,9281+67]..[284,9281+85]),None)
                                    expression (src/ppx.ml[284,9281+87]..[284,9281+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[284,9281+87]..[284,9281+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9386+4]..[285,9386+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[285,9386+4]..[285,9386+18])
                      Some
                        []
                        pattern (src/ppx.ml[285,9386+20]..[285,9386+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[285,9386+20]..[285,9386+39])
                    expression (src/ppx.ml[285,9386+42]..[285,9386+121])
                      Pexp_apply
                      expression (src/ppx.ml[285,9386+43]..[285,9386+56])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9386+43]..[285,9386+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9386+57]..[285,9386+120])
                            Pexp_apply
                            expression (src/ppx.ml[285,9386+58]..[285,9386+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9386+58]..[285,9386+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9386+73]..[285,9386+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9386+74]..[285,9386+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[285,9386+75]..[285,9386+96]),None)
                                    expression (src/ppx.ml[285,9386+99]..[285,9386+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[285,9386+99]..[285,9386+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[286,9508+4]..[286,9508+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[286,9508+4]..[286,9508+16])
                      Some
                        []
                        pattern (src/ppx.ml[286,9508+17]..[286,9508+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[286,9508+17]..[286,9508+40])
                    expression (src/ppx.ml[286,9508+43]..[286,9508+124])
                      Pexp_apply
                      expression (src/ppx.ml[286,9508+44]..[286,9508+57])
                        Pexp_ident "print_endline" (src/ppx.ml[286,9508+44]..[286,9508+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[286,9508+58]..[286,9508+123])
                            Pexp_apply
                            expression (src/ppx.ml[286,9508+59]..[286,9508+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[286,9508+59]..[286,9508+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[286,9508+74]..[286,9508+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[286,9508+75]..[286,9508+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[286,9508+76]..[286,9508+95]),None)
                                    expression (src/ppx.ml[286,9508+98]..[286,9508+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[286,9508+98]..[286,9508+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[288,9650+4]..[288,9650+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[288,9650+4]..[288,9650+13])
                      Some
                        []
                        pattern (src/ppx.ml[288,9650+14]..[288,9650+30])
                          Ppat_var "open_description" (src/ppx.ml[288,9650+14]..[288,9650+30])
                    expression (src/ppx.ml[288,9650+33]..[288,9650+103])
                      Pexp_apply
                      expression (src/ppx.ml[288,9650+34]..[288,9650+47])
                        Pexp_ident "print_endline" (src/ppx.ml[288,9650+34]..[288,9650+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[288,9650+48]..[288,9650+102])
                            Pexp_apply
                            expression (src/ppx.ml[288,9650+49]..[288,9650+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[288,9650+49]..[288,9650+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[288,9650+64]..[288,9650+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[288,9650+65]..[288,9650+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[288,9650+66]..[288,9650+81]),None)
                                    expression (src/ppx.ml[288,9650+84]..[288,9650+100])
                                      Pexp_ident "open_description" (src/ppx.ml[288,9650+84]..[288,9650+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[289,9754+4]..[289,9754+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[289,9754+4]..[289,9754+14])
                      Some
                        []
                        pattern (src/ppx.ml[289,9754+15]..[289,9754+36])
                          Ppat_var "class_declarations" (src/ppx.ml[289,9754+16]..[289,9754+34])
                    expression (src/ppx.ml[289,9754+39]..[289,9754+113])
                      Pexp_apply
                      expression (src/ppx.ml[289,9754+40]..[289,9754+53])
                        Pexp_ident "print_endline" (src/ppx.ml[289,9754+40]..[289,9754+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[289,9754+54]..[289,9754+112])
                            Pexp_apply
                            expression (src/ppx.ml[289,9754+55]..[289,9754+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[289,9754+55]..[289,9754+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[289,9754+70]..[289,9754+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[289,9754+71]..[289,9754+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[289,9754+72]..[289,9754+89]),None)
                                    expression (src/ppx.ml[289,9754+92]..[289,9754+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[289,9754+92]..[289,9754+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[290,9868+4]..[290,9868+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[290,9868+4]..[290,9868+19])
                      Some
                        []
                        pattern (src/ppx.ml[290,9868+20]..[290,9868+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[290,9868+21]..[290,9868+44])
                    expression (src/ppx.ml[290,9868+48]..[290,9868+132])
                      Pexp_apply
                      expression (src/ppx.ml[290,9868+49]..[290,9868+62])
                        Pexp_ident "print_endline" (src/ppx.ml[290,9868+49]..[290,9868+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[290,9868+63]..[290,9868+131])
                            Pexp_apply
                            expression (src/ppx.ml[290,9868+64]..[290,9868+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[290,9868+64]..[290,9868+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[290,9868+79]..[290,9868+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[290,9868+80]..[290,9868+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[290,9868+81]..[290,9868+103]),None)
                                    expression (src/ppx.ml[290,9868+106]..[290,9868+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[290,9868+106]..[290,9868+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[291,10001+4]..[291,10001+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[291,10001+4]..[291,10001+16])
                      Some
                        []
                        pattern (src/ppx.ml[291,10001+18]..[291,10001+39])
                          Ppat_var "include_declaration" (src/ppx.ml[291,10001+19]..[291,10001+38])
                    expression (src/ppx.ml[291,10001+41]..[291,10001+117])
                      Pexp_apply
                      expression (src/ppx.ml[291,10001+42]..[291,10001+55])
                        Pexp_ident "print_endline" (src/ppx.ml[291,10001+42]..[291,10001+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[291,10001+56]..[291,10001+116])
                            Pexp_apply
                            expression (src/ppx.ml[291,10001+57]..[291,10001+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[291,10001+57]..[291,10001+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[291,10001+72]..[291,10001+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[291,10001+73]..[291,10001+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[291,10001+74]..[291,10001+93]),None)
                                    expression (src/ppx.ml[291,10001+95]..[291,10001+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[291,10001+95]..[291,10001+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[292,10119+4]..[292,10119+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[292,10119+4]..[292,10119+18])
                      Some
                        []
                        pattern (src/ppx.ml[292,10119+19]..[292,10119+30])
                          Ppat_var "attribute" (src/ppx.ml[292,10119+20]..[292,10119+29])
                    expression (src/ppx.ml[292,10119+32]..[292,10119+101])
                      Pexp_apply
                      expression (src/ppx.ml[292,10119+33]..[292,10119+46])
                        Pexp_ident "print_endline" (src/ppx.ml[292,10119+33]..[292,10119+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[292,10119+47]..[292,10119+100])
                            Pexp_apply
                            expression (src/ppx.ml[292,10119+48]..[292,10119+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[292,10119+48]..[292,10119+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[292,10119+63]..[292,10119+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[292,10119+64]..[292,10119+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[292,10119+65]..[292,10119+86]),None)
                                    expression (src/ppx.ml[292,10119+89]..[292,10119+98])
                                      Pexp_ident "attribute" (src/ppx.ml[292,10119+89]..[292,10119+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[293,10221+4]..[293,10221+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[293,10221+4]..[293,10221+18])
                      Some
                        []
                        pattern (src/ppx.ml[293,10221+19]..[293,10221+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[293,10221+21]..[293,10221+30])
                              Ppat_var "extension" (src/ppx.ml[293,10221+21]..[293,10221+30])
                            pattern (src/ppx.ml[293,10221+33]..[293,10221+43])
                              Ppat_var "attributes" (src/ppx.ml[293,10221+33]..[293,10221+43])
                          ]
                    expression (src/ppx.ml[293,10221+46]..[293,10221+128])
                      Pexp_apply
                      expression (src/ppx.ml[293,10221+47]..[293,10221+60])
                        Pexp_ident "print_endline" (src/ppx.ml[293,10221+47]..[293,10221+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[293,10221+61]..[293,10221+127])
                            Pexp_apply
                            expression (src/ppx.ml[293,10221+62]..[293,10221+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[293,10221+62]..[293,10221+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[293,10221+77]..[293,10221+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[293,10221+78]..[293,10221+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[293,10221+79]..[293,10221+100]),None)
                                    expression (src/ppx.ml[293,10221+103]..[293,10221+112])
                                      Pexp_ident "extension" (src/ppx.ml[293,10221+103]..[293,10221+112])
                                    expression (src/ppx.ml[293,10221+115]..[293,10221+125])
                                      Pexp_ident "attributes" (src/ppx.ml[293,10221+115]..[293,10221+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[267,8257+39]..[267,8257+43])
              Ptyp_constr "unit" (src/ppx.ml[267,8257+39]..[267,8257+43])
              []
    ]
  structure_item (src/ppx.ml[295,10351+0]..[295,10351+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10351+4]..[295,10351+7])
          Ppat_var "foo" (src/ppx.ml[295,10351+4]..[295,10351+7])
        expression (src/ppx.ml[295,10351+10]..[295,10351+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[297,10366+0]..[305,10585+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10366+4]..[297,10366+12])
          Ppat_var "printone" (src/ppx.ml[297,10366+4]..[297,10366+12])
        expression (src/ppx.ml[297,10366+13]..[305,10585+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[297,10366+13]..[297,10366+34])
            Ppat_constraint
            pattern (src/ppx.ml[297,10366+14]..[297,10366+15])
              Ppat_var "x" (src/ppx.ml[297,10366+14]..[297,10366+15])
            core_type (src/ppx.ml[297,10366+18]..[297,10366+32])
              Ptyp_constr "structure_item" (src/ppx.ml[297,10366+18]..[297,10366+32])
              []
          expression (src/ppx.ml[297,10366+35]..[305,10585+6])
            Pexp_constraint
            expression (src/ppx.ml[298,10409+2]..[305,10585+6])
              Pexp_match
              expression (src/ppx.ml[298,10409+8]..[298,10409+9])
                Pexp_ident "x" (src/ppx.ml[298,10409+8]..[298,10409+9])
              [
                <case>
                  pattern (src/ppx.ml[299,10424+3]..[302,10474+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[300,10429+4]..[300,10429+13]) ghost
                        pattern (src/ppx.ml[300,10429+4]..[300,10429+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[300,10429+4]..[300,10429+13])
                    ]
                  expression (src/ppx.ml[304,10558+4]..[305,10585+6])
                    Pexp_sequence
                    expression (src/ppx.ml[304,10558+4]..[304,10558+25])
                      Pexp_apply
                      expression (src/ppx.ml[304,10558+5]..[304,10558+14])
                        Pexp_ident "printdesc" (src/ppx.ml[304,10558+5]..[304,10558+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[304,10558+15]..[304,10558+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[304,10558+15]..[304,10558+24])
                      ]
                    expression (src/ppx.ml[305,10585+4]..[305,10585+6])
                      Pexp_construct "()" (src/ppx.ml[305,10585+4]..[305,10585+6])
                      None
              ]
            core_type (src/ppx.ml[297,10366+36]..[297,10366+40])
              Ptyp_constr "unit" (src/ppx.ml[297,10366+36]..[297,10366+40])
              []
    ]
  structure_item (src/ppx.ml[311,10705+0]..[313,10786+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10705+4]..[311,10705+13])
          Ppat_var "printone2" (src/ppx.ml[311,10705+4]..[311,10705+13])
        expression (src/ppx.ml[311,10705+14]..[313,10786+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[311,10705+14]..[311,10705+15])
            Ppat_var "x" (src/ppx.ml[311,10705+14]..[311,10705+15])
          expression (src/ppx.ml[311,10705+16]..[313,10786+12])
            Pexp_constraint
            expression (src/ppx.ml[312,10729+2]..[313,10786+12])
              Pexp_sequence
              expression (src/ppx.ml[312,10729+2]..[312,10729+55])
                Pexp_apply
                expression (src/ppx.ml[312,10729+3]..[312,10729+16])
                  Pexp_ident "print_endline" (src/ppx.ml[312,10729+3]..[312,10729+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[312,10729+17]..[312,10729+54])
                      Pexp_apply
                      expression (src/ppx.ml[312,10729+18]..[312,10729+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[312,10729+18]..[312,10729+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10729+33]..[312,10729+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[312,10729+34]..[312,10729+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[312,10729+35]..[312,10729+49]),None)
                              expression (src/ppx.ml[312,10729+51]..[312,10729+52])
                                Pexp_ident "x" (src/ppx.ml[312,10729+51]..[312,10729+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[313,10786+2]..[313,10786+12])
                Pexp_apply
                expression (src/ppx.ml[313,10786+2]..[313,10786+10])
                  Pexp_ident "printone" (src/ppx.ml[313,10786+2]..[313,10786+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[313,10786+11]..[313,10786+12])
                      Pexp_ident "x" (src/ppx.ml[313,10786+11]..[313,10786+12])
                ]
            core_type (src/ppx.ml[311,10705+17]..[311,10705+21])
              Ptyp_constr "unit" (src/ppx.ml[311,10705+17]..[311,10705+21])
              []
    ]
  structure_item (src/ppx.ml[315,10802+0]..[317,10833+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[315,10802+4]..[315,10802+9])
          Ppat_var "proc1" (src/ppx.ml[315,10802+4]..[315,10802+9])
        expression (src/ppx.ml[315,10802+10]..[317,10833+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[315,10802+10]..[315,10802+11])
            Ppat_var "x" (src/ppx.ml[315,10802+10]..[315,10802+11])
          expression (src/ppx.ml[316,10818+2]..[317,10833+3])
            Pexp_sequence
            expression (src/ppx.ml[316,10818+2]..[316,10818+13])
              Pexp_apply
              expression (src/ppx.ml[316,10818+2]..[316,10818+11])
                Pexp_ident "printone2" (src/ppx.ml[316,10818+2]..[316,10818+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[316,10818+12]..[316,10818+13])
                    Pexp_ident "x" (src/ppx.ml[316,10818+12]..[316,10818+13])
              ]
            expression (src/ppx.ml[317,10833+2]..[317,10833+3])
              Pexp_ident "x" (src/ppx.ml[317,10833+2]..[317,10833+3])
    ]
  structure_item (src/ppx.ml[319,10838+0]..[322,10987+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[319,10838+4]..[319,10838+9])
          Ppat_var "debug" (src/ppx.ml[319,10838+4]..[319,10838+9])
        expression (src/ppx.ml[319,10838+10]..[322,10987+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[319,10838+10]..[319,10838+14])
            Ppat_var "proc" (src/ppx.ml[319,10838+10]..[319,10838+14])
          expression (src/ppx.ml[319,10838+15]..[322,10987+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[319,10838+15]..[319,10838+18])
              Ppat_var "lst" (src/ppx.ml[319,10838+15]..[319,10838+18])
            expression (src/ppx.ml[319,10838+19]..[322,10987+4])
              Pexp_constraint
              expression (src/ppx.ml[320,10866+2]..[322,10987+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[320,10866+6]..[320,10866+12])
                      Ppat_var "result" (src/ppx.ml[320,10866+6]..[320,10866+12])
                    expression (src/ppx.ml[320,10866+15]..[320,10866+32])
                      Pexp_apply
                      expression (src/ppx.ml[320,10866+15]..[320,10866+23])
                        Pexp_ident "List.map" (src/ppx.ml[320,10866+15]..[320,10866+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[320,10866+24]..[320,10866+28])
                            Pexp_ident "proc" (src/ppx.ml[320,10866+24]..[320,10866+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[320,10866+29]..[320,10866+32])
                            Pexp_ident "lst" (src/ppx.ml[320,10866+29]..[320,10866+32])
                      ]
                ]
                expression (src/ppx.ml[321,10902+2]..[322,10987+4])
                  Pexp_sequence
                  expression (src/ppx.ml[321,10902+2]..[321,10902+83])
                    Pexp_apply
                    expression (src/ppx.ml[321,10902+2]..[321,10902+11])
                      Pexp_ident "List.iter" (src/ppx.ml[321,10902+2]..[321,10902+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[321,10902+12]..[321,10902+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[321,10902+17]..[321,10902+18])
                            Ppat_var "i" (src/ppx.ml[321,10902+17]..[321,10902+18])
                          expression (src/ppx.ml[321,10902+22]..[321,10902+75])
                            Pexp_apply
                            expression (src/ppx.ml[321,10902+22]..[321,10902+35])
                              Pexp_ident "print_endline" (src/ppx.ml[321,10902+22]..[321,10902+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[321,10902+36]..[321,10902+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[321,10902+37]..[321,10902+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[321,10902+37]..[321,10902+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[321,10902+52]..[321,10902+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[321,10902+53]..[321,10902+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[321,10902+54]..[321,10902+69]),None)
                                          expression (src/ppx.ml[321,10902+72]..[321,10902+73])
                                            Pexp_ident "i" (src/ppx.ml[321,10902+72]..[321,10902+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[321,10902+77]..[321,10902+83])
                          Pexp_ident "result" (src/ppx.ml[321,10902+77]..[321,10902+83])
                    ]
                  expression (src/ppx.ml[322,10987+2]..[322,10987+4])
                    Pexp_construct "()" (src/ppx.ml[322,10987+2]..[322,10987+4])
                    None
              core_type (src/ppx.ml[319,10838+21]..[319,10838+25])
                Ptyp_constr "unit" (src/ppx.ml[319,10838+21]..[319,10838+25])
                []
    ]
  structure_item (src/ppx.ml[324,11009+0]..[327,11133+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[324,11009+4]..[324,11009+13])
          Ppat_var "transform" (src/ppx.ml[324,11009+4]..[324,11009+13])
        expression (src/ppx.ml[324,11009+14]..[327,11133+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[324,11009+14]..[324,11009+15])
            Ppat_var "x" (src/ppx.ml[324,11009+14]..[324,11009+15])
          expression (src/ppx.ml[325,11064+2]..[327,11133+3])
            Pexp_sequence
            expression (src/ppx.ml[325,11064+2]..[325,11064+48])
              Pexp_apply
              expression (src/ppx.ml[325,11064+3]..[325,11064+16])
                Pexp_ident "print_endline" (src/ppx.ml[325,11064+3]..[325,11064+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[325,11064+17]..[325,11064+47])
                    Pexp_apply
                    expression (src/ppx.ml[325,11064+18]..[325,11064+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[325,11064+18]..[325,11064+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[325,11064+33]..[325,11064+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[325,11064+34]..[325,11064+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[325,11064+35]..[325,11064+42]),None)
                            expression (src/ppx.ml[325,11064+44]..[325,11064+45])
                              Pexp_ident "x" (src/ppx.ml[325,11064+44]..[325,11064+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[326,11114+2]..[327,11133+3])
              Pexp_sequence
              expression (src/ppx.ml[326,11114+2]..[326,11114+17])
                Pexp_apply
                expression (src/ppx.ml[326,11114+3]..[326,11114+8])
                  Pexp_ident "debug" (src/ppx.ml[326,11114+3]..[326,11114+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[326,11114+9]..[326,11114+14])
                      Pexp_ident "proc1" (src/ppx.ml[326,11114+9]..[326,11114+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[326,11114+15]..[326,11114+16])
                      Pexp_ident "x" (src/ppx.ml[326,11114+15]..[326,11114+16])
                ]
              expression (src/ppx.ml[327,11133+2]..[327,11133+3])
                Pexp_ident "x" (src/ppx.ml[327,11133+2]..[327,11133+3])
    ]
  structure_item (src/ppx.ml[329,11140+1]..[329,11140+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[329,11140+5]..[329,11140+7])
          Ppat_construct "()" (src/ppx.ml[329,11140+5]..[329,11140+7])
          None
        expression (src/ppx.ml[329,11140+10]..[329,11140+69])
          Pexp_apply
          expression (src/ppx.ml[329,11140+10]..[329,11140+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[329,11140+10]..[329,11140+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[329,11140+47]..[329,11140+56])
                Pexp_ident "transform" (src/ppx.ml[329,11140+47]..[329,11140+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[329,11140+57]..[329,11140+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[329,11140+58]..[329,11140+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_id2 (x : longident) =
  match x with
  | Lident string -> string
  | Ldot (longident, string) -> (process_id2 longident) ^ ("." ^ string)
  | Lapply (longident, longident2) ->
      (process_id2 longident) ^ ("." ^ (process_id2 longident2))
let rec process_id (x : longident_loc) =
  match x with | { txt;_} -> process_id2 txt
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%s" myid;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[76,2104+34])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..src/ppx.ml[69,1879+19])
          Tpat_var "process_id2/1437"
        expression (src/ppx.ml[69,1879+19]..src/ppx.ml[76,2104+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+20]..src/ppx.ml[69,1879+21])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+22]..src/ppx.ml[69,1879+31])
                    Ttyp_constr "Ppxlib!.longident"
                    []
                Tpat_alias "x/1438"
                pattern (src/ppx.ml[69,1879+20]..src/ppx.ml[69,1879+21])
                  Tpat_any
              expression (src/ppx.ml[70,1914+2]..src/ppx.ml[76,2104+34])
                Texp_match
                expression (src/ppx.ml[70,1914+8]..src/ppx.ml[70,1914+9])
                  Texp_ident "x/1438"
                [
                  <case>
                    pattern (src/ppx.ml[71,1929+4]..src/ppx.ml[71,1929+17])
                      Tpat_value
                      pattern (src/ppx.ml[71,1929+4]..src/ppx.ml[71,1929+17])
                        Tpat_construct "Lident"
                        [
                          pattern (src/ppx.ml[71,1929+11]..src/ppx.ml[71,1929+17])
                            Tpat_var "string/1665"
                        ]
                        None
                    expression (src/ppx.ml[71,1929+21]..src/ppx.ml[71,1929+27])
                      Texp_ident "string/1665"
                  <case>
                    pattern (src/ppx.ml[72,1957+4]..src/ppx.ml[72,1957+28])
                      Tpat_value
                      pattern (src/ppx.ml[72,1957+4]..src/ppx.ml[72,1957+28])
                        Tpat_construct "Ldot"
                        [
                          pattern (src/ppx.ml[72,1957+10]..src/ppx.ml[72,1957+19])
                            Tpat_var "longident/1666"
                          pattern (src/ppx.ml[72,1957+21]..src/ppx.ml[72,1957+27])
                            Tpat_var "string/1667"
                        ]
                        None
                    expression (src/ppx.ml[73,1989+4]..src/ppx.ml[73,1989+42])
                      Texp_apply
                      expression (src/ppx.ml[73,1989+28]..src/ppx.ml[73,1989+29])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[73,1989+4]..src/ppx.ml[73,1989+27])
                            Texp_apply
                            expression (src/ppx.ml[73,1989+5]..src/ppx.ml[73,1989+16])
                              Texp_ident "process_id2/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+17]..src/ppx.ml[73,1989+26])
                                  Texp_ident "longident/1666"
                            ]
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[73,1989+30]..src/ppx.ml[73,1989+42])
                            Texp_apply
                            expression (src/ppx.ml[73,1989+34]..src/ppx.ml[73,1989+35])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+30]..src/ppx.ml[73,1989+33])
                                  Texp_constant Const_string(".",(src/ppx.ml[73,1989+31]..src/ppx.ml[73,1989+32]),None)
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+36]..src/ppx.ml[73,1989+42])
                                  Texp_ident "string/1667"
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[74,2032+4]..src/ppx.ml[74,2032+33])
                      Tpat_value
                      pattern (src/ppx.ml[74,2032+4]..src/ppx.ml[74,2032+33])
                        Tpat_construct "Lapply"
                        [
                          pattern (src/ppx.ml[74,2032+12]..src/ppx.ml[74,2032+21])
                            Tpat_var "longident/1668"
                          pattern (src/ppx.ml[74,2032+22]..src/ppx.ml[74,2032+32])
                            Tpat_var "longident2/1669"
                        ]
                        None
                    expression (src/ppx.ml[75,2066+7]..src/ppx.ml[76,2104+34])
                      Texp_apply
                      expression (src/ppx.ml[75,2066+32]..src/ppx.ml[75,2066+33])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[75,2066+7]..src/ppx.ml[75,2066+30])
                            Texp_apply
                            expression (src/ppx.ml[75,2066+8]..src/ppx.ml[75,2066+19])
                              Texp_ident "process_id2/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[75,2066+20]..src/ppx.ml[75,2066+29])
                                  Texp_ident "longident/1668"
                            ]
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[75,2066+34]..src/ppx.ml[76,2104+34])
                            Texp_apply
                            expression (src/ppx.ml[76,2104+7]..src/ppx.ml[76,2104+8])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[75,2066+34]..src/ppx.ml[75,2066+37])
                                  Texp_constant Const_string(".",(src/ppx.ml[75,2066+35]..src/ppx.ml[75,2066+36]),None)
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[76,2104+9]..src/ppx.ml[76,2104+34])
                                  Texp_apply
                                  expression (src/ppx.ml[76,2104+10]..src/ppx.ml[76,2104+21])
                                    Texp_ident "process_id2/1437"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[76,2104+22]..src/ppx.ml[76,2104+32])
                                        Texp_ident "longident2/1669"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[78,2140+0]..src/ppx.ml[80,2193+31])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[78,2140+8]..src/ppx.ml[78,2140+18])
          Tpat_var "process_id/1670"
        expression (src/ppx.ml[78,2140+18]..src/ppx.ml[80,2193+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[78,2140+19]..src/ppx.ml[78,2140+20])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[78,2140+21]..src/ppx.ml[78,2140+34])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1671"
                pattern (src/ppx.ml[78,2140+19]..src/ppx.ml[78,2140+20])
                  Tpat_any
              expression (src/ppx.ml[79,2178+2]..src/ppx.ml[80,2193+31])
                Texp_match
                expression (src/ppx.ml[79,2178+8]..src/ppx.ml[79,2178+9])
                  Texp_ident "x/1671"
                [
                  <case>
                    pattern (src/ppx.ml[80,2193+4]..src/ppx.ml[80,2193+11])
                      Tpat_value
                      pattern (src/ppx.ml[80,2193+4]..src/ppx.ml[80,2193+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[80,2193+5]..src/ppx.ml[80,2193+8])
                              Tpat_var "txt/1742"
                        ]
                    expression (src/ppx.ml[80,2193+14]..src/ppx.ml[80,2193+31])
                      Texp_apply
                      expression (src/ppx.ml[80,2193+15]..src/ppx.ml[80,2193+26])
                        Texp_ident "process_id2/1437"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[80,2193+27]..src/ppx.ml[80,2193+30])
                            Texp_ident "txt/1742"
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[85,2329+0]..src/ppx.ml[173,5286+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[85,2329+8]..src/ppx.ml[85,2329+27])
          Tpat_var "process_record_kind/1743"
        expression (src/ppx.ml[85,2329+27]..src/ppx.ml[99,2813+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2329+27]..src/ppx.ml[85,2329+30])
                Tpat_var "x/1748"
              expression (src/ppx.ml[86,2362+2]..src/ppx.ml[99,2813+47])
                Texp_match
                expression (src/ppx.ml[86,2362+8]..src/ppx.ml[86,2362+9])
                  Texp_ident "x/1748"
                [
                  <case>
                    pattern (src/ppx.ml[87,2377+4]..src/ppx.ml[93,2558+4])
                      Tpat_value
                      pattern (src/ppx.ml[87,2377+4]..src/ppx.ml[93,2558+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[88,2383+5]..src/ppx.ml[88,2383+13])
                              Tpat_var "pld_name/1749"
                          "pld_mutable"
                            pattern (src/ppx.ml[89,2416+5]..src/ppx.ml[89,2416+16])
                              Tpat_var "pld_mutable/1750"
                          "pld_type"
                            pattern (src/ppx.ml[90,2454+5]..src/ppx.ml[90,2454+13])
                              Tpat_var "pld_type/1751"
                          "pld_loc"
                            pattern (src/ppx.ml[91,2486+5]..src/ppx.ml[91,2486+12])
                              Tpat_var "pld_loc/1752"
                          "pld_attributes"
                            pattern (src/ppx.ml[92,2518+5]..src/ppx.ml[92,2518+19])
                              Tpat_var "pld_attributes/1753"
                        ]
                    expression (src/ppx.ml[94,2566+4]..src/ppx.ml[99,2813+47])
                      Texp_apply
                      expression (src/ppx.ml[94,2566+5]..src/ppx.ml[94,2566+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[94,2566+19]..src/ppx.ml[99,2813+46])
                            Texp_apply
                            expression (src/ppx.ml[94,2566+20]..src/ppx.ml[94,2566+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[94,2566+35]..src/ppx.ml[99,2813+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[94,2566+36]..src/ppx.ml[94,2566+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[94,2566+37]..src/ppx.ml[94,2566+56]),None)
                                    expression (src/ppx.ml[95,2627+36]..src/ppx.ml[95,2627+44])
                                      Texp_ident "pld_name/1749"
                                    expression (src/ppx.ml[96,2673+36]..src/ppx.ml[96,2673+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[96,2673+37]..src/ppx.ml[96,2673+44]),None)
                                    expression (src/ppx.ml[97,2720+36]..src/ppx.ml[97,2720+47])
                                      Texp_ident "pld_mutable/1750"
                                    expression (src/ppx.ml[98,2769+36]..src/ppx.ml[98,2769+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[98,2769+37]..src/ppx.ml[98,2769+41]),None)
                                    expression (src/ppx.ml[99,2813+36]..src/ppx.ml[99,2813+44])
                                      Texp_ident "pld_type/1751"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[101,2865+0]..src/ppx.ml[101,2865+22])
          Tpat_var "process_core_type_desc/1744"
        expression (src/ppx.ml[101,2865+23]..src/ppx.ml[147,4604+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[101,2865+23]..src/ppx.ml[101,2865+24])
                Tpat_var "x/1754"
              expression (src/ppx.ml[102,2892+2]..src/ppx.ml[147,4604+65])
                Texp_match
                expression (src/ppx.ml[102,2892+8]..src/ppx.ml[102,2892+9])
                  Texp_ident "x/1754"
                [
                  <case>
                    pattern (src/ppx.ml[103,2907+4]..src/ppx.ml[103,2907+21])
                      Tpat_value
                      pattern (src/ppx.ml[103,2907+4]..src/ppx.ml[103,2907+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[103,2907+17]..src/ppx.ml[103,2907+18])
                            Tpat_var "a/1755"
                          pattern (src/ppx.ml[103,2907+19]..src/ppx.ml[103,2907+20])
                            Tpat_var "b/1756"
                        ]
                        None
                    expression (src/ppx.ml[105,2978+4]..src/ppx.ml[114,3221+22])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[105,2978+8]..src/ppx.ml[105,2978+12])
                            Tpat_var "myid/1775"
                          expression (src/ppx.ml[105,2978+15]..src/ppx.ml[105,2978+29])
                            Texp_apply
                            expression (src/ppx.ml[105,2978+16]..src/ppx.ml[105,2978+26])
                              Texp_ident "process_id/1670"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[105,2978+27]..src/ppx.ml[105,2978+28])
                                  Texp_ident "a/1755"
                            ]
                      ]
                      expression (src/ppx.ml[106,3011+4]..src/ppx.ml[114,3221+22])
                        Texp_sequence
                        expression (src/ppx.ml[106,3011+4]..src/ppx.ml[106,3011+30])
                          Texp_apply
                          expression (src/ppx.ml[106,3011+5]..src/ppx.ml[106,3011+27])
                            Texp_ident "process_core_type_list/1747"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[106,3011+28]..src/ppx.ml[106,3011+29])
                                Texp_ident "b/1756"
                          ]
                        expression (src/ppx.ml[108,3044+4]..src/ppx.ml[114,3221+22])
                          Texp_sequence
                          expression (src/ppx.ml[108,3044+4]..src/ppx.ml[108,3044+46])
                            Texp_apply
                            expression (src/ppx.ml[108,3044+4]..src/ppx.ml[108,3044+17])
                              Texp_ident "Stdlib!.Printf.printf"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                          Texp_constant Const_string("DEBUG:Ptyp_constr1:",(src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost,None)
                                        expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                    expression (src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost
                                      Texp_constant Const_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[108,3044+18]..src/ppx.ml[108,3044+41]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[108,3044+42]..src/ppx.ml[108,3044+46])
                                  Texp_ident "myid/1775"
                            ]
                          expression (src/ppx.ml[111,3131+4]..src/ppx.ml[114,3221+22])
                            Texp_apply
                            expression (src/ppx.ml[111,3131+5]..src/ppx.ml[111,3131+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[111,3131+19]..src/ppx.ml[114,3221+21])
                                  Texp_apply
                                  expression (src/ppx.ml[111,3131+20]..src/ppx.ml[111,3131+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[111,3131+35]..src/ppx.ml[114,3221+20])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[112,3168+9]..src/ppx.ml[112,3168+29])
                                            Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[112,3168+10]..src/ppx.ml[112,3168+28]),None)
                                          expression (src/ppx.ml[113,3199+9]..src/ppx.ml[113,3199+13])
                                            Texp_constant Const_string("id",(src/ppx.ml[113,3199+10]..src/ppx.ml[113,3199+12]),None)
                                          expression (src/ppx.ml[113,3199+14]..src/ppx.ml[113,3199+15])
                                            Texp_ident "a/1755"
                                          expression (src/ppx.ml[113,3199+16]..src/ppx.ml[113,3199+20])
                                            Texp_ident "myid/1775"
                                          expression (src/ppx.ml[114,3221+9]..src/ppx.ml[114,3221+16])
                                            Texp_constant Const_string("types",(src/ppx.ml[114,3221+10]..src/ppx.ml[114,3221+15]),None)
                                          expression (src/ppx.ml[114,3221+17]..src/ppx.ml[114,3221+18])
                                            Texp_ident "b/1756"
                                        ]
                                  ]
                            ]
                  <case>
                    pattern (src/ppx.ml[116,3245+4]..src/ppx.ml[116,3245+16])
                      Tpat_value
                      pattern (src/ppx.ml[116,3245+4]..src/ppx.ml[116,3245+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[116,3245+15]..src/ppx.ml[116,3245+16])
                            Tpat_var "a/1757"
                        ]
                        None
                    expression (src/ppx.ml[118,3293+4]..src/ppx.ml[118,3293+59])
                      Texp_apply
                      expression (src/ppx.ml[118,3293+5]..src/ppx.ml[118,3293+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[118,3293+19]..src/ppx.ml[118,3293+58])
                            Texp_apply
                            expression (src/ppx.ml[118,3293+20]..src/ppx.ml[118,3293+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[118,3293+35]..src/ppx.ml[118,3293+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[118,3293+37]..src/ppx.ml[118,3293+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[121,3372+4]..src/ppx.ml[121,3372+12])
                      Tpat_value
                      pattern (src/ppx.ml[121,3372+4]..src/ppx.ml[121,3372+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[121,3372+17]..src/ppx.ml[121,3372+69])
                      Texp_apply
                      expression (src/ppx.ml[121,3372+18]..src/ppx.ml[121,3372+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[121,3372+32]..src/ppx.ml[121,3372+68])
                            Texp_apply
                            expression (src/ppx.ml[121,3372+33]..src/ppx.ml[121,3372+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[121,3372+48]..src/ppx.ml[121,3372+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[121,3372+50]..src/ppx.ml[121,3372+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[122,3442+4]..src/ppx.ml[122,3442+17])
                      Tpat_value
                      pattern (src/ppx.ml[122,3442+4]..src/ppx.ml[122,3442+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[122,3442+13]..src/ppx.ml[122,3442+17])
                            Tpat_var "name/1758"
                        ]
                        None
                    expression (src/ppx.ml[122,3442+20]..src/ppx.ml[122,3442+80])
                      Texp_apply
                      expression (src/ppx.ml[122,3442+21]..src/ppx.ml[122,3442+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[122,3442+35]..src/ppx.ml[122,3442+79])
                            Texp_apply
                            expression (src/ppx.ml[122,3442+36]..src/ppx.ml[122,3442+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[122,3442+51]..src/ppx.ml[122,3442+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[122,3442+52]..src/ppx.ml[122,3442+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[122,3442+53]..src/ppx.ml[122,3442+68]),None)
                                    expression (src/ppx.ml[122,3442+73]..src/ppx.ml[122,3442+77])
                                      Texp_ident "name/1758"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[123,3523+4]..src/ppx.ml[123,3523+51])
                      Tpat_value
                      pattern (src/ppx.ml[123,3523+4]..src/ppx.ml[123,3523+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[123,3523+16]..src/ppx.ml[123,3523+25])
                            Tpat_var "arg_label/1759"
                          pattern (src/ppx.ml[123,3523+28]..src/ppx.ml[123,3523+37])
                            Tpat_var "core_type/1760"
                          pattern (src/ppx.ml[123,3523+40]..src/ppx.ml[123,3523+50])
                            Tpat_var "core_type2/1761"
                        ]
                        None
                    expression (src/ppx.ml[124,3578+4]..src/ppx.ml[124,3578+61])
                      Texp_apply
                      expression (src/ppx.ml[124,3578+5]..src/ppx.ml[124,3578+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[124,3578+19]..src/ppx.ml[124,3578+60])
                            Texp_apply
                            expression (src/ppx.ml[124,3578+20]..src/ppx.ml[124,3578+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[124,3578+35]..src/ppx.ml[124,3578+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[124,3578+37]..src/ppx.ml[124,3578+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[126,3641+4]..src/ppx.ml[126,3641+21])
                      Tpat_value
                      pattern (src/ppx.ml[126,3641+4]..src/ppx.ml[126,3641+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[126,3641+17]..src/ppx.ml[126,3641+18])
                            Tpat_var "a/1762"
                          pattern (src/ppx.ml[126,3641+19]..src/ppx.ml[126,3641+20])
                            Tpat_var "b/1763"
                        ]
                        None
                    expression (src/ppx.ml[128,3710+4]..src/ppx.ml[128,3710+60])
                      Texp_apply
                      expression (src/ppx.ml[128,3710+5]..src/ppx.ml[128,3710+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[128,3710+19]..src/ppx.ml[128,3710+59])
                            Texp_apply
                            expression (src/ppx.ml[128,3710+20]..src/ppx.ml[128,3710+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[128,3710+35]..src/ppx.ml[128,3710+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[128,3710+37]..src/ppx.ml[128,3710+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[129,3771+4]..src/ppx.ml[129,3771+20])
                      Tpat_value
                      pattern (src/ppx.ml[129,3771+4]..src/ppx.ml[129,3771+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[129,3771+16]..src/ppx.ml[129,3771+17])
                            Tpat_var "a/1764"
                          pattern (src/ppx.ml[129,3771+18]..src/ppx.ml[129,3771+19])
                            Tpat_var "b/1765"
                        ]
                        None
                    expression (src/ppx.ml[131,3841+4]..src/ppx.ml[131,3841+60])
                      Texp_apply
                      expression (src/ppx.ml[131,3841+5]..src/ppx.ml[131,3841+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[131,3841+19]..src/ppx.ml[131,3841+59])
                            Texp_apply
                            expression (src/ppx.ml[131,3841+20]..src/ppx.ml[131,3841+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[131,3841+35]..src/ppx.ml[131,3841+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[131,3841+37]..src/ppx.ml[131,3841+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[132,3902+4]..src/ppx.ml[132,3902+20])
                      Tpat_value
                      pattern (src/ppx.ml[132,3902+4]..src/ppx.ml[132,3902+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[132,3902+16]..src/ppx.ml[132,3902+17])
                            Tpat_var "a/1766"
                          pattern (src/ppx.ml[132,3902+18]..src/ppx.ml[132,3902+19])
                            Tpat_var "b/1767"
                        ]
                        None
                    expression (src/ppx.ml[134,3963+4]..src/ppx.ml[134,3963+60])
                      Texp_apply
                      expression (src/ppx.ml[134,3963+5]..src/ppx.ml[134,3963+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[134,3963+19]..src/ppx.ml[134,3963+59])
                            Texp_apply
                            expression (src/ppx.ml[134,3963+20]..src/ppx.ml[134,3963+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[134,3963+35]..src/ppx.ml[134,3963+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[134,3963+37]..src/ppx.ml[134,3963+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[135,4024+4]..src/ppx.ml[135,4024+24])
                      Tpat_value
                      pattern (src/ppx.ml[135,4024+4]..src/ppx.ml[135,4024+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[135,4024+18]..src/ppx.ml[135,4024+19])
                            Tpat_var "a/1768"
                          pattern (src/ppx.ml[135,4024+20]..src/ppx.ml[135,4024+21])
                            Tpat_var "b/1769"
                          pattern (src/ppx.ml[135,4024+22]..src/ppx.ml[135,4024+23])
                            Tpat_var "c/1770"
                        ]
                        None
                    expression (src/ppx.ml[137,4114+4]..src/ppx.ml[137,4114+60])
                      Texp_apply
                      expression (src/ppx.ml[137,4114+5]..src/ppx.ml[137,4114+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[137,4114+19]..src/ppx.ml[137,4114+59])
                            Texp_apply
                            expression (src/ppx.ml[137,4114+20]..src/ppx.ml[137,4114+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[137,4114+35]..src/ppx.ml[137,4114+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[137,4114+37]..src/ppx.ml[137,4114+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[138,4175+4]..src/ppx.ml[138,4175+19])
                      Tpat_value
                      pattern (src/ppx.ml[138,4175+4]..src/ppx.ml[138,4175+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[138,4175+15]..src/ppx.ml[138,4175+16])
                            Tpat_var "a/1771"
                          pattern (src/ppx.ml[138,4175+17]..src/ppx.ml[138,4175+18])
                            Tpat_var "b/1772"
                        ]
                        None
                    expression (src/ppx.ml[140,4239+4]..src/ppx.ml[140,4239+60])
                      Texp_apply
                      expression (src/ppx.ml[140,4239+5]..src/ppx.ml[140,4239+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[140,4239+19]..src/ppx.ml[140,4239+59])
                            Texp_apply
                            expression (src/ppx.ml[140,4239+20]..src/ppx.ml[140,4239+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[140,4239+35]..src/ppx.ml[140,4239+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[140,4239+37]..src/ppx.ml[140,4239+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[141,4300+4]..src/ppx.ml[141,4300+18])
                      Tpat_value
                      pattern (src/ppx.ml[141,4300+4]..src/ppx.ml[141,4300+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[141,4300+17]..src/ppx.ml[141,4300+18])
                            Tpat_var "a/1773"
                        ]
                        None
                    expression (src/ppx.ml[143,4348+4]..src/ppx.ml[143,4348+62])
                      Texp_apply
                      expression (src/ppx.ml[143,4348+5]..src/ppx.ml[143,4348+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[143,4348+19]..src/ppx.ml[143,4348+61])
                            Texp_apply
                            expression (src/ppx.ml[143,4348+20]..src/ppx.ml[143,4348+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[143,4348+35]..src/ppx.ml[143,4348+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[143,4348+36]..src/ppx.ml[143,4348+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[143,4348+37]..src/ppx.ml[143,4348+55]),None)
                                    expression (src/ppx.ml[143,4348+57]..src/ppx.ml[143,4348+58])
                                      Texp_ident "a/1773"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[146,4556+4]..src/ppx.ml[146,4556+20])
                      Tpat_value
                      pattern (src/ppx.ml[146,4556+4]..src/ppx.ml[146,4556+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[146,4556+19]..src/ppx.ml[146,4556+20])
                            Tpat_var "a/1774"
                        ]
                        None
                    expression (src/ppx.ml[147,4604+4]..src/ppx.ml[147,4604+65])
                      Texp_apply
                      expression (src/ppx.ml[147,4604+5]..src/ppx.ml[147,4604+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[147,4604+19]..src/ppx.ml[147,4604+64])
                            Texp_apply
                            expression (src/ppx.ml[147,4604+20]..src/ppx.ml[147,4604+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[147,4604+35]..src/ppx.ml[147,4604+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[147,4604+36]..src/ppx.ml[147,4604+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[147,4604+37]..src/ppx.ml[147,4604+58]),None)
                                    expression (src/ppx.ml[147,4604+60]..src/ppx.ml[147,4604+61])
                                      Texp_ident "a/1774"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[149,4674+2]..src/ppx.ml[149,4674+26])
          Tpat_var "process_record_kind_list/1745"
        expression (src/ppx.ml[149,4674+26]..src/ppx.ml[155,4811+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[149,4674+26]..src/ppx.ml[149,4674+29])
                Tpat_var "x/1838"
              expression (src/ppx.ml[150,4706+2]..src/ppx.ml[155,4811+6])
                Texp_match
                expression (src/ppx.ml[150,4706+8]..src/ppx.ml[150,4706+9])
                  Texp_ident "x/1838"
                [
                  <case>
                    pattern (src/ppx.ml[151,4721+4]..src/ppx.ml[151,4721+6])
                      Tpat_value
                      pattern (src/ppx.ml[151,4721+4]..src/ppx.ml[151,4721+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[151,4721+10]..src/ppx.ml[151,4721+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[152,4734+4]..src/ppx.ml[152,4734+10])
                      Tpat_value
                      pattern (src/ppx.ml[152,4734+4]..src/ppx.ml[152,4734+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[152,4734+4]..src/ppx.ml[152,4734+5])
                            Tpat_var "h/1839"
                          pattern (src/ppx.ml[152,4734+9]..src/ppx.ml[152,4734+10])
                            Tpat_var "t/1840"
                        ]
                        None
                    expression (src/ppx.ml[153,4748+4]..src/ppx.ml[155,4811+6])
                      Texp_sequence
                      expression (src/ppx.ml[153,4748+4]..src/ppx.ml[153,4748+27])
                        Texp_apply
                        expression (src/ppx.ml[153,4748+5]..src/ppx.ml[153,4748+24])
                          Texp_ident "process_record_kind/1743"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[153,4748+25]..src/ppx.ml[153,4748+26])
                              Texp_ident "h/1839"
                        ]
                      expression (src/ppx.ml[154,4777+4]..src/ppx.ml[155,4811+6])
                        Texp_sequence
                        expression (src/ppx.ml[154,4777+4]..src/ppx.ml[154,4777+32])
                          Texp_apply
                          expression (src/ppx.ml[154,4777+5]..src/ppx.ml[154,4777+29])
                            Texp_ident "process_record_kind_list/1745"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[154,4777+30]..src/ppx.ml[154,4777+31])
                                Texp_ident "t/1840"
                          ]
                        expression (src/ppx.ml[155,4811+4]..src/ppx.ml[155,4811+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[157,4822+0]..src/ppx.ml[157,4822+17])
          Tpat_var "process_core_type/1746"
        expression (src/ppx.ml[157,4822+17]..src/ppx.ml[167,5089+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[157,4822+17]..src/ppx.ml[157,4822+20])
                Tpat_var "x/1841"
              expression (src/ppx.ml[158,4845+2]..src/ppx.ml[167,5089+80])
                Texp_match
                expression (src/ppx.ml[158,4845+8]..src/ppx.ml[158,4845+9])
                  Texp_ident "x/1841"
                [
                  <case>
                    pattern (src/ppx.ml[159,4861+4]..src/ppx.ml[164,5022+5])
                      Tpat_value
                      pattern (src/ppx.ml[159,4861+4]..src/ppx.ml[164,5022+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[160,4867+6]..src/ppx.ml[160,4867+15])
                              Tpat_var "ptyp_desc/1842"
                          "ptyp_loc"
                            pattern (src/ppx.ml[161,4906+5]..src/ppx.ml[161,4906+13])
                              Tpat_var "ptyp_loc/1843"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[162,4939+5]..src/ppx.ml[162,4939+19])
                              Tpat_var "ptyp_loc_stack/1844"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[163,4982+5]..src/ppx.ml[163,4982+20])
                              Tpat_var "ptyp_attributes/1845"
                        ]
                    expression (src/ppx.ml[165,5030+4]..src/ppx.ml[167,5089+80])
                      Texp_sequence
                      expression (src/ppx.ml[165,5030+4]..src/ppx.ml[165,5030+38])
                        Texp_apply
                        expression (src/ppx.ml[165,5030+5]..src/ppx.ml[165,5030+27])
                          Texp_ident "process_core_type_desc/1744"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[165,5030+28]..src/ppx.ml[165,5030+37])
                              Texp_ident "ptyp_desc/1842"
                        ]
                      expression (src/ppx.ml[167,5089+4]..src/ppx.ml[167,5089+80])
                        Texp_apply
                        expression (src/ppx.ml[167,5089+5]..src/ppx.ml[167,5089+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[167,5089+19]..src/ppx.ml[167,5089+79])
                              Texp_apply
                              expression (src/ppx.ml[167,5089+20]..src/ppx.ml[167,5089+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[167,5089+35]..src/ppx.ml[167,5089+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[167,5089+36]..src/ppx.ml[167,5089+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[167,5089+37]..src/ppx.ml[167,5089+63]),None)
                                      expression (src/ppx.ml[167,5089+68]..src/ppx.ml[167,5089+77])
                                        Texp_ident "ptyp_desc/1842"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[168,5170+4]..src/ppx.ml[168,5170+26])
          Tpat_var "process_core_type_list/1747"
        expression (src/ppx.ml[168,5170+26]..src/ppx.ml[173,5286+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[168,5170+27]..src/ppx.ml[168,5170+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[168,5170+29]..src/ppx.ml[168,5170+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[168,5170+29]..src/ppx.ml[168,5170+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1846"
                pattern (src/ppx.ml[168,5170+27]..src/ppx.ml[168,5170+28])
                  Tpat_any
              expression (src/ppx.ml[169,5217+2]..src/ppx.ml[173,5286+29])
                Texp_match
                expression (src/ppx.ml[169,5217+8]..src/ppx.ml[169,5217+9])
                  Texp_ident "x/1846"
                [
                  <case>
                    pattern (src/ppx.ml[170,5232+4]..src/ppx.ml[170,5232+6])
                      Tpat_value
                      pattern (src/ppx.ml[170,5232+4]..src/ppx.ml[170,5232+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[170,5232+10]..src/ppx.ml[170,5232+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[171,5245+4]..src/ppx.ml[171,5245+10])
                      Tpat_value
                      pattern (src/ppx.ml[171,5245+4]..src/ppx.ml[171,5245+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[171,5245+4]..src/ppx.ml[171,5245+5])
                            Tpat_var "h/1847"
                          pattern (src/ppx.ml[171,5245+9]..src/ppx.ml[171,5245+10])
                            Tpat_var "t/1848"
                        ]
                        None
                    expression (src/ppx.ml[172,5259+4]..src/ppx.ml[173,5286+29])
                      Texp_sequence
                      expression (src/ppx.ml[172,5259+4]..src/ppx.ml[172,5259+25])
                        Texp_apply
                        expression (src/ppx.ml[172,5259+4]..src/ppx.ml[172,5259+21])
                          Texp_ident "process_core_type/1746"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[172,5259+22]..src/ppx.ml[172,5259+25])
                              Texp_ident "h/1847"
                        ]
                      expression (src/ppx.ml[173,5286+4]..src/ppx.ml[173,5286+29])
                        Texp_apply
                        expression (src/ppx.ml[173,5286+4]..src/ppx.ml[173,5286+26])
                          Texp_ident "process_core_type_list/1747"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[173,5286+26]..src/ppx.ml[173,5286+29])
                              Texp_ident "t/1848"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[180,5330+0]..src/ppx.ml[187,5529+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[180,5330+4]..src/ppx.ml[180,5330+31])
          Tpat_var "print_constructor_arguments/1849"
        expression (src/ppx.ml[180,5330+31]..src/ppx.ml[187,5529+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[180,5330+31]..src/ppx.ml[180,5330+34])
                Tpat_var "x/1851"
              expression (src/ppx.ml[181,5367+2]..src/ppx.ml[187,5529+65])
                Texp_match
                expression (src/ppx.ml[181,5367+8]..src/ppx.ml[181,5367+9])
                  Texp_ident "x/1851"
                [
                  <case>
                    pattern (src/ppx.ml[182,5382+4]..src/ppx.ml[182,5382+17])
                      Tpat_value
                      pattern (src/ppx.ml[182,5382+4]..src/ppx.ml[182,5382+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[182,5382+16]..src/ppx.ml[182,5382+17])
                            Tpat_var "a/1852"
                        ]
                        None
                    expression (src/ppx.ml[183,5403+4]..src/ppx.ml[184,5435+64])
                      Texp_sequence
                      expression (src/ppx.ml[183,5403+4]..src/ppx.ml[183,5403+30])
                        Texp_apply
                        expression (src/ppx.ml[183,5403+5]..src/ppx.ml[183,5403+27])
                          Texp_ident "process_core_type_list/1747"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[183,5403+28]..src/ppx.ml[183,5403+29])
                              Texp_ident "a/1852"
                        ]
                      expression (src/ppx.ml[184,5435+4]..src/ppx.ml[184,5435+64])
                        Texp_apply
                        expression (src/ppx.ml[184,5435+5]..src/ppx.ml[184,5435+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[184,5435+19]..src/ppx.ml[184,5435+63])
                              Texp_apply
                              expression (src/ppx.ml[184,5435+20]..src/ppx.ml[184,5435+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[184,5435+35]..src/ppx.ml[184,5435+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[184,5435+36]..src/ppx.ml[184,5435+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[184,5435+37]..src/ppx.ml[184,5435+55]),None)
                                      expression (src/ppx.ml[184,5435+60]..src/ppx.ml[184,5435+61])
                                        Texp_ident "a/1852"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[186,5507+4]..src/ppx.ml[186,5507+18])
                      Tpat_value
                      pattern (src/ppx.ml[186,5507+4]..src/ppx.ml[186,5507+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[186,5507+17]..src/ppx.ml[186,5507+18])
                            Tpat_var "a/1853"
                        ]
                        None
                    expression (src/ppx.ml[187,5529+4]..src/ppx.ml[187,5529+65])
                      Texp_apply
                      expression (src/ppx.ml[187,5529+5]..src/ppx.ml[187,5529+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[187,5529+19]..src/ppx.ml[187,5529+64])
                            Texp_apply
                            expression (src/ppx.ml[187,5529+20]..src/ppx.ml[187,5529+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[187,5529+35]..src/ppx.ml[187,5529+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[187,5529+36]..src/ppx.ml[187,5529+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[187,5529+37]..src/ppx.ml[187,5529+56]),None)
                                    expression (src/ppx.ml[187,5529+61]..src/ppx.ml[187,5529+62])
                                      Texp_ident "a/1853"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[189,5596+0]..src/ppx.ml[221,6572+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[189,5596+8]..src/ppx.ml[189,5596+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1854"
        expression (src/ppx.ml[189,5596+57]..src/ppx.ml[221,6572+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[189,5596+57]..src/ppx.ml[189,5596+60])
                Tpat_var "x/1855"
              expression (src/ppx.ml[190,5659+2]..src/ppx.ml[221,6572+8])
                Texp_match
                expression (src/ppx.ml[190,5659+8]..src/ppx.ml[190,5659+9])
                  Texp_ident "x/1855"
                [
                  <case>
                    pattern (src/ppx.ml[191,5674+4]..src/ppx.ml[191,5674+6])
                      Tpat_value
                      pattern (src/ppx.ml[191,5674+4]..src/ppx.ml[191,5674+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[191,5674+10]..src/ppx.ml[191,5674+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[192,5687+4]..src/ppx.ml[192,5687+10])
                      Tpat_value
                      pattern (src/ppx.ml[192,5687+4]..src/ppx.ml[192,5687+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[192,5687+4]..src/ppx.ml[192,5687+5])
                            Tpat_var "h/1856"
                          pattern (src/ppx.ml[192,5687+9]..src/ppx.ml[192,5687+10])
                            Tpat_var "t/1857"
                        ]
                        None
                    expression (src/ppx.ml[194,5766+4]..src/ppx.ml[221,6572+8])
                      Texp_match
                      expression (src/ppx.ml[194,5766+10]..src/ppx.ml[194,5766+11])
                        Texp_ident "h/1856"
                      [
                        <case>
                          pattern (src/ppx.ml[195,5783+5]..src/ppx.ml[202,6021+5])
                            Tpat_value
                            pattern (src/ppx.ml[195,5783+5]..src/ppx.ml[202,6021+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[196,5790+6]..src/ppx.ml[196,5790+14])
                                    Tpat_var "pcd_name/1858"
                                "pcd_vars"
                                  pattern (src/ppx.ml[197,5824+6]..src/ppx.ml[197,5824+14])
                                    Tpat_var "pcd_vars/1859"
                                "pcd_args"
                                  pattern (src/ppx.ml[198,5863+6]..src/ppx.ml[198,5863+14])
                                    Tpat_var "pcd_args/1860"
                                "pcd_res"
                                  pattern (src/ppx.ml[199,5908+6]..src/ppx.ml[199,5908+13])
                                    Tpat_var "pcd_res/1861"
                                "pcd_loc"
                                  pattern (src/ppx.ml[200,5947+6]..src/ppx.ml[200,5947+13])
                                    Tpat_var "pcd_loc/1862"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[201,5980+6]..src/ppx.ml[201,5980+20])
                                    Tpat_var "pcd_attributes/1863"
                              ]
                          expression (src/ppx.ml[205,6103+6]..src/ppx.ml[221,6572+8])
                            Texp_sequence
                            expression (src/ppx.ml[205,6103+6]..src/ppx.ml[205,6103+43])
                              Texp_apply
                              expression (src/ppx.ml[205,6103+6]..src/ppx.ml[205,6103+33])
                                Texp_ident "print_constructor_arguments/1849"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[205,6103+33]..src/ppx.ml[205,6103+43])
                                    Texp_ident "pcd_args/1860"
                              ]
                            expression (src/ppx.ml[206,6148+6]..src/ppx.ml[221,6572+8])
                              Texp_sequence
                              expression (src/ppx.ml[206,6148+6]..src/ppx.ml[219,6493+16])
                                Texp_apply
                                expression (src/ppx.ml[206,6148+7]..src/ppx.ml[206,6148+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[206,6148+21]..src/ppx.ml[219,6493+15])
                                      Texp_apply
                                      expression (src/ppx.ml[206,6148+22]..src/ppx.ml[206,6148+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[206,6148+37]..src/ppx.ml[219,6493+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[207,6187+11]..src/ppx.ml[207,6187+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[207,6187+12]..src/ppx.ml[207,6187+36]),None)
                                              expression (src/ppx.ml[208,6226+15]..src/ppx.ml[208,6226+23])
                                                Texp_ident "pcd_name/1858"
                                              expression (src/ppx.ml[209,6251+15]..src/ppx.ml[209,6251+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[209,6251+16]..src/ppx.ml[209,6251+20]),None)
                                              expression (src/ppx.ml[210,6274+15]..src/ppx.ml[210,6274+23])
                                                Texp_ident "pcd_vars/1859"
                                              expression (src/ppx.ml[211,6299+15]..src/ppx.ml[211,6299+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[211,6299+16]..src/ppx.ml[211,6299+20]),None)
                                              expression (src/ppx.ml[212,6322+15]..src/ppx.ml[212,6322+23])
                                                Texp_ident "pcd_args/1860"
                                              expression (src/ppx.ml[213,6347+15]..src/ppx.ml[213,6347+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[213,6347+16]..src/ppx.ml[213,6347+19]),None)
                                              expression (src/ppx.ml[214,6369+15]..src/ppx.ml[214,6369+22])
                                                Texp_ident "pcd_res/1861"
                                              expression (src/ppx.ml[215,6393+15]..src/ppx.ml[215,6393+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[215,6393+16]..src/ppx.ml[215,6393+19]),None)
                                              expression (src/ppx.ml[216,6415+15]..src/ppx.ml[216,6415+22])
                                                Texp_ident "pcd_loc/1862"
                                              expression (src/ppx.ml[217,6439+15]..src/ppx.ml[217,6439+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[217,6439+16]..src/ppx.ml[217,6439+21]),None)
                                              expression (src/ppx.ml[218,6463+15]..src/ppx.ml[218,6463+29])
                                                Texp_ident "pcd_attributes/1863"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[220,6511+6]..src/ppx.ml[221,6572+8])
                                Texp_sequence
                                expression (src/ppx.ml[220,6511+6]..src/ppx.ml[220,6511+59])
                                  Texp_apply
                                  expression (src/ppx.ml[220,6511+7]..src/ppx.ml[220,6511+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1854"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[220,6511+57]..src/ppx.ml[220,6511+58])
                                        Texp_ident "t/1857"
                                  ]
                                expression (src/ppx.ml[221,6572+6]..src/ppx.ml[221,6572+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[223,6584+0]..src/ppx.ml[234,6981+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[223,6584+4]..src/ppx.ml[223,6584+16])
          Tpat_var "process_kind/1864"
        expression (src/ppx.ml[223,6584+16]..src/ppx.ml[234,6981+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[223,6584+16]..src/ppx.ml[223,6584+19])
                Tpat_var "x/1866"
              expression (src/ppx.ml[224,6606+2]..src/ppx.ml[234,6981+77])
                Texp_match
                expression (src/ppx.ml[224,6606+8]..src/ppx.ml[224,6606+9])
                  Texp_ident "x/1866"
                [
                  <case>
                    pattern (src/ppx.ml[226,6643+4]..src/ppx.ml[226,6643+18])
                      Tpat_value
                      pattern (src/ppx.ml[226,6643+4]..src/ppx.ml[226,6643+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[226,6643+23]..src/ppx.ml[226,6643+81])
                      Texp_apply
                      expression (src/ppx.ml[226,6643+24]..src/ppx.ml[226,6643+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[226,6643+38]..src/ppx.ml[226,6643+80])
                            Texp_apply
                            expression (src/ppx.ml[226,6643+39]..src/ppx.ml[226,6643+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[226,6643+54]..src/ppx.ml[226,6643+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6643+56]..src/ppx.ml[226,6643+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[227,6725+4]..src/ppx.ml[227,6725+19])
                      Tpat_value
                      pattern (src/ppx.ml[227,6725+4]..src/ppx.ml[227,6725+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[227,6725+18]..src/ppx.ml[227,6725+19])
                            Tpat_var "a/1867"
                        ]
                        None
                    expression (src/ppx.ml[228,6748+4]..src/ppx.ml[229,6807+65])
                      Texp_sequence
                      expression (src/ppx.ml[228,6748+4]..src/ppx.ml[228,6748+57])
                        Texp_apply
                        expression (src/ppx.ml[228,6748+5]..src/ppx.ml[228,6748+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1854"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[228,6748+55]..src/ppx.ml[228,6748+56])
                              Texp_ident "a/1867"
                        ]
                      expression (src/ppx.ml[229,6807+4]..src/ppx.ml[229,6807+65])
                        Texp_apply
                        expression (src/ppx.ml[229,6807+5]..src/ppx.ml[229,6807+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[229,6807+19]..src/ppx.ml[229,6807+64])
                              Texp_apply
                              expression (src/ppx.ml[229,6807+20]..src/ppx.ml[229,6807+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[229,6807+35]..src/ppx.ml[229,6807+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[229,6807+36]..src/ppx.ml[229,6807+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[229,6807+37]..src/ppx.ml[229,6807+57]),None)
                                      expression (src/ppx.ml[229,6807+61]..src/ppx.ml[229,6807+62])
                                        Texp_ident "a/1867"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[232,6920+5]..src/ppx.ml[232,6920+19])
                      Tpat_value
                      pattern (src/ppx.ml[232,6920+5]..src/ppx.ml[232,6920+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[232,6920+18]..src/ppx.ml[232,6920+19])
                            Tpat_var "a/1868"
                        ]
                        None
                    expression (src/ppx.ml[233,6948+5]..src/ppx.ml[233,6948+32])
                      Texp_apply
                      expression (src/ppx.ml[233,6948+5]..src/ppx.ml[233,6948+29])
                        Texp_ident "process_record_kind_list/1745"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[233,6948+29]..src/ppx.ml[233,6948+32])
                            Texp_ident "a/1868"
                      ]
                  <case>
                    pattern (src/ppx.ml[234,6981+5]..src/ppx.ml[234,6981+15])
                      Tpat_value
                      pattern (src/ppx.ml[234,6981+5]..src/ppx.ml[234,6981+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[234,6981+19]..src/ppx.ml[234,6981+77])
                      Texp_apply
                      expression (src/ppx.ml[234,6981+20]..src/ppx.ml[234,6981+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[234,6981+34]..src/ppx.ml[234,6981+76])
                            Texp_apply
                            expression (src/ppx.ml[234,6981+35]..src/ppx.ml[234,6981+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[234,6981+50]..src/ppx.ml[234,6981+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[234,6981+52]..src/ppx.ml[234,6981+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[236,7060+0]..src/ppx.ml[257,8066+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[236,7060+4]..src/ppx.ml[236,7060+19])
          Tpat_var "print_type_decl/1869"
        expression (src/ppx.ml[236,7060+19]..src/ppx.ml[257,8066+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[236,7060+19]..src/ppx.ml[236,7060+22])
                Tpat_var "x/1871"
              expression (src/ppx.ml[237,7085+2]..src/ppx.ml[257,8066+38])
                Texp_match
                expression (src/ppx.ml[237,7085+8]..src/ppx.ml[237,7085+9])
                  Texp_ident "x/1871"
                [
                  <case>
                    pattern (src/ppx.ml[238,7100+4]..src/ppx.ml[247,7481+5])
                      Tpat_value
                      pattern (src/ppx.ml[238,7100+4]..src/ppx.ml[247,7481+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[239,7106+6]..src/ppx.ml[239,7106+16])
                              Tpat_var "ptype_name/1872"
                          "ptype_params"
                            pattern (src/ppx.ml[240,7143+6]..src/ppx.ml[240,7143+18])
                              Tpat_var "ptype_params/1873"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[241,7215+6]..src/ppx.ml[241,7215+17])
                              Tpat_var "ptype_cstrs/1874"
                          "ptype_kind"
                            pattern (src/ppx.ml[242,7284+6]..src/ppx.ml[242,7284+16])
                              Tpat_var "ptype_kind/1875"
                          "ptype_private"
                            pattern (src/ppx.ml[243,7321+6]..src/ppx.ml[243,7321+19])
                              Tpat_var "ptype_private/1876"
                          "ptype_manifest"
                            pattern (src/ppx.ml[244,7362+6]..src/ppx.ml[244,7362+20])
                              Tpat_var "ptype_manifest/1877"
                          "ptype_attributes"
                            pattern (src/ppx.ml[245,7409+6]..src/ppx.ml[245,7409+22])
                              Tpat_var "ptype_attributes/1878"
                          "ptype_loc"
                            pattern (src/ppx.ml[246,7450+6]..src/ppx.ml[246,7450+15])
                              Tpat_var "ptype_loc/1879"
                        ]
                    expression (src/ppx.ml[248,7490+4]..src/ppx.ml[257,8066+38])
                      Texp_sequence
                      expression (src/ppx.ml[248,7490+4]..src/ppx.ml[248,7490+69])
                        Texp_apply
                        expression (src/ppx.ml[248,7490+5]..src/ppx.ml[248,7490+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[248,7490+19]..src/ppx.ml[248,7490+68])
                              Texp_apply
                              expression (src/ppx.ml[248,7490+20]..src/ppx.ml[248,7490+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[248,7490+35]..src/ppx.ml[248,7490+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[248,7490+36]..src/ppx.ml[248,7490+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[248,7490+37]..src/ppx.ml[248,7490+53]),None)
                                      expression (src/ppx.ml[248,7490+56]..src/ppx.ml[248,7490+66])
                                        Texp_ident "ptype_name/1872"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[249,7561+4]..src/ppx.ml[257,8066+38])
                        Texp_sequence
                        expression (src/ppx.ml[249,7561+4]..src/ppx.ml[249,7561+72])
                          Texp_apply
                          expression (src/ppx.ml[249,7561+5]..src/ppx.ml[249,7561+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,7561+19]..src/ppx.ml[249,7561+71])
                                Texp_apply
                                expression (src/ppx.ml[249,7561+20]..src/ppx.ml[249,7561+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[249,7561+35]..src/ppx.ml[249,7561+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[249,7561+36]..src/ppx.ml[249,7561+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[249,7561+37]..src/ppx.ml[249,7561+54]),None)
                                        expression (src/ppx.ml[249,7561+57]..src/ppx.ml[249,7561+69])
                                          Texp_ident "ptype_params/1873"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[250,7635+4]..src/ppx.ml[257,8066+38])
                          Texp_sequence
                          expression (src/ppx.ml[250,7635+4]..src/ppx.ml[250,7635+66])
                            Texp_apply
                            expression (src/ppx.ml[250,7635+5]..src/ppx.ml[250,7635+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[250,7635+19]..src/ppx.ml[250,7635+65])
                                  Texp_apply
                                  expression (src/ppx.ml[250,7635+20]..src/ppx.ml[250,7635+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[250,7635+35]..src/ppx.ml[250,7635+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[250,7635+36]..src/ppx.ml[250,7635+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[250,7635+37]..src/ppx.ml[250,7635+49]),None)
                                          expression (src/ppx.ml[250,7635+52]..src/ppx.ml[250,7635+63])
                                            Texp_ident "ptype_cstrs/1874"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[251,7703+4]..src/ppx.ml[257,8066+38])
                            Texp_sequence
                            expression (src/ppx.ml[251,7703+4]..src/ppx.ml[251,7703+63])
                              Texp_apply
                              expression (src/ppx.ml[251,7703+5]..src/ppx.ml[251,7703+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[251,7703+19]..src/ppx.ml[251,7703+62])
                                    Texp_apply
                                    expression (src/ppx.ml[251,7703+20]..src/ppx.ml[251,7703+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[251,7703+35]..src/ppx.ml[251,7703+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[251,7703+36]..src/ppx.ml[251,7703+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[251,7703+37]..src/ppx.ml[251,7703+48]),None)
                                            expression (src/ppx.ml[251,7703+50]..src/ppx.ml[251,7703+60])
                                              Texp_ident "ptype_kind/1875"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[252,7768+4]..src/ppx.ml[257,8066+38])
                              Texp_sequence
                              expression (src/ppx.ml[252,7768+4]..src/ppx.ml[252,7768+29])
                                Texp_apply
                                expression (src/ppx.ml[252,7768+5]..src/ppx.ml[252,7768+17])
                                  Texp_ident "process_kind/1864"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[252,7768+18]..src/ppx.ml[252,7768+28])
                                      Texp_ident "ptype_kind/1875"
                                ]
                              expression (src/ppx.ml[253,7799+4]..src/ppx.ml[257,8066+38])
                                Texp_apply
                                expression (src/ppx.ml[253,7799+5]..src/ppx.ml[253,7799+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[253,7799+19]..src/ppx.ml[257,8066+37])
                                      Texp_apply
                                      expression (src/ppx.ml[253,7799+20]..src/ppx.ml[253,7799+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[253,7799+35]..src/ppx.ml[257,8066+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[253,7799+36]..src/ppx.ml[253,7799+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[253,7799+37]..src/ppx.ml[253,7799+51]),None)
                                              expression (src/ppx.ml[253,7799+55]..src/ppx.ml[253,7799+68])
                                                Texp_ident "ptype_private/1876"
                                              expression (src/ppx.ml[254,7869+36]..src/ppx.ml[254,7869+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[254,7869+37]..src/ppx.ml[254,7869+51]),None)
                                              expression (src/ppx.ml[254,7869+54]..src/ppx.ml[254,7869+68])
                                                Texp_ident "ptype_manifest/1877"
                                              expression (src/ppx.ml[255,7939+36]..src/ppx.ml[255,7939+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[255,7939+37]..src/ppx.ml[255,7939+47]),None)
                                              expression (src/ppx.ml[255,7939+50]..src/ppx.ml[255,7939+66])
                                                Texp_ident "ptype_attributes/1878"
                                              expression (src/ppx.ml[256,8007+36]..src/ppx.ml[256,8007+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[256,8007+37]..src/ppx.ml[256,8007+46]),None)
                                              expression (src/ppx.ml[256,8007+49]..src/ppx.ml[256,8007+58])
                                                Texp_ident "ptype_loc/1879"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[259,8110+0]..src/ppx.ml[265,8245+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[259,8110+8]..src/ppx.ml[259,8110+30])
          Tpat_var "process_type_decl_list/1880"
        expression (src/ppx.ml[259,8110+30]..src/ppx.ml[265,8245+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[259,8110+30]..src/ppx.ml[259,8110+33])
                Tpat_var "x/1881"
              expression (src/ppx.ml[260,8146+2]..src/ppx.ml[265,8245+6])
                Texp_match
                expression (src/ppx.ml[260,8146+8]..src/ppx.ml[260,8146+9])
                  Texp_ident "x/1881"
                [
                  <case>
                    pattern (src/ppx.ml[261,8161+4]..src/ppx.ml[261,8161+6])
                      Tpat_value
                      pattern (src/ppx.ml[261,8161+4]..src/ppx.ml[261,8161+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[261,8161+10]..src/ppx.ml[261,8161+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[262,8174+4]..src/ppx.ml[262,8174+10])
                      Tpat_value
                      pattern (src/ppx.ml[262,8174+4]..src/ppx.ml[262,8174+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[262,8174+4]..src/ppx.ml[262,8174+5])
                            Tpat_var "h/1882"
                          pattern (src/ppx.ml[262,8174+9]..src/ppx.ml[262,8174+10])
                            Tpat_var "t/1883"
                        ]
                        None
                    expression (src/ppx.ml[263,8188+4]..src/ppx.ml[265,8245+6])
                      Texp_sequence
                      expression (src/ppx.ml[263,8188+4]..src/ppx.ml[263,8188+23])
                        Texp_apply
                        expression (src/ppx.ml[263,8188+5]..src/ppx.ml[263,8188+20])
                          Texp_ident "print_type_decl/1869"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,8188+21]..src/ppx.ml[263,8188+22])
                              Texp_ident "h/1882"
                        ]
                      expression (src/ppx.ml[264,8213+4]..src/ppx.ml[265,8245+6])
                        Texp_sequence
                        expression (src/ppx.ml[264,8213+4]..src/ppx.ml[264,8213+30])
                          Texp_apply
                          expression (src/ppx.ml[264,8213+5]..src/ppx.ml[264,8213+27])
                            Texp_ident "process_type_decl_list/1880"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[264,8213+28]..src/ppx.ml[264,8213+29])
                                Texp_ident "t/1883"
                          ]
                        expression (src/ppx.ml[265,8245+4]..src/ppx.ml[265,8245+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[267,8257+0]..src/ppx.ml[293,10221+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,8257+4]..src/ppx.ml[267,8257+13])
          Tpat_var "printdesc/1884"
        expression (src/ppx.ml[267,8257+13]..src/ppx.ml[293,10221+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[267,8257+14]..src/ppx.ml[267,8257+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[267,8257+17]..src/ppx.ml[267,8257+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1886"
                pattern (src/ppx.ml[267,8257+14]..src/ppx.ml[267,8257+15])
                  Tpat_any
              expression (src/ppx.ml[268,8303+2]..src/ppx.ml[293,10221+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[267,8257+39]..src/ppx.ml[267,8257+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[268,8303+2]..src/ppx.ml[268,8303+68])
                  Texp_apply
                  expression (src/ppx.ml[268,8303+3]..src/ppx.ml[268,8303+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[268,8303+17]..src/ppx.ml[268,8303+67])
                        Texp_apply
                        expression (src/ppx.ml[268,8303+18]..src/ppx.ml[268,8303+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8303+33]..src/ppx.ml[268,8303+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[268,8303+34]..src/ppx.ml[268,8303+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[268,8303+35]..src/ppx.ml[268,8303+61]),None)
                                expression (src/ppx.ml[268,8303+64]..src/ppx.ml[268,8303+65])
                                  Texp_ident "x/1886"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[269,8373+2]..src/ppx.ml[293,10221+128])
                  Texp_match
                  expression (src/ppx.ml[269,8373+8]..src/ppx.ml[269,8373+9])
                    Texp_ident "x/1886"
                  [
                    <case>
                      pattern (src/ppx.ml[270,8388+4]..src/ppx.ml[270,8388+37])
                        Tpat_value
                        pattern (src/ppx.ml[270,8388+4]..src/ppx.ml[270,8388+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[270,8388+15]..src/ppx.ml[270,8388+25])
                              Tpat_var "expression/1887"
                            pattern (src/ppx.ml[270,8388+26]..src/ppx.ml[270,8388+36])
                              Tpat_var "attributes/1888"
                          ]
                          None
                      expression (src/ppx.ml[270,8388+41]..src/ppx.ml[270,8388+117])
                        Texp_apply
                        expression (src/ppx.ml[270,8388+42]..src/ppx.ml[270,8388+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[270,8388+56]..src/ppx.ml[270,8388+116])
                              Texp_apply
                              expression (src/ppx.ml[270,8388+57]..src/ppx.ml[270,8388+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[270,8388+72]..src/ppx.ml[270,8388+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[270,8388+73]..src/ppx.ml[270,8388+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[270,8388+74]..src/ppx.ml[270,8388+90]),None)
                                      expression (src/ppx.ml[270,8388+93]..src/ppx.ml[270,8388+103])
                                        Texp_ident "expression/1887"
                                      expression (src/ppx.ml[270,8388+104]..src/ppx.ml[270,8388+114])
                                        Texp_ident "attributes/1888"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[272,8526+4]..src/ppx.ml[272,8526+45])
                        Tpat_value
                        pattern (src/ppx.ml[272,8526+4]..src/ppx.ml[272,8526+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[272,8526+16]..src/ppx.ml[272,8526+24])
                              Tpat_var "rec_flag/1889"
                            pattern (src/ppx.ml[272,8526+26]..src/ppx.ml[272,8526+44])
                              Tpat_var "value_binding_list/1890"
                          ]
                          None
                      expression (src/ppx.ml[272,8526+48]..src/ppx.ml[273,8660+48])
                        Texp_sequence
                        expression (src/ppx.ml[272,8526+48]..src/ppx.ml[272,8526+132])
                          Texp_apply
                          expression (src/ppx.ml[272,8526+49]..src/ppx.ml[272,8526+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[272,8526+63]..src/ppx.ml[272,8526+131])
                                Texp_apply
                                expression (src/ppx.ml[272,8526+64]..src/ppx.ml[272,8526+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[272,8526+79]..src/ppx.ml[272,8526+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[272,8526+80]..src/ppx.ml[272,8526+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[272,8526+81]..src/ppx.ml[272,8526+98]),None)
                                        expression (src/ppx.ml[272,8526+101]..src/ppx.ml[272,8526+109])
                                          Texp_ident "rec_flag/1889"
                                        expression (src/ppx.ml[272,8526+111]..src/ppx.ml[272,8526+129])
                                          Texp_ident "value_binding_list/1890"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[273,8660+4]..src/ppx.ml[273,8660+48])
                          Texp_apply
                          expression (src/ppx.ml[273,8660+4]..src/ppx.ml[273,8660+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[273,8660+28]..src/ppx.ml[273,8660+48])
                                Texp_ident "value_binding_list/1890"
                          ]
                    <case>
                      pattern (src/ppx.ml[274,8709+4]..src/ppx.ml[274,8709+36])
                        Tpat_value
                        pattern (src/ppx.ml[274,8709+4]..src/ppx.ml[274,8709+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[274,8709+19]..src/ppx.ml[274,8709+36])
                              Tpat_var "value_description/1891"
                          ]
                          None
                      expression (src/ppx.ml[274,8709+39]..src/ppx.ml[274,8709+116])
                        Texp_apply
                        expression (src/ppx.ml[274,8709+40]..src/ppx.ml[274,8709+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,8709+54]..src/ppx.ml[274,8709+115])
                              Texp_apply
                              expression (src/ppx.ml[274,8709+55]..src/ppx.ml[274,8709+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,8709+70]..src/ppx.ml[274,8709+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,8709+71]..src/ppx.ml[274,8709+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[274,8709+72]..src/ppx.ml[274,8709+93]),None)
                                      expression (src/ppx.ml[274,8709+96]..src/ppx.ml[274,8709+113])
                                        Texp_ident "value_description/1891"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,8827+4]..src/ppx.ml[276,8827+47])
                        Tpat_value
                        pattern (src/ppx.ml[276,8827+4]..src/ppx.ml[276,8827+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[276,8827+15]..src/ppx.ml[276,8827+23])
                              Tpat_var "rec_flag/1892"
                            pattern (src/ppx.ml[276,8827+25]..src/ppx.ml[276,8827+46])
                              Tpat_var "type_declaration_list/1893"
                          ]
                          None
                      expression (src/ppx.ml[278,8906+4]..src/ppx.ml[279,8957+90])
                        Texp_sequence
                        expression (src/ppx.ml[278,8906+4]..src/ppx.ml[278,8906+49])
                          Texp_apply
                          expression (src/ppx.ml[278,8906+4]..src/ppx.ml[278,8906+26])
                            Texp_ident "process_type_decl_list/1880"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[278,8906+26]..src/ppx.ml[278,8906+49])
                                Texp_ident "type_declaration_list/1893"
                          ]
                        expression (src/ppx.ml[279,8957+4]..src/ppx.ml[279,8957+90])
                          Texp_apply
                          expression (src/ppx.ml[279,8957+5]..src/ppx.ml[279,8957+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[279,8957+19]..src/ppx.ml[279,8957+89])
                                Texp_apply
                                expression (src/ppx.ml[279,8957+20]..src/ppx.ml[279,8957+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[279,8957+35]..src/ppx.ml[279,8957+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[279,8957+36]..src/ppx.ml[279,8957+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[279,8957+37]..src/ppx.ml[279,8957+53]),None)
                                        expression (src/ppx.ml[279,8957+56]..src/ppx.ml[279,8957+64])
                                          Texp_ident "rec_flag/1892"
                                        expression (src/ppx.ml[279,8957+66]..src/ppx.ml[279,8957+87])
                                          Texp_ident "type_declaration_list/1893"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[282,9050+4]..src/ppx.ml[282,9050+31])
                        Tpat_value
                        pattern (src/ppx.ml[282,9050+4]..src/ppx.ml[282,9050+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[282,9050+17]..src/ppx.ml[282,9050+31])
                              Tpat_var "type_extension/1894"
                          ]
                          None
                      expression (src/ppx.ml[282,9050+34]..src/ppx.ml[282,9050+105])
                        Texp_apply
                        expression (src/ppx.ml[282,9050+35]..src/ppx.ml[282,9050+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[282,9050+49]..src/ppx.ml[282,9050+104])
                              Texp_apply
                              expression (src/ppx.ml[282,9050+50]..src/ppx.ml[282,9050+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[282,9050+65]..src/ppx.ml[282,9050+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[282,9050+66]..src/ppx.ml[282,9050+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[282,9050+67]..src/ppx.ml[282,9050+85]),None)
                                      expression (src/ppx.ml[282,9050+88]..src/ppx.ml[282,9050+102])
                                        Texp_ident "type_extension/1894"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[283,9156+4]..src/ppx.ml[283,9156+40])
                        Tpat_value
                        pattern (src/ppx.ml[283,9156+4]..src/ppx.ml[283,9156+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[283,9156+19]..src/ppx.ml[283,9156+40])
                              Tpat_var "extension_constructor/1895"
                          ]
                          None
                      expression (src/ppx.ml[283,9156+43]..src/ppx.ml[283,9156+124])
                        Texp_apply
                        expression (src/ppx.ml[283,9156+44]..src/ppx.ml[283,9156+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[283,9156+58]..src/ppx.ml[283,9156+123])
                              Texp_apply
                              expression (src/ppx.ml[283,9156+59]..src/ppx.ml[283,9156+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[283,9156+74]..src/ppx.ml[283,9156+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[283,9156+75]..src/ppx.ml[283,9156+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[283,9156+76]..src/ppx.ml[283,9156+97]),None)
                                      expression (src/ppx.ml[283,9156+100]..src/ppx.ml[283,9156+121])
                                        Texp_ident "extension_constructor/1895"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[284,9281+4]..src/ppx.ml[284,9281+31])
                        Tpat_value
                        pattern (src/ppx.ml[284,9281+4]..src/ppx.ml[284,9281+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[284,9281+17]..src/ppx.ml[284,9281+31])
                              Tpat_var "module_binding/1896"
                          ]
                          None
                      expression (src/ppx.ml[284,9281+34]..src/ppx.ml[284,9281+104])
                        Texp_apply
                        expression (src/ppx.ml[284,9281+35]..src/ppx.ml[284,9281+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[284,9281+49]..src/ppx.ml[284,9281+103])
                              Texp_apply
                              expression (src/ppx.ml[284,9281+50]..src/ppx.ml[284,9281+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[284,9281+65]..src/ppx.ml[284,9281+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[284,9281+66]..src/ppx.ml[284,9281+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[284,9281+67]..src/ppx.ml[284,9281+85]),None)
                                      expression (src/ppx.ml[284,9281+87]..src/ppx.ml[284,9281+101])
                                        Texp_ident "module_binding/1896"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[285,9386+4]..src/ppx.ml[285,9386+39])
                        Tpat_value
                        pattern (src/ppx.ml[285,9386+4]..src/ppx.ml[285,9386+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[285,9386+20]..src/ppx.ml[285,9386+39])
                              Tpat_var "module_binding_list/1897"
                          ]
                          None
                      expression (src/ppx.ml[285,9386+42]..src/ppx.ml[285,9386+121])
                        Texp_apply
                        expression (src/ppx.ml[285,9386+43]..src/ppx.ml[285,9386+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[285,9386+57]..src/ppx.ml[285,9386+120])
                              Texp_apply
                              expression (src/ppx.ml[285,9386+58]..src/ppx.ml[285,9386+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[285,9386+73]..src/ppx.ml[285,9386+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[285,9386+74]..src/ppx.ml[285,9386+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[285,9386+75]..src/ppx.ml[285,9386+96]),None)
                                      expression (src/ppx.ml[285,9386+99]..src/ppx.ml[285,9386+118])
                                        Texp_ident "module_binding_list/1897"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[286,9508+4]..src/ppx.ml[286,9508+40])
                        Tpat_value
                        pattern (src/ppx.ml[286,9508+4]..src/ppx.ml[286,9508+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[286,9508+17]..src/ppx.ml[286,9508+40])
                              Tpat_var "module_type_declaration/1898"
                          ]
                          None
                      expression (src/ppx.ml[286,9508+43]..src/ppx.ml[286,9508+124])
                        Texp_apply
                        expression (src/ppx.ml[286,9508+44]..src/ppx.ml[286,9508+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[286,9508+58]..src/ppx.ml[286,9508+123])
                              Texp_apply
                              expression (src/ppx.ml[286,9508+59]..src/ppx.ml[286,9508+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[286,9508+74]..src/ppx.ml[286,9508+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[286,9508+75]..src/ppx.ml[286,9508+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[286,9508+76]..src/ppx.ml[286,9508+95]),None)
                                      expression (src/ppx.ml[286,9508+98]..src/ppx.ml[286,9508+121])
                                        Texp_ident "module_type_declaration/1898"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[288,9650+4]..src/ppx.ml[288,9650+30])
                        Tpat_value
                        pattern (src/ppx.ml[288,9650+4]..src/ppx.ml[288,9650+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[288,9650+14]..src/ppx.ml[288,9650+30])
                              Tpat_var "open_description/1899"
                          ]
                          None
                      expression (src/ppx.ml[288,9650+33]..src/ppx.ml[288,9650+103])
                        Texp_apply
                        expression (src/ppx.ml[288,9650+34]..src/ppx.ml[288,9650+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[288,9650+48]..src/ppx.ml[288,9650+102])
                              Texp_apply
                              expression (src/ppx.ml[288,9650+49]..src/ppx.ml[288,9650+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[288,9650+64]..src/ppx.ml[288,9650+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[288,9650+65]..src/ppx.ml[288,9650+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[288,9650+66]..src/ppx.ml[288,9650+81]),None)
                                      expression (src/ppx.ml[288,9650+84]..src/ppx.ml[288,9650+100])
                                        Texp_ident "open_description/1899"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[289,9754+4]..src/ppx.ml[289,9754+36])
                        Tpat_value
                        pattern (src/ppx.ml[289,9754+4]..src/ppx.ml[289,9754+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[289,9754+15]..src/ppx.ml[289,9754+36])
                              Tpat_var "class_declarations/1900"
                          ]
                          None
                      expression (src/ppx.ml[289,9754+39]..src/ppx.ml[289,9754+113])
                        Texp_apply
                        expression (src/ppx.ml[289,9754+40]..src/ppx.ml[289,9754+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[289,9754+54]..src/ppx.ml[289,9754+112])
                              Texp_apply
                              expression (src/ppx.ml[289,9754+55]..src/ppx.ml[289,9754+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[289,9754+70]..src/ppx.ml[289,9754+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[289,9754+71]..src/ppx.ml[289,9754+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[289,9754+72]..src/ppx.ml[289,9754+89]),None)
                                      expression (src/ppx.ml[289,9754+92]..src/ppx.ml[289,9754+110])
                                        Texp_ident "class_declarations/1900"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[290,9868+4]..src/ppx.ml[290,9868+45])
                        Tpat_value
                        pattern (src/ppx.ml[290,9868+4]..src/ppx.ml[290,9868+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[290,9868+20]..src/ppx.ml[290,9868+45])
                              Tpat_var "class_type_declarations/1901"
                          ]
                          None
                      expression (src/ppx.ml[290,9868+48]..src/ppx.ml[290,9868+132])
                        Texp_apply
                        expression (src/ppx.ml[290,9868+49]..src/ppx.ml[290,9868+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[290,9868+63]..src/ppx.ml[290,9868+131])
                              Texp_apply
                              expression (src/ppx.ml[290,9868+64]..src/ppx.ml[290,9868+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[290,9868+79]..src/ppx.ml[290,9868+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[290,9868+80]..src/ppx.ml[290,9868+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[290,9868+81]..src/ppx.ml[290,9868+103]),None)
                                      expression (src/ppx.ml[290,9868+106]..src/ppx.ml[290,9868+129])
                                        Texp_ident "class_type_declarations/1901"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[291,10001+4]..src/ppx.ml[291,10001+39])
                        Tpat_value
                        pattern (src/ppx.ml[291,10001+4]..src/ppx.ml[291,10001+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[291,10001+18]..src/ppx.ml[291,10001+39])
                              Tpat_var "include_declaration/1902"
                          ]
                          None
                      expression (src/ppx.ml[291,10001+41]..src/ppx.ml[291,10001+117])
                        Texp_apply
                        expression (src/ppx.ml[291,10001+42]..src/ppx.ml[291,10001+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[291,10001+56]..src/ppx.ml[291,10001+116])
                              Texp_apply
                              expression (src/ppx.ml[291,10001+57]..src/ppx.ml[291,10001+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[291,10001+72]..src/ppx.ml[291,10001+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[291,10001+73]..src/ppx.ml[291,10001+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[291,10001+74]..src/ppx.ml[291,10001+93]),None)
                                      expression (src/ppx.ml[291,10001+95]..src/ppx.ml[291,10001+114])
                                        Texp_ident "include_declaration/1902"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[292,10119+4]..src/ppx.ml[292,10119+30])
                        Tpat_value
                        pattern (src/ppx.ml[292,10119+4]..src/ppx.ml[292,10119+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[292,10119+19]..src/ppx.ml[292,10119+30])
                              Tpat_var "attribute/1903"
                          ]
                          None
                      expression (src/ppx.ml[292,10119+32]..src/ppx.ml[292,10119+101])
                        Texp_apply
                        expression (src/ppx.ml[292,10119+33]..src/ppx.ml[292,10119+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[292,10119+47]..src/ppx.ml[292,10119+100])
                              Texp_apply
                              expression (src/ppx.ml[292,10119+48]..src/ppx.ml[292,10119+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[292,10119+63]..src/ppx.ml[292,10119+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[292,10119+64]..src/ppx.ml[292,10119+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[292,10119+65]..src/ppx.ml[292,10119+86]),None)
                                      expression (src/ppx.ml[292,10119+89]..src/ppx.ml[292,10119+98])
                                        Texp_ident "attribute/1903"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[293,10221+4]..src/ppx.ml[293,10221+44])
                        Tpat_value
                        pattern (src/ppx.ml[293,10221+4]..src/ppx.ml[293,10221+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[293,10221+21]..src/ppx.ml[293,10221+30])
                              Tpat_var "extension/1904"
                            pattern (src/ppx.ml[293,10221+33]..src/ppx.ml[293,10221+43])
                              Tpat_var "attributes/1905"
                          ]
                          None
                      expression (src/ppx.ml[293,10221+46]..src/ppx.ml[293,10221+128])
                        Texp_apply
                        expression (src/ppx.ml[293,10221+47]..src/ppx.ml[293,10221+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[293,10221+61]..src/ppx.ml[293,10221+127])
                              Texp_apply
                              expression (src/ppx.ml[293,10221+62]..src/ppx.ml[293,10221+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[293,10221+77]..src/ppx.ml[293,10221+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[293,10221+78]..src/ppx.ml[293,10221+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[293,10221+79]..src/ppx.ml[293,10221+100]),None)
                                      expression (src/ppx.ml[293,10221+103]..src/ppx.ml[293,10221+112])
                                        Texp_ident "extension/1904"
                                      expression (src/ppx.ml[293,10221+115]..src/ppx.ml[293,10221+125])
                                        Texp_ident "attributes/1905"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[295,10351+0]..src/ppx.ml[295,10351+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10351+4]..src/ppx.ml[295,10351+7])
          Tpat_var "foo/1906"
        expression (src/ppx.ml[295,10351+10]..src/ppx.ml[295,10351+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[297,10366+0]..src/ppx.ml[305,10585+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10366+4]..src/ppx.ml[297,10366+12])
          Tpat_var "printone/1907"
        expression (src/ppx.ml[297,10366+13]..src/ppx.ml[305,10585+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[297,10366+14]..src/ppx.ml[297,10366+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[297,10366+18]..src/ppx.ml[297,10366+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1908"
                pattern (src/ppx.ml[297,10366+14]..src/ppx.ml[297,10366+15])
                  Tpat_any
              expression (src/ppx.ml[298,10409+2]..src/ppx.ml[305,10585+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[297,10366+36]..src/ppx.ml[297,10366+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[298,10409+8]..src/ppx.ml[298,10409+9])
                  Texp_ident "x/1908"
                [
                  <case>
                    pattern (src/ppx.ml[299,10424+3]..src/ppx.ml[302,10474+3])
                      Tpat_value
                      pattern (src/ppx.ml[299,10424+3]..src/ppx.ml[302,10474+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[300,10429+4]..src/ppx.ml[300,10429+13])
                              Tpat_var "pstr_desc/1909"
                        ]
                    expression (src/ppx.ml[304,10558+4]..src/ppx.ml[305,10585+6])
                      Texp_sequence
                      expression (src/ppx.ml[304,10558+4]..src/ppx.ml[304,10558+25])
                        Texp_apply
                        expression (src/ppx.ml[304,10558+5]..src/ppx.ml[304,10558+14])
                          Texp_ident "printdesc/1884"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[304,10558+15]..src/ppx.ml[304,10558+24])
                              Texp_ident "pstr_desc/1909"
                        ]
                      expression (src/ppx.ml[305,10585+4]..src/ppx.ml[305,10585+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[311,10705+0]..src/ppx.ml[313,10786+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10705+4]..src/ppx.ml[311,10705+13])
          Tpat_var "printone2/1910"
        expression (src/ppx.ml[311,10705+14]..src/ppx.ml[313,10786+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[311,10705+14]..src/ppx.ml[311,10705+15])
                Tpat_var "x/1911"
              expression (src/ppx.ml[312,10729+2]..src/ppx.ml[313,10786+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[311,10705+17]..src/ppx.ml[311,10705+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[312,10729+2]..src/ppx.ml[312,10729+55])
                  Texp_apply
                  expression (src/ppx.ml[312,10729+3]..src/ppx.ml[312,10729+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[312,10729+17]..src/ppx.ml[312,10729+54])
                        Texp_apply
                        expression (src/ppx.ml[312,10729+18]..src/ppx.ml[312,10729+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[312,10729+33]..src/ppx.ml[312,10729+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[312,10729+34]..src/ppx.ml[312,10729+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[312,10729+35]..src/ppx.ml[312,10729+49]),None)
                                expression (src/ppx.ml[312,10729+51]..src/ppx.ml[312,10729+52])
                                  Texp_ident "x/1911"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[313,10786+2]..src/ppx.ml[313,10786+12])
                  Texp_apply
                  expression (src/ppx.ml[313,10786+2]..src/ppx.ml[313,10786+10])
                    Texp_ident "printone/1907"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[313,10786+11]..src/ppx.ml[313,10786+12])
                        Texp_ident "x/1911"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[315,10802+0]..src/ppx.ml[317,10833+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[315,10802+4]..src/ppx.ml[315,10802+9])
          Tpat_var "proc1/1912"
        expression (src/ppx.ml[315,10802+10]..src/ppx.ml[317,10833+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[315,10802+10]..src/ppx.ml[315,10802+11])
                Tpat_var "x/1914"
              expression (src/ppx.ml[316,10818+2]..src/ppx.ml[317,10833+3])
                Texp_sequence
                expression (src/ppx.ml[316,10818+2]..src/ppx.ml[316,10818+13])
                  Texp_apply
                  expression (src/ppx.ml[316,10818+2]..src/ppx.ml[316,10818+11])
                    Texp_ident "printone2/1910"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[316,10818+12]..src/ppx.ml[316,10818+13])
                        Texp_ident "x/1914"
                  ]
                expression (src/ppx.ml[317,10833+2]..src/ppx.ml[317,10833+3])
                  Texp_ident "x/1914"
          ]
    ]
  structure_item (src/ppx.ml[319,10838+0]..src/ppx.ml[322,10987+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[319,10838+4]..src/ppx.ml[319,10838+9])
          Tpat_var "debug/1915"
        expression (src/ppx.ml[319,10838+10]..src/ppx.ml[322,10987+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[319,10838+10]..src/ppx.ml[319,10838+14])
                Tpat_var "proc/1917"
              expression (src/ppx.ml[319,10838+15]..src/ppx.ml[322,10987+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[319,10838+15]..src/ppx.ml[319,10838+18])
                      Tpat_var "lst/1918"
                    expression (src/ppx.ml[320,10866+2]..src/ppx.ml[322,10987+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[319,10838+21]..src/ppx.ml[319,10838+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[320,10866+6]..src/ppx.ml[320,10866+12])
                            Tpat_var "result/1919"
                          expression (src/ppx.ml[320,10866+15]..src/ppx.ml[320,10866+32])
                            Texp_apply
                            expression (src/ppx.ml[320,10866+15]..src/ppx.ml[320,10866+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[320,10866+24]..src/ppx.ml[320,10866+28])
                                  Texp_ident "proc/1917"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[320,10866+29]..src/ppx.ml[320,10866+32])
                                  Texp_ident "lst/1918"
                            ]
                      ]
                      expression (src/ppx.ml[321,10902+2]..src/ppx.ml[322,10987+4])
                        Texp_sequence
                        expression (src/ppx.ml[321,10902+2]..src/ppx.ml[321,10902+83])
                          Texp_apply
                          expression (src/ppx.ml[321,10902+2]..src/ppx.ml[321,10902+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[321,10902+12]..src/ppx.ml[321,10902+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[321,10902+17]..src/ppx.ml[321,10902+18])
                                      Tpat_var "i/1983"
                                    expression (src/ppx.ml[321,10902+22]..src/ppx.ml[321,10902+75])
                                      Texp_apply
                                      expression (src/ppx.ml[321,10902+22]..src/ppx.ml[321,10902+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[321,10902+36]..src/ppx.ml[321,10902+75])
                                            Texp_apply
                                            expression (src/ppx.ml[321,10902+37]..src/ppx.ml[321,10902+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[321,10902+52]..src/ppx.ml[321,10902+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[321,10902+53]..src/ppx.ml[321,10902+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[321,10902+54]..src/ppx.ml[321,10902+69]),None)
                                                    expression (src/ppx.ml[321,10902+72]..src/ppx.ml[321,10902+73])
                                                      Texp_ident "i/1983"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[321,10902+77]..src/ppx.ml[321,10902+83])
                                Texp_ident "result/1919"
                          ]
                        expression (src/ppx.ml[322,10987+2]..src/ppx.ml[322,10987+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[324,11009+0]..src/ppx.ml[327,11133+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[324,11009+4]..src/ppx.ml[324,11009+13])
          Tpat_var "transform/1984"
        expression (src/ppx.ml[324,11009+14]..src/ppx.ml[327,11133+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[324,11009+14]..src/ppx.ml[324,11009+15])
                Tpat_var "x/1986"
              expression (src/ppx.ml[325,11064+2]..src/ppx.ml[327,11133+3])
                Texp_sequence
                expression (src/ppx.ml[325,11064+2]..src/ppx.ml[325,11064+48])
                  Texp_apply
                  expression (src/ppx.ml[325,11064+3]..src/ppx.ml[325,11064+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[325,11064+17]..src/ppx.ml[325,11064+47])
                        Texp_apply
                        expression (src/ppx.ml[325,11064+18]..src/ppx.ml[325,11064+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[325,11064+33]..src/ppx.ml[325,11064+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[325,11064+34]..src/ppx.ml[325,11064+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[325,11064+35]..src/ppx.ml[325,11064+42]),None)
                                expression (src/ppx.ml[325,11064+44]..src/ppx.ml[325,11064+45])
                                  Texp_ident "x/1986"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[326,11114+2]..src/ppx.ml[327,11133+3])
                  Texp_sequence
                  expression (src/ppx.ml[326,11114+2]..src/ppx.ml[326,11114+17])
                    Texp_apply
                    expression (src/ppx.ml[326,11114+3]..src/ppx.ml[326,11114+8])
                      Texp_ident "debug/1915"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[326,11114+9]..src/ppx.ml[326,11114+14])
                          Texp_ident "proc1/1912"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[326,11114+15]..src/ppx.ml[326,11114+16])
                          Texp_ident "x/1986"
                    ]
                  expression (src/ppx.ml[327,11133+2]..src/ppx.ml[327,11133+3])
                    Texp_ident "x/1986"
          ]
    ]
  structure_item (src/ppx.ml[329,11140+1]..src/ppx.ml[329,11140+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[329,11140+5]..src/ppx.ml[329,11140+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[329,11140+10]..src/ppx.ml[329,11140+69])
          Texp_apply
          expression (src/ppx.ml[329,11140+10]..src/ppx.ml[329,11140+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[329,11140+47]..src/ppx.ml[329,11140+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[329,11140+47]..src/ppx.ml[329,11140+56])
                    Texp_ident "transform/1984"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[329,11140+57]..src/ppx.ml[329,11140+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[329,11140+58]..src/ppx.ml[329,11140+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.142>;
 "foo"[value] -> <Ppx.134>;
 "print_constructor_arguments"[value] -> <Ppx.81>;
 "print_type_decl"[value] -> <Ppx.99>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.113>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.135>;
 "printone2"[value] -> <Ppx.138>;
 "proc1"[value] -> <Ppx.140>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.40>;
 "process_core_type_desc"[value] -> <Ppx.38>;
 "process_core_type_list"[value] -> <Ppx.41>;
 "process_id"[value] -> <Ppx.34>;
 "process_id2"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.95>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.85>;
 "process_record_kind"[value] -> <Ppx.37>;
 "process_record_kind_list"[value] -> <Ppx.39>;
 "process_type_decl_list"[value] -> <Ppx.109>;
 "transform"[value] -> <Ppx.147>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/4663 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_id2/1437
           (function x/1438
             (funct-body Ppx.process_id2 src/ppx.ml(69)<ghost>:1898-2138
               (before Ppx.process_id2 src/ppx.ml(70):1916-2138
                 (switch* x/1438
                  case tag 0:
                   (let (string/1665 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(71):1950-1956
                       string/1665))
                  case tag 1:
                   (let
                     (string/1667 =a (field 1 x/1438)
                      longident/1666 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(73):1993-2031
                       (after Ppx.process_id2 src/ppx.ml(73):1993-2031
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(73):1993-2016
                             (apply process_id2/1437 longident/1666))
                           (after Ppx.process_id2 src/ppx.ml(73):2019-2031
                             (apply (field 27 (global Stdlib!)) "."
                               string/1667))))))
                  case tag 2:
                   (let
                     (longident2/1669 =a (field 1 x/1438)
                      longident/1668 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(75):2073-2138
                       (after Ppx.process_id2 src/ppx.ml(75):2073-2138
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(75):2073-2096
                             (apply process_id2/1437 longident/1668))
                           (after Ppx.process_id2 src/ppx.ml(75):2100-2138
                             (apply (field 27 (global Stdlib!)) "."
                               (after Ppx.process_id2 src/ppx.ml(76):2113-2138
                                 (apply process_id2/1437 longident2/1669)))))))))))))
        (letrec
          (process_id/1670
             (function x/1671
               (funct-body Ppx.process_id src/ppx.ml(78)<ghost>:2158-2224
                 (before Ppx.process_id src/ppx.ml(79):2180-2224
                   (let
                     (*match*/4664 =a (field 1 x/1671)
                      txt/1742 =a (field 0 x/1671))
                     (before Ppx.process_id src/ppx.ml(80):2207-2224
                       (after Ppx.process_id src/ppx.ml(80):2207-2224
                         (apply process_id2/1437 txt/1742))))))))
          (letrec
            (process_record_kind/1743
               (function x/1748 : int
                 (funct-body Ppx.process_record_kind src/ppx.ml(85)<ghost>:2356-2860
                   (before Ppx.process_record_kind src/ppx.ml(86):2364-2860
                     (let
                       (pld_attributes/1753 =a (field 4 x/1748)
                        pld_loc/1752 =a (field 3 x/1748)
                        pld_type/1751 =a (field 2 x/1748)
                        pld_mutable/1750 =a (field 1 x/1748)
                        pld_name/1749 =a (field 0 x/1748))
                       (before Ppx.process_record_kind src/ppx.ml(94):2570-2860
                         (after Ppx.process_record_kind src/ppx.ml(94):2570-2860
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.process_record_kind src/ppx.ml(94):2585-2859
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 (*,*,*,int,*,*)
                                   "DEBUG:precord_kind:" pld_name/1749
                                   "mutable" pld_mutable/1750 "type"
                                   pld_type/1751))))))))))
              process_core_type_desc/1744
                (function x/1754 : int
                  (funct-body Ppx.process_core_type_desc src/ppx.ml(101)<ghost>:2888-4669
                    (before Ppx.process_core_type_desc src/ppx.ml(102):2894-4669
                      (switch* x/1754
                       case int 0:
                        (before Ppx.process_core_type_desc src/ppx.ml(121):3389-3441
                          (after Ppx.process_core_type_desc src/ppx.ml(121):3389-3441
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(121):3404-3440
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_any:")))))
                       case tag 0:
                        (let (name/1758 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(122):3462-3522
                            (after Ppx.process_core_type_desc src/ppx.ml(122):3462-3522
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(122):3477-3521
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_var:" name/1758)))))))
                       case tag 1:
                        (let
                          (core_type2/1761 =a (field 2 x/1754)
                           core_type/1760 =a (field 1 x/1754)
                           arg_label/1759 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(124):3582-3639
                            (after Ppx.process_core_type_desc src/ppx.ml(124):3582-3639
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(124):3597-3638
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow10:"))))))
                       case tag 2:
                        (let (a/1757 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(118):3297-3352
                            (after Ppx.process_core_type_desc src/ppx.ml(118):3297-3352
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(118):3312-3351
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_tuple:"))))))
                       case tag 3:
                        (let
                          (b/1756 =a (field 1 x/1754)
                           a/1755 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(105):2982-3243
                            (let
                              (myid/1775 =
                                 (after Ppx.process_core_type_desc src/ppx.ml(105):2993-3007
                                   (apply process_id/1670 a/1755)))
                              (before Ppx.process_core_type_desc src/ppx.ml(106):3015-3243
                                (seq
                                  (after Ppx.process_core_type_desc src/ppx.ml(106):3015-3041
                                    (apply process_core_type_list/1747
                                      b/1756))
                                  (before Ppx.process_core_type_desc src/ppx.ml(108):3048-3243
                                    (seq
                                      (after Ppx.process_core_type_desc src/ppx.ml(108):3048-3090
                                        (apply
                                          (field 1 (global Stdlib__Printf!))
                                          [0:
                                           [11:
                                            "DEBUG:Ptyp_constr1:" [2: 0 0]]
                                           "DEBUG:Ptyp_constr1:%s"]
                                          myid/1775))
                                      (before Ppx.process_core_type_desc src/ppx.ml(111):3135-3243
                                        (after Ppx.process_core_type_desc src/ppx.ml(111):3135-3243
                                          (apply (field 45 (global Stdlib!))
                                            (after Ppx.process_core_type_desc src/ppx.ml(111):3150-3242
                                              (apply
                                                (field 65
                                                  (global Batteries!))
                                                (makeblock 0
                                                  "DEBUG:Ptyp_constr:" "id"
                                                  a/1755 myid/1775 "types"
                                                  b/1756)))))))))))))
                       case tag 4:
                        (let
                          (b/1763 =a (field 1 x/1754)
                           a/1762 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(128):3714-3770
                            (after Ppx.process_core_type_desc src/ppx.ml(128):3714-3770
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(128):3729-3769
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow8:"))))))
                       case tag 5:
                        (let
                          (b/1765 =a (field 1 x/1754)
                           a/1764 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(131):3845-3901
                            (after Ppx.process_core_type_desc src/ppx.ml(131):3845-3901
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(131):3860-3900
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow7:"))))))
                       case tag 6:
                        (let
                          (b/1767 =a (field 1 x/1754)
                           a/1766 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(134):3967-4023
                            (after Ppx.process_core_type_desc src/ppx.ml(134):3967-4023
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(134):3982-4022
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow6:"))))))
                       case tag 7:
                        (let
                          (c/1770 =a (field 2 x/1754)
                           b/1769 =a (field 1 x/1754)
                           a/1768 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(137):4118-4174
                            (after Ppx.process_core_type_desc src/ppx.ml(137):4118-4174
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(137):4133-4173
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow5:"))))))
                       case tag 8:
                        (let
                          (b/1772 =a (field 1 x/1754)
                           a/1771 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(140):4243-4299
                            (after Ppx.process_core_type_desc src/ppx.ml(140):4243-4299
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(140):4258-4298
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow4:"))))))
                       case tag 9:
                        (let (a/1773 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(143):4352-4410
                            (after Ppx.process_core_type_desc src/ppx.ml(143):4352-4410
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(143):4367-4409
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1773)))))))
                       case tag 10:
                        (let (a/1774 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(147):4608-4669
                            (after Ppx.process_core_type_desc src/ppx.ml(147):4608-4669
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(147):4623-4668
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_extension:"
                                      a/1774)))))))))))
              process_record_kind_list/1745
                (function x/1838 : int
                  (funct-body Ppx.process_record_kind_list src/ppx.ml(149)<ghost>:4700-4817
                    (before Ppx.process_record_kind_list src/ppx.ml(150):4708-4817
                      (if x/1838
                        (let
                          (t/1840 =a (field 1 x/1838)
                           h/1839 =a (field 0 x/1838))
                          (before Ppx.process_record_kind_list src/ppx.ml(153):4752-4817
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(153):4752-4775
                                (apply process_record_kind/1743 h/1839))
                              (before Ppx.process_record_kind_list src/ppx.ml(154):4781-4817
                                (seq
                                  (after Ppx.process_record_kind_list src/ppx.ml(154):4781-4809
                                    (apply process_record_kind_list/1745
                                      t/1840))
                                  (before Ppx.process_record_kind_list src/ppx.ml(155):4815-4817
                                    0))))))
                        (before Ppx.process_record_kind_list src/ppx.ml(151):4731-4733
                          0)))))
              process_core_type/1746
                (function x/1841 : int
                  (funct-body Ppx.process_core_type src/ppx.ml(157)<ghost>:4839-5169
                    (before Ppx.process_core_type src/ppx.ml(158):4847-5169
                      (let
                        (ptyp_attributes/1845 =a (field 3 x/1841)
                         ptyp_loc_stack/1844 =a (field 2 x/1841)
                         ptyp_loc/1843 =a (field 1 x/1841)
                         ptyp_desc/1842 =a (field 0 x/1841))
                        (before Ppx.process_core_type src/ppx.ml(165):5034-5169
                          (seq
                            (after Ppx.process_core_type src/ppx.ml(165):5034-5068
                              (apply process_core_type_desc/1744
                                ptyp_desc/1842))
                            (before Ppx.process_core_type src/ppx.ml(167):5093-5169
                              (after Ppx.process_core_type src/ppx.ml(167):5093-5169
                                (apply (field 45 (global Stdlib!))
                                  (after Ppx.process_core_type src/ppx.ml(167):5108-5168
                                    (apply (field 65 (global Batteries!))
                                      (makeblock 0
                                        "DEBUG:core_type.ptyp_desc:"
                                        ptyp_desc/1842))))))))))))
              process_core_type_list/1747
                (function x/1846 : int
                  (funct-body Ppx.process_core_type_list src/ppx.ml(168)<ghost>:5196-5315
                    (before Ppx.process_core_type_list src/ppx.ml(169):5219-5315
                      (if x/1846
                        (let
                          (t/1848 =a (field 1 x/1846)
                           h/1847 =a (field 0 x/1846))
                          (before Ppx.process_core_type_list src/ppx.ml(172):5263-5315
                            (seq
                              (after Ppx.process_core_type_list src/ppx.ml(172):5263-5284
                                (apply process_core_type/1746 h/1847))
                              (before Ppx.process_core_type_list src/ppx.ml(173):5290-5315
                                (after Ppx.process_core_type_list src/ppx.ml(173):5290-5315
                                  (apply process_core_type_list/1747 t/1848))))))
                        (before Ppx.process_core_type_list src/ppx.ml(170):5242-5244
                          0))))))
            (let
              (print_constructor_arguments/1849 =
                 (function x/1851 : int
                   (funct-body Ppx.print_constructor_arguments src/ppx.ml(180)<ghost>:5361-5594
                     (before Ppx.print_constructor_arguments src/ppx.ml(181):5369-5594
                       (switch* x/1851
                        case tag 0:
                         (let (a/1852 =a (field 0 x/1851))
                           (before Ppx.print_constructor_arguments src/ppx.ml(183):5407-5499
                             (seq
                               (after Ppx.print_constructor_arguments src/ppx.ml(183):5407-5433
                                 (apply process_core_type_list/1747 a/1852))
                               (before Ppx.print_constructor_arguments src/ppx.ml(184):5439-5499
                                 (after Ppx.print_constructor_arguments src/ppx.ml(184):5439-5499
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_constructor_arguments src/ppx.ml(184):5454-5498
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Pcstr_tuple:"
                                           a/1852)))))))))
                        case tag 1:
                         (let (a/1853 =a (field 0 x/1851))
                           (before Ppx.print_constructor_arguments src/ppx.ml(187):5533-5594
                             (after Ppx.print_constructor_arguments src/ppx.ml(187):5533-5594
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(187):5548-5593
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_record:"
                                       a/1853))))))))))))
              (letrec
                (process_pype_variant_constructor_declaration_list/1854
                   (function x/1855 : int
                     (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(189)<ghost>:5653-6580
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5661-6580
                         (if x/1855
                           (let
                             (t/1857 =a (field 1 x/1855)
                              h/1856 =a (field 0 x/1855))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(194):5770-6580
                               (let
                                 (pcd_attributes/1863 =a (field 5 h/1856)
                                  pcd_loc/1862 =a (field 4 h/1856)
                                  pcd_res/1861 =a (field 3 h/1856)
                                  pcd_args/1860 =a (field 2 h/1856)
                                  pcd_vars/1859 =a (field 1 h/1856)
                                  pcd_name/1858 =a (field 0 h/1856))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6109-6580
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6109-6146
                                       (apply
                                         print_constructor_arguments/1849
                                         pcd_args/1860))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6154-6580
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6154-6509
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6169-6508
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "constructor_declaration:"
                                                   pcd_name/1858 "vars"
                                                   pcd_vars/1859 "args"
                                                   pcd_args/1860 "res"
                                                   pcd_res/1861 "loc"
                                                   pcd_loc/1862 "attrs"
                                                   pcd_attributes/1863)))))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6517-6580
                                           (seq
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6517-6570
                                               (apply
                                                 process_pype_variant_constructor_declaration_list/1854
                                                 t/1857))
                                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(221):6578-6580
                                               0))))))))))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5684-5686
                             0))))))
                (let
                  (process_kind/1864 =
                     (function x/1866 : int
                       (funct-body Ppx.process_kind src/ppx.ml(223)<ghost>:6600-7058
                         (before Ppx.process_kind src/ppx.ml(224):6608-7058
                           (switch* x/1866
                            case int 0:
                             (before Ppx.process_kind src/ppx.ml(226):6666-6724
                               (after Ppx.process_kind src/ppx.ml(226):6666-6724
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(226):6681-6723
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case int 1:
                             (before Ppx.process_kind src/ppx.ml(234):7000-7058
                               (after Ppx.process_kind src/ppx.ml(234):7000-7058
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(234):7015-7057
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case tag 0:
                             (let (a/1867 =a (field 0 x/1866))
                               (before Ppx.process_kind src/ppx.ml(228):6752-6872
                                 (seq
                                   (after Ppx.process_kind src/ppx.ml(228):6752-6805
                                     (apply
                                       process_pype_variant_constructor_declaration_list/1854
                                       a/1867))
                                   (before Ppx.process_kind src/ppx.ml(229):6811-6872
                                     (after Ppx.process_kind src/ppx.ml(229):6811-6872
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_kind src/ppx.ml(229):6826-6871
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Ptype_variant:" a/1867)))))))))
                            case tag 1:
                             (let (a/1868 =a (field 0 x/1866))
                               (before Ppx.process_kind src/ppx.ml(233):6953-6980
                                 (after Ppx.process_kind src/ppx.ml(233):6953-6980
                                   (apply process_record_kind_list/1745
                                     a/1868))))))))
                   print_type_decl/1869 =
                     (function x/1871 : int
                       (funct-body Ppx.print_type_decl src/ppx.ml(236)<ghost>:7079-8104
                         (before Ppx.print_type_decl src/ppx.ml(237):7087-8104
                           (let
                             (ptype_loc/1879 =a (field 7 x/1871)
                              ptype_attributes/1878 =a (field 6 x/1871)
                              ptype_manifest/1877 =a (field 5 x/1871)
                              ptype_private/1876 =a (field 4 x/1871)
                              ptype_kind/1875 =a (field 3 x/1871)
                              ptype_cstrs/1874 =a (field 2 x/1871)
                              ptype_params/1873 =a (field 1 x/1871)
                              ptype_name/1872 =a (field 0 x/1871))
                             (before Ppx.print_type_decl src/ppx.ml(248):7494-8104
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(248):7494-7559
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(248):7509-7558
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:type_decl:"
                                           ptype_name/1872)))))
                                 (before Ppx.print_type_decl src/ppx.ml(249):7565-8104
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(249):7565-7633
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(249):7580-7632
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:parameters:"
                                               ptype_params/1873)))))
                                     (before Ppx.print_type_decl src/ppx.ml(250):7639-8104
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(250):7639-7701
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(250):7654-7700
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:cstrs:"
                                                   ptype_cstrs/1874)))))
                                         (before Ppx.print_type_decl src/ppx.ml(251):7707-8104
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(251):7707-7766
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.print_type_decl src/ppx.ml(251):7722-7765
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:kind:"
                                                       ptype_kind/1875)))))
                                             (before Ppx.print_type_decl src/ppx.ml(252):7772-8104
                                               (seq
                                                 (after Ppx.print_type_decl src/ppx.ml(252):7772-7797
                                                   (apply process_kind/1864
                                                     ptype_kind/1875))
                                                 (before Ppx.print_type_decl src/ppx.ml(253):7803-8104
                                                   (after Ppx.print_type_decl src/ppx.ml(253):7803-8104
                                                     (apply
                                                       (field 45
                                                         (global Stdlib!))
                                                       (after Ppx.print_type_decl src/ppx.ml(253):7818-8103
                                                         (apply
                                                           (field 65
                                                             (global Batteries!))
                                                           (makeblock 0 (*,int,*,*,*,*,*,*)
                                                             "DEBUG:private:"
                                                             ptype_private/1876
                                                             "DEBUG:manifest"
                                                             ptype_manifest/1877
                                                             "DEBUG:attr"
                                                             ptype_attributes/1878
                                                             "DEBUG:loc"
                                                             ptype_loc/1879)))))))))))))))))))))
                  (letrec
                    (process_type_decl_list/1880
                       (function x/1881 : int
                         (funct-body Ppx.process_type_decl_list src/ppx.ml(259)<ghost>:8140-8251
                           (before Ppx.process_type_decl_list src/ppx.ml(260):8148-8251
                             (if x/1881
                               (let
                                 (t/1883 =a (field 1 x/1881)
                                  h/1882 =a (field 0 x/1881))
                                 (before Ppx.process_type_decl_list src/ppx.ml(263):8192-8251
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(263):8192-8211
                                       (apply print_type_decl/1869 h/1882))
                                     (before Ppx.process_type_decl_list src/ppx.ml(264):8217-8251
                                       (seq
                                         (after Ppx.process_type_decl_list src/ppx.ml(264):8217-8243
                                           (apply process_type_decl_list/1880
                                             t/1883))
                                         (before Ppx.process_type_decl_list src/ppx.ml(265):8249-8251
                                           0))))))
                               (before Ppx.process_type_decl_list src/ppx.ml(261):8171-8173
                                 0))))))
                    (let
                      (printdesc/1884 =
                         (function x/1886 : int
                           (funct-body Ppx.printdesc src/ppx.ml(267)<ghost>:8270-10349
                             (before Ppx.printdesc src/ppx.ml(268):8305-10349
                               (seq
                                 (after Ppx.printdesc src/ppx.ml(268):8305-8371
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printdesc src/ppx.ml(268):8320-8370
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0
                                           "DEBUG:structure_item_desc:"
                                           x/1886)))))
                                 (before Ppx.printdesc src/ppx.ml(269):8375-10349
                                   (switch* x/1886
                                    case tag 0:
                                     (let
                                       (attributes/1888 =a (field 1 x/1886)
                                        expression/1887 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(270):8429-8505
                                         (after Ppx.printdesc src/ppx.ml(270):8429-8505
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(270):8444-8504
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_eval:"
                                                   expression/1887
                                                   attributes/1888)))))))
                                    case tag 1:
                                     (let
                                       (value_binding_list/1890 =a
                                          (field 1 x/1886)
                                        rec_flag/1889 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(272):8574-8708
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(272):8574-8658
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(272):8589-8657
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_value:"
                                                     rec_flag/1889
                                                     value_binding_list/1890)))))
                                           (before Ppx.printdesc src/ppx.ml(273):8664-8708
                                             (after Ppx.printdesc src/ppx.ml(273):8664-8708
                                               (apply
                                                 print_value_binding_list/1298
                                                 value_binding_list/1890))))))
                                    case tag 2:
                                     (let
                                       (value_description/1891 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(274):8748-8825
                                         (after Ppx.printdesc src/ppx.ml(274):8748-8825
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(274):8763-8824
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_primitive:"
                                                   value_description/1891)))))))
                                    case tag 3:
                                     (let
                                       (type_declaration_list/1893 =a
                                          (field 1 x/1886)
                                        rec_flag/1892 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(278):8910-9047
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(278):8910-8955
                                             (apply
                                               process_type_decl_list/1880
                                               type_declaration_list/1893))
                                           (before Ppx.printdesc src/ppx.ml(279):8961-9047
                                             (after Ppx.printdesc src/ppx.ml(279):8961-9047
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.printdesc src/ppx.ml(279):8976-9046
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0 (*,int,*)
                                                       "DEBUG:Pstr_type:"
                                                       rec_flag/1892
                                                       type_declaration_list/1893)))))))))
                                    case tag 4:
                                     (let
                                       (type_extension/1894 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(282):9084-9155
                                         (after Ppx.printdesc src/ppx.ml(282):9084-9155
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(282):9099-9154
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_typext:"
                                                   type_extension/1894)))))))
                                    case tag 5:
                                     (let
                                       (extension_constructor/1895 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(283):9199-9280
                                         (after Ppx.printdesc src/ppx.ml(283):9199-9280
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(283):9214-9279
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_exception:"
                                                   extension_constructor/1895)))))))
                                    case tag 6:
                                     (let
                                       (module_binding/1896 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(284):9315-9385
                                         (after Ppx.printdesc src/ppx.ml(284):9315-9385
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(284):9330-9384
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_module:"
                                                   module_binding/1896)))))))
                                    case tag 7:
                                     (let
                                       (module_binding_list/1897 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(285):9428-9507
                                         (after Ppx.printdesc src/ppx.ml(285):9428-9507
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(285):9443-9506
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_recmodule:"
                                                   module_binding_list/1897)))))))
                                    case tag 8:
                                     (let
                                       (module_type_declaration/1898 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(286):9551-9632
                                         (after Ppx.printdesc src/ppx.ml(286):9551-9632
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(286):9566-9631
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_modtype:"
                                                   module_type_declaration/1898)))))))
                                    case tag 9:
                                     (let
                                       (open_description/1899 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(288):9683-9753
                                         (after Ppx.printdesc src/ppx.ml(288):9683-9753
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(288):9698-9752
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_open"
                                                   open_description/1899)))))))
                                    case tag 10:
                                     (let
                                       (class_declarations/1900 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(289):9793-9867
                                         (after Ppx.printdesc src/ppx.ml(289):9793-9867
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(289):9808-9866
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class:"
                                                   class_declarations/1900)))))))
                                    case tag 11:
                                     (let
                                       (class_type_declarations/1901 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(290):9916-10000
                                         (after Ppx.printdesc src/ppx.ml(290):9916-10000
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(290):9931-9999
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class_type:"
                                                   class_type_declarations/1901)))))))
                                    case tag 12:
                                     (let
                                       (include_declaration/1902 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(291):10042-10118
                                         (after Ppx.printdesc src/ppx.ml(291):10042-10118
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(291):10057-10117
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_include:"
                                                   include_declaration/1902)))))))
                                    case tag 13:
                                     (let
                                       (attribute/1903 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(292):10151-10220
                                         (after Ppx.printdesc src/ppx.ml(292):10151-10220
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(292):10166-10219
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_attribute:"
                                                   attribute/1903)))))))
                                    case tag 14:
                                     (let
                                       (attributes/1905 =a (field 1 x/1886)
                                        extension/1904 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(293):10267-10349
                                         (after Ppx.printdesc src/ppx.ml(293):10267-10349
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(293):10282-10348
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_extension:"
                                                   extension/1904
                                                   attributes/1905)))))))))))))
                       foo/1906 =[int] 1
                       printone/1907 =
                         (function x/1908 : int
                           (funct-body Ppx.printone src/ppx.ml(297)<ghost>:10379-10591
                             (before Ppx.printone src/ppx.ml(298):10411-10591
                               (let
                                 (*match*/4665 =a (field 1 x/1908)
                                  pstr_desc/1909 =a (field 0 x/1908))
                                 (before Ppx.printone src/ppx.ml(304):10562-10591
                                   (seq
                                     (after Ppx.printone src/ppx.ml(304):10562-10583
                                       (apply printdesc/1884 pstr_desc/1909))
                                     (before Ppx.printone src/ppx.ml(305):10589-10591
                                       0)))))))
                       printone2/1910 =
                         (function x/1911 : int
                           (funct-body Ppx.printone2 src/ppx.ml(311)<ghost>:10719-10798
                             (before Ppx.printone2 src/ppx.ml(312):10731-10798
                               (seq
                                 (after Ppx.printone2 src/ppx.ml(312):10731-10784
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printone2 src/ppx.ml(312):10746-10783
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:SECOND::"
                                           x/1911)))))
                                 (before Ppx.printone2 src/ppx.ml(313):10788-10798
                                   (after Ppx.printone2 src/ppx.ml(313):10788-10798
                                     (apply printone/1907 x/1911)))))))
                       proc1/1912 =
                         (function x/1914
                           (funct-body Ppx.proc1 src/ppx.ml(315)<ghost>:10812-10836
                             (before Ppx.proc1 src/ppx.ml(316):10820-10836
                               (seq
                                 (after Ppx.proc1 src/ppx.ml(316):10820-10831
                                   (apply printone2/1910 x/1914))
                                 (before Ppx.proc1 src/ppx.ml(317):10835-10836
                                   x/1914)))))
                       debug/1915 =
                         (function proc/1917 lst/1918 : int
                           (funct-body Ppx.debug src/ppx.ml(319)<ghost>:10848-10991
                             (before Ppx.debug src/ppx.ml(320):10868-10991
                               (let
                                 (result/1919 =
                                    (after Ppx.debug src/ppx.ml(320):10881-10898
                                      (apply
                                        (field 18 (global Stdlib__List!))
                                        proc/1917 lst/1918)))
                                 (before Ppx.debug src/ppx.ml(321):10904-10991
                                   (seq
                                     (after Ppx.debug src/ppx.ml(321):10904-10985
                                       (apply
                                         (field 16 (global Stdlib__List!))
                                         (function i/1983 : int
                                           (funct-body Ppx.debug.(fun) src/ppx.ml(321):10914-10978
                                             (before Ppx.debug.(fun) src/ppx.ml(321):10924-10977
                                               (after Ppx.debug.(fun) src/ppx.ml(321):10924-10977
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.debug.(fun) src/ppx.ml(321):10938-10977
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0
                                                         "DEBUG:TOPLEVEL:"
                                                         i/1983))))))))
                                         result/1919))
                                     (before Ppx.debug src/ppx.ml(322):10989-10991
                                       0)))))))
                       transform/1984 =
                         (function x/1986
                           (funct-body Ppx.transform src/ppx.ml(324)<ghost>:11023-11136
                             (before Ppx.transform src/ppx.ml(325):11066-11136
                               (seq
                                 (after Ppx.transform src/ppx.ml(325):11066-11112
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.transform src/ppx.ml(325):11081-11111
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG3:" x/1986)))))
                                 (before Ppx.transform src/ppx.ml(326):11116-11136
                                   (seq
                                     (after Ppx.transform src/ppx.ml(326):11116-11131
                                       (apply debug/1915 proc1/1912 x/1986))
                                     (before Ppx.transform src/ppx.ml(327):11135-11136
                                       x/1986)))))))
                       *match*/4667 =
                         (after Ppx src/ppx.ml(329):11150-11209
                           (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                             (makeblock 0 transform/1984) 0 0 0 0 0 0 0
                             "simple-ppx")))
                      (pseudo <unknown location>
                        (makeblock 0 proc2/1279 printdesc2/1282
                          print_value_binding_expr/1284
                          print_value_binding_list2/1291
                          print_value_binding_list/1298 process_id2/1437
                          process_id/1670 process_record_kind/1743
                          process_core_type_desc/1744
                          process_record_kind_list/1745
                          process_core_type/1746 process_core_type_list/1747
                          print_constructor_arguments/1849
                          process_pype_variant_constructor_declaration_list/1854
                          process_kind/1864 print_type_decl/1869
                          process_type_decl_list/1880 printdesc/1884 foo/1906
                          printone/1907 printone2/1910 proc1/1912 debug/1915
                          transform/1984)))))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_id2/1437
           (function x/1438
             (funct-body Ppx.process_id2 src/ppx.ml(69)<ghost>:1898-2138
               (before Ppx.process_id2 src/ppx.ml(70):1916-2138
                 (switch* x/1438
                  case tag 0:
                   (let (string/1665 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(71):1950-1956
                       string/1665))
                  case tag 1:
                   (let
                     (string/1667 =a (field 1 x/1438)
                      longident/1666 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(73):1993-2031
                       (after Ppx.process_id2 src/ppx.ml(73):1993-2031
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(73):1993-2016
                             (apply process_id2/1437 longident/1666))
                           (after Ppx.process_id2 src/ppx.ml(73):2019-2031
                             (apply (field 27 (global Stdlib!)) "."
                               string/1667))))))
                  case tag 2:
                   (let
                     (longident2/1669 =a (field 1 x/1438)
                      longident/1668 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(75):2073-2138
                       (after Ppx.process_id2 src/ppx.ml(75):2073-2138
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(75):2073-2096
                             (apply process_id2/1437 longident/1668))
                           (after Ppx.process_id2 src/ppx.ml(75):2100-2138
                             (apply (field 27 (global Stdlib!)) "."
                               (after Ppx.process_id2 src/ppx.ml(76):2113-2138
                                 (apply process_id2/1437 longident2/1669)))))))))))))
        (letrec
          (process_id/1670
             (function x/1671
               (funct-body Ppx.process_id src/ppx.ml(78)<ghost>:2158-2224
                 (before Ppx.process_id src/ppx.ml(79):2180-2224
                   (let (txt/1742 =a (field 0 x/1671))
                     (before Ppx.process_id src/ppx.ml(80):2207-2224
                       (after Ppx.process_id src/ppx.ml(80):2207-2224
                         (apply process_id2/1437 txt/1742))))))))
          (letrec
            (process_record_kind/1743
               (function x/1748 : int
                 (funct-body Ppx.process_record_kind src/ppx.ml(85)<ghost>:2356-2860
                   (before Ppx.process_record_kind src/ppx.ml(86):2364-2860
                     (let
                       (pld_type/1751 =a (field 2 x/1748)
                        pld_mutable/1750 =a (field 1 x/1748)
                        pld_name/1749 =a (field 0 x/1748))
                       (before Ppx.process_record_kind src/ppx.ml(94):2570-2860
                         (after Ppx.process_record_kind src/ppx.ml(94):2570-2860
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.process_record_kind src/ppx.ml(94):2585-2859
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 (*,*,*,int,*,*)
                                   "DEBUG:precord_kind:" pld_name/1749
                                   "mutable" pld_mutable/1750 "type"
                                   pld_type/1751))))))))))
              process_core_type_desc/1744
                (function x/1754 : int
                  (funct-body Ppx.process_core_type_desc src/ppx.ml(101)<ghost>:2888-4669
                    (before Ppx.process_core_type_desc src/ppx.ml(102):2894-4669
                      (switch* x/1754
                       case int 0:
                        (before Ppx.process_core_type_desc src/ppx.ml(121):3389-3441
                          (after Ppx.process_core_type_desc src/ppx.ml(121):3389-3441
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(121):3404-3440
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_any:")))))
                       case tag 0:
                        (let (name/1758 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(122):3462-3522
                            (after Ppx.process_core_type_desc src/ppx.ml(122):3462-3522
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(122):3477-3521
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_var:" name/1758)))))))
                       case tag 1:
                        (before Ppx.process_core_type_desc src/ppx.ml(124):3582-3639
                          (after Ppx.process_core_type_desc src/ppx.ml(124):3582-3639
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(124):3597-3638
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow10:")))))
                       case tag 2:
                        (before Ppx.process_core_type_desc src/ppx.ml(118):3297-3352
                          (after Ppx.process_core_type_desc src/ppx.ml(118):3297-3352
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(118):3312-3351
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_tuple:")))))
                       case tag 3:
                        (let
                          (b/1756 =a (field 1 x/1754)
                           a/1755 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(105):2982-3243
                            (let
                              (myid/1775 =
                                 (after Ppx.process_core_type_desc src/ppx.ml(105):2993-3007
                                   (apply process_id/1670 a/1755)))
                              (before Ppx.process_core_type_desc src/ppx.ml(106):3015-3243
                                (seq
                                  (after Ppx.process_core_type_desc src/ppx.ml(106):3015-3041
                                    (apply process_core_type_list/1747
                                      b/1756))
                                  (before Ppx.process_core_type_desc src/ppx.ml(108):3048-3243
                                    (seq
                                      (after Ppx.process_core_type_desc src/ppx.ml(108):3048-3090
                                        (apply
                                          (field 1 (global Stdlib__Printf!))
                                          [0:
                                           [11:
                                            "DEBUG:Ptyp_constr1:" [2: 0 0]]
                                           "DEBUG:Ptyp_constr1:%s"]
                                          myid/1775))
                                      (before Ppx.process_core_type_desc src/ppx.ml(111):3135-3243
                                        (after Ppx.process_core_type_desc src/ppx.ml(111):3135-3243
                                          (apply (field 45 (global Stdlib!))
                                            (after Ppx.process_core_type_desc src/ppx.ml(111):3150-3242
                                              (apply
                                                (field 65
                                                  (global Batteries!))
                                                (makeblock 0
                                                  "DEBUG:Ptyp_constr:" "id"
                                                  a/1755 myid/1775 "types"
                                                  b/1756)))))))))))))
                       case tag 4:
                        (before Ppx.process_core_type_desc src/ppx.ml(128):3714-3770
                          (after Ppx.process_core_type_desc src/ppx.ml(128):3714-3770
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):3729-3769
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow8:")))))
                       case tag 5:
                        (before Ppx.process_core_type_desc src/ppx.ml(131):3845-3901
                          (after Ppx.process_core_type_desc src/ppx.ml(131):3845-3901
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(131):3860-3900
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow7:")))))
                       case tag 6:
                        (before Ppx.process_core_type_desc src/ppx.ml(134):3967-4023
                          (after Ppx.process_core_type_desc src/ppx.ml(134):3967-4023
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(134):3982-4022
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow6:")))))
                       case tag 7:
                        (before Ppx.process_core_type_desc src/ppx.ml(137):4118-4174
                          (after Ppx.process_core_type_desc src/ppx.ml(137):4118-4174
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(137):4133-4173
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow5:")))))
                       case tag 8:
                        (before Ppx.process_core_type_desc src/ppx.ml(140):4243-4299
                          (after Ppx.process_core_type_desc src/ppx.ml(140):4243-4299
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(140):4258-4298
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow4:")))))
                       case tag 9:
                        (let (a/1773 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(143):4352-4410
                            (after Ppx.process_core_type_desc src/ppx.ml(143):4352-4410
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(143):4367-4409
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1773)))))))
                       case tag 10:
                        (let (a/1774 =a (field 0 x/1754))
                          (before Ppx.process_core_type_desc src/ppx.ml(147):4608-4669
                            (after Ppx.process_core_type_desc src/ppx.ml(147):4608-4669
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(147):4623-4668
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_extension:"
                                      a/1774)))))))))))
              process_record_kind_list/1745
                (function x/1838 : int
                  (funct-body Ppx.process_record_kind_list src/ppx.ml(149)<ghost>:4700-4817
                    (before Ppx.process_record_kind_list src/ppx.ml(150):4708-4817
                      (if x/1838
                        (let
                          (t/1840 =a (field 1 x/1838)
                           h/1839 =a (field 0 x/1838))
                          (before Ppx.process_record_kind_list src/ppx.ml(153):4752-4817
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(153):4752-4775
                                (apply process_record_kind/1743 h/1839))
                              (before Ppx.process_record_kind_list src/ppx.ml(154):4781-4817
                                (seq
                                  (after Ppx.process_record_kind_list src/ppx.ml(154):4781-4809
                                    (apply process_record_kind_list/1745
                                      t/1840))
                                  (before Ppx.process_record_kind_list src/ppx.ml(155):4815-4817
                                    0))))))
                        (before Ppx.process_record_kind_list src/ppx.ml(151):4731-4733
                          0)))))
              process_core_type/1746
                (function x/1841 : int
                  (funct-body Ppx.process_core_type src/ppx.ml(157)<ghost>:4839-5169
                    (before Ppx.process_core_type src/ppx.ml(158):4847-5169
                      (let (ptyp_desc/1842 =a (field 0 x/1841))
                        (before Ppx.process_core_type src/ppx.ml(165):5034-5169
                          (seq
                            (after Ppx.process_core_type src/ppx.ml(165):5034-5068
                              (apply process_core_type_desc/1744
                                ptyp_desc/1842))
                            (before Ppx.process_core_type src/ppx.ml(167):5093-5169
                              (after Ppx.process_core_type src/ppx.ml(167):5093-5169
                                (apply (field 45 (global Stdlib!))
                                  (after Ppx.process_core_type src/ppx.ml(167):5108-5168
                                    (apply (field 65 (global Batteries!))
                                      (makeblock 0
                                        "DEBUG:core_type.ptyp_desc:"
                                        ptyp_desc/1842))))))))))))
              process_core_type_list/1747
                (function x/1846 : int
                  (funct-body Ppx.process_core_type_list src/ppx.ml(168)<ghost>:5196-5315
                    (before Ppx.process_core_type_list src/ppx.ml(169):5219-5315
                      (if x/1846
                        (let
                          (t/1848 =a (field 1 x/1846)
                           h/1847 =a (field 0 x/1846))
                          (before Ppx.process_core_type_list src/ppx.ml(172):5263-5315
                            (seq
                              (after Ppx.process_core_type_list src/ppx.ml(172):5263-5284
                                (apply process_core_type/1746 h/1847))
                              (before Ppx.process_core_type_list src/ppx.ml(173):5290-5315
                                (after Ppx.process_core_type_list src/ppx.ml(173):5290-5315
                                  (apply process_core_type_list/1747 t/1848))))))
                        (before Ppx.process_core_type_list src/ppx.ml(170):5242-5244
                          0))))))
            (let
              (print_constructor_arguments/1849 =
                 (function x/1851 : int
                   (funct-body Ppx.print_constructor_arguments src/ppx.ml(180)<ghost>:5361-5594
                     (before Ppx.print_constructor_arguments src/ppx.ml(181):5369-5594
                       (switch* x/1851
                        case tag 0:
                         (let (a/1852 =a (field 0 x/1851))
                           (before Ppx.print_constructor_arguments src/ppx.ml(183):5407-5499
                             (seq
                               (after Ppx.print_constructor_arguments src/ppx.ml(183):5407-5433
                                 (apply process_core_type_list/1747 a/1852))
                               (before Ppx.print_constructor_arguments src/ppx.ml(184):5439-5499
                                 (after Ppx.print_constructor_arguments src/ppx.ml(184):5439-5499
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_constructor_arguments src/ppx.ml(184):5454-5498
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Pcstr_tuple:"
                                           a/1852)))))))))
                        case tag 1:
                         (let (a/1853 =a (field 0 x/1851))
                           (before Ppx.print_constructor_arguments src/ppx.ml(187):5533-5594
                             (after Ppx.print_constructor_arguments src/ppx.ml(187):5533-5594
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(187):5548-5593
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_record:"
                                       a/1853))))))))))))
              (letrec
                (process_pype_variant_constructor_declaration_list/1854
                   (function x/1855 : int
                     (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(189)<ghost>:5653-6580
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5661-6580
                         (if x/1855
                           (let
                             (t/1857 =a (field 1 x/1855)
                              h/1856 =a (field 0 x/1855))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(194):5770-6580
                               (let
                                 (pcd_attributes/1863 =a (field 5 h/1856)
                                  pcd_loc/1862 =a (field 4 h/1856)
                                  pcd_res/1861 =a (field 3 h/1856)
                                  pcd_args/1860 =a (field 2 h/1856)
                                  pcd_vars/1859 =a (field 1 h/1856)
                                  pcd_name/1858 =a (field 0 h/1856))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6109-6580
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6109-6146
                                       (apply
                                         print_constructor_arguments/1849
                                         pcd_args/1860))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6154-6580
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6154-6509
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6169-6508
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "constructor_declaration:"
                                                   pcd_name/1858 "vars"
                                                   pcd_vars/1859 "args"
                                                   pcd_args/1860 "res"
                                                   pcd_res/1861 "loc"
                                                   pcd_loc/1862 "attrs"
                                                   pcd_attributes/1863)))))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6517-6580
                                           (seq
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6517-6570
                                               (apply
                                                 process_pype_variant_constructor_declaration_list/1854
                                                 t/1857))
                                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(221):6578-6580
                                               0))))))))))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5684-5686
                             0))))))
                (let
                  (process_kind/1864 =
                     (function x/1866 : int
                       (funct-body Ppx.process_kind src/ppx.ml(223)<ghost>:6600-7058
                         (before Ppx.process_kind src/ppx.ml(224):6608-7058
                           (switch* x/1866
                            case int 0:
                             (before Ppx.process_kind src/ppx.ml(226):6666-6724
                               (after Ppx.process_kind src/ppx.ml(226):6666-6724
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(226):6681-6723
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case int 1:
                             (before Ppx.process_kind src/ppx.ml(234):7000-7058
                               (after Ppx.process_kind src/ppx.ml(234):7000-7058
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(234):7015-7057
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case tag 0:
                             (let (a/1867 =a (field 0 x/1866))
                               (before Ppx.process_kind src/ppx.ml(228):6752-6872
                                 (seq
                                   (after Ppx.process_kind src/ppx.ml(228):6752-6805
                                     (apply
                                       process_pype_variant_constructor_declaration_list/1854
                                       a/1867))
                                   (before Ppx.process_kind src/ppx.ml(229):6811-6872
                                     (after Ppx.process_kind src/ppx.ml(229):6811-6872
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_kind src/ppx.ml(229):6826-6871
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Ptype_variant:" a/1867)))))))))
                            case tag 1:
                             (let (a/1868 =a (field 0 x/1866))
                               (before Ppx.process_kind src/ppx.ml(233):6953-6980
                                 (after Ppx.process_kind src/ppx.ml(233):6953-6980
                                   (apply process_record_kind_list/1745
                                     a/1868))))))))
                   print_type_decl/1869 =
                     (function x/1871 : int
                       (funct-body Ppx.print_type_decl src/ppx.ml(236)<ghost>:7079-8104
                         (before Ppx.print_type_decl src/ppx.ml(237):7087-8104
                           (let
                             (ptype_loc/1879 =a (field 7 x/1871)
                              ptype_attributes/1878 =a (field 6 x/1871)
                              ptype_manifest/1877 =a (field 5 x/1871)
                              ptype_private/1876 =a (field 4 x/1871)
                              ptype_kind/1875 =a (field 3 x/1871)
                              ptype_cstrs/1874 =a (field 2 x/1871)
                              ptype_params/1873 =a (field 1 x/1871)
                              ptype_name/1872 =a (field 0 x/1871))
                             (before Ppx.print_type_decl src/ppx.ml(248):7494-8104
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(248):7494-7559
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(248):7509-7558
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:type_decl:"
                                           ptype_name/1872)))))
                                 (before Ppx.print_type_decl src/ppx.ml(249):7565-8104
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(249):7565-7633
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(249):7580-7632
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:parameters:"
                                               ptype_params/1873)))))
                                     (before Ppx.print_type_decl src/ppx.ml(250):7639-8104
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(250):7639-7701
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(250):7654-7700
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:cstrs:"
                                                   ptype_cstrs/1874)))))
                                         (before Ppx.print_type_decl src/ppx.ml(251):7707-8104
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(251):7707-7766
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.print_type_decl src/ppx.ml(251):7722-7765
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:kind:"
                                                       ptype_kind/1875)))))
                                             (before Ppx.print_type_decl src/ppx.ml(252):7772-8104
                                               (seq
                                                 (after Ppx.print_type_decl src/ppx.ml(252):7772-7797
                                                   (apply process_kind/1864
                                                     ptype_kind/1875))
                                                 (before Ppx.print_type_decl src/ppx.ml(253):7803-8104
                                                   (after Ppx.print_type_decl src/ppx.ml(253):7803-8104
                                                     (apply
                                                       (field 45
                                                         (global Stdlib!))
                                                       (after Ppx.print_type_decl src/ppx.ml(253):7818-8103
                                                         (apply
                                                           (field 65
                                                             (global Batteries!))
                                                           (makeblock 0 (*,int,*,*,*,*,*,*)
                                                             "DEBUG:private:"
                                                             ptype_private/1876
                                                             "DEBUG:manifest"
                                                             ptype_manifest/1877
                                                             "DEBUG:attr"
                                                             ptype_attributes/1878
                                                             "DEBUG:loc"
                                                             ptype_loc/1879)))))))))))))))))))))
                  (letrec
                    (process_type_decl_list/1880
                       (function x/1881 : int
                         (funct-body Ppx.process_type_decl_list src/ppx.ml(259)<ghost>:8140-8251
                           (before Ppx.process_type_decl_list src/ppx.ml(260):8148-8251
                             (if x/1881
                               (let
                                 (t/1883 =a (field 1 x/1881)
                                  h/1882 =a (field 0 x/1881))
                                 (before Ppx.process_type_decl_list src/ppx.ml(263):8192-8251
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(263):8192-8211
                                       (apply print_type_decl/1869 h/1882))
                                     (before Ppx.process_type_decl_list src/ppx.ml(264):8217-8251
                                       (seq
                                         (after Ppx.process_type_decl_list src/ppx.ml(264):8217-8243
                                           (apply process_type_decl_list/1880
                                             t/1883))
                                         (before Ppx.process_type_decl_list src/ppx.ml(265):8249-8251
                                           0))))))
                               (before Ppx.process_type_decl_list src/ppx.ml(261):8171-8173
                                 0))))))
                    (let
                      (printdesc/1884 =
                         (function x/1886 : int
                           (funct-body Ppx.printdesc src/ppx.ml(267)<ghost>:8270-10349
                             (before Ppx.printdesc src/ppx.ml(268):8305-10349
                               (seq
                                 (after Ppx.printdesc src/ppx.ml(268):8305-8371
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printdesc src/ppx.ml(268):8320-8370
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0
                                           "DEBUG:structure_item_desc:"
                                           x/1886)))))
                                 (before Ppx.printdesc src/ppx.ml(269):8375-10349
                                   (switch* x/1886
                                    case tag 0:
                                     (let
                                       (attributes/1888 =a (field 1 x/1886)
                                        expression/1887 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(270):8429-8505
                                         (after Ppx.printdesc src/ppx.ml(270):8429-8505
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(270):8444-8504
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_eval:"
                                                   expression/1887
                                                   attributes/1888)))))))
                                    case tag 1:
                                     (let
                                       (value_binding_list/1890 =a
                                          (field 1 x/1886)
                                        rec_flag/1889 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(272):8574-8708
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(272):8574-8658
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(272):8589-8657
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_value:"
                                                     rec_flag/1889
                                                     value_binding_list/1890)))))
                                           (before Ppx.printdesc src/ppx.ml(273):8664-8708
                                             (after Ppx.printdesc src/ppx.ml(273):8664-8708
                                               (apply
                                                 print_value_binding_list/1298
                                                 value_binding_list/1890))))))
                                    case tag 2:
                                     (let
                                       (value_description/1891 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(274):8748-8825
                                         (after Ppx.printdesc src/ppx.ml(274):8748-8825
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(274):8763-8824
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_primitive:"
                                                   value_description/1891)))))))
                                    case tag 3:
                                     (let
                                       (type_declaration_list/1893 =a
                                          (field 1 x/1886)
                                        rec_flag/1892 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(278):8910-9047
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(278):8910-8955
                                             (apply
                                               process_type_decl_list/1880
                                               type_declaration_list/1893))
                                           (before Ppx.printdesc src/ppx.ml(279):8961-9047
                                             (after Ppx.printdesc src/ppx.ml(279):8961-9047
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.printdesc src/ppx.ml(279):8976-9046
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0 (*,int,*)
                                                       "DEBUG:Pstr_type:"
                                                       rec_flag/1892
                                                       type_declaration_list/1893)))))))))
                                    case tag 4:
                                     (let
                                       (type_extension/1894 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(282):9084-9155
                                         (after Ppx.printdesc src/ppx.ml(282):9084-9155
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(282):9099-9154
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_typext:"
                                                   type_extension/1894)))))))
                                    case tag 5:
                                     (let
                                       (extension_constructor/1895 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(283):9199-9280
                                         (after Ppx.printdesc src/ppx.ml(283):9199-9280
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(283):9214-9279
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_exception:"
                                                   extension_constructor/1895)))))))
                                    case tag 6:
                                     (let
                                       (module_binding/1896 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(284):9315-9385
                                         (after Ppx.printdesc src/ppx.ml(284):9315-9385
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(284):9330-9384
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_module:"
                                                   module_binding/1896)))))))
                                    case tag 7:
                                     (let
                                       (module_binding_list/1897 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(285):9428-9507
                                         (after Ppx.printdesc src/ppx.ml(285):9428-9507
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(285):9443-9506
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_recmodule:"
                                                   module_binding_list/1897)))))))
                                    case tag 8:
                                     (let
                                       (module_type_declaration/1898 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(286):9551-9632
                                         (after Ppx.printdesc src/ppx.ml(286):9551-9632
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(286):9566-9631
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_modtype:"
                                                   module_type_declaration/1898)))))))
                                    case tag 9:
                                     (let
                                       (open_description/1899 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(288):9683-9753
                                         (after Ppx.printdesc src/ppx.ml(288):9683-9753
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(288):9698-9752
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_open"
                                                   open_description/1899)))))))
                                    case tag 10:
                                     (let
                                       (class_declarations/1900 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(289):9793-9867
                                         (after Ppx.printdesc src/ppx.ml(289):9793-9867
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(289):9808-9866
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class:"
                                                   class_declarations/1900)))))))
                                    case tag 11:
                                     (let
                                       (class_type_declarations/1901 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(290):9916-10000
                                         (after Ppx.printdesc src/ppx.ml(290):9916-10000
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(290):9931-9999
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class_type:"
                                                   class_type_declarations/1901)))))))
                                    case tag 12:
                                     (let
                                       (include_declaration/1902 =a
                                          (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(291):10042-10118
                                         (after Ppx.printdesc src/ppx.ml(291):10042-10118
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(291):10057-10117
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_include:"
                                                   include_declaration/1902)))))))
                                    case tag 13:
                                     (let
                                       (attribute/1903 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(292):10151-10220
                                         (after Ppx.printdesc src/ppx.ml(292):10151-10220
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(292):10166-10219
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_attribute:"
                                                   attribute/1903)))))))
                                    case tag 14:
                                     (let
                                       (attributes/1905 =a (field 1 x/1886)
                                        extension/1904 =a (field 0 x/1886))
                                       (before Ppx.printdesc src/ppx.ml(293):10267-10349
                                         (after Ppx.printdesc src/ppx.ml(293):10267-10349
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(293):10282-10348
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_extension:"
                                                   extension/1904
                                                   attributes/1905)))))))))))))
                       foo/1906 =[int] 1
                       printone/1907 =
                         (function x/1908 : int
                           (funct-body Ppx.printone src/ppx.ml(297)<ghost>:10379-10591
                             (before Ppx.printone src/ppx.ml(298):10411-10591
                               (let (pstr_desc/1909 =a (field 0 x/1908))
                                 (before Ppx.printone src/ppx.ml(304):10562-10591
                                   (seq
                                     (after Ppx.printone src/ppx.ml(304):10562-10583
                                       (apply printdesc/1884 pstr_desc/1909))
                                     (before Ppx.printone src/ppx.ml(305):10589-10591
                                       0)))))))
                       printone2/1910 =
                         (function x/1911 : int
                           (funct-body Ppx.printone2 src/ppx.ml(311)<ghost>:10719-10798
                             (before Ppx.printone2 src/ppx.ml(312):10731-10798
                               (seq
                                 (after Ppx.printone2 src/ppx.ml(312):10731-10784
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printone2 src/ppx.ml(312):10746-10783
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:SECOND::"
                                           x/1911)))))
                                 (before Ppx.printone2 src/ppx.ml(313):10788-10798
                                   (after Ppx.printone2 src/ppx.ml(313):10788-10798
                                     (apply printone/1907 x/1911)))))))
                       proc1/1912 =
                         (function x/1914
                           (funct-body Ppx.proc1 src/ppx.ml(315)<ghost>:10812-10836
                             (before Ppx.proc1 src/ppx.ml(316):10820-10836
                               (seq
                                 (after Ppx.proc1 src/ppx.ml(316):10820-10831
                                   (apply printone2/1910 x/1914))
                                 (before Ppx.proc1 src/ppx.ml(317):10835-10836
                                   x/1914)))))
                       debug/1915 =
                         (function proc/1917 lst/1918 : int
                           (funct-body Ppx.debug src/ppx.ml(319)<ghost>:10848-10991
                             (before Ppx.debug src/ppx.ml(320):10868-10991
                               (let
                                 (result/1919 =
                                    (after Ppx.debug src/ppx.ml(320):10881-10898
                                      (apply
                                        (field 18 (global Stdlib__List!))
                                        proc/1917 lst/1918)))
                                 (before Ppx.debug src/ppx.ml(321):10904-10991
                                   (seq
                                     (after Ppx.debug src/ppx.ml(321):10904-10985
                                       (apply
                                         (field 16 (global Stdlib__List!))
                                         (function i/1983 : int
                                           (funct-body Ppx.debug.(fun) src/ppx.ml(321):10914-10978
                                             (before Ppx.debug.(fun) src/ppx.ml(321):10924-10977
                                               (after Ppx.debug.(fun) src/ppx.ml(321):10924-10977
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.debug.(fun) src/ppx.ml(321):10938-10977
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0
                                                         "DEBUG:TOPLEVEL:"
                                                         i/1983))))))))
                                         result/1919))
                                     (before Ppx.debug src/ppx.ml(322):10989-10991
                                       0)))))))
                       transform/1984 =
                         (function x/1986
                           (funct-body Ppx.transform src/ppx.ml(324)<ghost>:11023-11136
                             (before Ppx.transform src/ppx.ml(325):11066-11136
                               (seq
                                 (after Ppx.transform src/ppx.ml(325):11066-11112
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.transform src/ppx.ml(325):11081-11111
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG3:" x/1986)))))
                                 (before Ppx.transform src/ppx.ml(326):11116-11136
                                   (seq
                                     (after Ppx.transform src/ppx.ml(326):11116-11131
                                       (apply debug/1915 proc1/1912 x/1986))
                                     (before Ppx.transform src/ppx.ml(327):11135-11136
                                       x/1986)))))))
                       *match*/4667 =
                         (after Ppx src/ppx.ml(329):11150-11209
                           (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                             (makeblock 0 transform/1984) 0 0 0 0 0 0 0
                             "simple-ppx")))
                      (pseudo <unknown location>
                        (makeblock 0 proc2/1279 printdesc2/1282
                          print_value_binding_expr/1284
                          print_value_binding_list2/1291
                          print_value_binding_list/1298 process_id2/1437
                          process_id/1670 process_record_kind/1743
                          process_core_type_desc/1744
                          process_record_kind_list/1745
                          process_core_type/1746 process_core_type_list/1747
                          print_constructor_arguments/1849
                          process_pype_variant_constructor_declaration_list/1854
                          process_kind/1864 print_type_decl/1869
                          process_type_decl_list/1880 printdesc/1884 foo/1906
                          printone/1907 printone2/1910 proc1/1912 debug/1915
                          transform/1984)))))))))))))

[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[73,1962+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[73,1962+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[73,1962+19])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[73,1962+19])
                  Pexp_match
                  expression (src/ppx.ml[72,1943+10]..[72,1943+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1943+10]..[72,1943+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1962+4]..[73,1962+12])
                        Ppat_var "txt2" (src/ppx.ml[73,1962+6]..[73,1962+10])
                      expression (src/ppx.ml[73,1962+15]..[73,1962+19])
                        Pexp_ident "txt2" (src/ppx.ml[73,1962+15]..[73,1962+19])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[77,2063+0]..[165,5019+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2063+8]..[77,2063+27])
          Ppat_var "process_record_kind" (src/ppx.ml[77,2063+8]..[77,2063+27])
        expression (src/ppx.ml[77,2063+27]..[91,2547+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[77,2063+27]..[77,2063+30])
            Ppat_var "x" (src/ppx.ml[77,2063+28]..[77,2063+29])
          expression (src/ppx.ml[78,2096+2]..[91,2547+47])
            Pexp_match
            expression (src/ppx.ml[78,2096+8]..[78,2096+9])
              Pexp_ident "x" (src/ppx.ml[78,2096+8]..[78,2096+9])
            [
              <case>
                pattern (src/ppx.ml[79,2111+4]..[85,2292+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13]) ghost
                      pattern (src/ppx.ml[80,2117+5]..[80,2117+13])
                        Ppat_var "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13])
                    "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16]) ghost
                      pattern (src/ppx.ml[81,2150+5]..[81,2150+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16])
                    "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13]) ghost
                      pattern (src/ppx.ml[82,2188+5]..[82,2188+13])
                        Ppat_var "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13])
                    "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12]) ghost
                      pattern (src/ppx.ml[83,2220+5]..[83,2220+12])
                        Ppat_var "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12])
                    "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19]) ghost
                      pattern (src/ppx.ml[84,2252+5]..[84,2252+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19])
                  ]
                expression (src/ppx.ml[86,2300+4]..[91,2547+47])
                  Pexp_apply
                  expression (src/ppx.ml[86,2300+5]..[86,2300+18])
                    Pexp_ident "print_endline" (src/ppx.ml[86,2300+5]..[86,2300+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[86,2300+19]..[91,2547+46])
                        Pexp_apply
                        expression (src/ppx.ml[86,2300+20]..[86,2300+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[86,2300+20]..[86,2300+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[86,2300+35]..[91,2547+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[86,2300+36]..[86,2300+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[86,2300+37]..[86,2300+56]),None)
                                expression (src/ppx.ml[87,2361+36]..[87,2361+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[87,2361+36]..[87,2361+44])
                                expression (src/ppx.ml[88,2407+36]..[88,2407+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[88,2407+37]..[88,2407+44]),None)
                                expression (src/ppx.ml[89,2454+36]..[89,2454+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[89,2454+36]..[89,2454+47])
                                expression (src/ppx.ml[90,2503+36]..[90,2503+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[90,2503+37]..[90,2503+41]),None)
                                expression (src/ppx.ml[91,2547+36]..[91,2547+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[91,2547+36]..[91,2547+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[93,2599+0]..[93,2599+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[93,2599+0]..[93,2599+22])
        expression (src/ppx.ml[93,2599+23]..[139,4337+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[93,2599+23]..[93,2599+24])
            Ppat_var "x" (src/ppx.ml[93,2599+23]..[93,2599+24])
          expression (src/ppx.ml[94,2626+2]..[139,4337+65])
            Pexp_match
            expression (src/ppx.ml[94,2626+8]..[94,2626+9])
              Pexp_ident "x" (src/ppx.ml[94,2626+8]..[94,2626+9])
            [
              <case>
                pattern (src/ppx.ml[95,2641+4]..[95,2641+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[95,2641+4]..[95,2641+15])
                  Some
                    []
                    pattern (src/ppx.ml[95,2641+16]..[95,2641+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[95,2641+17]..[95,2641+18])
                          Ppat_var "a" (src/ppx.ml[95,2641+17]..[95,2641+18])
                        pattern (src/ppx.ml[95,2641+19]..[95,2641+20])
                          Ppat_var "b" (src/ppx.ml[95,2641+19]..[95,2641+20])
                      ]
                expression (src/ppx.ml[97,2712+4]..[106,2954+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[97,2712+8]..[97,2712+12])
                        Ppat_var "myid" (src/ppx.ml[97,2712+8]..[97,2712+12])
                      expression (src/ppx.ml[97,2712+15]..[97,2712+29])
                        Pexp_apply
                        expression (src/ppx.ml[97,2712+16]..[97,2712+26])
                          Pexp_ident "process_id" (src/ppx.ml[97,2712+16]..[97,2712+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[97,2712+27]..[97,2712+28])
                              Pexp_ident "a" (src/ppx.ml[97,2712+27]..[97,2712+28])
                        ]
                  ]
                  expression (src/ppx.ml[98,2745+4]..[106,2954+22])
                    Pexp_sequence
                    expression (src/ppx.ml[98,2745+4]..[98,2745+30])
                      Pexp_apply
                      expression (src/ppx.ml[98,2745+5]..[98,2745+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[98,2745+5]..[98,2745+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[98,2745+28]..[98,2745+29])
                            Pexp_ident "b" (src/ppx.ml[98,2745+28]..[98,2745+29])
                      ]
                    expression (src/ppx.ml[100,2778+4]..[106,2954+22])
                      Pexp_sequence
                      expression (src/ppx.ml[100,2778+4]..[100,2778+45])
                        Pexp_apply
                        expression (src/ppx.ml[100,2778+4]..[100,2778+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[100,2778+4]..[100,2778+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,2778+18]..[100,2778+41])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[100,2778+19]..[100,2778+40]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,2778+42]..[100,2778+45])
                              Pexp_ident "id2" (src/ppx.ml[100,2778+42]..[100,2778+45])
                        ]
                      expression (src/ppx.ml[103,2864+4]..[106,2954+22])
                        Pexp_apply
                        expression (src/ppx.ml[103,2864+5]..[103,2864+18])
                          Pexp_ident "print_endline" (src/ppx.ml[103,2864+5]..[103,2864+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,2864+19]..[106,2954+21])
                              Pexp_apply
                              expression (src/ppx.ml[103,2864+20]..[103,2864+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[103,2864+20]..[103,2864+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[103,2864+35]..[106,2954+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[104,2901+9]..[104,2901+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[104,2901+10]..[104,2901+28]),None)
                                      expression (src/ppx.ml[105,2932+9]..[105,2932+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[105,2932+10]..[105,2932+12]),None)
                                      expression (src/ppx.ml[105,2932+14]..[105,2932+15])
                                        Pexp_ident "a" (src/ppx.ml[105,2932+14]..[105,2932+15])
                                      expression (src/ppx.ml[105,2932+16]..[105,2932+20])
                                        Pexp_ident "myid" (src/ppx.ml[105,2932+16]..[105,2932+20])
                                      expression (src/ppx.ml[106,2954+9]..[106,2954+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[106,2954+10]..[106,2954+15]),None)
                                      expression (src/ppx.ml[106,2954+17]..[106,2954+18])
                                        Pexp_ident "b" (src/ppx.ml[106,2954+17]..[106,2954+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[108,2978+4]..[108,2978+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[108,2978+4]..[108,2978+14])
                  Some
                    []
                    pattern (src/ppx.ml[108,2978+15]..[108,2978+16])
                      Ppat_var "a" (src/ppx.ml[108,2978+15]..[108,2978+16])
                expression (src/ppx.ml[110,3026+4]..[110,3026+59])
                  Pexp_apply
                  expression (src/ppx.ml[110,3026+5]..[110,3026+18])
                    Pexp_ident "print_endline" (src/ppx.ml[110,3026+5]..[110,3026+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[110,3026+19]..[110,3026+58])
                        Pexp_apply
                        expression (src/ppx.ml[110,3026+20]..[110,3026+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[110,3026+20]..[110,3026+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[110,3026+35]..[110,3026+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[110,3026+37]..[110,3026+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3105+4]..[113,3105+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[113,3105+4]..[113,3105+12])
                  None
                expression (src/ppx.ml[113,3105+17]..[113,3105+69])
                  Pexp_apply
                  expression (src/ppx.ml[113,3105+18]..[113,3105+31])
                    Pexp_ident "print_endline" (src/ppx.ml[113,3105+18]..[113,3105+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[113,3105+32]..[113,3105+68])
                        Pexp_apply
                        expression (src/ppx.ml[113,3105+33]..[113,3105+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[113,3105+33]..[113,3105+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[113,3105+48]..[113,3105+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[113,3105+50]..[113,3105+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3175+4]..[114,3175+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[114,3175+4]..[114,3175+12])
                  Some
                    []
                    pattern (src/ppx.ml[114,3175+13]..[114,3175+17])
                      Ppat_var "name" (src/ppx.ml[114,3175+13]..[114,3175+17])
                expression (src/ppx.ml[114,3175+20]..[114,3175+80])
                  Pexp_apply
                  expression (src/ppx.ml[114,3175+21]..[114,3175+34])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3175+21]..[114,3175+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3175+35]..[114,3175+79])
                        Pexp_apply
                        expression (src/ppx.ml[114,3175+36]..[114,3175+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3175+36]..[114,3175+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3175+51]..[114,3175+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[114,3175+52]..[114,3175+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[114,3175+53]..[114,3175+68]),None)
                                expression (src/ppx.ml[114,3175+73]..[114,3175+77])
                                  Pexp_ident "name" (src/ppx.ml[114,3175+73]..[114,3175+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3256+4]..[115,3256+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[115,3256+4]..[115,3256+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3256+15]..[115,3256+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3256+16]..[115,3256+25])
                          Ppat_var "arg_label" (src/ppx.ml[115,3256+16]..[115,3256+25])
                        pattern (src/ppx.ml[115,3256+28]..[115,3256+37])
                          Ppat_var "core_type" (src/ppx.ml[115,3256+28]..[115,3256+37])
                        pattern (src/ppx.ml[115,3256+40]..[115,3256+50])
                          Ppat_var "core_type2" (src/ppx.ml[115,3256+40]..[115,3256+50])
                      ]
                expression (src/ppx.ml[116,3311+4]..[116,3311+61])
                  Pexp_apply
                  expression (src/ppx.ml[116,3311+5]..[116,3311+18])
                    Pexp_ident "print_endline" (src/ppx.ml[116,3311+5]..[116,3311+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[116,3311+19]..[116,3311+60])
                        Pexp_apply
                        expression (src/ppx.ml[116,3311+20]..[116,3311+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[116,3311+20]..[116,3311+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[116,3311+35]..[116,3311+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[116,3311+37]..[116,3311+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3374+4]..[118,3374+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[118,3374+4]..[118,3374+15])
                  Some
                    []
                    pattern (src/ppx.ml[118,3374+16]..[118,3374+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3374+17]..[118,3374+18])
                          Ppat_var "a" (src/ppx.ml[118,3374+17]..[118,3374+18])
                        pattern (src/ppx.ml[118,3374+19]..[118,3374+20])
                          Ppat_var "b" (src/ppx.ml[118,3374+19]..[118,3374+20])
                      ]
                expression (src/ppx.ml[120,3443+4]..[120,3443+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3443+5]..[120,3443+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3443+5]..[120,3443+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3443+19]..[120,3443+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3443+20]..[120,3443+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3443+20]..[120,3443+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3443+35]..[120,3443+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[120,3443+37]..[120,3443+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3504+4]..[121,3504+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[121,3504+4]..[121,3504+14])
                  Some
                    []
                    pattern (src/ppx.ml[121,3504+15]..[121,3504+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3504+16]..[121,3504+17])
                          Ppat_var "a" (src/ppx.ml[121,3504+16]..[121,3504+17])
                        pattern (src/ppx.ml[121,3504+18]..[121,3504+19])
                          Ppat_var "b" (src/ppx.ml[121,3504+18]..[121,3504+19])
                      ]
                expression (src/ppx.ml[123,3574+4]..[123,3574+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3574+5]..[123,3574+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3574+5]..[123,3574+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3574+19]..[123,3574+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3574+20]..[123,3574+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3574+20]..[123,3574+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3574+35]..[123,3574+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[123,3574+37]..[123,3574+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3635+4]..[124,3635+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[124,3635+4]..[124,3635+14])
                  Some
                    []
                    pattern (src/ppx.ml[124,3635+15]..[124,3635+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[124,3635+16]..[124,3635+17])
                          Ppat_var "a" (src/ppx.ml[124,3635+16]..[124,3635+17])
                        pattern (src/ppx.ml[124,3635+18]..[124,3635+19])
                          Ppat_var "b" (src/ppx.ml[124,3635+18]..[124,3635+19])
                      ]
                expression (src/ppx.ml[126,3696+4]..[126,3696+60])
                  Pexp_apply
                  expression (src/ppx.ml[126,3696+5]..[126,3696+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3696+5]..[126,3696+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3696+19]..[126,3696+59])
                        Pexp_apply
                        expression (src/ppx.ml[126,3696+20]..[126,3696+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3696+20]..[126,3696+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3696+35]..[126,3696+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[126,3696+37]..[126,3696+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[127,3757+4]..[127,3757+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[127,3757+4]..[127,3757+16])
                  Some
                    []
                    pattern (src/ppx.ml[127,3757+17]..[127,3757+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[127,3757+18]..[127,3757+19])
                          Ppat_var "a" (src/ppx.ml[127,3757+18]..[127,3757+19])
                        pattern (src/ppx.ml[127,3757+20]..[127,3757+21])
                          Ppat_var "b" (src/ppx.ml[127,3757+20]..[127,3757+21])
                        pattern (src/ppx.ml[127,3757+22]..[127,3757+23])
                          Ppat_var "c" (src/ppx.ml[127,3757+22]..[127,3757+23])
                      ]
                expression (src/ppx.ml[129,3847+4]..[129,3847+60])
                  Pexp_apply
                  expression (src/ppx.ml[129,3847+5]..[129,3847+18])
                    Pexp_ident "print_endline" (src/ppx.ml[129,3847+5]..[129,3847+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[129,3847+19]..[129,3847+59])
                        Pexp_apply
                        expression (src/ppx.ml[129,3847+20]..[129,3847+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[129,3847+20]..[129,3847+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[129,3847+35]..[129,3847+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[129,3847+37]..[129,3847+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[130,3908+4]..[130,3908+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[130,3908+4]..[130,3908+13])
                  Some
                    []
                    pattern (src/ppx.ml[130,3908+14]..[130,3908+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[130,3908+15]..[130,3908+16])
                          Ppat_var "a" (src/ppx.ml[130,3908+15]..[130,3908+16])
                        pattern (src/ppx.ml[130,3908+17]..[130,3908+18])
                          Ppat_var "b" (src/ppx.ml[130,3908+17]..[130,3908+18])
                      ]
                expression (src/ppx.ml[132,3972+4]..[132,3972+60])
                  Pexp_apply
                  expression (src/ppx.ml[132,3972+5]..[132,3972+18])
                    Pexp_ident "print_endline" (src/ppx.ml[132,3972+5]..[132,3972+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[132,3972+19]..[132,3972+59])
                        Pexp_apply
                        expression (src/ppx.ml[132,3972+20]..[132,3972+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[132,3972+20]..[132,3972+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[132,3972+35]..[132,3972+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[132,3972+37]..[132,3972+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[133,4033+4]..[133,4033+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[133,4033+4]..[133,4033+16])
                  Some
                    []
                    pattern (src/ppx.ml[133,4033+17]..[133,4033+18])
                      Ppat_var "a" (src/ppx.ml[133,4033+17]..[133,4033+18])
                expression (src/ppx.ml[135,4081+4]..[135,4081+62])
                  Pexp_apply
                  expression (src/ppx.ml[135,4081+5]..[135,4081+18])
                    Pexp_ident "print_endline" (src/ppx.ml[135,4081+5]..[135,4081+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[135,4081+19]..[135,4081+61])
                        Pexp_apply
                        expression (src/ppx.ml[135,4081+20]..[135,4081+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[135,4081+20]..[135,4081+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[135,4081+35]..[135,4081+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[135,4081+36]..[135,4081+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[135,4081+37]..[135,4081+55]),None)
                                expression (src/ppx.ml[135,4081+57]..[135,4081+58])
                                  Pexp_ident "a" (src/ppx.ml[135,4081+57]..[135,4081+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[138,4289+4]..[138,4289+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[138,4289+4]..[138,4289+18])
                  Some
                    []
                    pattern (src/ppx.ml[138,4289+19]..[138,4289+20])
                      Ppat_var "a" (src/ppx.ml[138,4289+19]..[138,4289+20])
                expression (src/ppx.ml[139,4337+4]..[139,4337+65])
                  Pexp_apply
                  expression (src/ppx.ml[139,4337+5]..[139,4337+18])
                    Pexp_ident "print_endline" (src/ppx.ml[139,4337+5]..[139,4337+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[139,4337+19]..[139,4337+64])
                        Pexp_apply
                        expression (src/ppx.ml[139,4337+20]..[139,4337+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[139,4337+20]..[139,4337+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[139,4337+35]..[139,4337+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[139,4337+36]..[139,4337+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[139,4337+37]..[139,4337+58]),None)
                                expression (src/ppx.ml[139,4337+60]..[139,4337+61])
                                  Pexp_ident "a" (src/ppx.ml[139,4337+60]..[139,4337+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[141,4407+2]..[141,4407+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[141,4407+2]..[141,4407+26])
        expression (src/ppx.ml[141,4407+26]..[147,4544+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[141,4407+26]..[141,4407+29])
            Ppat_var "x" (src/ppx.ml[141,4407+27]..[141,4407+28])
          expression (src/ppx.ml[142,4439+2]..[147,4544+6])
            Pexp_match
            expression (src/ppx.ml[142,4439+8]..[142,4439+9])
              Pexp_ident "x" (src/ppx.ml[142,4439+8]..[142,4439+9])
            [
              <case>
                pattern (src/ppx.ml[143,4454+4]..[143,4454+6])
                  Ppat_construct "[]" (src/ppx.ml[143,4454+4]..[143,4454+6])
                  None
                expression (src/ppx.ml[143,4454+10]..[143,4454+12])
                  Pexp_construct "()" (src/ppx.ml[143,4454+10]..[143,4454+12])
                  None
              <case>
                pattern (src/ppx.ml[144,4467+4]..[144,4467+10])
                  Ppat_construct "::" (src/ppx.ml[144,4467+6]..[144,4467+8])
                  Some
                    []
                    pattern (src/ppx.ml[144,4467+4]..[144,4467+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[144,4467+4]..[144,4467+5])
                          Ppat_var "h" (src/ppx.ml[144,4467+4]..[144,4467+5])
                        pattern (src/ppx.ml[144,4467+9]..[144,4467+10])
                          Ppat_var "t" (src/ppx.ml[144,4467+9]..[144,4467+10])
                      ]
                expression (src/ppx.ml[145,4481+4]..[147,4544+6])
                  Pexp_sequence
                  expression (src/ppx.ml[145,4481+4]..[145,4481+27])
                    Pexp_apply
                    expression (src/ppx.ml[145,4481+5]..[145,4481+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[145,4481+5]..[145,4481+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[145,4481+25]..[145,4481+26])
                          Pexp_ident "h" (src/ppx.ml[145,4481+25]..[145,4481+26])
                    ]
                  expression (src/ppx.ml[146,4510+4]..[147,4544+6])
                    Pexp_sequence
                    expression (src/ppx.ml[146,4510+4]..[146,4510+32])
                      Pexp_apply
                      expression (src/ppx.ml[146,4510+5]..[146,4510+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[146,4510+5]..[146,4510+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[146,4510+30]..[146,4510+31])
                            Pexp_ident "t" (src/ppx.ml[146,4510+30]..[146,4510+31])
                      ]
                    expression (src/ppx.ml[147,4544+4]..[147,4544+6])
                      Pexp_construct "()" (src/ppx.ml[147,4544+4]..[147,4544+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[149,4555+0]..[149,4555+17])
          Ppat_var "process_core_type" (src/ppx.ml[149,4555+0]..[149,4555+17])
        expression (src/ppx.ml[149,4555+17]..[159,4822+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[149,4555+17]..[149,4555+20])
            Ppat_var "x" (src/ppx.ml[149,4555+18]..[149,4555+19])
          expression (src/ppx.ml[150,4578+2]..[159,4822+80])
            Pexp_match
            expression (src/ppx.ml[150,4578+8]..[150,4578+9])
              Pexp_ident "x" (src/ppx.ml[150,4578+8]..[150,4578+9])
            [
              <case>
                pattern (src/ppx.ml[151,4594+4]..[156,4755+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[152,4600+6]..[152,4600+15]) ghost
                      pattern (src/ppx.ml[152,4600+6]..[152,4600+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[152,4600+6]..[152,4600+15])
                    "ptyp_loc" (src/ppx.ml[153,4639+5]..[153,4639+13]) ghost
                      pattern (src/ppx.ml[153,4639+5]..[153,4639+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[153,4639+5]..[153,4639+13])
                    "ptyp_loc_stack" (src/ppx.ml[154,4672+5]..[154,4672+19]) ghost
                      pattern (src/ppx.ml[154,4672+5]..[154,4672+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[154,4672+5]..[154,4672+19])
                    "ptyp_attributes" (src/ppx.ml[155,4715+5]..[155,4715+20]) ghost
                      pattern (src/ppx.ml[155,4715+5]..[155,4715+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[155,4715+5]..[155,4715+20])
                  ]
                expression (src/ppx.ml[157,4763+4]..[159,4822+80])
                  Pexp_sequence
                  expression (src/ppx.ml[157,4763+4]..[157,4763+38])
                    Pexp_apply
                    expression (src/ppx.ml[157,4763+5]..[157,4763+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[157,4763+5]..[157,4763+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[157,4763+28]..[157,4763+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[157,4763+28]..[157,4763+37])
                    ]
                  expression (src/ppx.ml[159,4822+4]..[159,4822+80])
                    Pexp_apply
                    expression (src/ppx.ml[159,4822+5]..[159,4822+18])
                      Pexp_ident "print_endline" (src/ppx.ml[159,4822+5]..[159,4822+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[159,4822+19]..[159,4822+79])
                          Pexp_apply
                          expression (src/ppx.ml[159,4822+20]..[159,4822+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[159,4822+20]..[159,4822+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[159,4822+35]..[159,4822+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[159,4822+36]..[159,4822+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[159,4822+37]..[159,4822+63]),None)
                                  expression (src/ppx.ml[159,4822+68]..[159,4822+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[159,4822+68]..[159,4822+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[160,4903+4]..[160,4903+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[160,4903+4]..[160,4903+26])
        expression (src/ppx.ml[160,4903+26]..[165,5019+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[160,4903+26]..[160,4903+44])
            Ppat_constraint
            pattern (src/ppx.ml[160,4903+27]..[160,4903+28])
              Ppat_var "x" (src/ppx.ml[160,4903+27]..[160,4903+28])
            core_type (src/ppx.ml[160,4903+29]..[160,4903+43])
              Ptyp_constr "list" (src/ppx.ml[160,4903+39]..[160,4903+43])
              [
                core_type (src/ppx.ml[160,4903+29]..[160,4903+38])
                  Ptyp_constr "core_type" (src/ppx.ml[160,4903+29]..[160,4903+38])
                  []
              ]
          expression (src/ppx.ml[161,4950+2]..[165,5019+29])
            Pexp_match
            expression (src/ppx.ml[161,4950+8]..[161,4950+9])
              Pexp_ident "x" (src/ppx.ml[161,4950+8]..[161,4950+9])
            [
              <case>
                pattern (src/ppx.ml[162,4965+4]..[162,4965+6])
                  Ppat_construct "[]" (src/ppx.ml[162,4965+4]..[162,4965+6])
                  None
                expression (src/ppx.ml[162,4965+10]..[162,4965+12])
                  Pexp_construct "()" (src/ppx.ml[162,4965+10]..[162,4965+12])
                  None
              <case>
                pattern (src/ppx.ml[163,4978+4]..[163,4978+10])
                  Ppat_construct "::" (src/ppx.ml[163,4978+6]..[163,4978+8])
                  Some
                    []
                    pattern (src/ppx.ml[163,4978+4]..[163,4978+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[163,4978+4]..[163,4978+5])
                          Ppat_var "h" (src/ppx.ml[163,4978+4]..[163,4978+5])
                        pattern (src/ppx.ml[163,4978+9]..[163,4978+10])
                          Ppat_var "t" (src/ppx.ml[163,4978+9]..[163,4978+10])
                      ]
                expression (src/ppx.ml[164,4992+4]..[165,5019+29])
                  Pexp_sequence
                  expression (src/ppx.ml[164,4992+4]..[164,4992+25])
                    Pexp_apply
                    expression (src/ppx.ml[164,4992+4]..[164,4992+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[164,4992+4]..[164,4992+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[164,4992+22]..[164,4992+25])
                          Pexp_ident "h" (src/ppx.ml[164,4992+23]..[164,4992+24])
                    ]
                  expression (src/ppx.ml[165,5019+4]..[165,5019+29])
                    Pexp_apply
                    expression (src/ppx.ml[165,5019+4]..[165,5019+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[165,5019+4]..[165,5019+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,5019+26]..[165,5019+29])
                          Pexp_ident "t" (src/ppx.ml[165,5019+27]..[165,5019+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[172,5063+0]..[179,5262+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[172,5063+4]..[172,5063+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[172,5063+4]..[172,5063+31])
        expression (src/ppx.ml[172,5063+31]..[179,5262+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5063+31]..[172,5063+34])
            Ppat_var "x" (src/ppx.ml[172,5063+32]..[172,5063+33])
          expression (src/ppx.ml[173,5100+2]..[179,5262+65])
            Pexp_match
            expression (src/ppx.ml[173,5100+8]..[173,5100+9])
              Pexp_ident "x" (src/ppx.ml[173,5100+8]..[173,5100+9])
            [
              <case>
                pattern (src/ppx.ml[174,5115+4]..[174,5115+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[174,5115+4]..[174,5115+15])
                  Some
                    []
                    pattern (src/ppx.ml[174,5115+16]..[174,5115+17])
                      Ppat_var "a" (src/ppx.ml[174,5115+16]..[174,5115+17])
                expression (src/ppx.ml[175,5136+4]..[176,5168+64])
                  Pexp_sequence
                  expression (src/ppx.ml[175,5136+4]..[175,5136+30])
                    Pexp_apply
                    expression (src/ppx.ml[175,5136+5]..[175,5136+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[175,5136+5]..[175,5136+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[175,5136+28]..[175,5136+29])
                          Pexp_ident "a" (src/ppx.ml[175,5136+28]..[175,5136+29])
                    ]
                  expression (src/ppx.ml[176,5168+4]..[176,5168+64])
                    Pexp_apply
                    expression (src/ppx.ml[176,5168+5]..[176,5168+18])
                      Pexp_ident "print_endline" (src/ppx.ml[176,5168+5]..[176,5168+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[176,5168+19]..[176,5168+63])
                          Pexp_apply
                          expression (src/ppx.ml[176,5168+20]..[176,5168+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[176,5168+20]..[176,5168+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[176,5168+35]..[176,5168+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[176,5168+36]..[176,5168+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[176,5168+37]..[176,5168+55]),None)
                                  expression (src/ppx.ml[176,5168+60]..[176,5168+61])
                                    Pexp_ident "a" (src/ppx.ml[176,5168+60]..[176,5168+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[178,5240+4]..[178,5240+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[178,5240+4]..[178,5240+16])
                  Some
                    []
                    pattern (src/ppx.ml[178,5240+17]..[178,5240+18])
                      Ppat_var "a" (src/ppx.ml[178,5240+17]..[178,5240+18])
                expression (src/ppx.ml[179,5262+4]..[179,5262+65])
                  Pexp_apply
                  expression (src/ppx.ml[179,5262+5]..[179,5262+18])
                    Pexp_ident "print_endline" (src/ppx.ml[179,5262+5]..[179,5262+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[179,5262+19]..[179,5262+64])
                        Pexp_apply
                        expression (src/ppx.ml[179,5262+20]..[179,5262+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[179,5262+20]..[179,5262+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[179,5262+35]..[179,5262+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[179,5262+36]..[179,5262+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[179,5262+37]..[179,5262+56]),None)
                                expression (src/ppx.ml[179,5262+61]..[179,5262+62])
                                  Pexp_ident "a" (src/ppx.ml[179,5262+61]..[179,5262+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[181,5329+0]..[213,6305+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[181,5329+8]..[181,5329+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[181,5329+8]..[181,5329+57])
        expression (src/ppx.ml[181,5329+57]..[213,6305+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[181,5329+57]..[181,5329+60])
            Ppat_var "x" (src/ppx.ml[181,5329+58]..[181,5329+59])
          expression (src/ppx.ml[182,5392+2]..[213,6305+8])
            Pexp_match
            expression (src/ppx.ml[182,5392+8]..[182,5392+9])
              Pexp_ident "x" (src/ppx.ml[182,5392+8]..[182,5392+9])
            [
              <case>
                pattern (src/ppx.ml[183,5407+4]..[183,5407+6])
                  Ppat_construct "[]" (src/ppx.ml[183,5407+4]..[183,5407+6])
                  None
                expression (src/ppx.ml[183,5407+10]..[183,5407+12])
                  Pexp_construct "()" (src/ppx.ml[183,5407+10]..[183,5407+12])
                  None
              <case>
                pattern (src/ppx.ml[184,5420+4]..[184,5420+10])
                  Ppat_construct "::" (src/ppx.ml[184,5420+6]..[184,5420+8])
                  Some
                    []
                    pattern (src/ppx.ml[184,5420+4]..[184,5420+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[184,5420+4]..[184,5420+5])
                          Ppat_var "h" (src/ppx.ml[184,5420+4]..[184,5420+5])
                        pattern (src/ppx.ml[184,5420+9]..[184,5420+10])
                          Ppat_var "t" (src/ppx.ml[184,5420+9]..[184,5420+10])
                      ]
                expression (src/ppx.ml[186,5499+4]..[213,6305+8])
                  Pexp_match
                  expression (src/ppx.ml[186,5499+10]..[186,5499+11])
                    Pexp_ident "h" (src/ppx.ml[186,5499+10]..[186,5499+11])
                  [
                    <case>
                      pattern (src/ppx.ml[187,5516+5]..[194,5754+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[188,5523+6]..[188,5523+14]) ghost
                            pattern (src/ppx.ml[188,5523+6]..[188,5523+14])
                              Ppat_var "pcd_name" (src/ppx.ml[188,5523+6]..[188,5523+14])
                          "pcd_vars" (src/ppx.ml[189,5557+6]..[189,5557+14]) ghost
                            pattern (src/ppx.ml[189,5557+6]..[189,5557+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[189,5557+6]..[189,5557+14])
                          "pcd_args" (src/ppx.ml[190,5596+6]..[190,5596+14]) ghost
                            pattern (src/ppx.ml[190,5596+6]..[190,5596+14])
                              Ppat_var "pcd_args" (src/ppx.ml[190,5596+6]..[190,5596+14])
                          "pcd_res" (src/ppx.ml[191,5641+6]..[191,5641+13]) ghost
                            pattern (src/ppx.ml[191,5641+6]..[191,5641+13])
                              Ppat_var "pcd_res" (src/ppx.ml[191,5641+6]..[191,5641+13])
                          "pcd_loc" (src/ppx.ml[192,5680+6]..[192,5680+13]) ghost
                            pattern (src/ppx.ml[192,5680+6]..[192,5680+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[192,5680+6]..[192,5680+13])
                          "pcd_attributes" (src/ppx.ml[193,5713+6]..[193,5713+20]) ghost
                            pattern (src/ppx.ml[193,5713+6]..[193,5713+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[193,5713+6]..[193,5713+20])
                        ]
                      expression (src/ppx.ml[197,5836+6]..[213,6305+8])
                        Pexp_sequence
                        expression (src/ppx.ml[197,5836+6]..[197,5836+43])
                          Pexp_apply
                          expression (src/ppx.ml[197,5836+6]..[197,5836+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[197,5836+6]..[197,5836+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[197,5836+33]..[197,5836+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[197,5836+34]..[197,5836+42])
                          ]
                        expression (src/ppx.ml[198,5881+6]..[213,6305+8])
                          Pexp_sequence
                          expression (src/ppx.ml[198,5881+6]..[211,6226+16])
                            Pexp_apply
                            expression (src/ppx.ml[198,5881+7]..[198,5881+20])
                              Pexp_ident "print_endline" (src/ppx.ml[198,5881+7]..[198,5881+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[198,5881+21]..[211,6226+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[198,5881+22]..[198,5881+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[198,5881+22]..[198,5881+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[198,5881+37]..[211,6226+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[199,5920+11]..[199,5920+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[199,5920+12]..[199,5920+36]),None)
                                          expression (src/ppx.ml[200,5959+15]..[200,5959+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[200,5959+15]..[200,5959+23])
                                          expression (src/ppx.ml[201,5984+15]..[201,5984+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[201,5984+16]..[201,5984+20]),None)
                                          expression (src/ppx.ml[202,6007+15]..[202,6007+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[202,6007+15]..[202,6007+23])
                                          expression (src/ppx.ml[203,6032+15]..[203,6032+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[203,6032+16]..[203,6032+20]),None)
                                          expression (src/ppx.ml[204,6055+15]..[204,6055+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[204,6055+15]..[204,6055+23])
                                          expression (src/ppx.ml[205,6080+15]..[205,6080+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[205,6080+16]..[205,6080+19]),None)
                                          expression (src/ppx.ml[206,6102+15]..[206,6102+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[206,6102+15]..[206,6102+22])
                                          expression (src/ppx.ml[207,6126+15]..[207,6126+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[207,6126+16]..[207,6126+19]),None)
                                          expression (src/ppx.ml[208,6148+15]..[208,6148+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[208,6148+15]..[208,6148+22])
                                          expression (src/ppx.ml[209,6172+15]..[209,6172+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[209,6172+16]..[209,6172+21]),None)
                                          expression (src/ppx.ml[210,6196+15]..[210,6196+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[210,6196+15]..[210,6196+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[212,6244+6]..[213,6305+8])
                            Pexp_sequence
                            expression (src/ppx.ml[212,6244+6]..[212,6244+59])
                              Pexp_apply
                              expression (src/ppx.ml[212,6244+7]..[212,6244+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[212,6244+7]..[212,6244+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[212,6244+57]..[212,6244+58])
                                    Pexp_ident "t" (src/ppx.ml[212,6244+57]..[212,6244+58])
                              ]
                            expression (src/ppx.ml[213,6305+6]..[213,6305+8])
                              Pexp_construct "()" (src/ppx.ml[213,6305+6]..[213,6305+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[215,6317+0]..[226,6714+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[215,6317+4]..[215,6317+16])
          Ppat_var "process_kind" (src/ppx.ml[215,6317+4]..[215,6317+16])
        expression (src/ppx.ml[215,6317+16]..[226,6714+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[215,6317+16]..[215,6317+19])
            Ppat_var "x" (src/ppx.ml[215,6317+17]..[215,6317+18])
          expression (src/ppx.ml[216,6339+2]..[226,6714+77])
            Pexp_match
            expression (src/ppx.ml[216,6339+8]..[216,6339+9])
              Pexp_ident "x" (src/ppx.ml[216,6339+8]..[216,6339+9])
            [
              <case>
                pattern (src/ppx.ml[218,6376+4]..[218,6376+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[218,6376+4]..[218,6376+18])
                  None
                expression (src/ppx.ml[218,6376+23]..[218,6376+81])
                  Pexp_apply
                  expression (src/ppx.ml[218,6376+24]..[218,6376+37])
                    Pexp_ident "print_endline" (src/ppx.ml[218,6376+24]..[218,6376+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[218,6376+38]..[218,6376+80])
                        Pexp_apply
                        expression (src/ppx.ml[218,6376+39]..[218,6376+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[218,6376+39]..[218,6376+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[218,6376+54]..[218,6376+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[218,6376+56]..[218,6376+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[219,6458+4]..[219,6458+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[219,6458+4]..[219,6458+17])
                  Some
                    []
                    pattern (src/ppx.ml[219,6458+18]..[219,6458+19])
                      Ppat_var "a" (src/ppx.ml[219,6458+18]..[219,6458+19])
                expression (src/ppx.ml[220,6481+4]..[221,6540+65])
                  Pexp_sequence
                  expression (src/ppx.ml[220,6481+4]..[220,6481+57])
                    Pexp_apply
                    expression (src/ppx.ml[220,6481+5]..[220,6481+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[220,6481+5]..[220,6481+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[220,6481+55]..[220,6481+56])
                          Pexp_ident "a" (src/ppx.ml[220,6481+55]..[220,6481+56])
                    ]
                  expression (src/ppx.ml[221,6540+4]..[221,6540+65])
                    Pexp_apply
                    expression (src/ppx.ml[221,6540+5]..[221,6540+18])
                      Pexp_ident "print_endline" (src/ppx.ml[221,6540+5]..[221,6540+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[221,6540+19]..[221,6540+64])
                          Pexp_apply
                          expression (src/ppx.ml[221,6540+20]..[221,6540+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[221,6540+20]..[221,6540+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[221,6540+35]..[221,6540+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[221,6540+36]..[221,6540+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[221,6540+37]..[221,6540+57]),None)
                                  expression (src/ppx.ml[221,6540+61]..[221,6540+62])
                                    Pexp_ident "a" (src/ppx.ml[221,6540+61]..[221,6540+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[224,6653+5]..[224,6653+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[224,6653+5]..[224,6653+17])
                  Some
                    []
                    pattern (src/ppx.ml[224,6653+18]..[224,6653+19])
                      Ppat_var "a" (src/ppx.ml[224,6653+18]..[224,6653+19])
                expression (src/ppx.ml[225,6681+5]..[225,6681+32])
                  Pexp_apply
                  expression (src/ppx.ml[225,6681+5]..[225,6681+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[225,6681+5]..[225,6681+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[225,6681+29]..[225,6681+32])
                        Pexp_ident "a" (src/ppx.ml[225,6681+30]..[225,6681+31])
                  ]
              <case>
                pattern (src/ppx.ml[226,6714+5]..[226,6714+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[226,6714+5]..[226,6714+15])
                  None
                expression (src/ppx.ml[226,6714+19]..[226,6714+77])
                  Pexp_apply
                  expression (src/ppx.ml[226,6714+20]..[226,6714+33])
                    Pexp_ident "print_endline" (src/ppx.ml[226,6714+20]..[226,6714+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[226,6714+34]..[226,6714+76])
                        Pexp_apply
                        expression (src/ppx.ml[226,6714+35]..[226,6714+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[226,6714+35]..[226,6714+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[226,6714+50]..[226,6714+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6714+52]..[226,6714+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[228,6793+0]..[249,7799+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[228,6793+4]..[228,6793+19])
          Ppat_var "print_type_decl" (src/ppx.ml[228,6793+4]..[228,6793+19])
        expression (src/ppx.ml[228,6793+19]..[249,7799+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[228,6793+19]..[228,6793+22])
            Ppat_var "x" (src/ppx.ml[228,6793+20]..[228,6793+21])
          expression (src/ppx.ml[229,6818+2]..[249,7799+38])
            Pexp_match
            expression (src/ppx.ml[229,6818+8]..[229,6818+9])
              Pexp_ident "x" (src/ppx.ml[229,6818+8]..[229,6818+9])
            [
              <case>
                pattern (src/ppx.ml[230,6833+4]..[239,7214+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[231,6839+6]..[231,6839+16]) ghost
                      pattern (src/ppx.ml[231,6839+6]..[231,6839+16])
                        Ppat_var "ptype_name" (src/ppx.ml[231,6839+6]..[231,6839+16])
                    "ptype_params" (src/ppx.ml[232,6876+6]..[232,6876+18]) ghost
                      pattern (src/ppx.ml[232,6876+6]..[232,6876+18])
                        Ppat_var "ptype_params" (src/ppx.ml[232,6876+6]..[232,6876+18])
                    "ptype_cstrs" (src/ppx.ml[233,6948+6]..[233,6948+17]) ghost
                      pattern (src/ppx.ml[233,6948+6]..[233,6948+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[233,6948+6]..[233,6948+17])
                    "ptype_kind" (src/ppx.ml[234,7017+6]..[234,7017+16]) ghost
                      pattern (src/ppx.ml[234,7017+6]..[234,7017+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[234,7017+6]..[234,7017+16])
                    "ptype_private" (src/ppx.ml[235,7054+6]..[235,7054+19]) ghost
                      pattern (src/ppx.ml[235,7054+6]..[235,7054+19])
                        Ppat_var "ptype_private" (src/ppx.ml[235,7054+6]..[235,7054+19])
                    "ptype_manifest" (src/ppx.ml[236,7095+6]..[236,7095+20]) ghost
                      pattern (src/ppx.ml[236,7095+6]..[236,7095+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[236,7095+6]..[236,7095+20])
                    "ptype_attributes" (src/ppx.ml[237,7142+6]..[237,7142+22]) ghost
                      pattern (src/ppx.ml[237,7142+6]..[237,7142+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[237,7142+6]..[237,7142+22])
                    "ptype_loc" (src/ppx.ml[238,7183+6]..[238,7183+15]) ghost
                      pattern (src/ppx.ml[238,7183+6]..[238,7183+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[238,7183+6]..[238,7183+15])
                  ]
                expression (src/ppx.ml[240,7223+4]..[249,7799+38])
                  Pexp_sequence
                  expression (src/ppx.ml[240,7223+4]..[240,7223+69])
                    Pexp_apply
                    expression (src/ppx.ml[240,7223+5]..[240,7223+18])
                      Pexp_ident "print_endline" (src/ppx.ml[240,7223+5]..[240,7223+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[240,7223+19]..[240,7223+68])
                          Pexp_apply
                          expression (src/ppx.ml[240,7223+20]..[240,7223+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[240,7223+20]..[240,7223+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[240,7223+35]..[240,7223+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[240,7223+36]..[240,7223+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[240,7223+37]..[240,7223+53]),None)
                                  expression (src/ppx.ml[240,7223+56]..[240,7223+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[240,7223+56]..[240,7223+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[241,7294+4]..[249,7799+38])
                    Pexp_sequence
                    expression (src/ppx.ml[241,7294+4]..[241,7294+72])
                      Pexp_apply
                      expression (src/ppx.ml[241,7294+5]..[241,7294+18])
                        Pexp_ident "print_endline" (src/ppx.ml[241,7294+5]..[241,7294+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[241,7294+19]..[241,7294+71])
                            Pexp_apply
                            expression (src/ppx.ml[241,7294+20]..[241,7294+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[241,7294+20]..[241,7294+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[241,7294+35]..[241,7294+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[241,7294+36]..[241,7294+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[241,7294+37]..[241,7294+54]),None)
                                    expression (src/ppx.ml[241,7294+57]..[241,7294+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[241,7294+57]..[241,7294+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[242,7368+4]..[249,7799+38])
                      Pexp_sequence
                      expression (src/ppx.ml[242,7368+4]..[242,7368+66])
                        Pexp_apply
                        expression (src/ppx.ml[242,7368+5]..[242,7368+18])
                          Pexp_ident "print_endline" (src/ppx.ml[242,7368+5]..[242,7368+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[242,7368+19]..[242,7368+65])
                              Pexp_apply
                              expression (src/ppx.ml[242,7368+20]..[242,7368+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[242,7368+20]..[242,7368+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[242,7368+35]..[242,7368+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[242,7368+36]..[242,7368+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[242,7368+37]..[242,7368+49]),None)
                                      expression (src/ppx.ml[242,7368+52]..[242,7368+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[242,7368+52]..[242,7368+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[243,7436+4]..[249,7799+38])
                        Pexp_sequence
                        expression (src/ppx.ml[243,7436+4]..[243,7436+63])
                          Pexp_apply
                          expression (src/ppx.ml[243,7436+5]..[243,7436+18])
                            Pexp_ident "print_endline" (src/ppx.ml[243,7436+5]..[243,7436+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[243,7436+19]..[243,7436+62])
                                Pexp_apply
                                expression (src/ppx.ml[243,7436+20]..[243,7436+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[243,7436+20]..[243,7436+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[243,7436+35]..[243,7436+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[243,7436+36]..[243,7436+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[243,7436+37]..[243,7436+48]),None)
                                        expression (src/ppx.ml[243,7436+50]..[243,7436+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[243,7436+50]..[243,7436+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[244,7501+4]..[249,7799+38])
                          Pexp_sequence
                          expression (src/ppx.ml[244,7501+4]..[244,7501+29])
                            Pexp_apply
                            expression (src/ppx.ml[244,7501+5]..[244,7501+17])
                              Pexp_ident "process_kind" (src/ppx.ml[244,7501+5]..[244,7501+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[244,7501+18]..[244,7501+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[244,7501+18]..[244,7501+28])
                            ]
                          expression (src/ppx.ml[245,7532+4]..[249,7799+38])
                            Pexp_apply
                            expression (src/ppx.ml[245,7532+5]..[245,7532+18])
                              Pexp_ident "print_endline" (src/ppx.ml[245,7532+5]..[245,7532+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,7532+19]..[249,7799+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[245,7532+20]..[245,7532+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[245,7532+20]..[245,7532+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[245,7532+35]..[249,7799+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[245,7532+36]..[245,7532+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[245,7532+37]..[245,7532+51]),None)
                                          expression (src/ppx.ml[245,7532+55]..[245,7532+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[245,7532+55]..[245,7532+68])
                                          expression (src/ppx.ml[246,7602+36]..[246,7602+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[246,7602+37]..[246,7602+51]),None)
                                          expression (src/ppx.ml[246,7602+54]..[246,7602+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[246,7602+54]..[246,7602+68])
                                          expression (src/ppx.ml[247,7672+36]..[247,7672+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[247,7672+37]..[247,7672+47]),None)
                                          expression (src/ppx.ml[247,7672+50]..[247,7672+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[247,7672+50]..[247,7672+66])
                                          expression (src/ppx.ml[248,7740+36]..[248,7740+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[248,7740+37]..[248,7740+46]),None)
                                          expression (src/ppx.ml[248,7740+49]..[248,7740+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[248,7740+49]..[248,7740+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[251,7843+0]..[257,7978+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[251,7843+8]..[251,7843+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[251,7843+8]..[251,7843+30])
        expression (src/ppx.ml[251,7843+30]..[257,7978+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[251,7843+30]..[251,7843+33])
            Ppat_var "x" (src/ppx.ml[251,7843+31]..[251,7843+32])
          expression (src/ppx.ml[252,7879+2]..[257,7978+6])
            Pexp_match
            expression (src/ppx.ml[252,7879+8]..[252,7879+9])
              Pexp_ident "x" (src/ppx.ml[252,7879+8]..[252,7879+9])
            [
              <case>
                pattern (src/ppx.ml[253,7894+4]..[253,7894+6])
                  Ppat_construct "[]" (src/ppx.ml[253,7894+4]..[253,7894+6])
                  None
                expression (src/ppx.ml[253,7894+10]..[253,7894+12])
                  Pexp_construct "()" (src/ppx.ml[253,7894+10]..[253,7894+12])
                  None
              <case>
                pattern (src/ppx.ml[254,7907+4]..[254,7907+10])
                  Ppat_construct "::" (src/ppx.ml[254,7907+6]..[254,7907+8])
                  Some
                    []
                    pattern (src/ppx.ml[254,7907+4]..[254,7907+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[254,7907+4]..[254,7907+5])
                          Ppat_var "h" (src/ppx.ml[254,7907+4]..[254,7907+5])
                        pattern (src/ppx.ml[254,7907+9]..[254,7907+10])
                          Ppat_var "t" (src/ppx.ml[254,7907+9]..[254,7907+10])
                      ]
                expression (src/ppx.ml[255,7921+4]..[257,7978+6])
                  Pexp_sequence
                  expression (src/ppx.ml[255,7921+4]..[255,7921+23])
                    Pexp_apply
                    expression (src/ppx.ml[255,7921+5]..[255,7921+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[255,7921+5]..[255,7921+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[255,7921+21]..[255,7921+22])
                          Pexp_ident "h" (src/ppx.ml[255,7921+21]..[255,7921+22])
                    ]
                  expression (src/ppx.ml[256,7946+4]..[257,7978+6])
                    Pexp_sequence
                    expression (src/ppx.ml[256,7946+4]..[256,7946+30])
                      Pexp_apply
                      expression (src/ppx.ml[256,7946+5]..[256,7946+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[256,7946+5]..[256,7946+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[256,7946+28]..[256,7946+29])
                            Pexp_ident "t" (src/ppx.ml[256,7946+28]..[256,7946+29])
                      ]
                    expression (src/ppx.ml[257,7978+4]..[257,7978+6])
                      Pexp_construct "()" (src/ppx.ml[257,7978+4]..[257,7978+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[259,7990+0]..[285,9954+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[259,7990+4]..[259,7990+13])
          Ppat_var "printdesc" (src/ppx.ml[259,7990+4]..[259,7990+13])
        expression (src/ppx.ml[259,7990+13]..[285,9954+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[259,7990+13]..[259,7990+37])
            Ppat_constraint
            pattern (src/ppx.ml[259,7990+14]..[259,7990+15])
              Ppat_var "x" (src/ppx.ml[259,7990+14]..[259,7990+15])
            core_type (src/ppx.ml[259,7990+17]..[259,7990+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[259,7990+17]..[259,7990+36])
              []
          expression (src/ppx.ml[259,7990+38]..[285,9954+128])
            Pexp_constraint
            expression (src/ppx.ml[260,8036+2]..[285,9954+128])
              Pexp_sequence
              expression (src/ppx.ml[260,8036+2]..[260,8036+68])
                Pexp_apply
                expression (src/ppx.ml[260,8036+3]..[260,8036+16])
                  Pexp_ident "print_endline" (src/ppx.ml[260,8036+3]..[260,8036+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[260,8036+17]..[260,8036+67])
                      Pexp_apply
                      expression (src/ppx.ml[260,8036+18]..[260,8036+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[260,8036+18]..[260,8036+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,8036+33]..[260,8036+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[260,8036+34]..[260,8036+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[260,8036+35]..[260,8036+61]),None)
                              expression (src/ppx.ml[260,8036+64]..[260,8036+65])
                                Pexp_ident "x" (src/ppx.ml[260,8036+64]..[260,8036+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[261,8106+2]..[285,9954+128])
                Pexp_match
                expression (src/ppx.ml[261,8106+8]..[261,8106+9])
                  Pexp_ident "x" (src/ppx.ml[261,8106+8]..[261,8106+9])
                [
                  <case>
                    pattern (src/ppx.ml[262,8121+4]..[262,8121+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[262,8121+4]..[262,8121+13])
                      Some
                        []
                        pattern (src/ppx.ml[262,8121+14]..[262,8121+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[262,8121+15]..[262,8121+25])
                              Ppat_var "expression" (src/ppx.ml[262,8121+15]..[262,8121+25])
                            pattern (src/ppx.ml[262,8121+26]..[262,8121+36])
                              Ppat_var "attributes" (src/ppx.ml[262,8121+26]..[262,8121+36])
                          ]
                    expression (src/ppx.ml[262,8121+41]..[262,8121+117])
                      Pexp_apply
                      expression (src/ppx.ml[262,8121+42]..[262,8121+55])
                        Pexp_ident "print_endline" (src/ppx.ml[262,8121+42]..[262,8121+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,8121+56]..[262,8121+116])
                            Pexp_apply
                            expression (src/ppx.ml[262,8121+57]..[262,8121+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,8121+57]..[262,8121+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,8121+72]..[262,8121+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,8121+73]..[262,8121+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[262,8121+74]..[262,8121+90]),None)
                                    expression (src/ppx.ml[262,8121+93]..[262,8121+103])
                                      Pexp_ident "expression" (src/ppx.ml[262,8121+93]..[262,8121+103])
                                    expression (src/ppx.ml[262,8121+104]..[262,8121+114])
                                      Pexp_ident "attributes" (src/ppx.ml[262,8121+104]..[262,8121+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,8259+4]..[264,8259+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[264,8259+4]..[264,8259+14])
                      Some
                        []
                        pattern (src/ppx.ml[264,8259+15]..[264,8259+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[264,8259+16]..[264,8259+24])
                              Ppat_var "rec_flag" (src/ppx.ml[264,8259+16]..[264,8259+24])
                            pattern (src/ppx.ml[264,8259+26]..[264,8259+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[264,8259+26]..[264,8259+44])
                          ]
                    expression (src/ppx.ml[264,8259+48]..[265,8393+48])
                      Pexp_sequence
                      expression (src/ppx.ml[264,8259+48]..[264,8259+132])
                        Pexp_apply
                        expression (src/ppx.ml[264,8259+49]..[264,8259+62])
                          Pexp_ident "print_endline" (src/ppx.ml[264,8259+49]..[264,8259+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[264,8259+63]..[264,8259+131])
                              Pexp_apply
                              expression (src/ppx.ml[264,8259+64]..[264,8259+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[264,8259+64]..[264,8259+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[264,8259+79]..[264,8259+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[264,8259+80]..[264,8259+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[264,8259+81]..[264,8259+98]),None)
                                      expression (src/ppx.ml[264,8259+101]..[264,8259+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[264,8259+101]..[264,8259+109])
                                      expression (src/ppx.ml[264,8259+111]..[264,8259+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[264,8259+111]..[264,8259+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[265,8393+4]..[265,8393+48])
                        Pexp_apply
                        expression (src/ppx.ml[265,8393+4]..[265,8393+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[265,8393+4]..[265,8393+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[265,8393+28]..[265,8393+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[265,8393+29]..[265,8393+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[266,8442+4]..[266,8442+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[266,8442+4]..[266,8442+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8442+19]..[266,8442+36])
                          Ppat_var "value_description" (src/ppx.ml[266,8442+19]..[266,8442+36])
                    expression (src/ppx.ml[266,8442+39]..[266,8442+116])
                      Pexp_apply
                      expression (src/ppx.ml[266,8442+40]..[266,8442+53])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8442+40]..[266,8442+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8442+54]..[266,8442+115])
                            Pexp_apply
                            expression (src/ppx.ml[266,8442+55]..[266,8442+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8442+55]..[266,8442+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8442+70]..[266,8442+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8442+71]..[266,8442+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[266,8442+72]..[266,8442+93]),None)
                                    expression (src/ppx.ml[266,8442+96]..[266,8442+113])
                                      Pexp_ident "value_description" (src/ppx.ml[266,8442+96]..[266,8442+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8560+4]..[268,8560+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[268,8560+4]..[268,8560+13])
                      Some
                        []
                        pattern (src/ppx.ml[268,8560+14]..[268,8560+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[268,8560+15]..[268,8560+23])
                              Ppat_var "rec_flag" (src/ppx.ml[268,8560+15]..[268,8560+23])
                            pattern (src/ppx.ml[268,8560+25]..[268,8560+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[268,8560+25]..[268,8560+46])
                          ]
                    expression (src/ppx.ml[270,8639+4]..[271,8690+90])
                      Pexp_sequence
                      expression (src/ppx.ml[270,8639+4]..[270,8639+49])
                        Pexp_apply
                        expression (src/ppx.ml[270,8639+4]..[270,8639+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[270,8639+4]..[270,8639+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[270,8639+26]..[270,8639+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[270,8639+27]..[270,8639+48])
                        ]
                      expression (src/ppx.ml[271,8690+4]..[271,8690+90])
                        Pexp_apply
                        expression (src/ppx.ml[271,8690+5]..[271,8690+18])
                          Pexp_ident "print_endline" (src/ppx.ml[271,8690+5]..[271,8690+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[271,8690+19]..[271,8690+89])
                              Pexp_apply
                              expression (src/ppx.ml[271,8690+20]..[271,8690+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[271,8690+20]..[271,8690+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[271,8690+35]..[271,8690+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[271,8690+36]..[271,8690+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[271,8690+37]..[271,8690+53]),None)
                                      expression (src/ppx.ml[271,8690+56]..[271,8690+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[271,8690+56]..[271,8690+64])
                                      expression (src/ppx.ml[271,8690+66]..[271,8690+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[271,8690+66]..[271,8690+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[274,8783+4]..[274,8783+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[274,8783+4]..[274,8783+15])
                      Some
                        []
                        pattern (src/ppx.ml[274,8783+17]..[274,8783+31])
                          Ppat_var "type_extension" (src/ppx.ml[274,8783+17]..[274,8783+31])
                    expression (src/ppx.ml[274,8783+34]..[274,8783+105])
                      Pexp_apply
                      expression (src/ppx.ml[274,8783+35]..[274,8783+48])
                        Pexp_ident "print_endline" (src/ppx.ml[274,8783+35]..[274,8783+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,8783+49]..[274,8783+104])
                            Pexp_apply
                            expression (src/ppx.ml[274,8783+50]..[274,8783+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,8783+50]..[274,8783+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,8783+65]..[274,8783+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,8783+66]..[274,8783+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[274,8783+67]..[274,8783+85]),None)
                                    expression (src/ppx.ml[274,8783+88]..[274,8783+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[274,8783+88]..[274,8783+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,8889+4]..[275,8889+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[275,8889+4]..[275,8889+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,8889+19]..[275,8889+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[275,8889+19]..[275,8889+40])
                    expression (src/ppx.ml[275,8889+43]..[275,8889+124])
                      Pexp_apply
                      expression (src/ppx.ml[275,8889+44]..[275,8889+57])
                        Pexp_ident "print_endline" (src/ppx.ml[275,8889+44]..[275,8889+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,8889+58]..[275,8889+123])
                            Pexp_apply
                            expression (src/ppx.ml[275,8889+59]..[275,8889+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,8889+59]..[275,8889+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,8889+74]..[275,8889+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,8889+75]..[275,8889+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[275,8889+76]..[275,8889+97]),None)
                                    expression (src/ppx.ml[275,8889+100]..[275,8889+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[275,8889+100]..[275,8889+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9014+4]..[276,9014+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[276,9014+4]..[276,9014+15])
                      Some
                        []
                        pattern (src/ppx.ml[276,9014+17]..[276,9014+31])
                          Ppat_var "module_binding" (src/ppx.ml[276,9014+17]..[276,9014+31])
                    expression (src/ppx.ml[276,9014+34]..[276,9014+104])
                      Pexp_apply
                      expression (src/ppx.ml[276,9014+35]..[276,9014+48])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9014+35]..[276,9014+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9014+49]..[276,9014+103])
                            Pexp_apply
                            expression (src/ppx.ml[276,9014+50]..[276,9014+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9014+50]..[276,9014+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9014+65]..[276,9014+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9014+66]..[276,9014+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[276,9014+67]..[276,9014+85]),None)
                                    expression (src/ppx.ml[276,9014+87]..[276,9014+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[276,9014+87]..[276,9014+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[277,9119+4]..[277,9119+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[277,9119+4]..[277,9119+18])
                      Some
                        []
                        pattern (src/ppx.ml[277,9119+20]..[277,9119+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[277,9119+20]..[277,9119+39])
                    expression (src/ppx.ml[277,9119+42]..[277,9119+121])
                      Pexp_apply
                      expression (src/ppx.ml[277,9119+43]..[277,9119+56])
                        Pexp_ident "print_endline" (src/ppx.ml[277,9119+43]..[277,9119+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[277,9119+57]..[277,9119+120])
                            Pexp_apply
                            expression (src/ppx.ml[277,9119+58]..[277,9119+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[277,9119+58]..[277,9119+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[277,9119+73]..[277,9119+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[277,9119+74]..[277,9119+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[277,9119+75]..[277,9119+96]),None)
                                    expression (src/ppx.ml[277,9119+99]..[277,9119+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[277,9119+99]..[277,9119+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[278,9241+4]..[278,9241+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[278,9241+4]..[278,9241+16])
                      Some
                        []
                        pattern (src/ppx.ml[278,9241+17]..[278,9241+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[278,9241+17]..[278,9241+40])
                    expression (src/ppx.ml[278,9241+43]..[278,9241+124])
                      Pexp_apply
                      expression (src/ppx.ml[278,9241+44]..[278,9241+57])
                        Pexp_ident "print_endline" (src/ppx.ml[278,9241+44]..[278,9241+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,9241+58]..[278,9241+123])
                            Pexp_apply
                            expression (src/ppx.ml[278,9241+59]..[278,9241+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,9241+59]..[278,9241+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,9241+74]..[278,9241+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,9241+75]..[278,9241+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[278,9241+76]..[278,9241+95]),None)
                                    expression (src/ppx.ml[278,9241+98]..[278,9241+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[278,9241+98]..[278,9241+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[280,9383+4]..[280,9383+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[280,9383+4]..[280,9383+13])
                      Some
                        []
                        pattern (src/ppx.ml[280,9383+14]..[280,9383+30])
                          Ppat_var "open_description" (src/ppx.ml[280,9383+14]..[280,9383+30])
                    expression (src/ppx.ml[280,9383+33]..[280,9383+103])
                      Pexp_apply
                      expression (src/ppx.ml[280,9383+34]..[280,9383+47])
                        Pexp_ident "print_endline" (src/ppx.ml[280,9383+34]..[280,9383+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[280,9383+48]..[280,9383+102])
                            Pexp_apply
                            expression (src/ppx.ml[280,9383+49]..[280,9383+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[280,9383+49]..[280,9383+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[280,9383+64]..[280,9383+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[280,9383+65]..[280,9383+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[280,9383+66]..[280,9383+81]),None)
                                    expression (src/ppx.ml[280,9383+84]..[280,9383+100])
                                      Pexp_ident "open_description" (src/ppx.ml[280,9383+84]..[280,9383+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[281,9487+4]..[281,9487+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[281,9487+4]..[281,9487+14])
                      Some
                        []
                        pattern (src/ppx.ml[281,9487+15]..[281,9487+36])
                          Ppat_var "class_declarations" (src/ppx.ml[281,9487+16]..[281,9487+34])
                    expression (src/ppx.ml[281,9487+39]..[281,9487+113])
                      Pexp_apply
                      expression (src/ppx.ml[281,9487+40]..[281,9487+53])
                        Pexp_ident "print_endline" (src/ppx.ml[281,9487+40]..[281,9487+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[281,9487+54]..[281,9487+112])
                            Pexp_apply
                            expression (src/ppx.ml[281,9487+55]..[281,9487+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[281,9487+55]..[281,9487+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[281,9487+70]..[281,9487+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[281,9487+71]..[281,9487+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[281,9487+72]..[281,9487+89]),None)
                                    expression (src/ppx.ml[281,9487+92]..[281,9487+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[281,9487+92]..[281,9487+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[282,9601+4]..[282,9601+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[282,9601+4]..[282,9601+19])
                      Some
                        []
                        pattern (src/ppx.ml[282,9601+20]..[282,9601+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[282,9601+21]..[282,9601+44])
                    expression (src/ppx.ml[282,9601+48]..[282,9601+132])
                      Pexp_apply
                      expression (src/ppx.ml[282,9601+49]..[282,9601+62])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9601+49]..[282,9601+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9601+63]..[282,9601+131])
                            Pexp_apply
                            expression (src/ppx.ml[282,9601+64]..[282,9601+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9601+64]..[282,9601+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9601+79]..[282,9601+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9601+80]..[282,9601+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[282,9601+81]..[282,9601+103]),None)
                                    expression (src/ppx.ml[282,9601+106]..[282,9601+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[282,9601+106]..[282,9601+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[283,9734+4]..[283,9734+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[283,9734+4]..[283,9734+16])
                      Some
                        []
                        pattern (src/ppx.ml[283,9734+18]..[283,9734+39])
                          Ppat_var "include_declaration" (src/ppx.ml[283,9734+19]..[283,9734+38])
                    expression (src/ppx.ml[283,9734+41]..[283,9734+117])
                      Pexp_apply
                      expression (src/ppx.ml[283,9734+42]..[283,9734+55])
                        Pexp_ident "print_endline" (src/ppx.ml[283,9734+42]..[283,9734+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9734+56]..[283,9734+116])
                            Pexp_apply
                            expression (src/ppx.ml[283,9734+57]..[283,9734+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[283,9734+57]..[283,9734+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[283,9734+72]..[283,9734+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[283,9734+73]..[283,9734+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[283,9734+74]..[283,9734+93]),None)
                                    expression (src/ppx.ml[283,9734+95]..[283,9734+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[283,9734+95]..[283,9734+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9852+4]..[284,9852+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[284,9852+4]..[284,9852+18])
                      Some
                        []
                        pattern (src/ppx.ml[284,9852+19]..[284,9852+30])
                          Ppat_var "attribute" (src/ppx.ml[284,9852+20]..[284,9852+29])
                    expression (src/ppx.ml[284,9852+32]..[284,9852+101])
                      Pexp_apply
                      expression (src/ppx.ml[284,9852+33]..[284,9852+46])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9852+33]..[284,9852+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9852+47]..[284,9852+100])
                            Pexp_apply
                            expression (src/ppx.ml[284,9852+48]..[284,9852+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9852+48]..[284,9852+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9852+63]..[284,9852+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9852+64]..[284,9852+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[284,9852+65]..[284,9852+86]),None)
                                    expression (src/ppx.ml[284,9852+89]..[284,9852+98])
                                      Pexp_ident "attribute" (src/ppx.ml[284,9852+89]..[284,9852+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9954+4]..[285,9954+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[285,9954+4]..[285,9954+18])
                      Some
                        []
                        pattern (src/ppx.ml[285,9954+19]..[285,9954+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[285,9954+21]..[285,9954+30])
                              Ppat_var "extension" (src/ppx.ml[285,9954+21]..[285,9954+30])
                            pattern (src/ppx.ml[285,9954+33]..[285,9954+43])
                              Ppat_var "attributes" (src/ppx.ml[285,9954+33]..[285,9954+43])
                          ]
                    expression (src/ppx.ml[285,9954+46]..[285,9954+128])
                      Pexp_apply
                      expression (src/ppx.ml[285,9954+47]..[285,9954+60])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9954+47]..[285,9954+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9954+61]..[285,9954+127])
                            Pexp_apply
                            expression (src/ppx.ml[285,9954+62]..[285,9954+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9954+62]..[285,9954+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9954+77]..[285,9954+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9954+78]..[285,9954+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[285,9954+79]..[285,9954+100]),None)
                                    expression (src/ppx.ml[285,9954+103]..[285,9954+112])
                                      Pexp_ident "extension" (src/ppx.ml[285,9954+103]..[285,9954+112])
                                    expression (src/ppx.ml[285,9954+115]..[285,9954+125])
                                      Pexp_ident "attributes" (src/ppx.ml[285,9954+115]..[285,9954+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[259,7990+39]..[259,7990+43])
              Ptyp_constr "unit" (src/ppx.ml[259,7990+39]..[259,7990+43])
              []
    ]
  structure_item (src/ppx.ml[287,10084+0]..[287,10084+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10084+4]..[287,10084+7])
          Ppat_var "foo" (src/ppx.ml[287,10084+4]..[287,10084+7])
        expression (src/ppx.ml[287,10084+10]..[287,10084+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[289,10099+0]..[297,10318+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[289,10099+4]..[289,10099+12])
          Ppat_var "printone" (src/ppx.ml[289,10099+4]..[289,10099+12])
        expression (src/ppx.ml[289,10099+13]..[297,10318+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[289,10099+13]..[289,10099+34])
            Ppat_constraint
            pattern (src/ppx.ml[289,10099+14]..[289,10099+15])
              Ppat_var "x" (src/ppx.ml[289,10099+14]..[289,10099+15])
            core_type (src/ppx.ml[289,10099+18]..[289,10099+32])
              Ptyp_constr "structure_item" (src/ppx.ml[289,10099+18]..[289,10099+32])
              []
          expression (src/ppx.ml[289,10099+35]..[297,10318+6])
            Pexp_constraint
            expression (src/ppx.ml[290,10142+2]..[297,10318+6])
              Pexp_match
              expression (src/ppx.ml[290,10142+8]..[290,10142+9])
                Pexp_ident "x" (src/ppx.ml[290,10142+8]..[290,10142+9])
              [
                <case>
                  pattern (src/ppx.ml[291,10157+3]..[294,10207+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[292,10162+4]..[292,10162+13]) ghost
                        pattern (src/ppx.ml[292,10162+4]..[292,10162+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[292,10162+4]..[292,10162+13])
                    ]
                  expression (src/ppx.ml[296,10291+4]..[297,10318+6])
                    Pexp_sequence
                    expression (src/ppx.ml[296,10291+4]..[296,10291+25])
                      Pexp_apply
                      expression (src/ppx.ml[296,10291+5]..[296,10291+14])
                        Pexp_ident "printdesc" (src/ppx.ml[296,10291+5]..[296,10291+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[296,10291+15]..[296,10291+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[296,10291+15]..[296,10291+24])
                      ]
                    expression (src/ppx.ml[297,10318+4]..[297,10318+6])
                      Pexp_construct "()" (src/ppx.ml[297,10318+4]..[297,10318+6])
                      None
              ]
            core_type (src/ppx.ml[289,10099+36]..[289,10099+40])
              Ptyp_constr "unit" (src/ppx.ml[289,10099+36]..[289,10099+40])
              []
    ]
  structure_item (src/ppx.ml[303,10438+0]..[305,10519+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[303,10438+4]..[303,10438+13])
          Ppat_var "printone2" (src/ppx.ml[303,10438+4]..[303,10438+13])
        expression (src/ppx.ml[303,10438+14]..[305,10519+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[303,10438+14]..[303,10438+15])
            Ppat_var "x" (src/ppx.ml[303,10438+14]..[303,10438+15])
          expression (src/ppx.ml[303,10438+16]..[305,10519+12])
            Pexp_constraint
            expression (src/ppx.ml[304,10462+2]..[305,10519+12])
              Pexp_sequence
              expression (src/ppx.ml[304,10462+2]..[304,10462+55])
                Pexp_apply
                expression (src/ppx.ml[304,10462+3]..[304,10462+16])
                  Pexp_ident "print_endline" (src/ppx.ml[304,10462+3]..[304,10462+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[304,10462+17]..[304,10462+54])
                      Pexp_apply
                      expression (src/ppx.ml[304,10462+18]..[304,10462+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[304,10462+18]..[304,10462+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[304,10462+33]..[304,10462+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[304,10462+34]..[304,10462+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[304,10462+35]..[304,10462+49]),None)
                              expression (src/ppx.ml[304,10462+51]..[304,10462+52])
                                Pexp_ident "x" (src/ppx.ml[304,10462+51]..[304,10462+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[305,10519+2]..[305,10519+12])
                Pexp_apply
                expression (src/ppx.ml[305,10519+2]..[305,10519+10])
                  Pexp_ident "printone" (src/ppx.ml[305,10519+2]..[305,10519+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[305,10519+11]..[305,10519+12])
                      Pexp_ident "x" (src/ppx.ml[305,10519+11]..[305,10519+12])
                ]
            core_type (src/ppx.ml[303,10438+17]..[303,10438+21])
              Ptyp_constr "unit" (src/ppx.ml[303,10438+17]..[303,10438+21])
              []
    ]
  structure_item (src/ppx.ml[307,10535+0]..[309,10566+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10535+4]..[307,10535+9])
          Ppat_var "proc1" (src/ppx.ml[307,10535+4]..[307,10535+9])
        expression (src/ppx.ml[307,10535+10]..[309,10566+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10535+10]..[307,10535+11])
            Ppat_var "x" (src/ppx.ml[307,10535+10]..[307,10535+11])
          expression (src/ppx.ml[308,10551+2]..[309,10566+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10551+2]..[308,10551+13])
              Pexp_apply
              expression (src/ppx.ml[308,10551+2]..[308,10551+11])
                Pexp_ident "printone2" (src/ppx.ml[308,10551+2]..[308,10551+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10551+12]..[308,10551+13])
                    Pexp_ident "x" (src/ppx.ml[308,10551+12]..[308,10551+13])
              ]
            expression (src/ppx.ml[309,10566+2]..[309,10566+3])
              Pexp_ident "x" (src/ppx.ml[309,10566+2]..[309,10566+3])
    ]
  structure_item (src/ppx.ml[311,10571+0]..[314,10720+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10571+4]..[311,10571+9])
          Ppat_var "debug" (src/ppx.ml[311,10571+4]..[311,10571+9])
        expression (src/ppx.ml[311,10571+10]..[314,10720+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[311,10571+10]..[311,10571+14])
            Ppat_var "proc" (src/ppx.ml[311,10571+10]..[311,10571+14])
          expression (src/ppx.ml[311,10571+15]..[314,10720+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[311,10571+15]..[311,10571+18])
              Ppat_var "lst" (src/ppx.ml[311,10571+15]..[311,10571+18])
            expression (src/ppx.ml[311,10571+19]..[314,10720+4])
              Pexp_constraint
              expression (src/ppx.ml[312,10599+2]..[314,10720+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[312,10599+6]..[312,10599+12])
                      Ppat_var "result" (src/ppx.ml[312,10599+6]..[312,10599+12])
                    expression (src/ppx.ml[312,10599+15]..[312,10599+32])
                      Pexp_apply
                      expression (src/ppx.ml[312,10599+15]..[312,10599+23])
                        Pexp_ident "List.map" (src/ppx.ml[312,10599+15]..[312,10599+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10599+24]..[312,10599+28])
                            Pexp_ident "proc" (src/ppx.ml[312,10599+24]..[312,10599+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10599+29]..[312,10599+32])
                            Pexp_ident "lst" (src/ppx.ml[312,10599+29]..[312,10599+32])
                      ]
                ]
                expression (src/ppx.ml[313,10635+2]..[314,10720+4])
                  Pexp_sequence
                  expression (src/ppx.ml[313,10635+2]..[313,10635+83])
                    Pexp_apply
                    expression (src/ppx.ml[313,10635+2]..[313,10635+11])
                      Pexp_ident "List.iter" (src/ppx.ml[313,10635+2]..[313,10635+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[313,10635+12]..[313,10635+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[313,10635+17]..[313,10635+18])
                            Ppat_var "i" (src/ppx.ml[313,10635+17]..[313,10635+18])
                          expression (src/ppx.ml[313,10635+22]..[313,10635+75])
                            Pexp_apply
                            expression (src/ppx.ml[313,10635+22]..[313,10635+35])
                              Pexp_ident "print_endline" (src/ppx.ml[313,10635+22]..[313,10635+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[313,10635+36]..[313,10635+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[313,10635+37]..[313,10635+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[313,10635+37]..[313,10635+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[313,10635+52]..[313,10635+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[313,10635+53]..[313,10635+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[313,10635+54]..[313,10635+69]),None)
                                          expression (src/ppx.ml[313,10635+72]..[313,10635+73])
                                            Pexp_ident "i" (src/ppx.ml[313,10635+72]..[313,10635+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[313,10635+77]..[313,10635+83])
                          Pexp_ident "result" (src/ppx.ml[313,10635+77]..[313,10635+83])
                    ]
                  expression (src/ppx.ml[314,10720+2]..[314,10720+4])
                    Pexp_construct "()" (src/ppx.ml[314,10720+2]..[314,10720+4])
                    None
              core_type (src/ppx.ml[311,10571+21]..[311,10571+25])
                Ptyp_constr "unit" (src/ppx.ml[311,10571+21]..[311,10571+25])
                []
    ]
  structure_item (src/ppx.ml[316,10742+0]..[319,10866+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[316,10742+4]..[316,10742+13])
          Ppat_var "transform" (src/ppx.ml[316,10742+4]..[316,10742+13])
        expression (src/ppx.ml[316,10742+14]..[319,10866+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[316,10742+14]..[316,10742+15])
            Ppat_var "x" (src/ppx.ml[316,10742+14]..[316,10742+15])
          expression (src/ppx.ml[317,10797+2]..[319,10866+3])
            Pexp_sequence
            expression (src/ppx.ml[317,10797+2]..[317,10797+48])
              Pexp_apply
              expression (src/ppx.ml[317,10797+3]..[317,10797+16])
                Pexp_ident "print_endline" (src/ppx.ml[317,10797+3]..[317,10797+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[317,10797+17]..[317,10797+47])
                    Pexp_apply
                    expression (src/ppx.ml[317,10797+18]..[317,10797+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[317,10797+18]..[317,10797+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[317,10797+33]..[317,10797+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[317,10797+34]..[317,10797+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[317,10797+35]..[317,10797+42]),None)
                            expression (src/ppx.ml[317,10797+44]..[317,10797+45])
                              Pexp_ident "x" (src/ppx.ml[317,10797+44]..[317,10797+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[318,10847+2]..[319,10866+3])
              Pexp_sequence
              expression (src/ppx.ml[318,10847+2]..[318,10847+17])
                Pexp_apply
                expression (src/ppx.ml[318,10847+3]..[318,10847+8])
                  Pexp_ident "debug" (src/ppx.ml[318,10847+3]..[318,10847+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[318,10847+9]..[318,10847+14])
                      Pexp_ident "proc1" (src/ppx.ml[318,10847+9]..[318,10847+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[318,10847+15]..[318,10847+16])
                      Pexp_ident "x" (src/ppx.ml[318,10847+15]..[318,10847+16])
                ]
              expression (src/ppx.ml[319,10866+2]..[319,10866+3])
                Pexp_ident "x" (src/ppx.ml[319,10866+2]..[319,10866+3])
    ]
  structure_item (src/ppx.ml[321,10873+1]..[321,10873+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[321,10873+5]..[321,10873+7])
          Ppat_construct "()" (src/ppx.ml[321,10873+5]..[321,10873+7])
          None
        expression (src/ppx.ml[321,10873+10]..[321,10873+69])
          Pexp_apply
          expression (src/ppx.ml[321,10873+10]..[321,10873+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[321,10873+10]..[321,10873+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[321,10873+47]..[321,10873+56])
                Pexp_ident "transform" (src/ppx.ml[321,10873+47]..[321,10873+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[321,10873+57]..[321,10873+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[321,10873+58]..[321,10873+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with | { txt;_} -> (match txt with | txt2 -> txt2)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%s" id2;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

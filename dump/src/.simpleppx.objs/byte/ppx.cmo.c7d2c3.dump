[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[73,1962+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[73,1962+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[73,1962+19])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[73,1962+19])
                  Pexp_match
                  expression (src/ppx.ml[72,1943+10]..[72,1943+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1943+10]..[72,1943+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1962+4]..[73,1962+12])
                        Ppat_var "txt2" (src/ppx.ml[73,1962+6]..[73,1962+10])
                      expression (src/ppx.ml[73,1962+15]..[73,1962+19])
                        Pexp_ident "txt2" (src/ppx.ml[73,1962+15]..[73,1962+19])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[77,2063+0]..[165,5018+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2063+8]..[77,2063+27])
          Ppat_var "process_record_kind" (src/ppx.ml[77,2063+8]..[77,2063+27])
        expression (src/ppx.ml[77,2063+27]..[91,2547+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[77,2063+27]..[77,2063+30])
            Ppat_var "x" (src/ppx.ml[77,2063+28]..[77,2063+29])
          expression (src/ppx.ml[78,2096+2]..[91,2547+47])
            Pexp_match
            expression (src/ppx.ml[78,2096+8]..[78,2096+9])
              Pexp_ident "x" (src/ppx.ml[78,2096+8]..[78,2096+9])
            [
              <case>
                pattern (src/ppx.ml[79,2111+4]..[85,2292+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13]) ghost
                      pattern (src/ppx.ml[80,2117+5]..[80,2117+13])
                        Ppat_var "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13])
                    "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16]) ghost
                      pattern (src/ppx.ml[81,2150+5]..[81,2150+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16])
                    "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13]) ghost
                      pattern (src/ppx.ml[82,2188+5]..[82,2188+13])
                        Ppat_var "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13])
                    "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12]) ghost
                      pattern (src/ppx.ml[83,2220+5]..[83,2220+12])
                        Ppat_var "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12])
                    "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19]) ghost
                      pattern (src/ppx.ml[84,2252+5]..[84,2252+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19])
                  ]
                expression (src/ppx.ml[86,2300+4]..[91,2547+47])
                  Pexp_apply
                  expression (src/ppx.ml[86,2300+5]..[86,2300+18])
                    Pexp_ident "print_endline" (src/ppx.ml[86,2300+5]..[86,2300+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[86,2300+19]..[91,2547+46])
                        Pexp_apply
                        expression (src/ppx.ml[86,2300+20]..[86,2300+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[86,2300+20]..[86,2300+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[86,2300+35]..[91,2547+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[86,2300+36]..[86,2300+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[86,2300+37]..[86,2300+56]),None)
                                expression (src/ppx.ml[87,2361+36]..[87,2361+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[87,2361+36]..[87,2361+44])
                                expression (src/ppx.ml[88,2407+36]..[88,2407+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[88,2407+37]..[88,2407+44]),None)
                                expression (src/ppx.ml[89,2454+36]..[89,2454+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[89,2454+36]..[89,2454+47])
                                expression (src/ppx.ml[90,2503+36]..[90,2503+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[90,2503+37]..[90,2503+41]),None)
                                expression (src/ppx.ml[91,2547+36]..[91,2547+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[91,2547+36]..[91,2547+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[93,2599+0]..[93,2599+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[93,2599+0]..[93,2599+22])
        expression (src/ppx.ml[93,2599+23]..[139,4336+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[93,2599+23]..[93,2599+24])
            Ppat_var "x" (src/ppx.ml[93,2599+23]..[93,2599+24])
          expression (src/ppx.ml[94,2626+2]..[139,4336+65])
            Pexp_match
            expression (src/ppx.ml[94,2626+8]..[94,2626+9])
              Pexp_ident "x" (src/ppx.ml[94,2626+8]..[94,2626+9])
            [
              <case>
                pattern (src/ppx.ml[95,2641+4]..[95,2641+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[95,2641+4]..[95,2641+15])
                  Some
                    []
                    pattern (src/ppx.ml[95,2641+16]..[95,2641+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[95,2641+17]..[95,2641+18])
                          Ppat_var "a" (src/ppx.ml[95,2641+17]..[95,2641+18])
                        pattern (src/ppx.ml[95,2641+19]..[95,2641+20])
                          Ppat_var "b" (src/ppx.ml[95,2641+19]..[95,2641+20])
                      ]
                expression (src/ppx.ml[97,2712+4]..[106,2953+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[97,2712+8]..[97,2712+12])
                        Ppat_var "myid" (src/ppx.ml[97,2712+8]..[97,2712+12])
                      expression (src/ppx.ml[97,2712+15]..[97,2712+29])
                        Pexp_apply
                        expression (src/ppx.ml[97,2712+16]..[97,2712+26])
                          Pexp_ident "process_id" (src/ppx.ml[97,2712+16]..[97,2712+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[97,2712+27]..[97,2712+28])
                              Pexp_ident "a" (src/ppx.ml[97,2712+27]..[97,2712+28])
                        ]
                  ]
                  expression (src/ppx.ml[98,2745+4]..[106,2953+22])
                    Pexp_sequence
                    expression (src/ppx.ml[98,2745+4]..[98,2745+30])
                      Pexp_apply
                      expression (src/ppx.ml[98,2745+5]..[98,2745+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[98,2745+5]..[98,2745+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[98,2745+28]..[98,2745+29])
                            Pexp_ident "b" (src/ppx.ml[98,2745+28]..[98,2745+29])
                      ]
                    expression (src/ppx.ml[100,2778+4]..[106,2953+22])
                      Pexp_sequence
                      expression (src/ppx.ml[100,2778+4]..[100,2778+44])
                        Pexp_apply
                        expression (src/ppx.ml[100,2778+4]..[100,2778+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[100,2778+4]..[100,2778+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,2778+18]..[100,2778+40])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%",(src/ppx.ml[100,2778+19]..[100,2778+39]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,2778+41]..[100,2778+44])
                              Pexp_ident "id2" (src/ppx.ml[100,2778+41]..[100,2778+44])
                        ]
                      expression (src/ppx.ml[103,2863+4]..[106,2953+22])
                        Pexp_apply
                        expression (src/ppx.ml[103,2863+5]..[103,2863+18])
                          Pexp_ident "print_endline" (src/ppx.ml[103,2863+5]..[103,2863+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,2863+19]..[106,2953+21])
                              Pexp_apply
                              expression (src/ppx.ml[103,2863+20]..[103,2863+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[103,2863+20]..[103,2863+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[103,2863+35]..[106,2953+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[104,2900+9]..[104,2900+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[104,2900+10]..[104,2900+28]),None)
                                      expression (src/ppx.ml[105,2931+9]..[105,2931+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[105,2931+10]..[105,2931+12]),None)
                                      expression (src/ppx.ml[105,2931+14]..[105,2931+15])
                                        Pexp_ident "a" (src/ppx.ml[105,2931+14]..[105,2931+15])
                                      expression (src/ppx.ml[105,2931+16]..[105,2931+20])
                                        Pexp_ident "myid" (src/ppx.ml[105,2931+16]..[105,2931+20])
                                      expression (src/ppx.ml[106,2953+9]..[106,2953+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[106,2953+10]..[106,2953+15]),None)
                                      expression (src/ppx.ml[106,2953+17]..[106,2953+18])
                                        Pexp_ident "b" (src/ppx.ml[106,2953+17]..[106,2953+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[108,2977+4]..[108,2977+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[108,2977+4]..[108,2977+14])
                  Some
                    []
                    pattern (src/ppx.ml[108,2977+15]..[108,2977+16])
                      Ppat_var "a" (src/ppx.ml[108,2977+15]..[108,2977+16])
                expression (src/ppx.ml[110,3025+4]..[110,3025+59])
                  Pexp_apply
                  expression (src/ppx.ml[110,3025+5]..[110,3025+18])
                    Pexp_ident "print_endline" (src/ppx.ml[110,3025+5]..[110,3025+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[110,3025+19]..[110,3025+58])
                        Pexp_apply
                        expression (src/ppx.ml[110,3025+20]..[110,3025+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[110,3025+20]..[110,3025+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[110,3025+35]..[110,3025+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[110,3025+37]..[110,3025+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3104+4]..[113,3104+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[113,3104+4]..[113,3104+12])
                  None
                expression (src/ppx.ml[113,3104+17]..[113,3104+69])
                  Pexp_apply
                  expression (src/ppx.ml[113,3104+18]..[113,3104+31])
                    Pexp_ident "print_endline" (src/ppx.ml[113,3104+18]..[113,3104+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[113,3104+32]..[113,3104+68])
                        Pexp_apply
                        expression (src/ppx.ml[113,3104+33]..[113,3104+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[113,3104+33]..[113,3104+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[113,3104+48]..[113,3104+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[113,3104+50]..[113,3104+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3174+4]..[114,3174+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[114,3174+4]..[114,3174+12])
                  Some
                    []
                    pattern (src/ppx.ml[114,3174+13]..[114,3174+17])
                      Ppat_var "name" (src/ppx.ml[114,3174+13]..[114,3174+17])
                expression (src/ppx.ml[114,3174+20]..[114,3174+80])
                  Pexp_apply
                  expression (src/ppx.ml[114,3174+21]..[114,3174+34])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3174+21]..[114,3174+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3174+35]..[114,3174+79])
                        Pexp_apply
                        expression (src/ppx.ml[114,3174+36]..[114,3174+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3174+36]..[114,3174+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3174+51]..[114,3174+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[114,3174+52]..[114,3174+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[114,3174+53]..[114,3174+68]),None)
                                expression (src/ppx.ml[114,3174+73]..[114,3174+77])
                                  Pexp_ident "name" (src/ppx.ml[114,3174+73]..[114,3174+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3255+4]..[115,3255+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[115,3255+4]..[115,3255+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3255+15]..[115,3255+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3255+16]..[115,3255+25])
                          Ppat_var "arg_label" (src/ppx.ml[115,3255+16]..[115,3255+25])
                        pattern (src/ppx.ml[115,3255+28]..[115,3255+37])
                          Ppat_var "core_type" (src/ppx.ml[115,3255+28]..[115,3255+37])
                        pattern (src/ppx.ml[115,3255+40]..[115,3255+50])
                          Ppat_var "core_type2" (src/ppx.ml[115,3255+40]..[115,3255+50])
                      ]
                expression (src/ppx.ml[116,3310+4]..[116,3310+61])
                  Pexp_apply
                  expression (src/ppx.ml[116,3310+5]..[116,3310+18])
                    Pexp_ident "print_endline" (src/ppx.ml[116,3310+5]..[116,3310+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[116,3310+19]..[116,3310+60])
                        Pexp_apply
                        expression (src/ppx.ml[116,3310+20]..[116,3310+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[116,3310+20]..[116,3310+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[116,3310+35]..[116,3310+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[116,3310+37]..[116,3310+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3373+4]..[118,3373+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[118,3373+4]..[118,3373+15])
                  Some
                    []
                    pattern (src/ppx.ml[118,3373+16]..[118,3373+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3373+17]..[118,3373+18])
                          Ppat_var "a" (src/ppx.ml[118,3373+17]..[118,3373+18])
                        pattern (src/ppx.ml[118,3373+19]..[118,3373+20])
                          Ppat_var "b" (src/ppx.ml[118,3373+19]..[118,3373+20])
                      ]
                expression (src/ppx.ml[120,3442+4]..[120,3442+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3442+5]..[120,3442+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3442+5]..[120,3442+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3442+19]..[120,3442+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3442+20]..[120,3442+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3442+20]..[120,3442+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3442+35]..[120,3442+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[120,3442+37]..[120,3442+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3503+4]..[121,3503+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[121,3503+4]..[121,3503+14])
                  Some
                    []
                    pattern (src/ppx.ml[121,3503+15]..[121,3503+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3503+16]..[121,3503+17])
                          Ppat_var "a" (src/ppx.ml[121,3503+16]..[121,3503+17])
                        pattern (src/ppx.ml[121,3503+18]..[121,3503+19])
                          Ppat_var "b" (src/ppx.ml[121,3503+18]..[121,3503+19])
                      ]
                expression (src/ppx.ml[123,3573+4]..[123,3573+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3573+5]..[123,3573+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3573+5]..[123,3573+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3573+19]..[123,3573+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3573+20]..[123,3573+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3573+20]..[123,3573+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3573+35]..[123,3573+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[123,3573+37]..[123,3573+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3634+4]..[124,3634+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[124,3634+4]..[124,3634+14])
                  Some
                    []
                    pattern (src/ppx.ml[124,3634+15]..[124,3634+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[124,3634+16]..[124,3634+17])
                          Ppat_var "a" (src/ppx.ml[124,3634+16]..[124,3634+17])
                        pattern (src/ppx.ml[124,3634+18]..[124,3634+19])
                          Ppat_var "b" (src/ppx.ml[124,3634+18]..[124,3634+19])
                      ]
                expression (src/ppx.ml[126,3695+4]..[126,3695+60])
                  Pexp_apply
                  expression (src/ppx.ml[126,3695+5]..[126,3695+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3695+5]..[126,3695+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3695+19]..[126,3695+59])
                        Pexp_apply
                        expression (src/ppx.ml[126,3695+20]..[126,3695+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3695+20]..[126,3695+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3695+35]..[126,3695+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[126,3695+37]..[126,3695+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[127,3756+4]..[127,3756+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[127,3756+4]..[127,3756+16])
                  Some
                    []
                    pattern (src/ppx.ml[127,3756+17]..[127,3756+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[127,3756+18]..[127,3756+19])
                          Ppat_var "a" (src/ppx.ml[127,3756+18]..[127,3756+19])
                        pattern (src/ppx.ml[127,3756+20]..[127,3756+21])
                          Ppat_var "b" (src/ppx.ml[127,3756+20]..[127,3756+21])
                        pattern (src/ppx.ml[127,3756+22]..[127,3756+23])
                          Ppat_var "c" (src/ppx.ml[127,3756+22]..[127,3756+23])
                      ]
                expression (src/ppx.ml[129,3846+4]..[129,3846+60])
                  Pexp_apply
                  expression (src/ppx.ml[129,3846+5]..[129,3846+18])
                    Pexp_ident "print_endline" (src/ppx.ml[129,3846+5]..[129,3846+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[129,3846+19]..[129,3846+59])
                        Pexp_apply
                        expression (src/ppx.ml[129,3846+20]..[129,3846+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[129,3846+20]..[129,3846+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[129,3846+35]..[129,3846+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[129,3846+37]..[129,3846+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[130,3907+4]..[130,3907+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[130,3907+4]..[130,3907+13])
                  Some
                    []
                    pattern (src/ppx.ml[130,3907+14]..[130,3907+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[130,3907+15]..[130,3907+16])
                          Ppat_var "a" (src/ppx.ml[130,3907+15]..[130,3907+16])
                        pattern (src/ppx.ml[130,3907+17]..[130,3907+18])
                          Ppat_var "b" (src/ppx.ml[130,3907+17]..[130,3907+18])
                      ]
                expression (src/ppx.ml[132,3971+4]..[132,3971+60])
                  Pexp_apply
                  expression (src/ppx.ml[132,3971+5]..[132,3971+18])
                    Pexp_ident "print_endline" (src/ppx.ml[132,3971+5]..[132,3971+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[132,3971+19]..[132,3971+59])
                        Pexp_apply
                        expression (src/ppx.ml[132,3971+20]..[132,3971+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[132,3971+20]..[132,3971+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[132,3971+35]..[132,3971+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[132,3971+37]..[132,3971+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[133,4032+4]..[133,4032+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[133,4032+4]..[133,4032+16])
                  Some
                    []
                    pattern (src/ppx.ml[133,4032+17]..[133,4032+18])
                      Ppat_var "a" (src/ppx.ml[133,4032+17]..[133,4032+18])
                expression (src/ppx.ml[135,4080+4]..[135,4080+62])
                  Pexp_apply
                  expression (src/ppx.ml[135,4080+5]..[135,4080+18])
                    Pexp_ident "print_endline" (src/ppx.ml[135,4080+5]..[135,4080+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[135,4080+19]..[135,4080+61])
                        Pexp_apply
                        expression (src/ppx.ml[135,4080+20]..[135,4080+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[135,4080+20]..[135,4080+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[135,4080+35]..[135,4080+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[135,4080+36]..[135,4080+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[135,4080+37]..[135,4080+55]),None)
                                expression (src/ppx.ml[135,4080+57]..[135,4080+58])
                                  Pexp_ident "a" (src/ppx.ml[135,4080+57]..[135,4080+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[138,4288+4]..[138,4288+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[138,4288+4]..[138,4288+18])
                  Some
                    []
                    pattern (src/ppx.ml[138,4288+19]..[138,4288+20])
                      Ppat_var "a" (src/ppx.ml[138,4288+19]..[138,4288+20])
                expression (src/ppx.ml[139,4336+4]..[139,4336+65])
                  Pexp_apply
                  expression (src/ppx.ml[139,4336+5]..[139,4336+18])
                    Pexp_ident "print_endline" (src/ppx.ml[139,4336+5]..[139,4336+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[139,4336+19]..[139,4336+64])
                        Pexp_apply
                        expression (src/ppx.ml[139,4336+20]..[139,4336+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[139,4336+20]..[139,4336+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[139,4336+35]..[139,4336+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[139,4336+36]..[139,4336+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[139,4336+37]..[139,4336+58]),None)
                                expression (src/ppx.ml[139,4336+60]..[139,4336+61])
                                  Pexp_ident "a" (src/ppx.ml[139,4336+60]..[139,4336+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[141,4406+2]..[141,4406+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[141,4406+2]..[141,4406+26])
        expression (src/ppx.ml[141,4406+26]..[147,4543+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[141,4406+26]..[141,4406+29])
            Ppat_var "x" (src/ppx.ml[141,4406+27]..[141,4406+28])
          expression (src/ppx.ml[142,4438+2]..[147,4543+6])
            Pexp_match
            expression (src/ppx.ml[142,4438+8]..[142,4438+9])
              Pexp_ident "x" (src/ppx.ml[142,4438+8]..[142,4438+9])
            [
              <case>
                pattern (src/ppx.ml[143,4453+4]..[143,4453+6])
                  Ppat_construct "[]" (src/ppx.ml[143,4453+4]..[143,4453+6])
                  None
                expression (src/ppx.ml[143,4453+10]..[143,4453+12])
                  Pexp_construct "()" (src/ppx.ml[143,4453+10]..[143,4453+12])
                  None
              <case>
                pattern (src/ppx.ml[144,4466+4]..[144,4466+10])
                  Ppat_construct "::" (src/ppx.ml[144,4466+6]..[144,4466+8])
                  Some
                    []
                    pattern (src/ppx.ml[144,4466+4]..[144,4466+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[144,4466+4]..[144,4466+5])
                          Ppat_var "h" (src/ppx.ml[144,4466+4]..[144,4466+5])
                        pattern (src/ppx.ml[144,4466+9]..[144,4466+10])
                          Ppat_var "t" (src/ppx.ml[144,4466+9]..[144,4466+10])
                      ]
                expression (src/ppx.ml[145,4480+4]..[147,4543+6])
                  Pexp_sequence
                  expression (src/ppx.ml[145,4480+4]..[145,4480+27])
                    Pexp_apply
                    expression (src/ppx.ml[145,4480+5]..[145,4480+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[145,4480+5]..[145,4480+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[145,4480+25]..[145,4480+26])
                          Pexp_ident "h" (src/ppx.ml[145,4480+25]..[145,4480+26])
                    ]
                  expression (src/ppx.ml[146,4509+4]..[147,4543+6])
                    Pexp_sequence
                    expression (src/ppx.ml[146,4509+4]..[146,4509+32])
                      Pexp_apply
                      expression (src/ppx.ml[146,4509+5]..[146,4509+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[146,4509+5]..[146,4509+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[146,4509+30]..[146,4509+31])
                            Pexp_ident "t" (src/ppx.ml[146,4509+30]..[146,4509+31])
                      ]
                    expression (src/ppx.ml[147,4543+4]..[147,4543+6])
                      Pexp_construct "()" (src/ppx.ml[147,4543+4]..[147,4543+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[149,4554+0]..[149,4554+17])
          Ppat_var "process_core_type" (src/ppx.ml[149,4554+0]..[149,4554+17])
        expression (src/ppx.ml[149,4554+17]..[159,4821+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[149,4554+17]..[149,4554+20])
            Ppat_var "x" (src/ppx.ml[149,4554+18]..[149,4554+19])
          expression (src/ppx.ml[150,4577+2]..[159,4821+80])
            Pexp_match
            expression (src/ppx.ml[150,4577+8]..[150,4577+9])
              Pexp_ident "x" (src/ppx.ml[150,4577+8]..[150,4577+9])
            [
              <case>
                pattern (src/ppx.ml[151,4593+4]..[156,4754+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[152,4599+6]..[152,4599+15]) ghost
                      pattern (src/ppx.ml[152,4599+6]..[152,4599+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[152,4599+6]..[152,4599+15])
                    "ptyp_loc" (src/ppx.ml[153,4638+5]..[153,4638+13]) ghost
                      pattern (src/ppx.ml[153,4638+5]..[153,4638+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[153,4638+5]..[153,4638+13])
                    "ptyp_loc_stack" (src/ppx.ml[154,4671+5]..[154,4671+19]) ghost
                      pattern (src/ppx.ml[154,4671+5]..[154,4671+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[154,4671+5]..[154,4671+19])
                    "ptyp_attributes" (src/ppx.ml[155,4714+5]..[155,4714+20]) ghost
                      pattern (src/ppx.ml[155,4714+5]..[155,4714+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[155,4714+5]..[155,4714+20])
                  ]
                expression (src/ppx.ml[157,4762+4]..[159,4821+80])
                  Pexp_sequence
                  expression (src/ppx.ml[157,4762+4]..[157,4762+38])
                    Pexp_apply
                    expression (src/ppx.ml[157,4762+5]..[157,4762+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[157,4762+5]..[157,4762+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[157,4762+28]..[157,4762+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[157,4762+28]..[157,4762+37])
                    ]
                  expression (src/ppx.ml[159,4821+4]..[159,4821+80])
                    Pexp_apply
                    expression (src/ppx.ml[159,4821+5]..[159,4821+18])
                      Pexp_ident "print_endline" (src/ppx.ml[159,4821+5]..[159,4821+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[159,4821+19]..[159,4821+79])
                          Pexp_apply
                          expression (src/ppx.ml[159,4821+20]..[159,4821+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[159,4821+20]..[159,4821+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[159,4821+35]..[159,4821+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[159,4821+36]..[159,4821+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[159,4821+37]..[159,4821+63]),None)
                                  expression (src/ppx.ml[159,4821+68]..[159,4821+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[159,4821+68]..[159,4821+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[160,4902+4]..[160,4902+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[160,4902+4]..[160,4902+26])
        expression (src/ppx.ml[160,4902+26]..[165,5018+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[160,4902+26]..[160,4902+44])
            Ppat_constraint
            pattern (src/ppx.ml[160,4902+27]..[160,4902+28])
              Ppat_var "x" (src/ppx.ml[160,4902+27]..[160,4902+28])
            core_type (src/ppx.ml[160,4902+29]..[160,4902+43])
              Ptyp_constr "list" (src/ppx.ml[160,4902+39]..[160,4902+43])
              [
                core_type (src/ppx.ml[160,4902+29]..[160,4902+38])
                  Ptyp_constr "core_type" (src/ppx.ml[160,4902+29]..[160,4902+38])
                  []
              ]
          expression (src/ppx.ml[161,4949+2]..[165,5018+29])
            Pexp_match
            expression (src/ppx.ml[161,4949+8]..[161,4949+9])
              Pexp_ident "x" (src/ppx.ml[161,4949+8]..[161,4949+9])
            [
              <case>
                pattern (src/ppx.ml[162,4964+4]..[162,4964+6])
                  Ppat_construct "[]" (src/ppx.ml[162,4964+4]..[162,4964+6])
                  None
                expression (src/ppx.ml[162,4964+10]..[162,4964+12])
                  Pexp_construct "()" (src/ppx.ml[162,4964+10]..[162,4964+12])
                  None
              <case>
                pattern (src/ppx.ml[163,4977+4]..[163,4977+10])
                  Ppat_construct "::" (src/ppx.ml[163,4977+6]..[163,4977+8])
                  Some
                    []
                    pattern (src/ppx.ml[163,4977+4]..[163,4977+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[163,4977+4]..[163,4977+5])
                          Ppat_var "h" (src/ppx.ml[163,4977+4]..[163,4977+5])
                        pattern (src/ppx.ml[163,4977+9]..[163,4977+10])
                          Ppat_var "t" (src/ppx.ml[163,4977+9]..[163,4977+10])
                      ]
                expression (src/ppx.ml[164,4991+4]..[165,5018+29])
                  Pexp_sequence
                  expression (src/ppx.ml[164,4991+4]..[164,4991+25])
                    Pexp_apply
                    expression (src/ppx.ml[164,4991+4]..[164,4991+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[164,4991+4]..[164,4991+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[164,4991+22]..[164,4991+25])
                          Pexp_ident "h" (src/ppx.ml[164,4991+23]..[164,4991+24])
                    ]
                  expression (src/ppx.ml[165,5018+4]..[165,5018+29])
                    Pexp_apply
                    expression (src/ppx.ml[165,5018+4]..[165,5018+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[165,5018+4]..[165,5018+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,5018+26]..[165,5018+29])
                          Pexp_ident "t" (src/ppx.ml[165,5018+27]..[165,5018+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[172,5062+0]..[179,5261+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[172,5062+4]..[172,5062+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[172,5062+4]..[172,5062+31])
        expression (src/ppx.ml[172,5062+31]..[179,5261+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5062+31]..[172,5062+34])
            Ppat_var "x" (src/ppx.ml[172,5062+32]..[172,5062+33])
          expression (src/ppx.ml[173,5099+2]..[179,5261+65])
            Pexp_match
            expression (src/ppx.ml[173,5099+8]..[173,5099+9])
              Pexp_ident "x" (src/ppx.ml[173,5099+8]..[173,5099+9])
            [
              <case>
                pattern (src/ppx.ml[174,5114+4]..[174,5114+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[174,5114+4]..[174,5114+15])
                  Some
                    []
                    pattern (src/ppx.ml[174,5114+16]..[174,5114+17])
                      Ppat_var "a" (src/ppx.ml[174,5114+16]..[174,5114+17])
                expression (src/ppx.ml[175,5135+4]..[176,5167+64])
                  Pexp_sequence
                  expression (src/ppx.ml[175,5135+4]..[175,5135+30])
                    Pexp_apply
                    expression (src/ppx.ml[175,5135+5]..[175,5135+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[175,5135+5]..[175,5135+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[175,5135+28]..[175,5135+29])
                          Pexp_ident "a" (src/ppx.ml[175,5135+28]..[175,5135+29])
                    ]
                  expression (src/ppx.ml[176,5167+4]..[176,5167+64])
                    Pexp_apply
                    expression (src/ppx.ml[176,5167+5]..[176,5167+18])
                      Pexp_ident "print_endline" (src/ppx.ml[176,5167+5]..[176,5167+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[176,5167+19]..[176,5167+63])
                          Pexp_apply
                          expression (src/ppx.ml[176,5167+20]..[176,5167+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[176,5167+20]..[176,5167+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[176,5167+35]..[176,5167+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[176,5167+36]..[176,5167+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[176,5167+37]..[176,5167+55]),None)
                                  expression (src/ppx.ml[176,5167+60]..[176,5167+61])
                                    Pexp_ident "a" (src/ppx.ml[176,5167+60]..[176,5167+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[178,5239+4]..[178,5239+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[178,5239+4]..[178,5239+16])
                  Some
                    []
                    pattern (src/ppx.ml[178,5239+17]..[178,5239+18])
                      Ppat_var "a" (src/ppx.ml[178,5239+17]..[178,5239+18])
                expression (src/ppx.ml[179,5261+4]..[179,5261+65])
                  Pexp_apply
                  expression (src/ppx.ml[179,5261+5]..[179,5261+18])
                    Pexp_ident "print_endline" (src/ppx.ml[179,5261+5]..[179,5261+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[179,5261+19]..[179,5261+64])
                        Pexp_apply
                        expression (src/ppx.ml[179,5261+20]..[179,5261+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[179,5261+20]..[179,5261+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[179,5261+35]..[179,5261+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[179,5261+36]..[179,5261+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[179,5261+37]..[179,5261+56]),None)
                                expression (src/ppx.ml[179,5261+61]..[179,5261+62])
                                  Pexp_ident "a" (src/ppx.ml[179,5261+61]..[179,5261+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[181,5328+0]..[213,6304+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[181,5328+8]..[181,5328+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[181,5328+8]..[181,5328+57])
        expression (src/ppx.ml[181,5328+57]..[213,6304+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[181,5328+57]..[181,5328+60])
            Ppat_var "x" (src/ppx.ml[181,5328+58]..[181,5328+59])
          expression (src/ppx.ml[182,5391+2]..[213,6304+8])
            Pexp_match
            expression (src/ppx.ml[182,5391+8]..[182,5391+9])
              Pexp_ident "x" (src/ppx.ml[182,5391+8]..[182,5391+9])
            [
              <case>
                pattern (src/ppx.ml[183,5406+4]..[183,5406+6])
                  Ppat_construct "[]" (src/ppx.ml[183,5406+4]..[183,5406+6])
                  None
                expression (src/ppx.ml[183,5406+10]..[183,5406+12])
                  Pexp_construct "()" (src/ppx.ml[183,5406+10]..[183,5406+12])
                  None
              <case>
                pattern (src/ppx.ml[184,5419+4]..[184,5419+10])
                  Ppat_construct "::" (src/ppx.ml[184,5419+6]..[184,5419+8])
                  Some
                    []
                    pattern (src/ppx.ml[184,5419+4]..[184,5419+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[184,5419+4]..[184,5419+5])
                          Ppat_var "h" (src/ppx.ml[184,5419+4]..[184,5419+5])
                        pattern (src/ppx.ml[184,5419+9]..[184,5419+10])
                          Ppat_var "t" (src/ppx.ml[184,5419+9]..[184,5419+10])
                      ]
                expression (src/ppx.ml[186,5498+4]..[213,6304+8])
                  Pexp_match
                  expression (src/ppx.ml[186,5498+10]..[186,5498+11])
                    Pexp_ident "h" (src/ppx.ml[186,5498+10]..[186,5498+11])
                  [
                    <case>
                      pattern (src/ppx.ml[187,5515+5]..[194,5753+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[188,5522+6]..[188,5522+14]) ghost
                            pattern (src/ppx.ml[188,5522+6]..[188,5522+14])
                              Ppat_var "pcd_name" (src/ppx.ml[188,5522+6]..[188,5522+14])
                          "pcd_vars" (src/ppx.ml[189,5556+6]..[189,5556+14]) ghost
                            pattern (src/ppx.ml[189,5556+6]..[189,5556+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[189,5556+6]..[189,5556+14])
                          "pcd_args" (src/ppx.ml[190,5595+6]..[190,5595+14]) ghost
                            pattern (src/ppx.ml[190,5595+6]..[190,5595+14])
                              Ppat_var "pcd_args" (src/ppx.ml[190,5595+6]..[190,5595+14])
                          "pcd_res" (src/ppx.ml[191,5640+6]..[191,5640+13]) ghost
                            pattern (src/ppx.ml[191,5640+6]..[191,5640+13])
                              Ppat_var "pcd_res" (src/ppx.ml[191,5640+6]..[191,5640+13])
                          "pcd_loc" (src/ppx.ml[192,5679+6]..[192,5679+13]) ghost
                            pattern (src/ppx.ml[192,5679+6]..[192,5679+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[192,5679+6]..[192,5679+13])
                          "pcd_attributes" (src/ppx.ml[193,5712+6]..[193,5712+20]) ghost
                            pattern (src/ppx.ml[193,5712+6]..[193,5712+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[193,5712+6]..[193,5712+20])
                        ]
                      expression (src/ppx.ml[197,5835+6]..[213,6304+8])
                        Pexp_sequence
                        expression (src/ppx.ml[197,5835+6]..[197,5835+43])
                          Pexp_apply
                          expression (src/ppx.ml[197,5835+6]..[197,5835+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[197,5835+6]..[197,5835+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[197,5835+33]..[197,5835+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[197,5835+34]..[197,5835+42])
                          ]
                        expression (src/ppx.ml[198,5880+6]..[213,6304+8])
                          Pexp_sequence
                          expression (src/ppx.ml[198,5880+6]..[211,6225+16])
                            Pexp_apply
                            expression (src/ppx.ml[198,5880+7]..[198,5880+20])
                              Pexp_ident "print_endline" (src/ppx.ml[198,5880+7]..[198,5880+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[198,5880+21]..[211,6225+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[198,5880+22]..[198,5880+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[198,5880+22]..[198,5880+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[198,5880+37]..[211,6225+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[199,5919+11]..[199,5919+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[199,5919+12]..[199,5919+36]),None)
                                          expression (src/ppx.ml[200,5958+15]..[200,5958+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[200,5958+15]..[200,5958+23])
                                          expression (src/ppx.ml[201,5983+15]..[201,5983+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[201,5983+16]..[201,5983+20]),None)
                                          expression (src/ppx.ml[202,6006+15]..[202,6006+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[202,6006+15]..[202,6006+23])
                                          expression (src/ppx.ml[203,6031+15]..[203,6031+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[203,6031+16]..[203,6031+20]),None)
                                          expression (src/ppx.ml[204,6054+15]..[204,6054+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[204,6054+15]..[204,6054+23])
                                          expression (src/ppx.ml[205,6079+15]..[205,6079+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[205,6079+16]..[205,6079+19]),None)
                                          expression (src/ppx.ml[206,6101+15]..[206,6101+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[206,6101+15]..[206,6101+22])
                                          expression (src/ppx.ml[207,6125+15]..[207,6125+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[207,6125+16]..[207,6125+19]),None)
                                          expression (src/ppx.ml[208,6147+15]..[208,6147+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[208,6147+15]..[208,6147+22])
                                          expression (src/ppx.ml[209,6171+15]..[209,6171+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[209,6171+16]..[209,6171+21]),None)
                                          expression (src/ppx.ml[210,6195+15]..[210,6195+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[210,6195+15]..[210,6195+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[212,6243+6]..[213,6304+8])
                            Pexp_sequence
                            expression (src/ppx.ml[212,6243+6]..[212,6243+59])
                              Pexp_apply
                              expression (src/ppx.ml[212,6243+7]..[212,6243+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[212,6243+7]..[212,6243+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[212,6243+57]..[212,6243+58])
                                    Pexp_ident "t" (src/ppx.ml[212,6243+57]..[212,6243+58])
                              ]
                            expression (src/ppx.ml[213,6304+6]..[213,6304+8])
                              Pexp_construct "()" (src/ppx.ml[213,6304+6]..[213,6304+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[215,6316+0]..[226,6713+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[215,6316+4]..[215,6316+16])
          Ppat_var "process_kind" (src/ppx.ml[215,6316+4]..[215,6316+16])
        expression (src/ppx.ml[215,6316+16]..[226,6713+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[215,6316+16]..[215,6316+19])
            Ppat_var "x" (src/ppx.ml[215,6316+17]..[215,6316+18])
          expression (src/ppx.ml[216,6338+2]..[226,6713+77])
            Pexp_match
            expression (src/ppx.ml[216,6338+8]..[216,6338+9])
              Pexp_ident "x" (src/ppx.ml[216,6338+8]..[216,6338+9])
            [
              <case>
                pattern (src/ppx.ml[218,6375+4]..[218,6375+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[218,6375+4]..[218,6375+18])
                  None
                expression (src/ppx.ml[218,6375+23]..[218,6375+81])
                  Pexp_apply
                  expression (src/ppx.ml[218,6375+24]..[218,6375+37])
                    Pexp_ident "print_endline" (src/ppx.ml[218,6375+24]..[218,6375+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[218,6375+38]..[218,6375+80])
                        Pexp_apply
                        expression (src/ppx.ml[218,6375+39]..[218,6375+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[218,6375+39]..[218,6375+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[218,6375+54]..[218,6375+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[218,6375+56]..[218,6375+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[219,6457+4]..[219,6457+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[219,6457+4]..[219,6457+17])
                  Some
                    []
                    pattern (src/ppx.ml[219,6457+18]..[219,6457+19])
                      Ppat_var "a" (src/ppx.ml[219,6457+18]..[219,6457+19])
                expression (src/ppx.ml[220,6480+4]..[221,6539+65])
                  Pexp_sequence
                  expression (src/ppx.ml[220,6480+4]..[220,6480+57])
                    Pexp_apply
                    expression (src/ppx.ml[220,6480+5]..[220,6480+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[220,6480+5]..[220,6480+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[220,6480+55]..[220,6480+56])
                          Pexp_ident "a" (src/ppx.ml[220,6480+55]..[220,6480+56])
                    ]
                  expression (src/ppx.ml[221,6539+4]..[221,6539+65])
                    Pexp_apply
                    expression (src/ppx.ml[221,6539+5]..[221,6539+18])
                      Pexp_ident "print_endline" (src/ppx.ml[221,6539+5]..[221,6539+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[221,6539+19]..[221,6539+64])
                          Pexp_apply
                          expression (src/ppx.ml[221,6539+20]..[221,6539+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[221,6539+20]..[221,6539+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[221,6539+35]..[221,6539+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[221,6539+36]..[221,6539+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[221,6539+37]..[221,6539+57]),None)
                                  expression (src/ppx.ml[221,6539+61]..[221,6539+62])
                                    Pexp_ident "a" (src/ppx.ml[221,6539+61]..[221,6539+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[224,6652+5]..[224,6652+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[224,6652+5]..[224,6652+17])
                  Some
                    []
                    pattern (src/ppx.ml[224,6652+18]..[224,6652+19])
                      Ppat_var "a" (src/ppx.ml[224,6652+18]..[224,6652+19])
                expression (src/ppx.ml[225,6680+5]..[225,6680+32])
                  Pexp_apply
                  expression (src/ppx.ml[225,6680+5]..[225,6680+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[225,6680+5]..[225,6680+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[225,6680+29]..[225,6680+32])
                        Pexp_ident "a" (src/ppx.ml[225,6680+30]..[225,6680+31])
                  ]
              <case>
                pattern (src/ppx.ml[226,6713+5]..[226,6713+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[226,6713+5]..[226,6713+15])
                  None
                expression (src/ppx.ml[226,6713+19]..[226,6713+77])
                  Pexp_apply
                  expression (src/ppx.ml[226,6713+20]..[226,6713+33])
                    Pexp_ident "print_endline" (src/ppx.ml[226,6713+20]..[226,6713+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[226,6713+34]..[226,6713+76])
                        Pexp_apply
                        expression (src/ppx.ml[226,6713+35]..[226,6713+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[226,6713+35]..[226,6713+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[226,6713+50]..[226,6713+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6713+52]..[226,6713+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[228,6792+0]..[249,7798+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[228,6792+4]..[228,6792+19])
          Ppat_var "print_type_decl" (src/ppx.ml[228,6792+4]..[228,6792+19])
        expression (src/ppx.ml[228,6792+19]..[249,7798+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[228,6792+19]..[228,6792+22])
            Ppat_var "x" (src/ppx.ml[228,6792+20]..[228,6792+21])
          expression (src/ppx.ml[229,6817+2]..[249,7798+38])
            Pexp_match
            expression (src/ppx.ml[229,6817+8]..[229,6817+9])
              Pexp_ident "x" (src/ppx.ml[229,6817+8]..[229,6817+9])
            [
              <case>
                pattern (src/ppx.ml[230,6832+4]..[239,7213+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[231,6838+6]..[231,6838+16]) ghost
                      pattern (src/ppx.ml[231,6838+6]..[231,6838+16])
                        Ppat_var "ptype_name" (src/ppx.ml[231,6838+6]..[231,6838+16])
                    "ptype_params" (src/ppx.ml[232,6875+6]..[232,6875+18]) ghost
                      pattern (src/ppx.ml[232,6875+6]..[232,6875+18])
                        Ppat_var "ptype_params" (src/ppx.ml[232,6875+6]..[232,6875+18])
                    "ptype_cstrs" (src/ppx.ml[233,6947+6]..[233,6947+17]) ghost
                      pattern (src/ppx.ml[233,6947+6]..[233,6947+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[233,6947+6]..[233,6947+17])
                    "ptype_kind" (src/ppx.ml[234,7016+6]..[234,7016+16]) ghost
                      pattern (src/ppx.ml[234,7016+6]..[234,7016+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[234,7016+6]..[234,7016+16])
                    "ptype_private" (src/ppx.ml[235,7053+6]..[235,7053+19]) ghost
                      pattern (src/ppx.ml[235,7053+6]..[235,7053+19])
                        Ppat_var "ptype_private" (src/ppx.ml[235,7053+6]..[235,7053+19])
                    "ptype_manifest" (src/ppx.ml[236,7094+6]..[236,7094+20]) ghost
                      pattern (src/ppx.ml[236,7094+6]..[236,7094+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[236,7094+6]..[236,7094+20])
                    "ptype_attributes" (src/ppx.ml[237,7141+6]..[237,7141+22]) ghost
                      pattern (src/ppx.ml[237,7141+6]..[237,7141+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[237,7141+6]..[237,7141+22])
                    "ptype_loc" (src/ppx.ml[238,7182+6]..[238,7182+15]) ghost
                      pattern (src/ppx.ml[238,7182+6]..[238,7182+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[238,7182+6]..[238,7182+15])
                  ]
                expression (src/ppx.ml[240,7222+4]..[249,7798+38])
                  Pexp_sequence
                  expression (src/ppx.ml[240,7222+4]..[240,7222+69])
                    Pexp_apply
                    expression (src/ppx.ml[240,7222+5]..[240,7222+18])
                      Pexp_ident "print_endline" (src/ppx.ml[240,7222+5]..[240,7222+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[240,7222+19]..[240,7222+68])
                          Pexp_apply
                          expression (src/ppx.ml[240,7222+20]..[240,7222+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[240,7222+20]..[240,7222+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[240,7222+35]..[240,7222+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[240,7222+36]..[240,7222+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[240,7222+37]..[240,7222+53]),None)
                                  expression (src/ppx.ml[240,7222+56]..[240,7222+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[240,7222+56]..[240,7222+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[241,7293+4]..[249,7798+38])
                    Pexp_sequence
                    expression (src/ppx.ml[241,7293+4]..[241,7293+72])
                      Pexp_apply
                      expression (src/ppx.ml[241,7293+5]..[241,7293+18])
                        Pexp_ident "print_endline" (src/ppx.ml[241,7293+5]..[241,7293+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[241,7293+19]..[241,7293+71])
                            Pexp_apply
                            expression (src/ppx.ml[241,7293+20]..[241,7293+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[241,7293+20]..[241,7293+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[241,7293+35]..[241,7293+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[241,7293+36]..[241,7293+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[241,7293+37]..[241,7293+54]),None)
                                    expression (src/ppx.ml[241,7293+57]..[241,7293+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[241,7293+57]..[241,7293+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[242,7367+4]..[249,7798+38])
                      Pexp_sequence
                      expression (src/ppx.ml[242,7367+4]..[242,7367+66])
                        Pexp_apply
                        expression (src/ppx.ml[242,7367+5]..[242,7367+18])
                          Pexp_ident "print_endline" (src/ppx.ml[242,7367+5]..[242,7367+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[242,7367+19]..[242,7367+65])
                              Pexp_apply
                              expression (src/ppx.ml[242,7367+20]..[242,7367+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[242,7367+20]..[242,7367+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[242,7367+35]..[242,7367+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[242,7367+36]..[242,7367+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[242,7367+37]..[242,7367+49]),None)
                                      expression (src/ppx.ml[242,7367+52]..[242,7367+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[242,7367+52]..[242,7367+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[243,7435+4]..[249,7798+38])
                        Pexp_sequence
                        expression (src/ppx.ml[243,7435+4]..[243,7435+63])
                          Pexp_apply
                          expression (src/ppx.ml[243,7435+5]..[243,7435+18])
                            Pexp_ident "print_endline" (src/ppx.ml[243,7435+5]..[243,7435+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[243,7435+19]..[243,7435+62])
                                Pexp_apply
                                expression (src/ppx.ml[243,7435+20]..[243,7435+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[243,7435+20]..[243,7435+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[243,7435+35]..[243,7435+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[243,7435+36]..[243,7435+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[243,7435+37]..[243,7435+48]),None)
                                        expression (src/ppx.ml[243,7435+50]..[243,7435+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[243,7435+50]..[243,7435+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[244,7500+4]..[249,7798+38])
                          Pexp_sequence
                          expression (src/ppx.ml[244,7500+4]..[244,7500+29])
                            Pexp_apply
                            expression (src/ppx.ml[244,7500+5]..[244,7500+17])
                              Pexp_ident "process_kind" (src/ppx.ml[244,7500+5]..[244,7500+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[244,7500+18]..[244,7500+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[244,7500+18]..[244,7500+28])
                            ]
                          expression (src/ppx.ml[245,7531+4]..[249,7798+38])
                            Pexp_apply
                            expression (src/ppx.ml[245,7531+5]..[245,7531+18])
                              Pexp_ident "print_endline" (src/ppx.ml[245,7531+5]..[245,7531+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,7531+19]..[249,7798+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[245,7531+20]..[245,7531+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[245,7531+20]..[245,7531+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[245,7531+35]..[249,7798+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[245,7531+36]..[245,7531+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[245,7531+37]..[245,7531+51]),None)
                                          expression (src/ppx.ml[245,7531+55]..[245,7531+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[245,7531+55]..[245,7531+68])
                                          expression (src/ppx.ml[246,7601+36]..[246,7601+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[246,7601+37]..[246,7601+51]),None)
                                          expression (src/ppx.ml[246,7601+54]..[246,7601+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[246,7601+54]..[246,7601+68])
                                          expression (src/ppx.ml[247,7671+36]..[247,7671+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[247,7671+37]..[247,7671+47]),None)
                                          expression (src/ppx.ml[247,7671+50]..[247,7671+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[247,7671+50]..[247,7671+66])
                                          expression (src/ppx.ml[248,7739+36]..[248,7739+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[248,7739+37]..[248,7739+46]),None)
                                          expression (src/ppx.ml[248,7739+49]..[248,7739+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[248,7739+49]..[248,7739+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[251,7842+0]..[257,7977+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[251,7842+8]..[251,7842+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[251,7842+8]..[251,7842+30])
        expression (src/ppx.ml[251,7842+30]..[257,7977+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[251,7842+30]..[251,7842+33])
            Ppat_var "x" (src/ppx.ml[251,7842+31]..[251,7842+32])
          expression (src/ppx.ml[252,7878+2]..[257,7977+6])
            Pexp_match
            expression (src/ppx.ml[252,7878+8]..[252,7878+9])
              Pexp_ident "x" (src/ppx.ml[252,7878+8]..[252,7878+9])
            [
              <case>
                pattern (src/ppx.ml[253,7893+4]..[253,7893+6])
                  Ppat_construct "[]" (src/ppx.ml[253,7893+4]..[253,7893+6])
                  None
                expression (src/ppx.ml[253,7893+10]..[253,7893+12])
                  Pexp_construct "()" (src/ppx.ml[253,7893+10]..[253,7893+12])
                  None
              <case>
                pattern (src/ppx.ml[254,7906+4]..[254,7906+10])
                  Ppat_construct "::" (src/ppx.ml[254,7906+6]..[254,7906+8])
                  Some
                    []
                    pattern (src/ppx.ml[254,7906+4]..[254,7906+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[254,7906+4]..[254,7906+5])
                          Ppat_var "h" (src/ppx.ml[254,7906+4]..[254,7906+5])
                        pattern (src/ppx.ml[254,7906+9]..[254,7906+10])
                          Ppat_var "t" (src/ppx.ml[254,7906+9]..[254,7906+10])
                      ]
                expression (src/ppx.ml[255,7920+4]..[257,7977+6])
                  Pexp_sequence
                  expression (src/ppx.ml[255,7920+4]..[255,7920+23])
                    Pexp_apply
                    expression (src/ppx.ml[255,7920+5]..[255,7920+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[255,7920+5]..[255,7920+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[255,7920+21]..[255,7920+22])
                          Pexp_ident "h" (src/ppx.ml[255,7920+21]..[255,7920+22])
                    ]
                  expression (src/ppx.ml[256,7945+4]..[257,7977+6])
                    Pexp_sequence
                    expression (src/ppx.ml[256,7945+4]..[256,7945+30])
                      Pexp_apply
                      expression (src/ppx.ml[256,7945+5]..[256,7945+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[256,7945+5]..[256,7945+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[256,7945+28]..[256,7945+29])
                            Pexp_ident "t" (src/ppx.ml[256,7945+28]..[256,7945+29])
                      ]
                    expression (src/ppx.ml[257,7977+4]..[257,7977+6])
                      Pexp_construct "()" (src/ppx.ml[257,7977+4]..[257,7977+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[259,7989+0]..[285,9953+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[259,7989+4]..[259,7989+13])
          Ppat_var "printdesc" (src/ppx.ml[259,7989+4]..[259,7989+13])
        expression (src/ppx.ml[259,7989+13]..[285,9953+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[259,7989+13]..[259,7989+37])
            Ppat_constraint
            pattern (src/ppx.ml[259,7989+14]..[259,7989+15])
              Ppat_var "x" (src/ppx.ml[259,7989+14]..[259,7989+15])
            core_type (src/ppx.ml[259,7989+17]..[259,7989+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[259,7989+17]..[259,7989+36])
              []
          expression (src/ppx.ml[259,7989+38]..[285,9953+128])
            Pexp_constraint
            expression (src/ppx.ml[260,8035+2]..[285,9953+128])
              Pexp_sequence
              expression (src/ppx.ml[260,8035+2]..[260,8035+68])
                Pexp_apply
                expression (src/ppx.ml[260,8035+3]..[260,8035+16])
                  Pexp_ident "print_endline" (src/ppx.ml[260,8035+3]..[260,8035+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[260,8035+17]..[260,8035+67])
                      Pexp_apply
                      expression (src/ppx.ml[260,8035+18]..[260,8035+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[260,8035+18]..[260,8035+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,8035+33]..[260,8035+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[260,8035+34]..[260,8035+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[260,8035+35]..[260,8035+61]),None)
                              expression (src/ppx.ml[260,8035+64]..[260,8035+65])
                                Pexp_ident "x" (src/ppx.ml[260,8035+64]..[260,8035+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[261,8105+2]..[285,9953+128])
                Pexp_match
                expression (src/ppx.ml[261,8105+8]..[261,8105+9])
                  Pexp_ident "x" (src/ppx.ml[261,8105+8]..[261,8105+9])
                [
                  <case>
                    pattern (src/ppx.ml[262,8120+4]..[262,8120+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[262,8120+4]..[262,8120+13])
                      Some
                        []
                        pattern (src/ppx.ml[262,8120+14]..[262,8120+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[262,8120+15]..[262,8120+25])
                              Ppat_var "expression" (src/ppx.ml[262,8120+15]..[262,8120+25])
                            pattern (src/ppx.ml[262,8120+26]..[262,8120+36])
                              Ppat_var "attributes" (src/ppx.ml[262,8120+26]..[262,8120+36])
                          ]
                    expression (src/ppx.ml[262,8120+41]..[262,8120+117])
                      Pexp_apply
                      expression (src/ppx.ml[262,8120+42]..[262,8120+55])
                        Pexp_ident "print_endline" (src/ppx.ml[262,8120+42]..[262,8120+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,8120+56]..[262,8120+116])
                            Pexp_apply
                            expression (src/ppx.ml[262,8120+57]..[262,8120+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,8120+57]..[262,8120+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,8120+72]..[262,8120+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,8120+73]..[262,8120+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[262,8120+74]..[262,8120+90]),None)
                                    expression (src/ppx.ml[262,8120+93]..[262,8120+103])
                                      Pexp_ident "expression" (src/ppx.ml[262,8120+93]..[262,8120+103])
                                    expression (src/ppx.ml[262,8120+104]..[262,8120+114])
                                      Pexp_ident "attributes" (src/ppx.ml[262,8120+104]..[262,8120+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,8258+4]..[264,8258+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[264,8258+4]..[264,8258+14])
                      Some
                        []
                        pattern (src/ppx.ml[264,8258+15]..[264,8258+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[264,8258+16]..[264,8258+24])
                              Ppat_var "rec_flag" (src/ppx.ml[264,8258+16]..[264,8258+24])
                            pattern (src/ppx.ml[264,8258+26]..[264,8258+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[264,8258+26]..[264,8258+44])
                          ]
                    expression (src/ppx.ml[264,8258+48]..[265,8392+48])
                      Pexp_sequence
                      expression (src/ppx.ml[264,8258+48]..[264,8258+132])
                        Pexp_apply
                        expression (src/ppx.ml[264,8258+49]..[264,8258+62])
                          Pexp_ident "print_endline" (src/ppx.ml[264,8258+49]..[264,8258+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[264,8258+63]..[264,8258+131])
                              Pexp_apply
                              expression (src/ppx.ml[264,8258+64]..[264,8258+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[264,8258+64]..[264,8258+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[264,8258+79]..[264,8258+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[264,8258+80]..[264,8258+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[264,8258+81]..[264,8258+98]),None)
                                      expression (src/ppx.ml[264,8258+101]..[264,8258+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[264,8258+101]..[264,8258+109])
                                      expression (src/ppx.ml[264,8258+111]..[264,8258+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[264,8258+111]..[264,8258+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[265,8392+4]..[265,8392+48])
                        Pexp_apply
                        expression (src/ppx.ml[265,8392+4]..[265,8392+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[265,8392+4]..[265,8392+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[265,8392+28]..[265,8392+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[265,8392+29]..[265,8392+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[266,8441+4]..[266,8441+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[266,8441+4]..[266,8441+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8441+19]..[266,8441+36])
                          Ppat_var "value_description" (src/ppx.ml[266,8441+19]..[266,8441+36])
                    expression (src/ppx.ml[266,8441+39]..[266,8441+116])
                      Pexp_apply
                      expression (src/ppx.ml[266,8441+40]..[266,8441+53])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8441+40]..[266,8441+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8441+54]..[266,8441+115])
                            Pexp_apply
                            expression (src/ppx.ml[266,8441+55]..[266,8441+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8441+55]..[266,8441+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8441+70]..[266,8441+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8441+71]..[266,8441+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[266,8441+72]..[266,8441+93]),None)
                                    expression (src/ppx.ml[266,8441+96]..[266,8441+113])
                                      Pexp_ident "value_description" (src/ppx.ml[266,8441+96]..[266,8441+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8559+4]..[268,8559+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[268,8559+4]..[268,8559+13])
                      Some
                        []
                        pattern (src/ppx.ml[268,8559+14]..[268,8559+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[268,8559+15]..[268,8559+23])
                              Ppat_var "rec_flag" (src/ppx.ml[268,8559+15]..[268,8559+23])
                            pattern (src/ppx.ml[268,8559+25]..[268,8559+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[268,8559+25]..[268,8559+46])
                          ]
                    expression (src/ppx.ml[270,8638+4]..[271,8689+90])
                      Pexp_sequence
                      expression (src/ppx.ml[270,8638+4]..[270,8638+49])
                        Pexp_apply
                        expression (src/ppx.ml[270,8638+4]..[270,8638+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[270,8638+4]..[270,8638+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[270,8638+26]..[270,8638+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[270,8638+27]..[270,8638+48])
                        ]
                      expression (src/ppx.ml[271,8689+4]..[271,8689+90])
                        Pexp_apply
                        expression (src/ppx.ml[271,8689+5]..[271,8689+18])
                          Pexp_ident "print_endline" (src/ppx.ml[271,8689+5]..[271,8689+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[271,8689+19]..[271,8689+89])
                              Pexp_apply
                              expression (src/ppx.ml[271,8689+20]..[271,8689+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[271,8689+20]..[271,8689+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[271,8689+35]..[271,8689+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[271,8689+36]..[271,8689+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[271,8689+37]..[271,8689+53]),None)
                                      expression (src/ppx.ml[271,8689+56]..[271,8689+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[271,8689+56]..[271,8689+64])
                                      expression (src/ppx.ml[271,8689+66]..[271,8689+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[271,8689+66]..[271,8689+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[274,8782+4]..[274,8782+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[274,8782+4]..[274,8782+15])
                      Some
                        []
                        pattern (src/ppx.ml[274,8782+17]..[274,8782+31])
                          Ppat_var "type_extension" (src/ppx.ml[274,8782+17]..[274,8782+31])
                    expression (src/ppx.ml[274,8782+34]..[274,8782+105])
                      Pexp_apply
                      expression (src/ppx.ml[274,8782+35]..[274,8782+48])
                        Pexp_ident "print_endline" (src/ppx.ml[274,8782+35]..[274,8782+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,8782+49]..[274,8782+104])
                            Pexp_apply
                            expression (src/ppx.ml[274,8782+50]..[274,8782+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,8782+50]..[274,8782+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,8782+65]..[274,8782+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,8782+66]..[274,8782+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[274,8782+67]..[274,8782+85]),None)
                                    expression (src/ppx.ml[274,8782+88]..[274,8782+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[274,8782+88]..[274,8782+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,8888+4]..[275,8888+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[275,8888+4]..[275,8888+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,8888+19]..[275,8888+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[275,8888+19]..[275,8888+40])
                    expression (src/ppx.ml[275,8888+43]..[275,8888+124])
                      Pexp_apply
                      expression (src/ppx.ml[275,8888+44]..[275,8888+57])
                        Pexp_ident "print_endline" (src/ppx.ml[275,8888+44]..[275,8888+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,8888+58]..[275,8888+123])
                            Pexp_apply
                            expression (src/ppx.ml[275,8888+59]..[275,8888+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,8888+59]..[275,8888+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,8888+74]..[275,8888+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,8888+75]..[275,8888+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[275,8888+76]..[275,8888+97]),None)
                                    expression (src/ppx.ml[275,8888+100]..[275,8888+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[275,8888+100]..[275,8888+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9013+4]..[276,9013+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[276,9013+4]..[276,9013+15])
                      Some
                        []
                        pattern (src/ppx.ml[276,9013+17]..[276,9013+31])
                          Ppat_var "module_binding" (src/ppx.ml[276,9013+17]..[276,9013+31])
                    expression (src/ppx.ml[276,9013+34]..[276,9013+104])
                      Pexp_apply
                      expression (src/ppx.ml[276,9013+35]..[276,9013+48])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9013+35]..[276,9013+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9013+49]..[276,9013+103])
                            Pexp_apply
                            expression (src/ppx.ml[276,9013+50]..[276,9013+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9013+50]..[276,9013+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9013+65]..[276,9013+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9013+66]..[276,9013+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[276,9013+67]..[276,9013+85]),None)
                                    expression (src/ppx.ml[276,9013+87]..[276,9013+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[276,9013+87]..[276,9013+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[277,9118+4]..[277,9118+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[277,9118+4]..[277,9118+18])
                      Some
                        []
                        pattern (src/ppx.ml[277,9118+20]..[277,9118+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[277,9118+20]..[277,9118+39])
                    expression (src/ppx.ml[277,9118+42]..[277,9118+121])
                      Pexp_apply
                      expression (src/ppx.ml[277,9118+43]..[277,9118+56])
                        Pexp_ident "print_endline" (src/ppx.ml[277,9118+43]..[277,9118+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[277,9118+57]..[277,9118+120])
                            Pexp_apply
                            expression (src/ppx.ml[277,9118+58]..[277,9118+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[277,9118+58]..[277,9118+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[277,9118+73]..[277,9118+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[277,9118+74]..[277,9118+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[277,9118+75]..[277,9118+96]),None)
                                    expression (src/ppx.ml[277,9118+99]..[277,9118+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[277,9118+99]..[277,9118+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[278,9240+4]..[278,9240+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[278,9240+4]..[278,9240+16])
                      Some
                        []
                        pattern (src/ppx.ml[278,9240+17]..[278,9240+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[278,9240+17]..[278,9240+40])
                    expression (src/ppx.ml[278,9240+43]..[278,9240+124])
                      Pexp_apply
                      expression (src/ppx.ml[278,9240+44]..[278,9240+57])
                        Pexp_ident "print_endline" (src/ppx.ml[278,9240+44]..[278,9240+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,9240+58]..[278,9240+123])
                            Pexp_apply
                            expression (src/ppx.ml[278,9240+59]..[278,9240+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,9240+59]..[278,9240+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,9240+74]..[278,9240+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,9240+75]..[278,9240+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[278,9240+76]..[278,9240+95]),None)
                                    expression (src/ppx.ml[278,9240+98]..[278,9240+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[278,9240+98]..[278,9240+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[280,9382+4]..[280,9382+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[280,9382+4]..[280,9382+13])
                      Some
                        []
                        pattern (src/ppx.ml[280,9382+14]..[280,9382+30])
                          Ppat_var "open_description" (src/ppx.ml[280,9382+14]..[280,9382+30])
                    expression (src/ppx.ml[280,9382+33]..[280,9382+103])
                      Pexp_apply
                      expression (src/ppx.ml[280,9382+34]..[280,9382+47])
                        Pexp_ident "print_endline" (src/ppx.ml[280,9382+34]..[280,9382+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[280,9382+48]..[280,9382+102])
                            Pexp_apply
                            expression (src/ppx.ml[280,9382+49]..[280,9382+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[280,9382+49]..[280,9382+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[280,9382+64]..[280,9382+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[280,9382+65]..[280,9382+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[280,9382+66]..[280,9382+81]),None)
                                    expression (src/ppx.ml[280,9382+84]..[280,9382+100])
                                      Pexp_ident "open_description" (src/ppx.ml[280,9382+84]..[280,9382+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[281,9486+4]..[281,9486+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[281,9486+4]..[281,9486+14])
                      Some
                        []
                        pattern (src/ppx.ml[281,9486+15]..[281,9486+36])
                          Ppat_var "class_declarations" (src/ppx.ml[281,9486+16]..[281,9486+34])
                    expression (src/ppx.ml[281,9486+39]..[281,9486+113])
                      Pexp_apply
                      expression (src/ppx.ml[281,9486+40]..[281,9486+53])
                        Pexp_ident "print_endline" (src/ppx.ml[281,9486+40]..[281,9486+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[281,9486+54]..[281,9486+112])
                            Pexp_apply
                            expression (src/ppx.ml[281,9486+55]..[281,9486+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[281,9486+55]..[281,9486+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[281,9486+70]..[281,9486+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[281,9486+71]..[281,9486+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[281,9486+72]..[281,9486+89]),None)
                                    expression (src/ppx.ml[281,9486+92]..[281,9486+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[281,9486+92]..[281,9486+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[282,9600+4]..[282,9600+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[282,9600+4]..[282,9600+19])
                      Some
                        []
                        pattern (src/ppx.ml[282,9600+20]..[282,9600+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[282,9600+21]..[282,9600+44])
                    expression (src/ppx.ml[282,9600+48]..[282,9600+132])
                      Pexp_apply
                      expression (src/ppx.ml[282,9600+49]..[282,9600+62])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9600+49]..[282,9600+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9600+63]..[282,9600+131])
                            Pexp_apply
                            expression (src/ppx.ml[282,9600+64]..[282,9600+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9600+64]..[282,9600+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9600+79]..[282,9600+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9600+80]..[282,9600+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[282,9600+81]..[282,9600+103]),None)
                                    expression (src/ppx.ml[282,9600+106]..[282,9600+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[282,9600+106]..[282,9600+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[283,9733+4]..[283,9733+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[283,9733+4]..[283,9733+16])
                      Some
                        []
                        pattern (src/ppx.ml[283,9733+18]..[283,9733+39])
                          Ppat_var "include_declaration" (src/ppx.ml[283,9733+19]..[283,9733+38])
                    expression (src/ppx.ml[283,9733+41]..[283,9733+117])
                      Pexp_apply
                      expression (src/ppx.ml[283,9733+42]..[283,9733+55])
                        Pexp_ident "print_endline" (src/ppx.ml[283,9733+42]..[283,9733+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9733+56]..[283,9733+116])
                            Pexp_apply
                            expression (src/ppx.ml[283,9733+57]..[283,9733+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[283,9733+57]..[283,9733+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[283,9733+72]..[283,9733+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[283,9733+73]..[283,9733+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[283,9733+74]..[283,9733+93]),None)
                                    expression (src/ppx.ml[283,9733+95]..[283,9733+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[283,9733+95]..[283,9733+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9851+4]..[284,9851+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[284,9851+4]..[284,9851+18])
                      Some
                        []
                        pattern (src/ppx.ml[284,9851+19]..[284,9851+30])
                          Ppat_var "attribute" (src/ppx.ml[284,9851+20]..[284,9851+29])
                    expression (src/ppx.ml[284,9851+32]..[284,9851+101])
                      Pexp_apply
                      expression (src/ppx.ml[284,9851+33]..[284,9851+46])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9851+33]..[284,9851+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9851+47]..[284,9851+100])
                            Pexp_apply
                            expression (src/ppx.ml[284,9851+48]..[284,9851+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9851+48]..[284,9851+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9851+63]..[284,9851+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9851+64]..[284,9851+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[284,9851+65]..[284,9851+86]),None)
                                    expression (src/ppx.ml[284,9851+89]..[284,9851+98])
                                      Pexp_ident "attribute" (src/ppx.ml[284,9851+89]..[284,9851+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9953+4]..[285,9953+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[285,9953+4]..[285,9953+18])
                      Some
                        []
                        pattern (src/ppx.ml[285,9953+19]..[285,9953+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[285,9953+21]..[285,9953+30])
                              Ppat_var "extension" (src/ppx.ml[285,9953+21]..[285,9953+30])
                            pattern (src/ppx.ml[285,9953+33]..[285,9953+43])
                              Ppat_var "attributes" (src/ppx.ml[285,9953+33]..[285,9953+43])
                          ]
                    expression (src/ppx.ml[285,9953+46]..[285,9953+128])
                      Pexp_apply
                      expression (src/ppx.ml[285,9953+47]..[285,9953+60])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9953+47]..[285,9953+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9953+61]..[285,9953+127])
                            Pexp_apply
                            expression (src/ppx.ml[285,9953+62]..[285,9953+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9953+62]..[285,9953+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9953+77]..[285,9953+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9953+78]..[285,9953+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[285,9953+79]..[285,9953+100]),None)
                                    expression (src/ppx.ml[285,9953+103]..[285,9953+112])
                                      Pexp_ident "extension" (src/ppx.ml[285,9953+103]..[285,9953+112])
                                    expression (src/ppx.ml[285,9953+115]..[285,9953+125])
                                      Pexp_ident "attributes" (src/ppx.ml[285,9953+115]..[285,9953+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[259,7989+39]..[259,7989+43])
              Ptyp_constr "unit" (src/ppx.ml[259,7989+39]..[259,7989+43])
              []
    ]
  structure_item (src/ppx.ml[287,10083+0]..[287,10083+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10083+4]..[287,10083+7])
          Ppat_var "foo" (src/ppx.ml[287,10083+4]..[287,10083+7])
        expression (src/ppx.ml[287,10083+10]..[287,10083+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[289,10098+0]..[297,10317+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[289,10098+4]..[289,10098+12])
          Ppat_var "printone" (src/ppx.ml[289,10098+4]..[289,10098+12])
        expression (src/ppx.ml[289,10098+13]..[297,10317+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[289,10098+13]..[289,10098+34])
            Ppat_constraint
            pattern (src/ppx.ml[289,10098+14]..[289,10098+15])
              Ppat_var "x" (src/ppx.ml[289,10098+14]..[289,10098+15])
            core_type (src/ppx.ml[289,10098+18]..[289,10098+32])
              Ptyp_constr "structure_item" (src/ppx.ml[289,10098+18]..[289,10098+32])
              []
          expression (src/ppx.ml[289,10098+35]..[297,10317+6])
            Pexp_constraint
            expression (src/ppx.ml[290,10141+2]..[297,10317+6])
              Pexp_match
              expression (src/ppx.ml[290,10141+8]..[290,10141+9])
                Pexp_ident "x" (src/ppx.ml[290,10141+8]..[290,10141+9])
              [
                <case>
                  pattern (src/ppx.ml[291,10156+3]..[294,10206+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[292,10161+4]..[292,10161+13]) ghost
                        pattern (src/ppx.ml[292,10161+4]..[292,10161+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[292,10161+4]..[292,10161+13])
                    ]
                  expression (src/ppx.ml[296,10290+4]..[297,10317+6])
                    Pexp_sequence
                    expression (src/ppx.ml[296,10290+4]..[296,10290+25])
                      Pexp_apply
                      expression (src/ppx.ml[296,10290+5]..[296,10290+14])
                        Pexp_ident "printdesc" (src/ppx.ml[296,10290+5]..[296,10290+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[296,10290+15]..[296,10290+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[296,10290+15]..[296,10290+24])
                      ]
                    expression (src/ppx.ml[297,10317+4]..[297,10317+6])
                      Pexp_construct "()" (src/ppx.ml[297,10317+4]..[297,10317+6])
                      None
              ]
            core_type (src/ppx.ml[289,10098+36]..[289,10098+40])
              Ptyp_constr "unit" (src/ppx.ml[289,10098+36]..[289,10098+40])
              []
    ]
  structure_item (src/ppx.ml[303,10437+0]..[305,10518+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[303,10437+4]..[303,10437+13])
          Ppat_var "printone2" (src/ppx.ml[303,10437+4]..[303,10437+13])
        expression (src/ppx.ml[303,10437+14]..[305,10518+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[303,10437+14]..[303,10437+15])
            Ppat_var "x" (src/ppx.ml[303,10437+14]..[303,10437+15])
          expression (src/ppx.ml[303,10437+16]..[305,10518+12])
            Pexp_constraint
            expression (src/ppx.ml[304,10461+2]..[305,10518+12])
              Pexp_sequence
              expression (src/ppx.ml[304,10461+2]..[304,10461+55])
                Pexp_apply
                expression (src/ppx.ml[304,10461+3]..[304,10461+16])
                  Pexp_ident "print_endline" (src/ppx.ml[304,10461+3]..[304,10461+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[304,10461+17]..[304,10461+54])
                      Pexp_apply
                      expression (src/ppx.ml[304,10461+18]..[304,10461+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[304,10461+18]..[304,10461+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[304,10461+33]..[304,10461+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[304,10461+34]..[304,10461+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[304,10461+35]..[304,10461+49]),None)
                              expression (src/ppx.ml[304,10461+51]..[304,10461+52])
                                Pexp_ident "x" (src/ppx.ml[304,10461+51]..[304,10461+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[305,10518+2]..[305,10518+12])
                Pexp_apply
                expression (src/ppx.ml[305,10518+2]..[305,10518+10])
                  Pexp_ident "printone" (src/ppx.ml[305,10518+2]..[305,10518+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[305,10518+11]..[305,10518+12])
                      Pexp_ident "x" (src/ppx.ml[305,10518+11]..[305,10518+12])
                ]
            core_type (src/ppx.ml[303,10437+17]..[303,10437+21])
              Ptyp_constr "unit" (src/ppx.ml[303,10437+17]..[303,10437+21])
              []
    ]
  structure_item (src/ppx.ml[307,10534+0]..[309,10565+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10534+4]..[307,10534+9])
          Ppat_var "proc1" (src/ppx.ml[307,10534+4]..[307,10534+9])
        expression (src/ppx.ml[307,10534+10]..[309,10565+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10534+10]..[307,10534+11])
            Ppat_var "x" (src/ppx.ml[307,10534+10]..[307,10534+11])
          expression (src/ppx.ml[308,10550+2]..[309,10565+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10550+2]..[308,10550+13])
              Pexp_apply
              expression (src/ppx.ml[308,10550+2]..[308,10550+11])
                Pexp_ident "printone2" (src/ppx.ml[308,10550+2]..[308,10550+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10550+12]..[308,10550+13])
                    Pexp_ident "x" (src/ppx.ml[308,10550+12]..[308,10550+13])
              ]
            expression (src/ppx.ml[309,10565+2]..[309,10565+3])
              Pexp_ident "x" (src/ppx.ml[309,10565+2]..[309,10565+3])
    ]
  structure_item (src/ppx.ml[311,10570+0]..[314,10719+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10570+4]..[311,10570+9])
          Ppat_var "debug" (src/ppx.ml[311,10570+4]..[311,10570+9])
        expression (src/ppx.ml[311,10570+10]..[314,10719+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[311,10570+10]..[311,10570+14])
            Ppat_var "proc" (src/ppx.ml[311,10570+10]..[311,10570+14])
          expression (src/ppx.ml[311,10570+15]..[314,10719+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[311,10570+15]..[311,10570+18])
              Ppat_var "lst" (src/ppx.ml[311,10570+15]..[311,10570+18])
            expression (src/ppx.ml[311,10570+19]..[314,10719+4])
              Pexp_constraint
              expression (src/ppx.ml[312,10598+2]..[314,10719+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[312,10598+6]..[312,10598+12])
                      Ppat_var "result" (src/ppx.ml[312,10598+6]..[312,10598+12])
                    expression (src/ppx.ml[312,10598+15]..[312,10598+32])
                      Pexp_apply
                      expression (src/ppx.ml[312,10598+15]..[312,10598+23])
                        Pexp_ident "List.map" (src/ppx.ml[312,10598+15]..[312,10598+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10598+24]..[312,10598+28])
                            Pexp_ident "proc" (src/ppx.ml[312,10598+24]..[312,10598+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10598+29]..[312,10598+32])
                            Pexp_ident "lst" (src/ppx.ml[312,10598+29]..[312,10598+32])
                      ]
                ]
                expression (src/ppx.ml[313,10634+2]..[314,10719+4])
                  Pexp_sequence
                  expression (src/ppx.ml[313,10634+2]..[313,10634+83])
                    Pexp_apply
                    expression (src/ppx.ml[313,10634+2]..[313,10634+11])
                      Pexp_ident "List.iter" (src/ppx.ml[313,10634+2]..[313,10634+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[313,10634+12]..[313,10634+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[313,10634+17]..[313,10634+18])
                            Ppat_var "i" (src/ppx.ml[313,10634+17]..[313,10634+18])
                          expression (src/ppx.ml[313,10634+22]..[313,10634+75])
                            Pexp_apply
                            expression (src/ppx.ml[313,10634+22]..[313,10634+35])
                              Pexp_ident "print_endline" (src/ppx.ml[313,10634+22]..[313,10634+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[313,10634+36]..[313,10634+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[313,10634+37]..[313,10634+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[313,10634+37]..[313,10634+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[313,10634+52]..[313,10634+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[313,10634+53]..[313,10634+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[313,10634+54]..[313,10634+69]),None)
                                          expression (src/ppx.ml[313,10634+72]..[313,10634+73])
                                            Pexp_ident "i" (src/ppx.ml[313,10634+72]..[313,10634+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[313,10634+77]..[313,10634+83])
                          Pexp_ident "result" (src/ppx.ml[313,10634+77]..[313,10634+83])
                    ]
                  expression (src/ppx.ml[314,10719+2]..[314,10719+4])
                    Pexp_construct "()" (src/ppx.ml[314,10719+2]..[314,10719+4])
                    None
              core_type (src/ppx.ml[311,10570+21]..[311,10570+25])
                Ptyp_constr "unit" (src/ppx.ml[311,10570+21]..[311,10570+25])
                []
    ]
  structure_item (src/ppx.ml[316,10741+0]..[319,10865+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[316,10741+4]..[316,10741+13])
          Ppat_var "transform" (src/ppx.ml[316,10741+4]..[316,10741+13])
        expression (src/ppx.ml[316,10741+14]..[319,10865+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[316,10741+14]..[316,10741+15])
            Ppat_var "x" (src/ppx.ml[316,10741+14]..[316,10741+15])
          expression (src/ppx.ml[317,10796+2]..[319,10865+3])
            Pexp_sequence
            expression (src/ppx.ml[317,10796+2]..[317,10796+48])
              Pexp_apply
              expression (src/ppx.ml[317,10796+3]..[317,10796+16])
                Pexp_ident "print_endline" (src/ppx.ml[317,10796+3]..[317,10796+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[317,10796+17]..[317,10796+47])
                    Pexp_apply
                    expression (src/ppx.ml[317,10796+18]..[317,10796+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[317,10796+18]..[317,10796+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[317,10796+33]..[317,10796+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[317,10796+34]..[317,10796+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[317,10796+35]..[317,10796+42]),None)
                            expression (src/ppx.ml[317,10796+44]..[317,10796+45])
                              Pexp_ident "x" (src/ppx.ml[317,10796+44]..[317,10796+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[318,10846+2]..[319,10865+3])
              Pexp_sequence
              expression (src/ppx.ml[318,10846+2]..[318,10846+17])
                Pexp_apply
                expression (src/ppx.ml[318,10846+3]..[318,10846+8])
                  Pexp_ident "debug" (src/ppx.ml[318,10846+3]..[318,10846+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[318,10846+9]..[318,10846+14])
                      Pexp_ident "proc1" (src/ppx.ml[318,10846+9]..[318,10846+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[318,10846+15]..[318,10846+16])
                      Pexp_ident "x" (src/ppx.ml[318,10846+15]..[318,10846+16])
                ]
              expression (src/ppx.ml[319,10865+2]..[319,10865+3])
                Pexp_ident "x" (src/ppx.ml[319,10865+2]..[319,10865+3])
    ]
  structure_item (src/ppx.ml[321,10872+1]..[321,10872+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[321,10872+5]..[321,10872+7])
          Ppat_construct "()" (src/ppx.ml[321,10872+5]..[321,10872+7])
          None
        expression (src/ppx.ml[321,10872+10]..[321,10872+69])
          Pexp_apply
          expression (src/ppx.ml[321,10872+10]..[321,10872+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[321,10872+10]..[321,10872+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[321,10872+47]..[321,10872+56])
                Pexp_ident "transform" (src/ppx.ml[321,10872+47]..[321,10872+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[321,10872+57]..[321,10872+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[321,10872+58]..[321,10872+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with | { txt;_} -> (match txt with | txt2 -> txt2)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%" id2;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

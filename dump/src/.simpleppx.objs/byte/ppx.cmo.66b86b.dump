[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[72,1932+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[72,1932+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+17])
            Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
          expression (src/ppx.ml[69,1879+17]..[72,1932+62])
            Pexp_constraint
            expression (src/ppx.ml[70,1904+2]..[72,1932+62])
              Pexp_match
              expression (src/ppx.ml[70,1904+8]..[70,1904+9])
                Pexp_ident "x" (src/ppx.ml[70,1904+8]..[70,1904+9])
              [
                <case>
                  pattern (src/ppx.ml[71,1919+4]..[71,1919+9])
                    Ppat_tuple
                    [
                      pattern (src/ppx.ml[71,1919+5]..[71,1919+6])
                        Ppat_var "a" (src/ppx.ml[71,1919+5]..[71,1919+6])
                      pattern (src/ppx.ml[71,1919+7]..[71,1919+8])
                        Ppat_var "b" (src/ppx.ml[71,1919+7]..[71,1919+8])
                    ]
                  expression (src/ppx.ml[72,1932+4]..[72,1932+62])
                    Pexp_apply
                    expression (src/ppx.ml[72,1932+5]..[72,1932+18])
                      Pexp_ident "print_endline" (src/ppx.ml[72,1932+5]..[72,1932+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[72,1932+19]..[72,1932+61])
                          Pexp_apply
                          expression (src/ppx.ml[72,1932+20]..[72,1932+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[72,1932+20]..[72,1932+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[72,1932+35]..[72,1932+60])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[72,1932+36]..[72,1932+55])
                                    Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[72,1932+37]..[72,1932+54]),None)
                                  expression (src/ppx.ml[72,1932+58]..[72,1932+59])
                                    Pexp_ident "a" (src/ppx.ml[72,1932+58]..[72,1932+59])
                                ]
                          ]
                    ]
              ]
            core_type (src/ppx.ml[69,1879+18]..[69,1879+22])
              Ptyp_constr "unit" (src/ppx.ml[69,1879+18]..[69,1879+22])
              []
    ]
  structure_item (src/ppx.ml[74,1998+0]..[156,4823+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[74,1998+8]..[74,1998+27])
          Ppat_var "process_record_kind" (src/ppx.ml[74,1998+8]..[74,1998+27])
        expression (src/ppx.ml[74,1998+27]..[88,2482+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[74,1998+27]..[74,1998+30])
            Ppat_var "x" (src/ppx.ml[74,1998+28]..[74,1998+29])
          expression (src/ppx.ml[75,2031+2]..[88,2482+47])
            Pexp_match
            expression (src/ppx.ml[75,2031+8]..[75,2031+9])
              Pexp_ident "x" (src/ppx.ml[75,2031+8]..[75,2031+9])
            [
              <case>
                pattern (src/ppx.ml[76,2046+4]..[82,2227+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[77,2052+5]..[77,2052+13]) ghost
                      pattern (src/ppx.ml[77,2052+5]..[77,2052+13])
                        Ppat_var "pld_name" (src/ppx.ml[77,2052+5]..[77,2052+13])
                    "pld_mutable" (src/ppx.ml[78,2085+5]..[78,2085+16]) ghost
                      pattern (src/ppx.ml[78,2085+5]..[78,2085+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[78,2085+5]..[78,2085+16])
                    "pld_type" (src/ppx.ml[79,2123+5]..[79,2123+13]) ghost
                      pattern (src/ppx.ml[79,2123+5]..[79,2123+13])
                        Ppat_var "pld_type" (src/ppx.ml[79,2123+5]..[79,2123+13])
                    "pld_loc" (src/ppx.ml[80,2155+5]..[80,2155+12]) ghost
                      pattern (src/ppx.ml[80,2155+5]..[80,2155+12])
                        Ppat_var "pld_loc" (src/ppx.ml[80,2155+5]..[80,2155+12])
                    "pld_attributes" (src/ppx.ml[81,2187+5]..[81,2187+19]) ghost
                      pattern (src/ppx.ml[81,2187+5]..[81,2187+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[81,2187+5]..[81,2187+19])
                  ]
                expression (src/ppx.ml[83,2235+4]..[88,2482+47])
                  Pexp_apply
                  expression (src/ppx.ml[83,2235+5]..[83,2235+18])
                    Pexp_ident "print_endline" (src/ppx.ml[83,2235+5]..[83,2235+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[83,2235+19]..[88,2482+46])
                        Pexp_apply
                        expression (src/ppx.ml[83,2235+20]..[83,2235+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[83,2235+20]..[83,2235+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[83,2235+35]..[88,2482+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[83,2235+36]..[83,2235+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[83,2235+37]..[83,2235+56]),None)
                                expression (src/ppx.ml[84,2296+36]..[84,2296+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[84,2296+36]..[84,2296+44])
                                expression (src/ppx.ml[85,2342+36]..[85,2342+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[85,2342+37]..[85,2342+44]),None)
                                expression (src/ppx.ml[86,2389+36]..[86,2389+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[86,2389+36]..[86,2389+47])
                                expression (src/ppx.ml[87,2438+36]..[87,2438+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[87,2438+37]..[87,2438+41]),None)
                                expression (src/ppx.ml[88,2482+36]..[88,2482+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[88,2482+36]..[88,2482+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[90,2534+0]..[90,2534+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[90,2534+0]..[90,2534+22])
        expression (src/ppx.ml[90,2534+23]..[130,4141+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[90,2534+23]..[90,2534+24])
            Ppat_var "x" (src/ppx.ml[90,2534+23]..[90,2534+24])
          expression (src/ppx.ml[91,2561+2]..[130,4141+65])
            Pexp_match
            expression (src/ppx.ml[91,2561+8]..[91,2561+9])
              Pexp_ident "x" (src/ppx.ml[91,2561+8]..[91,2561+9])
            [
              <case>
                pattern (src/ppx.ml[92,2576+4]..[92,2576+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[92,2576+4]..[92,2576+15])
                  Some
                    []
                    pattern (src/ppx.ml[92,2576+16]..[92,2576+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[92,2576+17]..[92,2576+18])
                          Ppat_var "a" (src/ppx.ml[92,2576+17]..[92,2576+18])
                        pattern (src/ppx.ml[92,2576+19]..[92,2576+20])
                          Ppat_var "b" (src/ppx.ml[92,2576+19]..[92,2576+20])
                      ]
                expression (src/ppx.ml[94,2647+4]..[97,2701+79])
                  Pexp_sequence
                  expression (src/ppx.ml[94,2647+4]..[94,2647+18])
                    Pexp_apply
                    expression (src/ppx.ml[94,2647+5]..[94,2647+15])
                      Pexp_ident "process_id" (src/ppx.ml[94,2647+5]..[94,2647+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[94,2647+16]..[94,2647+17])
                          Pexp_ident "a" (src/ppx.ml[94,2647+16]..[94,2647+17])
                    ]
                  expression (src/ppx.ml[95,2667+4]..[97,2701+79])
                    Pexp_sequence
                    expression (src/ppx.ml[95,2667+4]..[95,2667+30])
                      Pexp_apply
                      expression (src/ppx.ml[95,2667+5]..[95,2667+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[95,2667+5]..[95,2667+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[95,2667+28]..[95,2667+29])
                            Pexp_ident "b" (src/ppx.ml[95,2667+28]..[95,2667+29])
                      ]
                    expression (src/ppx.ml[97,2701+4]..[97,2701+79])
                      Pexp_apply
                      expression (src/ppx.ml[97,2701+5]..[97,2701+18])
                        Pexp_ident "print_endline" (src/ppx.ml[97,2701+5]..[97,2701+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[97,2701+19]..[97,2701+78])
                            Pexp_apply
                            expression (src/ppx.ml[97,2701+20]..[97,2701+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[97,2701+20]..[97,2701+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[97,2701+35]..[97,2701+77])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[97,2701+36]..[97,2701+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2701+37]..[97,2701+55]),None)
                                    expression (src/ppx.ml[97,2701+58]..[97,2701+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[97,2701+59]..[97,2701+61]),None)
                                    expression (src/ppx.ml[97,2701+63]..[97,2701+64])
                                      Pexp_ident "a" (src/ppx.ml[97,2701+63]..[97,2701+64])
                                    expression (src/ppx.ml[97,2701+66]..[97,2701+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[97,2701+67]..[97,2701+72]),None)
                                    expression (src/ppx.ml[97,2701+74]..[97,2701+75])
                                      Pexp_ident "b" (src/ppx.ml[97,2701+74]..[97,2701+75])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[99,2782+4]..[99,2782+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[99,2782+4]..[99,2782+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2782+15]..[99,2782+16])
                      Ppat_var "a" (src/ppx.ml[99,2782+15]..[99,2782+16])
                expression (src/ppx.ml[101,2830+4]..[101,2830+59])
                  Pexp_apply
                  expression (src/ppx.ml[101,2830+5]..[101,2830+18])
                    Pexp_ident "print_endline" (src/ppx.ml[101,2830+5]..[101,2830+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[101,2830+19]..[101,2830+58])
                        Pexp_apply
                        expression (src/ppx.ml[101,2830+20]..[101,2830+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[101,2830+20]..[101,2830+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2830+35]..[101,2830+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2830+37]..[101,2830+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,2909+4]..[104,2909+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[104,2909+4]..[104,2909+12])
                  None
                expression (src/ppx.ml[104,2909+17]..[104,2909+69])
                  Pexp_apply
                  expression (src/ppx.ml[104,2909+18]..[104,2909+31])
                    Pexp_ident "print_endline" (src/ppx.ml[104,2909+18]..[104,2909+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,2909+32]..[104,2909+68])
                        Pexp_apply
                        expression (src/ppx.ml[104,2909+33]..[104,2909+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,2909+33]..[104,2909+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2909+48]..[104,2909+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2909+50]..[104,2909+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,2979+4]..[105,2979+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[105,2979+4]..[105,2979+12])
                  Some
                    []
                    pattern (src/ppx.ml[105,2979+13]..[105,2979+17])
                      Ppat_var "name" (src/ppx.ml[105,2979+13]..[105,2979+17])
                expression (src/ppx.ml[105,2979+20]..[105,2979+80])
                  Pexp_apply
                  expression (src/ppx.ml[105,2979+21]..[105,2979+34])
                    Pexp_ident "print_endline" (src/ppx.ml[105,2979+21]..[105,2979+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,2979+35]..[105,2979+79])
                        Pexp_apply
                        expression (src/ppx.ml[105,2979+36]..[105,2979+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,2979+36]..[105,2979+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2979+51]..[105,2979+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[105,2979+52]..[105,2979+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,2979+53]..[105,2979+68]),None)
                                expression (src/ppx.ml[105,2979+73]..[105,2979+77])
                                  Pexp_ident "name" (src/ppx.ml[105,2979+73]..[105,2979+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,3060+4]..[106,3060+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[106,3060+4]..[106,3060+14])
                  Some
                    []
                    pattern (src/ppx.ml[106,3060+15]..[106,3060+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[106,3060+16]..[106,3060+25])
                          Ppat_var "arg_label" (src/ppx.ml[106,3060+16]..[106,3060+25])
                        pattern (src/ppx.ml[106,3060+28]..[106,3060+37])
                          Ppat_var "core_type" (src/ppx.ml[106,3060+28]..[106,3060+37])
                        pattern (src/ppx.ml[106,3060+40]..[106,3060+50])
                          Ppat_var "core_type2" (src/ppx.ml[106,3060+40]..[106,3060+50])
                      ]
                expression (src/ppx.ml[107,3115+4]..[107,3115+61])
                  Pexp_apply
                  expression (src/ppx.ml[107,3115+5]..[107,3115+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3115+5]..[107,3115+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3115+19]..[107,3115+60])
                        Pexp_apply
                        expression (src/ppx.ml[107,3115+20]..[107,3115+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3115+20]..[107,3115+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3115+35]..[107,3115+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3115+37]..[107,3115+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[109,3178+4]..[109,3178+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[109,3178+4]..[109,3178+15])
                  Some
                    []
                    pattern (src/ppx.ml[109,3178+16]..[109,3178+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[109,3178+17]..[109,3178+18])
                          Ppat_var "a" (src/ppx.ml[109,3178+17]..[109,3178+18])
                        pattern (src/ppx.ml[109,3178+19]..[109,3178+20])
                          Ppat_var "b" (src/ppx.ml[109,3178+19]..[109,3178+20])
                      ]
                expression (src/ppx.ml[111,3247+4]..[111,3247+60])
                  Pexp_apply
                  expression (src/ppx.ml[111,3247+5]..[111,3247+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3247+5]..[111,3247+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3247+19]..[111,3247+59])
                        Pexp_apply
                        expression (src/ppx.ml[111,3247+20]..[111,3247+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3247+20]..[111,3247+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3247+35]..[111,3247+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3247+37]..[111,3247+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[112,3308+4]..[112,3308+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[112,3308+4]..[112,3308+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3308+15]..[112,3308+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[112,3308+16]..[112,3308+17])
                          Ppat_var "a" (src/ppx.ml[112,3308+16]..[112,3308+17])
                        pattern (src/ppx.ml[112,3308+18]..[112,3308+19])
                          Ppat_var "b" (src/ppx.ml[112,3308+18]..[112,3308+19])
                      ]
                expression (src/ppx.ml[114,3378+4]..[114,3378+60])
                  Pexp_apply
                  expression (src/ppx.ml[114,3378+5]..[114,3378+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3378+5]..[114,3378+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3378+19]..[114,3378+59])
                        Pexp_apply
                        expression (src/ppx.ml[114,3378+20]..[114,3378+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3378+20]..[114,3378+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3378+35]..[114,3378+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3378+37]..[114,3378+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3439+4]..[115,3439+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[115,3439+4]..[115,3439+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3439+15]..[115,3439+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3439+16]..[115,3439+17])
                          Ppat_var "a" (src/ppx.ml[115,3439+16]..[115,3439+17])
                        pattern (src/ppx.ml[115,3439+18]..[115,3439+19])
                          Ppat_var "b" (src/ppx.ml[115,3439+18]..[115,3439+19])
                      ]
                expression (src/ppx.ml[117,3500+4]..[117,3500+60])
                  Pexp_apply
                  expression (src/ppx.ml[117,3500+5]..[117,3500+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3500+5]..[117,3500+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3500+19]..[117,3500+59])
                        Pexp_apply
                        expression (src/ppx.ml[117,3500+20]..[117,3500+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3500+20]..[117,3500+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3500+35]..[117,3500+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3500+37]..[117,3500+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3561+4]..[118,3561+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[118,3561+4]..[118,3561+16])
                  Some
                    []
                    pattern (src/ppx.ml[118,3561+17]..[118,3561+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3561+18]..[118,3561+19])
                          Ppat_var "a" (src/ppx.ml[118,3561+18]..[118,3561+19])
                        pattern (src/ppx.ml[118,3561+20]..[118,3561+21])
                          Ppat_var "b" (src/ppx.ml[118,3561+20]..[118,3561+21])
                        pattern (src/ppx.ml[118,3561+22]..[118,3561+23])
                          Ppat_var "c" (src/ppx.ml[118,3561+22]..[118,3561+23])
                      ]
                expression (src/ppx.ml[120,3651+4]..[120,3651+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3651+5]..[120,3651+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3651+5]..[120,3651+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3651+19]..[120,3651+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3651+20]..[120,3651+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3651+20]..[120,3651+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3651+35]..[120,3651+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3651+37]..[120,3651+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3712+4]..[121,3712+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[121,3712+4]..[121,3712+13])
                  Some
                    []
                    pattern (src/ppx.ml[121,3712+14]..[121,3712+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3712+15]..[121,3712+16])
                          Ppat_var "a" (src/ppx.ml[121,3712+15]..[121,3712+16])
                        pattern (src/ppx.ml[121,3712+17]..[121,3712+18])
                          Ppat_var "b" (src/ppx.ml[121,3712+17]..[121,3712+18])
                      ]
                expression (src/ppx.ml[123,3776+4]..[123,3776+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3776+5]..[123,3776+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3776+5]..[123,3776+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3776+19]..[123,3776+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3776+20]..[123,3776+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3776+20]..[123,3776+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3776+35]..[123,3776+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3776+37]..[123,3776+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3837+4]..[124,3837+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[124,3837+4]..[124,3837+16])
                  Some
                    []
                    pattern (src/ppx.ml[124,3837+17]..[124,3837+18])
                      Ppat_var "a" (src/ppx.ml[124,3837+17]..[124,3837+18])
                expression (src/ppx.ml[126,3885+4]..[126,3885+62])
                  Pexp_apply
                  expression (src/ppx.ml[126,3885+5]..[126,3885+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3885+5]..[126,3885+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3885+19]..[126,3885+61])
                        Pexp_apply
                        expression (src/ppx.ml[126,3885+20]..[126,3885+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3885+20]..[126,3885+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3885+35]..[126,3885+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[126,3885+36]..[126,3885+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3885+37]..[126,3885+55]),None)
                                expression (src/ppx.ml[126,3885+57]..[126,3885+58])
                                  Pexp_ident "a" (src/ppx.ml[126,3885+57]..[126,3885+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,4093+4]..[129,4093+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[129,4093+4]..[129,4093+18])
                  Some
                    []
                    pattern (src/ppx.ml[129,4093+19]..[129,4093+20])
                      Ppat_var "a" (src/ppx.ml[129,4093+19]..[129,4093+20])
                expression (src/ppx.ml[130,4141+4]..[130,4141+65])
                  Pexp_apply
                  expression (src/ppx.ml[130,4141+5]..[130,4141+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,4141+5]..[130,4141+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,4141+19]..[130,4141+64])
                        Pexp_apply
                        expression (src/ppx.ml[130,4141+20]..[130,4141+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,4141+20]..[130,4141+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,4141+35]..[130,4141+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[130,4141+36]..[130,4141+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4141+37]..[130,4141+58]),None)
                                expression (src/ppx.ml[130,4141+60]..[130,4141+61])
                                  Pexp_ident "a" (src/ppx.ml[130,4141+60]..[130,4141+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[132,4211+2]..[132,4211+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[132,4211+2]..[132,4211+26])
        expression (src/ppx.ml[132,4211+26]..[138,4348+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[132,4211+26]..[132,4211+29])
            Ppat_var "x" (src/ppx.ml[132,4211+27]..[132,4211+28])
          expression (src/ppx.ml[133,4243+2]..[138,4348+6])
            Pexp_match
            expression (src/ppx.ml[133,4243+8]..[133,4243+9])
              Pexp_ident "x" (src/ppx.ml[133,4243+8]..[133,4243+9])
            [
              <case>
                pattern (src/ppx.ml[134,4258+4]..[134,4258+6])
                  Ppat_construct "[]" (src/ppx.ml[134,4258+4]..[134,4258+6])
                  None
                expression (src/ppx.ml[134,4258+10]..[134,4258+12])
                  Pexp_construct "()" (src/ppx.ml[134,4258+10]..[134,4258+12])
                  None
              <case>
                pattern (src/ppx.ml[135,4271+4]..[135,4271+10])
                  Ppat_construct "::" (src/ppx.ml[135,4271+6]..[135,4271+8])
                  Some
                    []
                    pattern (src/ppx.ml[135,4271+4]..[135,4271+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4271+4]..[135,4271+5])
                          Ppat_var "h" (src/ppx.ml[135,4271+4]..[135,4271+5])
                        pattern (src/ppx.ml[135,4271+9]..[135,4271+10])
                          Ppat_var "t" (src/ppx.ml[135,4271+9]..[135,4271+10])
                      ]
                expression (src/ppx.ml[136,4285+4]..[138,4348+6])
                  Pexp_sequence
                  expression (src/ppx.ml[136,4285+4]..[136,4285+27])
                    Pexp_apply
                    expression (src/ppx.ml[136,4285+5]..[136,4285+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[136,4285+5]..[136,4285+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[136,4285+25]..[136,4285+26])
                          Pexp_ident "h" (src/ppx.ml[136,4285+25]..[136,4285+26])
                    ]
                  expression (src/ppx.ml[137,4314+4]..[138,4348+6])
                    Pexp_sequence
                    expression (src/ppx.ml[137,4314+4]..[137,4314+32])
                      Pexp_apply
                      expression (src/ppx.ml[137,4314+5]..[137,4314+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[137,4314+5]..[137,4314+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[137,4314+30]..[137,4314+31])
                            Pexp_ident "t" (src/ppx.ml[137,4314+30]..[137,4314+31])
                      ]
                    expression (src/ppx.ml[138,4348+4]..[138,4348+6])
                      Pexp_construct "()" (src/ppx.ml[138,4348+4]..[138,4348+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[140,4359+0]..[140,4359+17])
          Ppat_var "process_core_type" (src/ppx.ml[140,4359+0]..[140,4359+17])
        expression (src/ppx.ml[140,4359+17]..[150,4626+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4359+17]..[140,4359+20])
            Ppat_var "x" (src/ppx.ml[140,4359+18]..[140,4359+19])
          expression (src/ppx.ml[141,4382+2]..[150,4626+80])
            Pexp_match
            expression (src/ppx.ml[141,4382+8]..[141,4382+9])
              Pexp_ident "x" (src/ppx.ml[141,4382+8]..[141,4382+9])
            [
              <case>
                pattern (src/ppx.ml[142,4398+4]..[147,4559+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[143,4404+6]..[143,4404+15]) ghost
                      pattern (src/ppx.ml[143,4404+6]..[143,4404+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[143,4404+6]..[143,4404+15])
                    "ptyp_loc" (src/ppx.ml[144,4443+5]..[144,4443+13]) ghost
                      pattern (src/ppx.ml[144,4443+5]..[144,4443+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[144,4443+5]..[144,4443+13])
                    "ptyp_loc_stack" (src/ppx.ml[145,4476+5]..[145,4476+19]) ghost
                      pattern (src/ppx.ml[145,4476+5]..[145,4476+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[145,4476+5]..[145,4476+19])
                    "ptyp_attributes" (src/ppx.ml[146,4519+5]..[146,4519+20]) ghost
                      pattern (src/ppx.ml[146,4519+5]..[146,4519+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[146,4519+5]..[146,4519+20])
                  ]
                expression (src/ppx.ml[148,4567+4]..[150,4626+80])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4567+4]..[148,4567+38])
                    Pexp_apply
                    expression (src/ppx.ml[148,4567+5]..[148,4567+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[148,4567+5]..[148,4567+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4567+28]..[148,4567+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[148,4567+28]..[148,4567+37])
                    ]
                  expression (src/ppx.ml[150,4626+4]..[150,4626+80])
                    Pexp_apply
                    expression (src/ppx.ml[150,4626+5]..[150,4626+18])
                      Pexp_ident "print_endline" (src/ppx.ml[150,4626+5]..[150,4626+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4626+19]..[150,4626+79])
                          Pexp_apply
                          expression (src/ppx.ml[150,4626+20]..[150,4626+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[150,4626+20]..[150,4626+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[150,4626+35]..[150,4626+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[150,4626+36]..[150,4626+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4626+37]..[150,4626+63]),None)
                                  expression (src/ppx.ml[150,4626+68]..[150,4626+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[150,4626+68]..[150,4626+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[151,4707+4]..[151,4707+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[151,4707+4]..[151,4707+26])
        expression (src/ppx.ml[151,4707+26]..[156,4823+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4707+26]..[151,4707+44])
            Ppat_constraint
            pattern (src/ppx.ml[151,4707+27]..[151,4707+28])
              Ppat_var "x" (src/ppx.ml[151,4707+27]..[151,4707+28])
            core_type (src/ppx.ml[151,4707+29]..[151,4707+43])
              Ptyp_constr "list" (src/ppx.ml[151,4707+39]..[151,4707+43])
              [
                core_type (src/ppx.ml[151,4707+29]..[151,4707+38])
                  Ptyp_constr "core_type" (src/ppx.ml[151,4707+29]..[151,4707+38])
                  []
              ]
          expression (src/ppx.ml[152,4754+2]..[156,4823+29])
            Pexp_match
            expression (src/ppx.ml[152,4754+8]..[152,4754+9])
              Pexp_ident "x" (src/ppx.ml[152,4754+8]..[152,4754+9])
            [
              <case>
                pattern (src/ppx.ml[153,4769+4]..[153,4769+6])
                  Ppat_construct "[]" (src/ppx.ml[153,4769+4]..[153,4769+6])
                  None
                expression (src/ppx.ml[153,4769+10]..[153,4769+12])
                  Pexp_construct "()" (src/ppx.ml[153,4769+10]..[153,4769+12])
                  None
              <case>
                pattern (src/ppx.ml[154,4782+4]..[154,4782+10])
                  Ppat_construct "::" (src/ppx.ml[154,4782+6]..[154,4782+8])
                  Some
                    []
                    pattern (src/ppx.ml[154,4782+4]..[154,4782+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[154,4782+4]..[154,4782+5])
                          Ppat_var "h" (src/ppx.ml[154,4782+4]..[154,4782+5])
                        pattern (src/ppx.ml[154,4782+9]..[154,4782+10])
                          Ppat_var "t" (src/ppx.ml[154,4782+9]..[154,4782+10])
                      ]
                expression (src/ppx.ml[155,4796+4]..[156,4823+29])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4796+4]..[155,4796+25])
                    Pexp_apply
                    expression (src/ppx.ml[155,4796+4]..[155,4796+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[155,4796+4]..[155,4796+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4796+22]..[155,4796+25])
                          Pexp_ident "h" (src/ppx.ml[155,4796+23]..[155,4796+24])
                    ]
                  expression (src/ppx.ml[156,4823+4]..[156,4823+29])
                    Pexp_apply
                    expression (src/ppx.ml[156,4823+4]..[156,4823+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[156,4823+4]..[156,4823+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4823+26]..[156,4823+29])
                          Pexp_ident "t" (src/ppx.ml[156,4823+27]..[156,4823+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[163,4867+0]..[170,5066+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4867+4]..[163,4867+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[163,4867+4]..[163,4867+31])
        expression (src/ppx.ml[163,4867+31]..[170,5066+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[163,4867+31]..[163,4867+34])
            Ppat_var "x" (src/ppx.ml[163,4867+32]..[163,4867+33])
          expression (src/ppx.ml[164,4904+2]..[170,5066+65])
            Pexp_match
            expression (src/ppx.ml[164,4904+8]..[164,4904+9])
              Pexp_ident "x" (src/ppx.ml[164,4904+8]..[164,4904+9])
            [
              <case>
                pattern (src/ppx.ml[165,4919+4]..[165,4919+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[165,4919+4]..[165,4919+15])
                  Some
                    []
                    pattern (src/ppx.ml[165,4919+16]..[165,4919+17])
                      Ppat_var "a" (src/ppx.ml[165,4919+16]..[165,4919+17])
                expression (src/ppx.ml[166,4940+4]..[167,4972+64])
                  Pexp_sequence
                  expression (src/ppx.ml[166,4940+4]..[166,4940+30])
                    Pexp_apply
                    expression (src/ppx.ml[166,4940+5]..[166,4940+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,4940+5]..[166,4940+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,4940+28]..[166,4940+29])
                          Pexp_ident "a" (src/ppx.ml[166,4940+28]..[166,4940+29])
                    ]
                  expression (src/ppx.ml[167,4972+4]..[167,4972+64])
                    Pexp_apply
                    expression (src/ppx.ml[167,4972+5]..[167,4972+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,4972+5]..[167,4972+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,4972+19]..[167,4972+63])
                          Pexp_apply
                          expression (src/ppx.ml[167,4972+20]..[167,4972+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,4972+20]..[167,4972+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,4972+35]..[167,4972+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,4972+36]..[167,4972+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,4972+37]..[167,4972+55]),None)
                                  expression (src/ppx.ml[167,4972+60]..[167,4972+61])
                                    Pexp_ident "a" (src/ppx.ml[167,4972+60]..[167,4972+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[169,5044+4]..[169,5044+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[169,5044+4]..[169,5044+16])
                  Some
                    []
                    pattern (src/ppx.ml[169,5044+17]..[169,5044+18])
                      Ppat_var "a" (src/ppx.ml[169,5044+17]..[169,5044+18])
                expression (src/ppx.ml[170,5066+4]..[170,5066+65])
                  Pexp_apply
                  expression (src/ppx.ml[170,5066+5]..[170,5066+18])
                    Pexp_ident "print_endline" (src/ppx.ml[170,5066+5]..[170,5066+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[170,5066+19]..[170,5066+64])
                        Pexp_apply
                        expression (src/ppx.ml[170,5066+20]..[170,5066+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[170,5066+20]..[170,5066+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[170,5066+35]..[170,5066+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[170,5066+36]..[170,5066+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5066+37]..[170,5066+56]),None)
                                expression (src/ppx.ml[170,5066+61]..[170,5066+62])
                                  Pexp_ident "a" (src/ppx.ml[170,5066+61]..[170,5066+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[172,5133+0]..[204,6109+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5133+8]..[172,5133+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[172,5133+8]..[172,5133+57])
        expression (src/ppx.ml[172,5133+57]..[204,6109+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5133+57]..[172,5133+60])
            Ppat_var "x" (src/ppx.ml[172,5133+58]..[172,5133+59])
          expression (src/ppx.ml[173,5196+2]..[204,6109+8])
            Pexp_match
            expression (src/ppx.ml[173,5196+8]..[173,5196+9])
              Pexp_ident "x" (src/ppx.ml[173,5196+8]..[173,5196+9])
            [
              <case>
                pattern (src/ppx.ml[174,5211+4]..[174,5211+6])
                  Ppat_construct "[]" (src/ppx.ml[174,5211+4]..[174,5211+6])
                  None
                expression (src/ppx.ml[174,5211+10]..[174,5211+12])
                  Pexp_construct "()" (src/ppx.ml[174,5211+10]..[174,5211+12])
                  None
              <case>
                pattern (src/ppx.ml[175,5224+4]..[175,5224+10])
                  Ppat_construct "::" (src/ppx.ml[175,5224+6]..[175,5224+8])
                  Some
                    []
                    pattern (src/ppx.ml[175,5224+4]..[175,5224+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[175,5224+4]..[175,5224+5])
                          Ppat_var "h" (src/ppx.ml[175,5224+4]..[175,5224+5])
                        pattern (src/ppx.ml[175,5224+9]..[175,5224+10])
                          Ppat_var "t" (src/ppx.ml[175,5224+9]..[175,5224+10])
                      ]
                expression (src/ppx.ml[177,5303+4]..[204,6109+8])
                  Pexp_match
                  expression (src/ppx.ml[177,5303+10]..[177,5303+11])
                    Pexp_ident "h" (src/ppx.ml[177,5303+10]..[177,5303+11])
                  [
                    <case>
                      pattern (src/ppx.ml[178,5320+5]..[185,5558+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[179,5327+6]..[179,5327+14]) ghost
                            pattern (src/ppx.ml[179,5327+6]..[179,5327+14])
                              Ppat_var "pcd_name" (src/ppx.ml[179,5327+6]..[179,5327+14])
                          "pcd_vars" (src/ppx.ml[180,5361+6]..[180,5361+14]) ghost
                            pattern (src/ppx.ml[180,5361+6]..[180,5361+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[180,5361+6]..[180,5361+14])
                          "pcd_args" (src/ppx.ml[181,5400+6]..[181,5400+14]) ghost
                            pattern (src/ppx.ml[181,5400+6]..[181,5400+14])
                              Ppat_var "pcd_args" (src/ppx.ml[181,5400+6]..[181,5400+14])
                          "pcd_res" (src/ppx.ml[182,5445+6]..[182,5445+13]) ghost
                            pattern (src/ppx.ml[182,5445+6]..[182,5445+13])
                              Ppat_var "pcd_res" (src/ppx.ml[182,5445+6]..[182,5445+13])
                          "pcd_loc" (src/ppx.ml[183,5484+6]..[183,5484+13]) ghost
                            pattern (src/ppx.ml[183,5484+6]..[183,5484+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[183,5484+6]..[183,5484+13])
                          "pcd_attributes" (src/ppx.ml[184,5517+6]..[184,5517+20]) ghost
                            pattern (src/ppx.ml[184,5517+6]..[184,5517+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[184,5517+6]..[184,5517+20])
                        ]
                      expression (src/ppx.ml[188,5640+6]..[204,6109+8])
                        Pexp_sequence
                        expression (src/ppx.ml[188,5640+6]..[188,5640+43])
                          Pexp_apply
                          expression (src/ppx.ml[188,5640+6]..[188,5640+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[188,5640+6]..[188,5640+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[188,5640+33]..[188,5640+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[188,5640+34]..[188,5640+42])
                          ]
                        expression (src/ppx.ml[189,5685+6]..[204,6109+8])
                          Pexp_sequence
                          expression (src/ppx.ml[189,5685+6]..[202,6030+16])
                            Pexp_apply
                            expression (src/ppx.ml[189,5685+7]..[189,5685+20])
                              Pexp_ident "print_endline" (src/ppx.ml[189,5685+7]..[189,5685+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[189,5685+21]..[202,6030+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[189,5685+22]..[189,5685+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[189,5685+22]..[189,5685+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[189,5685+37]..[202,6030+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[190,5724+11]..[190,5724+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[190,5724+12]..[190,5724+36]),None)
                                          expression (src/ppx.ml[191,5763+15]..[191,5763+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[191,5763+15]..[191,5763+23])
                                          expression (src/ppx.ml[192,5788+15]..[192,5788+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[192,5788+16]..[192,5788+20]),None)
                                          expression (src/ppx.ml[193,5811+15]..[193,5811+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[193,5811+15]..[193,5811+23])
                                          expression (src/ppx.ml[194,5836+15]..[194,5836+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[194,5836+16]..[194,5836+20]),None)
                                          expression (src/ppx.ml[195,5859+15]..[195,5859+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[195,5859+15]..[195,5859+23])
                                          expression (src/ppx.ml[196,5884+15]..[196,5884+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[196,5884+16]..[196,5884+19]),None)
                                          expression (src/ppx.ml[197,5906+15]..[197,5906+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[197,5906+15]..[197,5906+22])
                                          expression (src/ppx.ml[198,5930+15]..[198,5930+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[198,5930+16]..[198,5930+19]),None)
                                          expression (src/ppx.ml[199,5952+15]..[199,5952+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[199,5952+15]..[199,5952+22])
                                          expression (src/ppx.ml[200,5976+15]..[200,5976+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[200,5976+16]..[200,5976+21]),None)
                                          expression (src/ppx.ml[201,6000+15]..[201,6000+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[201,6000+15]..[201,6000+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[203,6048+6]..[204,6109+8])
                            Pexp_sequence
                            expression (src/ppx.ml[203,6048+6]..[203,6048+59])
                              Pexp_apply
                              expression (src/ppx.ml[203,6048+7]..[203,6048+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[203,6048+7]..[203,6048+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[203,6048+57]..[203,6048+58])
                                    Pexp_ident "t" (src/ppx.ml[203,6048+57]..[203,6048+58])
                              ]
                            expression (src/ppx.ml[204,6109+6]..[204,6109+8])
                              Pexp_construct "()" (src/ppx.ml[204,6109+6]..[204,6109+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[206,6121+0]..[217,6518+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6121+4]..[206,6121+16])
          Ppat_var "process_kind" (src/ppx.ml[206,6121+4]..[206,6121+16])
        expression (src/ppx.ml[206,6121+16]..[217,6518+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[206,6121+16]..[206,6121+19])
            Ppat_var "x" (src/ppx.ml[206,6121+17]..[206,6121+18])
          expression (src/ppx.ml[207,6143+2]..[217,6518+77])
            Pexp_match
            expression (src/ppx.ml[207,6143+8]..[207,6143+9])
              Pexp_ident "x" (src/ppx.ml[207,6143+8]..[207,6143+9])
            [
              <case>
                pattern (src/ppx.ml[209,6180+4]..[209,6180+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[209,6180+4]..[209,6180+18])
                  None
                expression (src/ppx.ml[209,6180+23]..[209,6180+81])
                  Pexp_apply
                  expression (src/ppx.ml[209,6180+24]..[209,6180+37])
                    Pexp_ident "print_endline" (src/ppx.ml[209,6180+24]..[209,6180+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6180+38]..[209,6180+80])
                        Pexp_apply
                        expression (src/ppx.ml[209,6180+39]..[209,6180+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[209,6180+39]..[209,6180+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[209,6180+54]..[209,6180+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6180+56]..[209,6180+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[210,6262+4]..[210,6262+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[210,6262+4]..[210,6262+17])
                  Some
                    []
                    pattern (src/ppx.ml[210,6262+18]..[210,6262+19])
                      Ppat_var "a" (src/ppx.ml[210,6262+18]..[210,6262+19])
                expression (src/ppx.ml[211,6285+4]..[212,6344+65])
                  Pexp_sequence
                  expression (src/ppx.ml[211,6285+4]..[211,6285+57])
                    Pexp_apply
                    expression (src/ppx.ml[211,6285+5]..[211,6285+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[211,6285+5]..[211,6285+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[211,6285+55]..[211,6285+56])
                          Pexp_ident "a" (src/ppx.ml[211,6285+55]..[211,6285+56])
                    ]
                  expression (src/ppx.ml[212,6344+4]..[212,6344+65])
                    Pexp_apply
                    expression (src/ppx.ml[212,6344+5]..[212,6344+18])
                      Pexp_ident "print_endline" (src/ppx.ml[212,6344+5]..[212,6344+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[212,6344+19]..[212,6344+64])
                          Pexp_apply
                          expression (src/ppx.ml[212,6344+20]..[212,6344+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[212,6344+20]..[212,6344+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[212,6344+35]..[212,6344+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[212,6344+36]..[212,6344+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6344+37]..[212,6344+57]),None)
                                  expression (src/ppx.ml[212,6344+61]..[212,6344+62])
                                    Pexp_ident "a" (src/ppx.ml[212,6344+61]..[212,6344+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[215,6457+5]..[215,6457+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[215,6457+5]..[215,6457+17])
                  Some
                    []
                    pattern (src/ppx.ml[215,6457+18]..[215,6457+19])
                      Ppat_var "a" (src/ppx.ml[215,6457+18]..[215,6457+19])
                expression (src/ppx.ml[216,6485+5]..[216,6485+32])
                  Pexp_apply
                  expression (src/ppx.ml[216,6485+5]..[216,6485+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[216,6485+5]..[216,6485+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[216,6485+29]..[216,6485+32])
                        Pexp_ident "a" (src/ppx.ml[216,6485+30]..[216,6485+31])
                  ]
              <case>
                pattern (src/ppx.ml[217,6518+5]..[217,6518+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[217,6518+5]..[217,6518+15])
                  None
                expression (src/ppx.ml[217,6518+19]..[217,6518+77])
                  Pexp_apply
                  expression (src/ppx.ml[217,6518+20]..[217,6518+33])
                    Pexp_ident "print_endline" (src/ppx.ml[217,6518+20]..[217,6518+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[217,6518+34]..[217,6518+76])
                        Pexp_apply
                        expression (src/ppx.ml[217,6518+35]..[217,6518+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[217,6518+35]..[217,6518+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[217,6518+50]..[217,6518+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6518+52]..[217,6518+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6597+0]..[240,7603+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6597+4]..[219,6597+19])
          Ppat_var "print_type_decl" (src/ppx.ml[219,6597+4]..[219,6597+19])
        expression (src/ppx.ml[219,6597+19]..[240,7603+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6597+19]..[219,6597+22])
            Ppat_var "x" (src/ppx.ml[219,6597+20]..[219,6597+21])
          expression (src/ppx.ml[220,6622+2]..[240,7603+38])
            Pexp_match
            expression (src/ppx.ml[220,6622+8]..[220,6622+9])
              Pexp_ident "x" (src/ppx.ml[220,6622+8]..[220,6622+9])
            [
              <case>
                pattern (src/ppx.ml[221,6637+4]..[230,7018+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[222,6643+6]..[222,6643+16]) ghost
                      pattern (src/ppx.ml[222,6643+6]..[222,6643+16])
                        Ppat_var "ptype_name" (src/ppx.ml[222,6643+6]..[222,6643+16])
                    "ptype_params" (src/ppx.ml[223,6680+6]..[223,6680+18]) ghost
                      pattern (src/ppx.ml[223,6680+6]..[223,6680+18])
                        Ppat_var "ptype_params" (src/ppx.ml[223,6680+6]..[223,6680+18])
                    "ptype_cstrs" (src/ppx.ml[224,6752+6]..[224,6752+17]) ghost
                      pattern (src/ppx.ml[224,6752+6]..[224,6752+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[224,6752+6]..[224,6752+17])
                    "ptype_kind" (src/ppx.ml[225,6821+6]..[225,6821+16]) ghost
                      pattern (src/ppx.ml[225,6821+6]..[225,6821+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[225,6821+6]..[225,6821+16])
                    "ptype_private" (src/ppx.ml[226,6858+6]..[226,6858+19]) ghost
                      pattern (src/ppx.ml[226,6858+6]..[226,6858+19])
                        Ppat_var "ptype_private" (src/ppx.ml[226,6858+6]..[226,6858+19])
                    "ptype_manifest" (src/ppx.ml[227,6899+6]..[227,6899+20]) ghost
                      pattern (src/ppx.ml[227,6899+6]..[227,6899+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[227,6899+6]..[227,6899+20])
                    "ptype_attributes" (src/ppx.ml[228,6946+6]..[228,6946+22]) ghost
                      pattern (src/ppx.ml[228,6946+6]..[228,6946+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[228,6946+6]..[228,6946+22])
                    "ptype_loc" (src/ppx.ml[229,6987+6]..[229,6987+15]) ghost
                      pattern (src/ppx.ml[229,6987+6]..[229,6987+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[229,6987+6]..[229,6987+15])
                  ]
                expression (src/ppx.ml[231,7027+4]..[240,7603+38])
                  Pexp_sequence
                  expression (src/ppx.ml[231,7027+4]..[231,7027+69])
                    Pexp_apply
                    expression (src/ppx.ml[231,7027+5]..[231,7027+18])
                      Pexp_ident "print_endline" (src/ppx.ml[231,7027+5]..[231,7027+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[231,7027+19]..[231,7027+68])
                          Pexp_apply
                          expression (src/ppx.ml[231,7027+20]..[231,7027+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[231,7027+20]..[231,7027+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[231,7027+35]..[231,7027+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[231,7027+36]..[231,7027+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[231,7027+37]..[231,7027+53]),None)
                                  expression (src/ppx.ml[231,7027+56]..[231,7027+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[231,7027+56]..[231,7027+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[232,7098+4]..[240,7603+38])
                    Pexp_sequence
                    expression (src/ppx.ml[232,7098+4]..[232,7098+72])
                      Pexp_apply
                      expression (src/ppx.ml[232,7098+5]..[232,7098+18])
                        Pexp_ident "print_endline" (src/ppx.ml[232,7098+5]..[232,7098+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[232,7098+19]..[232,7098+71])
                            Pexp_apply
                            expression (src/ppx.ml[232,7098+20]..[232,7098+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[232,7098+20]..[232,7098+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[232,7098+35]..[232,7098+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[232,7098+36]..[232,7098+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[232,7098+37]..[232,7098+54]),None)
                                    expression (src/ppx.ml[232,7098+57]..[232,7098+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[232,7098+57]..[232,7098+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[233,7172+4]..[240,7603+38])
                      Pexp_sequence
                      expression (src/ppx.ml[233,7172+4]..[233,7172+66])
                        Pexp_apply
                        expression (src/ppx.ml[233,7172+5]..[233,7172+18])
                          Pexp_ident "print_endline" (src/ppx.ml[233,7172+5]..[233,7172+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[233,7172+19]..[233,7172+65])
                              Pexp_apply
                              expression (src/ppx.ml[233,7172+20]..[233,7172+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[233,7172+20]..[233,7172+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[233,7172+35]..[233,7172+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[233,7172+36]..[233,7172+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[233,7172+37]..[233,7172+49]),None)
                                      expression (src/ppx.ml[233,7172+52]..[233,7172+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[233,7172+52]..[233,7172+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7240+4]..[240,7603+38])
                        Pexp_sequence
                        expression (src/ppx.ml[234,7240+4]..[234,7240+63])
                          Pexp_apply
                          expression (src/ppx.ml[234,7240+5]..[234,7240+18])
                            Pexp_ident "print_endline" (src/ppx.ml[234,7240+5]..[234,7240+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[234,7240+19]..[234,7240+62])
                                Pexp_apply
                                expression (src/ppx.ml[234,7240+20]..[234,7240+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[234,7240+20]..[234,7240+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[234,7240+35]..[234,7240+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[234,7240+36]..[234,7240+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[234,7240+37]..[234,7240+48]),None)
                                        expression (src/ppx.ml[234,7240+50]..[234,7240+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[234,7240+50]..[234,7240+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7305+4]..[240,7603+38])
                          Pexp_sequence
                          expression (src/ppx.ml[235,7305+4]..[235,7305+29])
                            Pexp_apply
                            expression (src/ppx.ml[235,7305+5]..[235,7305+17])
                              Pexp_ident "process_kind" (src/ppx.ml[235,7305+5]..[235,7305+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[235,7305+18]..[235,7305+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[235,7305+18]..[235,7305+28])
                            ]
                          expression (src/ppx.ml[236,7336+4]..[240,7603+38])
                            Pexp_apply
                            expression (src/ppx.ml[236,7336+5]..[236,7336+18])
                              Pexp_ident "print_endline" (src/ppx.ml[236,7336+5]..[236,7336+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[236,7336+19]..[240,7603+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[236,7336+20]..[236,7336+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[236,7336+20]..[236,7336+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[236,7336+35]..[240,7603+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[236,7336+36]..[236,7336+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[236,7336+37]..[236,7336+51]),None)
                                          expression (src/ppx.ml[236,7336+55]..[236,7336+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[236,7336+55]..[236,7336+68])
                                          expression (src/ppx.ml[237,7406+36]..[237,7406+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[237,7406+37]..[237,7406+51]),None)
                                          expression (src/ppx.ml[237,7406+54]..[237,7406+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[237,7406+54]..[237,7406+68])
                                          expression (src/ppx.ml[238,7476+36]..[238,7476+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[238,7476+37]..[238,7476+47]),None)
                                          expression (src/ppx.ml[238,7476+50]..[238,7476+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[238,7476+50]..[238,7476+66])
                                          expression (src/ppx.ml[239,7544+36]..[239,7544+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[239,7544+37]..[239,7544+46]),None)
                                          expression (src/ppx.ml[239,7544+49]..[239,7544+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[239,7544+49]..[239,7544+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[242,7647+0]..[248,7782+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7647+8]..[242,7647+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[242,7647+8]..[242,7647+30])
        expression (src/ppx.ml[242,7647+30]..[248,7782+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[242,7647+30]..[242,7647+33])
            Ppat_var "x" (src/ppx.ml[242,7647+31]..[242,7647+32])
          expression (src/ppx.ml[243,7683+2]..[248,7782+6])
            Pexp_match
            expression (src/ppx.ml[243,7683+8]..[243,7683+9])
              Pexp_ident "x" (src/ppx.ml[243,7683+8]..[243,7683+9])
            [
              <case>
                pattern (src/ppx.ml[244,7698+4]..[244,7698+6])
                  Ppat_construct "[]" (src/ppx.ml[244,7698+4]..[244,7698+6])
                  None
                expression (src/ppx.ml[244,7698+10]..[244,7698+12])
                  Pexp_construct "()" (src/ppx.ml[244,7698+10]..[244,7698+12])
                  None
              <case>
                pattern (src/ppx.ml[245,7711+4]..[245,7711+10])
                  Ppat_construct "::" (src/ppx.ml[245,7711+6]..[245,7711+8])
                  Some
                    []
                    pattern (src/ppx.ml[245,7711+4]..[245,7711+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[245,7711+4]..[245,7711+5])
                          Ppat_var "h" (src/ppx.ml[245,7711+4]..[245,7711+5])
                        pattern (src/ppx.ml[245,7711+9]..[245,7711+10])
                          Ppat_var "t" (src/ppx.ml[245,7711+9]..[245,7711+10])
                      ]
                expression (src/ppx.ml[246,7725+4]..[248,7782+6])
                  Pexp_sequence
                  expression (src/ppx.ml[246,7725+4]..[246,7725+23])
                    Pexp_apply
                    expression (src/ppx.ml[246,7725+5]..[246,7725+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[246,7725+5]..[246,7725+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[246,7725+21]..[246,7725+22])
                          Pexp_ident "h" (src/ppx.ml[246,7725+21]..[246,7725+22])
                    ]
                  expression (src/ppx.ml[247,7750+4]..[248,7782+6])
                    Pexp_sequence
                    expression (src/ppx.ml[247,7750+4]..[247,7750+30])
                      Pexp_apply
                      expression (src/ppx.ml[247,7750+5]..[247,7750+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[247,7750+5]..[247,7750+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[247,7750+28]..[247,7750+29])
                            Pexp_ident "t" (src/ppx.ml[247,7750+28]..[247,7750+29])
                      ]
                    expression (src/ppx.ml[248,7782+4]..[248,7782+6])
                      Pexp_construct "()" (src/ppx.ml[248,7782+4]..[248,7782+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[250,7794+0]..[276,9758+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7794+4]..[250,7794+13])
          Ppat_var "printdesc" (src/ppx.ml[250,7794+4]..[250,7794+13])
        expression (src/ppx.ml[250,7794+13]..[276,9758+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[250,7794+13]..[250,7794+37])
            Ppat_constraint
            pattern (src/ppx.ml[250,7794+14]..[250,7794+15])
              Ppat_var "x" (src/ppx.ml[250,7794+14]..[250,7794+15])
            core_type (src/ppx.ml[250,7794+17]..[250,7794+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[250,7794+17]..[250,7794+36])
              []
          expression (src/ppx.ml[250,7794+38]..[276,9758+128])
            Pexp_constraint
            expression (src/ppx.ml[251,7840+2]..[276,9758+128])
              Pexp_sequence
              expression (src/ppx.ml[251,7840+2]..[251,7840+68])
                Pexp_apply
                expression (src/ppx.ml[251,7840+3]..[251,7840+16])
                  Pexp_ident "print_endline" (src/ppx.ml[251,7840+3]..[251,7840+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[251,7840+17]..[251,7840+67])
                      Pexp_apply
                      expression (src/ppx.ml[251,7840+18]..[251,7840+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[251,7840+18]..[251,7840+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7840+33]..[251,7840+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[251,7840+34]..[251,7840+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7840+35]..[251,7840+61]),None)
                              expression (src/ppx.ml[251,7840+64]..[251,7840+65])
                                Pexp_ident "x" (src/ppx.ml[251,7840+64]..[251,7840+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[252,7910+2]..[276,9758+128])
                Pexp_match
                expression (src/ppx.ml[252,7910+8]..[252,7910+9])
                  Pexp_ident "x" (src/ppx.ml[252,7910+8]..[252,7910+9])
                [
                  <case>
                    pattern (src/ppx.ml[253,7925+4]..[253,7925+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[253,7925+4]..[253,7925+13])
                      Some
                        []
                        pattern (src/ppx.ml[253,7925+14]..[253,7925+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,7925+15]..[253,7925+25])
                              Ppat_var "expression" (src/ppx.ml[253,7925+15]..[253,7925+25])
                            pattern (src/ppx.ml[253,7925+26]..[253,7925+36])
                              Ppat_var "attributes" (src/ppx.ml[253,7925+26]..[253,7925+36])
                          ]
                    expression (src/ppx.ml[253,7925+41]..[253,7925+117])
                      Pexp_apply
                      expression (src/ppx.ml[253,7925+42]..[253,7925+55])
                        Pexp_ident "print_endline" (src/ppx.ml[253,7925+42]..[253,7925+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7925+56]..[253,7925+116])
                            Pexp_apply
                            expression (src/ppx.ml[253,7925+57]..[253,7925+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,7925+57]..[253,7925+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7925+72]..[253,7925+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,7925+73]..[253,7925+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7925+74]..[253,7925+90]),None)
                                    expression (src/ppx.ml[253,7925+93]..[253,7925+103])
                                      Pexp_ident "expression" (src/ppx.ml[253,7925+93]..[253,7925+103])
                                    expression (src/ppx.ml[253,7925+104]..[253,7925+114])
                                      Pexp_ident "attributes" (src/ppx.ml[253,7925+104]..[253,7925+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8063+4]..[255,8063+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[255,8063+4]..[255,8063+14])
                      Some
                        []
                        pattern (src/ppx.ml[255,8063+15]..[255,8063+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8063+16]..[255,8063+24])
                              Ppat_var "rec_flag" (src/ppx.ml[255,8063+16]..[255,8063+24])
                            pattern (src/ppx.ml[255,8063+26]..[255,8063+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[255,8063+26]..[255,8063+44])
                          ]
                    expression (src/ppx.ml[255,8063+48]..[256,8197+48])
                      Pexp_sequence
                      expression (src/ppx.ml[255,8063+48]..[255,8063+132])
                        Pexp_apply
                        expression (src/ppx.ml[255,8063+49]..[255,8063+62])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8063+49]..[255,8063+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8063+63]..[255,8063+131])
                              Pexp_apply
                              expression (src/ppx.ml[255,8063+64]..[255,8063+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8063+64]..[255,8063+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8063+79]..[255,8063+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8063+80]..[255,8063+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8063+81]..[255,8063+98]),None)
                                      expression (src/ppx.ml[255,8063+101]..[255,8063+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8063+101]..[255,8063+109])
                                      expression (src/ppx.ml[255,8063+111]..[255,8063+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[255,8063+111]..[255,8063+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[256,8197+4]..[256,8197+48])
                        Pexp_apply
                        expression (src/ppx.ml[256,8197+4]..[256,8197+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[256,8197+4]..[256,8197+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[256,8197+28]..[256,8197+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[256,8197+29]..[256,8197+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[257,8246+4]..[257,8246+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[257,8246+4]..[257,8246+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8246+19]..[257,8246+36])
                          Ppat_var "value_description" (src/ppx.ml[257,8246+19]..[257,8246+36])
                    expression (src/ppx.ml[257,8246+39]..[257,8246+116])
                      Pexp_apply
                      expression (src/ppx.ml[257,8246+40]..[257,8246+53])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8246+40]..[257,8246+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8246+54]..[257,8246+115])
                            Pexp_apply
                            expression (src/ppx.ml[257,8246+55]..[257,8246+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8246+55]..[257,8246+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8246+70]..[257,8246+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8246+71]..[257,8246+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8246+72]..[257,8246+93]),None)
                                    expression (src/ppx.ml[257,8246+96]..[257,8246+113])
                                      Pexp_ident "value_description" (src/ppx.ml[257,8246+96]..[257,8246+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8364+4]..[259,8364+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[259,8364+4]..[259,8364+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8364+14]..[259,8364+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[259,8364+15]..[259,8364+23])
                              Ppat_var "rec_flag" (src/ppx.ml[259,8364+15]..[259,8364+23])
                            pattern (src/ppx.ml[259,8364+25]..[259,8364+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[259,8364+25]..[259,8364+46])
                          ]
                    expression (src/ppx.ml[261,8443+4]..[262,8494+90])
                      Pexp_sequence
                      expression (src/ppx.ml[261,8443+4]..[261,8443+49])
                        Pexp_apply
                        expression (src/ppx.ml[261,8443+4]..[261,8443+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[261,8443+4]..[261,8443+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[261,8443+26]..[261,8443+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[261,8443+27]..[261,8443+48])
                        ]
                      expression (src/ppx.ml[262,8494+4]..[262,8494+90])
                        Pexp_apply
                        expression (src/ppx.ml[262,8494+5]..[262,8494+18])
                          Pexp_ident "print_endline" (src/ppx.ml[262,8494+5]..[262,8494+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[262,8494+19]..[262,8494+89])
                              Pexp_apply
                              expression (src/ppx.ml[262,8494+20]..[262,8494+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[262,8494+20]..[262,8494+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[262,8494+35]..[262,8494+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[262,8494+36]..[262,8494+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8494+37]..[262,8494+53]),None)
                                      expression (src/ppx.ml[262,8494+56]..[262,8494+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[262,8494+56]..[262,8494+64])
                                      expression (src/ppx.ml[262,8494+66]..[262,8494+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[262,8494+66]..[262,8494+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[265,8587+4]..[265,8587+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[265,8587+4]..[265,8587+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8587+17]..[265,8587+31])
                          Ppat_var "type_extension" (src/ppx.ml[265,8587+17]..[265,8587+31])
                    expression (src/ppx.ml[265,8587+34]..[265,8587+105])
                      Pexp_apply
                      expression (src/ppx.ml[265,8587+35]..[265,8587+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8587+35]..[265,8587+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8587+49]..[265,8587+104])
                            Pexp_apply
                            expression (src/ppx.ml[265,8587+50]..[265,8587+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8587+50]..[265,8587+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8587+65]..[265,8587+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8587+66]..[265,8587+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8587+67]..[265,8587+85]),None)
                                    expression (src/ppx.ml[265,8587+88]..[265,8587+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[265,8587+88]..[265,8587+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8693+4]..[266,8693+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[266,8693+4]..[266,8693+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8693+19]..[266,8693+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[266,8693+19]..[266,8693+40])
                    expression (src/ppx.ml[266,8693+43]..[266,8693+124])
                      Pexp_apply
                      expression (src/ppx.ml[266,8693+44]..[266,8693+57])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8693+44]..[266,8693+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8693+58]..[266,8693+123])
                            Pexp_apply
                            expression (src/ppx.ml[266,8693+59]..[266,8693+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8693+59]..[266,8693+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8693+74]..[266,8693+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8693+75]..[266,8693+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8693+76]..[266,8693+97]),None)
                                    expression (src/ppx.ml[266,8693+100]..[266,8693+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[266,8693+100]..[266,8693+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,8818+4]..[267,8818+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[267,8818+4]..[267,8818+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8818+17]..[267,8818+31])
                          Ppat_var "module_binding" (src/ppx.ml[267,8818+17]..[267,8818+31])
                    expression (src/ppx.ml[267,8818+34]..[267,8818+104])
                      Pexp_apply
                      expression (src/ppx.ml[267,8818+35]..[267,8818+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8818+35]..[267,8818+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8818+49]..[267,8818+103])
                            Pexp_apply
                            expression (src/ppx.ml[267,8818+50]..[267,8818+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8818+50]..[267,8818+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8818+65]..[267,8818+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8818+66]..[267,8818+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8818+67]..[267,8818+85]),None)
                                    expression (src/ppx.ml[267,8818+87]..[267,8818+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[267,8818+87]..[267,8818+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8923+4]..[268,8923+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[268,8923+4]..[268,8923+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8923+20]..[268,8923+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[268,8923+20]..[268,8923+39])
                    expression (src/ppx.ml[268,8923+42]..[268,8923+121])
                      Pexp_apply
                      expression (src/ppx.ml[268,8923+43]..[268,8923+56])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8923+43]..[268,8923+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8923+57]..[268,8923+120])
                            Pexp_apply
                            expression (src/ppx.ml[268,8923+58]..[268,8923+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8923+58]..[268,8923+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8923+73]..[268,8923+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8923+74]..[268,8923+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8923+75]..[268,8923+96]),None)
                                    expression (src/ppx.ml[268,8923+99]..[268,8923+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[268,8923+99]..[268,8923+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9045+4]..[269,9045+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[269,9045+4]..[269,9045+16])
                      Some
                        []
                        pattern (src/ppx.ml[269,9045+17]..[269,9045+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[269,9045+17]..[269,9045+40])
                    expression (src/ppx.ml[269,9045+43]..[269,9045+124])
                      Pexp_apply
                      expression (src/ppx.ml[269,9045+44]..[269,9045+57])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9045+44]..[269,9045+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9045+58]..[269,9045+123])
                            Pexp_apply
                            expression (src/ppx.ml[269,9045+59]..[269,9045+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9045+59]..[269,9045+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9045+74]..[269,9045+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9045+75]..[269,9045+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9045+76]..[269,9045+95]),None)
                                    expression (src/ppx.ml[269,9045+98]..[269,9045+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[269,9045+98]..[269,9045+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9187+4]..[271,9187+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[271,9187+4]..[271,9187+13])
                      Some
                        []
                        pattern (src/ppx.ml[271,9187+14]..[271,9187+30])
                          Ppat_var "open_description" (src/ppx.ml[271,9187+14]..[271,9187+30])
                    expression (src/ppx.ml[271,9187+33]..[271,9187+103])
                      Pexp_apply
                      expression (src/ppx.ml[271,9187+34]..[271,9187+47])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9187+34]..[271,9187+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9187+48]..[271,9187+102])
                            Pexp_apply
                            expression (src/ppx.ml[271,9187+49]..[271,9187+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9187+49]..[271,9187+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9187+64]..[271,9187+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9187+65]..[271,9187+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[271,9187+66]..[271,9187+81]),None)
                                    expression (src/ppx.ml[271,9187+84]..[271,9187+100])
                                      Pexp_ident "open_description" (src/ppx.ml[271,9187+84]..[271,9187+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9291+4]..[272,9291+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[272,9291+4]..[272,9291+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,9291+15]..[272,9291+36])
                          Ppat_var "class_declarations" (src/ppx.ml[272,9291+16]..[272,9291+34])
                    expression (src/ppx.ml[272,9291+39]..[272,9291+113])
                      Pexp_apply
                      expression (src/ppx.ml[272,9291+40]..[272,9291+53])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9291+40]..[272,9291+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9291+54]..[272,9291+112])
                            Pexp_apply
                            expression (src/ppx.ml[272,9291+55]..[272,9291+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9291+55]..[272,9291+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9291+70]..[272,9291+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9291+71]..[272,9291+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9291+72]..[272,9291+89]),None)
                                    expression (src/ppx.ml[272,9291+92]..[272,9291+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[272,9291+92]..[272,9291+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9405+4]..[273,9405+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[273,9405+4]..[273,9405+19])
                      Some
                        []
                        pattern (src/ppx.ml[273,9405+20]..[273,9405+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[273,9405+21]..[273,9405+44])
                    expression (src/ppx.ml[273,9405+48]..[273,9405+132])
                      Pexp_apply
                      expression (src/ppx.ml[273,9405+49]..[273,9405+62])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9405+49]..[273,9405+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9405+63]..[273,9405+131])
                            Pexp_apply
                            expression (src/ppx.ml[273,9405+64]..[273,9405+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9405+64]..[273,9405+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9405+79]..[273,9405+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9405+80]..[273,9405+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9405+81]..[273,9405+103]),None)
                                    expression (src/ppx.ml[273,9405+106]..[273,9405+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[273,9405+106]..[273,9405+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9538+4]..[274,9538+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[274,9538+4]..[274,9538+16])
                      Some
                        []
                        pattern (src/ppx.ml[274,9538+18]..[274,9538+39])
                          Ppat_var "include_declaration" (src/ppx.ml[274,9538+19]..[274,9538+38])
                    expression (src/ppx.ml[274,9538+41]..[274,9538+117])
                      Pexp_apply
                      expression (src/ppx.ml[274,9538+42]..[274,9538+55])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9538+42]..[274,9538+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9538+56]..[274,9538+116])
                            Pexp_apply
                            expression (src/ppx.ml[274,9538+57]..[274,9538+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9538+57]..[274,9538+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9538+72]..[274,9538+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9538+73]..[274,9538+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9538+74]..[274,9538+93]),None)
                                    expression (src/ppx.ml[274,9538+95]..[274,9538+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[274,9538+95]..[274,9538+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9656+4]..[275,9656+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[275,9656+4]..[275,9656+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,9656+19]..[275,9656+30])
                          Ppat_var "attribute" (src/ppx.ml[275,9656+20]..[275,9656+29])
                    expression (src/ppx.ml[275,9656+32]..[275,9656+101])
                      Pexp_apply
                      expression (src/ppx.ml[275,9656+33]..[275,9656+46])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9656+33]..[275,9656+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9656+47]..[275,9656+100])
                            Pexp_apply
                            expression (src/ppx.ml[275,9656+48]..[275,9656+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9656+48]..[275,9656+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9656+63]..[275,9656+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9656+64]..[275,9656+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9656+65]..[275,9656+86]),None)
                                    expression (src/ppx.ml[275,9656+89]..[275,9656+98])
                                      Pexp_ident "attribute" (src/ppx.ml[275,9656+89]..[275,9656+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9758+4]..[276,9758+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[276,9758+4]..[276,9758+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,9758+19]..[276,9758+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,9758+21]..[276,9758+30])
                              Ppat_var "extension" (src/ppx.ml[276,9758+21]..[276,9758+30])
                            pattern (src/ppx.ml[276,9758+33]..[276,9758+43])
                              Ppat_var "attributes" (src/ppx.ml[276,9758+33]..[276,9758+43])
                          ]
                    expression (src/ppx.ml[276,9758+46]..[276,9758+128])
                      Pexp_apply
                      expression (src/ppx.ml[276,9758+47]..[276,9758+60])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9758+47]..[276,9758+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9758+61]..[276,9758+127])
                            Pexp_apply
                            expression (src/ppx.ml[276,9758+62]..[276,9758+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9758+62]..[276,9758+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9758+77]..[276,9758+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9758+78]..[276,9758+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9758+79]..[276,9758+100]),None)
                                    expression (src/ppx.ml[276,9758+103]..[276,9758+112])
                                      Pexp_ident "extension" (src/ppx.ml[276,9758+103]..[276,9758+112])
                                    expression (src/ppx.ml[276,9758+115]..[276,9758+125])
                                      Pexp_ident "attributes" (src/ppx.ml[276,9758+115]..[276,9758+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[250,7794+39]..[250,7794+43])
              Ptyp_constr "unit" (src/ppx.ml[250,7794+39]..[250,7794+43])
              []
    ]
  structure_item (src/ppx.ml[278,9888+0]..[278,9888+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9888+4]..[278,9888+7])
          Ppat_var "foo" (src/ppx.ml[278,9888+4]..[278,9888+7])
        expression (src/ppx.ml[278,9888+10]..[278,9888+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[280,9903+0]..[288,10122+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9903+4]..[280,9903+12])
          Ppat_var "printone" (src/ppx.ml[280,9903+4]..[280,9903+12])
        expression (src/ppx.ml[280,9903+13]..[288,10122+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[280,9903+13]..[280,9903+34])
            Ppat_constraint
            pattern (src/ppx.ml[280,9903+14]..[280,9903+15])
              Ppat_var "x" (src/ppx.ml[280,9903+14]..[280,9903+15])
            core_type (src/ppx.ml[280,9903+18]..[280,9903+32])
              Ptyp_constr "structure_item" (src/ppx.ml[280,9903+18]..[280,9903+32])
              []
          expression (src/ppx.ml[280,9903+35]..[288,10122+6])
            Pexp_constraint
            expression (src/ppx.ml[281,9946+2]..[288,10122+6])
              Pexp_match
              expression (src/ppx.ml[281,9946+8]..[281,9946+9])
                Pexp_ident "x" (src/ppx.ml[281,9946+8]..[281,9946+9])
              [
                <case>
                  pattern (src/ppx.ml[282,9961+3]..[285,10011+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[283,9966+4]..[283,9966+13]) ghost
                        pattern (src/ppx.ml[283,9966+4]..[283,9966+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[283,9966+4]..[283,9966+13])
                    ]
                  expression (src/ppx.ml[287,10095+4]..[288,10122+6])
                    Pexp_sequence
                    expression (src/ppx.ml[287,10095+4]..[287,10095+25])
                      Pexp_apply
                      expression (src/ppx.ml[287,10095+5]..[287,10095+14])
                        Pexp_ident "printdesc" (src/ppx.ml[287,10095+5]..[287,10095+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,10095+15]..[287,10095+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[287,10095+15]..[287,10095+24])
                      ]
                    expression (src/ppx.ml[288,10122+4]..[288,10122+6])
                      Pexp_construct "()" (src/ppx.ml[288,10122+4]..[288,10122+6])
                      None
              ]
            core_type (src/ppx.ml[280,9903+36]..[280,9903+40])
              Ptyp_constr "unit" (src/ppx.ml[280,9903+36]..[280,9903+40])
              []
    ]
  structure_item (src/ppx.ml[294,10242+0]..[296,10323+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10242+4]..[294,10242+13])
          Ppat_var "printone2" (src/ppx.ml[294,10242+4]..[294,10242+13])
        expression (src/ppx.ml[294,10242+14]..[296,10323+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[294,10242+14]..[294,10242+15])
            Ppat_var "x" (src/ppx.ml[294,10242+14]..[294,10242+15])
          expression (src/ppx.ml[294,10242+16]..[296,10323+12])
            Pexp_constraint
            expression (src/ppx.ml[295,10266+2]..[296,10323+12])
              Pexp_sequence
              expression (src/ppx.ml[295,10266+2]..[295,10266+55])
                Pexp_apply
                expression (src/ppx.ml[295,10266+3]..[295,10266+16])
                  Pexp_ident "print_endline" (src/ppx.ml[295,10266+3]..[295,10266+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[295,10266+17]..[295,10266+54])
                      Pexp_apply
                      expression (src/ppx.ml[295,10266+18]..[295,10266+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[295,10266+18]..[295,10266+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[295,10266+33]..[295,10266+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[295,10266+34]..[295,10266+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[295,10266+35]..[295,10266+49]),None)
                              expression (src/ppx.ml[295,10266+51]..[295,10266+52])
                                Pexp_ident "x" (src/ppx.ml[295,10266+51]..[295,10266+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[296,10323+2]..[296,10323+12])
                Pexp_apply
                expression (src/ppx.ml[296,10323+2]..[296,10323+10])
                  Pexp_ident "printone" (src/ppx.ml[296,10323+2]..[296,10323+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[296,10323+11]..[296,10323+12])
                      Pexp_ident "x" (src/ppx.ml[296,10323+11]..[296,10323+12])
                ]
            core_type (src/ppx.ml[294,10242+17]..[294,10242+21])
              Ptyp_constr "unit" (src/ppx.ml[294,10242+17]..[294,10242+21])
              []
    ]
  structure_item (src/ppx.ml[298,10339+0]..[300,10370+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10339+4]..[298,10339+9])
          Ppat_var "proc1" (src/ppx.ml[298,10339+4]..[298,10339+9])
        expression (src/ppx.ml[298,10339+10]..[300,10370+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[298,10339+10]..[298,10339+11])
            Ppat_var "x" (src/ppx.ml[298,10339+10]..[298,10339+11])
          expression (src/ppx.ml[299,10355+2]..[300,10370+3])
            Pexp_sequence
            expression (src/ppx.ml[299,10355+2]..[299,10355+13])
              Pexp_apply
              expression (src/ppx.ml[299,10355+2]..[299,10355+11])
                Pexp_ident "printone2" (src/ppx.ml[299,10355+2]..[299,10355+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[299,10355+12]..[299,10355+13])
                    Pexp_ident "x" (src/ppx.ml[299,10355+12]..[299,10355+13])
              ]
            expression (src/ppx.ml[300,10370+2]..[300,10370+3])
              Pexp_ident "x" (src/ppx.ml[300,10370+2]..[300,10370+3])
    ]
  structure_item (src/ppx.ml[302,10375+0]..[305,10524+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10375+4]..[302,10375+9])
          Ppat_var "debug" (src/ppx.ml[302,10375+4]..[302,10375+9])
        expression (src/ppx.ml[302,10375+10]..[305,10524+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10375+10]..[302,10375+14])
            Ppat_var "proc" (src/ppx.ml[302,10375+10]..[302,10375+14])
          expression (src/ppx.ml[302,10375+15]..[305,10524+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[302,10375+15]..[302,10375+18])
              Ppat_var "lst" (src/ppx.ml[302,10375+15]..[302,10375+18])
            expression (src/ppx.ml[302,10375+19]..[305,10524+4])
              Pexp_constraint
              expression (src/ppx.ml[303,10403+2]..[305,10524+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[303,10403+6]..[303,10403+12])
                      Ppat_var "result" (src/ppx.ml[303,10403+6]..[303,10403+12])
                    expression (src/ppx.ml[303,10403+15]..[303,10403+32])
                      Pexp_apply
                      expression (src/ppx.ml[303,10403+15]..[303,10403+23])
                        Pexp_ident "List.map" (src/ppx.ml[303,10403+15]..[303,10403+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10403+24]..[303,10403+28])
                            Pexp_ident "proc" (src/ppx.ml[303,10403+24]..[303,10403+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10403+29]..[303,10403+32])
                            Pexp_ident "lst" (src/ppx.ml[303,10403+29]..[303,10403+32])
                      ]
                ]
                expression (src/ppx.ml[304,10439+2]..[305,10524+4])
                  Pexp_sequence
                  expression (src/ppx.ml[304,10439+2]..[304,10439+83])
                    Pexp_apply
                    expression (src/ppx.ml[304,10439+2]..[304,10439+11])
                      Pexp_ident "List.iter" (src/ppx.ml[304,10439+2]..[304,10439+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10439+12]..[304,10439+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[304,10439+17]..[304,10439+18])
                            Ppat_var "i" (src/ppx.ml[304,10439+17]..[304,10439+18])
                          expression (src/ppx.ml[304,10439+22]..[304,10439+75])
                            Pexp_apply
                            expression (src/ppx.ml[304,10439+22]..[304,10439+35])
                              Pexp_ident "print_endline" (src/ppx.ml[304,10439+22]..[304,10439+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[304,10439+36]..[304,10439+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[304,10439+37]..[304,10439+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[304,10439+37]..[304,10439+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[304,10439+52]..[304,10439+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[304,10439+53]..[304,10439+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10439+54]..[304,10439+69]),None)
                                          expression (src/ppx.ml[304,10439+72]..[304,10439+73])
                                            Pexp_ident "i" (src/ppx.ml[304,10439+72]..[304,10439+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10439+77]..[304,10439+83])
                          Pexp_ident "result" (src/ppx.ml[304,10439+77]..[304,10439+83])
                    ]
                  expression (src/ppx.ml[305,10524+2]..[305,10524+4])
                    Pexp_construct "()" (src/ppx.ml[305,10524+2]..[305,10524+4])
                    None
              core_type (src/ppx.ml[302,10375+21]..[302,10375+25])
                Ptyp_constr "unit" (src/ppx.ml[302,10375+21]..[302,10375+25])
                []
    ]
  structure_item (src/ppx.ml[307,10546+0]..[310,10670+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10546+4]..[307,10546+13])
          Ppat_var "transform" (src/ppx.ml[307,10546+4]..[307,10546+13])
        expression (src/ppx.ml[307,10546+14]..[310,10670+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10546+14]..[307,10546+15])
            Ppat_var "x" (src/ppx.ml[307,10546+14]..[307,10546+15])
          expression (src/ppx.ml[308,10601+2]..[310,10670+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10601+2]..[308,10601+48])
              Pexp_apply
              expression (src/ppx.ml[308,10601+3]..[308,10601+16])
                Pexp_ident "print_endline" (src/ppx.ml[308,10601+3]..[308,10601+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10601+17]..[308,10601+47])
                    Pexp_apply
                    expression (src/ppx.ml[308,10601+18]..[308,10601+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[308,10601+18]..[308,10601+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[308,10601+33]..[308,10601+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[308,10601+34]..[308,10601+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[308,10601+35]..[308,10601+42]),None)
                            expression (src/ppx.ml[308,10601+44]..[308,10601+45])
                              Pexp_ident "x" (src/ppx.ml[308,10601+44]..[308,10601+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[309,10651+2]..[310,10670+3])
              Pexp_sequence
              expression (src/ppx.ml[309,10651+2]..[309,10651+17])
                Pexp_apply
                expression (src/ppx.ml[309,10651+3]..[309,10651+8])
                  Pexp_ident "debug" (src/ppx.ml[309,10651+3]..[309,10651+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10651+9]..[309,10651+14])
                      Pexp_ident "proc1" (src/ppx.ml[309,10651+9]..[309,10651+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10651+15]..[309,10651+16])
                      Pexp_ident "x" (src/ppx.ml[309,10651+15]..[309,10651+16])
                ]
              expression (src/ppx.ml[310,10670+2]..[310,10670+3])
                Pexp_ident "x" (src/ppx.ml[310,10670+2]..[310,10670+3])
    ]
  structure_item (src/ppx.ml[312,10677+1]..[312,10677+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10677+5]..[312,10677+7])
          Ppat_construct "()" (src/ppx.ml[312,10677+5]..[312,10677+7])
          None
        expression (src/ppx.ml[312,10677+10]..[312,10677+69])
          Pexp_apply
          expression (src/ppx.ml[312,10677+10]..[312,10677+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[312,10677+10]..[312,10677+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[312,10677+47]..[312,10677+56])
                Pexp_ident "transform" (src/ppx.ml[312,10677+47]..[312,10677+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[312,10677+57]..[312,10677+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[312,10677+58]..[312,10677+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id x =
  (match x with
   | (a, b) -> print_endline (Batteries.dump ("DEBUG:process_id:", a)) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_id a;
       process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

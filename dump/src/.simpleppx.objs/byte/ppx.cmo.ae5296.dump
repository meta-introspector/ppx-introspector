[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[73,1962+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[73,1962+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[73,1962+19])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[73,1962+19])
                  Pexp_match
                  expression (src/ppx.ml[72,1943+10]..[72,1943+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1943+10]..[72,1943+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1962+4]..[73,1962+12])
                        Ppat_var "txt2" (src/ppx.ml[73,1962+6]..[73,1962+10])
                      expression (src/ppx.ml[73,1962+15]..[73,1962+19])
                        Pexp_ident "txt2" (src/ppx.ml[73,1962+15]..[73,1962+19])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[77,2063+0]..[158,4912+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2063+8]..[77,2063+27])
          Ppat_var "process_record_kind" (src/ppx.ml[77,2063+8]..[77,2063+27])
        expression (src/ppx.ml[77,2063+27]..[91,2547+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[77,2063+27]..[77,2063+30])
            Ppat_var "x" (src/ppx.ml[77,2063+28]..[77,2063+29])
          expression (src/ppx.ml[78,2096+2]..[91,2547+47])
            Pexp_match
            expression (src/ppx.ml[78,2096+8]..[78,2096+9])
              Pexp_ident "x" (src/ppx.ml[78,2096+8]..[78,2096+9])
            [
              <case>
                pattern (src/ppx.ml[79,2111+4]..[85,2292+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13]) ghost
                      pattern (src/ppx.ml[80,2117+5]..[80,2117+13])
                        Ppat_var "pld_name" (src/ppx.ml[80,2117+5]..[80,2117+13])
                    "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16]) ghost
                      pattern (src/ppx.ml[81,2150+5]..[81,2150+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[81,2150+5]..[81,2150+16])
                    "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13]) ghost
                      pattern (src/ppx.ml[82,2188+5]..[82,2188+13])
                        Ppat_var "pld_type" (src/ppx.ml[82,2188+5]..[82,2188+13])
                    "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12]) ghost
                      pattern (src/ppx.ml[83,2220+5]..[83,2220+12])
                        Ppat_var "pld_loc" (src/ppx.ml[83,2220+5]..[83,2220+12])
                    "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19]) ghost
                      pattern (src/ppx.ml[84,2252+5]..[84,2252+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[84,2252+5]..[84,2252+19])
                  ]
                expression (src/ppx.ml[86,2300+4]..[91,2547+47])
                  Pexp_apply
                  expression (src/ppx.ml[86,2300+5]..[86,2300+18])
                    Pexp_ident "print_endline" (src/ppx.ml[86,2300+5]..[86,2300+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[86,2300+19]..[91,2547+46])
                        Pexp_apply
                        expression (src/ppx.ml[86,2300+20]..[86,2300+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[86,2300+20]..[86,2300+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[86,2300+35]..[91,2547+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[86,2300+36]..[86,2300+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[86,2300+37]..[86,2300+56]),None)
                                expression (src/ppx.ml[87,2361+36]..[87,2361+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[87,2361+36]..[87,2361+44])
                                expression (src/ppx.ml[88,2407+36]..[88,2407+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[88,2407+37]..[88,2407+44]),None)
                                expression (src/ppx.ml[89,2454+36]..[89,2454+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[89,2454+36]..[89,2454+47])
                                expression (src/ppx.ml[90,2503+36]..[90,2503+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[90,2503+37]..[90,2503+41]),None)
                                expression (src/ppx.ml[91,2547+36]..[91,2547+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[91,2547+36]..[91,2547+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[93,2599+0]..[93,2599+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[93,2599+0]..[93,2599+22])
        expression (src/ppx.ml[93,2599+23]..[132,4230+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[93,2599+23]..[93,2599+24])
            Ppat_var "x" (src/ppx.ml[93,2599+23]..[93,2599+24])
          expression (src/ppx.ml[94,2626+2]..[132,4230+65])
            Pexp_match
            expression (src/ppx.ml[94,2626+8]..[94,2626+9])
              Pexp_ident "x" (src/ppx.ml[94,2626+8]..[94,2626+9])
            [
              <case>
                pattern (src/ppx.ml[95,2641+4]..[95,2641+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[95,2641+4]..[95,2641+15])
                  Some
                    []
                    pattern (src/ppx.ml[95,2641+16]..[95,2641+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[95,2641+17]..[95,2641+18])
                          Ppat_var "a" (src/ppx.ml[95,2641+17]..[95,2641+18])
                        pattern (src/ppx.ml[95,2641+19]..[95,2641+20])
                          Ppat_var "b" (src/ppx.ml[95,2641+19]..[95,2641+20])
                      ]
                expression (src/ppx.ml[97,2712+4]..[99,2778+91])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[97,2712+8]..[97,2712+12])
                        Ppat_var "myid" (src/ppx.ml[97,2712+8]..[97,2712+12])
                      expression (src/ppx.ml[97,2712+15]..[97,2712+29])
                        Pexp_apply
                        expression (src/ppx.ml[97,2712+16]..[97,2712+26])
                          Pexp_ident "process_id" (src/ppx.ml[97,2712+16]..[97,2712+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[97,2712+27]..[97,2712+28])
                              Pexp_ident "a" (src/ppx.ml[97,2712+27]..[97,2712+28])
                        ]
                  ]
                  expression (src/ppx.ml[98,2745+4]..[99,2778+91])
                    Pexp_sequence
                    expression (src/ppx.ml[98,2745+4]..[98,2745+30])
                      Pexp_apply
                      expression (src/ppx.ml[98,2745+5]..[98,2745+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[98,2745+5]..[98,2745+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[98,2745+28]..[98,2745+29])
                            Pexp_ident "b" (src/ppx.ml[98,2745+28]..[98,2745+29])
                      ]
                    expression (src/ppx.ml[99,2778+4]..[99,2778+91])
                      Pexp_apply
                      expression (src/ppx.ml[99,2778+5]..[99,2778+18])
                        Pexp_ident "print_endline" (src/ppx.ml[99,2778+5]..[99,2778+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[99,2778+19]..[99,2778+90])
                            Pexp_apply
                            expression (src/ppx.ml[99,2778+20]..[99,2778+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[99,2778+20]..[99,2778+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[99,2778+35]..[99,2778+89])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[99,2778+36]..[99,2778+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[99,2778+37]..[99,2778+55]),None)
                                    expression (src/ppx.ml[99,2778+58]..[99,2778+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[99,2778+59]..[99,2778+61]),None)
                                    expression (src/ppx.ml[99,2778+63]..[99,2778+64])
                                      Pexp_ident "a" (src/ppx.ml[99,2778+63]..[99,2778+64])
                                    expression (src/ppx.ml[99,2778+66]..[99,2778+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[99,2778+67]..[99,2778+72]),None)
                                    expression (src/ppx.ml[99,2778+74]..[99,2778+75])
                                      Pexp_ident "b" (src/ppx.ml[99,2778+74]..[99,2778+75])
                                    expression (src/ppx.ml[99,2778+78]..[99,2778+83])
                                      Pexp_constant PConst_string("id2",(src/ppx.ml[99,2778+79]..[99,2778+82]),None)
                                    expression (src/ppx.ml[99,2778+84]..[99,2778+88])
                                      Pexp_ident "myid" (src/ppx.ml[99,2778+84]..[99,2778+88])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[101,2871+4]..[101,2871+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[101,2871+4]..[101,2871+14])
                  Some
                    []
                    pattern (src/ppx.ml[101,2871+15]..[101,2871+16])
                      Ppat_var "a" (src/ppx.ml[101,2871+15]..[101,2871+16])
                expression (src/ppx.ml[103,2919+4]..[103,2919+59])
                  Pexp_apply
                  expression (src/ppx.ml[103,2919+5]..[103,2919+18])
                    Pexp_ident "print_endline" (src/ppx.ml[103,2919+5]..[103,2919+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,2919+19]..[103,2919+58])
                        Pexp_apply
                        expression (src/ppx.ml[103,2919+20]..[103,2919+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,2919+20]..[103,2919+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,2919+35]..[103,2919+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[103,2919+37]..[103,2919+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,2998+4]..[106,2998+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[106,2998+4]..[106,2998+12])
                  None
                expression (src/ppx.ml[106,2998+17]..[106,2998+69])
                  Pexp_apply
                  expression (src/ppx.ml[106,2998+18]..[106,2998+31])
                    Pexp_ident "print_endline" (src/ppx.ml[106,2998+18]..[106,2998+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[106,2998+32]..[106,2998+68])
                        Pexp_apply
                        expression (src/ppx.ml[106,2998+33]..[106,2998+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[106,2998+33]..[106,2998+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[106,2998+48]..[106,2998+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[106,2998+50]..[106,2998+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3068+4]..[107,3068+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[107,3068+4]..[107,3068+12])
                  Some
                    []
                    pattern (src/ppx.ml[107,3068+13]..[107,3068+17])
                      Ppat_var "name" (src/ppx.ml[107,3068+13]..[107,3068+17])
                expression (src/ppx.ml[107,3068+20]..[107,3068+80])
                  Pexp_apply
                  expression (src/ppx.ml[107,3068+21]..[107,3068+34])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3068+21]..[107,3068+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3068+35]..[107,3068+79])
                        Pexp_apply
                        expression (src/ppx.ml[107,3068+36]..[107,3068+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3068+36]..[107,3068+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3068+51]..[107,3068+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[107,3068+52]..[107,3068+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[107,3068+53]..[107,3068+68]),None)
                                expression (src/ppx.ml[107,3068+73]..[107,3068+77])
                                  Pexp_ident "name" (src/ppx.ml[107,3068+73]..[107,3068+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[108,3149+4]..[108,3149+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[108,3149+4]..[108,3149+14])
                  Some
                    []
                    pattern (src/ppx.ml[108,3149+15]..[108,3149+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[108,3149+16]..[108,3149+25])
                          Ppat_var "arg_label" (src/ppx.ml[108,3149+16]..[108,3149+25])
                        pattern (src/ppx.ml[108,3149+28]..[108,3149+37])
                          Ppat_var "core_type" (src/ppx.ml[108,3149+28]..[108,3149+37])
                        pattern (src/ppx.ml[108,3149+40]..[108,3149+50])
                          Ppat_var "core_type2" (src/ppx.ml[108,3149+40]..[108,3149+50])
                      ]
                expression (src/ppx.ml[109,3204+4]..[109,3204+61])
                  Pexp_apply
                  expression (src/ppx.ml[109,3204+5]..[109,3204+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3204+5]..[109,3204+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3204+19]..[109,3204+60])
                        Pexp_apply
                        expression (src/ppx.ml[109,3204+20]..[109,3204+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3204+20]..[109,3204+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3204+35]..[109,3204+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[109,3204+37]..[109,3204+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[111,3267+4]..[111,3267+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[111,3267+4]..[111,3267+15])
                  Some
                    []
                    pattern (src/ppx.ml[111,3267+16]..[111,3267+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[111,3267+17]..[111,3267+18])
                          Ppat_var "a" (src/ppx.ml[111,3267+17]..[111,3267+18])
                        pattern (src/ppx.ml[111,3267+19]..[111,3267+20])
                          Ppat_var "b" (src/ppx.ml[111,3267+19]..[111,3267+20])
                      ]
                expression (src/ppx.ml[113,3336+4]..[113,3336+60])
                  Pexp_apply
                  expression (src/ppx.ml[113,3336+5]..[113,3336+18])
                    Pexp_ident "print_endline" (src/ppx.ml[113,3336+5]..[113,3336+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[113,3336+19]..[113,3336+59])
                        Pexp_apply
                        expression (src/ppx.ml[113,3336+20]..[113,3336+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[113,3336+20]..[113,3336+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[113,3336+35]..[113,3336+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[113,3336+37]..[113,3336+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3397+4]..[114,3397+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[114,3397+4]..[114,3397+14])
                  Some
                    []
                    pattern (src/ppx.ml[114,3397+15]..[114,3397+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[114,3397+16]..[114,3397+17])
                          Ppat_var "a" (src/ppx.ml[114,3397+16]..[114,3397+17])
                        pattern (src/ppx.ml[114,3397+18]..[114,3397+19])
                          Ppat_var "b" (src/ppx.ml[114,3397+18]..[114,3397+19])
                      ]
                expression (src/ppx.ml[116,3467+4]..[116,3467+60])
                  Pexp_apply
                  expression (src/ppx.ml[116,3467+5]..[116,3467+18])
                    Pexp_ident "print_endline" (src/ppx.ml[116,3467+5]..[116,3467+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[116,3467+19]..[116,3467+59])
                        Pexp_apply
                        expression (src/ppx.ml[116,3467+20]..[116,3467+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[116,3467+20]..[116,3467+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[116,3467+35]..[116,3467+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[116,3467+37]..[116,3467+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[117,3528+4]..[117,3528+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[117,3528+4]..[117,3528+14])
                  Some
                    []
                    pattern (src/ppx.ml[117,3528+15]..[117,3528+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[117,3528+16]..[117,3528+17])
                          Ppat_var "a" (src/ppx.ml[117,3528+16]..[117,3528+17])
                        pattern (src/ppx.ml[117,3528+18]..[117,3528+19])
                          Ppat_var "b" (src/ppx.ml[117,3528+18]..[117,3528+19])
                      ]
                expression (src/ppx.ml[119,3589+4]..[119,3589+60])
                  Pexp_apply
                  expression (src/ppx.ml[119,3589+5]..[119,3589+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3589+5]..[119,3589+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3589+19]..[119,3589+59])
                        Pexp_apply
                        expression (src/ppx.ml[119,3589+20]..[119,3589+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3589+20]..[119,3589+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3589+35]..[119,3589+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[119,3589+37]..[119,3589+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[120,3650+4]..[120,3650+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[120,3650+4]..[120,3650+16])
                  Some
                    []
                    pattern (src/ppx.ml[120,3650+17]..[120,3650+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[120,3650+18]..[120,3650+19])
                          Ppat_var "a" (src/ppx.ml[120,3650+18]..[120,3650+19])
                        pattern (src/ppx.ml[120,3650+20]..[120,3650+21])
                          Ppat_var "b" (src/ppx.ml[120,3650+20]..[120,3650+21])
                        pattern (src/ppx.ml[120,3650+22]..[120,3650+23])
                          Ppat_var "c" (src/ppx.ml[120,3650+22]..[120,3650+23])
                      ]
                expression (src/ppx.ml[122,3740+4]..[122,3740+60])
                  Pexp_apply
                  expression (src/ppx.ml[122,3740+5]..[122,3740+18])
                    Pexp_ident "print_endline" (src/ppx.ml[122,3740+5]..[122,3740+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[122,3740+19]..[122,3740+59])
                        Pexp_apply
                        expression (src/ppx.ml[122,3740+20]..[122,3740+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[122,3740+20]..[122,3740+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[122,3740+35]..[122,3740+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[122,3740+37]..[122,3740+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[123,3801+4]..[123,3801+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[123,3801+4]..[123,3801+13])
                  Some
                    []
                    pattern (src/ppx.ml[123,3801+14]..[123,3801+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[123,3801+15]..[123,3801+16])
                          Ppat_var "a" (src/ppx.ml[123,3801+15]..[123,3801+16])
                        pattern (src/ppx.ml[123,3801+17]..[123,3801+18])
                          Ppat_var "b" (src/ppx.ml[123,3801+17]..[123,3801+18])
                      ]
                expression (src/ppx.ml[125,3865+4]..[125,3865+60])
                  Pexp_apply
                  expression (src/ppx.ml[125,3865+5]..[125,3865+18])
                    Pexp_ident "print_endline" (src/ppx.ml[125,3865+5]..[125,3865+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[125,3865+19]..[125,3865+59])
                        Pexp_apply
                        expression (src/ppx.ml[125,3865+20]..[125,3865+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[125,3865+20]..[125,3865+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[125,3865+35]..[125,3865+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[125,3865+37]..[125,3865+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[126,3926+4]..[126,3926+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[126,3926+4]..[126,3926+16])
                  Some
                    []
                    pattern (src/ppx.ml[126,3926+17]..[126,3926+18])
                      Ppat_var "a" (src/ppx.ml[126,3926+17]..[126,3926+18])
                expression (src/ppx.ml[128,3974+4]..[128,3974+62])
                  Pexp_apply
                  expression (src/ppx.ml[128,3974+5]..[128,3974+18])
                    Pexp_ident "print_endline" (src/ppx.ml[128,3974+5]..[128,3974+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[128,3974+19]..[128,3974+61])
                        Pexp_apply
                        expression (src/ppx.ml[128,3974+20]..[128,3974+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[128,3974+20]..[128,3974+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[128,3974+35]..[128,3974+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[128,3974+36]..[128,3974+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[128,3974+37]..[128,3974+55]),None)
                                expression (src/ppx.ml[128,3974+57]..[128,3974+58])
                                  Pexp_ident "a" (src/ppx.ml[128,3974+57]..[128,3974+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[131,4182+4]..[131,4182+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[131,4182+4]..[131,4182+18])
                  Some
                    []
                    pattern (src/ppx.ml[131,4182+19]..[131,4182+20])
                      Ppat_var "a" (src/ppx.ml[131,4182+19]..[131,4182+20])
                expression (src/ppx.ml[132,4230+4]..[132,4230+65])
                  Pexp_apply
                  expression (src/ppx.ml[132,4230+5]..[132,4230+18])
                    Pexp_ident "print_endline" (src/ppx.ml[132,4230+5]..[132,4230+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[132,4230+19]..[132,4230+64])
                        Pexp_apply
                        expression (src/ppx.ml[132,4230+20]..[132,4230+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[132,4230+20]..[132,4230+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[132,4230+35]..[132,4230+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[132,4230+36]..[132,4230+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[132,4230+37]..[132,4230+58]),None)
                                expression (src/ppx.ml[132,4230+60]..[132,4230+61])
                                  Pexp_ident "a" (src/ppx.ml[132,4230+60]..[132,4230+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[134,4300+2]..[134,4300+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[134,4300+2]..[134,4300+26])
        expression (src/ppx.ml[134,4300+26]..[140,4437+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[134,4300+26]..[134,4300+29])
            Ppat_var "x" (src/ppx.ml[134,4300+27]..[134,4300+28])
          expression (src/ppx.ml[135,4332+2]..[140,4437+6])
            Pexp_match
            expression (src/ppx.ml[135,4332+8]..[135,4332+9])
              Pexp_ident "x" (src/ppx.ml[135,4332+8]..[135,4332+9])
            [
              <case>
                pattern (src/ppx.ml[136,4347+4]..[136,4347+6])
                  Ppat_construct "[]" (src/ppx.ml[136,4347+4]..[136,4347+6])
                  None
                expression (src/ppx.ml[136,4347+10]..[136,4347+12])
                  Pexp_construct "()" (src/ppx.ml[136,4347+10]..[136,4347+12])
                  None
              <case>
                pattern (src/ppx.ml[137,4360+4]..[137,4360+10])
                  Ppat_construct "::" (src/ppx.ml[137,4360+6]..[137,4360+8])
                  Some
                    []
                    pattern (src/ppx.ml[137,4360+4]..[137,4360+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[137,4360+4]..[137,4360+5])
                          Ppat_var "h" (src/ppx.ml[137,4360+4]..[137,4360+5])
                        pattern (src/ppx.ml[137,4360+9]..[137,4360+10])
                          Ppat_var "t" (src/ppx.ml[137,4360+9]..[137,4360+10])
                      ]
                expression (src/ppx.ml[138,4374+4]..[140,4437+6])
                  Pexp_sequence
                  expression (src/ppx.ml[138,4374+4]..[138,4374+27])
                    Pexp_apply
                    expression (src/ppx.ml[138,4374+5]..[138,4374+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[138,4374+5]..[138,4374+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[138,4374+25]..[138,4374+26])
                          Pexp_ident "h" (src/ppx.ml[138,4374+25]..[138,4374+26])
                    ]
                  expression (src/ppx.ml[139,4403+4]..[140,4437+6])
                    Pexp_sequence
                    expression (src/ppx.ml[139,4403+4]..[139,4403+32])
                      Pexp_apply
                      expression (src/ppx.ml[139,4403+5]..[139,4403+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[139,4403+5]..[139,4403+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[139,4403+30]..[139,4403+31])
                            Pexp_ident "t" (src/ppx.ml[139,4403+30]..[139,4403+31])
                      ]
                    expression (src/ppx.ml[140,4437+4]..[140,4437+6])
                      Pexp_construct "()" (src/ppx.ml[140,4437+4]..[140,4437+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[142,4448+0]..[142,4448+17])
          Ppat_var "process_core_type" (src/ppx.ml[142,4448+0]..[142,4448+17])
        expression (src/ppx.ml[142,4448+17]..[152,4715+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[142,4448+17]..[142,4448+20])
            Ppat_var "x" (src/ppx.ml[142,4448+18]..[142,4448+19])
          expression (src/ppx.ml[143,4471+2]..[152,4715+80])
            Pexp_match
            expression (src/ppx.ml[143,4471+8]..[143,4471+9])
              Pexp_ident "x" (src/ppx.ml[143,4471+8]..[143,4471+9])
            [
              <case>
                pattern (src/ppx.ml[144,4487+4]..[149,4648+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[145,4493+6]..[145,4493+15]) ghost
                      pattern (src/ppx.ml[145,4493+6]..[145,4493+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[145,4493+6]..[145,4493+15])
                    "ptyp_loc" (src/ppx.ml[146,4532+5]..[146,4532+13]) ghost
                      pattern (src/ppx.ml[146,4532+5]..[146,4532+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[146,4532+5]..[146,4532+13])
                    "ptyp_loc_stack" (src/ppx.ml[147,4565+5]..[147,4565+19]) ghost
                      pattern (src/ppx.ml[147,4565+5]..[147,4565+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[147,4565+5]..[147,4565+19])
                    "ptyp_attributes" (src/ppx.ml[148,4608+5]..[148,4608+20]) ghost
                      pattern (src/ppx.ml[148,4608+5]..[148,4608+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[148,4608+5]..[148,4608+20])
                  ]
                expression (src/ppx.ml[150,4656+4]..[152,4715+80])
                  Pexp_sequence
                  expression (src/ppx.ml[150,4656+4]..[150,4656+38])
                    Pexp_apply
                    expression (src/ppx.ml[150,4656+5]..[150,4656+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[150,4656+5]..[150,4656+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4656+28]..[150,4656+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[150,4656+28]..[150,4656+37])
                    ]
                  expression (src/ppx.ml[152,4715+4]..[152,4715+80])
                    Pexp_apply
                    expression (src/ppx.ml[152,4715+5]..[152,4715+18])
                      Pexp_ident "print_endline" (src/ppx.ml[152,4715+5]..[152,4715+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[152,4715+19]..[152,4715+79])
                          Pexp_apply
                          expression (src/ppx.ml[152,4715+20]..[152,4715+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[152,4715+20]..[152,4715+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[152,4715+35]..[152,4715+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[152,4715+36]..[152,4715+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[152,4715+37]..[152,4715+63]),None)
                                  expression (src/ppx.ml[152,4715+68]..[152,4715+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[152,4715+68]..[152,4715+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[153,4796+4]..[153,4796+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[153,4796+4]..[153,4796+26])
        expression (src/ppx.ml[153,4796+26]..[158,4912+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[153,4796+26]..[153,4796+44])
            Ppat_constraint
            pattern (src/ppx.ml[153,4796+27]..[153,4796+28])
              Ppat_var "x" (src/ppx.ml[153,4796+27]..[153,4796+28])
            core_type (src/ppx.ml[153,4796+29]..[153,4796+43])
              Ptyp_constr "list" (src/ppx.ml[153,4796+39]..[153,4796+43])
              [
                core_type (src/ppx.ml[153,4796+29]..[153,4796+38])
                  Ptyp_constr "core_type" (src/ppx.ml[153,4796+29]..[153,4796+38])
                  []
              ]
          expression (src/ppx.ml[154,4843+2]..[158,4912+29])
            Pexp_match
            expression (src/ppx.ml[154,4843+8]..[154,4843+9])
              Pexp_ident "x" (src/ppx.ml[154,4843+8]..[154,4843+9])
            [
              <case>
                pattern (src/ppx.ml[155,4858+4]..[155,4858+6])
                  Ppat_construct "[]" (src/ppx.ml[155,4858+4]..[155,4858+6])
                  None
                expression (src/ppx.ml[155,4858+10]..[155,4858+12])
                  Pexp_construct "()" (src/ppx.ml[155,4858+10]..[155,4858+12])
                  None
              <case>
                pattern (src/ppx.ml[156,4871+4]..[156,4871+10])
                  Ppat_construct "::" (src/ppx.ml[156,4871+6]..[156,4871+8])
                  Some
                    []
                    pattern (src/ppx.ml[156,4871+4]..[156,4871+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[156,4871+4]..[156,4871+5])
                          Ppat_var "h" (src/ppx.ml[156,4871+4]..[156,4871+5])
                        pattern (src/ppx.ml[156,4871+9]..[156,4871+10])
                          Ppat_var "t" (src/ppx.ml[156,4871+9]..[156,4871+10])
                      ]
                expression (src/ppx.ml[157,4885+4]..[158,4912+29])
                  Pexp_sequence
                  expression (src/ppx.ml[157,4885+4]..[157,4885+25])
                    Pexp_apply
                    expression (src/ppx.ml[157,4885+4]..[157,4885+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[157,4885+4]..[157,4885+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[157,4885+22]..[157,4885+25])
                          Pexp_ident "h" (src/ppx.ml[157,4885+23]..[157,4885+24])
                    ]
                  expression (src/ppx.ml[158,4912+4]..[158,4912+29])
                    Pexp_apply
                    expression (src/ppx.ml[158,4912+4]..[158,4912+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[158,4912+4]..[158,4912+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[158,4912+26]..[158,4912+29])
                          Pexp_ident "t" (src/ppx.ml[158,4912+27]..[158,4912+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[165,4956+0]..[172,5155+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[165,4956+4]..[165,4956+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[165,4956+4]..[165,4956+31])
        expression (src/ppx.ml[165,4956+31]..[172,5155+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[165,4956+31]..[165,4956+34])
            Ppat_var "x" (src/ppx.ml[165,4956+32]..[165,4956+33])
          expression (src/ppx.ml[166,4993+2]..[172,5155+65])
            Pexp_match
            expression (src/ppx.ml[166,4993+8]..[166,4993+9])
              Pexp_ident "x" (src/ppx.ml[166,4993+8]..[166,4993+9])
            [
              <case>
                pattern (src/ppx.ml[167,5008+4]..[167,5008+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[167,5008+4]..[167,5008+15])
                  Some
                    []
                    pattern (src/ppx.ml[167,5008+16]..[167,5008+17])
                      Ppat_var "a" (src/ppx.ml[167,5008+16]..[167,5008+17])
                expression (src/ppx.ml[168,5029+4]..[169,5061+64])
                  Pexp_sequence
                  expression (src/ppx.ml[168,5029+4]..[168,5029+30])
                    Pexp_apply
                    expression (src/ppx.ml[168,5029+5]..[168,5029+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[168,5029+5]..[168,5029+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[168,5029+28]..[168,5029+29])
                          Pexp_ident "a" (src/ppx.ml[168,5029+28]..[168,5029+29])
                    ]
                  expression (src/ppx.ml[169,5061+4]..[169,5061+64])
                    Pexp_apply
                    expression (src/ppx.ml[169,5061+5]..[169,5061+18])
                      Pexp_ident "print_endline" (src/ppx.ml[169,5061+5]..[169,5061+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[169,5061+19]..[169,5061+63])
                          Pexp_apply
                          expression (src/ppx.ml[169,5061+20]..[169,5061+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[169,5061+20]..[169,5061+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[169,5061+35]..[169,5061+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[169,5061+36]..[169,5061+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[169,5061+37]..[169,5061+55]),None)
                                  expression (src/ppx.ml[169,5061+60]..[169,5061+61])
                                    Pexp_ident "a" (src/ppx.ml[169,5061+60]..[169,5061+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[171,5133+4]..[171,5133+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[171,5133+4]..[171,5133+16])
                  Some
                    []
                    pattern (src/ppx.ml[171,5133+17]..[171,5133+18])
                      Ppat_var "a" (src/ppx.ml[171,5133+17]..[171,5133+18])
                expression (src/ppx.ml[172,5155+4]..[172,5155+65])
                  Pexp_apply
                  expression (src/ppx.ml[172,5155+5]..[172,5155+18])
                    Pexp_ident "print_endline" (src/ppx.ml[172,5155+5]..[172,5155+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[172,5155+19]..[172,5155+64])
                        Pexp_apply
                        expression (src/ppx.ml[172,5155+20]..[172,5155+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[172,5155+20]..[172,5155+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[172,5155+35]..[172,5155+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[172,5155+36]..[172,5155+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[172,5155+37]..[172,5155+56]),None)
                                expression (src/ppx.ml[172,5155+61]..[172,5155+62])
                                  Pexp_ident "a" (src/ppx.ml[172,5155+61]..[172,5155+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[174,5222+0]..[206,6198+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[174,5222+8]..[174,5222+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[174,5222+8]..[174,5222+57])
        expression (src/ppx.ml[174,5222+57]..[206,6198+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[174,5222+57]..[174,5222+60])
            Ppat_var "x" (src/ppx.ml[174,5222+58]..[174,5222+59])
          expression (src/ppx.ml[175,5285+2]..[206,6198+8])
            Pexp_match
            expression (src/ppx.ml[175,5285+8]..[175,5285+9])
              Pexp_ident "x" (src/ppx.ml[175,5285+8]..[175,5285+9])
            [
              <case>
                pattern (src/ppx.ml[176,5300+4]..[176,5300+6])
                  Ppat_construct "[]" (src/ppx.ml[176,5300+4]..[176,5300+6])
                  None
                expression (src/ppx.ml[176,5300+10]..[176,5300+12])
                  Pexp_construct "()" (src/ppx.ml[176,5300+10]..[176,5300+12])
                  None
              <case>
                pattern (src/ppx.ml[177,5313+4]..[177,5313+10])
                  Ppat_construct "::" (src/ppx.ml[177,5313+6]..[177,5313+8])
                  Some
                    []
                    pattern (src/ppx.ml[177,5313+4]..[177,5313+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[177,5313+4]..[177,5313+5])
                          Ppat_var "h" (src/ppx.ml[177,5313+4]..[177,5313+5])
                        pattern (src/ppx.ml[177,5313+9]..[177,5313+10])
                          Ppat_var "t" (src/ppx.ml[177,5313+9]..[177,5313+10])
                      ]
                expression (src/ppx.ml[179,5392+4]..[206,6198+8])
                  Pexp_match
                  expression (src/ppx.ml[179,5392+10]..[179,5392+11])
                    Pexp_ident "h" (src/ppx.ml[179,5392+10]..[179,5392+11])
                  [
                    <case>
                      pattern (src/ppx.ml[180,5409+5]..[187,5647+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[181,5416+6]..[181,5416+14]) ghost
                            pattern (src/ppx.ml[181,5416+6]..[181,5416+14])
                              Ppat_var "pcd_name" (src/ppx.ml[181,5416+6]..[181,5416+14])
                          "pcd_vars" (src/ppx.ml[182,5450+6]..[182,5450+14]) ghost
                            pattern (src/ppx.ml[182,5450+6]..[182,5450+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[182,5450+6]..[182,5450+14])
                          "pcd_args" (src/ppx.ml[183,5489+6]..[183,5489+14]) ghost
                            pattern (src/ppx.ml[183,5489+6]..[183,5489+14])
                              Ppat_var "pcd_args" (src/ppx.ml[183,5489+6]..[183,5489+14])
                          "pcd_res" (src/ppx.ml[184,5534+6]..[184,5534+13]) ghost
                            pattern (src/ppx.ml[184,5534+6]..[184,5534+13])
                              Ppat_var "pcd_res" (src/ppx.ml[184,5534+6]..[184,5534+13])
                          "pcd_loc" (src/ppx.ml[185,5573+6]..[185,5573+13]) ghost
                            pattern (src/ppx.ml[185,5573+6]..[185,5573+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[185,5573+6]..[185,5573+13])
                          "pcd_attributes" (src/ppx.ml[186,5606+6]..[186,5606+20]) ghost
                            pattern (src/ppx.ml[186,5606+6]..[186,5606+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[186,5606+6]..[186,5606+20])
                        ]
                      expression (src/ppx.ml[190,5729+6]..[206,6198+8])
                        Pexp_sequence
                        expression (src/ppx.ml[190,5729+6]..[190,5729+43])
                          Pexp_apply
                          expression (src/ppx.ml[190,5729+6]..[190,5729+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[190,5729+6]..[190,5729+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[190,5729+33]..[190,5729+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[190,5729+34]..[190,5729+42])
                          ]
                        expression (src/ppx.ml[191,5774+6]..[206,6198+8])
                          Pexp_sequence
                          expression (src/ppx.ml[191,5774+6]..[204,6119+16])
                            Pexp_apply
                            expression (src/ppx.ml[191,5774+7]..[191,5774+20])
                              Pexp_ident "print_endline" (src/ppx.ml[191,5774+7]..[191,5774+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[191,5774+21]..[204,6119+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[191,5774+22]..[191,5774+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[191,5774+22]..[191,5774+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[191,5774+37]..[204,6119+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[192,5813+11]..[192,5813+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[192,5813+12]..[192,5813+36]),None)
                                          expression (src/ppx.ml[193,5852+15]..[193,5852+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[193,5852+15]..[193,5852+23])
                                          expression (src/ppx.ml[194,5877+15]..[194,5877+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[194,5877+16]..[194,5877+20]),None)
                                          expression (src/ppx.ml[195,5900+15]..[195,5900+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[195,5900+15]..[195,5900+23])
                                          expression (src/ppx.ml[196,5925+15]..[196,5925+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[196,5925+16]..[196,5925+20]),None)
                                          expression (src/ppx.ml[197,5948+15]..[197,5948+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[197,5948+15]..[197,5948+23])
                                          expression (src/ppx.ml[198,5973+15]..[198,5973+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[198,5973+16]..[198,5973+19]),None)
                                          expression (src/ppx.ml[199,5995+15]..[199,5995+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[199,5995+15]..[199,5995+22])
                                          expression (src/ppx.ml[200,6019+15]..[200,6019+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[200,6019+16]..[200,6019+19]),None)
                                          expression (src/ppx.ml[201,6041+15]..[201,6041+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[201,6041+15]..[201,6041+22])
                                          expression (src/ppx.ml[202,6065+15]..[202,6065+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[202,6065+16]..[202,6065+21]),None)
                                          expression (src/ppx.ml[203,6089+15]..[203,6089+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[203,6089+15]..[203,6089+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[205,6137+6]..[206,6198+8])
                            Pexp_sequence
                            expression (src/ppx.ml[205,6137+6]..[205,6137+59])
                              Pexp_apply
                              expression (src/ppx.ml[205,6137+7]..[205,6137+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[205,6137+7]..[205,6137+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[205,6137+57]..[205,6137+58])
                                    Pexp_ident "t" (src/ppx.ml[205,6137+57]..[205,6137+58])
                              ]
                            expression (src/ppx.ml[206,6198+6]..[206,6198+8])
                              Pexp_construct "()" (src/ppx.ml[206,6198+6]..[206,6198+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[208,6210+0]..[219,6607+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6210+4]..[208,6210+16])
          Ppat_var "process_kind" (src/ppx.ml[208,6210+4]..[208,6210+16])
        expression (src/ppx.ml[208,6210+16]..[219,6607+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[208,6210+16]..[208,6210+19])
            Ppat_var "x" (src/ppx.ml[208,6210+17]..[208,6210+18])
          expression (src/ppx.ml[209,6232+2]..[219,6607+77])
            Pexp_match
            expression (src/ppx.ml[209,6232+8]..[209,6232+9])
              Pexp_ident "x" (src/ppx.ml[209,6232+8]..[209,6232+9])
            [
              <case>
                pattern (src/ppx.ml[211,6269+4]..[211,6269+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[211,6269+4]..[211,6269+18])
                  None
                expression (src/ppx.ml[211,6269+23]..[211,6269+81])
                  Pexp_apply
                  expression (src/ppx.ml[211,6269+24]..[211,6269+37])
                    Pexp_ident "print_endline" (src/ppx.ml[211,6269+24]..[211,6269+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[211,6269+38]..[211,6269+80])
                        Pexp_apply
                        expression (src/ppx.ml[211,6269+39]..[211,6269+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[211,6269+39]..[211,6269+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[211,6269+54]..[211,6269+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[211,6269+56]..[211,6269+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[212,6351+4]..[212,6351+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[212,6351+4]..[212,6351+17])
                  Some
                    []
                    pattern (src/ppx.ml[212,6351+18]..[212,6351+19])
                      Ppat_var "a" (src/ppx.ml[212,6351+18]..[212,6351+19])
                expression (src/ppx.ml[213,6374+4]..[214,6433+65])
                  Pexp_sequence
                  expression (src/ppx.ml[213,6374+4]..[213,6374+57])
                    Pexp_apply
                    expression (src/ppx.ml[213,6374+5]..[213,6374+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[213,6374+5]..[213,6374+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[213,6374+55]..[213,6374+56])
                          Pexp_ident "a" (src/ppx.ml[213,6374+55]..[213,6374+56])
                    ]
                  expression (src/ppx.ml[214,6433+4]..[214,6433+65])
                    Pexp_apply
                    expression (src/ppx.ml[214,6433+5]..[214,6433+18])
                      Pexp_ident "print_endline" (src/ppx.ml[214,6433+5]..[214,6433+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[214,6433+19]..[214,6433+64])
                          Pexp_apply
                          expression (src/ppx.ml[214,6433+20]..[214,6433+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[214,6433+20]..[214,6433+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[214,6433+35]..[214,6433+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[214,6433+36]..[214,6433+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[214,6433+37]..[214,6433+57]),None)
                                  expression (src/ppx.ml[214,6433+61]..[214,6433+62])
                                    Pexp_ident "a" (src/ppx.ml[214,6433+61]..[214,6433+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[217,6546+5]..[217,6546+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[217,6546+5]..[217,6546+17])
                  Some
                    []
                    pattern (src/ppx.ml[217,6546+18]..[217,6546+19])
                      Ppat_var "a" (src/ppx.ml[217,6546+18]..[217,6546+19])
                expression (src/ppx.ml[218,6574+5]..[218,6574+32])
                  Pexp_apply
                  expression (src/ppx.ml[218,6574+5]..[218,6574+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[218,6574+5]..[218,6574+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[218,6574+29]..[218,6574+32])
                        Pexp_ident "a" (src/ppx.ml[218,6574+30]..[218,6574+31])
                  ]
              <case>
                pattern (src/ppx.ml[219,6607+5]..[219,6607+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[219,6607+5]..[219,6607+15])
                  None
                expression (src/ppx.ml[219,6607+19]..[219,6607+77])
                  Pexp_apply
                  expression (src/ppx.ml[219,6607+20]..[219,6607+33])
                    Pexp_ident "print_endline" (src/ppx.ml[219,6607+20]..[219,6607+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[219,6607+34]..[219,6607+76])
                        Pexp_apply
                        expression (src/ppx.ml[219,6607+35]..[219,6607+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[219,6607+35]..[219,6607+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[219,6607+50]..[219,6607+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[219,6607+52]..[219,6607+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[221,6686+0]..[242,7692+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[221,6686+4]..[221,6686+19])
          Ppat_var "print_type_decl" (src/ppx.ml[221,6686+4]..[221,6686+19])
        expression (src/ppx.ml[221,6686+19]..[242,7692+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[221,6686+19]..[221,6686+22])
            Ppat_var "x" (src/ppx.ml[221,6686+20]..[221,6686+21])
          expression (src/ppx.ml[222,6711+2]..[242,7692+38])
            Pexp_match
            expression (src/ppx.ml[222,6711+8]..[222,6711+9])
              Pexp_ident "x" (src/ppx.ml[222,6711+8]..[222,6711+9])
            [
              <case>
                pattern (src/ppx.ml[223,6726+4]..[232,7107+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[224,6732+6]..[224,6732+16]) ghost
                      pattern (src/ppx.ml[224,6732+6]..[224,6732+16])
                        Ppat_var "ptype_name" (src/ppx.ml[224,6732+6]..[224,6732+16])
                    "ptype_params" (src/ppx.ml[225,6769+6]..[225,6769+18]) ghost
                      pattern (src/ppx.ml[225,6769+6]..[225,6769+18])
                        Ppat_var "ptype_params" (src/ppx.ml[225,6769+6]..[225,6769+18])
                    "ptype_cstrs" (src/ppx.ml[226,6841+6]..[226,6841+17]) ghost
                      pattern (src/ppx.ml[226,6841+6]..[226,6841+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[226,6841+6]..[226,6841+17])
                    "ptype_kind" (src/ppx.ml[227,6910+6]..[227,6910+16]) ghost
                      pattern (src/ppx.ml[227,6910+6]..[227,6910+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[227,6910+6]..[227,6910+16])
                    "ptype_private" (src/ppx.ml[228,6947+6]..[228,6947+19]) ghost
                      pattern (src/ppx.ml[228,6947+6]..[228,6947+19])
                        Ppat_var "ptype_private" (src/ppx.ml[228,6947+6]..[228,6947+19])
                    "ptype_manifest" (src/ppx.ml[229,6988+6]..[229,6988+20]) ghost
                      pattern (src/ppx.ml[229,6988+6]..[229,6988+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[229,6988+6]..[229,6988+20])
                    "ptype_attributes" (src/ppx.ml[230,7035+6]..[230,7035+22]) ghost
                      pattern (src/ppx.ml[230,7035+6]..[230,7035+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[230,7035+6]..[230,7035+22])
                    "ptype_loc" (src/ppx.ml[231,7076+6]..[231,7076+15]) ghost
                      pattern (src/ppx.ml[231,7076+6]..[231,7076+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[231,7076+6]..[231,7076+15])
                  ]
                expression (src/ppx.ml[233,7116+4]..[242,7692+38])
                  Pexp_sequence
                  expression (src/ppx.ml[233,7116+4]..[233,7116+69])
                    Pexp_apply
                    expression (src/ppx.ml[233,7116+5]..[233,7116+18])
                      Pexp_ident "print_endline" (src/ppx.ml[233,7116+5]..[233,7116+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[233,7116+19]..[233,7116+68])
                          Pexp_apply
                          expression (src/ppx.ml[233,7116+20]..[233,7116+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[233,7116+20]..[233,7116+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[233,7116+35]..[233,7116+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[233,7116+36]..[233,7116+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[233,7116+37]..[233,7116+53]),None)
                                  expression (src/ppx.ml[233,7116+56]..[233,7116+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[233,7116+56]..[233,7116+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[234,7187+4]..[242,7692+38])
                    Pexp_sequence
                    expression (src/ppx.ml[234,7187+4]..[234,7187+72])
                      Pexp_apply
                      expression (src/ppx.ml[234,7187+5]..[234,7187+18])
                        Pexp_ident "print_endline" (src/ppx.ml[234,7187+5]..[234,7187+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[234,7187+19]..[234,7187+71])
                            Pexp_apply
                            expression (src/ppx.ml[234,7187+20]..[234,7187+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[234,7187+20]..[234,7187+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[234,7187+35]..[234,7187+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[234,7187+36]..[234,7187+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[234,7187+37]..[234,7187+54]),None)
                                    expression (src/ppx.ml[234,7187+57]..[234,7187+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[234,7187+57]..[234,7187+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[235,7261+4]..[242,7692+38])
                      Pexp_sequence
                      expression (src/ppx.ml[235,7261+4]..[235,7261+66])
                        Pexp_apply
                        expression (src/ppx.ml[235,7261+5]..[235,7261+18])
                          Pexp_ident "print_endline" (src/ppx.ml[235,7261+5]..[235,7261+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[235,7261+19]..[235,7261+65])
                              Pexp_apply
                              expression (src/ppx.ml[235,7261+20]..[235,7261+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[235,7261+20]..[235,7261+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[235,7261+35]..[235,7261+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[235,7261+36]..[235,7261+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[235,7261+37]..[235,7261+49]),None)
                                      expression (src/ppx.ml[235,7261+52]..[235,7261+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[235,7261+52]..[235,7261+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[236,7329+4]..[242,7692+38])
                        Pexp_sequence
                        expression (src/ppx.ml[236,7329+4]..[236,7329+63])
                          Pexp_apply
                          expression (src/ppx.ml[236,7329+5]..[236,7329+18])
                            Pexp_ident "print_endline" (src/ppx.ml[236,7329+5]..[236,7329+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[236,7329+19]..[236,7329+62])
                                Pexp_apply
                                expression (src/ppx.ml[236,7329+20]..[236,7329+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[236,7329+20]..[236,7329+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[236,7329+35]..[236,7329+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[236,7329+36]..[236,7329+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[236,7329+37]..[236,7329+48]),None)
                                        expression (src/ppx.ml[236,7329+50]..[236,7329+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[236,7329+50]..[236,7329+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[237,7394+4]..[242,7692+38])
                          Pexp_sequence
                          expression (src/ppx.ml[237,7394+4]..[237,7394+29])
                            Pexp_apply
                            expression (src/ppx.ml[237,7394+5]..[237,7394+17])
                              Pexp_ident "process_kind" (src/ppx.ml[237,7394+5]..[237,7394+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[237,7394+18]..[237,7394+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[237,7394+18]..[237,7394+28])
                            ]
                          expression (src/ppx.ml[238,7425+4]..[242,7692+38])
                            Pexp_apply
                            expression (src/ppx.ml[238,7425+5]..[238,7425+18])
                              Pexp_ident "print_endline" (src/ppx.ml[238,7425+5]..[238,7425+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[238,7425+19]..[242,7692+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[238,7425+20]..[238,7425+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[238,7425+20]..[238,7425+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[238,7425+35]..[242,7692+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[238,7425+36]..[238,7425+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[238,7425+37]..[238,7425+51]),None)
                                          expression (src/ppx.ml[238,7425+55]..[238,7425+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[238,7425+55]..[238,7425+68])
                                          expression (src/ppx.ml[239,7495+36]..[239,7495+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[239,7495+37]..[239,7495+51]),None)
                                          expression (src/ppx.ml[239,7495+54]..[239,7495+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[239,7495+54]..[239,7495+68])
                                          expression (src/ppx.ml[240,7565+36]..[240,7565+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[240,7565+37]..[240,7565+47]),None)
                                          expression (src/ppx.ml[240,7565+50]..[240,7565+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[240,7565+50]..[240,7565+66])
                                          expression (src/ppx.ml[241,7633+36]..[241,7633+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[241,7633+37]..[241,7633+46]),None)
                                          expression (src/ppx.ml[241,7633+49]..[241,7633+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[241,7633+49]..[241,7633+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[244,7736+0]..[250,7871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[244,7736+8]..[244,7736+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[244,7736+8]..[244,7736+30])
        expression (src/ppx.ml[244,7736+30]..[250,7871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[244,7736+30]..[244,7736+33])
            Ppat_var "x" (src/ppx.ml[244,7736+31]..[244,7736+32])
          expression (src/ppx.ml[245,7772+2]..[250,7871+6])
            Pexp_match
            expression (src/ppx.ml[245,7772+8]..[245,7772+9])
              Pexp_ident "x" (src/ppx.ml[245,7772+8]..[245,7772+9])
            [
              <case>
                pattern (src/ppx.ml[246,7787+4]..[246,7787+6])
                  Ppat_construct "[]" (src/ppx.ml[246,7787+4]..[246,7787+6])
                  None
                expression (src/ppx.ml[246,7787+10]..[246,7787+12])
                  Pexp_construct "()" (src/ppx.ml[246,7787+10]..[246,7787+12])
                  None
              <case>
                pattern (src/ppx.ml[247,7800+4]..[247,7800+10])
                  Ppat_construct "::" (src/ppx.ml[247,7800+6]..[247,7800+8])
                  Some
                    []
                    pattern (src/ppx.ml[247,7800+4]..[247,7800+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[247,7800+4]..[247,7800+5])
                          Ppat_var "h" (src/ppx.ml[247,7800+4]..[247,7800+5])
                        pattern (src/ppx.ml[247,7800+9]..[247,7800+10])
                          Ppat_var "t" (src/ppx.ml[247,7800+9]..[247,7800+10])
                      ]
                expression (src/ppx.ml[248,7814+4]..[250,7871+6])
                  Pexp_sequence
                  expression (src/ppx.ml[248,7814+4]..[248,7814+23])
                    Pexp_apply
                    expression (src/ppx.ml[248,7814+5]..[248,7814+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[248,7814+5]..[248,7814+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[248,7814+21]..[248,7814+22])
                          Pexp_ident "h" (src/ppx.ml[248,7814+21]..[248,7814+22])
                    ]
                  expression (src/ppx.ml[249,7839+4]..[250,7871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[249,7839+4]..[249,7839+30])
                      Pexp_apply
                      expression (src/ppx.ml[249,7839+5]..[249,7839+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[249,7839+5]..[249,7839+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[249,7839+28]..[249,7839+29])
                            Pexp_ident "t" (src/ppx.ml[249,7839+28]..[249,7839+29])
                      ]
                    expression (src/ppx.ml[250,7871+4]..[250,7871+6])
                      Pexp_construct "()" (src/ppx.ml[250,7871+4]..[250,7871+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[252,7883+0]..[278,9847+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[252,7883+4]..[252,7883+13])
          Ppat_var "printdesc" (src/ppx.ml[252,7883+4]..[252,7883+13])
        expression (src/ppx.ml[252,7883+13]..[278,9847+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[252,7883+13]..[252,7883+37])
            Ppat_constraint
            pattern (src/ppx.ml[252,7883+14]..[252,7883+15])
              Ppat_var "x" (src/ppx.ml[252,7883+14]..[252,7883+15])
            core_type (src/ppx.ml[252,7883+17]..[252,7883+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[252,7883+17]..[252,7883+36])
              []
          expression (src/ppx.ml[252,7883+38]..[278,9847+128])
            Pexp_constraint
            expression (src/ppx.ml[253,7929+2]..[278,9847+128])
              Pexp_sequence
              expression (src/ppx.ml[253,7929+2]..[253,7929+68])
                Pexp_apply
                expression (src/ppx.ml[253,7929+3]..[253,7929+16])
                  Pexp_ident "print_endline" (src/ppx.ml[253,7929+3]..[253,7929+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[253,7929+17]..[253,7929+67])
                      Pexp_apply
                      expression (src/ppx.ml[253,7929+18]..[253,7929+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[253,7929+18]..[253,7929+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7929+33]..[253,7929+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[253,7929+34]..[253,7929+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[253,7929+35]..[253,7929+61]),None)
                              expression (src/ppx.ml[253,7929+64]..[253,7929+65])
                                Pexp_ident "x" (src/ppx.ml[253,7929+64]..[253,7929+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[254,7999+2]..[278,9847+128])
                Pexp_match
                expression (src/ppx.ml[254,7999+8]..[254,7999+9])
                  Pexp_ident "x" (src/ppx.ml[254,7999+8]..[254,7999+9])
                [
                  <case>
                    pattern (src/ppx.ml[255,8014+4]..[255,8014+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[255,8014+4]..[255,8014+13])
                      Some
                        []
                        pattern (src/ppx.ml[255,8014+14]..[255,8014+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8014+15]..[255,8014+25])
                              Ppat_var "expression" (src/ppx.ml[255,8014+15]..[255,8014+25])
                            pattern (src/ppx.ml[255,8014+26]..[255,8014+36])
                              Ppat_var "attributes" (src/ppx.ml[255,8014+26]..[255,8014+36])
                          ]
                    expression (src/ppx.ml[255,8014+41]..[255,8014+117])
                      Pexp_apply
                      expression (src/ppx.ml[255,8014+42]..[255,8014+55])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8014+42]..[255,8014+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8014+56]..[255,8014+116])
                            Pexp_apply
                            expression (src/ppx.ml[255,8014+57]..[255,8014+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8014+57]..[255,8014+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8014+72]..[255,8014+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8014+73]..[255,8014+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[255,8014+74]..[255,8014+90]),None)
                                    expression (src/ppx.ml[255,8014+93]..[255,8014+103])
                                      Pexp_ident "expression" (src/ppx.ml[255,8014+93]..[255,8014+103])
                                    expression (src/ppx.ml[255,8014+104]..[255,8014+114])
                                      Pexp_ident "attributes" (src/ppx.ml[255,8014+104]..[255,8014+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8152+4]..[257,8152+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[257,8152+4]..[257,8152+14])
                      Some
                        []
                        pattern (src/ppx.ml[257,8152+15]..[257,8152+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[257,8152+16]..[257,8152+24])
                              Ppat_var "rec_flag" (src/ppx.ml[257,8152+16]..[257,8152+24])
                            pattern (src/ppx.ml[257,8152+26]..[257,8152+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[257,8152+26]..[257,8152+44])
                          ]
                    expression (src/ppx.ml[257,8152+48]..[258,8286+48])
                      Pexp_sequence
                      expression (src/ppx.ml[257,8152+48]..[257,8152+132])
                        Pexp_apply
                        expression (src/ppx.ml[257,8152+49]..[257,8152+62])
                          Pexp_ident "print_endline" (src/ppx.ml[257,8152+49]..[257,8152+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[257,8152+63]..[257,8152+131])
                              Pexp_apply
                              expression (src/ppx.ml[257,8152+64]..[257,8152+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[257,8152+64]..[257,8152+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[257,8152+79]..[257,8152+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[257,8152+80]..[257,8152+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[257,8152+81]..[257,8152+98]),None)
                                      expression (src/ppx.ml[257,8152+101]..[257,8152+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[257,8152+101]..[257,8152+109])
                                      expression (src/ppx.ml[257,8152+111]..[257,8152+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[257,8152+111]..[257,8152+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[258,8286+4]..[258,8286+48])
                        Pexp_apply
                        expression (src/ppx.ml[258,8286+4]..[258,8286+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[258,8286+4]..[258,8286+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[258,8286+28]..[258,8286+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[258,8286+29]..[258,8286+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[259,8335+4]..[259,8335+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[259,8335+4]..[259,8335+18])
                      Some
                        []
                        pattern (src/ppx.ml[259,8335+19]..[259,8335+36])
                          Ppat_var "value_description" (src/ppx.ml[259,8335+19]..[259,8335+36])
                    expression (src/ppx.ml[259,8335+39]..[259,8335+116])
                      Pexp_apply
                      expression (src/ppx.ml[259,8335+40]..[259,8335+53])
                        Pexp_ident "print_endline" (src/ppx.ml[259,8335+40]..[259,8335+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[259,8335+54]..[259,8335+115])
                            Pexp_apply
                            expression (src/ppx.ml[259,8335+55]..[259,8335+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[259,8335+55]..[259,8335+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[259,8335+70]..[259,8335+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[259,8335+71]..[259,8335+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[259,8335+72]..[259,8335+93]),None)
                                    expression (src/ppx.ml[259,8335+96]..[259,8335+113])
                                      Pexp_ident "value_description" (src/ppx.ml[259,8335+96]..[259,8335+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,8453+4]..[261,8453+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[261,8453+4]..[261,8453+13])
                      Some
                        []
                        pattern (src/ppx.ml[261,8453+14]..[261,8453+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[261,8453+15]..[261,8453+23])
                              Ppat_var "rec_flag" (src/ppx.ml[261,8453+15]..[261,8453+23])
                            pattern (src/ppx.ml[261,8453+25]..[261,8453+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[261,8453+25]..[261,8453+46])
                          ]
                    expression (src/ppx.ml[263,8532+4]..[264,8583+90])
                      Pexp_sequence
                      expression (src/ppx.ml[263,8532+4]..[263,8532+49])
                        Pexp_apply
                        expression (src/ppx.ml[263,8532+4]..[263,8532+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[263,8532+4]..[263,8532+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[263,8532+26]..[263,8532+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[263,8532+27]..[263,8532+48])
                        ]
                      expression (src/ppx.ml[264,8583+4]..[264,8583+90])
                        Pexp_apply
                        expression (src/ppx.ml[264,8583+5]..[264,8583+18])
                          Pexp_ident "print_endline" (src/ppx.ml[264,8583+5]..[264,8583+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[264,8583+19]..[264,8583+89])
                              Pexp_apply
                              expression (src/ppx.ml[264,8583+20]..[264,8583+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[264,8583+20]..[264,8583+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[264,8583+35]..[264,8583+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[264,8583+36]..[264,8583+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[264,8583+37]..[264,8583+53]),None)
                                      expression (src/ppx.ml[264,8583+56]..[264,8583+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[264,8583+56]..[264,8583+64])
                                      expression (src/ppx.ml[264,8583+66]..[264,8583+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[264,8583+66]..[264,8583+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[267,8676+4]..[267,8676+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[267,8676+4]..[267,8676+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8676+17]..[267,8676+31])
                          Ppat_var "type_extension" (src/ppx.ml[267,8676+17]..[267,8676+31])
                    expression (src/ppx.ml[267,8676+34]..[267,8676+105])
                      Pexp_apply
                      expression (src/ppx.ml[267,8676+35]..[267,8676+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8676+35]..[267,8676+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8676+49]..[267,8676+104])
                            Pexp_apply
                            expression (src/ppx.ml[267,8676+50]..[267,8676+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8676+50]..[267,8676+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8676+65]..[267,8676+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8676+66]..[267,8676+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[267,8676+67]..[267,8676+85]),None)
                                    expression (src/ppx.ml[267,8676+88]..[267,8676+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[267,8676+88]..[267,8676+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8782+4]..[268,8782+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[268,8782+4]..[268,8782+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8782+19]..[268,8782+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[268,8782+19]..[268,8782+40])
                    expression (src/ppx.ml[268,8782+43]..[268,8782+124])
                      Pexp_apply
                      expression (src/ppx.ml[268,8782+44]..[268,8782+57])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8782+44]..[268,8782+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8782+58]..[268,8782+123])
                            Pexp_apply
                            expression (src/ppx.ml[268,8782+59]..[268,8782+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8782+59]..[268,8782+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8782+74]..[268,8782+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8782+75]..[268,8782+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[268,8782+76]..[268,8782+97]),None)
                                    expression (src/ppx.ml[268,8782+100]..[268,8782+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[268,8782+100]..[268,8782+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,8907+4]..[269,8907+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[269,8907+4]..[269,8907+15])
                      Some
                        []
                        pattern (src/ppx.ml[269,8907+17]..[269,8907+31])
                          Ppat_var "module_binding" (src/ppx.ml[269,8907+17]..[269,8907+31])
                    expression (src/ppx.ml[269,8907+34]..[269,8907+104])
                      Pexp_apply
                      expression (src/ppx.ml[269,8907+35]..[269,8907+48])
                        Pexp_ident "print_endline" (src/ppx.ml[269,8907+35]..[269,8907+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,8907+49]..[269,8907+103])
                            Pexp_apply
                            expression (src/ppx.ml[269,8907+50]..[269,8907+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,8907+50]..[269,8907+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,8907+65]..[269,8907+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,8907+66]..[269,8907+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[269,8907+67]..[269,8907+85]),None)
                                    expression (src/ppx.ml[269,8907+87]..[269,8907+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[269,8907+87]..[269,8907+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[270,9012+4]..[270,9012+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[270,9012+4]..[270,9012+18])
                      Some
                        []
                        pattern (src/ppx.ml[270,9012+20]..[270,9012+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[270,9012+20]..[270,9012+39])
                    expression (src/ppx.ml[270,9012+42]..[270,9012+121])
                      Pexp_apply
                      expression (src/ppx.ml[270,9012+43]..[270,9012+56])
                        Pexp_ident "print_endline" (src/ppx.ml[270,9012+43]..[270,9012+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,9012+57]..[270,9012+120])
                            Pexp_apply
                            expression (src/ppx.ml[270,9012+58]..[270,9012+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,9012+58]..[270,9012+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,9012+73]..[270,9012+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,9012+74]..[270,9012+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[270,9012+75]..[270,9012+96]),None)
                                    expression (src/ppx.ml[270,9012+99]..[270,9012+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[270,9012+99]..[270,9012+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9134+4]..[271,9134+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[271,9134+4]..[271,9134+16])
                      Some
                        []
                        pattern (src/ppx.ml[271,9134+17]..[271,9134+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[271,9134+17]..[271,9134+40])
                    expression (src/ppx.ml[271,9134+43]..[271,9134+124])
                      Pexp_apply
                      expression (src/ppx.ml[271,9134+44]..[271,9134+57])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9134+44]..[271,9134+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9134+58]..[271,9134+123])
                            Pexp_apply
                            expression (src/ppx.ml[271,9134+59]..[271,9134+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9134+59]..[271,9134+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9134+74]..[271,9134+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9134+75]..[271,9134+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[271,9134+76]..[271,9134+95]),None)
                                    expression (src/ppx.ml[271,9134+98]..[271,9134+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[271,9134+98]..[271,9134+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9276+4]..[273,9276+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[273,9276+4]..[273,9276+13])
                      Some
                        []
                        pattern (src/ppx.ml[273,9276+14]..[273,9276+30])
                          Ppat_var "open_description" (src/ppx.ml[273,9276+14]..[273,9276+30])
                    expression (src/ppx.ml[273,9276+33]..[273,9276+103])
                      Pexp_apply
                      expression (src/ppx.ml[273,9276+34]..[273,9276+47])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9276+34]..[273,9276+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9276+48]..[273,9276+102])
                            Pexp_apply
                            expression (src/ppx.ml[273,9276+49]..[273,9276+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9276+49]..[273,9276+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9276+64]..[273,9276+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9276+65]..[273,9276+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[273,9276+66]..[273,9276+81]),None)
                                    expression (src/ppx.ml[273,9276+84]..[273,9276+100])
                                      Pexp_ident "open_description" (src/ppx.ml[273,9276+84]..[273,9276+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9380+4]..[274,9380+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[274,9380+4]..[274,9380+14])
                      Some
                        []
                        pattern (src/ppx.ml[274,9380+15]..[274,9380+36])
                          Ppat_var "class_declarations" (src/ppx.ml[274,9380+16]..[274,9380+34])
                    expression (src/ppx.ml[274,9380+39]..[274,9380+113])
                      Pexp_apply
                      expression (src/ppx.ml[274,9380+40]..[274,9380+53])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9380+40]..[274,9380+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9380+54]..[274,9380+112])
                            Pexp_apply
                            expression (src/ppx.ml[274,9380+55]..[274,9380+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9380+55]..[274,9380+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9380+70]..[274,9380+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9380+71]..[274,9380+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[274,9380+72]..[274,9380+89]),None)
                                    expression (src/ppx.ml[274,9380+92]..[274,9380+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[274,9380+92]..[274,9380+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9494+4]..[275,9494+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[275,9494+4]..[275,9494+19])
                      Some
                        []
                        pattern (src/ppx.ml[275,9494+20]..[275,9494+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[275,9494+21]..[275,9494+44])
                    expression (src/ppx.ml[275,9494+48]..[275,9494+132])
                      Pexp_apply
                      expression (src/ppx.ml[275,9494+49]..[275,9494+62])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9494+49]..[275,9494+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9494+63]..[275,9494+131])
                            Pexp_apply
                            expression (src/ppx.ml[275,9494+64]..[275,9494+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9494+64]..[275,9494+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9494+79]..[275,9494+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9494+80]..[275,9494+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[275,9494+81]..[275,9494+103]),None)
                                    expression (src/ppx.ml[275,9494+106]..[275,9494+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[275,9494+106]..[275,9494+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9627+4]..[276,9627+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[276,9627+4]..[276,9627+16])
                      Some
                        []
                        pattern (src/ppx.ml[276,9627+18]..[276,9627+39])
                          Ppat_var "include_declaration" (src/ppx.ml[276,9627+19]..[276,9627+38])
                    expression (src/ppx.ml[276,9627+41]..[276,9627+117])
                      Pexp_apply
                      expression (src/ppx.ml[276,9627+42]..[276,9627+55])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9627+42]..[276,9627+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9627+56]..[276,9627+116])
                            Pexp_apply
                            expression (src/ppx.ml[276,9627+57]..[276,9627+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9627+57]..[276,9627+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9627+72]..[276,9627+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9627+73]..[276,9627+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[276,9627+74]..[276,9627+93]),None)
                                    expression (src/ppx.ml[276,9627+95]..[276,9627+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[276,9627+95]..[276,9627+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[277,9745+4]..[277,9745+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[277,9745+4]..[277,9745+18])
                      Some
                        []
                        pattern (src/ppx.ml[277,9745+19]..[277,9745+30])
                          Ppat_var "attribute" (src/ppx.ml[277,9745+20]..[277,9745+29])
                    expression (src/ppx.ml[277,9745+32]..[277,9745+101])
                      Pexp_apply
                      expression (src/ppx.ml[277,9745+33]..[277,9745+46])
                        Pexp_ident "print_endline" (src/ppx.ml[277,9745+33]..[277,9745+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[277,9745+47]..[277,9745+100])
                            Pexp_apply
                            expression (src/ppx.ml[277,9745+48]..[277,9745+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[277,9745+48]..[277,9745+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[277,9745+63]..[277,9745+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[277,9745+64]..[277,9745+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[277,9745+65]..[277,9745+86]),None)
                                    expression (src/ppx.ml[277,9745+89]..[277,9745+98])
                                      Pexp_ident "attribute" (src/ppx.ml[277,9745+89]..[277,9745+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[278,9847+4]..[278,9847+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[278,9847+4]..[278,9847+18])
                      Some
                        []
                        pattern (src/ppx.ml[278,9847+19]..[278,9847+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[278,9847+21]..[278,9847+30])
                              Ppat_var "extension" (src/ppx.ml[278,9847+21]..[278,9847+30])
                            pattern (src/ppx.ml[278,9847+33]..[278,9847+43])
                              Ppat_var "attributes" (src/ppx.ml[278,9847+33]..[278,9847+43])
                          ]
                    expression (src/ppx.ml[278,9847+46]..[278,9847+128])
                      Pexp_apply
                      expression (src/ppx.ml[278,9847+47]..[278,9847+60])
                        Pexp_ident "print_endline" (src/ppx.ml[278,9847+47]..[278,9847+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,9847+61]..[278,9847+127])
                            Pexp_apply
                            expression (src/ppx.ml[278,9847+62]..[278,9847+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,9847+62]..[278,9847+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,9847+77]..[278,9847+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,9847+78]..[278,9847+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[278,9847+79]..[278,9847+100]),None)
                                    expression (src/ppx.ml[278,9847+103]..[278,9847+112])
                                      Pexp_ident "extension" (src/ppx.ml[278,9847+103]..[278,9847+112])
                                    expression (src/ppx.ml[278,9847+115]..[278,9847+125])
                                      Pexp_ident "attributes" (src/ppx.ml[278,9847+115]..[278,9847+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[252,7883+39]..[252,7883+43])
              Ptyp_constr "unit" (src/ppx.ml[252,7883+39]..[252,7883+43])
              []
    ]
  structure_item (src/ppx.ml[280,9977+0]..[280,9977+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9977+4]..[280,9977+7])
          Ppat_var "foo" (src/ppx.ml[280,9977+4]..[280,9977+7])
        expression (src/ppx.ml[280,9977+10]..[280,9977+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[282,9992+0]..[290,10211+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9992+4]..[282,9992+12])
          Ppat_var "printone" (src/ppx.ml[282,9992+4]..[282,9992+12])
        expression (src/ppx.ml[282,9992+13]..[290,10211+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[282,9992+13]..[282,9992+34])
            Ppat_constraint
            pattern (src/ppx.ml[282,9992+14]..[282,9992+15])
              Ppat_var "x" (src/ppx.ml[282,9992+14]..[282,9992+15])
            core_type (src/ppx.ml[282,9992+18]..[282,9992+32])
              Ptyp_constr "structure_item" (src/ppx.ml[282,9992+18]..[282,9992+32])
              []
          expression (src/ppx.ml[282,9992+35]..[290,10211+6])
            Pexp_constraint
            expression (src/ppx.ml[283,10035+2]..[290,10211+6])
              Pexp_match
              expression (src/ppx.ml[283,10035+8]..[283,10035+9])
                Pexp_ident "x" (src/ppx.ml[283,10035+8]..[283,10035+9])
              [
                <case>
                  pattern (src/ppx.ml[284,10050+3]..[287,10100+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[285,10055+4]..[285,10055+13]) ghost
                        pattern (src/ppx.ml[285,10055+4]..[285,10055+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[285,10055+4]..[285,10055+13])
                    ]
                  expression (src/ppx.ml[289,10184+4]..[290,10211+6])
                    Pexp_sequence
                    expression (src/ppx.ml[289,10184+4]..[289,10184+25])
                      Pexp_apply
                      expression (src/ppx.ml[289,10184+5]..[289,10184+14])
                        Pexp_ident "printdesc" (src/ppx.ml[289,10184+5]..[289,10184+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[289,10184+15]..[289,10184+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[289,10184+15]..[289,10184+24])
                      ]
                    expression (src/ppx.ml[290,10211+4]..[290,10211+6])
                      Pexp_construct "()" (src/ppx.ml[290,10211+4]..[290,10211+6])
                      None
              ]
            core_type (src/ppx.ml[282,9992+36]..[282,9992+40])
              Ptyp_constr "unit" (src/ppx.ml[282,9992+36]..[282,9992+40])
              []
    ]
  structure_item (src/ppx.ml[296,10331+0]..[298,10412+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10331+4]..[296,10331+13])
          Ppat_var "printone2" (src/ppx.ml[296,10331+4]..[296,10331+13])
        expression (src/ppx.ml[296,10331+14]..[298,10412+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[296,10331+14]..[296,10331+15])
            Ppat_var "x" (src/ppx.ml[296,10331+14]..[296,10331+15])
          expression (src/ppx.ml[296,10331+16]..[298,10412+12])
            Pexp_constraint
            expression (src/ppx.ml[297,10355+2]..[298,10412+12])
              Pexp_sequence
              expression (src/ppx.ml[297,10355+2]..[297,10355+55])
                Pexp_apply
                expression (src/ppx.ml[297,10355+3]..[297,10355+16])
                  Pexp_ident "print_endline" (src/ppx.ml[297,10355+3]..[297,10355+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[297,10355+17]..[297,10355+54])
                      Pexp_apply
                      expression (src/ppx.ml[297,10355+18]..[297,10355+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[297,10355+18]..[297,10355+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[297,10355+33]..[297,10355+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[297,10355+34]..[297,10355+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[297,10355+35]..[297,10355+49]),None)
                              expression (src/ppx.ml[297,10355+51]..[297,10355+52])
                                Pexp_ident "x" (src/ppx.ml[297,10355+51]..[297,10355+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[298,10412+2]..[298,10412+12])
                Pexp_apply
                expression (src/ppx.ml[298,10412+2]..[298,10412+10])
                  Pexp_ident "printone" (src/ppx.ml[298,10412+2]..[298,10412+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[298,10412+11]..[298,10412+12])
                      Pexp_ident "x" (src/ppx.ml[298,10412+11]..[298,10412+12])
                ]
            core_type (src/ppx.ml[296,10331+17]..[296,10331+21])
              Ptyp_constr "unit" (src/ppx.ml[296,10331+17]..[296,10331+21])
              []
    ]
  structure_item (src/ppx.ml[300,10428+0]..[302,10459+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10428+4]..[300,10428+9])
          Ppat_var "proc1" (src/ppx.ml[300,10428+4]..[300,10428+9])
        expression (src/ppx.ml[300,10428+10]..[302,10459+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[300,10428+10]..[300,10428+11])
            Ppat_var "x" (src/ppx.ml[300,10428+10]..[300,10428+11])
          expression (src/ppx.ml[301,10444+2]..[302,10459+3])
            Pexp_sequence
            expression (src/ppx.ml[301,10444+2]..[301,10444+13])
              Pexp_apply
              expression (src/ppx.ml[301,10444+2]..[301,10444+11])
                Pexp_ident "printone2" (src/ppx.ml[301,10444+2]..[301,10444+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[301,10444+12]..[301,10444+13])
                    Pexp_ident "x" (src/ppx.ml[301,10444+12]..[301,10444+13])
              ]
            expression (src/ppx.ml[302,10459+2]..[302,10459+3])
              Pexp_ident "x" (src/ppx.ml[302,10459+2]..[302,10459+3])
    ]
  structure_item (src/ppx.ml[304,10464+0]..[307,10613+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[304,10464+4]..[304,10464+9])
          Ppat_var "debug" (src/ppx.ml[304,10464+4]..[304,10464+9])
        expression (src/ppx.ml[304,10464+10]..[307,10613+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[304,10464+10]..[304,10464+14])
            Ppat_var "proc" (src/ppx.ml[304,10464+10]..[304,10464+14])
          expression (src/ppx.ml[304,10464+15]..[307,10613+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[304,10464+15]..[304,10464+18])
              Ppat_var "lst" (src/ppx.ml[304,10464+15]..[304,10464+18])
            expression (src/ppx.ml[304,10464+19]..[307,10613+4])
              Pexp_constraint
              expression (src/ppx.ml[305,10492+2]..[307,10613+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[305,10492+6]..[305,10492+12])
                      Ppat_var "result" (src/ppx.ml[305,10492+6]..[305,10492+12])
                    expression (src/ppx.ml[305,10492+15]..[305,10492+32])
                      Pexp_apply
                      expression (src/ppx.ml[305,10492+15]..[305,10492+23])
                        Pexp_ident "List.map" (src/ppx.ml[305,10492+15]..[305,10492+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[305,10492+24]..[305,10492+28])
                            Pexp_ident "proc" (src/ppx.ml[305,10492+24]..[305,10492+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[305,10492+29]..[305,10492+32])
                            Pexp_ident "lst" (src/ppx.ml[305,10492+29]..[305,10492+32])
                      ]
                ]
                expression (src/ppx.ml[306,10528+2]..[307,10613+4])
                  Pexp_sequence
                  expression (src/ppx.ml[306,10528+2]..[306,10528+83])
                    Pexp_apply
                    expression (src/ppx.ml[306,10528+2]..[306,10528+11])
                      Pexp_ident "List.iter" (src/ppx.ml[306,10528+2]..[306,10528+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[306,10528+12]..[306,10528+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[306,10528+17]..[306,10528+18])
                            Ppat_var "i" (src/ppx.ml[306,10528+17]..[306,10528+18])
                          expression (src/ppx.ml[306,10528+22]..[306,10528+75])
                            Pexp_apply
                            expression (src/ppx.ml[306,10528+22]..[306,10528+35])
                              Pexp_ident "print_endline" (src/ppx.ml[306,10528+22]..[306,10528+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[306,10528+36]..[306,10528+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[306,10528+37]..[306,10528+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[306,10528+37]..[306,10528+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[306,10528+52]..[306,10528+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[306,10528+53]..[306,10528+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[306,10528+54]..[306,10528+69]),None)
                                          expression (src/ppx.ml[306,10528+72]..[306,10528+73])
                                            Pexp_ident "i" (src/ppx.ml[306,10528+72]..[306,10528+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[306,10528+77]..[306,10528+83])
                          Pexp_ident "result" (src/ppx.ml[306,10528+77]..[306,10528+83])
                    ]
                  expression (src/ppx.ml[307,10613+2]..[307,10613+4])
                    Pexp_construct "()" (src/ppx.ml[307,10613+2]..[307,10613+4])
                    None
              core_type (src/ppx.ml[304,10464+21]..[304,10464+25])
                Ptyp_constr "unit" (src/ppx.ml[304,10464+21]..[304,10464+25])
                []
    ]
  structure_item (src/ppx.ml[309,10635+0]..[312,10759+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[309,10635+4]..[309,10635+13])
          Ppat_var "transform" (src/ppx.ml[309,10635+4]..[309,10635+13])
        expression (src/ppx.ml[309,10635+14]..[312,10759+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[309,10635+14]..[309,10635+15])
            Ppat_var "x" (src/ppx.ml[309,10635+14]..[309,10635+15])
          expression (src/ppx.ml[310,10690+2]..[312,10759+3])
            Pexp_sequence
            expression (src/ppx.ml[310,10690+2]..[310,10690+48])
              Pexp_apply
              expression (src/ppx.ml[310,10690+3]..[310,10690+16])
                Pexp_ident "print_endline" (src/ppx.ml[310,10690+3]..[310,10690+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[310,10690+17]..[310,10690+47])
                    Pexp_apply
                    expression (src/ppx.ml[310,10690+18]..[310,10690+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[310,10690+18]..[310,10690+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[310,10690+33]..[310,10690+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[310,10690+34]..[310,10690+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[310,10690+35]..[310,10690+42]),None)
                            expression (src/ppx.ml[310,10690+44]..[310,10690+45])
                              Pexp_ident "x" (src/ppx.ml[310,10690+44]..[310,10690+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[311,10740+2]..[312,10759+3])
              Pexp_sequence
              expression (src/ppx.ml[311,10740+2]..[311,10740+17])
                Pexp_apply
                expression (src/ppx.ml[311,10740+3]..[311,10740+8])
                  Pexp_ident "debug" (src/ppx.ml[311,10740+3]..[311,10740+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[311,10740+9]..[311,10740+14])
                      Pexp_ident "proc1" (src/ppx.ml[311,10740+9]..[311,10740+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[311,10740+15]..[311,10740+16])
                      Pexp_ident "x" (src/ppx.ml[311,10740+15]..[311,10740+16])
                ]
              expression (src/ppx.ml[312,10759+2]..[312,10759+3])
                Pexp_ident "x" (src/ppx.ml[312,10759+2]..[312,10759+3])
    ]
  structure_item (src/ppx.ml[314,10766+1]..[314,10766+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[314,10766+5]..[314,10766+7])
          Ppat_construct "()" (src/ppx.ml[314,10766+5]..[314,10766+7])
          None
        expression (src/ppx.ml[314,10766+10]..[314,10766+69])
          Pexp_apply
          expression (src/ppx.ml[314,10766+10]..[314,10766+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[314,10766+10]..[314,10766+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[314,10766+47]..[314,10766+56])
                Pexp_ident "transform" (src/ppx.ml[314,10766+47]..[314,10766+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[314,10766+57]..[314,10766+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[314,10766+58]..[314,10766+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with | { txt;_} -> (match txt with | txt2 -> txt2)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       print_endline
         (Batteries.dump
            ("DEBUG:Ptyp_constr:", "id", a, "types", b, "id2", myid)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[73,1962+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..src/ppx.ml[69,1879+14])
          Tpat_var "process_id/1437"
        expression (src/ppx.ml[69,1879+14]..src/ppx.ml[73,1962+19]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+17]..src/ppx.ml[69,1879+30])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1439"
                pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                  Tpat_any
              expression (src/ppx.ml[70,1913+2]..src/ppx.ml[73,1962+19])
                Texp_match
                expression (src/ppx.ml[70,1913+8]..src/ppx.ml[70,1913+9])
                  Texp_ident "x/1439"
                [
                  <case>
                    pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                      Tpat_value
                      pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[71,1928+5]..src/ppx.ml[71,1928+8])
                              Tpat_var "txt/1723"
                        ]
                    expression (src/ppx.ml[72,1943+4]..src/ppx.ml[73,1962+19])
                      Texp_match
                      expression (src/ppx.ml[72,1943+10]..src/ppx.ml[72,1943+13])
                        Texp_ident "txt/1723"
                      [
                        <case>
                          pattern (src/ppx.ml[73,1962+4]..src/ppx.ml[73,1962+12])
                            Tpat_value
                            pattern (src/ppx.ml[73,1962+4]..src/ppx.ml[73,1962+12])
                              Tpat_var "txt2/1724"
                          expression (src/ppx.ml[73,1962+15]..src/ppx.ml[73,1962+19])
                            Texp_ident "txt2/1724"
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[77,2063+0]..src/ppx.ml[158,4912+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2063+8]..src/ppx.ml[77,2063+27])
          Tpat_var "process_record_kind/1725"
        expression (src/ppx.ml[77,2063+27]..src/ppx.ml[91,2547+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[77,2063+27]..src/ppx.ml[77,2063+30])
                Tpat_var "x/1730"
              expression (src/ppx.ml[78,2096+2]..src/ppx.ml[91,2547+47])
                Texp_match
                expression (src/ppx.ml[78,2096+8]..src/ppx.ml[78,2096+9])
                  Texp_ident "x/1730"
                [
                  <case>
                    pattern (src/ppx.ml[79,2111+4]..src/ppx.ml[85,2292+4])
                      Tpat_value
                      pattern (src/ppx.ml[79,2111+4]..src/ppx.ml[85,2292+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[80,2117+5]..src/ppx.ml[80,2117+13])
                              Tpat_var "pld_name/1731"
                          "pld_mutable"
                            pattern (src/ppx.ml[81,2150+5]..src/ppx.ml[81,2150+16])
                              Tpat_var "pld_mutable/1732"
                          "pld_type"
                            pattern (src/ppx.ml[82,2188+5]..src/ppx.ml[82,2188+13])
                              Tpat_var "pld_type/1733"
                          "pld_loc"
                            pattern (src/ppx.ml[83,2220+5]..src/ppx.ml[83,2220+12])
                              Tpat_var "pld_loc/1734"
                          "pld_attributes"
                            pattern (src/ppx.ml[84,2252+5]..src/ppx.ml[84,2252+19])
                              Tpat_var "pld_attributes/1735"
                        ]
                    expression (src/ppx.ml[86,2300+4]..src/ppx.ml[91,2547+47])
                      Texp_apply
                      expression (src/ppx.ml[86,2300+5]..src/ppx.ml[86,2300+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[86,2300+19]..src/ppx.ml[91,2547+46])
                            Texp_apply
                            expression (src/ppx.ml[86,2300+20]..src/ppx.ml[86,2300+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[86,2300+35]..src/ppx.ml[91,2547+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[86,2300+36]..src/ppx.ml[86,2300+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[86,2300+37]..src/ppx.ml[86,2300+56]),None)
                                    expression (src/ppx.ml[87,2361+36]..src/ppx.ml[87,2361+44])
                                      Texp_ident "pld_name/1731"
                                    expression (src/ppx.ml[88,2407+36]..src/ppx.ml[88,2407+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[88,2407+37]..src/ppx.ml[88,2407+44]),None)
                                    expression (src/ppx.ml[89,2454+36]..src/ppx.ml[89,2454+47])
                                      Texp_ident "pld_mutable/1732"
                                    expression (src/ppx.ml[90,2503+36]..src/ppx.ml[90,2503+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[90,2503+37]..src/ppx.ml[90,2503+41]),None)
                                    expression (src/ppx.ml[91,2547+36]..src/ppx.ml[91,2547+44])
                                      Texp_ident "pld_type/1733"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[93,2599+0]..src/ppx.ml[93,2599+22])
          Tpat_var "process_core_type_desc/1726"
        expression (src/ppx.ml[93,2599+23]..src/ppx.ml[132,4230+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[93,2599+23]..src/ppx.ml[93,2599+24])
                Tpat_var "x/1736"
              expression (src/ppx.ml[94,2626+2]..src/ppx.ml[132,4230+65])
                Texp_match
                expression (src/ppx.ml[94,2626+8]..src/ppx.ml[94,2626+9])
                  Texp_ident "x/1736"
                [
                  <case>
                    pattern (src/ppx.ml[95,2641+4]..src/ppx.ml[95,2641+21])
                      Tpat_value
                      pattern (src/ppx.ml[95,2641+4]..src/ppx.ml[95,2641+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[95,2641+17]..src/ppx.ml[95,2641+18])
                            Tpat_var "a/1737"
                          pattern (src/ppx.ml[95,2641+19]..src/ppx.ml[95,2641+20])
                            Tpat_var "b/1738"
                        ]
                        None
                    expression (src/ppx.ml[97,2712+4]..src/ppx.ml[99,2778+91])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[97,2712+8]..src/ppx.ml[97,2712+12])
                            Tpat_var "myid/1757"
                          expression (src/ppx.ml[97,2712+15]..src/ppx.ml[97,2712+29])
                            Texp_apply
                            expression (src/ppx.ml[97,2712+16]..src/ppx.ml[97,2712+26])
                              Texp_ident "process_id/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[97,2712+27]..src/ppx.ml[97,2712+28])
                                  Texp_ident "a/1737"
                            ]
                      ]
                      expression (src/ppx.ml[98,2745+4]..src/ppx.ml[99,2778+91])
                        Texp_sequence
                        expression (src/ppx.ml[98,2745+4]..src/ppx.ml[98,2745+30])
                          Texp_apply
                          expression (src/ppx.ml[98,2745+5]..src/ppx.ml[98,2745+27])
                            Texp_ident "process_core_type_list/1729"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[98,2745+28]..src/ppx.ml[98,2745+29])
                                Texp_ident "b/1738"
                          ]
                        expression (src/ppx.ml[99,2778+4]..src/ppx.ml[99,2778+91])
                          Texp_apply
                          expression (src/ppx.ml[99,2778+5]..src/ppx.ml[99,2778+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[99,2778+19]..src/ppx.ml[99,2778+90])
                                Texp_apply
                                expression (src/ppx.ml[99,2778+20]..src/ppx.ml[99,2778+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[99,2778+35]..src/ppx.ml[99,2778+89])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[99,2778+36]..src/ppx.ml[99,2778+56])
                                          Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[99,2778+37]..src/ppx.ml[99,2778+55]),None)
                                        expression (src/ppx.ml[99,2778+58]..src/ppx.ml[99,2778+62])
                                          Texp_constant Const_string("id",(src/ppx.ml[99,2778+59]..src/ppx.ml[99,2778+61]),None)
                                        expression (src/ppx.ml[99,2778+63]..src/ppx.ml[99,2778+64])
                                          Texp_ident "a/1737"
                                        expression (src/ppx.ml[99,2778+66]..src/ppx.ml[99,2778+73])
                                          Texp_constant Const_string("types",(src/ppx.ml[99,2778+67]..src/ppx.ml[99,2778+72]),None)
                                        expression (src/ppx.ml[99,2778+74]..src/ppx.ml[99,2778+75])
                                          Texp_ident "b/1738"
                                        expression (src/ppx.ml[99,2778+78]..src/ppx.ml[99,2778+83])
                                          Texp_constant Const_string("id2",(src/ppx.ml[99,2778+79]..src/ppx.ml[99,2778+82]),None)
                                        expression (src/ppx.ml[99,2778+84]..src/ppx.ml[99,2778+88])
                                          Texp_ident "myid/1757"
                                      ]
                                ]
                          ]
                  <case>
                    pattern (src/ppx.ml[101,2871+4]..src/ppx.ml[101,2871+16])
                      Tpat_value
                      pattern (src/ppx.ml[101,2871+4]..src/ppx.ml[101,2871+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[101,2871+15]..src/ppx.ml[101,2871+16])
                            Tpat_var "a/1739"
                        ]
                        None
                    expression (src/ppx.ml[103,2919+4]..src/ppx.ml[103,2919+59])
                      Texp_apply
                      expression (src/ppx.ml[103,2919+5]..src/ppx.ml[103,2919+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,2919+19]..src/ppx.ml[103,2919+58])
                            Texp_apply
                            expression (src/ppx.ml[103,2919+20]..src/ppx.ml[103,2919+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,2919+35]..src/ppx.ml[103,2919+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[103,2919+37]..src/ppx.ml[103,2919+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[106,2998+4]..src/ppx.ml[106,2998+12])
                      Tpat_value
                      pattern (src/ppx.ml[106,2998+4]..src/ppx.ml[106,2998+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[106,2998+17]..src/ppx.ml[106,2998+69])
                      Texp_apply
                      expression (src/ppx.ml[106,2998+18]..src/ppx.ml[106,2998+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[106,2998+32]..src/ppx.ml[106,2998+68])
                            Texp_apply
                            expression (src/ppx.ml[106,2998+33]..src/ppx.ml[106,2998+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[106,2998+48]..src/ppx.ml[106,2998+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[106,2998+50]..src/ppx.ml[106,2998+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3068+4]..src/ppx.ml[107,3068+17])
                      Tpat_value
                      pattern (src/ppx.ml[107,3068+4]..src/ppx.ml[107,3068+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[107,3068+13]..src/ppx.ml[107,3068+17])
                            Tpat_var "name/1740"
                        ]
                        None
                    expression (src/ppx.ml[107,3068+20]..src/ppx.ml[107,3068+80])
                      Texp_apply
                      expression (src/ppx.ml[107,3068+21]..src/ppx.ml[107,3068+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[107,3068+35]..src/ppx.ml[107,3068+79])
                            Texp_apply
                            expression (src/ppx.ml[107,3068+36]..src/ppx.ml[107,3068+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[107,3068+51]..src/ppx.ml[107,3068+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[107,3068+52]..src/ppx.ml[107,3068+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[107,3068+53]..src/ppx.ml[107,3068+68]),None)
                                    expression (src/ppx.ml[107,3068+73]..src/ppx.ml[107,3068+77])
                                      Texp_ident "name/1740"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[108,3149+4]..src/ppx.ml[108,3149+51])
                      Tpat_value
                      pattern (src/ppx.ml[108,3149+4]..src/ppx.ml[108,3149+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[108,3149+16]..src/ppx.ml[108,3149+25])
                            Tpat_var "arg_label/1741"
                          pattern (src/ppx.ml[108,3149+28]..src/ppx.ml[108,3149+37])
                            Tpat_var "core_type/1742"
                          pattern (src/ppx.ml[108,3149+40]..src/ppx.ml[108,3149+50])
                            Tpat_var "core_type2/1743"
                        ]
                        None
                    expression (src/ppx.ml[109,3204+4]..src/ppx.ml[109,3204+61])
                      Texp_apply
                      expression (src/ppx.ml[109,3204+5]..src/ppx.ml[109,3204+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3204+19]..src/ppx.ml[109,3204+60])
                            Texp_apply
                            expression (src/ppx.ml[109,3204+20]..src/ppx.ml[109,3204+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3204+35]..src/ppx.ml[109,3204+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[109,3204+37]..src/ppx.ml[109,3204+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[111,3267+4]..src/ppx.ml[111,3267+21])
                      Tpat_value
                      pattern (src/ppx.ml[111,3267+4]..src/ppx.ml[111,3267+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[111,3267+17]..src/ppx.ml[111,3267+18])
                            Tpat_var "a/1744"
                          pattern (src/ppx.ml[111,3267+19]..src/ppx.ml[111,3267+20])
                            Tpat_var "b/1745"
                        ]
                        None
                    expression (src/ppx.ml[113,3336+4]..src/ppx.ml[113,3336+60])
                      Texp_apply
                      expression (src/ppx.ml[113,3336+5]..src/ppx.ml[113,3336+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[113,3336+19]..src/ppx.ml[113,3336+59])
                            Texp_apply
                            expression (src/ppx.ml[113,3336+20]..src/ppx.ml[113,3336+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[113,3336+35]..src/ppx.ml[113,3336+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[113,3336+37]..src/ppx.ml[113,3336+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[114,3397+4]..src/ppx.ml[114,3397+20])
                      Tpat_value
                      pattern (src/ppx.ml[114,3397+4]..src/ppx.ml[114,3397+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[114,3397+16]..src/ppx.ml[114,3397+17])
                            Tpat_var "a/1746"
                          pattern (src/ppx.ml[114,3397+18]..src/ppx.ml[114,3397+19])
                            Tpat_var "b/1747"
                        ]
                        None
                    expression (src/ppx.ml[116,3467+4]..src/ppx.ml[116,3467+60])
                      Texp_apply
                      expression (src/ppx.ml[116,3467+5]..src/ppx.ml[116,3467+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[116,3467+19]..src/ppx.ml[116,3467+59])
                            Texp_apply
                            expression (src/ppx.ml[116,3467+20]..src/ppx.ml[116,3467+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[116,3467+35]..src/ppx.ml[116,3467+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[116,3467+37]..src/ppx.ml[116,3467+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[117,3528+4]..src/ppx.ml[117,3528+20])
                      Tpat_value
                      pattern (src/ppx.ml[117,3528+4]..src/ppx.ml[117,3528+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[117,3528+16]..src/ppx.ml[117,3528+17])
                            Tpat_var "a/1748"
                          pattern (src/ppx.ml[117,3528+18]..src/ppx.ml[117,3528+19])
                            Tpat_var "b/1749"
                        ]
                        None
                    expression (src/ppx.ml[119,3589+4]..src/ppx.ml[119,3589+60])
                      Texp_apply
                      expression (src/ppx.ml[119,3589+5]..src/ppx.ml[119,3589+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3589+19]..src/ppx.ml[119,3589+59])
                            Texp_apply
                            expression (src/ppx.ml[119,3589+20]..src/ppx.ml[119,3589+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3589+35]..src/ppx.ml[119,3589+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[119,3589+37]..src/ppx.ml[119,3589+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[120,3650+4]..src/ppx.ml[120,3650+24])
                      Tpat_value
                      pattern (src/ppx.ml[120,3650+4]..src/ppx.ml[120,3650+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[120,3650+18]..src/ppx.ml[120,3650+19])
                            Tpat_var "a/1750"
                          pattern (src/ppx.ml[120,3650+20]..src/ppx.ml[120,3650+21])
                            Tpat_var "b/1751"
                          pattern (src/ppx.ml[120,3650+22]..src/ppx.ml[120,3650+23])
                            Tpat_var "c/1752"
                        ]
                        None
                    expression (src/ppx.ml[122,3740+4]..src/ppx.ml[122,3740+60])
                      Texp_apply
                      expression (src/ppx.ml[122,3740+5]..src/ppx.ml[122,3740+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[122,3740+19]..src/ppx.ml[122,3740+59])
                            Texp_apply
                            expression (src/ppx.ml[122,3740+20]..src/ppx.ml[122,3740+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[122,3740+35]..src/ppx.ml[122,3740+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[122,3740+37]..src/ppx.ml[122,3740+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[123,3801+4]..src/ppx.ml[123,3801+19])
                      Tpat_value
                      pattern (src/ppx.ml[123,3801+4]..src/ppx.ml[123,3801+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[123,3801+15]..src/ppx.ml[123,3801+16])
                            Tpat_var "a/1753"
                          pattern (src/ppx.ml[123,3801+17]..src/ppx.ml[123,3801+18])
                            Tpat_var "b/1754"
                        ]
                        None
                    expression (src/ppx.ml[125,3865+4]..src/ppx.ml[125,3865+60])
                      Texp_apply
                      expression (src/ppx.ml[125,3865+5]..src/ppx.ml[125,3865+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[125,3865+19]..src/ppx.ml[125,3865+59])
                            Texp_apply
                            expression (src/ppx.ml[125,3865+20]..src/ppx.ml[125,3865+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[125,3865+35]..src/ppx.ml[125,3865+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[125,3865+37]..src/ppx.ml[125,3865+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[126,3926+4]..src/ppx.ml[126,3926+18])
                      Tpat_value
                      pattern (src/ppx.ml[126,3926+4]..src/ppx.ml[126,3926+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[126,3926+17]..src/ppx.ml[126,3926+18])
                            Tpat_var "a/1755"
                        ]
                        None
                    expression (src/ppx.ml[128,3974+4]..src/ppx.ml[128,3974+62])
                      Texp_apply
                      expression (src/ppx.ml[128,3974+5]..src/ppx.ml[128,3974+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[128,3974+19]..src/ppx.ml[128,3974+61])
                            Texp_apply
                            expression (src/ppx.ml[128,3974+20]..src/ppx.ml[128,3974+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[128,3974+35]..src/ppx.ml[128,3974+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[128,3974+36]..src/ppx.ml[128,3974+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[128,3974+37]..src/ppx.ml[128,3974+55]),None)
                                    expression (src/ppx.ml[128,3974+57]..src/ppx.ml[128,3974+58])
                                      Texp_ident "a/1755"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[131,4182+4]..src/ppx.ml[131,4182+20])
                      Tpat_value
                      pattern (src/ppx.ml[131,4182+4]..src/ppx.ml[131,4182+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[131,4182+19]..src/ppx.ml[131,4182+20])
                            Tpat_var "a/1756"
                        ]
                        None
                    expression (src/ppx.ml[132,4230+4]..src/ppx.ml[132,4230+65])
                      Texp_apply
                      expression (src/ppx.ml[132,4230+5]..src/ppx.ml[132,4230+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[132,4230+19]..src/ppx.ml[132,4230+64])
                            Texp_apply
                            expression (src/ppx.ml[132,4230+20]..src/ppx.ml[132,4230+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[132,4230+35]..src/ppx.ml[132,4230+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[132,4230+36]..src/ppx.ml[132,4230+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[132,4230+37]..src/ppx.ml[132,4230+58]),None)
                                    expression (src/ppx.ml[132,4230+60]..src/ppx.ml[132,4230+61])
                                      Texp_ident "a/1756"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[134,4300+2]..src/ppx.ml[134,4300+26])
          Tpat_var "process_record_kind_list/1727"
        expression (src/ppx.ml[134,4300+26]..src/ppx.ml[140,4437+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[134,4300+26]..src/ppx.ml[134,4300+29])
                Tpat_var "x/1797"
              expression (src/ppx.ml[135,4332+2]..src/ppx.ml[140,4437+6])
                Texp_match
                expression (src/ppx.ml[135,4332+8]..src/ppx.ml[135,4332+9])
                  Texp_ident "x/1797"
                [
                  <case>
                    pattern (src/ppx.ml[136,4347+4]..src/ppx.ml[136,4347+6])
                      Tpat_value
                      pattern (src/ppx.ml[136,4347+4]..src/ppx.ml[136,4347+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[136,4347+10]..src/ppx.ml[136,4347+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[137,4360+4]..src/ppx.ml[137,4360+10])
                      Tpat_value
                      pattern (src/ppx.ml[137,4360+4]..src/ppx.ml[137,4360+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[137,4360+4]..src/ppx.ml[137,4360+5])
                            Tpat_var "h/1798"
                          pattern (src/ppx.ml[137,4360+9]..src/ppx.ml[137,4360+10])
                            Tpat_var "t/1799"
                        ]
                        None
                    expression (src/ppx.ml[138,4374+4]..src/ppx.ml[140,4437+6])
                      Texp_sequence
                      expression (src/ppx.ml[138,4374+4]..src/ppx.ml[138,4374+27])
                        Texp_apply
                        expression (src/ppx.ml[138,4374+5]..src/ppx.ml[138,4374+24])
                          Texp_ident "process_record_kind/1725"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[138,4374+25]..src/ppx.ml[138,4374+26])
                              Texp_ident "h/1798"
                        ]
                      expression (src/ppx.ml[139,4403+4]..src/ppx.ml[140,4437+6])
                        Texp_sequence
                        expression (src/ppx.ml[139,4403+4]..src/ppx.ml[139,4403+32])
                          Texp_apply
                          expression (src/ppx.ml[139,4403+5]..src/ppx.ml[139,4403+29])
                            Texp_ident "process_record_kind_list/1727"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[139,4403+30]..src/ppx.ml[139,4403+31])
                                Texp_ident "t/1799"
                          ]
                        expression (src/ppx.ml[140,4437+4]..src/ppx.ml[140,4437+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[142,4448+0]..src/ppx.ml[142,4448+17])
          Tpat_var "process_core_type/1728"
        expression (src/ppx.ml[142,4448+17]..src/ppx.ml[152,4715+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[142,4448+17]..src/ppx.ml[142,4448+20])
                Tpat_var "x/1800"
              expression (src/ppx.ml[143,4471+2]..src/ppx.ml[152,4715+80])
                Texp_match
                expression (src/ppx.ml[143,4471+8]..src/ppx.ml[143,4471+9])
                  Texp_ident "x/1800"
                [
                  <case>
                    pattern (src/ppx.ml[144,4487+4]..src/ppx.ml[149,4648+5])
                      Tpat_value
                      pattern (src/ppx.ml[144,4487+4]..src/ppx.ml[149,4648+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[145,4493+6]..src/ppx.ml[145,4493+15])
                              Tpat_var "ptyp_desc/1801"
                          "ptyp_loc"
                            pattern (src/ppx.ml[146,4532+5]..src/ppx.ml[146,4532+13])
                              Tpat_var "ptyp_loc/1802"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[147,4565+5]..src/ppx.ml[147,4565+19])
                              Tpat_var "ptyp_loc_stack/1803"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[148,4608+5]..src/ppx.ml[148,4608+20])
                              Tpat_var "ptyp_attributes/1804"
                        ]
                    expression (src/ppx.ml[150,4656+4]..src/ppx.ml[152,4715+80])
                      Texp_sequence
                      expression (src/ppx.ml[150,4656+4]..src/ppx.ml[150,4656+38])
                        Texp_apply
                        expression (src/ppx.ml[150,4656+5]..src/ppx.ml[150,4656+27])
                          Texp_ident "process_core_type_desc/1726"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[150,4656+28]..src/ppx.ml[150,4656+37])
                              Texp_ident "ptyp_desc/1801"
                        ]
                      expression (src/ppx.ml[152,4715+4]..src/ppx.ml[152,4715+80])
                        Texp_apply
                        expression (src/ppx.ml[152,4715+5]..src/ppx.ml[152,4715+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[152,4715+19]..src/ppx.ml[152,4715+79])
                              Texp_apply
                              expression (src/ppx.ml[152,4715+20]..src/ppx.ml[152,4715+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[152,4715+35]..src/ppx.ml[152,4715+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[152,4715+36]..src/ppx.ml[152,4715+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[152,4715+37]..src/ppx.ml[152,4715+63]),None)
                                      expression (src/ppx.ml[152,4715+68]..src/ppx.ml[152,4715+77])
                                        Texp_ident "ptyp_desc/1801"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[153,4796+4]..src/ppx.ml[153,4796+26])
          Tpat_var "process_core_type_list/1729"
        expression (src/ppx.ml[153,4796+26]..src/ppx.ml[158,4912+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[153,4796+27]..src/ppx.ml[153,4796+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[153,4796+29]..src/ppx.ml[153,4796+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[153,4796+29]..src/ppx.ml[153,4796+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1805"
                pattern (src/ppx.ml[153,4796+27]..src/ppx.ml[153,4796+28])
                  Tpat_any
              expression (src/ppx.ml[154,4843+2]..src/ppx.ml[158,4912+29])
                Texp_match
                expression (src/ppx.ml[154,4843+8]..src/ppx.ml[154,4843+9])
                  Texp_ident "x/1805"
                [
                  <case>
                    pattern (src/ppx.ml[155,4858+4]..src/ppx.ml[155,4858+6])
                      Tpat_value
                      pattern (src/ppx.ml[155,4858+4]..src/ppx.ml[155,4858+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[155,4858+10]..src/ppx.ml[155,4858+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[156,4871+4]..src/ppx.ml[156,4871+10])
                      Tpat_value
                      pattern (src/ppx.ml[156,4871+4]..src/ppx.ml[156,4871+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[156,4871+4]..src/ppx.ml[156,4871+5])
                            Tpat_var "h/1806"
                          pattern (src/ppx.ml[156,4871+9]..src/ppx.ml[156,4871+10])
                            Tpat_var "t/1807"
                        ]
                        None
                    expression (src/ppx.ml[157,4885+4]..src/ppx.ml[158,4912+29])
                      Texp_sequence
                      expression (src/ppx.ml[157,4885+4]..src/ppx.ml[157,4885+25])
                        Texp_apply
                        expression (src/ppx.ml[157,4885+4]..src/ppx.ml[157,4885+21])
                          Texp_ident "process_core_type/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[157,4885+22]..src/ppx.ml[157,4885+25])
                              Texp_ident "h/1806"
                        ]
                      expression (src/ppx.ml[158,4912+4]..src/ppx.ml[158,4912+29])
                        Texp_apply
                        expression (src/ppx.ml[158,4912+4]..src/ppx.ml[158,4912+26])
                          Texp_ident "process_core_type_list/1729"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[158,4912+26]..src/ppx.ml[158,4912+29])
                              Texp_ident "t/1807"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[165,4956+0]..src/ppx.ml[172,5155+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[165,4956+4]..src/ppx.ml[165,4956+31])
          Tpat_var "print_constructor_arguments/1808"
        expression (src/ppx.ml[165,4956+31]..src/ppx.ml[172,5155+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[165,4956+31]..src/ppx.ml[165,4956+34])
                Tpat_var "x/1810"
              expression (src/ppx.ml[166,4993+2]..src/ppx.ml[172,5155+65])
                Texp_match
                expression (src/ppx.ml[166,4993+8]..src/ppx.ml[166,4993+9])
                  Texp_ident "x/1810"
                [
                  <case>
                    pattern (src/ppx.ml[167,5008+4]..src/ppx.ml[167,5008+17])
                      Tpat_value
                      pattern (src/ppx.ml[167,5008+4]..src/ppx.ml[167,5008+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[167,5008+16]..src/ppx.ml[167,5008+17])
                            Tpat_var "a/1811"
                        ]
                        None
                    expression (src/ppx.ml[168,5029+4]..src/ppx.ml[169,5061+64])
                      Texp_sequence
                      expression (src/ppx.ml[168,5029+4]..src/ppx.ml[168,5029+30])
                        Texp_apply
                        expression (src/ppx.ml[168,5029+5]..src/ppx.ml[168,5029+27])
                          Texp_ident "process_core_type_list/1729"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[168,5029+28]..src/ppx.ml[168,5029+29])
                              Texp_ident "a/1811"
                        ]
                      expression (src/ppx.ml[169,5061+4]..src/ppx.ml[169,5061+64])
                        Texp_apply
                        expression (src/ppx.ml[169,5061+5]..src/ppx.ml[169,5061+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[169,5061+19]..src/ppx.ml[169,5061+63])
                              Texp_apply
                              expression (src/ppx.ml[169,5061+20]..src/ppx.ml[169,5061+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[169,5061+35]..src/ppx.ml[169,5061+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[169,5061+36]..src/ppx.ml[169,5061+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[169,5061+37]..src/ppx.ml[169,5061+55]),None)
                                      expression (src/ppx.ml[169,5061+60]..src/ppx.ml[169,5061+61])
                                        Texp_ident "a/1811"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[171,5133+4]..src/ppx.ml[171,5133+18])
                      Tpat_value
                      pattern (src/ppx.ml[171,5133+4]..src/ppx.ml[171,5133+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[171,5133+17]..src/ppx.ml[171,5133+18])
                            Tpat_var "a/1812"
                        ]
                        None
                    expression (src/ppx.ml[172,5155+4]..src/ppx.ml[172,5155+65])
                      Texp_apply
                      expression (src/ppx.ml[172,5155+5]..src/ppx.ml[172,5155+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[172,5155+19]..src/ppx.ml[172,5155+64])
                            Texp_apply
                            expression (src/ppx.ml[172,5155+20]..src/ppx.ml[172,5155+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[172,5155+35]..src/ppx.ml[172,5155+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[172,5155+36]..src/ppx.ml[172,5155+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[172,5155+37]..src/ppx.ml[172,5155+56]),None)
                                    expression (src/ppx.ml[172,5155+61]..src/ppx.ml[172,5155+62])
                                      Texp_ident "a/1812"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[174,5222+0]..src/ppx.ml[206,6198+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[174,5222+8]..src/ppx.ml[174,5222+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1813"
        expression (src/ppx.ml[174,5222+57]..src/ppx.ml[206,6198+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[174,5222+57]..src/ppx.ml[174,5222+60])
                Tpat_var "x/1814"
              expression (src/ppx.ml[175,5285+2]..src/ppx.ml[206,6198+8])
                Texp_match
                expression (src/ppx.ml[175,5285+8]..src/ppx.ml[175,5285+9])
                  Texp_ident "x/1814"
                [
                  <case>
                    pattern (src/ppx.ml[176,5300+4]..src/ppx.ml[176,5300+6])
                      Tpat_value
                      pattern (src/ppx.ml[176,5300+4]..src/ppx.ml[176,5300+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[176,5300+10]..src/ppx.ml[176,5300+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[177,5313+4]..src/ppx.ml[177,5313+10])
                      Tpat_value
                      pattern (src/ppx.ml[177,5313+4]..src/ppx.ml[177,5313+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[177,5313+4]..src/ppx.ml[177,5313+5])
                            Tpat_var "h/1815"
                          pattern (src/ppx.ml[177,5313+9]..src/ppx.ml[177,5313+10])
                            Tpat_var "t/1816"
                        ]
                        None
                    expression (src/ppx.ml[179,5392+4]..src/ppx.ml[206,6198+8])
                      Texp_match
                      expression (src/ppx.ml[179,5392+10]..src/ppx.ml[179,5392+11])
                        Texp_ident "h/1815"
                      [
                        <case>
                          pattern (src/ppx.ml[180,5409+5]..src/ppx.ml[187,5647+5])
                            Tpat_value
                            pattern (src/ppx.ml[180,5409+5]..src/ppx.ml[187,5647+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[181,5416+6]..src/ppx.ml[181,5416+14])
                                    Tpat_var "pcd_name/1817"
                                "pcd_vars"
                                  pattern (src/ppx.ml[182,5450+6]..src/ppx.ml[182,5450+14])
                                    Tpat_var "pcd_vars/1818"
                                "pcd_args"
                                  pattern (src/ppx.ml[183,5489+6]..src/ppx.ml[183,5489+14])
                                    Tpat_var "pcd_args/1819"
                                "pcd_res"
                                  pattern (src/ppx.ml[184,5534+6]..src/ppx.ml[184,5534+13])
                                    Tpat_var "pcd_res/1820"
                                "pcd_loc"
                                  pattern (src/ppx.ml[185,5573+6]..src/ppx.ml[185,5573+13])
                                    Tpat_var "pcd_loc/1821"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[186,5606+6]..src/ppx.ml[186,5606+20])
                                    Tpat_var "pcd_attributes/1822"
                              ]
                          expression (src/ppx.ml[190,5729+6]..src/ppx.ml[206,6198+8])
                            Texp_sequence
                            expression (src/ppx.ml[190,5729+6]..src/ppx.ml[190,5729+43])
                              Texp_apply
                              expression (src/ppx.ml[190,5729+6]..src/ppx.ml[190,5729+33])
                                Texp_ident "print_constructor_arguments/1808"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[190,5729+33]..src/ppx.ml[190,5729+43])
                                    Texp_ident "pcd_args/1819"
                              ]
                            expression (src/ppx.ml[191,5774+6]..src/ppx.ml[206,6198+8])
                              Texp_sequence
                              expression (src/ppx.ml[191,5774+6]..src/ppx.ml[204,6119+16])
                                Texp_apply
                                expression (src/ppx.ml[191,5774+7]..src/ppx.ml[191,5774+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[191,5774+21]..src/ppx.ml[204,6119+15])
                                      Texp_apply
                                      expression (src/ppx.ml[191,5774+22]..src/ppx.ml[191,5774+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[191,5774+37]..src/ppx.ml[204,6119+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[192,5813+11]..src/ppx.ml[192,5813+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[192,5813+12]..src/ppx.ml[192,5813+36]),None)
                                              expression (src/ppx.ml[193,5852+15]..src/ppx.ml[193,5852+23])
                                                Texp_ident "pcd_name/1817"
                                              expression (src/ppx.ml[194,5877+15]..src/ppx.ml[194,5877+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[194,5877+16]..src/ppx.ml[194,5877+20]),None)
                                              expression (src/ppx.ml[195,5900+15]..src/ppx.ml[195,5900+23])
                                                Texp_ident "pcd_vars/1818"
                                              expression (src/ppx.ml[196,5925+15]..src/ppx.ml[196,5925+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[196,5925+16]..src/ppx.ml[196,5925+20]),None)
                                              expression (src/ppx.ml[197,5948+15]..src/ppx.ml[197,5948+23])
                                                Texp_ident "pcd_args/1819"
                                              expression (src/ppx.ml[198,5973+15]..src/ppx.ml[198,5973+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[198,5973+16]..src/ppx.ml[198,5973+19]),None)
                                              expression (src/ppx.ml[199,5995+15]..src/ppx.ml[199,5995+22])
                                                Texp_ident "pcd_res/1820"
                                              expression (src/ppx.ml[200,6019+15]..src/ppx.ml[200,6019+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[200,6019+16]..src/ppx.ml[200,6019+19]),None)
                                              expression (src/ppx.ml[201,6041+15]..src/ppx.ml[201,6041+22])
                                                Texp_ident "pcd_loc/1821"
                                              expression (src/ppx.ml[202,6065+15]..src/ppx.ml[202,6065+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[202,6065+16]..src/ppx.ml[202,6065+21]),None)
                                              expression (src/ppx.ml[203,6089+15]..src/ppx.ml[203,6089+29])
                                                Texp_ident "pcd_attributes/1822"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[205,6137+6]..src/ppx.ml[206,6198+8])
                                Texp_sequence
                                expression (src/ppx.ml[205,6137+6]..src/ppx.ml[205,6137+59])
                                  Texp_apply
                                  expression (src/ppx.ml[205,6137+7]..src/ppx.ml[205,6137+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1813"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[205,6137+57]..src/ppx.ml[205,6137+58])
                                        Texp_ident "t/1816"
                                  ]
                                expression (src/ppx.ml[206,6198+6]..src/ppx.ml[206,6198+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[208,6210+0]..src/ppx.ml[219,6607+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6210+4]..src/ppx.ml[208,6210+16])
          Tpat_var "process_kind/1823"
        expression (src/ppx.ml[208,6210+16]..src/ppx.ml[219,6607+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[208,6210+16]..src/ppx.ml[208,6210+19])
                Tpat_var "x/1825"
              expression (src/ppx.ml[209,6232+2]..src/ppx.ml[219,6607+77])
                Texp_match
                expression (src/ppx.ml[209,6232+8]..src/ppx.ml[209,6232+9])
                  Texp_ident "x/1825"
                [
                  <case>
                    pattern (src/ppx.ml[211,6269+4]..src/ppx.ml[211,6269+18])
                      Tpat_value
                      pattern (src/ppx.ml[211,6269+4]..src/ppx.ml[211,6269+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[211,6269+23]..src/ppx.ml[211,6269+81])
                      Texp_apply
                      expression (src/ppx.ml[211,6269+24]..src/ppx.ml[211,6269+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[211,6269+38]..src/ppx.ml[211,6269+80])
                            Texp_apply
                            expression (src/ppx.ml[211,6269+39]..src/ppx.ml[211,6269+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[211,6269+54]..src/ppx.ml[211,6269+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[211,6269+56]..src/ppx.ml[211,6269+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[212,6351+4]..src/ppx.ml[212,6351+19])
                      Tpat_value
                      pattern (src/ppx.ml[212,6351+4]..src/ppx.ml[212,6351+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[212,6351+18]..src/ppx.ml[212,6351+19])
                            Tpat_var "a/1826"
                        ]
                        None
                    expression (src/ppx.ml[213,6374+4]..src/ppx.ml[214,6433+65])
                      Texp_sequence
                      expression (src/ppx.ml[213,6374+4]..src/ppx.ml[213,6374+57])
                        Texp_apply
                        expression (src/ppx.ml[213,6374+5]..src/ppx.ml[213,6374+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1813"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[213,6374+55]..src/ppx.ml[213,6374+56])
                              Texp_ident "a/1826"
                        ]
                      expression (src/ppx.ml[214,6433+4]..src/ppx.ml[214,6433+65])
                        Texp_apply
                        expression (src/ppx.ml[214,6433+5]..src/ppx.ml[214,6433+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[214,6433+19]..src/ppx.ml[214,6433+64])
                              Texp_apply
                              expression (src/ppx.ml[214,6433+20]..src/ppx.ml[214,6433+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[214,6433+35]..src/ppx.ml[214,6433+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[214,6433+36]..src/ppx.ml[214,6433+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[214,6433+37]..src/ppx.ml[214,6433+57]),None)
                                      expression (src/ppx.ml[214,6433+61]..src/ppx.ml[214,6433+62])
                                        Texp_ident "a/1826"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[217,6546+5]..src/ppx.ml[217,6546+19])
                      Tpat_value
                      pattern (src/ppx.ml[217,6546+5]..src/ppx.ml[217,6546+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[217,6546+18]..src/ppx.ml[217,6546+19])
                            Tpat_var "a/1827"
                        ]
                        None
                    expression (src/ppx.ml[218,6574+5]..src/ppx.ml[218,6574+32])
                      Texp_apply
                      expression (src/ppx.ml[218,6574+5]..src/ppx.ml[218,6574+29])
                        Texp_ident "process_record_kind_list/1727"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[218,6574+29]..src/ppx.ml[218,6574+32])
                            Texp_ident "a/1827"
                      ]
                  <case>
                    pattern (src/ppx.ml[219,6607+5]..src/ppx.ml[219,6607+15])
                      Tpat_value
                      pattern (src/ppx.ml[219,6607+5]..src/ppx.ml[219,6607+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[219,6607+19]..src/ppx.ml[219,6607+77])
                      Texp_apply
                      expression (src/ppx.ml[219,6607+20]..src/ppx.ml[219,6607+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[219,6607+34]..src/ppx.ml[219,6607+76])
                            Texp_apply
                            expression (src/ppx.ml[219,6607+35]..src/ppx.ml[219,6607+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[219,6607+50]..src/ppx.ml[219,6607+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[219,6607+52]..src/ppx.ml[219,6607+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[221,6686+0]..src/ppx.ml[242,7692+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[221,6686+4]..src/ppx.ml[221,6686+19])
          Tpat_var "print_type_decl/1828"
        expression (src/ppx.ml[221,6686+19]..src/ppx.ml[242,7692+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[221,6686+19]..src/ppx.ml[221,6686+22])
                Tpat_var "x/1830"
              expression (src/ppx.ml[222,6711+2]..src/ppx.ml[242,7692+38])
                Texp_match
                expression (src/ppx.ml[222,6711+8]..src/ppx.ml[222,6711+9])
                  Texp_ident "x/1830"
                [
                  <case>
                    pattern (src/ppx.ml[223,6726+4]..src/ppx.ml[232,7107+5])
                      Tpat_value
                      pattern (src/ppx.ml[223,6726+4]..src/ppx.ml[232,7107+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[224,6732+6]..src/ppx.ml[224,6732+16])
                              Tpat_var "ptype_name/1831"
                          "ptype_params"
                            pattern (src/ppx.ml[225,6769+6]..src/ppx.ml[225,6769+18])
                              Tpat_var "ptype_params/1832"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[226,6841+6]..src/ppx.ml[226,6841+17])
                              Tpat_var "ptype_cstrs/1833"
                          "ptype_kind"
                            pattern (src/ppx.ml[227,6910+6]..src/ppx.ml[227,6910+16])
                              Tpat_var "ptype_kind/1834"
                          "ptype_private"
                            pattern (src/ppx.ml[228,6947+6]..src/ppx.ml[228,6947+19])
                              Tpat_var "ptype_private/1835"
                          "ptype_manifest"
                            pattern (src/ppx.ml[229,6988+6]..src/ppx.ml[229,6988+20])
                              Tpat_var "ptype_manifest/1836"
                          "ptype_attributes"
                            pattern (src/ppx.ml[230,7035+6]..src/ppx.ml[230,7035+22])
                              Tpat_var "ptype_attributes/1837"
                          "ptype_loc"
                            pattern (src/ppx.ml[231,7076+6]..src/ppx.ml[231,7076+15])
                              Tpat_var "ptype_loc/1838"
                        ]
                    expression (src/ppx.ml[233,7116+4]..src/ppx.ml[242,7692+38])
                      Texp_sequence
                      expression (src/ppx.ml[233,7116+4]..src/ppx.ml[233,7116+69])
                        Texp_apply
                        expression (src/ppx.ml[233,7116+5]..src/ppx.ml[233,7116+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[233,7116+19]..src/ppx.ml[233,7116+68])
                              Texp_apply
                              expression (src/ppx.ml[233,7116+20]..src/ppx.ml[233,7116+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[233,7116+35]..src/ppx.ml[233,7116+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[233,7116+36]..src/ppx.ml[233,7116+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[233,7116+37]..src/ppx.ml[233,7116+53]),None)
                                      expression (src/ppx.ml[233,7116+56]..src/ppx.ml[233,7116+66])
                                        Texp_ident "ptype_name/1831"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7187+4]..src/ppx.ml[242,7692+38])
                        Texp_sequence
                        expression (src/ppx.ml[234,7187+4]..src/ppx.ml[234,7187+72])
                          Texp_apply
                          expression (src/ppx.ml[234,7187+5]..src/ppx.ml[234,7187+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[234,7187+19]..src/ppx.ml[234,7187+71])
                                Texp_apply
                                expression (src/ppx.ml[234,7187+20]..src/ppx.ml[234,7187+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[234,7187+35]..src/ppx.ml[234,7187+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[234,7187+36]..src/ppx.ml[234,7187+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[234,7187+37]..src/ppx.ml[234,7187+54]),None)
                                        expression (src/ppx.ml[234,7187+57]..src/ppx.ml[234,7187+69])
                                          Texp_ident "ptype_params/1832"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7261+4]..src/ppx.ml[242,7692+38])
                          Texp_sequence
                          expression (src/ppx.ml[235,7261+4]..src/ppx.ml[235,7261+66])
                            Texp_apply
                            expression (src/ppx.ml[235,7261+5]..src/ppx.ml[235,7261+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[235,7261+19]..src/ppx.ml[235,7261+65])
                                  Texp_apply
                                  expression (src/ppx.ml[235,7261+20]..src/ppx.ml[235,7261+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[235,7261+35]..src/ppx.ml[235,7261+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[235,7261+36]..src/ppx.ml[235,7261+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[235,7261+37]..src/ppx.ml[235,7261+49]),None)
                                          expression (src/ppx.ml[235,7261+52]..src/ppx.ml[235,7261+63])
                                            Texp_ident "ptype_cstrs/1833"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[236,7329+4]..src/ppx.ml[242,7692+38])
                            Texp_sequence
                            expression (src/ppx.ml[236,7329+4]..src/ppx.ml[236,7329+63])
                              Texp_apply
                              expression (src/ppx.ml[236,7329+5]..src/ppx.ml[236,7329+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[236,7329+19]..src/ppx.ml[236,7329+62])
                                    Texp_apply
                                    expression (src/ppx.ml[236,7329+20]..src/ppx.ml[236,7329+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[236,7329+35]..src/ppx.ml[236,7329+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[236,7329+36]..src/ppx.ml[236,7329+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[236,7329+37]..src/ppx.ml[236,7329+48]),None)
                                            expression (src/ppx.ml[236,7329+50]..src/ppx.ml[236,7329+60])
                                              Texp_ident "ptype_kind/1834"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[237,7394+4]..src/ppx.ml[242,7692+38])
                              Texp_sequence
                              expression (src/ppx.ml[237,7394+4]..src/ppx.ml[237,7394+29])
                                Texp_apply
                                expression (src/ppx.ml[237,7394+5]..src/ppx.ml[237,7394+17])
                                  Texp_ident "process_kind/1823"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[237,7394+18]..src/ppx.ml[237,7394+28])
                                      Texp_ident "ptype_kind/1834"
                                ]
                              expression (src/ppx.ml[238,7425+4]..src/ppx.ml[242,7692+38])
                                Texp_apply
                                expression (src/ppx.ml[238,7425+5]..src/ppx.ml[238,7425+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[238,7425+19]..src/ppx.ml[242,7692+37])
                                      Texp_apply
                                      expression (src/ppx.ml[238,7425+20]..src/ppx.ml[238,7425+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[238,7425+35]..src/ppx.ml[242,7692+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[238,7425+36]..src/ppx.ml[238,7425+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[238,7425+37]..src/ppx.ml[238,7425+51]),None)
                                              expression (src/ppx.ml[238,7425+55]..src/ppx.ml[238,7425+68])
                                                Texp_ident "ptype_private/1835"
                                              expression (src/ppx.ml[239,7495+36]..src/ppx.ml[239,7495+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[239,7495+37]..src/ppx.ml[239,7495+51]),None)
                                              expression (src/ppx.ml[239,7495+54]..src/ppx.ml[239,7495+68])
                                                Texp_ident "ptype_manifest/1836"
                                              expression (src/ppx.ml[240,7565+36]..src/ppx.ml[240,7565+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[240,7565+37]..src/ppx.ml[240,7565+47]),None)
                                              expression (src/ppx.ml[240,7565+50]..src/ppx.ml[240,7565+66])
                                                Texp_ident "ptype_attributes/1837"
                                              expression (src/ppx.ml[241,7633+36]..src/ppx.ml[241,7633+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[241,7633+37]..src/ppx.ml[241,7633+46]),None)
                                              expression (src/ppx.ml[241,7633+49]..src/ppx.ml[241,7633+58])
                                                Texp_ident "ptype_loc/1838"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[244,7736+0]..src/ppx.ml[250,7871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[244,7736+8]..src/ppx.ml[244,7736+30])
          Tpat_var "process_type_decl_list/1839"
        expression (src/ppx.ml[244,7736+30]..src/ppx.ml[250,7871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[244,7736+30]..src/ppx.ml[244,7736+33])
                Tpat_var "x/1840"
              expression (src/ppx.ml[245,7772+2]..src/ppx.ml[250,7871+6])
                Texp_match
                expression (src/ppx.ml[245,7772+8]..src/ppx.ml[245,7772+9])
                  Texp_ident "x/1840"
                [
                  <case>
                    pattern (src/ppx.ml[246,7787+4]..src/ppx.ml[246,7787+6])
                      Tpat_value
                      pattern (src/ppx.ml[246,7787+4]..src/ppx.ml[246,7787+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[246,7787+10]..src/ppx.ml[246,7787+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[247,7800+4]..src/ppx.ml[247,7800+10])
                      Tpat_value
                      pattern (src/ppx.ml[247,7800+4]..src/ppx.ml[247,7800+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[247,7800+4]..src/ppx.ml[247,7800+5])
                            Tpat_var "h/1841"
                          pattern (src/ppx.ml[247,7800+9]..src/ppx.ml[247,7800+10])
                            Tpat_var "t/1842"
                        ]
                        None
                    expression (src/ppx.ml[248,7814+4]..src/ppx.ml[250,7871+6])
                      Texp_sequence
                      expression (src/ppx.ml[248,7814+4]..src/ppx.ml[248,7814+23])
                        Texp_apply
                        expression (src/ppx.ml[248,7814+5]..src/ppx.ml[248,7814+20])
                          Texp_ident "print_type_decl/1828"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[248,7814+21]..src/ppx.ml[248,7814+22])
                              Texp_ident "h/1841"
                        ]
                      expression (src/ppx.ml[249,7839+4]..src/ppx.ml[250,7871+6])
                        Texp_sequence
                        expression (src/ppx.ml[249,7839+4]..src/ppx.ml[249,7839+30])
                          Texp_apply
                          expression (src/ppx.ml[249,7839+5]..src/ppx.ml[249,7839+27])
                            Texp_ident "process_type_decl_list/1839"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,7839+28]..src/ppx.ml[249,7839+29])
                                Texp_ident "t/1842"
                          ]
                        expression (src/ppx.ml[250,7871+4]..src/ppx.ml[250,7871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[252,7883+0]..src/ppx.ml[278,9847+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[252,7883+4]..src/ppx.ml[252,7883+13])
          Tpat_var "printdesc/1843"
        expression (src/ppx.ml[252,7883+13]..src/ppx.ml[278,9847+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[252,7883+14]..src/ppx.ml[252,7883+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[252,7883+17]..src/ppx.ml[252,7883+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1845"
                pattern (src/ppx.ml[252,7883+14]..src/ppx.ml[252,7883+15])
                  Tpat_any
              expression (src/ppx.ml[253,7929+2]..src/ppx.ml[278,9847+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[252,7883+39]..src/ppx.ml[252,7883+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[253,7929+2]..src/ppx.ml[253,7929+68])
                  Texp_apply
                  expression (src/ppx.ml[253,7929+3]..src/ppx.ml[253,7929+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[253,7929+17]..src/ppx.ml[253,7929+67])
                        Texp_apply
                        expression (src/ppx.ml[253,7929+18]..src/ppx.ml[253,7929+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,7929+33]..src/ppx.ml[253,7929+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[253,7929+34]..src/ppx.ml[253,7929+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[253,7929+35]..src/ppx.ml[253,7929+61]),None)
                                expression (src/ppx.ml[253,7929+64]..src/ppx.ml[253,7929+65])
                                  Texp_ident "x/1845"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[254,7999+2]..src/ppx.ml[278,9847+128])
                  Texp_match
                  expression (src/ppx.ml[254,7999+8]..src/ppx.ml[254,7999+9])
                    Texp_ident "x/1845"
                  [
                    <case>
                      pattern (src/ppx.ml[255,8014+4]..src/ppx.ml[255,8014+37])
                        Tpat_value
                        pattern (src/ppx.ml[255,8014+4]..src/ppx.ml[255,8014+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[255,8014+15]..src/ppx.ml[255,8014+25])
                              Tpat_var "expression/1846"
                            pattern (src/ppx.ml[255,8014+26]..src/ppx.ml[255,8014+36])
                              Tpat_var "attributes/1847"
                          ]
                          None
                      expression (src/ppx.ml[255,8014+41]..src/ppx.ml[255,8014+117])
                        Texp_apply
                        expression (src/ppx.ml[255,8014+42]..src/ppx.ml[255,8014+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8014+56]..src/ppx.ml[255,8014+116])
                              Texp_apply
                              expression (src/ppx.ml[255,8014+57]..src/ppx.ml[255,8014+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8014+72]..src/ppx.ml[255,8014+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8014+73]..src/ppx.ml[255,8014+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[255,8014+74]..src/ppx.ml[255,8014+90]),None)
                                      expression (src/ppx.ml[255,8014+93]..src/ppx.ml[255,8014+103])
                                        Texp_ident "expression/1846"
                                      expression (src/ppx.ml[255,8014+104]..src/ppx.ml[255,8014+114])
                                        Texp_ident "attributes/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8152+4]..src/ppx.ml[257,8152+45])
                        Tpat_value
                        pattern (src/ppx.ml[257,8152+4]..src/ppx.ml[257,8152+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[257,8152+16]..src/ppx.ml[257,8152+24])
                              Tpat_var "rec_flag/1848"
                            pattern (src/ppx.ml[257,8152+26]..src/ppx.ml[257,8152+44])
                              Tpat_var "value_binding_list/1849"
                          ]
                          None
                      expression (src/ppx.ml[257,8152+48]..src/ppx.ml[258,8286+48])
                        Texp_sequence
                        expression (src/ppx.ml[257,8152+48]..src/ppx.ml[257,8152+132])
                          Texp_apply
                          expression (src/ppx.ml[257,8152+49]..src/ppx.ml[257,8152+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[257,8152+63]..src/ppx.ml[257,8152+131])
                                Texp_apply
                                expression (src/ppx.ml[257,8152+64]..src/ppx.ml[257,8152+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[257,8152+79]..src/ppx.ml[257,8152+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[257,8152+80]..src/ppx.ml[257,8152+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[257,8152+81]..src/ppx.ml[257,8152+98]),None)
                                        expression (src/ppx.ml[257,8152+101]..src/ppx.ml[257,8152+109])
                                          Texp_ident "rec_flag/1848"
                                        expression (src/ppx.ml[257,8152+111]..src/ppx.ml[257,8152+129])
                                          Texp_ident "value_binding_list/1849"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[258,8286+4]..src/ppx.ml[258,8286+48])
                          Texp_apply
                          expression (src/ppx.ml[258,8286+4]..src/ppx.ml[258,8286+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[258,8286+28]..src/ppx.ml[258,8286+48])
                                Texp_ident "value_binding_list/1849"
                          ]
                    <case>
                      pattern (src/ppx.ml[259,8335+4]..src/ppx.ml[259,8335+36])
                        Tpat_value
                        pattern (src/ppx.ml[259,8335+4]..src/ppx.ml[259,8335+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[259,8335+19]..src/ppx.ml[259,8335+36])
                              Tpat_var "value_description/1850"
                          ]
                          None
                      expression (src/ppx.ml[259,8335+39]..src/ppx.ml[259,8335+116])
                        Texp_apply
                        expression (src/ppx.ml[259,8335+40]..src/ppx.ml[259,8335+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[259,8335+54]..src/ppx.ml[259,8335+115])
                              Texp_apply
                              expression (src/ppx.ml[259,8335+55]..src/ppx.ml[259,8335+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[259,8335+70]..src/ppx.ml[259,8335+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[259,8335+71]..src/ppx.ml[259,8335+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[259,8335+72]..src/ppx.ml[259,8335+93]),None)
                                      expression (src/ppx.ml[259,8335+96]..src/ppx.ml[259,8335+113])
                                        Texp_ident "value_description/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,8453+4]..src/ppx.ml[261,8453+47])
                        Tpat_value
                        pattern (src/ppx.ml[261,8453+4]..src/ppx.ml[261,8453+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[261,8453+15]..src/ppx.ml[261,8453+23])
                              Tpat_var "rec_flag/1851"
                            pattern (src/ppx.ml[261,8453+25]..src/ppx.ml[261,8453+46])
                              Tpat_var "type_declaration_list/1852"
                          ]
                          None
                      expression (src/ppx.ml[263,8532+4]..src/ppx.ml[264,8583+90])
                        Texp_sequence
                        expression (src/ppx.ml[263,8532+4]..src/ppx.ml[263,8532+49])
                          Texp_apply
                          expression (src/ppx.ml[263,8532+4]..src/ppx.ml[263,8532+26])
                            Texp_ident "process_type_decl_list/1839"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[263,8532+26]..src/ppx.ml[263,8532+49])
                                Texp_ident "type_declaration_list/1852"
                          ]
                        expression (src/ppx.ml[264,8583+4]..src/ppx.ml[264,8583+90])
                          Texp_apply
                          expression (src/ppx.ml[264,8583+5]..src/ppx.ml[264,8583+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[264,8583+19]..src/ppx.ml[264,8583+89])
                                Texp_apply
                                expression (src/ppx.ml[264,8583+20]..src/ppx.ml[264,8583+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[264,8583+35]..src/ppx.ml[264,8583+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[264,8583+36]..src/ppx.ml[264,8583+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[264,8583+37]..src/ppx.ml[264,8583+53]),None)
                                        expression (src/ppx.ml[264,8583+56]..src/ppx.ml[264,8583+64])
                                          Texp_ident "rec_flag/1851"
                                        expression (src/ppx.ml[264,8583+66]..src/ppx.ml[264,8583+87])
                                          Texp_ident "type_declaration_list/1852"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[267,8676+4]..src/ppx.ml[267,8676+31])
                        Tpat_value
                        pattern (src/ppx.ml[267,8676+4]..src/ppx.ml[267,8676+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[267,8676+17]..src/ppx.ml[267,8676+31])
                              Tpat_var "type_extension/1853"
                          ]
                          None
                      expression (src/ppx.ml[267,8676+34]..src/ppx.ml[267,8676+105])
                        Texp_apply
                        expression (src/ppx.ml[267,8676+35]..src/ppx.ml[267,8676+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,8676+49]..src/ppx.ml[267,8676+104])
                              Texp_apply
                              expression (src/ppx.ml[267,8676+50]..src/ppx.ml[267,8676+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,8676+65]..src/ppx.ml[267,8676+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,8676+66]..src/ppx.ml[267,8676+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[267,8676+67]..src/ppx.ml[267,8676+85]),None)
                                      expression (src/ppx.ml[267,8676+88]..src/ppx.ml[267,8676+102])
                                        Texp_ident "type_extension/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[268,8782+4]..src/ppx.ml[268,8782+40])
                        Tpat_value
                        pattern (src/ppx.ml[268,8782+4]..src/ppx.ml[268,8782+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[268,8782+19]..src/ppx.ml[268,8782+40])
                              Tpat_var "extension_constructor/1854"
                          ]
                          None
                      expression (src/ppx.ml[268,8782+43]..src/ppx.ml[268,8782+124])
                        Texp_apply
                        expression (src/ppx.ml[268,8782+44]..src/ppx.ml[268,8782+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8782+58]..src/ppx.ml[268,8782+123])
                              Texp_apply
                              expression (src/ppx.ml[268,8782+59]..src/ppx.ml[268,8782+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[268,8782+74]..src/ppx.ml[268,8782+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[268,8782+75]..src/ppx.ml[268,8782+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[268,8782+76]..src/ppx.ml[268,8782+97]),None)
                                      expression (src/ppx.ml[268,8782+100]..src/ppx.ml[268,8782+121])
                                        Texp_ident "extension_constructor/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,8907+4]..src/ppx.ml[269,8907+31])
                        Tpat_value
                        pattern (src/ppx.ml[269,8907+4]..src/ppx.ml[269,8907+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[269,8907+17]..src/ppx.ml[269,8907+31])
                              Tpat_var "module_binding/1855"
                          ]
                          None
                      expression (src/ppx.ml[269,8907+34]..src/ppx.ml[269,8907+104])
                        Texp_apply
                        expression (src/ppx.ml[269,8907+35]..src/ppx.ml[269,8907+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,8907+49]..src/ppx.ml[269,8907+103])
                              Texp_apply
                              expression (src/ppx.ml[269,8907+50]..src/ppx.ml[269,8907+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,8907+65]..src/ppx.ml[269,8907+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,8907+66]..src/ppx.ml[269,8907+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[269,8907+67]..src/ppx.ml[269,8907+85]),None)
                                      expression (src/ppx.ml[269,8907+87]..src/ppx.ml[269,8907+101])
                                        Texp_ident "module_binding/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[270,9012+4]..src/ppx.ml[270,9012+39])
                        Tpat_value
                        pattern (src/ppx.ml[270,9012+4]..src/ppx.ml[270,9012+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[270,9012+20]..src/ppx.ml[270,9012+39])
                              Tpat_var "module_binding_list/1856"
                          ]
                          None
                      expression (src/ppx.ml[270,9012+42]..src/ppx.ml[270,9012+121])
                        Texp_apply
                        expression (src/ppx.ml[270,9012+43]..src/ppx.ml[270,9012+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[270,9012+57]..src/ppx.ml[270,9012+120])
                              Texp_apply
                              expression (src/ppx.ml[270,9012+58]..src/ppx.ml[270,9012+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[270,9012+73]..src/ppx.ml[270,9012+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[270,9012+74]..src/ppx.ml[270,9012+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[270,9012+75]..src/ppx.ml[270,9012+96]),None)
                                      expression (src/ppx.ml[270,9012+99]..src/ppx.ml[270,9012+118])
                                        Texp_ident "module_binding_list/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[271,9134+4]..src/ppx.ml[271,9134+40])
                        Tpat_value
                        pattern (src/ppx.ml[271,9134+4]..src/ppx.ml[271,9134+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[271,9134+17]..src/ppx.ml[271,9134+40])
                              Tpat_var "module_type_declaration/1857"
                          ]
                          None
                      expression (src/ppx.ml[271,9134+43]..src/ppx.ml[271,9134+124])
                        Texp_apply
                        expression (src/ppx.ml[271,9134+44]..src/ppx.ml[271,9134+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[271,9134+58]..src/ppx.ml[271,9134+123])
                              Texp_apply
                              expression (src/ppx.ml[271,9134+59]..src/ppx.ml[271,9134+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[271,9134+74]..src/ppx.ml[271,9134+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[271,9134+75]..src/ppx.ml[271,9134+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[271,9134+76]..src/ppx.ml[271,9134+95]),None)
                                      expression (src/ppx.ml[271,9134+98]..src/ppx.ml[271,9134+121])
                                        Texp_ident "module_type_declaration/1857"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[273,9276+4]..src/ppx.ml[273,9276+30])
                        Tpat_value
                        pattern (src/ppx.ml[273,9276+4]..src/ppx.ml[273,9276+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[273,9276+14]..src/ppx.ml[273,9276+30])
                              Tpat_var "open_description/1858"
                          ]
                          None
                      expression (src/ppx.ml[273,9276+33]..src/ppx.ml[273,9276+103])
                        Texp_apply
                        expression (src/ppx.ml[273,9276+34]..src/ppx.ml[273,9276+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[273,9276+48]..src/ppx.ml[273,9276+102])
                              Texp_apply
                              expression (src/ppx.ml[273,9276+49]..src/ppx.ml[273,9276+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[273,9276+64]..src/ppx.ml[273,9276+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[273,9276+65]..src/ppx.ml[273,9276+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[273,9276+66]..src/ppx.ml[273,9276+81]),None)
                                      expression (src/ppx.ml[273,9276+84]..src/ppx.ml[273,9276+100])
                                        Texp_ident "open_description/1858"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[274,9380+4]..src/ppx.ml[274,9380+36])
                        Tpat_value
                        pattern (src/ppx.ml[274,9380+4]..src/ppx.ml[274,9380+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[274,9380+15]..src/ppx.ml[274,9380+36])
                              Tpat_var "class_declarations/1859"
                          ]
                          None
                      expression (src/ppx.ml[274,9380+39]..src/ppx.ml[274,9380+113])
                        Texp_apply
                        expression (src/ppx.ml[274,9380+40]..src/ppx.ml[274,9380+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,9380+54]..src/ppx.ml[274,9380+112])
                              Texp_apply
                              expression (src/ppx.ml[274,9380+55]..src/ppx.ml[274,9380+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,9380+70]..src/ppx.ml[274,9380+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,9380+71]..src/ppx.ml[274,9380+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[274,9380+72]..src/ppx.ml[274,9380+89]),None)
                                      expression (src/ppx.ml[274,9380+92]..src/ppx.ml[274,9380+110])
                                        Texp_ident "class_declarations/1859"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[275,9494+4]..src/ppx.ml[275,9494+45])
                        Tpat_value
                        pattern (src/ppx.ml[275,9494+4]..src/ppx.ml[275,9494+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[275,9494+20]..src/ppx.ml[275,9494+45])
                              Tpat_var "class_type_declarations/1860"
                          ]
                          None
                      expression (src/ppx.ml[275,9494+48]..src/ppx.ml[275,9494+132])
                        Texp_apply
                        expression (src/ppx.ml[275,9494+49]..src/ppx.ml[275,9494+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9494+63]..src/ppx.ml[275,9494+131])
                              Texp_apply
                              expression (src/ppx.ml[275,9494+64]..src/ppx.ml[275,9494+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[275,9494+79]..src/ppx.ml[275,9494+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[275,9494+80]..src/ppx.ml[275,9494+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[275,9494+81]..src/ppx.ml[275,9494+103]),None)
                                      expression (src/ppx.ml[275,9494+106]..src/ppx.ml[275,9494+129])
                                        Texp_ident "class_type_declarations/1860"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,9627+4]..src/ppx.ml[276,9627+39])
                        Tpat_value
                        pattern (src/ppx.ml[276,9627+4]..src/ppx.ml[276,9627+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[276,9627+18]..src/ppx.ml[276,9627+39])
                              Tpat_var "include_declaration/1861"
                          ]
                          None
                      expression (src/ppx.ml[276,9627+41]..src/ppx.ml[276,9627+117])
                        Texp_apply
                        expression (src/ppx.ml[276,9627+42]..src/ppx.ml[276,9627+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[276,9627+56]..src/ppx.ml[276,9627+116])
                              Texp_apply
                              expression (src/ppx.ml[276,9627+57]..src/ppx.ml[276,9627+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[276,9627+72]..src/ppx.ml[276,9627+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[276,9627+73]..src/ppx.ml[276,9627+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[276,9627+74]..src/ppx.ml[276,9627+93]),None)
                                      expression (src/ppx.ml[276,9627+95]..src/ppx.ml[276,9627+114])
                                        Texp_ident "include_declaration/1861"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[277,9745+4]..src/ppx.ml[277,9745+30])
                        Tpat_value
                        pattern (src/ppx.ml[277,9745+4]..src/ppx.ml[277,9745+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[277,9745+19]..src/ppx.ml[277,9745+30])
                              Tpat_var "attribute/1862"
                          ]
                          None
                      expression (src/ppx.ml[277,9745+32]..src/ppx.ml[277,9745+101])
                        Texp_apply
                        expression (src/ppx.ml[277,9745+33]..src/ppx.ml[277,9745+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[277,9745+47]..src/ppx.ml[277,9745+100])
                              Texp_apply
                              expression (src/ppx.ml[277,9745+48]..src/ppx.ml[277,9745+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[277,9745+63]..src/ppx.ml[277,9745+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[277,9745+64]..src/ppx.ml[277,9745+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[277,9745+65]..src/ppx.ml[277,9745+86]),None)
                                      expression (src/ppx.ml[277,9745+89]..src/ppx.ml[277,9745+98])
                                        Texp_ident "attribute/1862"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[278,9847+4]..src/ppx.ml[278,9847+44])
                        Tpat_value
                        pattern (src/ppx.ml[278,9847+4]..src/ppx.ml[278,9847+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[278,9847+21]..src/ppx.ml[278,9847+30])
                              Tpat_var "extension/1863"
                            pattern (src/ppx.ml[278,9847+33]..src/ppx.ml[278,9847+43])
                              Tpat_var "attributes/1864"
                          ]
                          None
                      expression (src/ppx.ml[278,9847+46]..src/ppx.ml[278,9847+128])
                        Texp_apply
                        expression (src/ppx.ml[278,9847+47]..src/ppx.ml[278,9847+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[278,9847+61]..src/ppx.ml[278,9847+127])
                              Texp_apply
                              expression (src/ppx.ml[278,9847+62]..src/ppx.ml[278,9847+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[278,9847+77]..src/ppx.ml[278,9847+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[278,9847+78]..src/ppx.ml[278,9847+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[278,9847+79]..src/ppx.ml[278,9847+100]),None)
                                      expression (src/ppx.ml[278,9847+103]..src/ppx.ml[278,9847+112])
                                        Texp_ident "extension/1863"
                                      expression (src/ppx.ml[278,9847+115]..src/ppx.ml[278,9847+125])
                                        Texp_ident "attributes/1864"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[280,9977+0]..src/ppx.ml[280,9977+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9977+4]..src/ppx.ml[280,9977+7])
          Tpat_var "foo/1865"
        expression (src/ppx.ml[280,9977+10]..src/ppx.ml[280,9977+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[282,9992+0]..src/ppx.ml[290,10211+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9992+4]..src/ppx.ml[282,9992+12])
          Tpat_var "printone/1866"
        expression (src/ppx.ml[282,9992+13]..src/ppx.ml[290,10211+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[282,9992+14]..src/ppx.ml[282,9992+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[282,9992+18]..src/ppx.ml[282,9992+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1867"
                pattern (src/ppx.ml[282,9992+14]..src/ppx.ml[282,9992+15])
                  Tpat_any
              expression (src/ppx.ml[283,10035+2]..src/ppx.ml[290,10211+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[282,9992+36]..src/ppx.ml[282,9992+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[283,10035+8]..src/ppx.ml[283,10035+9])
                  Texp_ident "x/1867"
                [
                  <case>
                    pattern (src/ppx.ml[284,10050+3]..src/ppx.ml[287,10100+3])
                      Tpat_value
                      pattern (src/ppx.ml[284,10050+3]..src/ppx.ml[287,10100+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[285,10055+4]..src/ppx.ml[285,10055+13])
                              Tpat_var "pstr_desc/1868"
                        ]
                    expression (src/ppx.ml[289,10184+4]..src/ppx.ml[290,10211+6])
                      Texp_sequence
                      expression (src/ppx.ml[289,10184+4]..src/ppx.ml[289,10184+25])
                        Texp_apply
                        expression (src/ppx.ml[289,10184+5]..src/ppx.ml[289,10184+14])
                          Texp_ident "printdesc/1843"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[289,10184+15]..src/ppx.ml[289,10184+24])
                              Texp_ident "pstr_desc/1868"
                        ]
                      expression (src/ppx.ml[290,10211+4]..src/ppx.ml[290,10211+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[296,10331+0]..src/ppx.ml[298,10412+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10331+4]..src/ppx.ml[296,10331+13])
          Tpat_var "printone2/1869"
        expression (src/ppx.ml[296,10331+14]..src/ppx.ml[298,10412+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[296,10331+14]..src/ppx.ml[296,10331+15])
                Tpat_var "x/1870"
              expression (src/ppx.ml[297,10355+2]..src/ppx.ml[298,10412+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[296,10331+17]..src/ppx.ml[296,10331+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[297,10355+2]..src/ppx.ml[297,10355+55])
                  Texp_apply
                  expression (src/ppx.ml[297,10355+3]..src/ppx.ml[297,10355+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[297,10355+17]..src/ppx.ml[297,10355+54])
                        Texp_apply
                        expression (src/ppx.ml[297,10355+18]..src/ppx.ml[297,10355+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[297,10355+33]..src/ppx.ml[297,10355+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[297,10355+34]..src/ppx.ml[297,10355+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[297,10355+35]..src/ppx.ml[297,10355+49]),None)
                                expression (src/ppx.ml[297,10355+51]..src/ppx.ml[297,10355+52])
                                  Texp_ident "x/1870"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[298,10412+2]..src/ppx.ml[298,10412+12])
                  Texp_apply
                  expression (src/ppx.ml[298,10412+2]..src/ppx.ml[298,10412+10])
                    Texp_ident "printone/1866"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[298,10412+11]..src/ppx.ml[298,10412+12])
                        Texp_ident "x/1870"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[300,10428+0]..src/ppx.ml[302,10459+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10428+4]..src/ppx.ml[300,10428+9])
          Tpat_var "proc1/1871"
        expression (src/ppx.ml[300,10428+10]..src/ppx.ml[302,10459+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[300,10428+10]..src/ppx.ml[300,10428+11])
                Tpat_var "x/1873"
              expression (src/ppx.ml[301,10444+2]..src/ppx.ml[302,10459+3])
                Texp_sequence
                expression (src/ppx.ml[301,10444+2]..src/ppx.ml[301,10444+13])
                  Texp_apply
                  expression (src/ppx.ml[301,10444+2]..src/ppx.ml[301,10444+11])
                    Texp_ident "printone2/1869"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[301,10444+12]..src/ppx.ml[301,10444+13])
                        Texp_ident "x/1873"
                  ]
                expression (src/ppx.ml[302,10459+2]..src/ppx.ml[302,10459+3])
                  Texp_ident "x/1873"
          ]
    ]
  structure_item (src/ppx.ml[304,10464+0]..src/ppx.ml[307,10613+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[304,10464+4]..src/ppx.ml[304,10464+9])
          Tpat_var "debug/1874"
        expression (src/ppx.ml[304,10464+10]..src/ppx.ml[307,10613+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[304,10464+10]..src/ppx.ml[304,10464+14])
                Tpat_var "proc/1876"
              expression (src/ppx.ml[304,10464+15]..src/ppx.ml[307,10613+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[304,10464+15]..src/ppx.ml[304,10464+18])
                      Tpat_var "lst/1877"
                    expression (src/ppx.ml[305,10492+2]..src/ppx.ml[307,10613+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[304,10464+21]..src/ppx.ml[304,10464+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[305,10492+6]..src/ppx.ml[305,10492+12])
                            Tpat_var "result/1878"
                          expression (src/ppx.ml[305,10492+15]..src/ppx.ml[305,10492+32])
                            Texp_apply
                            expression (src/ppx.ml[305,10492+15]..src/ppx.ml[305,10492+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[305,10492+24]..src/ppx.ml[305,10492+28])
                                  Texp_ident "proc/1876"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[305,10492+29]..src/ppx.ml[305,10492+32])
                                  Texp_ident "lst/1877"
                            ]
                      ]
                      expression (src/ppx.ml[306,10528+2]..src/ppx.ml[307,10613+4])
                        Texp_sequence
                        expression (src/ppx.ml[306,10528+2]..src/ppx.ml[306,10528+83])
                          Texp_apply
                          expression (src/ppx.ml[306,10528+2]..src/ppx.ml[306,10528+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[306,10528+12]..src/ppx.ml[306,10528+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[306,10528+17]..src/ppx.ml[306,10528+18])
                                      Tpat_var "i/1942"
                                    expression (src/ppx.ml[306,10528+22]..src/ppx.ml[306,10528+75])
                                      Texp_apply
                                      expression (src/ppx.ml[306,10528+22]..src/ppx.ml[306,10528+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[306,10528+36]..src/ppx.ml[306,10528+75])
                                            Texp_apply
                                            expression (src/ppx.ml[306,10528+37]..src/ppx.ml[306,10528+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[306,10528+52]..src/ppx.ml[306,10528+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[306,10528+53]..src/ppx.ml[306,10528+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[306,10528+54]..src/ppx.ml[306,10528+69]),None)
                                                    expression (src/ppx.ml[306,10528+72]..src/ppx.ml[306,10528+73])
                                                      Texp_ident "i/1942"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[306,10528+77]..src/ppx.ml[306,10528+83])
                                Texp_ident "result/1878"
                          ]
                        expression (src/ppx.ml[307,10613+2]..src/ppx.ml[307,10613+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[309,10635+0]..src/ppx.ml[312,10759+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[309,10635+4]..src/ppx.ml[309,10635+13])
          Tpat_var "transform/1943"
        expression (src/ppx.ml[309,10635+14]..src/ppx.ml[312,10759+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[309,10635+14]..src/ppx.ml[309,10635+15])
                Tpat_var "x/1945"
              expression (src/ppx.ml[310,10690+2]..src/ppx.ml[312,10759+3])
                Texp_sequence
                expression (src/ppx.ml[310,10690+2]..src/ppx.ml[310,10690+48])
                  Texp_apply
                  expression (src/ppx.ml[310,10690+3]..src/ppx.ml[310,10690+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[310,10690+17]..src/ppx.ml[310,10690+47])
                        Texp_apply
                        expression (src/ppx.ml[310,10690+18]..src/ppx.ml[310,10690+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[310,10690+33]..src/ppx.ml[310,10690+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[310,10690+34]..src/ppx.ml[310,10690+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[310,10690+35]..src/ppx.ml[310,10690+42]),None)
                                expression (src/ppx.ml[310,10690+44]..src/ppx.ml[310,10690+45])
                                  Texp_ident "x/1945"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[311,10740+2]..src/ppx.ml[312,10759+3])
                  Texp_sequence
                  expression (src/ppx.ml[311,10740+2]..src/ppx.ml[311,10740+17])
                    Texp_apply
                    expression (src/ppx.ml[311,10740+3]..src/ppx.ml[311,10740+8])
                      Texp_ident "debug/1874"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[311,10740+9]..src/ppx.ml[311,10740+14])
                          Texp_ident "proc1/1871"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[311,10740+15]..src/ppx.ml[311,10740+16])
                          Texp_ident "x/1945"
                    ]
                  expression (src/ppx.ml[312,10759+2]..src/ppx.ml[312,10759+3])
                    Texp_ident "x/1945"
          ]
    ]
  structure_item (src/ppx.ml[314,10766+1]..src/ppx.ml[314,10766+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[314,10766+5]..src/ppx.ml[314,10766+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[314,10766+10]..src/ppx.ml[314,10766+69])
          Texp_apply
          expression (src/ppx.ml[314,10766+10]..src/ppx.ml[314,10766+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[314,10766+47]..src/ppx.ml[314,10766+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[314,10766+47]..src/ppx.ml[314,10766+56])
                    Texp_ident "transform/1943"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[314,10766+57]..src/ppx.ml[314,10766+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[314,10766+58]..src/ppx.ml[314,10766+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.136>;
 "foo"[value] -> <Ppx.128>;
 "print_constructor_arguments"[value] -> <Ppx.75>;
 "print_type_decl"[value] -> <Ppx.93>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.107>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.129>;
 "printone2"[value] -> <Ppx.132>;
 "proc1"[value] -> <Ppx.134>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.34>;
 "process_core_type_desc"[value] -> <Ppx.32>;
 "process_core_type_list"[value] -> <Ppx.35>;
 "process_id"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.89>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.79>;
 "process_record_kind"[value] -> <Ppx.31>;
 "process_record_kind_list"[value] -> <Ppx.33>;
 "process_type_decl_list"[value] -> <Ppx.103>;
 "transform"[value] -> <Ppx.141>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5108 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (let
        (process_id/1437 =
           (function x/1439
             (funct-body Ppx.process_id src/ppx.ml(69)<ghost>:1893-1981
               (before Ppx.process_id src/ppx.ml(70):1915-1981
                 (let
                   (*match*/5109 =a (field 1 x/1439)
                    txt/1723 =a (field 0 x/1439))
                   (before Ppx.process_id src/ppx.ml(72):1947-1981
                     (let (txt2/1724 =a txt/1723)
                       (before Ppx.process_id src/ppx.ml(73):1977-1981
                         txt2/1724))))))))
        (letrec
          (process_record_kind/1725
             (function x/1730 : int
               (funct-body Ppx.process_record_kind src/ppx.ml(77)<ghost>:2090-2594
                 (before Ppx.process_record_kind src/ppx.ml(78):2098-2594
                   (let
                     (pld_attributes/1735 =a (field 4 x/1730)
                      pld_loc/1734 =a (field 3 x/1730)
                      pld_type/1733 =a (field 2 x/1730)
                      pld_mutable/1732 =a (field 1 x/1730)
                      pld_name/1731 =a (field 0 x/1730))
                     (before Ppx.process_record_kind src/ppx.ml(86):2304-2594
                       (after Ppx.process_record_kind src/ppx.ml(86):2304-2594
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.process_record_kind src/ppx.ml(86):2319-2593
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 (*,*,*,int,*,*)
                                 "DEBUG:precord_kind:" pld_name/1731
                                 "mutable" pld_mutable/1732 "type"
                                 pld_type/1733))))))))))
            process_core_type_desc/1726
              (function x/1736 : int
                (funct-body Ppx.process_core_type_desc src/ppx.ml(93)<ghost>:2622-4295
                  (before Ppx.process_core_type_desc src/ppx.ml(94):2628-4295
                    (switch* x/1736
                     case int 0:
                      (before Ppx.process_core_type_desc src/ppx.ml(106):3015-3067
                        (after Ppx.process_core_type_desc src/ppx.ml(106):3015-3067
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(106):3030-3066
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_any:")))))
                     case tag 0:
                      (let (name/1740 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(107):3088-3148
                          (after Ppx.process_core_type_desc src/ppx.ml(107):3088-3148
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(107):3103-3147
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_var:" name/1740)))))))
                     case tag 1:
                      (let
                        (core_type2/1743 =a (field 2 x/1736)
                         core_type/1742 =a (field 1 x/1736)
                         arg_label/1741 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(109):3208-3265
                          (after Ppx.process_core_type_desc src/ppx.ml(109):3208-3265
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(109):3223-3264
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow10:"))))))
                     case tag 2:
                      (let (a/1739 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(103):2923-2978
                          (after Ppx.process_core_type_desc src/ppx.ml(103):2923-2978
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(103):2938-2977
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_tuple:"))))))
                     case tag 3:
                      (let
                        (b/1738 =a (field 1 x/1736)
                         a/1737 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(97):2716-2869
                          (let
                            (myid/1757 =
                               (after Ppx.process_core_type_desc src/ppx.ml(97):2727-2741
                                 (apply process_id/1437 a/1737)))
                            (before Ppx.process_core_type_desc src/ppx.ml(98):2749-2869
                              (seq
                                (after Ppx.process_core_type_desc src/ppx.ml(98):2749-2775
                                  (apply process_core_type_list/1729 b/1738))
                                (before Ppx.process_core_type_desc src/ppx.ml(99):2782-2869
                                  (after Ppx.process_core_type_desc src/ppx.ml(99):2782-2869
                                    (apply (field 45 (global Stdlib!))
                                      (after Ppx.process_core_type_desc src/ppx.ml(99):2797-2868
                                        (apply (field 65 (global Batteries!))
                                          (makeblock 0 "DEBUG:Ptyp_constr:"
                                            "id" a/1737 "types" b/1738 "id2"
                                            myid/1757)))))))))))
                     case tag 4:
                      (let
                        (b/1745 =a (field 1 x/1736)
                         a/1744 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(113):3340-3396
                          (after Ppx.process_core_type_desc src/ppx.ml(113):3340-3396
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(113):3355-3395
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow8:"))))))
                     case tag 5:
                      (let
                        (b/1747 =a (field 1 x/1736)
                         a/1746 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(116):3471-3527
                          (after Ppx.process_core_type_desc src/ppx.ml(116):3471-3527
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(116):3486-3526
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow7:"))))))
                     case tag 6:
                      (let
                        (b/1749 =a (field 1 x/1736)
                         a/1748 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(119):3593-3649
                          (after Ppx.process_core_type_desc src/ppx.ml(119):3593-3649
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(119):3608-3648
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow6:"))))))
                     case tag 7:
                      (let
                        (c/1752 =a (field 2 x/1736)
                         b/1751 =a (field 1 x/1736)
                         a/1750 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(122):3744-3800
                          (after Ppx.process_core_type_desc src/ppx.ml(122):3744-3800
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(122):3759-3799
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow5:"))))))
                     case tag 8:
                      (let
                        (b/1754 =a (field 1 x/1736)
                         a/1753 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(125):3869-3925
                          (after Ppx.process_core_type_desc src/ppx.ml(125):3869-3925
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(125):3884-3924
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow4:"))))))
                     case tag 9:
                      (let (a/1755 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(128):3978-4036
                          (after Ppx.process_core_type_desc src/ppx.ml(128):3978-4036
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):3993-4035
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1755)))))))
                     case tag 10:
                      (let (a/1756 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(132):4234-4295
                          (after Ppx.process_core_type_desc src/ppx.ml(132):4234-4295
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(132):4249-4294
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_extension:"
                                    a/1756)))))))))))
            process_record_kind_list/1727
              (function x/1797 : int
                (funct-body Ppx.process_record_kind_list src/ppx.ml(134)<ghost>:4326-4443
                  (before Ppx.process_record_kind_list src/ppx.ml(135):4334-4443
                    (if x/1797
                      (let
                        (t/1799 =a (field 1 x/1797)
                         h/1798 =a (field 0 x/1797))
                        (before Ppx.process_record_kind_list src/ppx.ml(138):4378-4443
                          (seq
                            (after Ppx.process_record_kind_list src/ppx.ml(138):4378-4401
                              (apply process_record_kind/1725 h/1798))
                            (before Ppx.process_record_kind_list src/ppx.ml(139):4407-4443
                              (seq
                                (after Ppx.process_record_kind_list src/ppx.ml(139):4407-4435
                                  (apply process_record_kind_list/1727
                                    t/1799))
                                (before Ppx.process_record_kind_list src/ppx.ml(140):4441-4443
                                  0))))))
                      (before Ppx.process_record_kind_list src/ppx.ml(136):4357-4359
                        0)))))
            process_core_type/1728
              (function x/1800 : int
                (funct-body Ppx.process_core_type src/ppx.ml(142)<ghost>:4465-4795
                  (before Ppx.process_core_type src/ppx.ml(143):4473-4795
                    (let
                      (ptyp_attributes/1804 =a (field 3 x/1800)
                       ptyp_loc_stack/1803 =a (field 2 x/1800)
                       ptyp_loc/1802 =a (field 1 x/1800)
                       ptyp_desc/1801 =a (field 0 x/1800))
                      (before Ppx.process_core_type src/ppx.ml(150):4660-4795
                        (seq
                          (after Ppx.process_core_type src/ppx.ml(150):4660-4694
                            (apply process_core_type_desc/1726
                              ptyp_desc/1801))
                          (before Ppx.process_core_type src/ppx.ml(152):4719-4795
                            (after Ppx.process_core_type src/ppx.ml(152):4719-4795
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type src/ppx.ml(152):4734-4794
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                      ptyp_desc/1801))))))))))))
            process_core_type_list/1729
              (function x/1805 : int
                (funct-body Ppx.process_core_type_list src/ppx.ml(153)<ghost>:4822-4941
                  (before Ppx.process_core_type_list src/ppx.ml(154):4845-4941
                    (if x/1805
                      (let
                        (t/1807 =a (field 1 x/1805)
                         h/1806 =a (field 0 x/1805))
                        (before Ppx.process_core_type_list src/ppx.ml(157):4889-4941
                          (seq
                            (after Ppx.process_core_type_list src/ppx.ml(157):4889-4910
                              (apply process_core_type/1728 h/1806))
                            (before Ppx.process_core_type_list src/ppx.ml(158):4916-4941
                              (after Ppx.process_core_type_list src/ppx.ml(158):4916-4941
                                (apply process_core_type_list/1729 t/1807))))))
                      (before Ppx.process_core_type_list src/ppx.ml(155):4868-4870
                        0))))))
          (let
            (print_constructor_arguments/1808 =
               (function x/1810 : int
                 (funct-body Ppx.print_constructor_arguments src/ppx.ml(165)<ghost>:4987-5220
                   (before Ppx.print_constructor_arguments src/ppx.ml(166):4995-5220
                     (switch* x/1810
                      case tag 0:
                       (let (a/1811 =a (field 0 x/1810))
                         (before Ppx.print_constructor_arguments src/ppx.ml(168):5033-5125
                           (seq
                             (after Ppx.print_constructor_arguments src/ppx.ml(168):5033-5059
                               (apply process_core_type_list/1729 a/1811))
                             (before Ppx.print_constructor_arguments src/ppx.ml(169):5065-5125
                               (after Ppx.print_constructor_arguments src/ppx.ml(169):5065-5125
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_constructor_arguments src/ppx.ml(169):5080-5124
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:Pcstr_tuple:"
                                         a/1811)))))))))
                      case tag 1:
                       (let (a/1812 =a (field 0 x/1810))
                         (before Ppx.print_constructor_arguments src/ppx.ml(172):5159-5220
                           (after Ppx.print_constructor_arguments src/ppx.ml(172):5159-5220
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_constructor_arguments src/ppx.ml(172):5174-5219
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:Pcstr_record:" a/1812))))))))))))
            (letrec
              (process_pype_variant_constructor_declaration_list/1813
                 (function x/1814 : int
                   (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(174)<ghost>:5279-6206
                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(175):5287-6206
                       (if x/1814
                         (let
                           (t/1816 =a (field 1 x/1814)
                            h/1815 =a (field 0 x/1814))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(179):5396-6206
                             (let
                               (pcd_attributes/1822 =a (field 5 h/1815)
                                pcd_loc/1821 =a (field 4 h/1815)
                                pcd_res/1820 =a (field 3 h/1815)
                                pcd_args/1819 =a (field 2 h/1815)
                                pcd_vars/1818 =a (field 1 h/1815)
                                pcd_name/1817 =a (field 0 h/1815))
                               (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5735-6206
                                 (seq
                                   (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5735-5772
                                     (apply print_constructor_arguments/1808
                                       pcd_args/1819))
                                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5780-6206
                                     (seq
                                       (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5780-6135
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5795-6134
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "constructor_declaration:"
                                                 pcd_name/1817 "vars"
                                                 pcd_vars/1818 "args"
                                                 pcd_args/1819 "res"
                                                 pcd_res/1820 "loc"
                                                 pcd_loc/1821 "attrs"
                                                 pcd_attributes/1822)))))
                                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6143-6206
                                         (seq
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6143-6196
                                             (apply
                                               process_pype_variant_constructor_declaration_list/1813
                                               t/1816))
                                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6204-6206
                                             0))))))))))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(176):5310-5312
                           0))))))
              (let
                (process_kind/1823 =
                   (function x/1825 : int
                     (funct-body Ppx.process_kind src/ppx.ml(208)<ghost>:6226-6684
                       (before Ppx.process_kind src/ppx.ml(209):6234-6684
                         (switch* x/1825
                          case int 0:
                           (before Ppx.process_kind src/ppx.ml(211):6292-6350
                             (after Ppx.process_kind src/ppx.ml(211):6292-6350
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(211):6307-6349
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case int 1:
                           (before Ppx.process_kind src/ppx.ml(219):6626-6684
                             (after Ppx.process_kind src/ppx.ml(219):6626-6684
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(219):6641-6683
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case tag 0:
                           (let (a/1826 =a (field 0 x/1825))
                             (before Ppx.process_kind src/ppx.ml(213):6378-6498
                               (seq
                                 (after Ppx.process_kind src/ppx.ml(213):6378-6431
                                   (apply
                                     process_pype_variant_constructor_declaration_list/1813
                                     a/1826))
                                 (before Ppx.process_kind src/ppx.ml(214):6437-6498
                                   (after Ppx.process_kind src/ppx.ml(214):6437-6498
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.process_kind src/ppx.ml(214):6452-6497
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0
                                             "DEBUG:Ptype_variant:" a/1826)))))))))
                          case tag 1:
                           (let (a/1827 =a (field 0 x/1825))
                             (before Ppx.process_kind src/ppx.ml(218):6579-6606
                               (after Ppx.process_kind src/ppx.ml(218):6579-6606
                                 (apply process_record_kind_list/1727 a/1827))))))))
                 print_type_decl/1828 =
                   (function x/1830 : int
                     (funct-body Ppx.print_type_decl src/ppx.ml(221)<ghost>:6705-7730
                       (before Ppx.print_type_decl src/ppx.ml(222):6713-7730
                         (let
                           (ptype_loc/1838 =a (field 7 x/1830)
                            ptype_attributes/1837 =a (field 6 x/1830)
                            ptype_manifest/1836 =a (field 5 x/1830)
                            ptype_private/1835 =a (field 4 x/1830)
                            ptype_kind/1834 =a (field 3 x/1830)
                            ptype_cstrs/1833 =a (field 2 x/1830)
                            ptype_params/1832 =a (field 1 x/1830)
                            ptype_name/1831 =a (field 0 x/1830))
                           (before Ppx.print_type_decl src/ppx.ml(233):7120-7730
                             (seq
                               (after Ppx.print_type_decl src/ppx.ml(233):7120-7185
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_type_decl src/ppx.ml(233):7135-7184
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:type_decl:"
                                         ptype_name/1831)))))
                               (before Ppx.print_type_decl src/ppx.ml(234):7191-7730
                                 (seq
                                   (after Ppx.print_type_decl src/ppx.ml(234):7191-7259
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.print_type_decl src/ppx.ml(234):7206-7258
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0 "DEBUG:parameters:"
                                             ptype_params/1832)))))
                                   (before Ppx.print_type_decl src/ppx.ml(235):7265-7730
                                     (seq
                                       (after Ppx.print_type_decl src/ppx.ml(235):7265-7327
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.print_type_decl src/ppx.ml(235):7280-7326
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:cstrs:"
                                                 ptype_cstrs/1833)))))
                                       (before Ppx.print_type_decl src/ppx.ml(236):7333-7730
                                         (seq
                                           (after Ppx.print_type_decl src/ppx.ml(236):7333-7392
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.print_type_decl src/ppx.ml(236):7348-7391
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG:kind:"
                                                     ptype_kind/1834)))))
                                           (before Ppx.print_type_decl src/ppx.ml(237):7398-7730
                                             (seq
                                               (after Ppx.print_type_decl src/ppx.ml(237):7398-7423
                                                 (apply process_kind/1823
                                                   ptype_kind/1834))
                                               (before Ppx.print_type_decl src/ppx.ml(238):7429-7730
                                                 (after Ppx.print_type_decl src/ppx.ml(238):7429-7730
                                                   (apply
                                                     (field 45
                                                       (global Stdlib!))
                                                     (after Ppx.print_type_decl src/ppx.ml(238):7444-7729
                                                       (apply
                                                         (field 65
                                                           (global Batteries!))
                                                         (makeblock 0 (*,int,*,*,*,*,*,*)
                                                           "DEBUG:private:"
                                                           ptype_private/1835
                                                           "DEBUG:manifest"
                                                           ptype_manifest/1836
                                                           "DEBUG:attr"
                                                           ptype_attributes/1837
                                                           "DEBUG:loc"
                                                           ptype_loc/1838)))))))))))))))))))))
                (letrec
                  (process_type_decl_list/1839
                     (function x/1840 : int
                       (funct-body Ppx.process_type_decl_list src/ppx.ml(244)<ghost>:7766-7877
                         (before Ppx.process_type_decl_list src/ppx.ml(245):7774-7877
                           (if x/1840
                             (let
                               (t/1842 =a (field 1 x/1840)
                                h/1841 =a (field 0 x/1840))
                               (before Ppx.process_type_decl_list src/ppx.ml(248):7818-7877
                                 (seq
                                   (after Ppx.process_type_decl_list src/ppx.ml(248):7818-7837
                                     (apply print_type_decl/1828 h/1841))
                                   (before Ppx.process_type_decl_list src/ppx.ml(249):7843-7877
                                     (seq
                                       (after Ppx.process_type_decl_list src/ppx.ml(249):7843-7869
                                         (apply process_type_decl_list/1839
                                           t/1842))
                                       (before Ppx.process_type_decl_list src/ppx.ml(250):7875-7877
                                         0))))))
                             (before Ppx.process_type_decl_list src/ppx.ml(246):7797-7799
                               0))))))
                  (let
                    (printdesc/1843 =
                       (function x/1845 : int
                         (funct-body Ppx.printdesc src/ppx.ml(252)<ghost>:7896-9975
                           (before Ppx.printdesc src/ppx.ml(253):7931-9975
                             (seq
                               (after Ppx.printdesc src/ppx.ml(253):7931-7997
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printdesc src/ppx.ml(253):7946-7996
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0
                                         "DEBUG:structure_item_desc:" x/1845)))))
                               (before Ppx.printdesc src/ppx.ml(254):8001-9975
                                 (switch* x/1845
                                  case tag 0:
                                   (let
                                     (attributes/1847 =a (field 1 x/1845)
                                      expression/1846 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(255):8055-8131
                                       (after Ppx.printdesc src/ppx.ml(255):8055-8131
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(255):8070-8130
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_eval:"
                                                 expression/1846
                                                 attributes/1847)))))))
                                  case tag 1:
                                   (let
                                     (value_binding_list/1849 =a
                                        (field 1 x/1845)
                                      rec_flag/1848 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(257):8200-8334
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(257):8200-8284
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(257):8215-8283
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_value:"
                                                   rec_flag/1848
                                                   value_binding_list/1849)))))
                                         (before Ppx.printdesc src/ppx.ml(258):8290-8334
                                           (after Ppx.printdesc src/ppx.ml(258):8290-8334
                                             (apply
                                               print_value_binding_list/1298
                                               value_binding_list/1849))))))
                                  case tag 2:
                                   (let
                                     (value_description/1850 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(259):8374-8451
                                       (after Ppx.printdesc src/ppx.ml(259):8374-8451
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(259):8389-8450
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_primitive:"
                                                 value_description/1850)))))))
                                  case tag 3:
                                   (let
                                     (type_declaration_list/1852 =a
                                        (field 1 x/1845)
                                      rec_flag/1851 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(263):8536-8673
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(263):8536-8581
                                           (apply process_type_decl_list/1839
                                             type_declaration_list/1852))
                                         (before Ppx.printdesc src/ppx.ml(264):8587-8673
                                           (after Ppx.printdesc src/ppx.ml(264):8587-8673
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(264):8602-8672
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_type:"
                                                     rec_flag/1851
                                                     type_declaration_list/1852)))))))))
                                  case tag 4:
                                   (let
                                     (type_extension/1853 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(267):8710-8781
                                       (after Ppx.printdesc src/ppx.ml(267):8710-8781
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(267):8725-8780
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_typext:"
                                                 type_extension/1853)))))))
                                  case tag 5:
                                   (let
                                     (extension_constructor/1854 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(268):8825-8906
                                       (after Ppx.printdesc src/ppx.ml(268):8825-8906
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(268):8840-8905
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_exception:"
                                                 extension_constructor/1854)))))))
                                  case tag 6:
                                   (let
                                     (module_binding/1855 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(269):8941-9011
                                       (after Ppx.printdesc src/ppx.ml(269):8941-9011
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(269):8956-9010
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_module:"
                                                 module_binding/1855)))))))
                                  case tag 7:
                                   (let
                                     (module_binding_list/1856 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(270):9054-9133
                                       (after Ppx.printdesc src/ppx.ml(270):9054-9133
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(270):9069-9132
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_recmodule:"
                                                 module_binding_list/1856)))))))
                                  case tag 8:
                                   (let
                                     (module_type_declaration/1857 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(271):9177-9258
                                       (after Ppx.printdesc src/ppx.ml(271):9177-9258
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(271):9192-9257
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_modtype:"
                                                 module_type_declaration/1857)))))))
                                  case tag 9:
                                   (let
                                     (open_description/1858 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(273):9309-9379
                                       (after Ppx.printdesc src/ppx.ml(273):9309-9379
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(273):9324-9378
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:Pstr_open"
                                                 open_description/1858)))))))
                                  case tag 10:
                                   (let
                                     (class_declarations/1859 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(274):9419-9493
                                       (after Ppx.printdesc src/ppx.ml(274):9419-9493
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(274):9434-9492
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class:"
                                                 class_declarations/1859)))))))
                                  case tag 11:
                                   (let
                                     (class_type_declarations/1860 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(275):9542-9626
                                       (after Ppx.printdesc src/ppx.ml(275):9542-9626
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(275):9557-9625
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class_type:"
                                                 class_type_declarations/1860)))))))
                                  case tag 12:
                                   (let
                                     (include_declaration/1861 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(276):9668-9744
                                       (after Ppx.printdesc src/ppx.ml(276):9668-9744
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(276):9683-9743
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_include:"
                                                 include_declaration/1861)))))))
                                  case tag 13:
                                   (let (attribute/1862 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(277):9777-9846
                                       (after Ppx.printdesc src/ppx.ml(277):9777-9846
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(277):9792-9845
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_attribute:"
                                                 attribute/1862)))))))
                                  case tag 14:
                                   (let
                                     (attributes/1864 =a (field 1 x/1845)
                                      extension/1863 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(278):9893-9975
                                       (after Ppx.printdesc src/ppx.ml(278):9893-9975
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(278):9908-9974
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_extension:"
                                                 extension/1863
                                                 attributes/1864)))))))))))))
                     foo/1865 =[int] 1
                     printone/1866 =
                       (function x/1867 : int
                         (funct-body Ppx.printone src/ppx.ml(282)<ghost>:10005-10217
                           (before Ppx.printone src/ppx.ml(283):10037-10217
                             (let
                               (*match*/5110 =a (field 1 x/1867)
                                pstr_desc/1868 =a (field 0 x/1867))
                               (before Ppx.printone src/ppx.ml(289):10188-10217
                                 (seq
                                   (after Ppx.printone src/ppx.ml(289):10188-10209
                                     (apply printdesc/1843 pstr_desc/1868))
                                   (before Ppx.printone src/ppx.ml(290):10215-10217
                                     0)))))))
                     printone2/1869 =
                       (function x/1870 : int
                         (funct-body Ppx.printone2 src/ppx.ml(296)<ghost>:10345-10424
                           (before Ppx.printone2 src/ppx.ml(297):10357-10424
                             (seq
                               (after Ppx.printone2 src/ppx.ml(297):10357-10410
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printone2 src/ppx.ml(297):10372-10409
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:SECOND::" x/1870)))))
                               (before Ppx.printone2 src/ppx.ml(298):10414-10424
                                 (after Ppx.printone2 src/ppx.ml(298):10414-10424
                                   (apply printone/1866 x/1870)))))))
                     proc1/1871 =
                       (function x/1873
                         (funct-body Ppx.proc1 src/ppx.ml(300)<ghost>:10438-10462
                           (before Ppx.proc1 src/ppx.ml(301):10446-10462
                             (seq
                               (after Ppx.proc1 src/ppx.ml(301):10446-10457
                                 (apply printone2/1869 x/1873))
                               (before Ppx.proc1 src/ppx.ml(302):10461-10462
                                 x/1873)))))
                     debug/1874 =
                       (function proc/1876 lst/1877 : int
                         (funct-body Ppx.debug src/ppx.ml(304)<ghost>:10474-10617
                           (before Ppx.debug src/ppx.ml(305):10494-10617
                             (let
                               (result/1878 =
                                  (after Ppx.debug src/ppx.ml(305):10507-10524
                                    (apply (field 18 (global Stdlib__List!))
                                      proc/1876 lst/1877)))
                               (before Ppx.debug src/ppx.ml(306):10530-10617
                                 (seq
                                   (after Ppx.debug src/ppx.ml(306):10530-10611
                                     (apply (field 16 (global Stdlib__List!))
                                       (function i/1942 : int
                                         (funct-body Ppx.debug.(fun) src/ppx.ml(306):10540-10604
                                           (before Ppx.debug.(fun) src/ppx.ml(306):10550-10603
                                             (after Ppx.debug.(fun) src/ppx.ml(306):10550-10603
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.debug.(fun) src/ppx.ml(306):10564-10603
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:TOPLEVEL:"
                                                       i/1942))))))))
                                       result/1878))
                                   (before Ppx.debug src/ppx.ml(307):10615-10617
                                     0)))))))
                     transform/1943 =
                       (function x/1945
                         (funct-body Ppx.transform src/ppx.ml(309)<ghost>:10649-10762
                           (before Ppx.transform src/ppx.ml(310):10692-10762
                             (seq
                               (after Ppx.transform src/ppx.ml(310):10692-10738
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.transform src/ppx.ml(310):10707-10737
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG3:" x/1945)))))
                               (before Ppx.transform src/ppx.ml(311):10742-10762
                                 (seq
                                   (after Ppx.transform src/ppx.ml(311):10742-10757
                                     (apply debug/1874 proc1/1871 x/1945))
                                   (before Ppx.transform src/ppx.ml(312):10761-10762
                                     x/1945)))))))
                     *match*/5112 =
                       (after Ppx src/ppx.ml(314):10776-10835
                         (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                           (makeblock 0 transform/1943) 0 0 0 0 0 0 0
                           "simple-ppx")))
                    (pseudo <unknown location>
                      (makeblock 0 proc2/1279 printdesc2/1282
                        print_value_binding_expr/1284
                        print_value_binding_list2/1291
                        print_value_binding_list/1298 process_id/1437
                        process_record_kind/1725 process_core_type_desc/1726
                        process_record_kind_list/1727 process_core_type/1728
                        process_core_type_list/1729
                        print_constructor_arguments/1808
                        process_pype_variant_constructor_declaration_list/1813
                        process_kind/1823 print_type_decl/1828
                        process_type_decl_list/1839 printdesc/1843 foo/1865
                        printone/1866 printone2/1869 proc1/1871 debug/1874
                        transform/1943))))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (let
        (process_id/1437 =
           (function x/1439
             (funct-body Ppx.process_id src/ppx.ml(69)<ghost>:1893-1981
               (before Ppx.process_id src/ppx.ml(70):1915-1981
                 (let (txt/1723 =a (field 0 x/1439))
                   (before Ppx.process_id src/ppx.ml(72):1947-1981
                     (let (txt2/1724 =a txt/1723)
                       (before Ppx.process_id src/ppx.ml(73):1977-1981
                         txt2/1724))))))))
        (letrec
          (process_record_kind/1725
             (function x/1730 : int
               (funct-body Ppx.process_record_kind src/ppx.ml(77)<ghost>:2090-2594
                 (before Ppx.process_record_kind src/ppx.ml(78):2098-2594
                   (let
                     (pld_type/1733 =a (field 2 x/1730)
                      pld_mutable/1732 =a (field 1 x/1730)
                      pld_name/1731 =a (field 0 x/1730))
                     (before Ppx.process_record_kind src/ppx.ml(86):2304-2594
                       (after Ppx.process_record_kind src/ppx.ml(86):2304-2594
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.process_record_kind src/ppx.ml(86):2319-2593
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 (*,*,*,int,*,*)
                                 "DEBUG:precord_kind:" pld_name/1731
                                 "mutable" pld_mutable/1732 "type"
                                 pld_type/1733))))))))))
            process_core_type_desc/1726
              (function x/1736 : int
                (funct-body Ppx.process_core_type_desc src/ppx.ml(93)<ghost>:2622-4295
                  (before Ppx.process_core_type_desc src/ppx.ml(94):2628-4295
                    (switch* x/1736
                     case int 0:
                      (before Ppx.process_core_type_desc src/ppx.ml(106):3015-3067
                        (after Ppx.process_core_type_desc src/ppx.ml(106):3015-3067
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(106):3030-3066
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_any:")))))
                     case tag 0:
                      (let (name/1740 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(107):3088-3148
                          (after Ppx.process_core_type_desc src/ppx.ml(107):3088-3148
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(107):3103-3147
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_var:" name/1740)))))))
                     case tag 1:
                      (before Ppx.process_core_type_desc src/ppx.ml(109):3208-3265
                        (after Ppx.process_core_type_desc src/ppx.ml(109):3208-3265
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(109):3223-3264
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10:")))))
                     case tag 2:
                      (before Ppx.process_core_type_desc src/ppx.ml(103):2923-2978
                        (after Ppx.process_core_type_desc src/ppx.ml(103):2923-2978
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(103):2938-2977
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_tuple:")))))
                     case tag 3:
                      (let
                        (b/1738 =a (field 1 x/1736)
                         a/1737 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(97):2716-2869
                          (let
                            (myid/1757 =
                               (after Ppx.process_core_type_desc src/ppx.ml(97):2727-2741
                                 (apply process_id/1437 a/1737)))
                            (before Ppx.process_core_type_desc src/ppx.ml(98):2749-2869
                              (seq
                                (after Ppx.process_core_type_desc src/ppx.ml(98):2749-2775
                                  (apply process_core_type_list/1729 b/1738))
                                (before Ppx.process_core_type_desc src/ppx.ml(99):2782-2869
                                  (after Ppx.process_core_type_desc src/ppx.ml(99):2782-2869
                                    (apply (field 45 (global Stdlib!))
                                      (after Ppx.process_core_type_desc src/ppx.ml(99):2797-2868
                                        (apply (field 65 (global Batteries!))
                                          (makeblock 0 "DEBUG:Ptyp_constr:"
                                            "id" a/1737 "types" b/1738 "id2"
                                            myid/1757)))))))))))
                     case tag 4:
                      (before Ppx.process_core_type_desc src/ppx.ml(113):3340-3396
                        (after Ppx.process_core_type_desc src/ppx.ml(113):3340-3396
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(113):3355-3395
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8:")))))
                     case tag 5:
                      (before Ppx.process_core_type_desc src/ppx.ml(116):3471-3527
                        (after Ppx.process_core_type_desc src/ppx.ml(116):3471-3527
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(116):3486-3526
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7:")))))
                     case tag 6:
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3593-3649
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3593-3649
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3608-3648
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6:")))))
                     case tag 7:
                      (before Ppx.process_core_type_desc src/ppx.ml(122):3744-3800
                        (after Ppx.process_core_type_desc src/ppx.ml(122):3744-3800
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(122):3759-3799
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5:")))))
                     case tag 8:
                      (before Ppx.process_core_type_desc src/ppx.ml(125):3869-3925
                        (after Ppx.process_core_type_desc src/ppx.ml(125):3869-3925
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(125):3884-3924
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4:")))))
                     case tag 9:
                      (let (a/1755 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(128):3978-4036
                          (after Ppx.process_core_type_desc src/ppx.ml(128):3978-4036
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):3993-4035
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1755)))))))
                     case tag 10:
                      (let (a/1756 =a (field 0 x/1736))
                        (before Ppx.process_core_type_desc src/ppx.ml(132):4234-4295
                          (after Ppx.process_core_type_desc src/ppx.ml(132):4234-4295
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(132):4249-4294
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:Ptyp_extension:"
                                    a/1756)))))))))))
            process_record_kind_list/1727
              (function x/1797 : int
                (funct-body Ppx.process_record_kind_list src/ppx.ml(134)<ghost>:4326-4443
                  (before Ppx.process_record_kind_list src/ppx.ml(135):4334-4443
                    (if x/1797
                      (let
                        (t/1799 =a (field 1 x/1797)
                         h/1798 =a (field 0 x/1797))
                        (before Ppx.process_record_kind_list src/ppx.ml(138):4378-4443
                          (seq
                            (after Ppx.process_record_kind_list src/ppx.ml(138):4378-4401
                              (apply process_record_kind/1725 h/1798))
                            (before Ppx.process_record_kind_list src/ppx.ml(139):4407-4443
                              (seq
                                (after Ppx.process_record_kind_list src/ppx.ml(139):4407-4435
                                  (apply process_record_kind_list/1727
                                    t/1799))
                                (before Ppx.process_record_kind_list src/ppx.ml(140):4441-4443
                                  0))))))
                      (before Ppx.process_record_kind_list src/ppx.ml(136):4357-4359
                        0)))))
            process_core_type/1728
              (function x/1800 : int
                (funct-body Ppx.process_core_type src/ppx.ml(142)<ghost>:4465-4795
                  (before Ppx.process_core_type src/ppx.ml(143):4473-4795
                    (let (ptyp_desc/1801 =a (field 0 x/1800))
                      (before Ppx.process_core_type src/ppx.ml(150):4660-4795
                        (seq
                          (after Ppx.process_core_type src/ppx.ml(150):4660-4694
                            (apply process_core_type_desc/1726
                              ptyp_desc/1801))
                          (before Ppx.process_core_type src/ppx.ml(152):4719-4795
                            (after Ppx.process_core_type src/ppx.ml(152):4719-4795
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type src/ppx.ml(152):4734-4794
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:core_type.ptyp_desc:"
                                      ptyp_desc/1801))))))))))))
            process_core_type_list/1729
              (function x/1805 : int
                (funct-body Ppx.process_core_type_list src/ppx.ml(153)<ghost>:4822-4941
                  (before Ppx.process_core_type_list src/ppx.ml(154):4845-4941
                    (if x/1805
                      (let
                        (t/1807 =a (field 1 x/1805)
                         h/1806 =a (field 0 x/1805))
                        (before Ppx.process_core_type_list src/ppx.ml(157):4889-4941
                          (seq
                            (after Ppx.process_core_type_list src/ppx.ml(157):4889-4910
                              (apply process_core_type/1728 h/1806))
                            (before Ppx.process_core_type_list src/ppx.ml(158):4916-4941
                              (after Ppx.process_core_type_list src/ppx.ml(158):4916-4941
                                (apply process_core_type_list/1729 t/1807))))))
                      (before Ppx.process_core_type_list src/ppx.ml(155):4868-4870
                        0))))))
          (let
            (print_constructor_arguments/1808 =
               (function x/1810 : int
                 (funct-body Ppx.print_constructor_arguments src/ppx.ml(165)<ghost>:4987-5220
                   (before Ppx.print_constructor_arguments src/ppx.ml(166):4995-5220
                     (switch* x/1810
                      case tag 0:
                       (let (a/1811 =a (field 0 x/1810))
                         (before Ppx.print_constructor_arguments src/ppx.ml(168):5033-5125
                           (seq
                             (after Ppx.print_constructor_arguments src/ppx.ml(168):5033-5059
                               (apply process_core_type_list/1729 a/1811))
                             (before Ppx.print_constructor_arguments src/ppx.ml(169):5065-5125
                               (after Ppx.print_constructor_arguments src/ppx.ml(169):5065-5125
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_constructor_arguments src/ppx.ml(169):5080-5124
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:Pcstr_tuple:"
                                         a/1811)))))))))
                      case tag 1:
                       (let (a/1812 =a (field 0 x/1810))
                         (before Ppx.print_constructor_arguments src/ppx.ml(172):5159-5220
                           (after Ppx.print_constructor_arguments src/ppx.ml(172):5159-5220
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_constructor_arguments src/ppx.ml(172):5174-5219
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:Pcstr_record:" a/1812))))))))))))
            (letrec
              (process_pype_variant_constructor_declaration_list/1813
                 (function x/1814 : int
                   (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(174)<ghost>:5279-6206
                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(175):5287-6206
                       (if x/1814
                         (let
                           (t/1816 =a (field 1 x/1814)
                            h/1815 =a (field 0 x/1814))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(179):5396-6206
                             (let
                               (pcd_attributes/1822 =a (field 5 h/1815)
                                pcd_loc/1821 =a (field 4 h/1815)
                                pcd_res/1820 =a (field 3 h/1815)
                                pcd_args/1819 =a (field 2 h/1815)
                                pcd_vars/1818 =a (field 1 h/1815)
                                pcd_name/1817 =a (field 0 h/1815))
                               (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5735-6206
                                 (seq
                                   (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5735-5772
                                     (apply print_constructor_arguments/1808
                                       pcd_args/1819))
                                   (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5780-6206
                                     (seq
                                       (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5780-6135
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5795-6134
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "constructor_declaration:"
                                                 pcd_name/1817 "vars"
                                                 pcd_vars/1818 "args"
                                                 pcd_args/1819 "res"
                                                 pcd_res/1820 "loc"
                                                 pcd_loc/1821 "attrs"
                                                 pcd_attributes/1822)))))
                                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6143-6206
                                         (seq
                                           (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6143-6196
                                             (apply
                                               process_pype_variant_constructor_declaration_list/1813
                                               t/1816))
                                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6204-6206
                                             0))))))))))
                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(176):5310-5312
                           0))))))
              (let
                (process_kind/1823 =
                   (function x/1825 : int
                     (funct-body Ppx.process_kind src/ppx.ml(208)<ghost>:6226-6684
                       (before Ppx.process_kind src/ppx.ml(209):6234-6684
                         (switch* x/1825
                          case int 0:
                           (before Ppx.process_kind src/ppx.ml(211):6292-6350
                             (after Ppx.process_kind src/ppx.ml(211):6292-6350
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(211):6307-6349
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case int 1:
                           (before Ppx.process_kind src/ppx.ml(219):6626-6684
                             (after Ppx.process_kind src/ppx.ml(219):6626-6684
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.process_kind src/ppx.ml(219):6641-6683
                                   (apply (field 65 (global Batteries!))
                                     "DEBUG:Ptype_abstract:")))))
                          case tag 0:
                           (let (a/1826 =a (field 0 x/1825))
                             (before Ppx.process_kind src/ppx.ml(213):6378-6498
                               (seq
                                 (after Ppx.process_kind src/ppx.ml(213):6378-6431
                                   (apply
                                     process_pype_variant_constructor_declaration_list/1813
                                     a/1826))
                                 (before Ppx.process_kind src/ppx.ml(214):6437-6498
                                   (after Ppx.process_kind src/ppx.ml(214):6437-6498
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.process_kind src/ppx.ml(214):6452-6497
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0
                                             "DEBUG:Ptype_variant:" a/1826)))))))))
                          case tag 1:
                           (let (a/1827 =a (field 0 x/1825))
                             (before Ppx.process_kind src/ppx.ml(218):6579-6606
                               (after Ppx.process_kind src/ppx.ml(218):6579-6606
                                 (apply process_record_kind_list/1727 a/1827))))))))
                 print_type_decl/1828 =
                   (function x/1830 : int
                     (funct-body Ppx.print_type_decl src/ppx.ml(221)<ghost>:6705-7730
                       (before Ppx.print_type_decl src/ppx.ml(222):6713-7730
                         (let
                           (ptype_loc/1838 =a (field 7 x/1830)
                            ptype_attributes/1837 =a (field 6 x/1830)
                            ptype_manifest/1836 =a (field 5 x/1830)
                            ptype_private/1835 =a (field 4 x/1830)
                            ptype_kind/1834 =a (field 3 x/1830)
                            ptype_cstrs/1833 =a (field 2 x/1830)
                            ptype_params/1832 =a (field 1 x/1830)
                            ptype_name/1831 =a (field 0 x/1830))
                           (before Ppx.print_type_decl src/ppx.ml(233):7120-7730
                             (seq
                               (after Ppx.print_type_decl src/ppx.ml(233):7120-7185
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.print_type_decl src/ppx.ml(233):7135-7184
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:type_decl:"
                                         ptype_name/1831)))))
                               (before Ppx.print_type_decl src/ppx.ml(234):7191-7730
                                 (seq
                                   (after Ppx.print_type_decl src/ppx.ml(234):7191-7259
                                     (apply (field 45 (global Stdlib!))
                                       (after Ppx.print_type_decl src/ppx.ml(234):7206-7258
                                         (apply
                                           (field 65 (global Batteries!))
                                           (makeblock 0 "DEBUG:parameters:"
                                             ptype_params/1832)))))
                                   (before Ppx.print_type_decl src/ppx.ml(235):7265-7730
                                     (seq
                                       (after Ppx.print_type_decl src/ppx.ml(235):7265-7327
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.print_type_decl src/ppx.ml(235):7280-7326
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:cstrs:"
                                                 ptype_cstrs/1833)))))
                                       (before Ppx.print_type_decl src/ppx.ml(236):7333-7730
                                         (seq
                                           (after Ppx.print_type_decl src/ppx.ml(236):7333-7392
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.print_type_decl src/ppx.ml(236):7348-7391
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 "DEBUG:kind:"
                                                     ptype_kind/1834)))))
                                           (before Ppx.print_type_decl src/ppx.ml(237):7398-7730
                                             (seq
                                               (after Ppx.print_type_decl src/ppx.ml(237):7398-7423
                                                 (apply process_kind/1823
                                                   ptype_kind/1834))
                                               (before Ppx.print_type_decl src/ppx.ml(238):7429-7730
                                                 (after Ppx.print_type_decl src/ppx.ml(238):7429-7730
                                                   (apply
                                                     (field 45
                                                       (global Stdlib!))
                                                     (after Ppx.print_type_decl src/ppx.ml(238):7444-7729
                                                       (apply
                                                         (field 65
                                                           (global Batteries!))
                                                         (makeblock 0 (*,int,*,*,*,*,*,*)
                                                           "DEBUG:private:"
                                                           ptype_private/1835
                                                           "DEBUG:manifest"
                                                           ptype_manifest/1836
                                                           "DEBUG:attr"
                                                           ptype_attributes/1837
                                                           "DEBUG:loc"
                                                           ptype_loc/1838)))))))))))))))))))))
                (letrec
                  (process_type_decl_list/1839
                     (function x/1840 : int
                       (funct-body Ppx.process_type_decl_list src/ppx.ml(244)<ghost>:7766-7877
                         (before Ppx.process_type_decl_list src/ppx.ml(245):7774-7877
                           (if x/1840
                             (let
                               (t/1842 =a (field 1 x/1840)
                                h/1841 =a (field 0 x/1840))
                               (before Ppx.process_type_decl_list src/ppx.ml(248):7818-7877
                                 (seq
                                   (after Ppx.process_type_decl_list src/ppx.ml(248):7818-7837
                                     (apply print_type_decl/1828 h/1841))
                                   (before Ppx.process_type_decl_list src/ppx.ml(249):7843-7877
                                     (seq
                                       (after Ppx.process_type_decl_list src/ppx.ml(249):7843-7869
                                         (apply process_type_decl_list/1839
                                           t/1842))
                                       (before Ppx.process_type_decl_list src/ppx.ml(250):7875-7877
                                         0))))))
                             (before Ppx.process_type_decl_list src/ppx.ml(246):7797-7799
                               0))))))
                  (let
                    (printdesc/1843 =
                       (function x/1845 : int
                         (funct-body Ppx.printdesc src/ppx.ml(252)<ghost>:7896-9975
                           (before Ppx.printdesc src/ppx.ml(253):7931-9975
                             (seq
                               (after Ppx.printdesc src/ppx.ml(253):7931-7997
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printdesc src/ppx.ml(253):7946-7996
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0
                                         "DEBUG:structure_item_desc:" x/1845)))))
                               (before Ppx.printdesc src/ppx.ml(254):8001-9975
                                 (switch* x/1845
                                  case tag 0:
                                   (let
                                     (attributes/1847 =a (field 1 x/1845)
                                      expression/1846 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(255):8055-8131
                                       (after Ppx.printdesc src/ppx.ml(255):8055-8131
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(255):8070-8130
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_eval:"
                                                 expression/1846
                                                 attributes/1847)))))))
                                  case tag 1:
                                   (let
                                     (value_binding_list/1849 =a
                                        (field 1 x/1845)
                                      rec_flag/1848 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(257):8200-8334
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(257):8200-8284
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(257):8215-8283
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_value:"
                                                   rec_flag/1848
                                                   value_binding_list/1849)))))
                                         (before Ppx.printdesc src/ppx.ml(258):8290-8334
                                           (after Ppx.printdesc src/ppx.ml(258):8290-8334
                                             (apply
                                               print_value_binding_list/1298
                                               value_binding_list/1849))))))
                                  case tag 2:
                                   (let
                                     (value_description/1850 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(259):8374-8451
                                       (after Ppx.printdesc src/ppx.ml(259):8374-8451
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(259):8389-8450
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_primitive:"
                                                 value_description/1850)))))))
                                  case tag 3:
                                   (let
                                     (type_declaration_list/1852 =a
                                        (field 1 x/1845)
                                      rec_flag/1851 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(263):8536-8673
                                       (seq
                                         (after Ppx.printdesc src/ppx.ml(263):8536-8581
                                           (apply process_type_decl_list/1839
                                             type_declaration_list/1852))
                                         (before Ppx.printdesc src/ppx.ml(264):8587-8673
                                           (after Ppx.printdesc src/ppx.ml(264):8587-8673
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(264):8602-8672
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_type:"
                                                     rec_flag/1851
                                                     type_declaration_list/1852)))))))))
                                  case tag 4:
                                   (let
                                     (type_extension/1853 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(267):8710-8781
                                       (after Ppx.printdesc src/ppx.ml(267):8710-8781
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(267):8725-8780
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_typext:"
                                                 type_extension/1853)))))))
                                  case tag 5:
                                   (let
                                     (extension_constructor/1854 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(268):8825-8906
                                       (after Ppx.printdesc src/ppx.ml(268):8825-8906
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(268):8840-8905
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_exception:"
                                                 extension_constructor/1854)))))))
                                  case tag 6:
                                   (let
                                     (module_binding/1855 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(269):8941-9011
                                       (after Ppx.printdesc src/ppx.ml(269):8941-9011
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(269):8956-9010
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_module:"
                                                 module_binding/1855)))))))
                                  case tag 7:
                                   (let
                                     (module_binding_list/1856 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(270):9054-9133
                                       (after Ppx.printdesc src/ppx.ml(270):9054-9133
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(270):9069-9132
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_recmodule:"
                                                 module_binding_list/1856)))))))
                                  case tag 8:
                                   (let
                                     (module_type_declaration/1857 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(271):9177-9258
                                       (after Ppx.printdesc src/ppx.ml(271):9177-9258
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(271):9192-9257
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_modtype:"
                                                 module_type_declaration/1857)))))))
                                  case tag 9:
                                   (let
                                     (open_description/1858 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(273):9309-9379
                                       (after Ppx.printdesc src/ppx.ml(273):9309-9379
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(273):9324-9378
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 "DEBUG:Pstr_open"
                                                 open_description/1858)))))))
                                  case tag 10:
                                   (let
                                     (class_declarations/1859 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(274):9419-9493
                                       (after Ppx.printdesc src/ppx.ml(274):9419-9493
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(274):9434-9492
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class:"
                                                 class_declarations/1859)))))))
                                  case tag 11:
                                   (let
                                     (class_type_declarations/1860 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(275):9542-9626
                                       (after Ppx.printdesc src/ppx.ml(275):9542-9626
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(275):9557-9625
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_class_type:"
                                                 class_type_declarations/1860)))))))
                                  case tag 12:
                                   (let
                                     (include_declaration/1861 =a
                                        (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(276):9668-9744
                                       (after Ppx.printdesc src/ppx.ml(276):9668-9744
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(276):9683-9743
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_include:"
                                                 include_declaration/1861)))))))
                                  case tag 13:
                                   (let (attribute/1862 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(277):9777-9846
                                       (after Ppx.printdesc src/ppx.ml(277):9777-9846
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(277):9792-9845
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_attribute:"
                                                 attribute/1862)))))))
                                  case tag 14:
                                   (let
                                     (attributes/1864 =a (field 1 x/1845)
                                      extension/1863 =a (field 0 x/1845))
                                     (before Ppx.printdesc src/ppx.ml(278):9893-9975
                                       (after Ppx.printdesc src/ppx.ml(278):9893-9975
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(278):9908-9974
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0
                                                 "DEBUG:Pstr_extension:"
                                                 extension/1863
                                                 attributes/1864)))))))))))))
                     foo/1865 =[int] 1
                     printone/1866 =
                       (function x/1867 : int
                         (funct-body Ppx.printone src/ppx.ml(282)<ghost>:10005-10217
                           (before Ppx.printone src/ppx.ml(283):10037-10217
                             (let (pstr_desc/1868 =a (field 0 x/1867))
                               (before Ppx.printone src/ppx.ml(289):10188-10217
                                 (seq
                                   (after Ppx.printone src/ppx.ml(289):10188-10209
                                     (apply printdesc/1843 pstr_desc/1868))
                                   (before Ppx.printone src/ppx.ml(290):10215-10217
                                     0)))))))
                     printone2/1869 =
                       (function x/1870 : int
                         (funct-body Ppx.printone2 src/ppx.ml(296)<ghost>:10345-10424
                           (before Ppx.printone2 src/ppx.ml(297):10357-10424
                             (seq
                               (after Ppx.printone2 src/ppx.ml(297):10357-10410
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.printone2 src/ppx.ml(297):10372-10409
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG:SECOND::" x/1870)))))
                               (before Ppx.printone2 src/ppx.ml(298):10414-10424
                                 (after Ppx.printone2 src/ppx.ml(298):10414-10424
                                   (apply printone/1866 x/1870)))))))
                     proc1/1871 =
                       (function x/1873
                         (funct-body Ppx.proc1 src/ppx.ml(300)<ghost>:10438-10462
                           (before Ppx.proc1 src/ppx.ml(301):10446-10462
                             (seq
                               (after Ppx.proc1 src/ppx.ml(301):10446-10457
                                 (apply printone2/1869 x/1873))
                               (before Ppx.proc1 src/ppx.ml(302):10461-10462
                                 x/1873)))))
                     debug/1874 =
                       (function proc/1876 lst/1877 : int
                         (funct-body Ppx.debug src/ppx.ml(304)<ghost>:10474-10617
                           (before Ppx.debug src/ppx.ml(305):10494-10617
                             (let
                               (result/1878 =
                                  (after Ppx.debug src/ppx.ml(305):10507-10524
                                    (apply (field 18 (global Stdlib__List!))
                                      proc/1876 lst/1877)))
                               (before Ppx.debug src/ppx.ml(306):10530-10617
                                 (seq
                                   (after Ppx.debug src/ppx.ml(306):10530-10611
                                     (apply (field 16 (global Stdlib__List!))
                                       (function i/1942 : int
                                         (funct-body Ppx.debug.(fun) src/ppx.ml(306):10540-10604
                                           (before Ppx.debug.(fun) src/ppx.ml(306):10550-10603
                                             (after Ppx.debug.(fun) src/ppx.ml(306):10550-10603
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.debug.(fun) src/ppx.ml(306):10564-10603
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:TOPLEVEL:"
                                                       i/1942))))))))
                                       result/1878))
                                   (before Ppx.debug src/ppx.ml(307):10615-10617
                                     0)))))))
                     transform/1943 =
                       (function x/1945
                         (funct-body Ppx.transform src/ppx.ml(309)<ghost>:10649-10762
                           (before Ppx.transform src/ppx.ml(310):10692-10762
                             (seq
                               (after Ppx.transform src/ppx.ml(310):10692-10738
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.transform src/ppx.ml(310):10707-10737
                                     (apply (field 65 (global Batteries!))
                                       (makeblock 0 "DEBUG3:" x/1945)))))
                               (before Ppx.transform src/ppx.ml(311):10742-10762
                                 (seq
                                   (after Ppx.transform src/ppx.ml(311):10742-10757
                                     (apply debug/1874 proc1/1871 x/1945))
                                   (before Ppx.transform src/ppx.ml(312):10761-10762
                                     x/1945)))))))
                     *match*/5112 =
                       (after Ppx src/ppx.ml(314):10776-10835
                         (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                           (makeblock 0 transform/1943) 0 0 0 0 0 0 0
                           "simple-ppx")))
                    (pseudo <unknown location>
                      (makeblock 0 proc2/1279 printdesc2/1282
                        print_value_binding_expr/1284
                        print_value_binding_list2/1291
                        print_value_binding_list/1298 process_id/1437
                        process_record_kind/1725 process_core_type_desc/1726
                        process_record_kind_list/1727 process_core_type/1728
                        process_core_type_list/1729
                        print_constructor_arguments/1808
                        process_pype_variant_constructor_declaration_list/1813
                        process_kind/1823 print_type_decl/1828
                        process_type_decl_list/1839 printdesc/1843 foo/1865
                        printone/1866 printone2/1869 proc1/1871 debug/1874
                        transform/1943))))))))))))

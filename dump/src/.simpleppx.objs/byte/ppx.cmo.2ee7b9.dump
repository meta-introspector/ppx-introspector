[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[75,2068+71])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+18])
          Ppat_var "process_id" (src/ppx.ml[69,1879+8]..[69,1879+18])
        expression (src/ppx.ml[69,1879+18]..[75,2068+71]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+18]..[69,1879+35])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+19]..[69,1879+20])
              Ppat_var "x" (src/ppx.ml[69,1879+19]..[69,1879+20])
            core_type (src/ppx.ml[69,1879+21]..[69,1879+34])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+21]..[69,1879+34])
              []
          expression (src/ppx.ml[70,1917+2]..[75,2068+71])
            Pexp_match
            expression (src/ppx.ml[70,1917+8]..[70,1917+9])
              Pexp_ident "x" (src/ppx.ml[70,1917+8]..[70,1917+9])
            [
              <case>
                pattern (src/ppx.ml[71,1932+4]..[71,1932+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1932+5]..[71,1932+8]) ghost
                      pattern (src/ppx.ml[71,1932+5]..[71,1932+8])
                        Ppat_var "txt" (src/ppx.ml[71,1932+5]..[71,1932+8])
                  ]
                expression (src/ppx.ml[72,1947+4]..[75,2068+71])
                  Pexp_match
                  expression (src/ppx.ml[72,1947+10]..[72,1947+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1947+10]..[72,1947+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1966+6]..[73,1966+19])
                        Ppat_construct "Lident" (src/ppx.ml[73,1966+6]..[73,1966+12])
                        Some
                          []
                          pattern (src/ppx.ml[73,1966+13]..[73,1966+19])
                            Ppat_var "string" (src/ppx.ml[73,1966+13]..[73,1966+19])
                      expression (src/ppx.ml[73,1966+23]..[73,1966+29])
                        Pexp_ident "string" (src/ppx.ml[73,1966+23]..[73,1966+29])
                    <case>
                      pattern (src/ppx.ml[74,1996+6]..[74,1996+30])
                        Ppat_construct "Ldot" (src/ppx.ml[74,1996+6]..[74,1996+10])
                        Some
                          []
                          pattern (src/ppx.ml[74,1996+11]..[74,1996+30])
                            Ppat_tuple
                            [
                              pattern (src/ppx.ml[74,1996+12]..[74,1996+21])
                                Ppat_var "longident" (src/ppx.ml[74,1996+12]..[74,1996+21])
                              pattern (src/ppx.ml[74,1996+23]..[74,1996+29])
                                Ppat_var "string" (src/ppx.ml[74,1996+23]..[74,1996+29])
                            ]
                      expression (src/ppx.ml[74,1996+34]..[74,1996+71])
                        Pexp_apply
                        expression (src/ppx.ml[74,1996+57]..[74,1996+58])
                          Pexp_ident "^" (src/ppx.ml[74,1996+57]..[74,1996+58])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[74,1996+34]..[74,1996+56])
                              Pexp_apply
                              expression (src/ppx.ml[74,1996+35]..[74,1996+45])
                                Pexp_ident "process_id" (src/ppx.ml[74,1996+35]..[74,1996+45])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[74,1996+46]..[74,1996+55])
                                    Pexp_ident "longident" (src/ppx.ml[74,1996+46]..[74,1996+55])
                              ]
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[74,1996+59]..[74,1996+71])
                              Pexp_apply
                              expression (src/ppx.ml[74,1996+63]..[74,1996+64])
                                Pexp_ident "^" (src/ppx.ml[74,1996+63]..[74,1996+64])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[74,1996+59]..[74,1996+62])
                                    Pexp_constant PConst_string(".",(src/ppx.ml[74,1996+60]..[74,1996+61]),None)
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[74,1996+65]..[74,1996+71])
                                    Pexp_ident "string" (src/ppx.ml[74,1996+65]..[74,1996+71])
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[75,2068+6]..[75,2068+38])
                        Ppat_construct "Lapply" (src/ppx.ml[75,2068+6]..[75,2068+12])
                        Some
                          []
                          pattern (src/ppx.ml[75,2068+13]..[75,2068+38])
                            Ppat_tuple
                            [
                              pattern (src/ppx.ml[75,2068+14]..[75,2068+23])
                                Ppat_var "longident" (src/ppx.ml[75,2068+14]..[75,2068+23])
                              pattern (src/ppx.ml[75,2068+27]..[75,2068+37])
                                Ppat_var "longident2" (src/ppx.ml[75,2068+27]..[75,2068+37])
                            ]
                      expression (src/ppx.ml[75,2068+42]..[75,2068+71])
                        Pexp_apply
                        expression (src/ppx.ml[75,2068+53]..[75,2068+54])
                          Pexp_ident "^" (src/ppx.ml[75,2068+53]..[75,2068+54])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2068+42]..[75,2068+51])
                              Pexp_ident "longident" (src/ppx.ml[75,2068+42]..[75,2068+51])
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2068+55]..[75,2068+71])
                              Pexp_apply
                              expression (src/ppx.ml[75,2068+59]..[75,2068+60])
                                Pexp_ident "^" (src/ppx.ml[75,2068+59]..[75,2068+60])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[75,2068+55]..[75,2068+58])
                                    Pexp_constant PConst_string(".",(src/ppx.ml[75,2068+56]..[75,2068+57]),None)
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[75,2068+61]..[75,2068+71])
                                    Pexp_ident "longident2" (src/ppx.ml[75,2068+61]..[75,2068+71])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[81,2246+0]..[169,5203+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[81,2246+8]..[81,2246+27])
          Ppat_var "process_record_kind" (src/ppx.ml[81,2246+8]..[81,2246+27])
        expression (src/ppx.ml[81,2246+27]..[95,2730+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[81,2246+27]..[81,2246+30])
            Ppat_var "x" (src/ppx.ml[81,2246+28]..[81,2246+29])
          expression (src/ppx.ml[82,2279+2]..[95,2730+47])
            Pexp_match
            expression (src/ppx.ml[82,2279+8]..[82,2279+9])
              Pexp_ident "x" (src/ppx.ml[82,2279+8]..[82,2279+9])
            [
              <case>
                pattern (src/ppx.ml[83,2294+4]..[89,2475+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[84,2300+5]..[84,2300+13]) ghost
                      pattern (src/ppx.ml[84,2300+5]..[84,2300+13])
                        Ppat_var "pld_name" (src/ppx.ml[84,2300+5]..[84,2300+13])
                    "pld_mutable" (src/ppx.ml[85,2333+5]..[85,2333+16]) ghost
                      pattern (src/ppx.ml[85,2333+5]..[85,2333+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[85,2333+5]..[85,2333+16])
                    "pld_type" (src/ppx.ml[86,2371+5]..[86,2371+13]) ghost
                      pattern (src/ppx.ml[86,2371+5]..[86,2371+13])
                        Ppat_var "pld_type" (src/ppx.ml[86,2371+5]..[86,2371+13])
                    "pld_loc" (src/ppx.ml[87,2403+5]..[87,2403+12]) ghost
                      pattern (src/ppx.ml[87,2403+5]..[87,2403+12])
                        Ppat_var "pld_loc" (src/ppx.ml[87,2403+5]..[87,2403+12])
                    "pld_attributes" (src/ppx.ml[88,2435+5]..[88,2435+19]) ghost
                      pattern (src/ppx.ml[88,2435+5]..[88,2435+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[88,2435+5]..[88,2435+19])
                  ]
                expression (src/ppx.ml[90,2483+4]..[95,2730+47])
                  Pexp_apply
                  expression (src/ppx.ml[90,2483+5]..[90,2483+18])
                    Pexp_ident "print_endline" (src/ppx.ml[90,2483+5]..[90,2483+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[90,2483+19]..[95,2730+46])
                        Pexp_apply
                        expression (src/ppx.ml[90,2483+20]..[90,2483+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[90,2483+20]..[90,2483+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[90,2483+35]..[95,2730+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[90,2483+36]..[90,2483+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[90,2483+37]..[90,2483+56]),None)
                                expression (src/ppx.ml[91,2544+36]..[91,2544+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[91,2544+36]..[91,2544+44])
                                expression (src/ppx.ml[92,2590+36]..[92,2590+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[92,2590+37]..[92,2590+44]),None)
                                expression (src/ppx.ml[93,2637+36]..[93,2637+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[93,2637+36]..[93,2637+47])
                                expression (src/ppx.ml[94,2686+36]..[94,2686+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[94,2686+37]..[94,2686+41]),None)
                                expression (src/ppx.ml[95,2730+36]..[95,2730+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[95,2730+36]..[95,2730+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[97,2782+0]..[97,2782+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[97,2782+0]..[97,2782+22])
        expression (src/ppx.ml[97,2782+23]..[143,4521+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[97,2782+23]..[97,2782+24])
            Ppat_var "x" (src/ppx.ml[97,2782+23]..[97,2782+24])
          expression (src/ppx.ml[98,2809+2]..[143,4521+65])
            Pexp_match
            expression (src/ppx.ml[98,2809+8]..[98,2809+9])
              Pexp_ident "x" (src/ppx.ml[98,2809+8]..[98,2809+9])
            [
              <case>
                pattern (src/ppx.ml[99,2824+4]..[99,2824+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[99,2824+4]..[99,2824+15])
                  Some
                    []
                    pattern (src/ppx.ml[99,2824+16]..[99,2824+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[99,2824+17]..[99,2824+18])
                          Ppat_var "a" (src/ppx.ml[99,2824+17]..[99,2824+18])
                        pattern (src/ppx.ml[99,2824+19]..[99,2824+20])
                          Ppat_var "b" (src/ppx.ml[99,2824+19]..[99,2824+20])
                      ]
                expression (src/ppx.ml[101,2895+4]..[110,3138+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[101,2895+8]..[101,2895+12])
                        Ppat_var "myid" (src/ppx.ml[101,2895+8]..[101,2895+12])
                      expression (src/ppx.ml[101,2895+15]..[101,2895+29])
                        Pexp_apply
                        expression (src/ppx.ml[101,2895+16]..[101,2895+26])
                          Pexp_ident "process_id" (src/ppx.ml[101,2895+16]..[101,2895+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2895+27]..[101,2895+28])
                              Pexp_ident "a" (src/ppx.ml[101,2895+27]..[101,2895+28])
                        ]
                  ]
                  expression (src/ppx.ml[102,2928+4]..[110,3138+22])
                    Pexp_sequence
                    expression (src/ppx.ml[102,2928+4]..[102,2928+30])
                      Pexp_apply
                      expression (src/ppx.ml[102,2928+5]..[102,2928+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[102,2928+5]..[102,2928+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[102,2928+28]..[102,2928+29])
                            Pexp_ident "b" (src/ppx.ml[102,2928+28]..[102,2928+29])
                      ]
                    expression (src/ppx.ml[104,2961+4]..[110,3138+22])
                      Pexp_sequence
                      expression (src/ppx.ml[104,2961+4]..[104,2961+46])
                        Pexp_apply
                        expression (src/ppx.ml[104,2961+4]..[104,2961+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[104,2961+4]..[104,2961+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2961+18]..[104,2961+41])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[104,2961+19]..[104,2961+40]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2961+42]..[104,2961+46])
                              Pexp_ident "myid" (src/ppx.ml[104,2961+42]..[104,2961+46])
                        ]
                      expression (src/ppx.ml[107,3048+4]..[110,3138+22])
                        Pexp_apply
                        expression (src/ppx.ml[107,3048+5]..[107,3048+18])
                          Pexp_ident "print_endline" (src/ppx.ml[107,3048+5]..[107,3048+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3048+19]..[110,3138+21])
                              Pexp_apply
                              expression (src/ppx.ml[107,3048+20]..[107,3048+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[107,3048+20]..[107,3048+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[107,3048+35]..[110,3138+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[108,3085+9]..[108,3085+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[108,3085+10]..[108,3085+28]),None)
                                      expression (src/ppx.ml[109,3116+9]..[109,3116+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[109,3116+10]..[109,3116+12]),None)
                                      expression (src/ppx.ml[109,3116+14]..[109,3116+15])
                                        Pexp_ident "a" (src/ppx.ml[109,3116+14]..[109,3116+15])
                                      expression (src/ppx.ml[109,3116+16]..[109,3116+20])
                                        Pexp_ident "myid" (src/ppx.ml[109,3116+16]..[109,3116+20])
                                      expression (src/ppx.ml[110,3138+9]..[110,3138+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[110,3138+10]..[110,3138+15]),None)
                                      expression (src/ppx.ml[110,3138+17]..[110,3138+18])
                                        Pexp_ident "b" (src/ppx.ml[110,3138+17]..[110,3138+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[112,3162+4]..[112,3162+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[112,3162+4]..[112,3162+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3162+15]..[112,3162+16])
                      Ppat_var "a" (src/ppx.ml[112,3162+15]..[112,3162+16])
                expression (src/ppx.ml[114,3210+4]..[114,3210+59])
                  Pexp_apply
                  expression (src/ppx.ml[114,3210+5]..[114,3210+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3210+5]..[114,3210+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3210+19]..[114,3210+58])
                        Pexp_apply
                        expression (src/ppx.ml[114,3210+20]..[114,3210+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3210+20]..[114,3210+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3210+35]..[114,3210+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[114,3210+37]..[114,3210+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[117,3289+4]..[117,3289+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[117,3289+4]..[117,3289+12])
                  None
                expression (src/ppx.ml[117,3289+17]..[117,3289+69])
                  Pexp_apply
                  expression (src/ppx.ml[117,3289+18]..[117,3289+31])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3289+18]..[117,3289+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3289+32]..[117,3289+68])
                        Pexp_apply
                        expression (src/ppx.ml[117,3289+33]..[117,3289+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3289+33]..[117,3289+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3289+48]..[117,3289+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[117,3289+50]..[117,3289+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3359+4]..[118,3359+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[118,3359+4]..[118,3359+12])
                  Some
                    []
                    pattern (src/ppx.ml[118,3359+13]..[118,3359+17])
                      Ppat_var "name" (src/ppx.ml[118,3359+13]..[118,3359+17])
                expression (src/ppx.ml[118,3359+20]..[118,3359+80])
                  Pexp_apply
                  expression (src/ppx.ml[118,3359+21]..[118,3359+34])
                    Pexp_ident "print_endline" (src/ppx.ml[118,3359+21]..[118,3359+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[118,3359+35]..[118,3359+79])
                        Pexp_apply
                        expression (src/ppx.ml[118,3359+36]..[118,3359+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[118,3359+36]..[118,3359+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[118,3359+51]..[118,3359+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[118,3359+52]..[118,3359+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[118,3359+53]..[118,3359+68]),None)
                                expression (src/ppx.ml[118,3359+73]..[118,3359+77])
                                  Pexp_ident "name" (src/ppx.ml[118,3359+73]..[118,3359+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[119,3440+4]..[119,3440+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[119,3440+4]..[119,3440+14])
                  Some
                    []
                    pattern (src/ppx.ml[119,3440+15]..[119,3440+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[119,3440+16]..[119,3440+25])
                          Ppat_var "arg_label" (src/ppx.ml[119,3440+16]..[119,3440+25])
                        pattern (src/ppx.ml[119,3440+28]..[119,3440+37])
                          Ppat_var "core_type" (src/ppx.ml[119,3440+28]..[119,3440+37])
                        pattern (src/ppx.ml[119,3440+40]..[119,3440+50])
                          Ppat_var "core_type2" (src/ppx.ml[119,3440+40]..[119,3440+50])
                      ]
                expression (src/ppx.ml[120,3495+4]..[120,3495+61])
                  Pexp_apply
                  expression (src/ppx.ml[120,3495+5]..[120,3495+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3495+5]..[120,3495+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3495+19]..[120,3495+60])
                        Pexp_apply
                        expression (src/ppx.ml[120,3495+20]..[120,3495+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3495+20]..[120,3495+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3495+35]..[120,3495+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[120,3495+37]..[120,3495+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3558+4]..[122,3558+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[122,3558+4]..[122,3558+15])
                  Some
                    []
                    pattern (src/ppx.ml[122,3558+16]..[122,3558+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[122,3558+17]..[122,3558+18])
                          Ppat_var "a" (src/ppx.ml[122,3558+17]..[122,3558+18])
                        pattern (src/ppx.ml[122,3558+19]..[122,3558+20])
                          Ppat_var "b" (src/ppx.ml[122,3558+19]..[122,3558+20])
                      ]
                expression (src/ppx.ml[124,3627+4]..[124,3627+60])
                  Pexp_apply
                  expression (src/ppx.ml[124,3627+5]..[124,3627+18])
                    Pexp_ident "print_endline" (src/ppx.ml[124,3627+5]..[124,3627+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[124,3627+19]..[124,3627+59])
                        Pexp_apply
                        expression (src/ppx.ml[124,3627+20]..[124,3627+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[124,3627+20]..[124,3627+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[124,3627+35]..[124,3627+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[124,3627+37]..[124,3627+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[125,3688+4]..[125,3688+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[125,3688+4]..[125,3688+14])
                  Some
                    []
                    pattern (src/ppx.ml[125,3688+15]..[125,3688+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[125,3688+16]..[125,3688+17])
                          Ppat_var "a" (src/ppx.ml[125,3688+16]..[125,3688+17])
                        pattern (src/ppx.ml[125,3688+18]..[125,3688+19])
                          Ppat_var "b" (src/ppx.ml[125,3688+18]..[125,3688+19])
                      ]
                expression (src/ppx.ml[127,3758+4]..[127,3758+60])
                  Pexp_apply
                  expression (src/ppx.ml[127,3758+5]..[127,3758+18])
                    Pexp_ident "print_endline" (src/ppx.ml[127,3758+5]..[127,3758+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[127,3758+19]..[127,3758+59])
                        Pexp_apply
                        expression (src/ppx.ml[127,3758+20]..[127,3758+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[127,3758+20]..[127,3758+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[127,3758+35]..[127,3758+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[127,3758+37]..[127,3758+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[128,3819+4]..[128,3819+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[128,3819+4]..[128,3819+14])
                  Some
                    []
                    pattern (src/ppx.ml[128,3819+15]..[128,3819+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[128,3819+16]..[128,3819+17])
                          Ppat_var "a" (src/ppx.ml[128,3819+16]..[128,3819+17])
                        pattern (src/ppx.ml[128,3819+18]..[128,3819+19])
                          Ppat_var "b" (src/ppx.ml[128,3819+18]..[128,3819+19])
                      ]
                expression (src/ppx.ml[130,3880+4]..[130,3880+60])
                  Pexp_apply
                  expression (src/ppx.ml[130,3880+5]..[130,3880+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,3880+5]..[130,3880+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,3880+19]..[130,3880+59])
                        Pexp_apply
                        expression (src/ppx.ml[130,3880+20]..[130,3880+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,3880+20]..[130,3880+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,3880+35]..[130,3880+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[130,3880+37]..[130,3880+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[131,3941+4]..[131,3941+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[131,3941+4]..[131,3941+16])
                  Some
                    []
                    pattern (src/ppx.ml[131,3941+17]..[131,3941+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[131,3941+18]..[131,3941+19])
                          Ppat_var "a" (src/ppx.ml[131,3941+18]..[131,3941+19])
                        pattern (src/ppx.ml[131,3941+20]..[131,3941+21])
                          Ppat_var "b" (src/ppx.ml[131,3941+20]..[131,3941+21])
                        pattern (src/ppx.ml[131,3941+22]..[131,3941+23])
                          Ppat_var "c" (src/ppx.ml[131,3941+22]..[131,3941+23])
                      ]
                expression (src/ppx.ml[133,4031+4]..[133,4031+60])
                  Pexp_apply
                  expression (src/ppx.ml[133,4031+5]..[133,4031+18])
                    Pexp_ident "print_endline" (src/ppx.ml[133,4031+5]..[133,4031+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[133,4031+19]..[133,4031+59])
                        Pexp_apply
                        expression (src/ppx.ml[133,4031+20]..[133,4031+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[133,4031+20]..[133,4031+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[133,4031+35]..[133,4031+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[133,4031+37]..[133,4031+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[134,4092+4]..[134,4092+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[134,4092+4]..[134,4092+13])
                  Some
                    []
                    pattern (src/ppx.ml[134,4092+14]..[134,4092+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[134,4092+15]..[134,4092+16])
                          Ppat_var "a" (src/ppx.ml[134,4092+15]..[134,4092+16])
                        pattern (src/ppx.ml[134,4092+17]..[134,4092+18])
                          Ppat_var "b" (src/ppx.ml[134,4092+17]..[134,4092+18])
                      ]
                expression (src/ppx.ml[136,4156+4]..[136,4156+60])
                  Pexp_apply
                  expression (src/ppx.ml[136,4156+5]..[136,4156+18])
                    Pexp_ident "print_endline" (src/ppx.ml[136,4156+5]..[136,4156+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[136,4156+19]..[136,4156+59])
                        Pexp_apply
                        expression (src/ppx.ml[136,4156+20]..[136,4156+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[136,4156+20]..[136,4156+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[136,4156+35]..[136,4156+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[136,4156+37]..[136,4156+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[137,4217+4]..[137,4217+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[137,4217+4]..[137,4217+16])
                  Some
                    []
                    pattern (src/ppx.ml[137,4217+17]..[137,4217+18])
                      Ppat_var "a" (src/ppx.ml[137,4217+17]..[137,4217+18])
                expression (src/ppx.ml[139,4265+4]..[139,4265+62])
                  Pexp_apply
                  expression (src/ppx.ml[139,4265+5]..[139,4265+18])
                    Pexp_ident "print_endline" (src/ppx.ml[139,4265+5]..[139,4265+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[139,4265+19]..[139,4265+61])
                        Pexp_apply
                        expression (src/ppx.ml[139,4265+20]..[139,4265+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[139,4265+20]..[139,4265+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[139,4265+35]..[139,4265+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[139,4265+36]..[139,4265+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[139,4265+37]..[139,4265+55]),None)
                                expression (src/ppx.ml[139,4265+57]..[139,4265+58])
                                  Pexp_ident "a" (src/ppx.ml[139,4265+57]..[139,4265+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[142,4473+4]..[142,4473+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[142,4473+4]..[142,4473+18])
                  Some
                    []
                    pattern (src/ppx.ml[142,4473+19]..[142,4473+20])
                      Ppat_var "a" (src/ppx.ml[142,4473+19]..[142,4473+20])
                expression (src/ppx.ml[143,4521+4]..[143,4521+65])
                  Pexp_apply
                  expression (src/ppx.ml[143,4521+5]..[143,4521+18])
                    Pexp_ident "print_endline" (src/ppx.ml[143,4521+5]..[143,4521+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[143,4521+19]..[143,4521+64])
                        Pexp_apply
                        expression (src/ppx.ml[143,4521+20]..[143,4521+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[143,4521+20]..[143,4521+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[143,4521+35]..[143,4521+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[143,4521+36]..[143,4521+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[143,4521+37]..[143,4521+58]),None)
                                expression (src/ppx.ml[143,4521+60]..[143,4521+61])
                                  Pexp_ident "a" (src/ppx.ml[143,4521+60]..[143,4521+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[145,4591+2]..[145,4591+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[145,4591+2]..[145,4591+26])
        expression (src/ppx.ml[145,4591+26]..[151,4728+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[145,4591+26]..[145,4591+29])
            Ppat_var "x" (src/ppx.ml[145,4591+27]..[145,4591+28])
          expression (src/ppx.ml[146,4623+2]..[151,4728+6])
            Pexp_match
            expression (src/ppx.ml[146,4623+8]..[146,4623+9])
              Pexp_ident "x" (src/ppx.ml[146,4623+8]..[146,4623+9])
            [
              <case>
                pattern (src/ppx.ml[147,4638+4]..[147,4638+6])
                  Ppat_construct "[]" (src/ppx.ml[147,4638+4]..[147,4638+6])
                  None
                expression (src/ppx.ml[147,4638+10]..[147,4638+12])
                  Pexp_construct "()" (src/ppx.ml[147,4638+10]..[147,4638+12])
                  None
              <case>
                pattern (src/ppx.ml[148,4651+4]..[148,4651+10])
                  Ppat_construct "::" (src/ppx.ml[148,4651+6]..[148,4651+8])
                  Some
                    []
                    pattern (src/ppx.ml[148,4651+4]..[148,4651+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[148,4651+4]..[148,4651+5])
                          Ppat_var "h" (src/ppx.ml[148,4651+4]..[148,4651+5])
                        pattern (src/ppx.ml[148,4651+9]..[148,4651+10])
                          Ppat_var "t" (src/ppx.ml[148,4651+9]..[148,4651+10])
                      ]
                expression (src/ppx.ml[149,4665+4]..[151,4728+6])
                  Pexp_sequence
                  expression (src/ppx.ml[149,4665+4]..[149,4665+27])
                    Pexp_apply
                    expression (src/ppx.ml[149,4665+5]..[149,4665+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[149,4665+5]..[149,4665+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[149,4665+25]..[149,4665+26])
                          Pexp_ident "h" (src/ppx.ml[149,4665+25]..[149,4665+26])
                    ]
                  expression (src/ppx.ml[150,4694+4]..[151,4728+6])
                    Pexp_sequence
                    expression (src/ppx.ml[150,4694+4]..[150,4694+32])
                      Pexp_apply
                      expression (src/ppx.ml[150,4694+5]..[150,4694+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[150,4694+5]..[150,4694+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[150,4694+30]..[150,4694+31])
                            Pexp_ident "t" (src/ppx.ml[150,4694+30]..[150,4694+31])
                      ]
                    expression (src/ppx.ml[151,4728+4]..[151,4728+6])
                      Pexp_construct "()" (src/ppx.ml[151,4728+4]..[151,4728+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[153,4739+0]..[153,4739+17])
          Ppat_var "process_core_type" (src/ppx.ml[153,4739+0]..[153,4739+17])
        expression (src/ppx.ml[153,4739+17]..[163,5006+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[153,4739+17]..[153,4739+20])
            Ppat_var "x" (src/ppx.ml[153,4739+18]..[153,4739+19])
          expression (src/ppx.ml[154,4762+2]..[163,5006+80])
            Pexp_match
            expression (src/ppx.ml[154,4762+8]..[154,4762+9])
              Pexp_ident "x" (src/ppx.ml[154,4762+8]..[154,4762+9])
            [
              <case>
                pattern (src/ppx.ml[155,4778+4]..[160,4939+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[156,4784+6]..[156,4784+15]) ghost
                      pattern (src/ppx.ml[156,4784+6]..[156,4784+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[156,4784+6]..[156,4784+15])
                    "ptyp_loc" (src/ppx.ml[157,4823+5]..[157,4823+13]) ghost
                      pattern (src/ppx.ml[157,4823+5]..[157,4823+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[157,4823+5]..[157,4823+13])
                    "ptyp_loc_stack" (src/ppx.ml[158,4856+5]..[158,4856+19]) ghost
                      pattern (src/ppx.ml[158,4856+5]..[158,4856+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[158,4856+5]..[158,4856+19])
                    "ptyp_attributes" (src/ppx.ml[159,4899+5]..[159,4899+20]) ghost
                      pattern (src/ppx.ml[159,4899+5]..[159,4899+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[159,4899+5]..[159,4899+20])
                  ]
                expression (src/ppx.ml[161,4947+4]..[163,5006+80])
                  Pexp_sequence
                  expression (src/ppx.ml[161,4947+4]..[161,4947+38])
                    Pexp_apply
                    expression (src/ppx.ml[161,4947+5]..[161,4947+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[161,4947+5]..[161,4947+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[161,4947+28]..[161,4947+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[161,4947+28]..[161,4947+37])
                    ]
                  expression (src/ppx.ml[163,5006+4]..[163,5006+80])
                    Pexp_apply
                    expression (src/ppx.ml[163,5006+5]..[163,5006+18])
                      Pexp_ident "print_endline" (src/ppx.ml[163,5006+5]..[163,5006+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[163,5006+19]..[163,5006+79])
                          Pexp_apply
                          expression (src/ppx.ml[163,5006+20]..[163,5006+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[163,5006+20]..[163,5006+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[163,5006+35]..[163,5006+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[163,5006+36]..[163,5006+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[163,5006+37]..[163,5006+63]),None)
                                  expression (src/ppx.ml[163,5006+68]..[163,5006+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[163,5006+68]..[163,5006+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[164,5087+4]..[164,5087+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[164,5087+4]..[164,5087+26])
        expression (src/ppx.ml[164,5087+26]..[169,5203+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[164,5087+26]..[164,5087+44])
            Ppat_constraint
            pattern (src/ppx.ml[164,5087+27]..[164,5087+28])
              Ppat_var "x" (src/ppx.ml[164,5087+27]..[164,5087+28])
            core_type (src/ppx.ml[164,5087+29]..[164,5087+43])
              Ptyp_constr "list" (src/ppx.ml[164,5087+39]..[164,5087+43])
              [
                core_type (src/ppx.ml[164,5087+29]..[164,5087+38])
                  Ptyp_constr "core_type" (src/ppx.ml[164,5087+29]..[164,5087+38])
                  []
              ]
          expression (src/ppx.ml[165,5134+2]..[169,5203+29])
            Pexp_match
            expression (src/ppx.ml[165,5134+8]..[165,5134+9])
              Pexp_ident "x" (src/ppx.ml[165,5134+8]..[165,5134+9])
            [
              <case>
                pattern (src/ppx.ml[166,5149+4]..[166,5149+6])
                  Ppat_construct "[]" (src/ppx.ml[166,5149+4]..[166,5149+6])
                  None
                expression (src/ppx.ml[166,5149+10]..[166,5149+12])
                  Pexp_construct "()" (src/ppx.ml[166,5149+10]..[166,5149+12])
                  None
              <case>
                pattern (src/ppx.ml[167,5162+4]..[167,5162+10])
                  Ppat_construct "::" (src/ppx.ml[167,5162+6]..[167,5162+8])
                  Some
                    []
                    pattern (src/ppx.ml[167,5162+4]..[167,5162+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[167,5162+4]..[167,5162+5])
                          Ppat_var "h" (src/ppx.ml[167,5162+4]..[167,5162+5])
                        pattern (src/ppx.ml[167,5162+9]..[167,5162+10])
                          Ppat_var "t" (src/ppx.ml[167,5162+9]..[167,5162+10])
                      ]
                expression (src/ppx.ml[168,5176+4]..[169,5203+29])
                  Pexp_sequence
                  expression (src/ppx.ml[168,5176+4]..[168,5176+25])
                    Pexp_apply
                    expression (src/ppx.ml[168,5176+4]..[168,5176+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[168,5176+4]..[168,5176+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[168,5176+22]..[168,5176+25])
                          Pexp_ident "h" (src/ppx.ml[168,5176+23]..[168,5176+24])
                    ]
                  expression (src/ppx.ml[169,5203+4]..[169,5203+29])
                    Pexp_apply
                    expression (src/ppx.ml[169,5203+4]..[169,5203+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[169,5203+4]..[169,5203+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[169,5203+26]..[169,5203+29])
                          Pexp_ident "t" (src/ppx.ml[169,5203+27]..[169,5203+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[176,5247+0]..[183,5446+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[176,5247+4]..[176,5247+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[176,5247+4]..[176,5247+31])
        expression (src/ppx.ml[176,5247+31]..[183,5446+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[176,5247+31]..[176,5247+34])
            Ppat_var "x" (src/ppx.ml[176,5247+32]..[176,5247+33])
          expression (src/ppx.ml[177,5284+2]..[183,5446+65])
            Pexp_match
            expression (src/ppx.ml[177,5284+8]..[177,5284+9])
              Pexp_ident "x" (src/ppx.ml[177,5284+8]..[177,5284+9])
            [
              <case>
                pattern (src/ppx.ml[178,5299+4]..[178,5299+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[178,5299+4]..[178,5299+15])
                  Some
                    []
                    pattern (src/ppx.ml[178,5299+16]..[178,5299+17])
                      Ppat_var "a" (src/ppx.ml[178,5299+16]..[178,5299+17])
                expression (src/ppx.ml[179,5320+4]..[180,5352+64])
                  Pexp_sequence
                  expression (src/ppx.ml[179,5320+4]..[179,5320+30])
                    Pexp_apply
                    expression (src/ppx.ml[179,5320+5]..[179,5320+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[179,5320+5]..[179,5320+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[179,5320+28]..[179,5320+29])
                          Pexp_ident "a" (src/ppx.ml[179,5320+28]..[179,5320+29])
                    ]
                  expression (src/ppx.ml[180,5352+4]..[180,5352+64])
                    Pexp_apply
                    expression (src/ppx.ml[180,5352+5]..[180,5352+18])
                      Pexp_ident "print_endline" (src/ppx.ml[180,5352+5]..[180,5352+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[180,5352+19]..[180,5352+63])
                          Pexp_apply
                          expression (src/ppx.ml[180,5352+20]..[180,5352+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[180,5352+20]..[180,5352+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[180,5352+35]..[180,5352+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[180,5352+36]..[180,5352+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[180,5352+37]..[180,5352+55]),None)
                                  expression (src/ppx.ml[180,5352+60]..[180,5352+61])
                                    Pexp_ident "a" (src/ppx.ml[180,5352+60]..[180,5352+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[182,5424+4]..[182,5424+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[182,5424+4]..[182,5424+16])
                  Some
                    []
                    pattern (src/ppx.ml[182,5424+17]..[182,5424+18])
                      Ppat_var "a" (src/ppx.ml[182,5424+17]..[182,5424+18])
                expression (src/ppx.ml[183,5446+4]..[183,5446+65])
                  Pexp_apply
                  expression (src/ppx.ml[183,5446+5]..[183,5446+18])
                    Pexp_ident "print_endline" (src/ppx.ml[183,5446+5]..[183,5446+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[183,5446+19]..[183,5446+64])
                        Pexp_apply
                        expression (src/ppx.ml[183,5446+20]..[183,5446+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[183,5446+20]..[183,5446+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[183,5446+35]..[183,5446+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[183,5446+36]..[183,5446+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[183,5446+37]..[183,5446+56]),None)
                                expression (src/ppx.ml[183,5446+61]..[183,5446+62])
                                  Pexp_ident "a" (src/ppx.ml[183,5446+61]..[183,5446+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[185,5513+0]..[217,6489+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[185,5513+8]..[185,5513+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[185,5513+8]..[185,5513+57])
        expression (src/ppx.ml[185,5513+57]..[217,6489+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[185,5513+57]..[185,5513+60])
            Ppat_var "x" (src/ppx.ml[185,5513+58]..[185,5513+59])
          expression (src/ppx.ml[186,5576+2]..[217,6489+8])
            Pexp_match
            expression (src/ppx.ml[186,5576+8]..[186,5576+9])
              Pexp_ident "x" (src/ppx.ml[186,5576+8]..[186,5576+9])
            [
              <case>
                pattern (src/ppx.ml[187,5591+4]..[187,5591+6])
                  Ppat_construct "[]" (src/ppx.ml[187,5591+4]..[187,5591+6])
                  None
                expression (src/ppx.ml[187,5591+10]..[187,5591+12])
                  Pexp_construct "()" (src/ppx.ml[187,5591+10]..[187,5591+12])
                  None
              <case>
                pattern (src/ppx.ml[188,5604+4]..[188,5604+10])
                  Ppat_construct "::" (src/ppx.ml[188,5604+6]..[188,5604+8])
                  Some
                    []
                    pattern (src/ppx.ml[188,5604+4]..[188,5604+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[188,5604+4]..[188,5604+5])
                          Ppat_var "h" (src/ppx.ml[188,5604+4]..[188,5604+5])
                        pattern (src/ppx.ml[188,5604+9]..[188,5604+10])
                          Ppat_var "t" (src/ppx.ml[188,5604+9]..[188,5604+10])
                      ]
                expression (src/ppx.ml[190,5683+4]..[217,6489+8])
                  Pexp_match
                  expression (src/ppx.ml[190,5683+10]..[190,5683+11])
                    Pexp_ident "h" (src/ppx.ml[190,5683+10]..[190,5683+11])
                  [
                    <case>
                      pattern (src/ppx.ml[191,5700+5]..[198,5938+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[192,5707+6]..[192,5707+14]) ghost
                            pattern (src/ppx.ml[192,5707+6]..[192,5707+14])
                              Ppat_var "pcd_name" (src/ppx.ml[192,5707+6]..[192,5707+14])
                          "pcd_vars" (src/ppx.ml[193,5741+6]..[193,5741+14]) ghost
                            pattern (src/ppx.ml[193,5741+6]..[193,5741+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[193,5741+6]..[193,5741+14])
                          "pcd_args" (src/ppx.ml[194,5780+6]..[194,5780+14]) ghost
                            pattern (src/ppx.ml[194,5780+6]..[194,5780+14])
                              Ppat_var "pcd_args" (src/ppx.ml[194,5780+6]..[194,5780+14])
                          "pcd_res" (src/ppx.ml[195,5825+6]..[195,5825+13]) ghost
                            pattern (src/ppx.ml[195,5825+6]..[195,5825+13])
                              Ppat_var "pcd_res" (src/ppx.ml[195,5825+6]..[195,5825+13])
                          "pcd_loc" (src/ppx.ml[196,5864+6]..[196,5864+13]) ghost
                            pattern (src/ppx.ml[196,5864+6]..[196,5864+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[196,5864+6]..[196,5864+13])
                          "pcd_attributes" (src/ppx.ml[197,5897+6]..[197,5897+20]) ghost
                            pattern (src/ppx.ml[197,5897+6]..[197,5897+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[197,5897+6]..[197,5897+20])
                        ]
                      expression (src/ppx.ml[201,6020+6]..[217,6489+8])
                        Pexp_sequence
                        expression (src/ppx.ml[201,6020+6]..[201,6020+43])
                          Pexp_apply
                          expression (src/ppx.ml[201,6020+6]..[201,6020+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[201,6020+6]..[201,6020+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[201,6020+33]..[201,6020+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[201,6020+34]..[201,6020+42])
                          ]
                        expression (src/ppx.ml[202,6065+6]..[217,6489+8])
                          Pexp_sequence
                          expression (src/ppx.ml[202,6065+6]..[215,6410+16])
                            Pexp_apply
                            expression (src/ppx.ml[202,6065+7]..[202,6065+20])
                              Pexp_ident "print_endline" (src/ppx.ml[202,6065+7]..[202,6065+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[202,6065+21]..[215,6410+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[202,6065+22]..[202,6065+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[202,6065+22]..[202,6065+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[202,6065+37]..[215,6410+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[203,6104+11]..[203,6104+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[203,6104+12]..[203,6104+36]),None)
                                          expression (src/ppx.ml[204,6143+15]..[204,6143+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[204,6143+15]..[204,6143+23])
                                          expression (src/ppx.ml[205,6168+15]..[205,6168+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[205,6168+16]..[205,6168+20]),None)
                                          expression (src/ppx.ml[206,6191+15]..[206,6191+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[206,6191+15]..[206,6191+23])
                                          expression (src/ppx.ml[207,6216+15]..[207,6216+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[207,6216+16]..[207,6216+20]),None)
                                          expression (src/ppx.ml[208,6239+15]..[208,6239+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[208,6239+15]..[208,6239+23])
                                          expression (src/ppx.ml[209,6264+15]..[209,6264+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[209,6264+16]..[209,6264+19]),None)
                                          expression (src/ppx.ml[210,6286+15]..[210,6286+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[210,6286+15]..[210,6286+22])
                                          expression (src/ppx.ml[211,6310+15]..[211,6310+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[211,6310+16]..[211,6310+19]),None)
                                          expression (src/ppx.ml[212,6332+15]..[212,6332+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[212,6332+15]..[212,6332+22])
                                          expression (src/ppx.ml[213,6356+15]..[213,6356+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[213,6356+16]..[213,6356+21]),None)
                                          expression (src/ppx.ml[214,6380+15]..[214,6380+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[214,6380+15]..[214,6380+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[216,6428+6]..[217,6489+8])
                            Pexp_sequence
                            expression (src/ppx.ml[216,6428+6]..[216,6428+59])
                              Pexp_apply
                              expression (src/ppx.ml[216,6428+7]..[216,6428+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[216,6428+7]..[216,6428+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[216,6428+57]..[216,6428+58])
                                    Pexp_ident "t" (src/ppx.ml[216,6428+57]..[216,6428+58])
                              ]
                            expression (src/ppx.ml[217,6489+6]..[217,6489+8])
                              Pexp_construct "()" (src/ppx.ml[217,6489+6]..[217,6489+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6501+0]..[230,6898+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6501+4]..[219,6501+16])
          Ppat_var "process_kind" (src/ppx.ml[219,6501+4]..[219,6501+16])
        expression (src/ppx.ml[219,6501+16]..[230,6898+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6501+16]..[219,6501+19])
            Ppat_var "x" (src/ppx.ml[219,6501+17]..[219,6501+18])
          expression (src/ppx.ml[220,6523+2]..[230,6898+77])
            Pexp_match
            expression (src/ppx.ml[220,6523+8]..[220,6523+9])
              Pexp_ident "x" (src/ppx.ml[220,6523+8]..[220,6523+9])
            [
              <case>
                pattern (src/ppx.ml[222,6560+4]..[222,6560+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[222,6560+4]..[222,6560+18])
                  None
                expression (src/ppx.ml[222,6560+23]..[222,6560+81])
                  Pexp_apply
                  expression (src/ppx.ml[222,6560+24]..[222,6560+37])
                    Pexp_ident "print_endline" (src/ppx.ml[222,6560+24]..[222,6560+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[222,6560+38]..[222,6560+80])
                        Pexp_apply
                        expression (src/ppx.ml[222,6560+39]..[222,6560+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[222,6560+39]..[222,6560+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[222,6560+54]..[222,6560+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[222,6560+56]..[222,6560+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[223,6642+4]..[223,6642+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[223,6642+4]..[223,6642+17])
                  Some
                    []
                    pattern (src/ppx.ml[223,6642+18]..[223,6642+19])
                      Ppat_var "a" (src/ppx.ml[223,6642+18]..[223,6642+19])
                expression (src/ppx.ml[224,6665+4]..[225,6724+65])
                  Pexp_sequence
                  expression (src/ppx.ml[224,6665+4]..[224,6665+57])
                    Pexp_apply
                    expression (src/ppx.ml[224,6665+5]..[224,6665+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[224,6665+5]..[224,6665+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[224,6665+55]..[224,6665+56])
                          Pexp_ident "a" (src/ppx.ml[224,6665+55]..[224,6665+56])
                    ]
                  expression (src/ppx.ml[225,6724+4]..[225,6724+65])
                    Pexp_apply
                    expression (src/ppx.ml[225,6724+5]..[225,6724+18])
                      Pexp_ident "print_endline" (src/ppx.ml[225,6724+5]..[225,6724+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[225,6724+19]..[225,6724+64])
                          Pexp_apply
                          expression (src/ppx.ml[225,6724+20]..[225,6724+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[225,6724+20]..[225,6724+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[225,6724+35]..[225,6724+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[225,6724+36]..[225,6724+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[225,6724+37]..[225,6724+57]),None)
                                  expression (src/ppx.ml[225,6724+61]..[225,6724+62])
                                    Pexp_ident "a" (src/ppx.ml[225,6724+61]..[225,6724+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[228,6837+5]..[228,6837+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[228,6837+5]..[228,6837+17])
                  Some
                    []
                    pattern (src/ppx.ml[228,6837+18]..[228,6837+19])
                      Ppat_var "a" (src/ppx.ml[228,6837+18]..[228,6837+19])
                expression (src/ppx.ml[229,6865+5]..[229,6865+32])
                  Pexp_apply
                  expression (src/ppx.ml[229,6865+5]..[229,6865+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[229,6865+5]..[229,6865+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[229,6865+29]..[229,6865+32])
                        Pexp_ident "a" (src/ppx.ml[229,6865+30]..[229,6865+31])
                  ]
              <case>
                pattern (src/ppx.ml[230,6898+5]..[230,6898+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[230,6898+5]..[230,6898+15])
                  None
                expression (src/ppx.ml[230,6898+19]..[230,6898+77])
                  Pexp_apply
                  expression (src/ppx.ml[230,6898+20]..[230,6898+33])
                    Pexp_ident "print_endline" (src/ppx.ml[230,6898+20]..[230,6898+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[230,6898+34]..[230,6898+76])
                        Pexp_apply
                        expression (src/ppx.ml[230,6898+35]..[230,6898+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[230,6898+35]..[230,6898+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[230,6898+50]..[230,6898+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[230,6898+52]..[230,6898+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[232,6977+0]..[253,7983+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[232,6977+4]..[232,6977+19])
          Ppat_var "print_type_decl" (src/ppx.ml[232,6977+4]..[232,6977+19])
        expression (src/ppx.ml[232,6977+19]..[253,7983+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[232,6977+19]..[232,6977+22])
            Ppat_var "x" (src/ppx.ml[232,6977+20]..[232,6977+21])
          expression (src/ppx.ml[233,7002+2]..[253,7983+38])
            Pexp_match
            expression (src/ppx.ml[233,7002+8]..[233,7002+9])
              Pexp_ident "x" (src/ppx.ml[233,7002+8]..[233,7002+9])
            [
              <case>
                pattern (src/ppx.ml[234,7017+4]..[243,7398+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[235,7023+6]..[235,7023+16]) ghost
                      pattern (src/ppx.ml[235,7023+6]..[235,7023+16])
                        Ppat_var "ptype_name" (src/ppx.ml[235,7023+6]..[235,7023+16])
                    "ptype_params" (src/ppx.ml[236,7060+6]..[236,7060+18]) ghost
                      pattern (src/ppx.ml[236,7060+6]..[236,7060+18])
                        Ppat_var "ptype_params" (src/ppx.ml[236,7060+6]..[236,7060+18])
                    "ptype_cstrs" (src/ppx.ml[237,7132+6]..[237,7132+17]) ghost
                      pattern (src/ppx.ml[237,7132+6]..[237,7132+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[237,7132+6]..[237,7132+17])
                    "ptype_kind" (src/ppx.ml[238,7201+6]..[238,7201+16]) ghost
                      pattern (src/ppx.ml[238,7201+6]..[238,7201+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[238,7201+6]..[238,7201+16])
                    "ptype_private" (src/ppx.ml[239,7238+6]..[239,7238+19]) ghost
                      pattern (src/ppx.ml[239,7238+6]..[239,7238+19])
                        Ppat_var "ptype_private" (src/ppx.ml[239,7238+6]..[239,7238+19])
                    "ptype_manifest" (src/ppx.ml[240,7279+6]..[240,7279+20]) ghost
                      pattern (src/ppx.ml[240,7279+6]..[240,7279+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[240,7279+6]..[240,7279+20])
                    "ptype_attributes" (src/ppx.ml[241,7326+6]..[241,7326+22]) ghost
                      pattern (src/ppx.ml[241,7326+6]..[241,7326+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[241,7326+6]..[241,7326+22])
                    "ptype_loc" (src/ppx.ml[242,7367+6]..[242,7367+15]) ghost
                      pattern (src/ppx.ml[242,7367+6]..[242,7367+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[242,7367+6]..[242,7367+15])
                  ]
                expression (src/ppx.ml[244,7407+4]..[253,7983+38])
                  Pexp_sequence
                  expression (src/ppx.ml[244,7407+4]..[244,7407+69])
                    Pexp_apply
                    expression (src/ppx.ml[244,7407+5]..[244,7407+18])
                      Pexp_ident "print_endline" (src/ppx.ml[244,7407+5]..[244,7407+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[244,7407+19]..[244,7407+68])
                          Pexp_apply
                          expression (src/ppx.ml[244,7407+20]..[244,7407+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[244,7407+20]..[244,7407+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[244,7407+35]..[244,7407+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[244,7407+36]..[244,7407+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[244,7407+37]..[244,7407+53]),None)
                                  expression (src/ppx.ml[244,7407+56]..[244,7407+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[244,7407+56]..[244,7407+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[245,7478+4]..[253,7983+38])
                    Pexp_sequence
                    expression (src/ppx.ml[245,7478+4]..[245,7478+72])
                      Pexp_apply
                      expression (src/ppx.ml[245,7478+5]..[245,7478+18])
                        Pexp_ident "print_endline" (src/ppx.ml[245,7478+5]..[245,7478+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[245,7478+19]..[245,7478+71])
                            Pexp_apply
                            expression (src/ppx.ml[245,7478+20]..[245,7478+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[245,7478+20]..[245,7478+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[245,7478+35]..[245,7478+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[245,7478+36]..[245,7478+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[245,7478+37]..[245,7478+54]),None)
                                    expression (src/ppx.ml[245,7478+57]..[245,7478+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[245,7478+57]..[245,7478+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[246,7552+4]..[253,7983+38])
                      Pexp_sequence
                      expression (src/ppx.ml[246,7552+4]..[246,7552+66])
                        Pexp_apply
                        expression (src/ppx.ml[246,7552+5]..[246,7552+18])
                          Pexp_ident "print_endline" (src/ppx.ml[246,7552+5]..[246,7552+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[246,7552+19]..[246,7552+65])
                              Pexp_apply
                              expression (src/ppx.ml[246,7552+20]..[246,7552+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[246,7552+20]..[246,7552+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[246,7552+35]..[246,7552+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[246,7552+36]..[246,7552+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[246,7552+37]..[246,7552+49]),None)
                                      expression (src/ppx.ml[246,7552+52]..[246,7552+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[246,7552+52]..[246,7552+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[247,7620+4]..[253,7983+38])
                        Pexp_sequence
                        expression (src/ppx.ml[247,7620+4]..[247,7620+63])
                          Pexp_apply
                          expression (src/ppx.ml[247,7620+5]..[247,7620+18])
                            Pexp_ident "print_endline" (src/ppx.ml[247,7620+5]..[247,7620+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[247,7620+19]..[247,7620+62])
                                Pexp_apply
                                expression (src/ppx.ml[247,7620+20]..[247,7620+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[247,7620+20]..[247,7620+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[247,7620+35]..[247,7620+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[247,7620+36]..[247,7620+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[247,7620+37]..[247,7620+48]),None)
                                        expression (src/ppx.ml[247,7620+50]..[247,7620+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[247,7620+50]..[247,7620+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[248,7685+4]..[253,7983+38])
                          Pexp_sequence
                          expression (src/ppx.ml[248,7685+4]..[248,7685+29])
                            Pexp_apply
                            expression (src/ppx.ml[248,7685+5]..[248,7685+17])
                              Pexp_ident "process_kind" (src/ppx.ml[248,7685+5]..[248,7685+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[248,7685+18]..[248,7685+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[248,7685+18]..[248,7685+28])
                            ]
                          expression (src/ppx.ml[249,7716+4]..[253,7983+38])
                            Pexp_apply
                            expression (src/ppx.ml[249,7716+5]..[249,7716+18])
                              Pexp_ident "print_endline" (src/ppx.ml[249,7716+5]..[249,7716+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[249,7716+19]..[253,7983+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[249,7716+20]..[249,7716+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[249,7716+20]..[249,7716+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[249,7716+35]..[253,7983+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[249,7716+36]..[249,7716+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[249,7716+37]..[249,7716+51]),None)
                                          expression (src/ppx.ml[249,7716+55]..[249,7716+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[249,7716+55]..[249,7716+68])
                                          expression (src/ppx.ml[250,7786+36]..[250,7786+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[250,7786+37]..[250,7786+51]),None)
                                          expression (src/ppx.ml[250,7786+54]..[250,7786+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[250,7786+54]..[250,7786+68])
                                          expression (src/ppx.ml[251,7856+36]..[251,7856+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[251,7856+37]..[251,7856+47]),None)
                                          expression (src/ppx.ml[251,7856+50]..[251,7856+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[251,7856+50]..[251,7856+66])
                                          expression (src/ppx.ml[252,7924+36]..[252,7924+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[252,7924+37]..[252,7924+46]),None)
                                          expression (src/ppx.ml[252,7924+49]..[252,7924+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[252,7924+49]..[252,7924+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[255,8027+0]..[261,8162+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[255,8027+8]..[255,8027+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[255,8027+8]..[255,8027+30])
        expression (src/ppx.ml[255,8027+30]..[261,8162+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[255,8027+30]..[255,8027+33])
            Ppat_var "x" (src/ppx.ml[255,8027+31]..[255,8027+32])
          expression (src/ppx.ml[256,8063+2]..[261,8162+6])
            Pexp_match
            expression (src/ppx.ml[256,8063+8]..[256,8063+9])
              Pexp_ident "x" (src/ppx.ml[256,8063+8]..[256,8063+9])
            [
              <case>
                pattern (src/ppx.ml[257,8078+4]..[257,8078+6])
                  Ppat_construct "[]" (src/ppx.ml[257,8078+4]..[257,8078+6])
                  None
                expression (src/ppx.ml[257,8078+10]..[257,8078+12])
                  Pexp_construct "()" (src/ppx.ml[257,8078+10]..[257,8078+12])
                  None
              <case>
                pattern (src/ppx.ml[258,8091+4]..[258,8091+10])
                  Ppat_construct "::" (src/ppx.ml[258,8091+6]..[258,8091+8])
                  Some
                    []
                    pattern (src/ppx.ml[258,8091+4]..[258,8091+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[258,8091+4]..[258,8091+5])
                          Ppat_var "h" (src/ppx.ml[258,8091+4]..[258,8091+5])
                        pattern (src/ppx.ml[258,8091+9]..[258,8091+10])
                          Ppat_var "t" (src/ppx.ml[258,8091+9]..[258,8091+10])
                      ]
                expression (src/ppx.ml[259,8105+4]..[261,8162+6])
                  Pexp_sequence
                  expression (src/ppx.ml[259,8105+4]..[259,8105+23])
                    Pexp_apply
                    expression (src/ppx.ml[259,8105+5]..[259,8105+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[259,8105+5]..[259,8105+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[259,8105+21]..[259,8105+22])
                          Pexp_ident "h" (src/ppx.ml[259,8105+21]..[259,8105+22])
                    ]
                  expression (src/ppx.ml[260,8130+4]..[261,8162+6])
                    Pexp_sequence
                    expression (src/ppx.ml[260,8130+4]..[260,8130+30])
                      Pexp_apply
                      expression (src/ppx.ml[260,8130+5]..[260,8130+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[260,8130+5]..[260,8130+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,8130+28]..[260,8130+29])
                            Pexp_ident "t" (src/ppx.ml[260,8130+28]..[260,8130+29])
                      ]
                    expression (src/ppx.ml[261,8162+4]..[261,8162+6])
                      Pexp_construct "()" (src/ppx.ml[261,8162+4]..[261,8162+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[263,8174+0]..[289,10138+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[263,8174+4]..[263,8174+13])
          Ppat_var "printdesc" (src/ppx.ml[263,8174+4]..[263,8174+13])
        expression (src/ppx.ml[263,8174+13]..[289,10138+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[263,8174+13]..[263,8174+37])
            Ppat_constraint
            pattern (src/ppx.ml[263,8174+14]..[263,8174+15])
              Ppat_var "x" (src/ppx.ml[263,8174+14]..[263,8174+15])
            core_type (src/ppx.ml[263,8174+17]..[263,8174+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[263,8174+17]..[263,8174+36])
              []
          expression (src/ppx.ml[263,8174+38]..[289,10138+128])
            Pexp_constraint
            expression (src/ppx.ml[264,8220+2]..[289,10138+128])
              Pexp_sequence
              expression (src/ppx.ml[264,8220+2]..[264,8220+68])
                Pexp_apply
                expression (src/ppx.ml[264,8220+3]..[264,8220+16])
                  Pexp_ident "print_endline" (src/ppx.ml[264,8220+3]..[264,8220+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[264,8220+17]..[264,8220+67])
                      Pexp_apply
                      expression (src/ppx.ml[264,8220+18]..[264,8220+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[264,8220+18]..[264,8220+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,8220+33]..[264,8220+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[264,8220+34]..[264,8220+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[264,8220+35]..[264,8220+61]),None)
                              expression (src/ppx.ml[264,8220+64]..[264,8220+65])
                                Pexp_ident "x" (src/ppx.ml[264,8220+64]..[264,8220+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[265,8290+2]..[289,10138+128])
                Pexp_match
                expression (src/ppx.ml[265,8290+8]..[265,8290+9])
                  Pexp_ident "x" (src/ppx.ml[265,8290+8]..[265,8290+9])
                [
                  <case>
                    pattern (src/ppx.ml[266,8305+4]..[266,8305+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[266,8305+4]..[266,8305+13])
                      Some
                        []
                        pattern (src/ppx.ml[266,8305+14]..[266,8305+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[266,8305+15]..[266,8305+25])
                              Ppat_var "expression" (src/ppx.ml[266,8305+15]..[266,8305+25])
                            pattern (src/ppx.ml[266,8305+26]..[266,8305+36])
                              Ppat_var "attributes" (src/ppx.ml[266,8305+26]..[266,8305+36])
                          ]
                    expression (src/ppx.ml[266,8305+41]..[266,8305+117])
                      Pexp_apply
                      expression (src/ppx.ml[266,8305+42]..[266,8305+55])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8305+42]..[266,8305+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8305+56]..[266,8305+116])
                            Pexp_apply
                            expression (src/ppx.ml[266,8305+57]..[266,8305+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8305+57]..[266,8305+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8305+72]..[266,8305+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8305+73]..[266,8305+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[266,8305+74]..[266,8305+90]),None)
                                    expression (src/ppx.ml[266,8305+93]..[266,8305+103])
                                      Pexp_ident "expression" (src/ppx.ml[266,8305+93]..[266,8305+103])
                                    expression (src/ppx.ml[266,8305+104]..[266,8305+114])
                                      Pexp_ident "attributes" (src/ppx.ml[266,8305+104]..[266,8305+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8443+4]..[268,8443+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[268,8443+4]..[268,8443+14])
                      Some
                        []
                        pattern (src/ppx.ml[268,8443+15]..[268,8443+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[268,8443+16]..[268,8443+24])
                              Ppat_var "rec_flag" (src/ppx.ml[268,8443+16]..[268,8443+24])
                            pattern (src/ppx.ml[268,8443+26]..[268,8443+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[268,8443+26]..[268,8443+44])
                          ]
                    expression (src/ppx.ml[268,8443+48]..[269,8577+48])
                      Pexp_sequence
                      expression (src/ppx.ml[268,8443+48]..[268,8443+132])
                        Pexp_apply
                        expression (src/ppx.ml[268,8443+49]..[268,8443+62])
                          Pexp_ident "print_endline" (src/ppx.ml[268,8443+49]..[268,8443+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[268,8443+63]..[268,8443+131])
                              Pexp_apply
                              expression (src/ppx.ml[268,8443+64]..[268,8443+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[268,8443+64]..[268,8443+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[268,8443+79]..[268,8443+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[268,8443+80]..[268,8443+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[268,8443+81]..[268,8443+98]),None)
                                      expression (src/ppx.ml[268,8443+101]..[268,8443+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[268,8443+101]..[268,8443+109])
                                      expression (src/ppx.ml[268,8443+111]..[268,8443+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[268,8443+111]..[268,8443+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[269,8577+4]..[269,8577+48])
                        Pexp_apply
                        expression (src/ppx.ml[269,8577+4]..[269,8577+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[269,8577+4]..[269,8577+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[269,8577+28]..[269,8577+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[269,8577+29]..[269,8577+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[270,8626+4]..[270,8626+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[270,8626+4]..[270,8626+18])
                      Some
                        []
                        pattern (src/ppx.ml[270,8626+19]..[270,8626+36])
                          Ppat_var "value_description" (src/ppx.ml[270,8626+19]..[270,8626+36])
                    expression (src/ppx.ml[270,8626+39]..[270,8626+116])
                      Pexp_apply
                      expression (src/ppx.ml[270,8626+40]..[270,8626+53])
                        Pexp_ident "print_endline" (src/ppx.ml[270,8626+40]..[270,8626+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,8626+54]..[270,8626+115])
                            Pexp_apply
                            expression (src/ppx.ml[270,8626+55]..[270,8626+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,8626+55]..[270,8626+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,8626+70]..[270,8626+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,8626+71]..[270,8626+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[270,8626+72]..[270,8626+93]),None)
                                    expression (src/ppx.ml[270,8626+96]..[270,8626+113])
                                      Pexp_ident "value_description" (src/ppx.ml[270,8626+96]..[270,8626+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,8744+4]..[272,8744+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[272,8744+4]..[272,8744+13])
                      Some
                        []
                        pattern (src/ppx.ml[272,8744+14]..[272,8744+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[272,8744+15]..[272,8744+23])
                              Ppat_var "rec_flag" (src/ppx.ml[272,8744+15]..[272,8744+23])
                            pattern (src/ppx.ml[272,8744+25]..[272,8744+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[272,8744+25]..[272,8744+46])
                          ]
                    expression (src/ppx.ml[274,8823+4]..[275,8874+90])
                      Pexp_sequence
                      expression (src/ppx.ml[274,8823+4]..[274,8823+49])
                        Pexp_apply
                        expression (src/ppx.ml[274,8823+4]..[274,8823+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[274,8823+4]..[274,8823+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[274,8823+26]..[274,8823+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[274,8823+27]..[274,8823+48])
                        ]
                      expression (src/ppx.ml[275,8874+4]..[275,8874+90])
                        Pexp_apply
                        expression (src/ppx.ml[275,8874+5]..[275,8874+18])
                          Pexp_ident "print_endline" (src/ppx.ml[275,8874+5]..[275,8874+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[275,8874+19]..[275,8874+89])
                              Pexp_apply
                              expression (src/ppx.ml[275,8874+20]..[275,8874+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[275,8874+20]..[275,8874+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[275,8874+35]..[275,8874+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[275,8874+36]..[275,8874+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[275,8874+37]..[275,8874+53]),None)
                                      expression (src/ppx.ml[275,8874+56]..[275,8874+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[275,8874+56]..[275,8874+64])
                                      expression (src/ppx.ml[275,8874+66]..[275,8874+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[275,8874+66]..[275,8874+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[278,8967+4]..[278,8967+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[278,8967+4]..[278,8967+15])
                      Some
                        []
                        pattern (src/ppx.ml[278,8967+17]..[278,8967+31])
                          Ppat_var "type_extension" (src/ppx.ml[278,8967+17]..[278,8967+31])
                    expression (src/ppx.ml[278,8967+34]..[278,8967+105])
                      Pexp_apply
                      expression (src/ppx.ml[278,8967+35]..[278,8967+48])
                        Pexp_ident "print_endline" (src/ppx.ml[278,8967+35]..[278,8967+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,8967+49]..[278,8967+104])
                            Pexp_apply
                            expression (src/ppx.ml[278,8967+50]..[278,8967+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,8967+50]..[278,8967+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,8967+65]..[278,8967+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,8967+66]..[278,8967+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[278,8967+67]..[278,8967+85]),None)
                                    expression (src/ppx.ml[278,8967+88]..[278,8967+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[278,8967+88]..[278,8967+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[279,9073+4]..[279,9073+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[279,9073+4]..[279,9073+18])
                      Some
                        []
                        pattern (src/ppx.ml[279,9073+19]..[279,9073+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[279,9073+19]..[279,9073+40])
                    expression (src/ppx.ml[279,9073+43]..[279,9073+124])
                      Pexp_apply
                      expression (src/ppx.ml[279,9073+44]..[279,9073+57])
                        Pexp_ident "print_endline" (src/ppx.ml[279,9073+44]..[279,9073+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[279,9073+58]..[279,9073+123])
                            Pexp_apply
                            expression (src/ppx.ml[279,9073+59]..[279,9073+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[279,9073+59]..[279,9073+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[279,9073+74]..[279,9073+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[279,9073+75]..[279,9073+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[279,9073+76]..[279,9073+97]),None)
                                    expression (src/ppx.ml[279,9073+100]..[279,9073+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[279,9073+100]..[279,9073+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[280,9198+4]..[280,9198+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[280,9198+4]..[280,9198+15])
                      Some
                        []
                        pattern (src/ppx.ml[280,9198+17]..[280,9198+31])
                          Ppat_var "module_binding" (src/ppx.ml[280,9198+17]..[280,9198+31])
                    expression (src/ppx.ml[280,9198+34]..[280,9198+104])
                      Pexp_apply
                      expression (src/ppx.ml[280,9198+35]..[280,9198+48])
                        Pexp_ident "print_endline" (src/ppx.ml[280,9198+35]..[280,9198+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[280,9198+49]..[280,9198+103])
                            Pexp_apply
                            expression (src/ppx.ml[280,9198+50]..[280,9198+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[280,9198+50]..[280,9198+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[280,9198+65]..[280,9198+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[280,9198+66]..[280,9198+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[280,9198+67]..[280,9198+85]),None)
                                    expression (src/ppx.ml[280,9198+87]..[280,9198+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[280,9198+87]..[280,9198+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[281,9303+4]..[281,9303+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[281,9303+4]..[281,9303+18])
                      Some
                        []
                        pattern (src/ppx.ml[281,9303+20]..[281,9303+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[281,9303+20]..[281,9303+39])
                    expression (src/ppx.ml[281,9303+42]..[281,9303+121])
                      Pexp_apply
                      expression (src/ppx.ml[281,9303+43]..[281,9303+56])
                        Pexp_ident "print_endline" (src/ppx.ml[281,9303+43]..[281,9303+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[281,9303+57]..[281,9303+120])
                            Pexp_apply
                            expression (src/ppx.ml[281,9303+58]..[281,9303+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[281,9303+58]..[281,9303+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[281,9303+73]..[281,9303+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[281,9303+74]..[281,9303+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[281,9303+75]..[281,9303+96]),None)
                                    expression (src/ppx.ml[281,9303+99]..[281,9303+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[281,9303+99]..[281,9303+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[282,9425+4]..[282,9425+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[282,9425+4]..[282,9425+16])
                      Some
                        []
                        pattern (src/ppx.ml[282,9425+17]..[282,9425+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[282,9425+17]..[282,9425+40])
                    expression (src/ppx.ml[282,9425+43]..[282,9425+124])
                      Pexp_apply
                      expression (src/ppx.ml[282,9425+44]..[282,9425+57])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9425+44]..[282,9425+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9425+58]..[282,9425+123])
                            Pexp_apply
                            expression (src/ppx.ml[282,9425+59]..[282,9425+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9425+59]..[282,9425+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9425+74]..[282,9425+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9425+75]..[282,9425+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[282,9425+76]..[282,9425+95]),None)
                                    expression (src/ppx.ml[282,9425+98]..[282,9425+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[282,9425+98]..[282,9425+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9567+4]..[284,9567+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[284,9567+4]..[284,9567+13])
                      Some
                        []
                        pattern (src/ppx.ml[284,9567+14]..[284,9567+30])
                          Ppat_var "open_description" (src/ppx.ml[284,9567+14]..[284,9567+30])
                    expression (src/ppx.ml[284,9567+33]..[284,9567+103])
                      Pexp_apply
                      expression (src/ppx.ml[284,9567+34]..[284,9567+47])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9567+34]..[284,9567+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9567+48]..[284,9567+102])
                            Pexp_apply
                            expression (src/ppx.ml[284,9567+49]..[284,9567+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9567+49]..[284,9567+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9567+64]..[284,9567+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9567+65]..[284,9567+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[284,9567+66]..[284,9567+81]),None)
                                    expression (src/ppx.ml[284,9567+84]..[284,9567+100])
                                      Pexp_ident "open_description" (src/ppx.ml[284,9567+84]..[284,9567+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9671+4]..[285,9671+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[285,9671+4]..[285,9671+14])
                      Some
                        []
                        pattern (src/ppx.ml[285,9671+15]..[285,9671+36])
                          Ppat_var "class_declarations" (src/ppx.ml[285,9671+16]..[285,9671+34])
                    expression (src/ppx.ml[285,9671+39]..[285,9671+113])
                      Pexp_apply
                      expression (src/ppx.ml[285,9671+40]..[285,9671+53])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9671+40]..[285,9671+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9671+54]..[285,9671+112])
                            Pexp_apply
                            expression (src/ppx.ml[285,9671+55]..[285,9671+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9671+55]..[285,9671+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9671+70]..[285,9671+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9671+71]..[285,9671+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[285,9671+72]..[285,9671+89]),None)
                                    expression (src/ppx.ml[285,9671+92]..[285,9671+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[285,9671+92]..[285,9671+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[286,9785+4]..[286,9785+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[286,9785+4]..[286,9785+19])
                      Some
                        []
                        pattern (src/ppx.ml[286,9785+20]..[286,9785+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[286,9785+21]..[286,9785+44])
                    expression (src/ppx.ml[286,9785+48]..[286,9785+132])
                      Pexp_apply
                      expression (src/ppx.ml[286,9785+49]..[286,9785+62])
                        Pexp_ident "print_endline" (src/ppx.ml[286,9785+49]..[286,9785+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[286,9785+63]..[286,9785+131])
                            Pexp_apply
                            expression (src/ppx.ml[286,9785+64]..[286,9785+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[286,9785+64]..[286,9785+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[286,9785+79]..[286,9785+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[286,9785+80]..[286,9785+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[286,9785+81]..[286,9785+103]),None)
                                    expression (src/ppx.ml[286,9785+106]..[286,9785+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[286,9785+106]..[286,9785+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[287,9918+4]..[287,9918+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[287,9918+4]..[287,9918+16])
                      Some
                        []
                        pattern (src/ppx.ml[287,9918+18]..[287,9918+39])
                          Ppat_var "include_declaration" (src/ppx.ml[287,9918+19]..[287,9918+38])
                    expression (src/ppx.ml[287,9918+41]..[287,9918+117])
                      Pexp_apply
                      expression (src/ppx.ml[287,9918+42]..[287,9918+55])
                        Pexp_ident "print_endline" (src/ppx.ml[287,9918+42]..[287,9918+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,9918+56]..[287,9918+116])
                            Pexp_apply
                            expression (src/ppx.ml[287,9918+57]..[287,9918+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[287,9918+57]..[287,9918+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[287,9918+72]..[287,9918+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[287,9918+73]..[287,9918+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[287,9918+74]..[287,9918+93]),None)
                                    expression (src/ppx.ml[287,9918+95]..[287,9918+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[287,9918+95]..[287,9918+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[288,10036+4]..[288,10036+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[288,10036+4]..[288,10036+18])
                      Some
                        []
                        pattern (src/ppx.ml[288,10036+19]..[288,10036+30])
                          Ppat_var "attribute" (src/ppx.ml[288,10036+20]..[288,10036+29])
                    expression (src/ppx.ml[288,10036+32]..[288,10036+101])
                      Pexp_apply
                      expression (src/ppx.ml[288,10036+33]..[288,10036+46])
                        Pexp_ident "print_endline" (src/ppx.ml[288,10036+33]..[288,10036+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[288,10036+47]..[288,10036+100])
                            Pexp_apply
                            expression (src/ppx.ml[288,10036+48]..[288,10036+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[288,10036+48]..[288,10036+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[288,10036+63]..[288,10036+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[288,10036+64]..[288,10036+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[288,10036+65]..[288,10036+86]),None)
                                    expression (src/ppx.ml[288,10036+89]..[288,10036+98])
                                      Pexp_ident "attribute" (src/ppx.ml[288,10036+89]..[288,10036+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[289,10138+4]..[289,10138+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[289,10138+4]..[289,10138+18])
                      Some
                        []
                        pattern (src/ppx.ml[289,10138+19]..[289,10138+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[289,10138+21]..[289,10138+30])
                              Ppat_var "extension" (src/ppx.ml[289,10138+21]..[289,10138+30])
                            pattern (src/ppx.ml[289,10138+33]..[289,10138+43])
                              Ppat_var "attributes" (src/ppx.ml[289,10138+33]..[289,10138+43])
                          ]
                    expression (src/ppx.ml[289,10138+46]..[289,10138+128])
                      Pexp_apply
                      expression (src/ppx.ml[289,10138+47]..[289,10138+60])
                        Pexp_ident "print_endline" (src/ppx.ml[289,10138+47]..[289,10138+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[289,10138+61]..[289,10138+127])
                            Pexp_apply
                            expression (src/ppx.ml[289,10138+62]..[289,10138+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[289,10138+62]..[289,10138+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[289,10138+77]..[289,10138+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[289,10138+78]..[289,10138+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[289,10138+79]..[289,10138+100]),None)
                                    expression (src/ppx.ml[289,10138+103]..[289,10138+112])
                                      Pexp_ident "extension" (src/ppx.ml[289,10138+103]..[289,10138+112])
                                    expression (src/ppx.ml[289,10138+115]..[289,10138+125])
                                      Pexp_ident "attributes" (src/ppx.ml[289,10138+115]..[289,10138+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[263,8174+39]..[263,8174+43])
              Ptyp_constr "unit" (src/ppx.ml[263,8174+39]..[263,8174+43])
              []
    ]
  structure_item (src/ppx.ml[291,10268+0]..[291,10268+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[291,10268+4]..[291,10268+7])
          Ppat_var "foo" (src/ppx.ml[291,10268+4]..[291,10268+7])
        expression (src/ppx.ml[291,10268+10]..[291,10268+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[293,10283+0]..[301,10502+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[293,10283+4]..[293,10283+12])
          Ppat_var "printone" (src/ppx.ml[293,10283+4]..[293,10283+12])
        expression (src/ppx.ml[293,10283+13]..[301,10502+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[293,10283+13]..[293,10283+34])
            Ppat_constraint
            pattern (src/ppx.ml[293,10283+14]..[293,10283+15])
              Ppat_var "x" (src/ppx.ml[293,10283+14]..[293,10283+15])
            core_type (src/ppx.ml[293,10283+18]..[293,10283+32])
              Ptyp_constr "structure_item" (src/ppx.ml[293,10283+18]..[293,10283+32])
              []
          expression (src/ppx.ml[293,10283+35]..[301,10502+6])
            Pexp_constraint
            expression (src/ppx.ml[294,10326+2]..[301,10502+6])
              Pexp_match
              expression (src/ppx.ml[294,10326+8]..[294,10326+9])
                Pexp_ident "x" (src/ppx.ml[294,10326+8]..[294,10326+9])
              [
                <case>
                  pattern (src/ppx.ml[295,10341+3]..[298,10391+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[296,10346+4]..[296,10346+13]) ghost
                        pattern (src/ppx.ml[296,10346+4]..[296,10346+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[296,10346+4]..[296,10346+13])
                    ]
                  expression (src/ppx.ml[300,10475+4]..[301,10502+6])
                    Pexp_sequence
                    expression (src/ppx.ml[300,10475+4]..[300,10475+25])
                      Pexp_apply
                      expression (src/ppx.ml[300,10475+5]..[300,10475+14])
                        Pexp_ident "printdesc" (src/ppx.ml[300,10475+5]..[300,10475+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[300,10475+15]..[300,10475+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[300,10475+15]..[300,10475+24])
                      ]
                    expression (src/ppx.ml[301,10502+4]..[301,10502+6])
                      Pexp_construct "()" (src/ppx.ml[301,10502+4]..[301,10502+6])
                      None
              ]
            core_type (src/ppx.ml[293,10283+36]..[293,10283+40])
              Ptyp_constr "unit" (src/ppx.ml[293,10283+36]..[293,10283+40])
              []
    ]
  structure_item (src/ppx.ml[307,10622+0]..[309,10703+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10622+4]..[307,10622+13])
          Ppat_var "printone2" (src/ppx.ml[307,10622+4]..[307,10622+13])
        expression (src/ppx.ml[307,10622+14]..[309,10703+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10622+14]..[307,10622+15])
            Ppat_var "x" (src/ppx.ml[307,10622+14]..[307,10622+15])
          expression (src/ppx.ml[307,10622+16]..[309,10703+12])
            Pexp_constraint
            expression (src/ppx.ml[308,10646+2]..[309,10703+12])
              Pexp_sequence
              expression (src/ppx.ml[308,10646+2]..[308,10646+55])
                Pexp_apply
                expression (src/ppx.ml[308,10646+3]..[308,10646+16])
                  Pexp_ident "print_endline" (src/ppx.ml[308,10646+3]..[308,10646+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[308,10646+17]..[308,10646+54])
                      Pexp_apply
                      expression (src/ppx.ml[308,10646+18]..[308,10646+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[308,10646+18]..[308,10646+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[308,10646+33]..[308,10646+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[308,10646+34]..[308,10646+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[308,10646+35]..[308,10646+49]),None)
                              expression (src/ppx.ml[308,10646+51]..[308,10646+52])
                                Pexp_ident "x" (src/ppx.ml[308,10646+51]..[308,10646+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[309,10703+2]..[309,10703+12])
                Pexp_apply
                expression (src/ppx.ml[309,10703+2]..[309,10703+10])
                  Pexp_ident "printone" (src/ppx.ml[309,10703+2]..[309,10703+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10703+11]..[309,10703+12])
                      Pexp_ident "x" (src/ppx.ml[309,10703+11]..[309,10703+12])
                ]
            core_type (src/ppx.ml[307,10622+17]..[307,10622+21])
              Ptyp_constr "unit" (src/ppx.ml[307,10622+17]..[307,10622+21])
              []
    ]
  structure_item (src/ppx.ml[311,10719+0]..[313,10750+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10719+4]..[311,10719+9])
          Ppat_var "proc1" (src/ppx.ml[311,10719+4]..[311,10719+9])
        expression (src/ppx.ml[311,10719+10]..[313,10750+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[311,10719+10]..[311,10719+11])
            Ppat_var "x" (src/ppx.ml[311,10719+10]..[311,10719+11])
          expression (src/ppx.ml[312,10735+2]..[313,10750+3])
            Pexp_sequence
            expression (src/ppx.ml[312,10735+2]..[312,10735+13])
              Pexp_apply
              expression (src/ppx.ml[312,10735+2]..[312,10735+11])
                Pexp_ident "printone2" (src/ppx.ml[312,10735+2]..[312,10735+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[312,10735+12]..[312,10735+13])
                    Pexp_ident "x" (src/ppx.ml[312,10735+12]..[312,10735+13])
              ]
            expression (src/ppx.ml[313,10750+2]..[313,10750+3])
              Pexp_ident "x" (src/ppx.ml[313,10750+2]..[313,10750+3])
    ]
  structure_item (src/ppx.ml[315,10755+0]..[318,10904+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[315,10755+4]..[315,10755+9])
          Ppat_var "debug" (src/ppx.ml[315,10755+4]..[315,10755+9])
        expression (src/ppx.ml[315,10755+10]..[318,10904+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[315,10755+10]..[315,10755+14])
            Ppat_var "proc" (src/ppx.ml[315,10755+10]..[315,10755+14])
          expression (src/ppx.ml[315,10755+15]..[318,10904+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[315,10755+15]..[315,10755+18])
              Ppat_var "lst" (src/ppx.ml[315,10755+15]..[315,10755+18])
            expression (src/ppx.ml[315,10755+19]..[318,10904+4])
              Pexp_constraint
              expression (src/ppx.ml[316,10783+2]..[318,10904+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[316,10783+6]..[316,10783+12])
                      Ppat_var "result" (src/ppx.ml[316,10783+6]..[316,10783+12])
                    expression (src/ppx.ml[316,10783+15]..[316,10783+32])
                      Pexp_apply
                      expression (src/ppx.ml[316,10783+15]..[316,10783+23])
                        Pexp_ident "List.map" (src/ppx.ml[316,10783+15]..[316,10783+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[316,10783+24]..[316,10783+28])
                            Pexp_ident "proc" (src/ppx.ml[316,10783+24]..[316,10783+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[316,10783+29]..[316,10783+32])
                            Pexp_ident "lst" (src/ppx.ml[316,10783+29]..[316,10783+32])
                      ]
                ]
                expression (src/ppx.ml[317,10819+2]..[318,10904+4])
                  Pexp_sequence
                  expression (src/ppx.ml[317,10819+2]..[317,10819+83])
                    Pexp_apply
                    expression (src/ppx.ml[317,10819+2]..[317,10819+11])
                      Pexp_ident "List.iter" (src/ppx.ml[317,10819+2]..[317,10819+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[317,10819+12]..[317,10819+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[317,10819+17]..[317,10819+18])
                            Ppat_var "i" (src/ppx.ml[317,10819+17]..[317,10819+18])
                          expression (src/ppx.ml[317,10819+22]..[317,10819+75])
                            Pexp_apply
                            expression (src/ppx.ml[317,10819+22]..[317,10819+35])
                              Pexp_ident "print_endline" (src/ppx.ml[317,10819+22]..[317,10819+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[317,10819+36]..[317,10819+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[317,10819+37]..[317,10819+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[317,10819+37]..[317,10819+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[317,10819+52]..[317,10819+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[317,10819+53]..[317,10819+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[317,10819+54]..[317,10819+69]),None)
                                          expression (src/ppx.ml[317,10819+72]..[317,10819+73])
                                            Pexp_ident "i" (src/ppx.ml[317,10819+72]..[317,10819+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[317,10819+77]..[317,10819+83])
                          Pexp_ident "result" (src/ppx.ml[317,10819+77]..[317,10819+83])
                    ]
                  expression (src/ppx.ml[318,10904+2]..[318,10904+4])
                    Pexp_construct "()" (src/ppx.ml[318,10904+2]..[318,10904+4])
                    None
              core_type (src/ppx.ml[315,10755+21]..[315,10755+25])
                Ptyp_constr "unit" (src/ppx.ml[315,10755+21]..[315,10755+25])
                []
    ]
  structure_item (src/ppx.ml[320,10926+0]..[323,11050+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[320,10926+4]..[320,10926+13])
          Ppat_var "transform" (src/ppx.ml[320,10926+4]..[320,10926+13])
        expression (src/ppx.ml[320,10926+14]..[323,11050+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[320,10926+14]..[320,10926+15])
            Ppat_var "x" (src/ppx.ml[320,10926+14]..[320,10926+15])
          expression (src/ppx.ml[321,10981+2]..[323,11050+3])
            Pexp_sequence
            expression (src/ppx.ml[321,10981+2]..[321,10981+48])
              Pexp_apply
              expression (src/ppx.ml[321,10981+3]..[321,10981+16])
                Pexp_ident "print_endline" (src/ppx.ml[321,10981+3]..[321,10981+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[321,10981+17]..[321,10981+47])
                    Pexp_apply
                    expression (src/ppx.ml[321,10981+18]..[321,10981+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[321,10981+18]..[321,10981+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[321,10981+33]..[321,10981+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[321,10981+34]..[321,10981+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[321,10981+35]..[321,10981+42]),None)
                            expression (src/ppx.ml[321,10981+44]..[321,10981+45])
                              Pexp_ident "x" (src/ppx.ml[321,10981+44]..[321,10981+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[322,11031+2]..[323,11050+3])
              Pexp_sequence
              expression (src/ppx.ml[322,11031+2]..[322,11031+17])
                Pexp_apply
                expression (src/ppx.ml[322,11031+3]..[322,11031+8])
                  Pexp_ident "debug" (src/ppx.ml[322,11031+3]..[322,11031+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[322,11031+9]..[322,11031+14])
                      Pexp_ident "proc1" (src/ppx.ml[322,11031+9]..[322,11031+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[322,11031+15]..[322,11031+16])
                      Pexp_ident "x" (src/ppx.ml[322,11031+15]..[322,11031+16])
                ]
              expression (src/ppx.ml[323,11050+2]..[323,11050+3])
                Pexp_ident "x" (src/ppx.ml[323,11050+2]..[323,11050+3])
    ]
  structure_item (src/ppx.ml[325,11057+1]..[325,11057+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[325,11057+5]..[325,11057+7])
          Ppat_construct "()" (src/ppx.ml[325,11057+5]..[325,11057+7])
          None
        expression (src/ppx.ml[325,11057+10]..[325,11057+69])
          Pexp_apply
          expression (src/ppx.ml[325,11057+10]..[325,11057+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[325,11057+10]..[325,11057+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[325,11057+47]..[325,11057+56])
                Pexp_ident "transform" (src/ppx.ml[325,11057+47]..[325,11057+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[325,11057+57]..[325,11057+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[325,11057+58]..[325,11057+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_id (x : longident_loc) =
  match x with
  | { txt;_} ->
      (match txt with
       | Lident string -> string
       | Ldot (longident, string) -> (process_id longident) ^ ("." ^ string)
       | Lapply (longident, longident2) -> longident ^ ("." ^ longident2))
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%s" myid;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"

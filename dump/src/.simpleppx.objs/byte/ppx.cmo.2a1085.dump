[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[145,4651+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+27])
          Ppat_var "process_record_kind" (src/ppx.ml[69,1879+8]..[69,1879+27])
        expression (src/ppx.ml[69,1879+27]..[83,2363+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+27]..[69,1879+30])
            Ppat_var "x" (src/ppx.ml[69,1879+28]..[69,1879+29])
          expression (src/ppx.ml[70,1912+2]..[83,2363+47])
            Pexp_match
            expression (src/ppx.ml[70,1912+8]..[70,1912+9])
              Pexp_ident "x" (src/ppx.ml[70,1912+8]..[70,1912+9])
            [
              <case>
                pattern (src/ppx.ml[71,1927+4]..[77,2108+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13]) ghost
                      pattern (src/ppx.ml[72,1933+5]..[72,1933+13])
                        Ppat_var "pld_name" (src/ppx.ml[72,1933+5]..[72,1933+13])
                    "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16]) ghost
                      pattern (src/ppx.ml[73,1966+5]..[73,1966+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[73,1966+5]..[73,1966+16])
                    "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13]) ghost
                      pattern (src/ppx.ml[74,2004+5]..[74,2004+13])
                        Ppat_var "pld_type" (src/ppx.ml[74,2004+5]..[74,2004+13])
                    "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12]) ghost
                      pattern (src/ppx.ml[75,2036+5]..[75,2036+12])
                        Ppat_var "pld_loc" (src/ppx.ml[75,2036+5]..[75,2036+12])
                    "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19]) ghost
                      pattern (src/ppx.ml[76,2068+5]..[76,2068+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[76,2068+5]..[76,2068+19])
                  ]
                expression (src/ppx.ml[78,2116+4]..[83,2363+47])
                  Pexp_apply
                  expression (src/ppx.ml[78,2116+5]..[78,2116+18])
                    Pexp_ident "print_endline" (src/ppx.ml[78,2116+5]..[78,2116+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[78,2116+19]..[83,2363+46])
                        Pexp_apply
                        expression (src/ppx.ml[78,2116+20]..[78,2116+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[78,2116+20]..[78,2116+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[78,2116+35]..[83,2363+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[78,2116+36]..[78,2116+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..[78,2116+56]),None)
                                expression (src/ppx.ml[79,2177+36]..[79,2177+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[79,2177+36]..[79,2177+44])
                                expression (src/ppx.ml[80,2223+36]..[80,2223+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[80,2223+37]..[80,2223+44]),None)
                                expression (src/ppx.ml[81,2270+36]..[81,2270+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[81,2270+36]..[81,2270+47])
                                expression (src/ppx.ml[82,2319+36]..[82,2319+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[82,2319+37]..[82,2319+41]),None)
                                expression (src/ppx.ml[83,2363+36]..[83,2363+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[83,2363+36]..[83,2363+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..[85,2415+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[85,2415+0]..[85,2415+22])
        expression (src/ppx.ml[85,2415+23]..[119,3979+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2415+23]..[85,2415+24])
            Ppat_var "x" (src/ppx.ml[85,2415+23]..[85,2415+24])
          expression (src/ppx.ml[86,2442+2]..[119,3979+65])
            Pexp_match
            expression (src/ppx.ml[86,2442+8]..[86,2442+9])
              Pexp_ident "x" (src/ppx.ml[86,2442+8]..[86,2442+9])
            [
              <case>
                pattern (src/ppx.ml[87,2457+4]..[87,2457+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[87,2457+4]..[87,2457+12])
                  None
                expression (src/ppx.ml[87,2457+17]..[87,2457+69])
                  Pexp_apply
                  expression (src/ppx.ml[87,2457+18]..[87,2457+31])
                    Pexp_ident "print_endline" (src/ppx.ml[87,2457+18]..[87,2457+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[87,2457+32]..[87,2457+68])
                        Pexp_apply
                        expression (src/ppx.ml[87,2457+33]..[87,2457+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[87,2457+33]..[87,2457+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[87,2457+48]..[87,2457+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[87,2457+50]..[87,2457+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[88,2527+4]..[88,2527+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[88,2527+4]..[88,2527+12])
                  Some
                    []
                    pattern (src/ppx.ml[88,2527+13]..[88,2527+17])
                      Ppat_var "name" (src/ppx.ml[88,2527+13]..[88,2527+17])
                expression (src/ppx.ml[88,2527+20]..[88,2527+80])
                  Pexp_apply
                  expression (src/ppx.ml[88,2527+21]..[88,2527+34])
                    Pexp_ident "print_endline" (src/ppx.ml[88,2527+21]..[88,2527+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[88,2527+35]..[88,2527+79])
                        Pexp_apply
                        expression (src/ppx.ml[88,2527+36]..[88,2527+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[88,2527+36]..[88,2527+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[88,2527+51]..[88,2527+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[88,2527+52]..[88,2527+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[88,2527+53]..[88,2527+68]),None)
                                expression (src/ppx.ml[88,2527+73]..[88,2527+77])
                                  Pexp_ident "name" (src/ppx.ml[88,2527+73]..[88,2527+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[89,2608+4]..[89,2608+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[89,2608+4]..[89,2608+14])
                  Some
                    []
                    pattern (src/ppx.ml[89,2608+15]..[89,2608+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[89,2608+16]..[89,2608+25])
                          Ppat_var "arg_label" (src/ppx.ml[89,2608+16]..[89,2608+25])
                        pattern (src/ppx.ml[89,2608+28]..[89,2608+37])
                          Ppat_var "core_type" (src/ppx.ml[89,2608+28]..[89,2608+37])
                        pattern (src/ppx.ml[89,2608+40]..[89,2608+50])
                          Ppat_var "core_type2" (src/ppx.ml[89,2608+40]..[89,2608+50])
                      ]
                expression (src/ppx.ml[90,2663+4]..[90,2663+61])
                  Pexp_apply
                  expression (src/ppx.ml[90,2663+5]..[90,2663+18])
                    Pexp_ident "print_endline" (src/ppx.ml[90,2663+5]..[90,2663+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[90,2663+19]..[90,2663+60])
                        Pexp_apply
                        expression (src/ppx.ml[90,2663+20]..[90,2663+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[90,2663+20]..[90,2663+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[90,2663+35]..[90,2663+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[90,2663+37]..[90,2663+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[91,2725+4]..[91,2725+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[91,2725+4]..[91,2725+14])
                  Some
                    []
                    pattern (src/ppx.ml[91,2725+15]..[91,2725+16])
                      Ppat_var "a" (src/ppx.ml[91,2725+15]..[91,2725+16])
                expression (src/ppx.ml[93,2773+4]..[93,2773+59])
                  Pexp_apply
                  expression (src/ppx.ml[93,2773+5]..[93,2773+18])
                    Pexp_ident "print_endline" (src/ppx.ml[93,2773+5]..[93,2773+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[93,2773+19]..[93,2773+58])
                        Pexp_apply
                        expression (src/ppx.ml[93,2773+20]..[93,2773+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[93,2773+20]..[93,2773+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[93,2773+35]..[93,2773+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[93,2773+37]..[93,2773+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[94,2833+4]..[94,2833+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[94,2833+4]..[94,2833+15])
                  Some
                    []
                    pattern (src/ppx.ml[94,2833+16]..[94,2833+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[94,2833+17]..[94,2833+18])
                          Ppat_var "a" (src/ppx.ml[94,2833+17]..[94,2833+18])
                        pattern (src/ppx.ml[94,2833+19]..[94,2833+20])
                          Ppat_var "b" (src/ppx.ml[94,2833+19]..[94,2833+20])
                      ]
                expression (src/ppx.ml[96,2904+4]..[97,2936+79])
                  Pexp_sequence
                  expression (src/ppx.ml[96,2904+4]..[96,2904+30])
                    Pexp_apply
                    expression (src/ppx.ml[96,2904+5]..[96,2904+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[96,2904+5]..[96,2904+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[96,2904+28]..[96,2904+29])
                          Pexp_ident "b" (src/ppx.ml[96,2904+28]..[96,2904+29])
                    ]
                  expression (src/ppx.ml[97,2936+4]..[97,2936+79])
                    Pexp_apply
                    expression (src/ppx.ml[97,2936+5]..[97,2936+18])
                      Pexp_ident "print_endline" (src/ppx.ml[97,2936+5]..[97,2936+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[97,2936+19]..[97,2936+78])
                          Pexp_apply
                          expression (src/ppx.ml[97,2936+20]..[97,2936+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[97,2936+20]..[97,2936+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[97,2936+35]..[97,2936+77])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[97,2936+36]..[97,2936+56])
                                    Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2936+37]..[97,2936+55]),None)
                                  expression (src/ppx.ml[97,2936+58]..[97,2936+62])
                                    Pexp_constant PConst_string("id",(src/ppx.ml[97,2936+59]..[97,2936+61]),None)
                                  expression (src/ppx.ml[97,2936+63]..[97,2936+64])
                                    Pexp_ident "a" (src/ppx.ml[97,2936+63]..[97,2936+64])
                                  expression (src/ppx.ml[97,2936+66]..[97,2936+73])
                                    Pexp_constant PConst_string("types",(src/ppx.ml[97,2936+67]..[97,2936+72]),None)
                                  expression (src/ppx.ml[97,2936+74]..[97,2936+75])
                                    Pexp_ident "b" (src/ppx.ml[97,2936+74]..[97,2936+75])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[98,3016+4]..[98,3016+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[98,3016+4]..[98,3016+15])
                  Some
                    []
                    pattern (src/ppx.ml[98,3016+16]..[98,3016+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[98,3016+17]..[98,3016+18])
                          Ppat_var "a" (src/ppx.ml[98,3016+17]..[98,3016+18])
                        pattern (src/ppx.ml[98,3016+19]..[98,3016+20])
                          Ppat_var "b" (src/ppx.ml[98,3016+19]..[98,3016+20])
                      ]
                expression (src/ppx.ml[100,3085+4]..[100,3085+60])
                  Pexp_apply
                  expression (src/ppx.ml[100,3085+5]..[100,3085+18])
                    Pexp_ident "print_endline" (src/ppx.ml[100,3085+5]..[100,3085+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[100,3085+19]..[100,3085+59])
                        Pexp_apply
                        expression (src/ppx.ml[100,3085+20]..[100,3085+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[100,3085+20]..[100,3085+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[100,3085+35]..[100,3085+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[100,3085+37]..[100,3085+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[101,3146+4]..[101,3146+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[101,3146+4]..[101,3146+14])
                  Some
                    []
                    pattern (src/ppx.ml[101,3146+15]..[101,3146+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[101,3146+16]..[101,3146+17])
                          Ppat_var "a" (src/ppx.ml[101,3146+16]..[101,3146+17])
                        pattern (src/ppx.ml[101,3146+18]..[101,3146+19])
                          Ppat_var "b" (src/ppx.ml[101,3146+18]..[101,3146+19])
                      ]
                expression (src/ppx.ml[103,3216+4]..[103,3216+60])
                  Pexp_apply
                  expression (src/ppx.ml[103,3216+5]..[103,3216+18])
                    Pexp_ident "print_endline" (src/ppx.ml[103,3216+5]..[103,3216+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,3216+19]..[103,3216+59])
                        Pexp_apply
                        expression (src/ppx.ml[103,3216+20]..[103,3216+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,3216+20]..[103,3216+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,3216+35]..[103,3216+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[103,3216+37]..[103,3216+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,3277+4]..[104,3277+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[104,3277+4]..[104,3277+14])
                  Some
                    []
                    pattern (src/ppx.ml[104,3277+15]..[104,3277+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[104,3277+16]..[104,3277+17])
                          Ppat_var "a" (src/ppx.ml[104,3277+16]..[104,3277+17])
                        pattern (src/ppx.ml[104,3277+18]..[104,3277+19])
                          Ppat_var "b" (src/ppx.ml[104,3277+18]..[104,3277+19])
                      ]
                expression (src/ppx.ml[106,3338+4]..[106,3338+60])
                  Pexp_apply
                  expression (src/ppx.ml[106,3338+5]..[106,3338+18])
                    Pexp_ident "print_endline" (src/ppx.ml[106,3338+5]..[106,3338+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[106,3338+19]..[106,3338+59])
                        Pexp_apply
                        expression (src/ppx.ml[106,3338+20]..[106,3338+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[106,3338+20]..[106,3338+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[106,3338+35]..[106,3338+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[106,3338+37]..[106,3338+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3399+4]..[107,3399+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[107,3399+4]..[107,3399+16])
                  Some
                    []
                    pattern (src/ppx.ml[107,3399+17]..[107,3399+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[107,3399+18]..[107,3399+19])
                          Ppat_var "a" (src/ppx.ml[107,3399+18]..[107,3399+19])
                        pattern (src/ppx.ml[107,3399+20]..[107,3399+21])
                          Ppat_var "b" (src/ppx.ml[107,3399+20]..[107,3399+21])
                        pattern (src/ppx.ml[107,3399+22]..[107,3399+23])
                          Ppat_var "c" (src/ppx.ml[107,3399+22]..[107,3399+23])
                      ]
                expression (src/ppx.ml[109,3489+4]..[109,3489+60])
                  Pexp_apply
                  expression (src/ppx.ml[109,3489+5]..[109,3489+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3489+5]..[109,3489+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3489+19]..[109,3489+59])
                        Pexp_apply
                        expression (src/ppx.ml[109,3489+20]..[109,3489+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3489+20]..[109,3489+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3489+35]..[109,3489+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[109,3489+37]..[109,3489+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[110,3550+4]..[110,3550+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[110,3550+4]..[110,3550+13])
                  Some
                    []
                    pattern (src/ppx.ml[110,3550+14]..[110,3550+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[110,3550+15]..[110,3550+16])
                          Ppat_var "a" (src/ppx.ml[110,3550+15]..[110,3550+16])
                        pattern (src/ppx.ml[110,3550+17]..[110,3550+18])
                          Ppat_var "b" (src/ppx.ml[110,3550+17]..[110,3550+18])
                      ]
                expression (src/ppx.ml[112,3614+4]..[112,3614+60])
                  Pexp_apply
                  expression (src/ppx.ml[112,3614+5]..[112,3614+18])
                    Pexp_ident "print_endline" (src/ppx.ml[112,3614+5]..[112,3614+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[112,3614+19]..[112,3614+59])
                        Pexp_apply
                        expression (src/ppx.ml[112,3614+20]..[112,3614+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[112,3614+20]..[112,3614+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[112,3614+35]..[112,3614+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[112,3614+37]..[112,3614+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[113,3675+4]..[113,3675+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[113,3675+4]..[113,3675+16])
                  Some
                    []
                    pattern (src/ppx.ml[113,3675+17]..[113,3675+18])
                      Ppat_var "a" (src/ppx.ml[113,3675+17]..[113,3675+18])
                expression (src/ppx.ml[115,3723+4]..[115,3723+62])
                  Pexp_apply
                  expression (src/ppx.ml[115,3723+5]..[115,3723+18])
                    Pexp_ident "print_endline" (src/ppx.ml[115,3723+5]..[115,3723+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[115,3723+19]..[115,3723+61])
                        Pexp_apply
                        expression (src/ppx.ml[115,3723+20]..[115,3723+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[115,3723+20]..[115,3723+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[115,3723+35]..[115,3723+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[115,3723+36]..[115,3723+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[115,3723+37]..[115,3723+55]),None)
                                expression (src/ppx.ml[115,3723+57]..[115,3723+58])
                                  Pexp_ident "a" (src/ppx.ml[115,3723+57]..[115,3723+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3931+4]..[118,3931+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[118,3931+4]..[118,3931+18])
                  Some
                    []
                    pattern (src/ppx.ml[118,3931+19]..[118,3931+20])
                      Ppat_var "a" (src/ppx.ml[118,3931+19]..[118,3931+20])
                expression (src/ppx.ml[119,3979+4]..[119,3979+65])
                  Pexp_apply
                  expression (src/ppx.ml[119,3979+5]..[119,3979+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3979+5]..[119,3979+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3979+19]..[119,3979+64])
                        Pexp_apply
                        expression (src/ppx.ml[119,3979+20]..[119,3979+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3979+20]..[119,3979+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3979+35]..[119,3979+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[119,3979+36]..[119,3979+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[119,3979+37]..[119,3979+58]),None)
                                expression (src/ppx.ml[119,3979+60]..[119,3979+61])
                                  Pexp_ident "a" (src/ppx.ml[119,3979+60]..[119,3979+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[121,4049+2]..[121,4049+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[121,4049+2]..[121,4049+26])
        expression (src/ppx.ml[121,4049+26]..[127,4186+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[121,4049+26]..[121,4049+29])
            Ppat_var "x" (src/ppx.ml[121,4049+27]..[121,4049+28])
          expression (src/ppx.ml[122,4081+2]..[127,4186+6])
            Pexp_match
            expression (src/ppx.ml[122,4081+8]..[122,4081+9])
              Pexp_ident "x" (src/ppx.ml[122,4081+8]..[122,4081+9])
            [
              <case>
                pattern (src/ppx.ml[123,4096+4]..[123,4096+6])
                  Ppat_construct "[]" (src/ppx.ml[123,4096+4]..[123,4096+6])
                  None
                expression (src/ppx.ml[123,4096+10]..[123,4096+12])
                  Pexp_construct "()" (src/ppx.ml[123,4096+10]..[123,4096+12])
                  None
              <case>
                pattern (src/ppx.ml[124,4109+4]..[124,4109+10])
                  Ppat_construct "::" (src/ppx.ml[124,4109+6]..[124,4109+8])
                  Some
                    []
                    pattern (src/ppx.ml[124,4109+4]..[124,4109+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[124,4109+4]..[124,4109+5])
                          Ppat_var "h" (src/ppx.ml[124,4109+4]..[124,4109+5])
                        pattern (src/ppx.ml[124,4109+9]..[124,4109+10])
                          Ppat_var "t" (src/ppx.ml[124,4109+9]..[124,4109+10])
                      ]
                expression (src/ppx.ml[125,4123+4]..[127,4186+6])
                  Pexp_sequence
                  expression (src/ppx.ml[125,4123+4]..[125,4123+27])
                    Pexp_apply
                    expression (src/ppx.ml[125,4123+5]..[125,4123+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[125,4123+5]..[125,4123+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[125,4123+25]..[125,4123+26])
                          Pexp_ident "h" (src/ppx.ml[125,4123+25]..[125,4123+26])
                    ]
                  expression (src/ppx.ml[126,4152+4]..[127,4186+6])
                    Pexp_sequence
                    expression (src/ppx.ml[126,4152+4]..[126,4152+32])
                      Pexp_apply
                      expression (src/ppx.ml[126,4152+5]..[126,4152+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[126,4152+5]..[126,4152+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[126,4152+30]..[126,4152+31])
                            Pexp_ident "t" (src/ppx.ml[126,4152+30]..[126,4152+31])
                      ]
                    expression (src/ppx.ml[127,4186+4]..[127,4186+6])
                      Pexp_construct "()" (src/ppx.ml[127,4186+4]..[127,4186+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[129,4197+0]..[129,4197+17])
          Ppat_var "process_core_type" (src/ppx.ml[129,4197+0]..[129,4197+17])
        expression (src/ppx.ml[129,4197+17]..[139,4464+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[129,4197+17]..[129,4197+20])
            Ppat_var "x" (src/ppx.ml[129,4197+18]..[129,4197+19])
          expression (src/ppx.ml[130,4220+2]..[139,4464+70])
            Pexp_match
            expression (src/ppx.ml[130,4220+8]..[130,4220+9])
              Pexp_ident "x" (src/ppx.ml[130,4220+8]..[130,4220+9])
            [
              <case>
                pattern (src/ppx.ml[131,4236+4]..[136,4397+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[132,4242+6]..[132,4242+15]) ghost
                      pattern (src/ppx.ml[132,4242+6]..[132,4242+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[132,4242+6]..[132,4242+15])
                    "ptyp_loc" (src/ppx.ml[133,4281+5]..[133,4281+13]) ghost
                      pattern (src/ppx.ml[133,4281+5]..[133,4281+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[133,4281+5]..[133,4281+13])
                    "ptyp_loc_stack" (src/ppx.ml[134,4314+5]..[134,4314+19]) ghost
                      pattern (src/ppx.ml[134,4314+5]..[134,4314+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[134,4314+5]..[134,4314+19])
                    "ptyp_attributes" (src/ppx.ml[135,4357+5]..[135,4357+20]) ghost
                      pattern (src/ppx.ml[135,4357+5]..[135,4357+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[135,4357+5]..[135,4357+20])
                  ]
                expression (src/ppx.ml[137,4405+4]..[139,4464+70])
                  Pexp_sequence
                  expression (src/ppx.ml[137,4405+4]..[137,4405+38])
                    Pexp_apply
                    expression (src/ppx.ml[137,4405+5]..[137,4405+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[137,4405+5]..[137,4405+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[137,4405+28]..[137,4405+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[137,4405+28]..[137,4405+37])
                    ]
                  expression (src/ppx.ml[139,4464+4]..[139,4464+70])
                    Pexp_apply
                    expression (src/ppx.ml[139,4464+5]..[139,4464+18])
                      Pexp_ident "print_endline" (src/ppx.ml[139,4464+5]..[139,4464+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[139,4464+19]..[139,4464+69])
                          Pexp_apply
                          expression (src/ppx.ml[139,4464+20]..[139,4464+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[139,4464+20]..[139,4464+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[139,4464+35]..[139,4464+68])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[139,4464+36]..[139,4464+54])
                                    Pexp_constant PConst_string("DEBUG:ptyp_desc:",(src/ppx.ml[139,4464+37]..[139,4464+53]),None)
                                  expression (src/ppx.ml[139,4464+58]..[139,4464+67])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[139,4464+58]..[139,4464+67])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[140,4535+4]..[140,4535+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[140,4535+4]..[140,4535+26])
        expression (src/ppx.ml[140,4535+26]..[145,4651+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4535+26]..[140,4535+44])
            Ppat_constraint
            pattern (src/ppx.ml[140,4535+27]..[140,4535+28])
              Ppat_var "x" (src/ppx.ml[140,4535+27]..[140,4535+28])
            core_type (src/ppx.ml[140,4535+29]..[140,4535+43])
              Ptyp_constr "list" (src/ppx.ml[140,4535+39]..[140,4535+43])
              [
                core_type (src/ppx.ml[140,4535+29]..[140,4535+38])
                  Ptyp_constr "core_type" (src/ppx.ml[140,4535+29]..[140,4535+38])
                  []
              ]
          expression (src/ppx.ml[141,4582+2]..[145,4651+29])
            Pexp_match
            expression (src/ppx.ml[141,4582+8]..[141,4582+9])
              Pexp_ident "x" (src/ppx.ml[141,4582+8]..[141,4582+9])
            [
              <case>
                pattern (src/ppx.ml[142,4597+4]..[142,4597+6])
                  Ppat_construct "[]" (src/ppx.ml[142,4597+4]..[142,4597+6])
                  None
                expression (src/ppx.ml[142,4597+10]..[142,4597+12])
                  Pexp_construct "()" (src/ppx.ml[142,4597+10]..[142,4597+12])
                  None
              <case>
                pattern (src/ppx.ml[143,4610+4]..[143,4610+10])
                  Ppat_construct "::" (src/ppx.ml[143,4610+6]..[143,4610+8])
                  Some
                    []
                    pattern (src/ppx.ml[143,4610+4]..[143,4610+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[143,4610+4]..[143,4610+5])
                          Ppat_var "h" (src/ppx.ml[143,4610+4]..[143,4610+5])
                        pattern (src/ppx.ml[143,4610+9]..[143,4610+10])
                          Ppat_var "t" (src/ppx.ml[143,4610+9]..[143,4610+10])
                      ]
                expression (src/ppx.ml[144,4624+4]..[145,4651+29])
                  Pexp_sequence
                  expression (src/ppx.ml[144,4624+4]..[144,4624+25])
                    Pexp_apply
                    expression (src/ppx.ml[144,4624+4]..[144,4624+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[144,4624+4]..[144,4624+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[144,4624+22]..[144,4624+25])
                          Pexp_ident "h" (src/ppx.ml[144,4624+23]..[144,4624+24])
                    ]
                  expression (src/ppx.ml[145,4651+4]..[145,4651+29])
                    Pexp_apply
                    expression (src/ppx.ml[145,4651+4]..[145,4651+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[145,4651+4]..[145,4651+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[145,4651+26]..[145,4651+29])
                          Pexp_ident "t" (src/ppx.ml[145,4651+27]..[145,4651+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[152,4695+0]..[159,4894+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[152,4695+4]..[152,4695+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[152,4695+4]..[152,4695+31])
        expression (src/ppx.ml[152,4695+31]..[159,4894+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[152,4695+31]..[152,4695+34])
            Ppat_var "x" (src/ppx.ml[152,4695+32]..[152,4695+33])
          expression (src/ppx.ml[153,4732+2]..[159,4894+65])
            Pexp_match
            expression (src/ppx.ml[153,4732+8]..[153,4732+9])
              Pexp_ident "x" (src/ppx.ml[153,4732+8]..[153,4732+9])
            [
              <case>
                pattern (src/ppx.ml[154,4747+4]..[154,4747+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[154,4747+4]..[154,4747+15])
                  Some
                    []
                    pattern (src/ppx.ml[154,4747+16]..[154,4747+17])
                      Ppat_var "a" (src/ppx.ml[154,4747+16]..[154,4747+17])
                expression (src/ppx.ml[155,4768+4]..[156,4800+64])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4768+4]..[155,4768+30])
                    Pexp_apply
                    expression (src/ppx.ml[155,4768+5]..[155,4768+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[155,4768+5]..[155,4768+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4768+28]..[155,4768+29])
                          Pexp_ident "a" (src/ppx.ml[155,4768+28]..[155,4768+29])
                    ]
                  expression (src/ppx.ml[156,4800+4]..[156,4800+64])
                    Pexp_apply
                    expression (src/ppx.ml[156,4800+5]..[156,4800+18])
                      Pexp_ident "print_endline" (src/ppx.ml[156,4800+5]..[156,4800+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4800+19]..[156,4800+63])
                          Pexp_apply
                          expression (src/ppx.ml[156,4800+20]..[156,4800+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[156,4800+20]..[156,4800+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[156,4800+35]..[156,4800+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[156,4800+36]..[156,4800+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[156,4800+37]..[156,4800+55]),None)
                                  expression (src/ppx.ml[156,4800+60]..[156,4800+61])
                                    Pexp_ident "a" (src/ppx.ml[156,4800+60]..[156,4800+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[158,4872+4]..[158,4872+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[158,4872+4]..[158,4872+16])
                  Some
                    []
                    pattern (src/ppx.ml[158,4872+17]..[158,4872+18])
                      Ppat_var "a" (src/ppx.ml[158,4872+17]..[158,4872+18])
                expression (src/ppx.ml[159,4894+4]..[159,4894+65])
                  Pexp_apply
                  expression (src/ppx.ml[159,4894+5]..[159,4894+18])
                    Pexp_ident "print_endline" (src/ppx.ml[159,4894+5]..[159,4894+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[159,4894+19]..[159,4894+64])
                        Pexp_apply
                        expression (src/ppx.ml[159,4894+20]..[159,4894+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[159,4894+20]..[159,4894+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[159,4894+35]..[159,4894+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[159,4894+36]..[159,4894+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[159,4894+37]..[159,4894+56]),None)
                                expression (src/ppx.ml[159,4894+61]..[159,4894+62])
                                  Pexp_ident "a" (src/ppx.ml[159,4894+61]..[159,4894+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[161,4961+0]..[193,5940+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[161,4961+8]..[161,4961+58])
          Ppat_var "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[161,4961+8]..[161,4961+58])
        expression (src/ppx.ml[161,4961+58]..[193,5940+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[161,4961+58]..[161,4961+61])
            Ppat_var "x" (src/ppx.ml[161,4961+59]..[161,4961+60])
          expression (src/ppx.ml[162,5025+2]..[193,5940+8])
            Pexp_match
            expression (src/ppx.ml[162,5025+8]..[162,5025+9])
              Pexp_ident "x" (src/ppx.ml[162,5025+8]..[162,5025+9])
            [
              <case>
                pattern (src/ppx.ml[163,5040+4]..[163,5040+6])
                  Ppat_construct "[]" (src/ppx.ml[163,5040+4]..[163,5040+6])
                  None
                expression (src/ppx.ml[163,5040+10]..[163,5040+12])
                  Pexp_construct "()" (src/ppx.ml[163,5040+10]..[163,5040+12])
                  None
              <case>
                pattern (src/ppx.ml[164,5053+4]..[164,5053+10])
                  Ppat_construct "::" (src/ppx.ml[164,5053+6]..[164,5053+8])
                  Some
                    []
                    pattern (src/ppx.ml[164,5053+4]..[164,5053+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[164,5053+4]..[164,5053+5])
                          Ppat_var "h" (src/ppx.ml[164,5053+4]..[164,5053+5])
                        pattern (src/ppx.ml[164,5053+9]..[164,5053+10])
                          Ppat_var "t" (src/ppx.ml[164,5053+9]..[164,5053+10])
                      ]
                expression (src/ppx.ml[166,5133+4]..[193,5940+8])
                  Pexp_match
                  expression (src/ppx.ml[166,5133+10]..[166,5133+11])
                    Pexp_ident "h" (src/ppx.ml[166,5133+10]..[166,5133+11])
                  [
                    <case>
                      pattern (src/ppx.ml[167,5150+5]..[174,5388+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[168,5157+6]..[168,5157+14]) ghost
                            pattern (src/ppx.ml[168,5157+6]..[168,5157+14])
                              Ppat_var "pcd_name" (src/ppx.ml[168,5157+6]..[168,5157+14])
                          "pcd_vars" (src/ppx.ml[169,5191+6]..[169,5191+14]) ghost
                            pattern (src/ppx.ml[169,5191+6]..[169,5191+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[169,5191+6]..[169,5191+14])
                          "pcd_args" (src/ppx.ml[170,5230+6]..[170,5230+14]) ghost
                            pattern (src/ppx.ml[170,5230+6]..[170,5230+14])
                              Ppat_var "pcd_args" (src/ppx.ml[170,5230+6]..[170,5230+14])
                          "pcd_res" (src/ppx.ml[171,5275+6]..[171,5275+13]) ghost
                            pattern (src/ppx.ml[171,5275+6]..[171,5275+13])
                              Ppat_var "pcd_res" (src/ppx.ml[171,5275+6]..[171,5275+13])
                          "pcd_loc" (src/ppx.ml[172,5314+6]..[172,5314+13]) ghost
                            pattern (src/ppx.ml[172,5314+6]..[172,5314+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[172,5314+6]..[172,5314+13])
                          "pcd_attributes" (src/ppx.ml[173,5347+6]..[173,5347+20]) ghost
                            pattern (src/ppx.ml[173,5347+6]..[173,5347+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[173,5347+6]..[173,5347+20])
                        ]
                      expression (src/ppx.ml[177,5470+6]..[193,5940+8])
                        Pexp_sequence
                        expression (src/ppx.ml[177,5470+6]..[177,5470+43])
                          Pexp_apply
                          expression (src/ppx.ml[177,5470+6]..[177,5470+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[177,5470+6]..[177,5470+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[177,5470+33]..[177,5470+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[177,5470+34]..[177,5470+42])
                          ]
                        expression (src/ppx.ml[178,5515+6]..[193,5940+8])
                          Pexp_sequence
                          expression (src/ppx.ml[178,5515+6]..[191,5860+16])
                            Pexp_apply
                            expression (src/ppx.ml[178,5515+7]..[178,5515+20])
                              Pexp_ident "print_endline" (src/ppx.ml[178,5515+7]..[178,5515+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[178,5515+21]..[191,5860+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[178,5515+22]..[178,5515+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[178,5515+22]..[178,5515+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[178,5515+37]..[191,5860+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[179,5554+11]..[179,5554+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[179,5554+12]..[179,5554+36]),None)
                                          expression (src/ppx.ml[180,5593+15]..[180,5593+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[180,5593+15]..[180,5593+23])
                                          expression (src/ppx.ml[181,5618+15]..[181,5618+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[181,5618+16]..[181,5618+20]),None)
                                          expression (src/ppx.ml[182,5641+15]..[182,5641+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[182,5641+15]..[182,5641+23])
                                          expression (src/ppx.ml[183,5666+15]..[183,5666+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[183,5666+16]..[183,5666+20]),None)
                                          expression (src/ppx.ml[184,5689+15]..[184,5689+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[184,5689+15]..[184,5689+23])
                                          expression (src/ppx.ml[185,5714+15]..[185,5714+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[185,5714+16]..[185,5714+19]),None)
                                          expression (src/ppx.ml[186,5736+15]..[186,5736+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[186,5736+15]..[186,5736+22])
                                          expression (src/ppx.ml[187,5760+15]..[187,5760+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[187,5760+16]..[187,5760+19]),None)
                                          expression (src/ppx.ml[188,5782+15]..[188,5782+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[188,5782+15]..[188,5782+22])
                                          expression (src/ppx.ml[189,5806+15]..[189,5806+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[189,5806+16]..[189,5806+21]),None)
                                          expression (src/ppx.ml[190,5830+15]..[190,5830+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[190,5830+15]..[190,5830+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[192,5878+6]..[193,5940+8])
                            Pexp_sequence
                            expression (src/ppx.ml[192,5878+6]..[192,5878+60])
                              Pexp_apply
                              expression (src/ppx.ml[192,5878+7]..[192,5878+57])
                                Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[192,5878+7]..[192,5878+57])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[192,5878+58]..[192,5878+59])
                                    Pexp_ident "t" (src/ppx.ml[192,5878+58]..[192,5878+59])
                              ]
                            expression (src/ppx.ml[193,5940+6]..[193,5940+8])
                              Pexp_construct "()" (src/ppx.ml[193,5940+6]..[193,5940+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[195,5952+0]..[206,6350+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[195,5952+4]..[195,5952+16])
          Ppat_var "process_kind" (src/ppx.ml[195,5952+4]..[195,5952+16])
        expression (src/ppx.ml[195,5952+16]..[206,6350+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[195,5952+16]..[195,5952+19])
            Ppat_var "x" (src/ppx.ml[195,5952+17]..[195,5952+18])
          expression (src/ppx.ml[196,5974+2]..[206,6350+77])
            Pexp_match
            expression (src/ppx.ml[196,5974+8]..[196,5974+9])
              Pexp_ident "x" (src/ppx.ml[196,5974+8]..[196,5974+9])
            [
              <case>
                pattern (src/ppx.ml[198,6011+4]..[198,6011+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[198,6011+4]..[198,6011+18])
                  None
                expression (src/ppx.ml[198,6011+23]..[198,6011+81])
                  Pexp_apply
                  expression (src/ppx.ml[198,6011+24]..[198,6011+37])
                    Pexp_ident "print_endline" (src/ppx.ml[198,6011+24]..[198,6011+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[198,6011+38]..[198,6011+80])
                        Pexp_apply
                        expression (src/ppx.ml[198,6011+39]..[198,6011+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[198,6011+39]..[198,6011+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[198,6011+54]..[198,6011+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[198,6011+56]..[198,6011+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[199,6093+4]..[199,6093+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[199,6093+4]..[199,6093+17])
                  Some
                    []
                    pattern (src/ppx.ml[199,6093+18]..[199,6093+19])
                      Ppat_var "a" (src/ppx.ml[199,6093+18]..[199,6093+19])
                expression (src/ppx.ml[200,6116+4]..[201,6176+65])
                  Pexp_sequence
                  expression (src/ppx.ml[200,6116+4]..[200,6116+58])
                    Pexp_apply
                    expression (src/ppx.ml[200,6116+5]..[200,6116+55])
                      Pexp_ident "process_Ptype_variant_constructor_declaration_list" (src/ppx.ml[200,6116+5]..[200,6116+55])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[200,6116+56]..[200,6116+57])
                          Pexp_ident "a" (src/ppx.ml[200,6116+56]..[200,6116+57])
                    ]
                  expression (src/ppx.ml[201,6176+4]..[201,6176+65])
                    Pexp_apply
                    expression (src/ppx.ml[201,6176+5]..[201,6176+18])
                      Pexp_ident "print_endline" (src/ppx.ml[201,6176+5]..[201,6176+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[201,6176+19]..[201,6176+64])
                          Pexp_apply
                          expression (src/ppx.ml[201,6176+20]..[201,6176+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[201,6176+20]..[201,6176+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[201,6176+35]..[201,6176+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[201,6176+36]..[201,6176+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[201,6176+37]..[201,6176+57]),None)
                                  expression (src/ppx.ml[201,6176+61]..[201,6176+62])
                                    Pexp_ident "a" (src/ppx.ml[201,6176+61]..[201,6176+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[204,6289+5]..[204,6289+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[204,6289+5]..[204,6289+17])
                  Some
                    []
                    pattern (src/ppx.ml[204,6289+18]..[204,6289+19])
                      Ppat_var "a" (src/ppx.ml[204,6289+18]..[204,6289+19])
                expression (src/ppx.ml[205,6317+5]..[205,6317+32])
                  Pexp_apply
                  expression (src/ppx.ml[205,6317+5]..[205,6317+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[205,6317+5]..[205,6317+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[205,6317+29]..[205,6317+32])
                        Pexp_ident "a" (src/ppx.ml[205,6317+30]..[205,6317+31])
                  ]
              <case>
                pattern (src/ppx.ml[206,6350+5]..[206,6350+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[206,6350+5]..[206,6350+15])
                  None
                expression (src/ppx.ml[206,6350+19]..[206,6350+77])
                  Pexp_apply
                  expression (src/ppx.ml[206,6350+20]..[206,6350+33])
                    Pexp_ident "print_endline" (src/ppx.ml[206,6350+20]..[206,6350+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[206,6350+34]..[206,6350+76])
                        Pexp_apply
                        expression (src/ppx.ml[206,6350+35]..[206,6350+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[206,6350+35]..[206,6350+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[206,6350+50]..[206,6350+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[206,6350+52]..[206,6350+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[208,6429+0]..[229,7435+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6429+4]..[208,6429+19])
          Ppat_var "print_type_decl" (src/ppx.ml[208,6429+4]..[208,6429+19])
        expression (src/ppx.ml[208,6429+19]..[229,7435+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[208,6429+19]..[208,6429+22])
            Ppat_var "x" (src/ppx.ml[208,6429+20]..[208,6429+21])
          expression (src/ppx.ml[209,6454+2]..[229,7435+38])
            Pexp_match
            expression (src/ppx.ml[209,6454+8]..[209,6454+9])
              Pexp_ident "x" (src/ppx.ml[209,6454+8]..[209,6454+9])
            [
              <case>
                pattern (src/ppx.ml[210,6469+4]..[219,6850+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[211,6475+6]..[211,6475+16]) ghost
                      pattern (src/ppx.ml[211,6475+6]..[211,6475+16])
                        Ppat_var "ptype_name" (src/ppx.ml[211,6475+6]..[211,6475+16])
                    "ptype_params" (src/ppx.ml[212,6512+6]..[212,6512+18]) ghost
                      pattern (src/ppx.ml[212,6512+6]..[212,6512+18])
                        Ppat_var "ptype_params" (src/ppx.ml[212,6512+6]..[212,6512+18])
                    "ptype_cstrs" (src/ppx.ml[213,6584+6]..[213,6584+17]) ghost
                      pattern (src/ppx.ml[213,6584+6]..[213,6584+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[213,6584+6]..[213,6584+17])
                    "ptype_kind" (src/ppx.ml[214,6653+6]..[214,6653+16]) ghost
                      pattern (src/ppx.ml[214,6653+6]..[214,6653+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[214,6653+6]..[214,6653+16])
                    "ptype_private" (src/ppx.ml[215,6690+6]..[215,6690+19]) ghost
                      pattern (src/ppx.ml[215,6690+6]..[215,6690+19])
                        Ppat_var "ptype_private" (src/ppx.ml[215,6690+6]..[215,6690+19])
                    "ptype_manifest" (src/ppx.ml[216,6731+6]..[216,6731+20]) ghost
                      pattern (src/ppx.ml[216,6731+6]..[216,6731+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[216,6731+6]..[216,6731+20])
                    "ptype_attributes" (src/ppx.ml[217,6778+6]..[217,6778+22]) ghost
                      pattern (src/ppx.ml[217,6778+6]..[217,6778+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[217,6778+6]..[217,6778+22])
                    "ptype_loc" (src/ppx.ml[218,6819+6]..[218,6819+15]) ghost
                      pattern (src/ppx.ml[218,6819+6]..[218,6819+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[218,6819+6]..[218,6819+15])
                  ]
                expression (src/ppx.ml[220,6859+4]..[229,7435+38])
                  Pexp_sequence
                  expression (src/ppx.ml[220,6859+4]..[220,6859+69])
                    Pexp_apply
                    expression (src/ppx.ml[220,6859+5]..[220,6859+18])
                      Pexp_ident "print_endline" (src/ppx.ml[220,6859+5]..[220,6859+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[220,6859+19]..[220,6859+68])
                          Pexp_apply
                          expression (src/ppx.ml[220,6859+20]..[220,6859+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[220,6859+20]..[220,6859+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[220,6859+35]..[220,6859+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[220,6859+36]..[220,6859+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[220,6859+37]..[220,6859+53]),None)
                                  expression (src/ppx.ml[220,6859+56]..[220,6859+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[220,6859+56]..[220,6859+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[221,6930+4]..[229,7435+38])
                    Pexp_sequence
                    expression (src/ppx.ml[221,6930+4]..[221,6930+72])
                      Pexp_apply
                      expression (src/ppx.ml[221,6930+5]..[221,6930+18])
                        Pexp_ident "print_endline" (src/ppx.ml[221,6930+5]..[221,6930+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[221,6930+19]..[221,6930+71])
                            Pexp_apply
                            expression (src/ppx.ml[221,6930+20]..[221,6930+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[221,6930+20]..[221,6930+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[221,6930+35]..[221,6930+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[221,6930+36]..[221,6930+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[221,6930+37]..[221,6930+54]),None)
                                    expression (src/ppx.ml[221,6930+57]..[221,6930+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[221,6930+57]..[221,6930+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[222,7004+4]..[229,7435+38])
                      Pexp_sequence
                      expression (src/ppx.ml[222,7004+4]..[222,7004+66])
                        Pexp_apply
                        expression (src/ppx.ml[222,7004+5]..[222,7004+18])
                          Pexp_ident "print_endline" (src/ppx.ml[222,7004+5]..[222,7004+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[222,7004+19]..[222,7004+65])
                              Pexp_apply
                              expression (src/ppx.ml[222,7004+20]..[222,7004+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[222,7004+20]..[222,7004+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[222,7004+35]..[222,7004+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[222,7004+36]..[222,7004+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[222,7004+37]..[222,7004+49]),None)
                                      expression (src/ppx.ml[222,7004+52]..[222,7004+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[222,7004+52]..[222,7004+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[223,7072+4]..[229,7435+38])
                        Pexp_sequence
                        expression (src/ppx.ml[223,7072+4]..[223,7072+63])
                          Pexp_apply
                          expression (src/ppx.ml[223,7072+5]..[223,7072+18])
                            Pexp_ident "print_endline" (src/ppx.ml[223,7072+5]..[223,7072+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[223,7072+19]..[223,7072+62])
                                Pexp_apply
                                expression (src/ppx.ml[223,7072+20]..[223,7072+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[223,7072+20]..[223,7072+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[223,7072+35]..[223,7072+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[223,7072+36]..[223,7072+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[223,7072+37]..[223,7072+48]),None)
                                        expression (src/ppx.ml[223,7072+50]..[223,7072+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[223,7072+50]..[223,7072+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[224,7137+4]..[229,7435+38])
                          Pexp_sequence
                          expression (src/ppx.ml[224,7137+4]..[224,7137+29])
                            Pexp_apply
                            expression (src/ppx.ml[224,7137+5]..[224,7137+17])
                              Pexp_ident "process_kind" (src/ppx.ml[224,7137+5]..[224,7137+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[224,7137+18]..[224,7137+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[224,7137+18]..[224,7137+28])
                            ]
                          expression (src/ppx.ml[225,7168+4]..[229,7435+38])
                            Pexp_apply
                            expression (src/ppx.ml[225,7168+5]..[225,7168+18])
                              Pexp_ident "print_endline" (src/ppx.ml[225,7168+5]..[225,7168+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[225,7168+19]..[229,7435+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[225,7168+20]..[225,7168+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[225,7168+20]..[225,7168+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[225,7168+35]..[229,7435+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[225,7168+36]..[225,7168+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[225,7168+37]..[225,7168+51]),None)
                                          expression (src/ppx.ml[225,7168+55]..[225,7168+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[225,7168+55]..[225,7168+68])
                                          expression (src/ppx.ml[226,7238+36]..[226,7238+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[226,7238+37]..[226,7238+51]),None)
                                          expression (src/ppx.ml[226,7238+54]..[226,7238+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[226,7238+54]..[226,7238+68])
                                          expression (src/ppx.ml[227,7308+36]..[227,7308+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[227,7308+37]..[227,7308+47]),None)
                                          expression (src/ppx.ml[227,7308+50]..[227,7308+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[227,7308+50]..[227,7308+66])
                                          expression (src/ppx.ml[228,7376+36]..[228,7376+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[228,7376+37]..[228,7376+46]),None)
                                          expression (src/ppx.ml[228,7376+49]..[228,7376+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[228,7376+49]..[228,7376+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[231,7479+0]..[237,7614+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[231,7479+8]..[231,7479+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[231,7479+8]..[231,7479+30])
        expression (src/ppx.ml[231,7479+30]..[237,7614+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[231,7479+30]..[231,7479+33])
            Ppat_var "x" (src/ppx.ml[231,7479+31]..[231,7479+32])
          expression (src/ppx.ml[232,7515+2]..[237,7614+6])
            Pexp_match
            expression (src/ppx.ml[232,7515+8]..[232,7515+9])
              Pexp_ident "x" (src/ppx.ml[232,7515+8]..[232,7515+9])
            [
              <case>
                pattern (src/ppx.ml[233,7530+4]..[233,7530+6])
                  Ppat_construct "[]" (src/ppx.ml[233,7530+4]..[233,7530+6])
                  None
                expression (src/ppx.ml[233,7530+10]..[233,7530+12])
                  Pexp_construct "()" (src/ppx.ml[233,7530+10]..[233,7530+12])
                  None
              <case>
                pattern (src/ppx.ml[234,7543+4]..[234,7543+10])
                  Ppat_construct "::" (src/ppx.ml[234,7543+6]..[234,7543+8])
                  Some
                    []
                    pattern (src/ppx.ml[234,7543+4]..[234,7543+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[234,7543+4]..[234,7543+5])
                          Ppat_var "h" (src/ppx.ml[234,7543+4]..[234,7543+5])
                        pattern (src/ppx.ml[234,7543+9]..[234,7543+10])
                          Ppat_var "t" (src/ppx.ml[234,7543+9]..[234,7543+10])
                      ]
                expression (src/ppx.ml[235,7557+4]..[237,7614+6])
                  Pexp_sequence
                  expression (src/ppx.ml[235,7557+4]..[235,7557+23])
                    Pexp_apply
                    expression (src/ppx.ml[235,7557+5]..[235,7557+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[235,7557+5]..[235,7557+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[235,7557+21]..[235,7557+22])
                          Pexp_ident "h" (src/ppx.ml[235,7557+21]..[235,7557+22])
                    ]
                  expression (src/ppx.ml[236,7582+4]..[237,7614+6])
                    Pexp_sequence
                    expression (src/ppx.ml[236,7582+4]..[236,7582+30])
                      Pexp_apply
                      expression (src/ppx.ml[236,7582+5]..[236,7582+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[236,7582+5]..[236,7582+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[236,7582+28]..[236,7582+29])
                            Pexp_ident "t" (src/ppx.ml[236,7582+28]..[236,7582+29])
                      ]
                    expression (src/ppx.ml[237,7614+4]..[237,7614+6])
                      Pexp_construct "()" (src/ppx.ml[237,7614+4]..[237,7614+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[239,7626+0]..[265,9590+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[239,7626+4]..[239,7626+13])
          Ppat_var "printdesc" (src/ppx.ml[239,7626+4]..[239,7626+13])
        expression (src/ppx.ml[239,7626+13]..[265,9590+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[239,7626+13]..[239,7626+37])
            Ppat_constraint
            pattern (src/ppx.ml[239,7626+14]..[239,7626+15])
              Ppat_var "x" (src/ppx.ml[239,7626+14]..[239,7626+15])
            core_type (src/ppx.ml[239,7626+17]..[239,7626+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[239,7626+17]..[239,7626+36])
              []
          expression (src/ppx.ml[239,7626+38]..[265,9590+128])
            Pexp_constraint
            expression (src/ppx.ml[240,7672+2]..[265,9590+128])
              Pexp_sequence
              expression (src/ppx.ml[240,7672+2]..[240,7672+68])
                Pexp_apply
                expression (src/ppx.ml[240,7672+3]..[240,7672+16])
                  Pexp_ident "print_endline" (src/ppx.ml[240,7672+3]..[240,7672+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[240,7672+17]..[240,7672+67])
                      Pexp_apply
                      expression (src/ppx.ml[240,7672+18]..[240,7672+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[240,7672+18]..[240,7672+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[240,7672+33]..[240,7672+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[240,7672+34]..[240,7672+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[240,7672+35]..[240,7672+61]),None)
                              expression (src/ppx.ml[240,7672+64]..[240,7672+65])
                                Pexp_ident "x" (src/ppx.ml[240,7672+64]..[240,7672+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[241,7742+2]..[265,9590+128])
                Pexp_match
                expression (src/ppx.ml[241,7742+8]..[241,7742+9])
                  Pexp_ident "x" (src/ppx.ml[241,7742+8]..[241,7742+9])
                [
                  <case>
                    pattern (src/ppx.ml[242,7757+4]..[242,7757+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[242,7757+4]..[242,7757+13])
                      Some
                        []
                        pattern (src/ppx.ml[242,7757+14]..[242,7757+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[242,7757+15]..[242,7757+25])
                              Ppat_var "expression" (src/ppx.ml[242,7757+15]..[242,7757+25])
                            pattern (src/ppx.ml[242,7757+26]..[242,7757+36])
                              Ppat_var "attributes" (src/ppx.ml[242,7757+26]..[242,7757+36])
                          ]
                    expression (src/ppx.ml[242,7757+41]..[242,7757+117])
                      Pexp_apply
                      expression (src/ppx.ml[242,7757+42]..[242,7757+55])
                        Pexp_ident "print_endline" (src/ppx.ml[242,7757+42]..[242,7757+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[242,7757+56]..[242,7757+116])
                            Pexp_apply
                            expression (src/ppx.ml[242,7757+57]..[242,7757+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[242,7757+57]..[242,7757+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[242,7757+72]..[242,7757+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[242,7757+73]..[242,7757+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[242,7757+74]..[242,7757+90]),None)
                                    expression (src/ppx.ml[242,7757+93]..[242,7757+103])
                                      Pexp_ident "expression" (src/ppx.ml[242,7757+93]..[242,7757+103])
                                    expression (src/ppx.ml[242,7757+104]..[242,7757+114])
                                      Pexp_ident "attributes" (src/ppx.ml[242,7757+104]..[242,7757+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[244,7895+4]..[244,7895+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[244,7895+4]..[244,7895+14])
                      Some
                        []
                        pattern (src/ppx.ml[244,7895+15]..[244,7895+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[244,7895+16]..[244,7895+24])
                              Ppat_var "rec_flag" (src/ppx.ml[244,7895+16]..[244,7895+24])
                            pattern (src/ppx.ml[244,7895+26]..[244,7895+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[244,7895+26]..[244,7895+44])
                          ]
                    expression (src/ppx.ml[244,7895+48]..[245,8029+48])
                      Pexp_sequence
                      expression (src/ppx.ml[244,7895+48]..[244,7895+132])
                        Pexp_apply
                        expression (src/ppx.ml[244,7895+49]..[244,7895+62])
                          Pexp_ident "print_endline" (src/ppx.ml[244,7895+49]..[244,7895+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[244,7895+63]..[244,7895+131])
                              Pexp_apply
                              expression (src/ppx.ml[244,7895+64]..[244,7895+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[244,7895+64]..[244,7895+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[244,7895+79]..[244,7895+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[244,7895+80]..[244,7895+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[244,7895+81]..[244,7895+98]),None)
                                      expression (src/ppx.ml[244,7895+101]..[244,7895+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[244,7895+101]..[244,7895+109])
                                      expression (src/ppx.ml[244,7895+111]..[244,7895+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[244,7895+111]..[244,7895+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[245,8029+4]..[245,8029+48])
                        Pexp_apply
                        expression (src/ppx.ml[245,8029+4]..[245,8029+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[245,8029+4]..[245,8029+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[245,8029+28]..[245,8029+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[245,8029+29]..[245,8029+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[246,8078+4]..[246,8078+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[246,8078+4]..[246,8078+18])
                      Some
                        []
                        pattern (src/ppx.ml[246,8078+19]..[246,8078+36])
                          Ppat_var "value_description" (src/ppx.ml[246,8078+19]..[246,8078+36])
                    expression (src/ppx.ml[246,8078+39]..[246,8078+116])
                      Pexp_apply
                      expression (src/ppx.ml[246,8078+40]..[246,8078+53])
                        Pexp_ident "print_endline" (src/ppx.ml[246,8078+40]..[246,8078+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[246,8078+54]..[246,8078+115])
                            Pexp_apply
                            expression (src/ppx.ml[246,8078+55]..[246,8078+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[246,8078+55]..[246,8078+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[246,8078+70]..[246,8078+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[246,8078+71]..[246,8078+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[246,8078+72]..[246,8078+93]),None)
                                    expression (src/ppx.ml[246,8078+96]..[246,8078+113])
                                      Pexp_ident "value_description" (src/ppx.ml[246,8078+96]..[246,8078+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[248,8196+4]..[248,8196+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[248,8196+4]..[248,8196+13])
                      Some
                        []
                        pattern (src/ppx.ml[248,8196+14]..[248,8196+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[248,8196+15]..[248,8196+23])
                              Ppat_var "rec_flag" (src/ppx.ml[248,8196+15]..[248,8196+23])
                            pattern (src/ppx.ml[248,8196+25]..[248,8196+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[248,8196+25]..[248,8196+46])
                          ]
                    expression (src/ppx.ml[250,8275+4]..[251,8326+90])
                      Pexp_sequence
                      expression (src/ppx.ml[250,8275+4]..[250,8275+49])
                        Pexp_apply
                        expression (src/ppx.ml[250,8275+4]..[250,8275+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[250,8275+4]..[250,8275+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[250,8275+26]..[250,8275+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[250,8275+27]..[250,8275+48])
                        ]
                      expression (src/ppx.ml[251,8326+4]..[251,8326+90])
                        Pexp_apply
                        expression (src/ppx.ml[251,8326+5]..[251,8326+18])
                          Pexp_ident "print_endline" (src/ppx.ml[251,8326+5]..[251,8326+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[251,8326+19]..[251,8326+89])
                              Pexp_apply
                              expression (src/ppx.ml[251,8326+20]..[251,8326+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[251,8326+20]..[251,8326+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[251,8326+35]..[251,8326+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[251,8326+36]..[251,8326+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[251,8326+37]..[251,8326+53]),None)
                                      expression (src/ppx.ml[251,8326+56]..[251,8326+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[251,8326+56]..[251,8326+64])
                                      expression (src/ppx.ml[251,8326+66]..[251,8326+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[251,8326+66]..[251,8326+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[254,8419+4]..[254,8419+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[254,8419+4]..[254,8419+15])
                      Some
                        []
                        pattern (src/ppx.ml[254,8419+17]..[254,8419+31])
                          Ppat_var "type_extension" (src/ppx.ml[254,8419+17]..[254,8419+31])
                    expression (src/ppx.ml[254,8419+34]..[254,8419+105])
                      Pexp_apply
                      expression (src/ppx.ml[254,8419+35]..[254,8419+48])
                        Pexp_ident "print_endline" (src/ppx.ml[254,8419+35]..[254,8419+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[254,8419+49]..[254,8419+104])
                            Pexp_apply
                            expression (src/ppx.ml[254,8419+50]..[254,8419+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[254,8419+50]..[254,8419+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[254,8419+65]..[254,8419+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[254,8419+66]..[254,8419+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[254,8419+67]..[254,8419+85]),None)
                                    expression (src/ppx.ml[254,8419+88]..[254,8419+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[254,8419+88]..[254,8419+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8525+4]..[255,8525+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[255,8525+4]..[255,8525+18])
                      Some
                        []
                        pattern (src/ppx.ml[255,8525+19]..[255,8525+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[255,8525+19]..[255,8525+40])
                    expression (src/ppx.ml[255,8525+43]..[255,8525+124])
                      Pexp_apply
                      expression (src/ppx.ml[255,8525+44]..[255,8525+57])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8525+44]..[255,8525+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8525+58]..[255,8525+123])
                            Pexp_apply
                            expression (src/ppx.ml[255,8525+59]..[255,8525+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8525+59]..[255,8525+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8525+74]..[255,8525+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8525+75]..[255,8525+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[255,8525+76]..[255,8525+97]),None)
                                    expression (src/ppx.ml[255,8525+100]..[255,8525+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[255,8525+100]..[255,8525+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[256,8650+4]..[256,8650+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[256,8650+4]..[256,8650+15])
                      Some
                        []
                        pattern (src/ppx.ml[256,8650+17]..[256,8650+31])
                          Ppat_var "module_binding" (src/ppx.ml[256,8650+17]..[256,8650+31])
                    expression (src/ppx.ml[256,8650+34]..[256,8650+104])
                      Pexp_apply
                      expression (src/ppx.ml[256,8650+35]..[256,8650+48])
                        Pexp_ident "print_endline" (src/ppx.ml[256,8650+35]..[256,8650+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[256,8650+49]..[256,8650+103])
                            Pexp_apply
                            expression (src/ppx.ml[256,8650+50]..[256,8650+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[256,8650+50]..[256,8650+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[256,8650+65]..[256,8650+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[256,8650+66]..[256,8650+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[256,8650+67]..[256,8650+85]),None)
                                    expression (src/ppx.ml[256,8650+87]..[256,8650+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[256,8650+87]..[256,8650+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8755+4]..[257,8755+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[257,8755+4]..[257,8755+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8755+20]..[257,8755+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[257,8755+20]..[257,8755+39])
                    expression (src/ppx.ml[257,8755+42]..[257,8755+121])
                      Pexp_apply
                      expression (src/ppx.ml[257,8755+43]..[257,8755+56])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8755+43]..[257,8755+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8755+57]..[257,8755+120])
                            Pexp_apply
                            expression (src/ppx.ml[257,8755+58]..[257,8755+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8755+58]..[257,8755+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8755+73]..[257,8755+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8755+74]..[257,8755+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[257,8755+75]..[257,8755+96]),None)
                                    expression (src/ppx.ml[257,8755+99]..[257,8755+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[257,8755+99]..[257,8755+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[258,8877+4]..[258,8877+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[258,8877+4]..[258,8877+16])
                      Some
                        []
                        pattern (src/ppx.ml[258,8877+17]..[258,8877+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[258,8877+17]..[258,8877+40])
                    expression (src/ppx.ml[258,8877+43]..[258,8877+124])
                      Pexp_apply
                      expression (src/ppx.ml[258,8877+44]..[258,8877+57])
                        Pexp_ident "print_endline" (src/ppx.ml[258,8877+44]..[258,8877+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[258,8877+58]..[258,8877+123])
                            Pexp_apply
                            expression (src/ppx.ml[258,8877+59]..[258,8877+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[258,8877+59]..[258,8877+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[258,8877+74]..[258,8877+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[258,8877+75]..[258,8877+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[258,8877+76]..[258,8877+95]),None)
                                    expression (src/ppx.ml[258,8877+98]..[258,8877+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[258,8877+98]..[258,8877+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[260,9019+4]..[260,9019+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[260,9019+4]..[260,9019+13])
                      Some
                        []
                        pattern (src/ppx.ml[260,9019+14]..[260,9019+30])
                          Ppat_var "open_description" (src/ppx.ml[260,9019+14]..[260,9019+30])
                    expression (src/ppx.ml[260,9019+33]..[260,9019+103])
                      Pexp_apply
                      expression (src/ppx.ml[260,9019+34]..[260,9019+47])
                        Pexp_ident "print_endline" (src/ppx.ml[260,9019+34]..[260,9019+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[260,9019+48]..[260,9019+102])
                            Pexp_apply
                            expression (src/ppx.ml[260,9019+49]..[260,9019+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[260,9019+49]..[260,9019+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[260,9019+64]..[260,9019+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[260,9019+65]..[260,9019+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[260,9019+66]..[260,9019+81]),None)
                                    expression (src/ppx.ml[260,9019+84]..[260,9019+100])
                                      Pexp_ident "open_description" (src/ppx.ml[260,9019+84]..[260,9019+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,9123+4]..[261,9123+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[261,9123+4]..[261,9123+14])
                      Some
                        []
                        pattern (src/ppx.ml[261,9123+15]..[261,9123+36])
                          Ppat_var "class_declarations" (src/ppx.ml[261,9123+16]..[261,9123+34])
                    expression (src/ppx.ml[261,9123+39]..[261,9123+113])
                      Pexp_apply
                      expression (src/ppx.ml[261,9123+40]..[261,9123+53])
                        Pexp_ident "print_endline" (src/ppx.ml[261,9123+40]..[261,9123+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[261,9123+54]..[261,9123+112])
                            Pexp_apply
                            expression (src/ppx.ml[261,9123+55]..[261,9123+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[261,9123+55]..[261,9123+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[261,9123+70]..[261,9123+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[261,9123+71]..[261,9123+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[261,9123+72]..[261,9123+89]),None)
                                    expression (src/ppx.ml[261,9123+92]..[261,9123+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[261,9123+92]..[261,9123+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[262,9237+4]..[262,9237+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[262,9237+4]..[262,9237+19])
                      Some
                        []
                        pattern (src/ppx.ml[262,9237+20]..[262,9237+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[262,9237+21]..[262,9237+44])
                    expression (src/ppx.ml[262,9237+48]..[262,9237+132])
                      Pexp_apply
                      expression (src/ppx.ml[262,9237+49]..[262,9237+62])
                        Pexp_ident "print_endline" (src/ppx.ml[262,9237+49]..[262,9237+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[262,9237+63]..[262,9237+131])
                            Pexp_apply
                            expression (src/ppx.ml[262,9237+64]..[262,9237+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[262,9237+64]..[262,9237+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[262,9237+79]..[262,9237+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[262,9237+80]..[262,9237+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[262,9237+81]..[262,9237+103]),None)
                                    expression (src/ppx.ml[262,9237+106]..[262,9237+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[262,9237+106]..[262,9237+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[263,9370+4]..[263,9370+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[263,9370+4]..[263,9370+16])
                      Some
                        []
                        pattern (src/ppx.ml[263,9370+18]..[263,9370+39])
                          Ppat_var "include_declaration" (src/ppx.ml[263,9370+19]..[263,9370+38])
                    expression (src/ppx.ml[263,9370+41]..[263,9370+117])
                      Pexp_apply
                      expression (src/ppx.ml[263,9370+42]..[263,9370+55])
                        Pexp_ident "print_endline" (src/ppx.ml[263,9370+42]..[263,9370+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[263,9370+56]..[263,9370+116])
                            Pexp_apply
                            expression (src/ppx.ml[263,9370+57]..[263,9370+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[263,9370+57]..[263,9370+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[263,9370+72]..[263,9370+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[263,9370+73]..[263,9370+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[263,9370+74]..[263,9370+93]),None)
                                    expression (src/ppx.ml[263,9370+95]..[263,9370+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[263,9370+95]..[263,9370+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[264,9488+4]..[264,9488+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[264,9488+4]..[264,9488+18])
                      Some
                        []
                        pattern (src/ppx.ml[264,9488+19]..[264,9488+30])
                          Ppat_var "attribute" (src/ppx.ml[264,9488+20]..[264,9488+29])
                    expression (src/ppx.ml[264,9488+32]..[264,9488+101])
                      Pexp_apply
                      expression (src/ppx.ml[264,9488+33]..[264,9488+46])
                        Pexp_ident "print_endline" (src/ppx.ml[264,9488+33]..[264,9488+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,9488+47]..[264,9488+100])
                            Pexp_apply
                            expression (src/ppx.ml[264,9488+48]..[264,9488+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[264,9488+48]..[264,9488+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[264,9488+63]..[264,9488+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[264,9488+64]..[264,9488+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[264,9488+65]..[264,9488+86]),None)
                                    expression (src/ppx.ml[264,9488+89]..[264,9488+98])
                                      Pexp_ident "attribute" (src/ppx.ml[264,9488+89]..[264,9488+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[265,9590+4]..[265,9590+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[265,9590+4]..[265,9590+18])
                      Some
                        []
                        pattern (src/ppx.ml[265,9590+19]..[265,9590+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[265,9590+21]..[265,9590+30])
                              Ppat_var "extension" (src/ppx.ml[265,9590+21]..[265,9590+30])
                            pattern (src/ppx.ml[265,9590+33]..[265,9590+43])
                              Ppat_var "attributes" (src/ppx.ml[265,9590+33]..[265,9590+43])
                          ]
                    expression (src/ppx.ml[265,9590+46]..[265,9590+128])
                      Pexp_apply
                      expression (src/ppx.ml[265,9590+47]..[265,9590+60])
                        Pexp_ident "print_endline" (src/ppx.ml[265,9590+47]..[265,9590+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,9590+61]..[265,9590+127])
                            Pexp_apply
                            expression (src/ppx.ml[265,9590+62]..[265,9590+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,9590+62]..[265,9590+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,9590+77]..[265,9590+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,9590+78]..[265,9590+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[265,9590+79]..[265,9590+100]),None)
                                    expression (src/ppx.ml[265,9590+103]..[265,9590+112])
                                      Pexp_ident "extension" (src/ppx.ml[265,9590+103]..[265,9590+112])
                                    expression (src/ppx.ml[265,9590+115]..[265,9590+125])
                                      Pexp_ident "attributes" (src/ppx.ml[265,9590+115]..[265,9590+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[239,7626+39]..[239,7626+43])
              Ptyp_constr "unit" (src/ppx.ml[239,7626+39]..[239,7626+43])
              []
    ]
  structure_item (src/ppx.ml[267,9720+0]..[267,9720+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,9720+4]..[267,9720+7])
          Ppat_var "foo" (src/ppx.ml[267,9720+4]..[267,9720+7])
        expression (src/ppx.ml[267,9720+10]..[267,9720+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[269,9735+0]..[277,9954+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[269,9735+4]..[269,9735+12])
          Ppat_var "printone" (src/ppx.ml[269,9735+4]..[269,9735+12])
        expression (src/ppx.ml[269,9735+13]..[277,9954+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[269,9735+13]..[269,9735+34])
            Ppat_constraint
            pattern (src/ppx.ml[269,9735+14]..[269,9735+15])
              Ppat_var "x" (src/ppx.ml[269,9735+14]..[269,9735+15])
            core_type (src/ppx.ml[269,9735+18]..[269,9735+32])
              Ptyp_constr "structure_item" (src/ppx.ml[269,9735+18]..[269,9735+32])
              []
          expression (src/ppx.ml[269,9735+35]..[277,9954+6])
            Pexp_constraint
            expression (src/ppx.ml[270,9778+2]..[277,9954+6])
              Pexp_match
              expression (src/ppx.ml[270,9778+8]..[270,9778+9])
                Pexp_ident "x" (src/ppx.ml[270,9778+8]..[270,9778+9])
              [
                <case>
                  pattern (src/ppx.ml[271,9793+3]..[274,9843+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[272,9798+4]..[272,9798+13]) ghost
                        pattern (src/ppx.ml[272,9798+4]..[272,9798+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[272,9798+4]..[272,9798+13])
                    ]
                  expression (src/ppx.ml[276,9927+4]..[277,9954+6])
                    Pexp_sequence
                    expression (src/ppx.ml[276,9927+4]..[276,9927+25])
                      Pexp_apply
                      expression (src/ppx.ml[276,9927+5]..[276,9927+14])
                        Pexp_ident "printdesc" (src/ppx.ml[276,9927+5]..[276,9927+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9927+15]..[276,9927+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[276,9927+15]..[276,9927+24])
                      ]
                    expression (src/ppx.ml[277,9954+4]..[277,9954+6])
                      Pexp_construct "()" (src/ppx.ml[277,9954+4]..[277,9954+6])
                      None
              ]
            core_type (src/ppx.ml[269,9735+36]..[269,9735+40])
              Ptyp_constr "unit" (src/ppx.ml[269,9735+36]..[269,9735+40])
              []
    ]
  structure_item (src/ppx.ml[283,10074+0]..[285,10155+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[283,10074+4]..[283,10074+13])
          Ppat_var "printone2" (src/ppx.ml[283,10074+4]..[283,10074+13])
        expression (src/ppx.ml[283,10074+14]..[285,10155+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[283,10074+14]..[283,10074+15])
            Ppat_var "x" (src/ppx.ml[283,10074+14]..[283,10074+15])
          expression (src/ppx.ml[283,10074+16]..[285,10155+12])
            Pexp_constraint
            expression (src/ppx.ml[284,10098+2]..[285,10155+12])
              Pexp_sequence
              expression (src/ppx.ml[284,10098+2]..[284,10098+55])
                Pexp_apply
                expression (src/ppx.ml[284,10098+3]..[284,10098+16])
                  Pexp_ident "print_endline" (src/ppx.ml[284,10098+3]..[284,10098+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[284,10098+17]..[284,10098+54])
                      Pexp_apply
                      expression (src/ppx.ml[284,10098+18]..[284,10098+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[284,10098+18]..[284,10098+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,10098+33]..[284,10098+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[284,10098+34]..[284,10098+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[284,10098+35]..[284,10098+49]),None)
                              expression (src/ppx.ml[284,10098+51]..[284,10098+52])
                                Pexp_ident "x" (src/ppx.ml[284,10098+51]..[284,10098+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[285,10155+2]..[285,10155+12])
                Pexp_apply
                expression (src/ppx.ml[285,10155+2]..[285,10155+10])
                  Pexp_ident "printone" (src/ppx.ml[285,10155+2]..[285,10155+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[285,10155+11]..[285,10155+12])
                      Pexp_ident "x" (src/ppx.ml[285,10155+11]..[285,10155+12])
                ]
            core_type (src/ppx.ml[283,10074+17]..[283,10074+21])
              Ptyp_constr "unit" (src/ppx.ml[283,10074+17]..[283,10074+21])
              []
    ]
  structure_item (src/ppx.ml[287,10171+0]..[289,10202+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10171+4]..[287,10171+9])
          Ppat_var "proc1" (src/ppx.ml[287,10171+4]..[287,10171+9])
        expression (src/ppx.ml[287,10171+10]..[289,10202+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[287,10171+10]..[287,10171+11])
            Ppat_var "x" (src/ppx.ml[287,10171+10]..[287,10171+11])
          expression (src/ppx.ml[288,10187+2]..[289,10202+3])
            Pexp_sequence
            expression (src/ppx.ml[288,10187+2]..[288,10187+13])
              Pexp_apply
              expression (src/ppx.ml[288,10187+2]..[288,10187+11])
                Pexp_ident "printone2" (src/ppx.ml[288,10187+2]..[288,10187+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[288,10187+12]..[288,10187+13])
                    Pexp_ident "x" (src/ppx.ml[288,10187+12]..[288,10187+13])
              ]
            expression (src/ppx.ml[289,10202+2]..[289,10202+3])
              Pexp_ident "x" (src/ppx.ml[289,10202+2]..[289,10202+3])
    ]
  structure_item (src/ppx.ml[291,10207+0]..[294,10356+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[291,10207+4]..[291,10207+9])
          Ppat_var "debug" (src/ppx.ml[291,10207+4]..[291,10207+9])
        expression (src/ppx.ml[291,10207+10]..[294,10356+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[291,10207+10]..[291,10207+14])
            Ppat_var "proc" (src/ppx.ml[291,10207+10]..[291,10207+14])
          expression (src/ppx.ml[291,10207+15]..[294,10356+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[291,10207+15]..[291,10207+18])
              Ppat_var "lst" (src/ppx.ml[291,10207+15]..[291,10207+18])
            expression (src/ppx.ml[291,10207+19]..[294,10356+4])
              Pexp_constraint
              expression (src/ppx.ml[292,10235+2]..[294,10356+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[292,10235+6]..[292,10235+12])
                      Ppat_var "result" (src/ppx.ml[292,10235+6]..[292,10235+12])
                    expression (src/ppx.ml[292,10235+15]..[292,10235+32])
                      Pexp_apply
                      expression (src/ppx.ml[292,10235+15]..[292,10235+23])
                        Pexp_ident "List.map" (src/ppx.ml[292,10235+15]..[292,10235+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[292,10235+24]..[292,10235+28])
                            Pexp_ident "proc" (src/ppx.ml[292,10235+24]..[292,10235+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[292,10235+29]..[292,10235+32])
                            Pexp_ident "lst" (src/ppx.ml[292,10235+29]..[292,10235+32])
                      ]
                ]
                expression (src/ppx.ml[293,10271+2]..[294,10356+4])
                  Pexp_sequence
                  expression (src/ppx.ml[293,10271+2]..[293,10271+83])
                    Pexp_apply
                    expression (src/ppx.ml[293,10271+2]..[293,10271+11])
                      Pexp_ident "List.iter" (src/ppx.ml[293,10271+2]..[293,10271+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[293,10271+12]..[293,10271+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[293,10271+17]..[293,10271+18])
                            Ppat_var "i" (src/ppx.ml[293,10271+17]..[293,10271+18])
                          expression (src/ppx.ml[293,10271+22]..[293,10271+75])
                            Pexp_apply
                            expression (src/ppx.ml[293,10271+22]..[293,10271+35])
                              Pexp_ident "print_endline" (src/ppx.ml[293,10271+22]..[293,10271+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[293,10271+36]..[293,10271+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[293,10271+37]..[293,10271+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[293,10271+37]..[293,10271+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[293,10271+52]..[293,10271+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[293,10271+53]..[293,10271+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[293,10271+54]..[293,10271+69]),None)
                                          expression (src/ppx.ml[293,10271+72]..[293,10271+73])
                                            Pexp_ident "i" (src/ppx.ml[293,10271+72]..[293,10271+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[293,10271+77]..[293,10271+83])
                          Pexp_ident "result" (src/ppx.ml[293,10271+77]..[293,10271+83])
                    ]
                  expression (src/ppx.ml[294,10356+2]..[294,10356+4])
                    Pexp_construct "()" (src/ppx.ml[294,10356+2]..[294,10356+4])
                    None
              core_type (src/ppx.ml[291,10207+21]..[291,10207+25])
                Ptyp_constr "unit" (src/ppx.ml[291,10207+21]..[291,10207+25])
                []
    ]
  structure_item (src/ppx.ml[296,10378+0]..[299,10502+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10378+4]..[296,10378+13])
          Ppat_var "transform" (src/ppx.ml[296,10378+4]..[296,10378+13])
        expression (src/ppx.ml[296,10378+14]..[299,10502+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[296,10378+14]..[296,10378+15])
            Ppat_var "x" (src/ppx.ml[296,10378+14]..[296,10378+15])
          expression (src/ppx.ml[297,10433+2]..[299,10502+3])
            Pexp_sequence
            expression (src/ppx.ml[297,10433+2]..[297,10433+48])
              Pexp_apply
              expression (src/ppx.ml[297,10433+3]..[297,10433+16])
                Pexp_ident "print_endline" (src/ppx.ml[297,10433+3]..[297,10433+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[297,10433+17]..[297,10433+47])
                    Pexp_apply
                    expression (src/ppx.ml[297,10433+18]..[297,10433+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[297,10433+18]..[297,10433+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[297,10433+33]..[297,10433+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[297,10433+34]..[297,10433+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[297,10433+35]..[297,10433+42]),None)
                            expression (src/ppx.ml[297,10433+44]..[297,10433+45])
                              Pexp_ident "x" (src/ppx.ml[297,10433+44]..[297,10433+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[298,10483+2]..[299,10502+3])
              Pexp_sequence
              expression (src/ppx.ml[298,10483+2]..[298,10483+17])
                Pexp_apply
                expression (src/ppx.ml[298,10483+3]..[298,10483+8])
                  Pexp_ident "debug" (src/ppx.ml[298,10483+3]..[298,10483+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[298,10483+9]..[298,10483+14])
                      Pexp_ident "proc1" (src/ppx.ml[298,10483+9]..[298,10483+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[298,10483+15]..[298,10483+16])
                      Pexp_ident "x" (src/ppx.ml[298,10483+15]..[298,10483+16])
                ]
              expression (src/ppx.ml[299,10502+2]..[299,10502+3])
                Pexp_ident "x" (src/ppx.ml[299,10502+2]..[299,10502+3])
    ]
  structure_item (src/ppx.ml[301,10509+1]..[301,10509+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[301,10509+5]..[301,10509+7])
          Ppat_construct "()" (src/ppx.ml[301,10509+5]..[301,10509+7])
          None
        expression (src/ppx.ml[301,10509+10]..[301,10509+69])
          Pexp_apply
          expression (src/ppx.ml[301,10509+10]..[301,10509+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[301,10509+10]..[301,10509+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[301,10509+47]..[301,10509+56])
                Pexp_ident "transform" (src/ppx.ml[301,10509+47]..[301,10509+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[301,10509+57]..[301,10509+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[301,10509+58]..[301,10509+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_constr (a, b) ->
      (process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline (Batteries.dump ("DEBUG:ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_Ptype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_Ptype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_Ptype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[145,4651+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..src/ppx.ml[69,1879+27])
          Tpat_var "process_record_kind/1437"
        expression (src/ppx.ml[69,1879+27]..src/ppx.ml[83,2363+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+27]..src/ppx.ml[69,1879+30])
                Tpat_var "x/1442"
              expression (src/ppx.ml[70,1912+2]..src/ppx.ml[83,2363+47])
                Texp_match
                expression (src/ppx.ml[70,1912+8]..src/ppx.ml[70,1912+9])
                  Texp_ident "x/1442"
                [
                  <case>
                    pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                      Tpat_value
                      pattern (src/ppx.ml[71,1927+4]..src/ppx.ml[77,2108+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[72,1933+5]..src/ppx.ml[72,1933+13])
                              Tpat_var "pld_name/1443"
                          "pld_mutable"
                            pattern (src/ppx.ml[73,1966+5]..src/ppx.ml[73,1966+16])
                              Tpat_var "pld_mutable/1444"
                          "pld_type"
                            pattern (src/ppx.ml[74,2004+5]..src/ppx.ml[74,2004+13])
                              Tpat_var "pld_type/1445"
                          "pld_loc"
                            pattern (src/ppx.ml[75,2036+5]..src/ppx.ml[75,2036+12])
                              Tpat_var "pld_loc/1446"
                          "pld_attributes"
                            pattern (src/ppx.ml[76,2068+5]..src/ppx.ml[76,2068+19])
                              Tpat_var "pld_attributes/1447"
                        ]
                    expression (src/ppx.ml[78,2116+4]..src/ppx.ml[83,2363+47])
                      Texp_apply
                      expression (src/ppx.ml[78,2116+5]..src/ppx.ml[78,2116+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[78,2116+19]..src/ppx.ml[83,2363+46])
                            Texp_apply
                            expression (src/ppx.ml[78,2116+20]..src/ppx.ml[78,2116+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[78,2116+35]..src/ppx.ml[83,2363+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[78,2116+36]..src/ppx.ml[78,2116+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[78,2116+37]..src/ppx.ml[78,2116+56]),None)
                                    expression (src/ppx.ml[79,2177+36]..src/ppx.ml[79,2177+44])
                                      Texp_ident "pld_name/1443"
                                    expression (src/ppx.ml[80,2223+36]..src/ppx.ml[80,2223+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[80,2223+37]..src/ppx.ml[80,2223+44]),None)
                                    expression (src/ppx.ml[81,2270+36]..src/ppx.ml[81,2270+47])
                                      Texp_ident "pld_mutable/1444"
                                    expression (src/ppx.ml[82,2319+36]..src/ppx.ml[82,2319+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[82,2319+37]..src/ppx.ml[82,2319+41]),None)
                                    expression (src/ppx.ml[83,2363+36]..src/ppx.ml[83,2363+44])
                                      Texp_ident "pld_type/1445"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[85,2415+0]..src/ppx.ml[85,2415+22])
          Tpat_var "process_core_type_desc/1438"
        expression (src/ppx.ml[85,2415+23]..src/ppx.ml[119,3979+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2415+23]..src/ppx.ml[85,2415+24])
                Tpat_var "x/1448"
              expression (src/ppx.ml[86,2442+2]..src/ppx.ml[119,3979+65])
                Texp_match
                expression (src/ppx.ml[86,2442+8]..src/ppx.ml[86,2442+9])
                  Texp_ident "x/1448"
                [
                  <case>
                    pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+12])
                      Tpat_value
                      pattern (src/ppx.ml[87,2457+4]..src/ppx.ml[87,2457+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[87,2457+17]..src/ppx.ml[87,2457+69])
                      Texp_apply
                      expression (src/ppx.ml[87,2457+18]..src/ppx.ml[87,2457+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[87,2457+32]..src/ppx.ml[87,2457+68])
                            Texp_apply
                            expression (src/ppx.ml[87,2457+33]..src/ppx.ml[87,2457+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[87,2457+48]..src/ppx.ml[87,2457+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[87,2457+50]..src/ppx.ml[87,2457+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[88,2527+4]..src/ppx.ml[88,2527+17])
                      Tpat_value
                      pattern (src/ppx.ml[88,2527+4]..src/ppx.ml[88,2527+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[88,2527+13]..src/ppx.ml[88,2527+17])
                            Tpat_var "name/1449"
                        ]
                        None
                    expression (src/ppx.ml[88,2527+20]..src/ppx.ml[88,2527+80])
                      Texp_apply
                      expression (src/ppx.ml[88,2527+21]..src/ppx.ml[88,2527+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[88,2527+35]..src/ppx.ml[88,2527+79])
                            Texp_apply
                            expression (src/ppx.ml[88,2527+36]..src/ppx.ml[88,2527+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[88,2527+51]..src/ppx.ml[88,2527+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[88,2527+52]..src/ppx.ml[88,2527+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[88,2527+53]..src/ppx.ml[88,2527+68]),None)
                                    expression (src/ppx.ml[88,2527+73]..src/ppx.ml[88,2527+77])
                                      Texp_ident "name/1449"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[89,2608+4]..src/ppx.ml[89,2608+51])
                      Tpat_value
                      pattern (src/ppx.ml[89,2608+4]..src/ppx.ml[89,2608+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[89,2608+16]..src/ppx.ml[89,2608+25])
                            Tpat_var "arg_label/1450"
                          pattern (src/ppx.ml[89,2608+28]..src/ppx.ml[89,2608+37])
                            Tpat_var "core_type/1451"
                          pattern (src/ppx.ml[89,2608+40]..src/ppx.ml[89,2608+50])
                            Tpat_var "core_type2/1452"
                        ]
                        None
                    expression (src/ppx.ml[90,2663+4]..src/ppx.ml[90,2663+61])
                      Texp_apply
                      expression (src/ppx.ml[90,2663+5]..src/ppx.ml[90,2663+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[90,2663+19]..src/ppx.ml[90,2663+60])
                            Texp_apply
                            expression (src/ppx.ml[90,2663+20]..src/ppx.ml[90,2663+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[90,2663+35]..src/ppx.ml[90,2663+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[90,2663+37]..src/ppx.ml[90,2663+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[91,2725+4]..src/ppx.ml[91,2725+16])
                      Tpat_value
                      pattern (src/ppx.ml[91,2725+4]..src/ppx.ml[91,2725+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[91,2725+15]..src/ppx.ml[91,2725+16])
                            Tpat_var "a/1453"
                        ]
                        None
                    expression (src/ppx.ml[93,2773+4]..src/ppx.ml[93,2773+59])
                      Texp_apply
                      expression (src/ppx.ml[93,2773+5]..src/ppx.ml[93,2773+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[93,2773+19]..src/ppx.ml[93,2773+58])
                            Texp_apply
                            expression (src/ppx.ml[93,2773+20]..src/ppx.ml[93,2773+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[93,2773+35]..src/ppx.ml[93,2773+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[93,2773+37]..src/ppx.ml[93,2773+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[94,2833+4]..src/ppx.ml[94,2833+21])
                      Tpat_value
                      pattern (src/ppx.ml[94,2833+4]..src/ppx.ml[94,2833+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[94,2833+17]..src/ppx.ml[94,2833+18])
                            Tpat_var "a/1454"
                          pattern (src/ppx.ml[94,2833+19]..src/ppx.ml[94,2833+20])
                            Tpat_var "b/1455"
                        ]
                        None
                    expression (src/ppx.ml[96,2904+4]..src/ppx.ml[97,2936+79])
                      Texp_sequence
                      expression (src/ppx.ml[96,2904+4]..src/ppx.ml[96,2904+30])
                        Texp_apply
                        expression (src/ppx.ml[96,2904+5]..src/ppx.ml[96,2904+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[96,2904+28]..src/ppx.ml[96,2904+29])
                              Texp_ident "b/1455"
                        ]
                      expression (src/ppx.ml[97,2936+4]..src/ppx.ml[97,2936+79])
                        Texp_apply
                        expression (src/ppx.ml[97,2936+5]..src/ppx.ml[97,2936+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[97,2936+19]..src/ppx.ml[97,2936+78])
                              Texp_apply
                              expression (src/ppx.ml[97,2936+20]..src/ppx.ml[97,2936+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[97,2936+35]..src/ppx.ml[97,2936+77])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[97,2936+36]..src/ppx.ml[97,2936+56])
                                        Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2936+37]..src/ppx.ml[97,2936+55]),None)
                                      expression (src/ppx.ml[97,2936+58]..src/ppx.ml[97,2936+62])
                                        Texp_constant Const_string("id",(src/ppx.ml[97,2936+59]..src/ppx.ml[97,2936+61]),None)
                                      expression (src/ppx.ml[97,2936+63]..src/ppx.ml[97,2936+64])
                                        Texp_ident "a/1454"
                                      expression (src/ppx.ml[97,2936+66]..src/ppx.ml[97,2936+73])
                                        Texp_constant Const_string("types",(src/ppx.ml[97,2936+67]..src/ppx.ml[97,2936+72]),None)
                                      expression (src/ppx.ml[97,2936+74]..src/ppx.ml[97,2936+75])
                                        Texp_ident "b/1455"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[98,3016+4]..src/ppx.ml[98,3016+21])
                      Tpat_value
                      pattern (src/ppx.ml[98,3016+4]..src/ppx.ml[98,3016+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[98,3016+17]..src/ppx.ml[98,3016+18])
                            Tpat_var "a/1456"
                          pattern (src/ppx.ml[98,3016+19]..src/ppx.ml[98,3016+20])
                            Tpat_var "b/1457"
                        ]
                        None
                    expression (src/ppx.ml[100,3085+4]..src/ppx.ml[100,3085+60])
                      Texp_apply
                      expression (src/ppx.ml[100,3085+5]..src/ppx.ml[100,3085+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[100,3085+19]..src/ppx.ml[100,3085+59])
                            Texp_apply
                            expression (src/ppx.ml[100,3085+20]..src/ppx.ml[100,3085+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[100,3085+35]..src/ppx.ml[100,3085+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[100,3085+37]..src/ppx.ml[100,3085+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[101,3146+4]..src/ppx.ml[101,3146+20])
                      Tpat_value
                      pattern (src/ppx.ml[101,3146+4]..src/ppx.ml[101,3146+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[101,3146+16]..src/ppx.ml[101,3146+17])
                            Tpat_var "a/1458"
                          pattern (src/ppx.ml[101,3146+18]..src/ppx.ml[101,3146+19])
                            Tpat_var "b/1459"
                        ]
                        None
                    expression (src/ppx.ml[103,3216+4]..src/ppx.ml[103,3216+60])
                      Texp_apply
                      expression (src/ppx.ml[103,3216+5]..src/ppx.ml[103,3216+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,3216+19]..src/ppx.ml[103,3216+59])
                            Texp_apply
                            expression (src/ppx.ml[103,3216+20]..src/ppx.ml[103,3216+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,3216+35]..src/ppx.ml[103,3216+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[103,3216+37]..src/ppx.ml[103,3216+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,3277+4]..src/ppx.ml[104,3277+20])
                      Tpat_value
                      pattern (src/ppx.ml[104,3277+4]..src/ppx.ml[104,3277+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[104,3277+16]..src/ppx.ml[104,3277+17])
                            Tpat_var "a/1460"
                          pattern (src/ppx.ml[104,3277+18]..src/ppx.ml[104,3277+19])
                            Tpat_var "b/1461"
                        ]
                        None
                    expression (src/ppx.ml[106,3338+4]..src/ppx.ml[106,3338+60])
                      Texp_apply
                      expression (src/ppx.ml[106,3338+5]..src/ppx.ml[106,3338+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[106,3338+19]..src/ppx.ml[106,3338+59])
                            Texp_apply
                            expression (src/ppx.ml[106,3338+20]..src/ppx.ml[106,3338+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[106,3338+35]..src/ppx.ml[106,3338+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[106,3338+37]..src/ppx.ml[106,3338+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3399+4]..src/ppx.ml[107,3399+24])
                      Tpat_value
                      pattern (src/ppx.ml[107,3399+4]..src/ppx.ml[107,3399+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[107,3399+18]..src/ppx.ml[107,3399+19])
                            Tpat_var "a/1462"
                          pattern (src/ppx.ml[107,3399+20]..src/ppx.ml[107,3399+21])
                            Tpat_var "b/1463"
                          pattern (src/ppx.ml[107,3399+22]..src/ppx.ml[107,3399+23])
                            Tpat_var "c/1464"
                        ]
                        None
                    expression (src/ppx.ml[109,3489+4]..src/ppx.ml[109,3489+60])
                      Texp_apply
                      expression (src/ppx.ml[109,3489+5]..src/ppx.ml[109,3489+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3489+19]..src/ppx.ml[109,3489+59])
                            Texp_apply
                            expression (src/ppx.ml[109,3489+20]..src/ppx.ml[109,3489+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3489+35]..src/ppx.ml[109,3489+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[109,3489+37]..src/ppx.ml[109,3489+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[110,3550+4]..src/ppx.ml[110,3550+19])
                      Tpat_value
                      pattern (src/ppx.ml[110,3550+4]..src/ppx.ml[110,3550+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[110,3550+15]..src/ppx.ml[110,3550+16])
                            Tpat_var "a/1465"
                          pattern (src/ppx.ml[110,3550+17]..src/ppx.ml[110,3550+18])
                            Tpat_var "b/1466"
                        ]
                        None
                    expression (src/ppx.ml[112,3614+4]..src/ppx.ml[112,3614+60])
                      Texp_apply
                      expression (src/ppx.ml[112,3614+5]..src/ppx.ml[112,3614+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[112,3614+19]..src/ppx.ml[112,3614+59])
                            Texp_apply
                            expression (src/ppx.ml[112,3614+20]..src/ppx.ml[112,3614+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[112,3614+35]..src/ppx.ml[112,3614+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[112,3614+37]..src/ppx.ml[112,3614+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[113,3675+4]..src/ppx.ml[113,3675+18])
                      Tpat_value
                      pattern (src/ppx.ml[113,3675+4]..src/ppx.ml[113,3675+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[113,3675+17]..src/ppx.ml[113,3675+18])
                            Tpat_var "a/1467"
                        ]
                        None
                    expression (src/ppx.ml[115,3723+4]..src/ppx.ml[115,3723+62])
                      Texp_apply
                      expression (src/ppx.ml[115,3723+5]..src/ppx.ml[115,3723+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[115,3723+19]..src/ppx.ml[115,3723+61])
                            Texp_apply
                            expression (src/ppx.ml[115,3723+20]..src/ppx.ml[115,3723+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[115,3723+35]..src/ppx.ml[115,3723+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[115,3723+36]..src/ppx.ml[115,3723+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[115,3723+37]..src/ppx.ml[115,3723+55]),None)
                                    expression (src/ppx.ml[115,3723+57]..src/ppx.ml[115,3723+58])
                                      Texp_ident "a/1467"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[118,3931+4]..src/ppx.ml[118,3931+20])
                      Tpat_value
                      pattern (src/ppx.ml[118,3931+4]..src/ppx.ml[118,3931+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[118,3931+19]..src/ppx.ml[118,3931+20])
                            Tpat_var "a/1468"
                        ]
                        None
                    expression (src/ppx.ml[119,3979+4]..src/ppx.ml[119,3979+65])
                      Texp_apply
                      expression (src/ppx.ml[119,3979+5]..src/ppx.ml[119,3979+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3979+19]..src/ppx.ml[119,3979+64])
                            Texp_apply
                            expression (src/ppx.ml[119,3979+20]..src/ppx.ml[119,3979+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3979+35]..src/ppx.ml[119,3979+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[119,3979+36]..src/ppx.ml[119,3979+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[119,3979+37]..src/ppx.ml[119,3979+58]),None)
                                    expression (src/ppx.ml[119,3979+60]..src/ppx.ml[119,3979+61])
                                      Texp_ident "a/1468"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[121,4049+2]..src/ppx.ml[121,4049+26])
          Tpat_var "process_record_kind_list/1439"
        expression (src/ppx.ml[121,4049+26]..src/ppx.ml[127,4186+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[121,4049+26]..src/ppx.ml[121,4049+29])
                Tpat_var "x/1791"
              expression (src/ppx.ml[122,4081+2]..src/ppx.ml[127,4186+6])
                Texp_match
                expression (src/ppx.ml[122,4081+8]..src/ppx.ml[122,4081+9])
                  Texp_ident "x/1791"
                [
                  <case>
                    pattern (src/ppx.ml[123,4096+4]..src/ppx.ml[123,4096+6])
                      Tpat_value
                      pattern (src/ppx.ml[123,4096+4]..src/ppx.ml[123,4096+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[123,4096+10]..src/ppx.ml[123,4096+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[124,4109+4]..src/ppx.ml[124,4109+10])
                      Tpat_value
                      pattern (src/ppx.ml[124,4109+4]..src/ppx.ml[124,4109+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[124,4109+4]..src/ppx.ml[124,4109+5])
                            Tpat_var "h/1792"
                          pattern (src/ppx.ml[124,4109+9]..src/ppx.ml[124,4109+10])
                            Tpat_var "t/1793"
                        ]
                        None
                    expression (src/ppx.ml[125,4123+4]..src/ppx.ml[127,4186+6])
                      Texp_sequence
                      expression (src/ppx.ml[125,4123+4]..src/ppx.ml[125,4123+27])
                        Texp_apply
                        expression (src/ppx.ml[125,4123+5]..src/ppx.ml[125,4123+24])
                          Texp_ident "process_record_kind/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[125,4123+25]..src/ppx.ml[125,4123+26])
                              Texp_ident "h/1792"
                        ]
                      expression (src/ppx.ml[126,4152+4]..src/ppx.ml[127,4186+6])
                        Texp_sequence
                        expression (src/ppx.ml[126,4152+4]..src/ppx.ml[126,4152+32])
                          Texp_apply
                          expression (src/ppx.ml[126,4152+5]..src/ppx.ml[126,4152+29])
                            Texp_ident "process_record_kind_list/1439"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[126,4152+30]..src/ppx.ml[126,4152+31])
                                Texp_ident "t/1793"
                          ]
                        expression (src/ppx.ml[127,4186+4]..src/ppx.ml[127,4186+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[129,4197+0]..src/ppx.ml[129,4197+17])
          Tpat_var "process_core_type/1440"
        expression (src/ppx.ml[129,4197+17]..src/ppx.ml[139,4464+70]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[129,4197+17]..src/ppx.ml[129,4197+20])
                Tpat_var "x/1794"
              expression (src/ppx.ml[130,4220+2]..src/ppx.ml[139,4464+70])
                Texp_match
                expression (src/ppx.ml[130,4220+8]..src/ppx.ml[130,4220+9])
                  Texp_ident "x/1794"
                [
                  <case>
                    pattern (src/ppx.ml[131,4236+4]..src/ppx.ml[136,4397+5])
                      Tpat_value
                      pattern (src/ppx.ml[131,4236+4]..src/ppx.ml[136,4397+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[132,4242+6]..src/ppx.ml[132,4242+15])
                              Tpat_var "ptyp_desc/1795"
                          "ptyp_loc"
                            pattern (src/ppx.ml[133,4281+5]..src/ppx.ml[133,4281+13])
                              Tpat_var "ptyp_loc/1796"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[134,4314+5]..src/ppx.ml[134,4314+19])
                              Tpat_var "ptyp_loc_stack/1797"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[135,4357+5]..src/ppx.ml[135,4357+20])
                              Tpat_var "ptyp_attributes/1798"
                        ]
                    expression (src/ppx.ml[137,4405+4]..src/ppx.ml[139,4464+70])
                      Texp_sequence
                      expression (src/ppx.ml[137,4405+4]..src/ppx.ml[137,4405+38])
                        Texp_apply
                        expression (src/ppx.ml[137,4405+5]..src/ppx.ml[137,4405+27])
                          Texp_ident "process_core_type_desc/1438"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[137,4405+28]..src/ppx.ml[137,4405+37])
                              Texp_ident "ptyp_desc/1795"
                        ]
                      expression (src/ppx.ml[139,4464+4]..src/ppx.ml[139,4464+70])
                        Texp_apply
                        expression (src/ppx.ml[139,4464+5]..src/ppx.ml[139,4464+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[139,4464+19]..src/ppx.ml[139,4464+69])
                              Texp_apply
                              expression (src/ppx.ml[139,4464+20]..src/ppx.ml[139,4464+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[139,4464+35]..src/ppx.ml[139,4464+68])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[139,4464+36]..src/ppx.ml[139,4464+54])
                                        Texp_constant Const_string("DEBUG:ptyp_desc:",(src/ppx.ml[139,4464+37]..src/ppx.ml[139,4464+53]),None)
                                      expression (src/ppx.ml[139,4464+58]..src/ppx.ml[139,4464+67])
                                        Texp_ident "ptyp_desc/1795"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[140,4535+4]..src/ppx.ml[140,4535+26])
          Tpat_var "process_core_type_list/1441"
        expression (src/ppx.ml[140,4535+26]..src/ppx.ml[145,4651+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[140,4535+27]..src/ppx.ml[140,4535+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[140,4535+29]..src/ppx.ml[140,4535+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[140,4535+29]..src/ppx.ml[140,4535+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1799"
                pattern (src/ppx.ml[140,4535+27]..src/ppx.ml[140,4535+28])
                  Tpat_any
              expression (src/ppx.ml[141,4582+2]..src/ppx.ml[145,4651+29])
                Texp_match
                expression (src/ppx.ml[141,4582+8]..src/ppx.ml[141,4582+9])
                  Texp_ident "x/1799"
                [
                  <case>
                    pattern (src/ppx.ml[142,4597+4]..src/ppx.ml[142,4597+6])
                      Tpat_value
                      pattern (src/ppx.ml[142,4597+4]..src/ppx.ml[142,4597+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[142,4597+10]..src/ppx.ml[142,4597+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[143,4610+4]..src/ppx.ml[143,4610+10])
                      Tpat_value
                      pattern (src/ppx.ml[143,4610+4]..src/ppx.ml[143,4610+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[143,4610+4]..src/ppx.ml[143,4610+5])
                            Tpat_var "h/1800"
                          pattern (src/ppx.ml[143,4610+9]..src/ppx.ml[143,4610+10])
                            Tpat_var "t/1801"
                        ]
                        None
                    expression (src/ppx.ml[144,4624+4]..src/ppx.ml[145,4651+29])
                      Texp_sequence
                      expression (src/ppx.ml[144,4624+4]..src/ppx.ml[144,4624+25])
                        Texp_apply
                        expression (src/ppx.ml[144,4624+4]..src/ppx.ml[144,4624+21])
                          Texp_ident "process_core_type/1440"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[144,4624+22]..src/ppx.ml[144,4624+25])
                              Texp_ident "h/1800"
                        ]
                      expression (src/ppx.ml[145,4651+4]..src/ppx.ml[145,4651+29])
                        Texp_apply
                        expression (src/ppx.ml[145,4651+4]..src/ppx.ml[145,4651+26])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[145,4651+26]..src/ppx.ml[145,4651+29])
                              Texp_ident "t/1801"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[152,4695+0]..src/ppx.ml[159,4894+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[152,4695+4]..src/ppx.ml[152,4695+31])
          Tpat_var "print_constructor_arguments/1802"
        expression (src/ppx.ml[152,4695+31]..src/ppx.ml[159,4894+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[152,4695+31]..src/ppx.ml[152,4695+34])
                Tpat_var "x/1804"
              expression (src/ppx.ml[153,4732+2]..src/ppx.ml[159,4894+65])
                Texp_match
                expression (src/ppx.ml[153,4732+8]..src/ppx.ml[153,4732+9])
                  Texp_ident "x/1804"
                [
                  <case>
                    pattern (src/ppx.ml[154,4747+4]..src/ppx.ml[154,4747+17])
                      Tpat_value
                      pattern (src/ppx.ml[154,4747+4]..src/ppx.ml[154,4747+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[154,4747+16]..src/ppx.ml[154,4747+17])
                            Tpat_var "a/1805"
                        ]
                        None
                    expression (src/ppx.ml[155,4768+4]..src/ppx.ml[156,4800+64])
                      Texp_sequence
                      expression (src/ppx.ml[155,4768+4]..src/ppx.ml[155,4768+30])
                        Texp_apply
                        expression (src/ppx.ml[155,4768+5]..src/ppx.ml[155,4768+27])
                          Texp_ident "process_core_type_list/1441"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[155,4768+28]..src/ppx.ml[155,4768+29])
                              Texp_ident "a/1805"
                        ]
                      expression (src/ppx.ml[156,4800+4]..src/ppx.ml[156,4800+64])
                        Texp_apply
                        expression (src/ppx.ml[156,4800+5]..src/ppx.ml[156,4800+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[156,4800+19]..src/ppx.ml[156,4800+63])
                              Texp_apply
                              expression (src/ppx.ml[156,4800+20]..src/ppx.ml[156,4800+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[156,4800+35]..src/ppx.ml[156,4800+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[156,4800+36]..src/ppx.ml[156,4800+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[156,4800+37]..src/ppx.ml[156,4800+55]),None)
                                      expression (src/ppx.ml[156,4800+60]..src/ppx.ml[156,4800+61])
                                        Texp_ident "a/1805"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[158,4872+4]..src/ppx.ml[158,4872+18])
                      Tpat_value
                      pattern (src/ppx.ml[158,4872+4]..src/ppx.ml[158,4872+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[158,4872+17]..src/ppx.ml[158,4872+18])
                            Tpat_var "a/1806"
                        ]
                        None
                    expression (src/ppx.ml[159,4894+4]..src/ppx.ml[159,4894+65])
                      Texp_apply
                      expression (src/ppx.ml[159,4894+5]..src/ppx.ml[159,4894+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[159,4894+19]..src/ppx.ml[159,4894+64])
                            Texp_apply
                            expression (src/ppx.ml[159,4894+20]..src/ppx.ml[159,4894+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[159,4894+35]..src/ppx.ml[159,4894+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[159,4894+36]..src/ppx.ml[159,4894+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[159,4894+37]..src/ppx.ml[159,4894+56]),None)
                                    expression (src/ppx.ml[159,4894+61]..src/ppx.ml[159,4894+62])
                                      Texp_ident "a/1806"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[161,4961+0]..src/ppx.ml[193,5940+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[161,4961+8]..src/ppx.ml[161,4961+58])
          Tpat_var "process_Ptype_variant_constructor_declaration_list/1807"
        expression (src/ppx.ml[161,4961+58]..src/ppx.ml[193,5940+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[161,4961+58]..src/ppx.ml[161,4961+61])
                Tpat_var "x/1808"
              expression (src/ppx.ml[162,5025+2]..src/ppx.ml[193,5940+8])
                Texp_match
                expression (src/ppx.ml[162,5025+8]..src/ppx.ml[162,5025+9])
                  Texp_ident "x/1808"
                [
                  <case>
                    pattern (src/ppx.ml[163,5040+4]..src/ppx.ml[163,5040+6])
                      Tpat_value
                      pattern (src/ppx.ml[163,5040+4]..src/ppx.ml[163,5040+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[163,5040+10]..src/ppx.ml[163,5040+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[164,5053+4]..src/ppx.ml[164,5053+10])
                      Tpat_value
                      pattern (src/ppx.ml[164,5053+4]..src/ppx.ml[164,5053+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[164,5053+4]..src/ppx.ml[164,5053+5])
                            Tpat_var "h/1809"
                          pattern (src/ppx.ml[164,5053+9]..src/ppx.ml[164,5053+10])
                            Tpat_var "t/1810"
                        ]
                        None
                    expression (src/ppx.ml[166,5133+4]..src/ppx.ml[193,5940+8])
                      Texp_match
                      expression (src/ppx.ml[166,5133+10]..src/ppx.ml[166,5133+11])
                        Texp_ident "h/1809"
                      [
                        <case>
                          pattern (src/ppx.ml[167,5150+5]..src/ppx.ml[174,5388+5])
                            Tpat_value
                            pattern (src/ppx.ml[167,5150+5]..src/ppx.ml[174,5388+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[168,5157+6]..src/ppx.ml[168,5157+14])
                                    Tpat_var "pcd_name/1811"
                                "pcd_vars"
                                  pattern (src/ppx.ml[169,5191+6]..src/ppx.ml[169,5191+14])
                                    Tpat_var "pcd_vars/1812"
                                "pcd_args"
                                  pattern (src/ppx.ml[170,5230+6]..src/ppx.ml[170,5230+14])
                                    Tpat_var "pcd_args/1813"
                                "pcd_res"
                                  pattern (src/ppx.ml[171,5275+6]..src/ppx.ml[171,5275+13])
                                    Tpat_var "pcd_res/1814"
                                "pcd_loc"
                                  pattern (src/ppx.ml[172,5314+6]..src/ppx.ml[172,5314+13])
                                    Tpat_var "pcd_loc/1815"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[173,5347+6]..src/ppx.ml[173,5347+20])
                                    Tpat_var "pcd_attributes/1816"
                              ]
                          expression (src/ppx.ml[177,5470+6]..src/ppx.ml[193,5940+8])
                            Texp_sequence
                            expression (src/ppx.ml[177,5470+6]..src/ppx.ml[177,5470+43])
                              Texp_apply
                              expression (src/ppx.ml[177,5470+6]..src/ppx.ml[177,5470+33])
                                Texp_ident "print_constructor_arguments/1802"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[177,5470+33]..src/ppx.ml[177,5470+43])
                                    Texp_ident "pcd_args/1813"
                              ]
                            expression (src/ppx.ml[178,5515+6]..src/ppx.ml[193,5940+8])
                              Texp_sequence
                              expression (src/ppx.ml[178,5515+6]..src/ppx.ml[191,5860+16])
                                Texp_apply
                                expression (src/ppx.ml[178,5515+7]..src/ppx.ml[178,5515+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[178,5515+21]..src/ppx.ml[191,5860+15])
                                      Texp_apply
                                      expression (src/ppx.ml[178,5515+22]..src/ppx.ml[178,5515+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[178,5515+37]..src/ppx.ml[191,5860+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[179,5554+11]..src/ppx.ml[179,5554+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[179,5554+12]..src/ppx.ml[179,5554+36]),None)
                                              expression (src/ppx.ml[180,5593+15]..src/ppx.ml[180,5593+23])
                                                Texp_ident "pcd_name/1811"
                                              expression (src/ppx.ml[181,5618+15]..src/ppx.ml[181,5618+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[181,5618+16]..src/ppx.ml[181,5618+20]),None)
                                              expression (src/ppx.ml[182,5641+15]..src/ppx.ml[182,5641+23])
                                                Texp_ident "pcd_vars/1812"
                                              expression (src/ppx.ml[183,5666+15]..src/ppx.ml[183,5666+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[183,5666+16]..src/ppx.ml[183,5666+20]),None)
                                              expression (src/ppx.ml[184,5689+15]..src/ppx.ml[184,5689+23])
                                                Texp_ident "pcd_args/1813"
                                              expression (src/ppx.ml[185,5714+15]..src/ppx.ml[185,5714+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[185,5714+16]..src/ppx.ml[185,5714+19]),None)
                                              expression (src/ppx.ml[186,5736+15]..src/ppx.ml[186,5736+22])
                                                Texp_ident "pcd_res/1814"
                                              expression (src/ppx.ml[187,5760+15]..src/ppx.ml[187,5760+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[187,5760+16]..src/ppx.ml[187,5760+19]),None)
                                              expression (src/ppx.ml[188,5782+15]..src/ppx.ml[188,5782+22])
                                                Texp_ident "pcd_loc/1815"
                                              expression (src/ppx.ml[189,5806+15]..src/ppx.ml[189,5806+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[189,5806+16]..src/ppx.ml[189,5806+21]),None)
                                              expression (src/ppx.ml[190,5830+15]..src/ppx.ml[190,5830+29])
                                                Texp_ident "pcd_attributes/1816"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[192,5878+6]..src/ppx.ml[193,5940+8])
                                Texp_sequence
                                expression (src/ppx.ml[192,5878+6]..src/ppx.ml[192,5878+60])
                                  Texp_apply
                                  expression (src/ppx.ml[192,5878+7]..src/ppx.ml[192,5878+57])
                                    Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[192,5878+58]..src/ppx.ml[192,5878+59])
                                        Texp_ident "t/1810"
                                  ]
                                expression (src/ppx.ml[193,5940+6]..src/ppx.ml[193,5940+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[195,5952+0]..src/ppx.ml[206,6350+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[195,5952+4]..src/ppx.ml[195,5952+16])
          Tpat_var "process_kind/1817"
        expression (src/ppx.ml[195,5952+16]..src/ppx.ml[206,6350+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[195,5952+16]..src/ppx.ml[195,5952+19])
                Tpat_var "x/1819"
              expression (src/ppx.ml[196,5974+2]..src/ppx.ml[206,6350+77])
                Texp_match
                expression (src/ppx.ml[196,5974+8]..src/ppx.ml[196,5974+9])
                  Texp_ident "x/1819"
                [
                  <case>
                    pattern (src/ppx.ml[198,6011+4]..src/ppx.ml[198,6011+18])
                      Tpat_value
                      pattern (src/ppx.ml[198,6011+4]..src/ppx.ml[198,6011+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[198,6011+23]..src/ppx.ml[198,6011+81])
                      Texp_apply
                      expression (src/ppx.ml[198,6011+24]..src/ppx.ml[198,6011+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[198,6011+38]..src/ppx.ml[198,6011+80])
                            Texp_apply
                            expression (src/ppx.ml[198,6011+39]..src/ppx.ml[198,6011+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[198,6011+54]..src/ppx.ml[198,6011+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[198,6011+56]..src/ppx.ml[198,6011+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[199,6093+4]..src/ppx.ml[199,6093+19])
                      Tpat_value
                      pattern (src/ppx.ml[199,6093+4]..src/ppx.ml[199,6093+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[199,6093+18]..src/ppx.ml[199,6093+19])
                            Tpat_var "a/1820"
                        ]
                        None
                    expression (src/ppx.ml[200,6116+4]..src/ppx.ml[201,6176+65])
                      Texp_sequence
                      expression (src/ppx.ml[200,6116+4]..src/ppx.ml[200,6116+58])
                        Texp_apply
                        expression (src/ppx.ml[200,6116+5]..src/ppx.ml[200,6116+55])
                          Texp_ident "process_Ptype_variant_constructor_declaration_list/1807"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[200,6116+56]..src/ppx.ml[200,6116+57])
                              Texp_ident "a/1820"
                        ]
                      expression (src/ppx.ml[201,6176+4]..src/ppx.ml[201,6176+65])
                        Texp_apply
                        expression (src/ppx.ml[201,6176+5]..src/ppx.ml[201,6176+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[201,6176+19]..src/ppx.ml[201,6176+64])
                              Texp_apply
                              expression (src/ppx.ml[201,6176+20]..src/ppx.ml[201,6176+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[201,6176+35]..src/ppx.ml[201,6176+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[201,6176+36]..src/ppx.ml[201,6176+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[201,6176+37]..src/ppx.ml[201,6176+57]),None)
                                      expression (src/ppx.ml[201,6176+61]..src/ppx.ml[201,6176+62])
                                        Texp_ident "a/1820"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[204,6289+5]..src/ppx.ml[204,6289+19])
                      Tpat_value
                      pattern (src/ppx.ml[204,6289+5]..src/ppx.ml[204,6289+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[204,6289+18]..src/ppx.ml[204,6289+19])
                            Tpat_var "a/1821"
                        ]
                        None
                    expression (src/ppx.ml[205,6317+5]..src/ppx.ml[205,6317+32])
                      Texp_apply
                      expression (src/ppx.ml[205,6317+5]..src/ppx.ml[205,6317+29])
                        Texp_ident "process_record_kind_list/1439"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[205,6317+29]..src/ppx.ml[205,6317+32])
                            Texp_ident "a/1821"
                      ]
                  <case>
                    pattern (src/ppx.ml[206,6350+5]..src/ppx.ml[206,6350+15])
                      Tpat_value
                      pattern (src/ppx.ml[206,6350+5]..src/ppx.ml[206,6350+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[206,6350+19]..src/ppx.ml[206,6350+77])
                      Texp_apply
                      expression (src/ppx.ml[206,6350+20]..src/ppx.ml[206,6350+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[206,6350+34]..src/ppx.ml[206,6350+76])
                            Texp_apply
                            expression (src/ppx.ml[206,6350+35]..src/ppx.ml[206,6350+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[206,6350+50]..src/ppx.ml[206,6350+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[206,6350+52]..src/ppx.ml[206,6350+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[208,6429+0]..src/ppx.ml[229,7435+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6429+4]..src/ppx.ml[208,6429+19])
          Tpat_var "print_type_decl/1822"
        expression (src/ppx.ml[208,6429+19]..src/ppx.ml[229,7435+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[208,6429+19]..src/ppx.ml[208,6429+22])
                Tpat_var "x/1824"
              expression (src/ppx.ml[209,6454+2]..src/ppx.ml[229,7435+38])
                Texp_match
                expression (src/ppx.ml[209,6454+8]..src/ppx.ml[209,6454+9])
                  Texp_ident "x/1824"
                [
                  <case>
                    pattern (src/ppx.ml[210,6469+4]..src/ppx.ml[219,6850+5])
                      Tpat_value
                      pattern (src/ppx.ml[210,6469+4]..src/ppx.ml[219,6850+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[211,6475+6]..src/ppx.ml[211,6475+16])
                              Tpat_var "ptype_name/1825"
                          "ptype_params"
                            pattern (src/ppx.ml[212,6512+6]..src/ppx.ml[212,6512+18])
                              Tpat_var "ptype_params/1826"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[213,6584+6]..src/ppx.ml[213,6584+17])
                              Tpat_var "ptype_cstrs/1827"
                          "ptype_kind"
                            pattern (src/ppx.ml[214,6653+6]..src/ppx.ml[214,6653+16])
                              Tpat_var "ptype_kind/1828"
                          "ptype_private"
                            pattern (src/ppx.ml[215,6690+6]..src/ppx.ml[215,6690+19])
                              Tpat_var "ptype_private/1829"
                          "ptype_manifest"
                            pattern (src/ppx.ml[216,6731+6]..src/ppx.ml[216,6731+20])
                              Tpat_var "ptype_manifest/1830"
                          "ptype_attributes"
                            pattern (src/ppx.ml[217,6778+6]..src/ppx.ml[217,6778+22])
                              Tpat_var "ptype_attributes/1831"
                          "ptype_loc"
                            pattern (src/ppx.ml[218,6819+6]..src/ppx.ml[218,6819+15])
                              Tpat_var "ptype_loc/1832"
                        ]
                    expression (src/ppx.ml[220,6859+4]..src/ppx.ml[229,7435+38])
                      Texp_sequence
                      expression (src/ppx.ml[220,6859+4]..src/ppx.ml[220,6859+69])
                        Texp_apply
                        expression (src/ppx.ml[220,6859+5]..src/ppx.ml[220,6859+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[220,6859+19]..src/ppx.ml[220,6859+68])
                              Texp_apply
                              expression (src/ppx.ml[220,6859+20]..src/ppx.ml[220,6859+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[220,6859+35]..src/ppx.ml[220,6859+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[220,6859+36]..src/ppx.ml[220,6859+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[220,6859+37]..src/ppx.ml[220,6859+53]),None)
                                      expression (src/ppx.ml[220,6859+56]..src/ppx.ml[220,6859+66])
                                        Texp_ident "ptype_name/1825"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[221,6930+4]..src/ppx.ml[229,7435+38])
                        Texp_sequence
                        expression (src/ppx.ml[221,6930+4]..src/ppx.ml[221,6930+72])
                          Texp_apply
                          expression (src/ppx.ml[221,6930+5]..src/ppx.ml[221,6930+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[221,6930+19]..src/ppx.ml[221,6930+71])
                                Texp_apply
                                expression (src/ppx.ml[221,6930+20]..src/ppx.ml[221,6930+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[221,6930+35]..src/ppx.ml[221,6930+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[221,6930+36]..src/ppx.ml[221,6930+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[221,6930+37]..src/ppx.ml[221,6930+54]),None)
                                        expression (src/ppx.ml[221,6930+57]..src/ppx.ml[221,6930+69])
                                          Texp_ident "ptype_params/1826"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[222,7004+4]..src/ppx.ml[229,7435+38])
                          Texp_sequence
                          expression (src/ppx.ml[222,7004+4]..src/ppx.ml[222,7004+66])
                            Texp_apply
                            expression (src/ppx.ml[222,7004+5]..src/ppx.ml[222,7004+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[222,7004+19]..src/ppx.ml[222,7004+65])
                                  Texp_apply
                                  expression (src/ppx.ml[222,7004+20]..src/ppx.ml[222,7004+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[222,7004+35]..src/ppx.ml[222,7004+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[222,7004+36]..src/ppx.ml[222,7004+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[222,7004+37]..src/ppx.ml[222,7004+49]),None)
                                          expression (src/ppx.ml[222,7004+52]..src/ppx.ml[222,7004+63])
                                            Texp_ident "ptype_cstrs/1827"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[223,7072+4]..src/ppx.ml[229,7435+38])
                            Texp_sequence
                            expression (src/ppx.ml[223,7072+4]..src/ppx.ml[223,7072+63])
                              Texp_apply
                              expression (src/ppx.ml[223,7072+5]..src/ppx.ml[223,7072+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[223,7072+19]..src/ppx.ml[223,7072+62])
                                    Texp_apply
                                    expression (src/ppx.ml[223,7072+20]..src/ppx.ml[223,7072+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[223,7072+35]..src/ppx.ml[223,7072+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[223,7072+36]..src/ppx.ml[223,7072+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[223,7072+37]..src/ppx.ml[223,7072+48]),None)
                                            expression (src/ppx.ml[223,7072+50]..src/ppx.ml[223,7072+60])
                                              Texp_ident "ptype_kind/1828"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[224,7137+4]..src/ppx.ml[229,7435+38])
                              Texp_sequence
                              expression (src/ppx.ml[224,7137+4]..src/ppx.ml[224,7137+29])
                                Texp_apply
                                expression (src/ppx.ml[224,7137+5]..src/ppx.ml[224,7137+17])
                                  Texp_ident "process_kind/1817"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[224,7137+18]..src/ppx.ml[224,7137+28])
                                      Texp_ident "ptype_kind/1828"
                                ]
                              expression (src/ppx.ml[225,7168+4]..src/ppx.ml[229,7435+38])
                                Texp_apply
                                expression (src/ppx.ml[225,7168+5]..src/ppx.ml[225,7168+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[225,7168+19]..src/ppx.ml[229,7435+37])
                                      Texp_apply
                                      expression (src/ppx.ml[225,7168+20]..src/ppx.ml[225,7168+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[225,7168+35]..src/ppx.ml[229,7435+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[225,7168+36]..src/ppx.ml[225,7168+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[225,7168+37]..src/ppx.ml[225,7168+51]),None)
                                              expression (src/ppx.ml[225,7168+55]..src/ppx.ml[225,7168+68])
                                                Texp_ident "ptype_private/1829"
                                              expression (src/ppx.ml[226,7238+36]..src/ppx.ml[226,7238+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[226,7238+37]..src/ppx.ml[226,7238+51]),None)
                                              expression (src/ppx.ml[226,7238+54]..src/ppx.ml[226,7238+68])
                                                Texp_ident "ptype_manifest/1830"
                                              expression (src/ppx.ml[227,7308+36]..src/ppx.ml[227,7308+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[227,7308+37]..src/ppx.ml[227,7308+47]),None)
                                              expression (src/ppx.ml[227,7308+50]..src/ppx.ml[227,7308+66])
                                                Texp_ident "ptype_attributes/1831"
                                              expression (src/ppx.ml[228,7376+36]..src/ppx.ml[228,7376+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[228,7376+37]..src/ppx.ml[228,7376+46]),None)
                                              expression (src/ppx.ml[228,7376+49]..src/ppx.ml[228,7376+58])
                                                Texp_ident "ptype_loc/1832"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[231,7479+0]..src/ppx.ml[237,7614+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[231,7479+8]..src/ppx.ml[231,7479+30])
          Tpat_var "process_type_decl_list/1833"
        expression (src/ppx.ml[231,7479+30]..src/ppx.ml[237,7614+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[231,7479+30]..src/ppx.ml[231,7479+33])
                Tpat_var "x/1834"
              expression (src/ppx.ml[232,7515+2]..src/ppx.ml[237,7614+6])
                Texp_match
                expression (src/ppx.ml[232,7515+8]..src/ppx.ml[232,7515+9])
                  Texp_ident "x/1834"
                [
                  <case>
                    pattern (src/ppx.ml[233,7530+4]..src/ppx.ml[233,7530+6])
                      Tpat_value
                      pattern (src/ppx.ml[233,7530+4]..src/ppx.ml[233,7530+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[233,7530+10]..src/ppx.ml[233,7530+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[234,7543+4]..src/ppx.ml[234,7543+10])
                      Tpat_value
                      pattern (src/ppx.ml[234,7543+4]..src/ppx.ml[234,7543+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[234,7543+4]..src/ppx.ml[234,7543+5])
                            Tpat_var "h/1835"
                          pattern (src/ppx.ml[234,7543+9]..src/ppx.ml[234,7543+10])
                            Tpat_var "t/1836"
                        ]
                        None
                    expression (src/ppx.ml[235,7557+4]..src/ppx.ml[237,7614+6])
                      Texp_sequence
                      expression (src/ppx.ml[235,7557+4]..src/ppx.ml[235,7557+23])
                        Texp_apply
                        expression (src/ppx.ml[235,7557+5]..src/ppx.ml[235,7557+20])
                          Texp_ident "print_type_decl/1822"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[235,7557+21]..src/ppx.ml[235,7557+22])
                              Texp_ident "h/1835"
                        ]
                      expression (src/ppx.ml[236,7582+4]..src/ppx.ml[237,7614+6])
                        Texp_sequence
                        expression (src/ppx.ml[236,7582+4]..src/ppx.ml[236,7582+30])
                          Texp_apply
                          expression (src/ppx.ml[236,7582+5]..src/ppx.ml[236,7582+27])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[236,7582+28]..src/ppx.ml[236,7582+29])
                                Texp_ident "t/1836"
                          ]
                        expression (src/ppx.ml[237,7614+4]..src/ppx.ml[237,7614+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[239,7626+0]..src/ppx.ml[265,9590+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[239,7626+4]..src/ppx.ml[239,7626+13])
          Tpat_var "printdesc/1837"
        expression (src/ppx.ml[239,7626+13]..src/ppx.ml[265,9590+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[239,7626+14]..src/ppx.ml[239,7626+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[239,7626+17]..src/ppx.ml[239,7626+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1839"
                pattern (src/ppx.ml[239,7626+14]..src/ppx.ml[239,7626+15])
                  Tpat_any
              expression (src/ppx.ml[240,7672+2]..src/ppx.ml[265,9590+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[239,7626+39]..src/ppx.ml[239,7626+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[240,7672+2]..src/ppx.ml[240,7672+68])
                  Texp_apply
                  expression (src/ppx.ml[240,7672+3]..src/ppx.ml[240,7672+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[240,7672+17]..src/ppx.ml[240,7672+67])
                        Texp_apply
                        expression (src/ppx.ml[240,7672+18]..src/ppx.ml[240,7672+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[240,7672+33]..src/ppx.ml[240,7672+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[240,7672+34]..src/ppx.ml[240,7672+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[240,7672+35]..src/ppx.ml[240,7672+61]),None)
                                expression (src/ppx.ml[240,7672+64]..src/ppx.ml[240,7672+65])
                                  Texp_ident "x/1839"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[241,7742+2]..src/ppx.ml[265,9590+128])
                  Texp_match
                  expression (src/ppx.ml[241,7742+8]..src/ppx.ml[241,7742+9])
                    Texp_ident "x/1839"
                  [
                    <case>
                      pattern (src/ppx.ml[242,7757+4]..src/ppx.ml[242,7757+37])
                        Tpat_value
                        pattern (src/ppx.ml[242,7757+4]..src/ppx.ml[242,7757+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[242,7757+15]..src/ppx.ml[242,7757+25])
                              Tpat_var "expression/1840"
                            pattern (src/ppx.ml[242,7757+26]..src/ppx.ml[242,7757+36])
                              Tpat_var "attributes/1841"
                          ]
                          None
                      expression (src/ppx.ml[242,7757+41]..src/ppx.ml[242,7757+117])
                        Texp_apply
                        expression (src/ppx.ml[242,7757+42]..src/ppx.ml[242,7757+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[242,7757+56]..src/ppx.ml[242,7757+116])
                              Texp_apply
                              expression (src/ppx.ml[242,7757+57]..src/ppx.ml[242,7757+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[242,7757+72]..src/ppx.ml[242,7757+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[242,7757+73]..src/ppx.ml[242,7757+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[242,7757+74]..src/ppx.ml[242,7757+90]),None)
                                      expression (src/ppx.ml[242,7757+93]..src/ppx.ml[242,7757+103])
                                        Texp_ident "expression/1840"
                                      expression (src/ppx.ml[242,7757+104]..src/ppx.ml[242,7757+114])
                                        Texp_ident "attributes/1841"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[244,7895+4]..src/ppx.ml[244,7895+45])
                        Tpat_value
                        pattern (src/ppx.ml[244,7895+4]..src/ppx.ml[244,7895+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[244,7895+16]..src/ppx.ml[244,7895+24])
                              Tpat_var "rec_flag/1842"
                            pattern (src/ppx.ml[244,7895+26]..src/ppx.ml[244,7895+44])
                              Tpat_var "value_binding_list/1843"
                          ]
                          None
                      expression (src/ppx.ml[244,7895+48]..src/ppx.ml[245,8029+48])
                        Texp_sequence
                        expression (src/ppx.ml[244,7895+48]..src/ppx.ml[244,7895+132])
                          Texp_apply
                          expression (src/ppx.ml[244,7895+49]..src/ppx.ml[244,7895+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[244,7895+63]..src/ppx.ml[244,7895+131])
                                Texp_apply
                                expression (src/ppx.ml[244,7895+64]..src/ppx.ml[244,7895+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[244,7895+79]..src/ppx.ml[244,7895+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[244,7895+80]..src/ppx.ml[244,7895+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[244,7895+81]..src/ppx.ml[244,7895+98]),None)
                                        expression (src/ppx.ml[244,7895+101]..src/ppx.ml[244,7895+109])
                                          Texp_ident "rec_flag/1842"
                                        expression (src/ppx.ml[244,7895+111]..src/ppx.ml[244,7895+129])
                                          Texp_ident "value_binding_list/1843"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[245,8029+4]..src/ppx.ml[245,8029+48])
                          Texp_apply
                          expression (src/ppx.ml[245,8029+4]..src/ppx.ml[245,8029+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[245,8029+28]..src/ppx.ml[245,8029+48])
                                Texp_ident "value_binding_list/1843"
                          ]
                    <case>
                      pattern (src/ppx.ml[246,8078+4]..src/ppx.ml[246,8078+36])
                        Tpat_value
                        pattern (src/ppx.ml[246,8078+4]..src/ppx.ml[246,8078+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[246,8078+19]..src/ppx.ml[246,8078+36])
                              Tpat_var "value_description/1844"
                          ]
                          None
                      expression (src/ppx.ml[246,8078+39]..src/ppx.ml[246,8078+116])
                        Texp_apply
                        expression (src/ppx.ml[246,8078+40]..src/ppx.ml[246,8078+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[246,8078+54]..src/ppx.ml[246,8078+115])
                              Texp_apply
                              expression (src/ppx.ml[246,8078+55]..src/ppx.ml[246,8078+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[246,8078+70]..src/ppx.ml[246,8078+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[246,8078+71]..src/ppx.ml[246,8078+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[246,8078+72]..src/ppx.ml[246,8078+93]),None)
                                      expression (src/ppx.ml[246,8078+96]..src/ppx.ml[246,8078+113])
                                        Texp_ident "value_description/1844"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[248,8196+4]..src/ppx.ml[248,8196+47])
                        Tpat_value
                        pattern (src/ppx.ml[248,8196+4]..src/ppx.ml[248,8196+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[248,8196+15]..src/ppx.ml[248,8196+23])
                              Tpat_var "rec_flag/1845"
                            pattern (src/ppx.ml[248,8196+25]..src/ppx.ml[248,8196+46])
                              Tpat_var "type_declaration_list/1846"
                          ]
                          None
                      expression (src/ppx.ml[250,8275+4]..src/ppx.ml[251,8326+90])
                        Texp_sequence
                        expression (src/ppx.ml[250,8275+4]..src/ppx.ml[250,8275+49])
                          Texp_apply
                          expression (src/ppx.ml[250,8275+4]..src/ppx.ml[250,8275+26])
                            Texp_ident "process_type_decl_list/1833"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[250,8275+26]..src/ppx.ml[250,8275+49])
                                Texp_ident "type_declaration_list/1846"
                          ]
                        expression (src/ppx.ml[251,8326+4]..src/ppx.ml[251,8326+90])
                          Texp_apply
                          expression (src/ppx.ml[251,8326+5]..src/ppx.ml[251,8326+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[251,8326+19]..src/ppx.ml[251,8326+89])
                                Texp_apply
                                expression (src/ppx.ml[251,8326+20]..src/ppx.ml[251,8326+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[251,8326+35]..src/ppx.ml[251,8326+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[251,8326+36]..src/ppx.ml[251,8326+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[251,8326+37]..src/ppx.ml[251,8326+53]),None)
                                        expression (src/ppx.ml[251,8326+56]..src/ppx.ml[251,8326+64])
                                          Texp_ident "rec_flag/1845"
                                        expression (src/ppx.ml[251,8326+66]..src/ppx.ml[251,8326+87])
                                          Texp_ident "type_declaration_list/1846"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[254,8419+4]..src/ppx.ml[254,8419+31])
                        Tpat_value
                        pattern (src/ppx.ml[254,8419+4]..src/ppx.ml[254,8419+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[254,8419+17]..src/ppx.ml[254,8419+31])
                              Tpat_var "type_extension/1847"
                          ]
                          None
                      expression (src/ppx.ml[254,8419+34]..src/ppx.ml[254,8419+105])
                        Texp_apply
                        expression (src/ppx.ml[254,8419+35]..src/ppx.ml[254,8419+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[254,8419+49]..src/ppx.ml[254,8419+104])
                              Texp_apply
                              expression (src/ppx.ml[254,8419+50]..src/ppx.ml[254,8419+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[254,8419+65]..src/ppx.ml[254,8419+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[254,8419+66]..src/ppx.ml[254,8419+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[254,8419+67]..src/ppx.ml[254,8419+85]),None)
                                      expression (src/ppx.ml[254,8419+88]..src/ppx.ml[254,8419+102])
                                        Texp_ident "type_extension/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[255,8525+4]..src/ppx.ml[255,8525+40])
                        Tpat_value
                        pattern (src/ppx.ml[255,8525+4]..src/ppx.ml[255,8525+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[255,8525+19]..src/ppx.ml[255,8525+40])
                              Tpat_var "extension_constructor/1848"
                          ]
                          None
                      expression (src/ppx.ml[255,8525+43]..src/ppx.ml[255,8525+124])
                        Texp_apply
                        expression (src/ppx.ml[255,8525+44]..src/ppx.ml[255,8525+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8525+58]..src/ppx.ml[255,8525+123])
                              Texp_apply
                              expression (src/ppx.ml[255,8525+59]..src/ppx.ml[255,8525+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8525+74]..src/ppx.ml[255,8525+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8525+75]..src/ppx.ml[255,8525+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[255,8525+76]..src/ppx.ml[255,8525+97]),None)
                                      expression (src/ppx.ml[255,8525+100]..src/ppx.ml[255,8525+121])
                                        Texp_ident "extension_constructor/1848"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[256,8650+4]..src/ppx.ml[256,8650+31])
                        Tpat_value
                        pattern (src/ppx.ml[256,8650+4]..src/ppx.ml[256,8650+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[256,8650+17]..src/ppx.ml[256,8650+31])
                              Tpat_var "module_binding/1849"
                          ]
                          None
                      expression (src/ppx.ml[256,8650+34]..src/ppx.ml[256,8650+104])
                        Texp_apply
                        expression (src/ppx.ml[256,8650+35]..src/ppx.ml[256,8650+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[256,8650+49]..src/ppx.ml[256,8650+103])
                              Texp_apply
                              expression (src/ppx.ml[256,8650+50]..src/ppx.ml[256,8650+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[256,8650+65]..src/ppx.ml[256,8650+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[256,8650+66]..src/ppx.ml[256,8650+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[256,8650+67]..src/ppx.ml[256,8650+85]),None)
                                      expression (src/ppx.ml[256,8650+87]..src/ppx.ml[256,8650+101])
                                        Texp_ident "module_binding/1849"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8755+4]..src/ppx.ml[257,8755+39])
                        Tpat_value
                        pattern (src/ppx.ml[257,8755+4]..src/ppx.ml[257,8755+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[257,8755+20]..src/ppx.ml[257,8755+39])
                              Tpat_var "module_binding_list/1850"
                          ]
                          None
                      expression (src/ppx.ml[257,8755+42]..src/ppx.ml[257,8755+121])
                        Texp_apply
                        expression (src/ppx.ml[257,8755+43]..src/ppx.ml[257,8755+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[257,8755+57]..src/ppx.ml[257,8755+120])
                              Texp_apply
                              expression (src/ppx.ml[257,8755+58]..src/ppx.ml[257,8755+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[257,8755+73]..src/ppx.ml[257,8755+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[257,8755+74]..src/ppx.ml[257,8755+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[257,8755+75]..src/ppx.ml[257,8755+96]),None)
                                      expression (src/ppx.ml[257,8755+99]..src/ppx.ml[257,8755+118])
                                        Texp_ident "module_binding_list/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[258,8877+4]..src/ppx.ml[258,8877+40])
                        Tpat_value
                        pattern (src/ppx.ml[258,8877+4]..src/ppx.ml[258,8877+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[258,8877+17]..src/ppx.ml[258,8877+40])
                              Tpat_var "module_type_declaration/1851"
                          ]
                          None
                      expression (src/ppx.ml[258,8877+43]..src/ppx.ml[258,8877+124])
                        Texp_apply
                        expression (src/ppx.ml[258,8877+44]..src/ppx.ml[258,8877+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[258,8877+58]..src/ppx.ml[258,8877+123])
                              Texp_apply
                              expression (src/ppx.ml[258,8877+59]..src/ppx.ml[258,8877+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[258,8877+74]..src/ppx.ml[258,8877+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[258,8877+75]..src/ppx.ml[258,8877+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[258,8877+76]..src/ppx.ml[258,8877+95]),None)
                                      expression (src/ppx.ml[258,8877+98]..src/ppx.ml[258,8877+121])
                                        Texp_ident "module_type_declaration/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[260,9019+4]..src/ppx.ml[260,9019+30])
                        Tpat_value
                        pattern (src/ppx.ml[260,9019+4]..src/ppx.ml[260,9019+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[260,9019+14]..src/ppx.ml[260,9019+30])
                              Tpat_var "open_description/1852"
                          ]
                          None
                      expression (src/ppx.ml[260,9019+33]..src/ppx.ml[260,9019+103])
                        Texp_apply
                        expression (src/ppx.ml[260,9019+34]..src/ppx.ml[260,9019+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[260,9019+48]..src/ppx.ml[260,9019+102])
                              Texp_apply
                              expression (src/ppx.ml[260,9019+49]..src/ppx.ml[260,9019+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[260,9019+64]..src/ppx.ml[260,9019+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[260,9019+65]..src/ppx.ml[260,9019+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[260,9019+66]..src/ppx.ml[260,9019+81]),None)
                                      expression (src/ppx.ml[260,9019+84]..src/ppx.ml[260,9019+100])
                                        Texp_ident "open_description/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,9123+4]..src/ppx.ml[261,9123+36])
                        Tpat_value
                        pattern (src/ppx.ml[261,9123+4]..src/ppx.ml[261,9123+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[261,9123+15]..src/ppx.ml[261,9123+36])
                              Tpat_var "class_declarations/1853"
                          ]
                          None
                      expression (src/ppx.ml[261,9123+39]..src/ppx.ml[261,9123+113])
                        Texp_apply
                        expression (src/ppx.ml[261,9123+40]..src/ppx.ml[261,9123+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[261,9123+54]..src/ppx.ml[261,9123+112])
                              Texp_apply
                              expression (src/ppx.ml[261,9123+55]..src/ppx.ml[261,9123+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[261,9123+70]..src/ppx.ml[261,9123+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[261,9123+71]..src/ppx.ml[261,9123+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[261,9123+72]..src/ppx.ml[261,9123+89]),None)
                                      expression (src/ppx.ml[261,9123+92]..src/ppx.ml[261,9123+110])
                                        Texp_ident "class_declarations/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[262,9237+4]..src/ppx.ml[262,9237+45])
                        Tpat_value
                        pattern (src/ppx.ml[262,9237+4]..src/ppx.ml[262,9237+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[262,9237+20]..src/ppx.ml[262,9237+45])
                              Tpat_var "class_type_declarations/1854"
                          ]
                          None
                      expression (src/ppx.ml[262,9237+48]..src/ppx.ml[262,9237+132])
                        Texp_apply
                        expression (src/ppx.ml[262,9237+49]..src/ppx.ml[262,9237+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[262,9237+63]..src/ppx.ml[262,9237+131])
                              Texp_apply
                              expression (src/ppx.ml[262,9237+64]..src/ppx.ml[262,9237+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[262,9237+79]..src/ppx.ml[262,9237+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[262,9237+80]..src/ppx.ml[262,9237+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[262,9237+81]..src/ppx.ml[262,9237+103]),None)
                                      expression (src/ppx.ml[262,9237+106]..src/ppx.ml[262,9237+129])
                                        Texp_ident "class_type_declarations/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[263,9370+4]..src/ppx.ml[263,9370+39])
                        Tpat_value
                        pattern (src/ppx.ml[263,9370+4]..src/ppx.ml[263,9370+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[263,9370+18]..src/ppx.ml[263,9370+39])
                              Tpat_var "include_declaration/1855"
                          ]
                          None
                      expression (src/ppx.ml[263,9370+41]..src/ppx.ml[263,9370+117])
                        Texp_apply
                        expression (src/ppx.ml[263,9370+42]..src/ppx.ml[263,9370+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,9370+56]..src/ppx.ml[263,9370+116])
                              Texp_apply
                              expression (src/ppx.ml[263,9370+57]..src/ppx.ml[263,9370+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[263,9370+72]..src/ppx.ml[263,9370+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[263,9370+73]..src/ppx.ml[263,9370+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[263,9370+74]..src/ppx.ml[263,9370+93]),None)
                                      expression (src/ppx.ml[263,9370+95]..src/ppx.ml[263,9370+114])
                                        Texp_ident "include_declaration/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[264,9488+4]..src/ppx.ml[264,9488+30])
                        Tpat_value
                        pattern (src/ppx.ml[264,9488+4]..src/ppx.ml[264,9488+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[264,9488+19]..src/ppx.ml[264,9488+30])
                              Tpat_var "attribute/1856"
                          ]
                          None
                      expression (src/ppx.ml[264,9488+32]..src/ppx.ml[264,9488+101])
                        Texp_apply
                        expression (src/ppx.ml[264,9488+33]..src/ppx.ml[264,9488+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[264,9488+47]..src/ppx.ml[264,9488+100])
                              Texp_apply
                              expression (src/ppx.ml[264,9488+48]..src/ppx.ml[264,9488+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[264,9488+63]..src/ppx.ml[264,9488+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[264,9488+64]..src/ppx.ml[264,9488+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[264,9488+65]..src/ppx.ml[264,9488+86]),None)
                                      expression (src/ppx.ml[264,9488+89]..src/ppx.ml[264,9488+98])
                                        Texp_ident "attribute/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[265,9590+4]..src/ppx.ml[265,9590+44])
                        Tpat_value
                        pattern (src/ppx.ml[265,9590+4]..src/ppx.ml[265,9590+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[265,9590+21]..src/ppx.ml[265,9590+30])
                              Tpat_var "extension/1857"
                            pattern (src/ppx.ml[265,9590+33]..src/ppx.ml[265,9590+43])
                              Tpat_var "attributes/1858"
                          ]
                          None
                      expression (src/ppx.ml[265,9590+46]..src/ppx.ml[265,9590+128])
                        Texp_apply
                        expression (src/ppx.ml[265,9590+47]..src/ppx.ml[265,9590+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[265,9590+61]..src/ppx.ml[265,9590+127])
                              Texp_apply
                              expression (src/ppx.ml[265,9590+62]..src/ppx.ml[265,9590+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[265,9590+77]..src/ppx.ml[265,9590+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[265,9590+78]..src/ppx.ml[265,9590+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[265,9590+79]..src/ppx.ml[265,9590+100]),None)
                                      expression (src/ppx.ml[265,9590+103]..src/ppx.ml[265,9590+112])
                                        Texp_ident "extension/1857"
                                      expression (src/ppx.ml[265,9590+115]..src/ppx.ml[265,9590+125])
                                        Texp_ident "attributes/1858"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[267,9720+0]..src/ppx.ml[267,9720+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,9720+4]..src/ppx.ml[267,9720+7])
          Tpat_var "foo/1859"
        expression (src/ppx.ml[267,9720+10]..src/ppx.ml[267,9720+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[269,9735+0]..src/ppx.ml[277,9954+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[269,9735+4]..src/ppx.ml[269,9735+12])
          Tpat_var "printone/1860"
        expression (src/ppx.ml[269,9735+13]..src/ppx.ml[277,9954+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[269,9735+14]..src/ppx.ml[269,9735+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[269,9735+18]..src/ppx.ml[269,9735+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1861"
                pattern (src/ppx.ml[269,9735+14]..src/ppx.ml[269,9735+15])
                  Tpat_any
              expression (src/ppx.ml[270,9778+2]..src/ppx.ml[277,9954+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[269,9735+36]..src/ppx.ml[269,9735+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[270,9778+8]..src/ppx.ml[270,9778+9])
                  Texp_ident "x/1861"
                [
                  <case>
                    pattern (src/ppx.ml[271,9793+3]..src/ppx.ml[274,9843+3])
                      Tpat_value
                      pattern (src/ppx.ml[271,9793+3]..src/ppx.ml[274,9843+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[272,9798+4]..src/ppx.ml[272,9798+13])
                              Tpat_var "pstr_desc/1862"
                        ]
                    expression (src/ppx.ml[276,9927+4]..src/ppx.ml[277,9954+6])
                      Texp_sequence
                      expression (src/ppx.ml[276,9927+4]..src/ppx.ml[276,9927+25])
                        Texp_apply
                        expression (src/ppx.ml[276,9927+5]..src/ppx.ml[276,9927+14])
                          Texp_ident "printdesc/1837"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[276,9927+15]..src/ppx.ml[276,9927+24])
                              Texp_ident "pstr_desc/1862"
                        ]
                      expression (src/ppx.ml[277,9954+4]..src/ppx.ml[277,9954+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[283,10074+0]..src/ppx.ml[285,10155+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[283,10074+4]..src/ppx.ml[283,10074+13])
          Tpat_var "printone2/1863"
        expression (src/ppx.ml[283,10074+14]..src/ppx.ml[285,10155+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[283,10074+14]..src/ppx.ml[283,10074+15])
                Tpat_var "x/1864"
              expression (src/ppx.ml[284,10098+2]..src/ppx.ml[285,10155+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[283,10074+17]..src/ppx.ml[283,10074+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[284,10098+2]..src/ppx.ml[284,10098+55])
                  Texp_apply
                  expression (src/ppx.ml[284,10098+3]..src/ppx.ml[284,10098+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[284,10098+17]..src/ppx.ml[284,10098+54])
                        Texp_apply
                        expression (src/ppx.ml[284,10098+18]..src/ppx.ml[284,10098+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[284,10098+33]..src/ppx.ml[284,10098+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[284,10098+34]..src/ppx.ml[284,10098+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[284,10098+35]..src/ppx.ml[284,10098+49]),None)
                                expression (src/ppx.ml[284,10098+51]..src/ppx.ml[284,10098+52])
                                  Texp_ident "x/1864"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[285,10155+2]..src/ppx.ml[285,10155+12])
                  Texp_apply
                  expression (src/ppx.ml[285,10155+2]..src/ppx.ml[285,10155+10])
                    Texp_ident "printone/1860"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[285,10155+11]..src/ppx.ml[285,10155+12])
                        Texp_ident "x/1864"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[287,10171+0]..src/ppx.ml[289,10202+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[287,10171+4]..src/ppx.ml[287,10171+9])
          Tpat_var "proc1/1865"
        expression (src/ppx.ml[287,10171+10]..src/ppx.ml[289,10202+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[287,10171+10]..src/ppx.ml[287,10171+11])
                Tpat_var "x/1867"
              expression (src/ppx.ml[288,10187+2]..src/ppx.ml[289,10202+3])
                Texp_sequence
                expression (src/ppx.ml[288,10187+2]..src/ppx.ml[288,10187+13])
                  Texp_apply
                  expression (src/ppx.ml[288,10187+2]..src/ppx.ml[288,10187+11])
                    Texp_ident "printone2/1863"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[288,10187+12]..src/ppx.ml[288,10187+13])
                        Texp_ident "x/1867"
                  ]
                expression (src/ppx.ml[289,10202+2]..src/ppx.ml[289,10202+3])
                  Texp_ident "x/1867"
          ]
    ]
  structure_item (src/ppx.ml[291,10207+0]..src/ppx.ml[294,10356+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[291,10207+4]..src/ppx.ml[291,10207+9])
          Tpat_var "debug/1868"
        expression (src/ppx.ml[291,10207+10]..src/ppx.ml[294,10356+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[291,10207+10]..src/ppx.ml[291,10207+14])
                Tpat_var "proc/1870"
              expression (src/ppx.ml[291,10207+15]..src/ppx.ml[294,10356+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[291,10207+15]..src/ppx.ml[291,10207+18])
                      Tpat_var "lst/1871"
                    expression (src/ppx.ml[292,10235+2]..src/ppx.ml[294,10356+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[291,10207+21]..src/ppx.ml[291,10207+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[292,10235+6]..src/ppx.ml[292,10235+12])
                            Tpat_var "result/1872"
                          expression (src/ppx.ml[292,10235+15]..src/ppx.ml[292,10235+32])
                            Texp_apply
                            expression (src/ppx.ml[292,10235+15]..src/ppx.ml[292,10235+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[292,10235+24]..src/ppx.ml[292,10235+28])
                                  Texp_ident "proc/1870"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[292,10235+29]..src/ppx.ml[292,10235+32])
                                  Texp_ident "lst/1871"
                            ]
                      ]
                      expression (src/ppx.ml[293,10271+2]..src/ppx.ml[294,10356+4])
                        Texp_sequence
                        expression (src/ppx.ml[293,10271+2]..src/ppx.ml[293,10271+83])
                          Texp_apply
                          expression (src/ppx.ml[293,10271+2]..src/ppx.ml[293,10271+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[293,10271+12]..src/ppx.ml[293,10271+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[293,10271+17]..src/ppx.ml[293,10271+18])
                                      Tpat_var "i/1936"
                                    expression (src/ppx.ml[293,10271+22]..src/ppx.ml[293,10271+75])
                                      Texp_apply
                                      expression (src/ppx.ml[293,10271+22]..src/ppx.ml[293,10271+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[293,10271+36]..src/ppx.ml[293,10271+75])
                                            Texp_apply
                                            expression (src/ppx.ml[293,10271+37]..src/ppx.ml[293,10271+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[293,10271+52]..src/ppx.ml[293,10271+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[293,10271+53]..src/ppx.ml[293,10271+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[293,10271+54]..src/ppx.ml[293,10271+69]),None)
                                                    expression (src/ppx.ml[293,10271+72]..src/ppx.ml[293,10271+73])
                                                      Texp_ident "i/1936"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[293,10271+77]..src/ppx.ml[293,10271+83])
                                Texp_ident "result/1872"
                          ]
                        expression (src/ppx.ml[294,10356+2]..src/ppx.ml[294,10356+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[296,10378+0]..src/ppx.ml[299,10502+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10378+4]..src/ppx.ml[296,10378+13])
          Tpat_var "transform/1937"
        expression (src/ppx.ml[296,10378+14]..src/ppx.ml[299,10502+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[296,10378+14]..src/ppx.ml[296,10378+15])
                Tpat_var "x/1939"
              expression (src/ppx.ml[297,10433+2]..src/ppx.ml[299,10502+3])
                Texp_sequence
                expression (src/ppx.ml[297,10433+2]..src/ppx.ml[297,10433+48])
                  Texp_apply
                  expression (src/ppx.ml[297,10433+3]..src/ppx.ml[297,10433+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[297,10433+17]..src/ppx.ml[297,10433+47])
                        Texp_apply
                        expression (src/ppx.ml[297,10433+18]..src/ppx.ml[297,10433+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[297,10433+33]..src/ppx.ml[297,10433+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[297,10433+34]..src/ppx.ml[297,10433+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[297,10433+35]..src/ppx.ml[297,10433+42]),None)
                                expression (src/ppx.ml[297,10433+44]..src/ppx.ml[297,10433+45])
                                  Texp_ident "x/1939"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[298,10483+2]..src/ppx.ml[299,10502+3])
                  Texp_sequence
                  expression (src/ppx.ml[298,10483+2]..src/ppx.ml[298,10483+17])
                    Texp_apply
                    expression (src/ppx.ml[298,10483+3]..src/ppx.ml[298,10483+8])
                      Texp_ident "debug/1868"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[298,10483+9]..src/ppx.ml[298,10483+14])
                          Texp_ident "proc1/1865"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[298,10483+15]..src/ppx.ml[298,10483+16])
                          Texp_ident "x/1939"
                    ]
                  expression (src/ppx.ml[299,10502+2]..src/ppx.ml[299,10502+3])
                    Texp_ident "x/1939"
          ]
    ]
  structure_item (src/ppx.ml[301,10509+1]..src/ppx.ml[301,10509+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[301,10509+5]..src/ppx.ml[301,10509+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[301,10509+10]..src/ppx.ml[301,10509+69])
          Texp_apply
          expression (src/ppx.ml[301,10509+10]..src/ppx.ml[301,10509+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[301,10509+47]..src/ppx.ml[301,10509+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[301,10509+47]..src/ppx.ml[301,10509+56])
                    Texp_ident "transform/1937"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[301,10509+57]..src/ppx.ml[301,10509+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[301,10509+58]..src/ppx.ml[301,10509+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.131>;
 "foo"[value] -> <Ppx.123>;
 "print_constructor_arguments"[value] -> <Ppx.70>;
 "print_type_decl"[value] -> <Ppx.88>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.102>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.124>;
 "printone2"[value] -> <Ppx.127>;
 "proc1"[value] -> <Ppx.129>;
 "proc2"[value] -> <Ppx.7>;
 "process_Ptype_variant_constructor_declaration_list"[value] -> <Ppx.74>;
 "process_core_type"[value] -> <Ppx.30>;
 "process_core_type_desc"[value] -> <Ppx.28>;
 "process_core_type_list"[value] -> <Ppx.31>;
 "process_kind"[value] -> <Ppx.84>;
 "process_record_kind"[value] -> <Ppx.27>;
 "process_record_kind_list"[value] -> <Ppx.29>;
 "process_type_decl_list"[value] -> <Ppx.98>;
 "transform"[value] -> <Ppx.136>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/5101 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_attributes/1447 =a (field 4 x/1442)
                    pld_loc/1446 =a (field 3 x/1442)
                    pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4044
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4044
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2489-2525
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2562-2606
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1449)))))))
                   case tag 1:
                    (let
                      (core_type2/1452 =a (field 2 x/1448)
                       core_type/1451 =a (field 1 x/1448)
                       arg_label/1450 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                        (after Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(90):2682-2723
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow10:"))))))
                   case tag 2:
                    (let (a/1453 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(93):2777-2832
                        (after Ppx.process_core_type_desc src/ppx.ml(93):2777-2832
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(93):2792-2831
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_tuple:"))))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2908-3015
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2908-2934
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2940-3015
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2940-3015
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2955-3014
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (let
                      (b/1457 =a (field 1 x/1448) a/1456 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(100):3089-3145
                        (after Ppx.process_core_type_desc src/ppx.ml(100):3089-3145
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(100):3104-3144
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow8:"))))))
                   case tag 5:
                    (let
                      (b/1459 =a (field 1 x/1448) a/1458 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(103):3220-3276
                        (after Ppx.process_core_type_desc src/ppx.ml(103):3220-3276
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(103):3235-3275
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow7:"))))))
                   case tag 6:
                    (let
                      (b/1461 =a (field 1 x/1448) a/1460 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(106):3342-3398
                        (after Ppx.process_core_type_desc src/ppx.ml(106):3342-3398
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(106):3357-3397
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow6:"))))))
                   case tag 7:
                    (let
                      (c/1464 =a (field 2 x/1448)
                       b/1463 =a (field 1 x/1448)
                       a/1462 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(109):3493-3549
                        (after Ppx.process_core_type_desc src/ppx.ml(109):3493-3549
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(109):3508-3548
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow5:"))))))
                   case tag 8:
                    (let
                      (b/1466 =a (field 1 x/1448) a/1465 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(112):3618-3674
                        (after Ppx.process_core_type_desc src/ppx.ml(112):3618-3674
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(112):3633-3673
                              (apply (field 65 (global Batteries!))
                                "DEBUG:Ptyp_arrow4:"))))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3727-3785
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3727-3785
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3742-3784
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3983-4044
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3983-4044
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3998-4043
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4075-4192
                (before Ppx.process_record_kind_list src/ppx.ml(122):4083-4192
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4127-4192
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4127-4150
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4156-4192
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4156-4184
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4190-4192
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4106-4108
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4214-4534
                (before Ppx.process_core_type src/ppx.ml(130):4222-4534
                  (let
                    (ptyp_attributes/1798 =a (field 3 x/1794)
                     ptyp_loc_stack/1797 =a (field 2 x/1794)
                     ptyp_loc/1796 =a (field 1 x/1794)
                     ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4409-4534
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4409-4443
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(139):4468-4534
                          (after Ppx.process_core_type src/ppx.ml(139):4468-4534
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(139):4483-4533
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(140)<ghost>:4561-4680
                (before Ppx.process_core_type_list src/ppx.ml(141):4584-4680
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(144):4628-4680
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(144):4628-4649
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(145):4655-4680
                            (after Ppx.process_core_type_list src/ppx.ml(145):4655-4680
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(142):4607-4609
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(152)<ghost>:4726-4959
                 (before Ppx.print_constructor_arguments src/ppx.ml(153):4734-4959
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(155):4772-4864
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(155):4772-4798
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(156):4804-4864
                             (after Ppx.print_constructor_arguments src/ppx.ml(156):4804-4864
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(156):4819-4863
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(159):4898-4959
                         (after Ppx.print_constructor_arguments src/ppx.ml(159):4898-4959
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(159):4913-4958
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161)<ghost>:5019-5948
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):5027-5948
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(166):5137-5948
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5476-5948
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5476-5513
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5521-5948
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5521-5876
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5536-5875
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5884-5948
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5884-5938
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(193):5946-5948
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(163):5050-5052
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(195)<ghost>:5968-6427
                     (before Ppx.process_kind src/ppx.ml(196):5976-6427
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(198):6034-6092
                           (after Ppx.process_kind src/ppx.ml(198):6034-6092
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(198):6049-6091
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(206):6369-6427
                           (after Ppx.process_kind src/ppx.ml(206):6369-6427
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(206):6384-6426
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(200):6120-6241
                             (seq
                               (after Ppx.process_kind src/ppx.ml(200):6120-6174
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(201):6180-6241
                                 (after Ppx.process_kind src/ppx.ml(201):6180-6241
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(201):6195-6240
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(205):6322-6349
                             (after Ppx.process_kind src/ppx.ml(205):6322-6349
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(208)<ghost>:6448-7473
                     (before Ppx.print_type_decl src/ppx.ml(209):6456-7473
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(220):6863-7473
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(220):6863-6928
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(220):6878-6927
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(221):6934-7473
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(221):6934-7002
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(221):6949-7001
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(222):7008-7473
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(222):7008-7070
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(222):7023-7069
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(223):7076-7473
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(223):7076-7135
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(223):7091-7134
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(224):7141-7473
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(224):7141-7166
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(225):7172-7473
                                               (after Ppx.print_type_decl src/ppx.ml(225):7172-7473
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(225):7187-7472
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(231)<ghost>:7509-7620
                       (before Ppx.process_type_decl_list src/ppx.ml(232):7517-7620
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(235):7561-7620
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(235):7561-7580
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(236):7586-7620
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(236):7586-7612
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(237):7618-7620
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(233):7540-7542
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(239)<ghost>:7639-9718
                         (before Ppx.printdesc src/ppx.ml(240):7674-9718
                           (seq
                             (after Ppx.printdesc src/ppx.ml(240):7674-7740
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(240):7689-7739
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(241):7744-9718
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(242):7798-7874
                                     (after Ppx.printdesc src/ppx.ml(242):7798-7874
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(242):7813-7873
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(244):7943-8077
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(244):7943-8027
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(244):7958-8026
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(245):8033-8077
                                         (after Ppx.printdesc src/ppx.ml(245):8033-8077
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(246):8117-8194
                                     (after Ppx.printdesc src/ppx.ml(246):8117-8194
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(246):8132-8193
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(250):8279-8416
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(250):8279-8324
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(251):8330-8416
                                         (after Ppx.printdesc src/ppx.ml(251):8330-8416
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(251):8345-8415
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8453-8524
                                     (after Ppx.printdesc src/ppx.ml(254):8453-8524
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8468-8523
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8568-8649
                                     (after Ppx.printdesc src/ppx.ml(255):8568-8649
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8583-8648
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8684-8754
                                     (after Ppx.printdesc src/ppx.ml(256):8684-8754
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8699-8753
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8797-8876
                                     (after Ppx.printdesc src/ppx.ml(257):8797-8876
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8812-8875
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(258):8920-9001
                                     (after Ppx.printdesc src/ppx.ml(258):8920-9001
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(258):8935-9000
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):9052-9122
                                     (after Ppx.printdesc src/ppx.ml(260):9052-9122
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9067-9121
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9162-9236
                                     (after Ppx.printdesc src/ppx.ml(261):9162-9236
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9177-9235
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9285-9369
                                     (after Ppx.printdesc src/ppx.ml(262):9285-9369
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9300-9368
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9411-9487
                                     (after Ppx.printdesc src/ppx.ml(263):9411-9487
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9426-9486
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9520-9589
                                     (after Ppx.printdesc src/ppx.ml(264):9520-9589
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9535-9588
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(265):9636-9718
                                     (after Ppx.printdesc src/ppx.ml(265):9636-9718
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(265):9651-9717
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(269)<ghost>:9748-9960
                         (before Ppx.printone src/ppx.ml(270):9780-9960
                           (let
                             (*match*/5102 =a (field 1 x/1861)
                              pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(276):9931-9960
                               (seq
                                 (after Ppx.printone src/ppx.ml(276):9931-9952
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(277):9958-9960
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(283)<ghost>:10088-10167
                         (before Ppx.printone2 src/ppx.ml(284):10100-10167
                           (seq
                             (after Ppx.printone2 src/ppx.ml(284):10100-10153
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(284):10115-10152
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(285):10157-10167
                               (after Ppx.printone2 src/ppx.ml(285):10157-10167
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(287)<ghost>:10181-10205
                         (before Ppx.proc1 src/ppx.ml(288):10189-10205
                           (seq
                             (after Ppx.proc1 src/ppx.ml(288):10189-10200
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(289):10204-10205
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(291)<ghost>:10217-10360
                         (before Ppx.debug src/ppx.ml(292):10237-10360
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(292):10250-10267
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(293):10273-10360
                               (seq
                                 (after Ppx.debug src/ppx.ml(293):10273-10354
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(293):10283-10347
                                         (before Ppx.debug.(fun) src/ppx.ml(293):10293-10346
                                           (after Ppx.debug.(fun) src/ppx.ml(293):10293-10346
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(293):10307-10346
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(294):10358-10360
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(296)<ghost>:10392-10505
                         (before Ppx.transform src/ppx.ml(297):10435-10505
                           (seq
                             (after Ppx.transform src/ppx.ml(297):10435-10481
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(297):10450-10480
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(298):10485-10505
                               (seq
                                 (after Ppx.transform src/ppx.ml(298):10485-10500
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(299):10504-10505
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(301):10519-10578
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_record_kind/1437
           (function x/1442 : int
             (funct-body Ppx.process_record_kind src/ppx.ml(69)<ghost>:1906-2410
               (before Ppx.process_record_kind src/ppx.ml(70):1914-2410
                 (let
                   (pld_type/1445 =a (field 2 x/1442)
                    pld_mutable/1444 =a (field 1 x/1442)
                    pld_name/1443 =a (field 0 x/1442))
                   (before Ppx.process_record_kind src/ppx.ml(78):2120-2410
                     (after Ppx.process_record_kind src/ppx.ml(78):2120-2410
                       (apply (field 45 (global Stdlib!))
                         (after Ppx.process_record_kind src/ppx.ml(78):2135-2409
                           (apply (field 65 (global Batteries!))
                             (makeblock 0 (*,*,*,int,*,*)
                               "DEBUG:precord_kind:" pld_name/1443 "mutable"
                               pld_mutable/1444 "type" pld_type/1445))))))))))
          process_core_type_desc/1438
            (function x/1448 : int
              (funct-body Ppx.process_core_type_desc src/ppx.ml(85)<ghost>:2438-4044
                (before Ppx.process_core_type_desc src/ppx.ml(86):2444-4044
                  (switch* x/1448
                   case int 0:
                    (before Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                      (after Ppx.process_core_type_desc src/ppx.ml(87):2474-2526
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(87):2489-2525
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_any:")))))
                   case tag 0:
                    (let (name/1449 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                        (after Ppx.process_core_type_desc src/ppx.ml(88):2547-2607
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(88):2562-2606
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_var:" name/1449)))))))
                   case tag 1:
                    (before Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                      (after Ppx.process_core_type_desc src/ppx.ml(90):2667-2724
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(90):2682-2723
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow10:")))))
                   case tag 2:
                    (before Ppx.process_core_type_desc src/ppx.ml(93):2777-2832
                      (after Ppx.process_core_type_desc src/ppx.ml(93):2777-2832
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(93):2792-2831
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_tuple:")))))
                   case tag 3:
                    (let
                      (b/1455 =a (field 1 x/1448) a/1454 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(96):2908-3015
                        (seq
                          (after Ppx.process_core_type_desc src/ppx.ml(96):2908-2934
                            (apply process_core_type_list/1441 b/1455))
                          (before Ppx.process_core_type_desc src/ppx.ml(97):2940-3015
                            (after Ppx.process_core_type_desc src/ppx.ml(97):2940-3015
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(97):2955-3014
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_constr:" "id"
                                      a/1454 "types" b/1455)))))))))
                   case tag 4:
                    (before Ppx.process_core_type_desc src/ppx.ml(100):3089-3145
                      (after Ppx.process_core_type_desc src/ppx.ml(100):3089-3145
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(100):3104-3144
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow8:")))))
                   case tag 5:
                    (before Ppx.process_core_type_desc src/ppx.ml(103):3220-3276
                      (after Ppx.process_core_type_desc src/ppx.ml(103):3220-3276
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(103):3235-3275
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow7:")))))
                   case tag 6:
                    (before Ppx.process_core_type_desc src/ppx.ml(106):3342-3398
                      (after Ppx.process_core_type_desc src/ppx.ml(106):3342-3398
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(106):3357-3397
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow6:")))))
                   case tag 7:
                    (before Ppx.process_core_type_desc src/ppx.ml(109):3493-3549
                      (after Ppx.process_core_type_desc src/ppx.ml(109):3493-3549
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(109):3508-3548
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow5:")))))
                   case tag 8:
                    (before Ppx.process_core_type_desc src/ppx.ml(112):3618-3674
                      (after Ppx.process_core_type_desc src/ppx.ml(112):3618-3674
                        (apply (field 45 (global Stdlib!))
                          (after Ppx.process_core_type_desc src/ppx.ml(112):3633-3673
                            (apply (field 65 (global Batteries!))
                              "DEBUG:Ptyp_arrow4:")))))
                   case tag 9:
                    (let (a/1467 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(115):3727-3785
                        (after Ppx.process_core_type_desc src/ppx.ml(115):3727-3785
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(115):3742-3784
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1467)))))))
                   case tag 10:
                    (let (a/1468 =a (field 0 x/1448))
                      (before Ppx.process_core_type_desc src/ppx.ml(119):3983-4044
                        (after Ppx.process_core_type_desc src/ppx.ml(119):3983-4044
                          (apply (field 45 (global Stdlib!))
                            (after Ppx.process_core_type_desc src/ppx.ml(119):3998-4043
                              (apply (field 65 (global Batteries!))
                                (makeblock 0 "DEBUG:Ptyp_extension:" a/1468)))))))))))
          process_record_kind_list/1439
            (function x/1791 : int
              (funct-body Ppx.process_record_kind_list src/ppx.ml(121)<ghost>:4075-4192
                (before Ppx.process_record_kind_list src/ppx.ml(122):4083-4192
                  (if x/1791
                    (let
                      (t/1793 =a (field 1 x/1791) h/1792 =a (field 0 x/1791))
                      (before Ppx.process_record_kind_list src/ppx.ml(125):4127-4192
                        (seq
                          (after Ppx.process_record_kind_list src/ppx.ml(125):4127-4150
                            (apply process_record_kind/1437 h/1792))
                          (before Ppx.process_record_kind_list src/ppx.ml(126):4156-4192
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(126):4156-4184
                                (apply process_record_kind_list/1439 t/1793))
                              (before Ppx.process_record_kind_list src/ppx.ml(127):4190-4192
                                0))))))
                    (before Ppx.process_record_kind_list src/ppx.ml(123):4106-4108
                      0)))))
          process_core_type/1440
            (function x/1794 : int
              (funct-body Ppx.process_core_type src/ppx.ml(129)<ghost>:4214-4534
                (before Ppx.process_core_type src/ppx.ml(130):4222-4534
                  (let (ptyp_desc/1795 =a (field 0 x/1794))
                    (before Ppx.process_core_type src/ppx.ml(137):4409-4534
                      (seq
                        (after Ppx.process_core_type src/ppx.ml(137):4409-4443
                          (apply process_core_type_desc/1438 ptyp_desc/1795))
                        (before Ppx.process_core_type src/ppx.ml(139):4468-4534
                          (after Ppx.process_core_type src/ppx.ml(139):4468-4534
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type src/ppx.ml(139):4483-4533
                                (apply (field 65 (global Batteries!))
                                  (makeblock 0 "DEBUG:ptyp_desc:"
                                    ptyp_desc/1795))))))))))))
          process_core_type_list/1441
            (function x/1799 : int
              (funct-body Ppx.process_core_type_list src/ppx.ml(140)<ghost>:4561-4680
                (before Ppx.process_core_type_list src/ppx.ml(141):4584-4680
                  (if x/1799
                    (let
                      (t/1801 =a (field 1 x/1799) h/1800 =a (field 0 x/1799))
                      (before Ppx.process_core_type_list src/ppx.ml(144):4628-4680
                        (seq
                          (after Ppx.process_core_type_list src/ppx.ml(144):4628-4649
                            (apply process_core_type/1440 h/1800))
                          (before Ppx.process_core_type_list src/ppx.ml(145):4655-4680
                            (after Ppx.process_core_type_list src/ppx.ml(145):4655-4680
                              (apply process_core_type_list/1441 t/1801))))))
                    (before Ppx.process_core_type_list src/ppx.ml(142):4607-4609
                      0))))))
        (let
          (print_constructor_arguments/1802 =
             (function x/1804 : int
               (funct-body Ppx.print_constructor_arguments src/ppx.ml(152)<ghost>:4726-4959
                 (before Ppx.print_constructor_arguments src/ppx.ml(153):4734-4959
                   (switch* x/1804
                    case tag 0:
                     (let (a/1805 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(155):4772-4864
                         (seq
                           (after Ppx.print_constructor_arguments src/ppx.ml(155):4772-4798
                             (apply process_core_type_list/1441 a/1805))
                           (before Ppx.print_constructor_arguments src/ppx.ml(156):4804-4864
                             (after Ppx.print_constructor_arguments src/ppx.ml(156):4804-4864
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(156):4819-4863
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_tuple:"
                                       a/1805)))))))))
                    case tag 1:
                     (let (a/1806 =a (field 0 x/1804))
                       (before Ppx.print_constructor_arguments src/ppx.ml(159):4898-4959
                         (after Ppx.print_constructor_arguments src/ppx.ml(159):4898-4959
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.print_constructor_arguments src/ppx.ml(159):4913-4958
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 "DEBUG:Pcstr_record:" a/1806))))))))))))
          (letrec
            (process_Ptype_variant_constructor_declaration_list/1807
               (function x/1808 : int
                 (funct-body Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(161)<ghost>:5019-5948
                   (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(162):5027-5948
                     (if x/1808
                       (let
                         (t/1810 =a (field 1 x/1808)
                          h/1809 =a (field 0 x/1808))
                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(166):5137-5948
                           (let
                             (pcd_attributes/1816 =a (field 5 h/1809)
                              pcd_loc/1815 =a (field 4 h/1809)
                              pcd_res/1814 =a (field 3 h/1809)
                              pcd_args/1813 =a (field 2 h/1809)
                              pcd_vars/1812 =a (field 1 h/1809)
                              pcd_name/1811 =a (field 0 h/1809))
                             (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5476-5948
                               (seq
                                 (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(177):5476-5513
                                   (apply print_constructor_arguments/1802
                                     pcd_args/1813))
                                 (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5521-5948
                                   (seq
                                     (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5521-5876
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(178):5536-5875
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "constructor_declaration:"
                                               pcd_name/1811 "vars"
                                               pcd_vars/1812 "args"
                                               pcd_args/1813 "res"
                                               pcd_res/1814 "loc"
                                               pcd_loc/1815 "attrs"
                                               pcd_attributes/1816)))))
                                     (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5884-5948
                                       (seq
                                         (after Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(192):5884-5938
                                           (apply
                                             process_Ptype_variant_constructor_declaration_list/1807
                                             t/1810))
                                         (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(193):5946-5948
                                           0))))))))))
                       (before Ppx.process_Ptype_variant_constructor_declaration_list src/ppx.ml(163):5050-5052
                         0))))))
            (let
              (process_kind/1817 =
                 (function x/1819 : int
                   (funct-body Ppx.process_kind src/ppx.ml(195)<ghost>:5968-6427
                     (before Ppx.process_kind src/ppx.ml(196):5976-6427
                       (switch* x/1819
                        case int 0:
                         (before Ppx.process_kind src/ppx.ml(198):6034-6092
                           (after Ppx.process_kind src/ppx.ml(198):6034-6092
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(198):6049-6091
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case int 1:
                         (before Ppx.process_kind src/ppx.ml(206):6369-6427
                           (after Ppx.process_kind src/ppx.ml(206):6369-6427
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.process_kind src/ppx.ml(206):6384-6426
                                 (apply (field 65 (global Batteries!))
                                   "DEBUG:Ptype_abstract:")))))
                        case tag 0:
                         (let (a/1820 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(200):6120-6241
                             (seq
                               (after Ppx.process_kind src/ppx.ml(200):6120-6174
                                 (apply
                                   process_Ptype_variant_constructor_declaration_list/1807
                                   a/1820))
                               (before Ppx.process_kind src/ppx.ml(201):6180-6241
                                 (after Ppx.process_kind src/ppx.ml(201):6180-6241
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.process_kind src/ppx.ml(201):6195-6240
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Ptype_variant:"
                                           a/1820)))))))))
                        case tag 1:
                         (let (a/1821 =a (field 0 x/1819))
                           (before Ppx.process_kind src/ppx.ml(205):6322-6349
                             (after Ppx.process_kind src/ppx.ml(205):6322-6349
                               (apply process_record_kind_list/1439 a/1821))))))))
               print_type_decl/1822 =
                 (function x/1824 : int
                   (funct-body Ppx.print_type_decl src/ppx.ml(208)<ghost>:6448-7473
                     (before Ppx.print_type_decl src/ppx.ml(209):6456-7473
                       (let
                         (ptype_loc/1832 =a (field 7 x/1824)
                          ptype_attributes/1831 =a (field 6 x/1824)
                          ptype_manifest/1830 =a (field 5 x/1824)
                          ptype_private/1829 =a (field 4 x/1824)
                          ptype_kind/1828 =a (field 3 x/1824)
                          ptype_cstrs/1827 =a (field 2 x/1824)
                          ptype_params/1826 =a (field 1 x/1824)
                          ptype_name/1825 =a (field 0 x/1824))
                         (before Ppx.print_type_decl src/ppx.ml(220):6863-7473
                           (seq
                             (after Ppx.print_type_decl src/ppx.ml(220):6863-6928
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_type_decl src/ppx.ml(220):6878-6927
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:type_decl:"
                                       ptype_name/1825)))))
                             (before Ppx.print_type_decl src/ppx.ml(221):6934-7473
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(221):6934-7002
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(221):6949-7001
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:parameters:"
                                           ptype_params/1826)))))
                                 (before Ppx.print_type_decl src/ppx.ml(222):7008-7473
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(222):7008-7070
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(222):7023-7069
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:cstrs:"
                                               ptype_cstrs/1827)))))
                                     (before Ppx.print_type_decl src/ppx.ml(223):7076-7473
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(223):7076-7135
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(223):7091-7134
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:kind:"
                                                   ptype_kind/1828)))))
                                         (before Ppx.print_type_decl src/ppx.ml(224):7141-7473
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(224):7141-7166
                                               (apply process_kind/1817
                                                 ptype_kind/1828))
                                             (before Ppx.print_type_decl src/ppx.ml(225):7172-7473
                                               (after Ppx.print_type_decl src/ppx.ml(225):7172-7473
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.print_type_decl src/ppx.ml(225):7187-7472
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0 (*,int,*,*,*,*,*,*)
                                                         "DEBUG:private:"
                                                         ptype_private/1829
                                                         "DEBUG:manifest"
                                                         ptype_manifest/1830
                                                         "DEBUG:attr"
                                                         ptype_attributes/1831
                                                         "DEBUG:loc"
                                                         ptype_loc/1832)))))))))))))))))))))
              (letrec
                (process_type_decl_list/1833
                   (function x/1834 : int
                     (funct-body Ppx.process_type_decl_list src/ppx.ml(231)<ghost>:7509-7620
                       (before Ppx.process_type_decl_list src/ppx.ml(232):7517-7620
                         (if x/1834
                           (let
                             (t/1836 =a (field 1 x/1834)
                              h/1835 =a (field 0 x/1834))
                             (before Ppx.process_type_decl_list src/ppx.ml(235):7561-7620
                               (seq
                                 (after Ppx.process_type_decl_list src/ppx.ml(235):7561-7580
                                   (apply print_type_decl/1822 h/1835))
                                 (before Ppx.process_type_decl_list src/ppx.ml(236):7586-7620
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(236):7586-7612
                                       (apply process_type_decl_list/1833
                                         t/1836))
                                     (before Ppx.process_type_decl_list src/ppx.ml(237):7618-7620
                                       0))))))
                           (before Ppx.process_type_decl_list src/ppx.ml(233):7540-7542
                             0))))))
                (let
                  (printdesc/1837 =
                     (function x/1839 : int
                       (funct-body Ppx.printdesc src/ppx.ml(239)<ghost>:7639-9718
                         (before Ppx.printdesc src/ppx.ml(240):7674-9718
                           (seq
                             (after Ppx.printdesc src/ppx.ml(240):7674-7740
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printdesc src/ppx.ml(240):7689-7739
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0
                                       "DEBUG:structure_item_desc:" x/1839)))))
                             (before Ppx.printdesc src/ppx.ml(241):7744-9718
                               (switch* x/1839
                                case tag 0:
                                 (let
                                   (attributes/1841 =a (field 1 x/1839)
                                    expression/1840 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(242):7798-7874
                                     (after Ppx.printdesc src/ppx.ml(242):7798-7874
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(242):7813-7873
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_eval:"
                                               expression/1840
                                               attributes/1841)))))))
                                case tag 1:
                                 (let
                                   (value_binding_list/1843 =a
                                      (field 1 x/1839)
                                    rec_flag/1842 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(244):7943-8077
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(244):7943-8027
                                         (apply (field 45 (global Stdlib!))
                                           (after Ppx.printdesc src/ppx.ml(244):7958-8026
                                             (apply
                                               (field 65 (global Batteries!))
                                               (makeblock 0 (*,int,*)
                                                 "DEBUG:Pstr_value:"
                                                 rec_flag/1842
                                                 value_binding_list/1843)))))
                                       (before Ppx.printdesc src/ppx.ml(245):8033-8077
                                         (after Ppx.printdesc src/ppx.ml(245):8033-8077
                                           (apply
                                             print_value_binding_list/1298
                                             value_binding_list/1843))))))
                                case tag 2:
                                 (let
                                   (value_description/1844 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(246):8117-8194
                                     (after Ppx.printdesc src/ppx.ml(246):8117-8194
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(246):8132-8193
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_primitive:"
                                               value_description/1844)))))))
                                case tag 3:
                                 (let
                                   (type_declaration_list/1846 =a
                                      (field 1 x/1839)
                                    rec_flag/1845 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(250):8279-8416
                                     (seq
                                       (after Ppx.printdesc src/ppx.ml(250):8279-8324
                                         (apply process_type_decl_list/1833
                                           type_declaration_list/1846))
                                       (before Ppx.printdesc src/ppx.ml(251):8330-8416
                                         (after Ppx.printdesc src/ppx.ml(251):8330-8416
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(251):8345-8415
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 (*,int,*)
                                                   "DEBUG:Pstr_type:"
                                                   rec_flag/1845
                                                   type_declaration_list/1846)))))))))
                                case tag 4:
                                 (let
                                   (type_extension/1847 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(254):8453-8524
                                     (after Ppx.printdesc src/ppx.ml(254):8453-8524
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(254):8468-8523
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_typext:"
                                               type_extension/1847)))))))
                                case tag 5:
                                 (let
                                   (extension_constructor/1848 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(255):8568-8649
                                     (after Ppx.printdesc src/ppx.ml(255):8568-8649
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(255):8583-8648
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_exception:"
                                               extension_constructor/1848)))))))
                                case tag 6:
                                 (let
                                   (module_binding/1849 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(256):8684-8754
                                     (after Ppx.printdesc src/ppx.ml(256):8684-8754
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(256):8699-8753
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_module:"
                                               module_binding/1849)))))))
                                case tag 7:
                                 (let
                                   (module_binding_list/1850 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(257):8797-8876
                                     (after Ppx.printdesc src/ppx.ml(257):8797-8876
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(257):8812-8875
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_recmodule:"
                                               module_binding_list/1850)))))))
                                case tag 8:
                                 (let
                                   (module_type_declaration/1851 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(258):8920-9001
                                     (after Ppx.printdesc src/ppx.ml(258):8920-9001
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(258):8935-9000
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_modtype:"
                                               module_type_declaration/1851)))))))
                                case tag 9:
                                 (let
                                   (open_description/1852 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(260):9052-9122
                                     (after Ppx.printdesc src/ppx.ml(260):9052-9122
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(260):9067-9121
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_open"
                                               open_description/1852)))))))
                                case tag 10:
                                 (let
                                   (class_declarations/1853 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(261):9162-9236
                                     (after Ppx.printdesc src/ppx.ml(261):9162-9236
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(261):9177-9235
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:Pstr_class:"
                                               class_declarations/1853)))))))
                                case tag 11:
                                 (let
                                   (class_type_declarations/1854 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(262):9285-9369
                                     (after Ppx.printdesc src/ppx.ml(262):9285-9369
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(262):9300-9368
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_class_type:"
                                               class_type_declarations/1854)))))))
                                case tag 12:
                                 (let
                                   (include_declaration/1855 =a
                                      (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(263):9411-9487
                                     (after Ppx.printdesc src/ppx.ml(263):9411-9487
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(263):9426-9486
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_include:"
                                               include_declaration/1855)))))))
                                case tag 13:
                                 (let (attribute/1856 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(264):9520-9589
                                     (after Ppx.printdesc src/ppx.ml(264):9520-9589
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(264):9535-9588
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_attribute:"
                                               attribute/1856)))))))
                                case tag 14:
                                 (let
                                   (attributes/1858 =a (field 1 x/1839)
                                    extension/1857 =a (field 0 x/1839))
                                   (before Ppx.printdesc src/ppx.ml(265):9636-9718
                                     (after Ppx.printdesc src/ppx.ml(265):9636-9718
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.printdesc src/ppx.ml(265):9651-9717
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Pstr_extension:"
                                               extension/1857
                                               attributes/1858)))))))))))))
                   foo/1859 =[int] 1
                   printone/1860 =
                     (function x/1861 : int
                       (funct-body Ppx.printone src/ppx.ml(269)<ghost>:9748-9960
                         (before Ppx.printone src/ppx.ml(270):9780-9960
                           (let (pstr_desc/1862 =a (field 0 x/1861))
                             (before Ppx.printone src/ppx.ml(276):9931-9960
                               (seq
                                 (after Ppx.printone src/ppx.ml(276):9931-9952
                                   (apply printdesc/1837 pstr_desc/1862))
                                 (before Ppx.printone src/ppx.ml(277):9958-9960
                                   0)))))))
                   printone2/1863 =
                     (function x/1864 : int
                       (funct-body Ppx.printone2 src/ppx.ml(283)<ghost>:10088-10167
                         (before Ppx.printone2 src/ppx.ml(284):10100-10167
                           (seq
                             (after Ppx.printone2 src/ppx.ml(284):10100-10153
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.printone2 src/ppx.ml(284):10115-10152
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:SECOND::" x/1864)))))
                             (before Ppx.printone2 src/ppx.ml(285):10157-10167
                               (after Ppx.printone2 src/ppx.ml(285):10157-10167
                                 (apply printone/1860 x/1864)))))))
                   proc1/1865 =
                     (function x/1867
                       (funct-body Ppx.proc1 src/ppx.ml(287)<ghost>:10181-10205
                         (before Ppx.proc1 src/ppx.ml(288):10189-10205
                           (seq
                             (after Ppx.proc1 src/ppx.ml(288):10189-10200
                               (apply printone2/1863 x/1867))
                             (before Ppx.proc1 src/ppx.ml(289):10204-10205
                               x/1867)))))
                   debug/1868 =
                     (function proc/1870 lst/1871 : int
                       (funct-body Ppx.debug src/ppx.ml(291)<ghost>:10217-10360
                         (before Ppx.debug src/ppx.ml(292):10237-10360
                           (let
                             (result/1872 =
                                (after Ppx.debug src/ppx.ml(292):10250-10267
                                  (apply (field 18 (global Stdlib__List!))
                                    proc/1870 lst/1871)))
                             (before Ppx.debug src/ppx.ml(293):10273-10360
                               (seq
                                 (after Ppx.debug src/ppx.ml(293):10273-10354
                                   (apply (field 16 (global Stdlib__List!))
                                     (function i/1936 : int
                                       (funct-body Ppx.debug.(fun) src/ppx.ml(293):10283-10347
                                         (before Ppx.debug.(fun) src/ppx.ml(293):10293-10346
                                           (after Ppx.debug.(fun) src/ppx.ml(293):10293-10346
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.debug.(fun) src/ppx.ml(293):10307-10346
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0
                                                     "DEBUG:TOPLEVEL:"
                                                     i/1936))))))))
                                     result/1872))
                                 (before Ppx.debug src/ppx.ml(294):10358-10360
                                   0)))))))
                   transform/1937 =
                     (function x/1939
                       (funct-body Ppx.transform src/ppx.ml(296)<ghost>:10392-10505
                         (before Ppx.transform src/ppx.ml(297):10435-10505
                           (seq
                             (after Ppx.transform src/ppx.ml(297):10435-10481
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.transform src/ppx.ml(297):10450-10480
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG3:" x/1939)))))
                             (before Ppx.transform src/ppx.ml(298):10485-10505
                               (seq
                                 (after Ppx.transform src/ppx.ml(298):10485-10500
                                   (apply debug/1868 proc1/1865 x/1939))
                                 (before Ppx.transform src/ppx.ml(299):10504-10505
                                   x/1939)))))))
                   *match*/5104 =
                     (after Ppx src/ppx.ml(301):10519-10578
                       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                         (makeblock 0 transform/1937) 0 0 0 0 0 0 0
                         "simple-ppx")))
                  (pseudo <unknown location>
                    (makeblock 0 proc2/1279 printdesc2/1282
                      print_value_binding_expr/1284
                      print_value_binding_list2/1291
                      print_value_binding_list/1298 process_record_kind/1437
                      process_core_type_desc/1438
                      process_record_kind_list/1439 process_core_type/1440
                      process_core_type_list/1441
                      print_constructor_arguments/1802
                      process_Ptype_variant_constructor_declaration_list/1807
                      process_kind/1817 print_type_decl/1822
                      process_type_decl_list/1833 printdesc/1837 foo/1859
                      printone/1860 printone2/1863 proc1/1865 debug/1868
                      transform/1937)))))))))))

[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[76,2104+34])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..[69,1879+19])
          Ppat_var "process_id2" (src/ppx.ml[69,1879+8]..[69,1879+19])
        expression (src/ppx.ml[69,1879+19]..[76,2104+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+19]..[69,1879+32])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+20]..[69,1879+21])
              Ppat_var "x" (src/ppx.ml[69,1879+20]..[69,1879+21])
            core_type (src/ppx.ml[69,1879+22]..[69,1879+31])
              Ptyp_constr "longident" (src/ppx.ml[69,1879+22]..[69,1879+31])
              []
          expression (src/ppx.ml[70,1914+2]..[76,2104+34])
            Pexp_match
            expression (src/ppx.ml[70,1914+8]..[70,1914+9])
              Pexp_ident "x" (src/ppx.ml[70,1914+8]..[70,1914+9])
            [
              <case>
                pattern (src/ppx.ml[71,1929+4]..[71,1929+17])
                  Ppat_construct "Lident" (src/ppx.ml[71,1929+4]..[71,1929+10])
                  Some
                    []
                    pattern (src/ppx.ml[71,1929+11]..[71,1929+17])
                      Ppat_var "string" (src/ppx.ml[71,1929+11]..[71,1929+17])
                expression (src/ppx.ml[71,1929+21]..[71,1929+27])
                  Pexp_ident "string" (src/ppx.ml[71,1929+21]..[71,1929+27])
              <case>
                pattern (src/ppx.ml[72,1957+4]..[72,1957+28])
                  Ppat_construct "Ldot" (src/ppx.ml[72,1957+4]..[72,1957+8])
                  Some
                    []
                    pattern (src/ppx.ml[72,1957+9]..[72,1957+28])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[72,1957+10]..[72,1957+19])
                          Ppat_var "longident" (src/ppx.ml[72,1957+10]..[72,1957+19])
                        pattern (src/ppx.ml[72,1957+21]..[72,1957+27])
                          Ppat_var "string" (src/ppx.ml[72,1957+21]..[72,1957+27])
                      ]
                expression (src/ppx.ml[73,1989+4]..[73,1989+42])
                  Pexp_apply
                  expression (src/ppx.ml[73,1989+28]..[73,1989+29])
                    Pexp_ident "^" (src/ppx.ml[73,1989+28]..[73,1989+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[73,1989+4]..[73,1989+27])
                        Pexp_apply
                        expression (src/ppx.ml[73,1989+5]..[73,1989+16])
                          Pexp_ident "process_id2" (src/ppx.ml[73,1989+5]..[73,1989+16])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+17]..[73,1989+26])
                              Pexp_ident "longident" (src/ppx.ml[73,1989+17]..[73,1989+26])
                        ]
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[73,1989+30]..[73,1989+42])
                        Pexp_apply
                        expression (src/ppx.ml[73,1989+34]..[73,1989+35])
                          Pexp_ident "^" (src/ppx.ml[73,1989+34]..[73,1989+35])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+30]..[73,1989+33])
                              Pexp_constant PConst_string(".",(src/ppx.ml[73,1989+31]..[73,1989+32]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[73,1989+36]..[73,1989+42])
                              Pexp_ident "string" (src/ppx.ml[73,1989+36]..[73,1989+42])
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[74,2032+4]..[74,2032+33])
                  Ppat_construct "Lapply" (src/ppx.ml[74,2032+4]..[74,2032+10])
                  Some
                    []
                    pattern (src/ppx.ml[74,2032+11]..[74,2032+33])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[74,2032+12]..[74,2032+21])
                          Ppat_var "longident" (src/ppx.ml[74,2032+12]..[74,2032+21])
                        pattern (src/ppx.ml[74,2032+22]..[74,2032+32])
                          Ppat_var "longident2" (src/ppx.ml[74,2032+22]..[74,2032+32])
                      ]
                expression (src/ppx.ml[75,2066+7]..[76,2104+34])
                  Pexp_apply
                  expression (src/ppx.ml[75,2066+32]..[75,2066+33])
                    Pexp_ident "^" (src/ppx.ml[75,2066+32]..[75,2066+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[75,2066+7]..[75,2066+30])
                        Pexp_apply
                        expression (src/ppx.ml[75,2066+8]..[75,2066+19])
                          Pexp_ident "process_id2" (src/ppx.ml[75,2066+8]..[75,2066+19])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2066+20]..[75,2066+29])
                              Pexp_ident "longident" (src/ppx.ml[75,2066+20]..[75,2066+29])
                        ]
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[75,2066+34]..[76,2104+34])
                        Pexp_apply
                        expression (src/ppx.ml[76,2104+7]..[76,2104+8])
                          Pexp_ident "^" (src/ppx.ml[76,2104+7]..[76,2104+8])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[75,2066+34]..[75,2066+37])
                              Pexp_constant PConst_string(".",(src/ppx.ml[75,2066+35]..[75,2066+36]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[76,2104+9]..[76,2104+34])
                              Pexp_apply
                              expression (src/ppx.ml[76,2104+10]..[76,2104+21])
                                Pexp_ident "process_id2" (src/ppx.ml[76,2104+10]..[76,2104+21])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[76,2104+22]..[76,2104+32])
                                    Pexp_ident "longident2" (src/ppx.ml[76,2104+22]..[76,2104+32])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[78,2140+0]..[80,2189+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[78,2140+4]..[78,2140+14])
          Ppat_var "process_id" (src/ppx.ml[78,2140+4]..[78,2140+14])
        expression (src/ppx.ml[78,2140+14]..[80,2189+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[78,2140+14]..[78,2140+31])
            Ppat_constraint
            pattern (src/ppx.ml[78,2140+15]..[78,2140+16])
              Ppat_var "x" (src/ppx.ml[78,2140+15]..[78,2140+16])
            core_type (src/ppx.ml[78,2140+17]..[78,2140+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[78,2140+17]..[78,2140+30])
              []
          expression (src/ppx.ml[79,2174+2]..[80,2189+31])
            Pexp_match
            expression (src/ppx.ml[79,2174+8]..[79,2174+9])
              Pexp_ident "x" (src/ppx.ml[79,2174+8]..[79,2174+9])
            [
              <case>
                pattern (src/ppx.ml[80,2189+4]..[80,2189+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[80,2189+5]..[80,2189+8]) ghost
                      pattern (src/ppx.ml[80,2189+5]..[80,2189+8])
                        Ppat_var "txt" (src/ppx.ml[80,2189+5]..[80,2189+8])
                  ]
                expression (src/ppx.ml[80,2189+14]..[80,2189+31])
                  Pexp_apply
                  expression (src/ppx.ml[80,2189+15]..[80,2189+26])
                    Pexp_ident "process_id2" (src/ppx.ml[80,2189+15]..[80,2189+26])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[80,2189+27]..[80,2189+30])
                        Pexp_ident "txt" (src/ppx.ml[80,2189+27]..[80,2189+30])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[85,2325+0]..[173,5282+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[85,2325+8]..[85,2325+27])
          Ppat_var "process_record_kind" (src/ppx.ml[85,2325+8]..[85,2325+27])
        expression (src/ppx.ml[85,2325+27]..[99,2809+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[85,2325+27]..[85,2325+30])
            Ppat_var "x" (src/ppx.ml[85,2325+28]..[85,2325+29])
          expression (src/ppx.ml[86,2358+2]..[99,2809+47])
            Pexp_match
            expression (src/ppx.ml[86,2358+8]..[86,2358+9])
              Pexp_ident "x" (src/ppx.ml[86,2358+8]..[86,2358+9])
            [
              <case>
                pattern (src/ppx.ml[87,2373+4]..[93,2554+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[88,2379+5]..[88,2379+13]) ghost
                      pattern (src/ppx.ml[88,2379+5]..[88,2379+13])
                        Ppat_var "pld_name" (src/ppx.ml[88,2379+5]..[88,2379+13])
                    "pld_mutable" (src/ppx.ml[89,2412+5]..[89,2412+16]) ghost
                      pattern (src/ppx.ml[89,2412+5]..[89,2412+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[89,2412+5]..[89,2412+16])
                    "pld_type" (src/ppx.ml[90,2450+5]..[90,2450+13]) ghost
                      pattern (src/ppx.ml[90,2450+5]..[90,2450+13])
                        Ppat_var "pld_type" (src/ppx.ml[90,2450+5]..[90,2450+13])
                    "pld_loc" (src/ppx.ml[91,2482+5]..[91,2482+12]) ghost
                      pattern (src/ppx.ml[91,2482+5]..[91,2482+12])
                        Ppat_var "pld_loc" (src/ppx.ml[91,2482+5]..[91,2482+12])
                    "pld_attributes" (src/ppx.ml[92,2514+5]..[92,2514+19]) ghost
                      pattern (src/ppx.ml[92,2514+5]..[92,2514+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[92,2514+5]..[92,2514+19])
                  ]
                expression (src/ppx.ml[94,2562+4]..[99,2809+47])
                  Pexp_apply
                  expression (src/ppx.ml[94,2562+5]..[94,2562+18])
                    Pexp_ident "print_endline" (src/ppx.ml[94,2562+5]..[94,2562+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[94,2562+19]..[99,2809+46])
                        Pexp_apply
                        expression (src/ppx.ml[94,2562+20]..[94,2562+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[94,2562+20]..[94,2562+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[94,2562+35]..[99,2809+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[94,2562+36]..[94,2562+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[94,2562+37]..[94,2562+56]),None)
                                expression (src/ppx.ml[95,2623+36]..[95,2623+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[95,2623+36]..[95,2623+44])
                                expression (src/ppx.ml[96,2669+36]..[96,2669+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[96,2669+37]..[96,2669+44]),None)
                                expression (src/ppx.ml[97,2716+36]..[97,2716+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[97,2716+36]..[97,2716+47])
                                expression (src/ppx.ml[98,2765+36]..[98,2765+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[98,2765+37]..[98,2765+41]),None)
                                expression (src/ppx.ml[99,2809+36]..[99,2809+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[99,2809+36]..[99,2809+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[101,2861+0]..[101,2861+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[101,2861+0]..[101,2861+22])
        expression (src/ppx.ml[101,2861+23]..[147,4600+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[101,2861+23]..[101,2861+24])
            Ppat_var "x" (src/ppx.ml[101,2861+23]..[101,2861+24])
          expression (src/ppx.ml[102,2888+2]..[147,4600+65])
            Pexp_match
            expression (src/ppx.ml[102,2888+8]..[102,2888+9])
              Pexp_ident "x" (src/ppx.ml[102,2888+8]..[102,2888+9])
            [
              <case>
                pattern (src/ppx.ml[103,2903+4]..[103,2903+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[103,2903+4]..[103,2903+15])
                  Some
                    []
                    pattern (src/ppx.ml[103,2903+16]..[103,2903+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[103,2903+17]..[103,2903+18])
                          Ppat_var "a" (src/ppx.ml[103,2903+17]..[103,2903+18])
                        pattern (src/ppx.ml[103,2903+19]..[103,2903+20])
                          Ppat_var "b" (src/ppx.ml[103,2903+19]..[103,2903+20])
                      ]
                expression (src/ppx.ml[105,2974+4]..[114,3217+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[105,2974+8]..[105,2974+12])
                        Ppat_var "myid" (src/ppx.ml[105,2974+8]..[105,2974+12])
                      expression (src/ppx.ml[105,2974+15]..[105,2974+29])
                        Pexp_apply
                        expression (src/ppx.ml[105,2974+16]..[105,2974+26])
                          Pexp_ident "process_id" (src/ppx.ml[105,2974+16]..[105,2974+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2974+27]..[105,2974+28])
                              Pexp_ident "a" (src/ppx.ml[105,2974+27]..[105,2974+28])
                        ]
                  ]
                  expression (src/ppx.ml[106,3007+4]..[114,3217+22])
                    Pexp_sequence
                    expression (src/ppx.ml[106,3007+4]..[106,3007+30])
                      Pexp_apply
                      expression (src/ppx.ml[106,3007+5]..[106,3007+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[106,3007+5]..[106,3007+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[106,3007+28]..[106,3007+29])
                            Pexp_ident "b" (src/ppx.ml[106,3007+28]..[106,3007+29])
                      ]
                    expression (src/ppx.ml[108,3040+4]..[114,3217+22])
                      Pexp_sequence
                      expression (src/ppx.ml[108,3040+4]..[108,3040+46])
                        Pexp_apply
                        expression (src/ppx.ml[108,3040+4]..[108,3040+17])
                          Pexp_ident "Printf.printf" (src/ppx.ml[108,3040+4]..[108,3040+17])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[108,3040+18]..[108,3040+41])
                              Pexp_constant PConst_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[108,3040+19]..[108,3040+40]),None)
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[108,3040+42]..[108,3040+46])
                              Pexp_ident "myid" (src/ppx.ml[108,3040+42]..[108,3040+46])
                        ]
                      expression (src/ppx.ml[111,3127+4]..[114,3217+22])
                        Pexp_apply
                        expression (src/ppx.ml[111,3127+5]..[111,3127+18])
                          Pexp_ident "print_endline" (src/ppx.ml[111,3127+5]..[111,3127+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3127+19]..[114,3217+21])
                              Pexp_apply
                              expression (src/ppx.ml[111,3127+20]..[111,3127+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[111,3127+20]..[111,3127+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[111,3127+35]..[114,3217+20])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[112,3164+9]..[112,3164+29])
                                        Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[112,3164+10]..[112,3164+28]),None)
                                      expression (src/ppx.ml[113,3195+9]..[113,3195+13])
                                        Pexp_constant PConst_string("id",(src/ppx.ml[113,3195+10]..[113,3195+12]),None)
                                      expression (src/ppx.ml[113,3195+14]..[113,3195+15])
                                        Pexp_ident "a" (src/ppx.ml[113,3195+14]..[113,3195+15])
                                      expression (src/ppx.ml[113,3195+16]..[113,3195+20])
                                        Pexp_ident "myid" (src/ppx.ml[113,3195+16]..[113,3195+20])
                                      expression (src/ppx.ml[114,3217+9]..[114,3217+16])
                                        Pexp_constant PConst_string("types",(src/ppx.ml[114,3217+10]..[114,3217+15]),None)
                                      expression (src/ppx.ml[114,3217+17]..[114,3217+18])
                                        Pexp_ident "b" (src/ppx.ml[114,3217+17]..[114,3217+18])
                                    ]
                              ]
                        ]
              <case>
                pattern (src/ppx.ml[116,3241+4]..[116,3241+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[116,3241+4]..[116,3241+14])
                  Some
                    []
                    pattern (src/ppx.ml[116,3241+15]..[116,3241+16])
                      Ppat_var "a" (src/ppx.ml[116,3241+15]..[116,3241+16])
                expression (src/ppx.ml[118,3289+4]..[118,3289+59])
                  Pexp_apply
                  expression (src/ppx.ml[118,3289+5]..[118,3289+18])
                    Pexp_ident "print_endline" (src/ppx.ml[118,3289+5]..[118,3289+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[118,3289+19]..[118,3289+58])
                        Pexp_apply
                        expression (src/ppx.ml[118,3289+20]..[118,3289+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[118,3289+20]..[118,3289+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[118,3289+35]..[118,3289+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[118,3289+37]..[118,3289+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3368+4]..[121,3368+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[121,3368+4]..[121,3368+12])
                  None
                expression (src/ppx.ml[121,3368+17]..[121,3368+69])
                  Pexp_apply
                  expression (src/ppx.ml[121,3368+18]..[121,3368+31])
                    Pexp_ident "print_endline" (src/ppx.ml[121,3368+18]..[121,3368+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[121,3368+32]..[121,3368+68])
                        Pexp_apply
                        expression (src/ppx.ml[121,3368+33]..[121,3368+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[121,3368+33]..[121,3368+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[121,3368+48]..[121,3368+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[121,3368+50]..[121,3368+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[122,3438+4]..[122,3438+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[122,3438+4]..[122,3438+12])
                  Some
                    []
                    pattern (src/ppx.ml[122,3438+13]..[122,3438+17])
                      Ppat_var "name" (src/ppx.ml[122,3438+13]..[122,3438+17])
                expression (src/ppx.ml[122,3438+20]..[122,3438+80])
                  Pexp_apply
                  expression (src/ppx.ml[122,3438+21]..[122,3438+34])
                    Pexp_ident "print_endline" (src/ppx.ml[122,3438+21]..[122,3438+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[122,3438+35]..[122,3438+79])
                        Pexp_apply
                        expression (src/ppx.ml[122,3438+36]..[122,3438+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[122,3438+36]..[122,3438+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[122,3438+51]..[122,3438+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[122,3438+52]..[122,3438+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[122,3438+53]..[122,3438+68]),None)
                                expression (src/ppx.ml[122,3438+73]..[122,3438+77])
                                  Pexp_ident "name" (src/ppx.ml[122,3438+73]..[122,3438+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[123,3519+4]..[123,3519+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[123,3519+4]..[123,3519+14])
                  Some
                    []
                    pattern (src/ppx.ml[123,3519+15]..[123,3519+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[123,3519+16]..[123,3519+25])
                          Ppat_var "arg_label" (src/ppx.ml[123,3519+16]..[123,3519+25])
                        pattern (src/ppx.ml[123,3519+28]..[123,3519+37])
                          Ppat_var "core_type" (src/ppx.ml[123,3519+28]..[123,3519+37])
                        pattern (src/ppx.ml[123,3519+40]..[123,3519+50])
                          Ppat_var "core_type2" (src/ppx.ml[123,3519+40]..[123,3519+50])
                      ]
                expression (src/ppx.ml[124,3574+4]..[124,3574+61])
                  Pexp_apply
                  expression (src/ppx.ml[124,3574+5]..[124,3574+18])
                    Pexp_ident "print_endline" (src/ppx.ml[124,3574+5]..[124,3574+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[124,3574+19]..[124,3574+60])
                        Pexp_apply
                        expression (src/ppx.ml[124,3574+20]..[124,3574+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[124,3574+20]..[124,3574+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[124,3574+35]..[124,3574+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[124,3574+37]..[124,3574+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[126,3637+4]..[126,3637+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[126,3637+4]..[126,3637+15])
                  Some
                    []
                    pattern (src/ppx.ml[126,3637+16]..[126,3637+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[126,3637+17]..[126,3637+18])
                          Ppat_var "a" (src/ppx.ml[126,3637+17]..[126,3637+18])
                        pattern (src/ppx.ml[126,3637+19]..[126,3637+20])
                          Ppat_var "b" (src/ppx.ml[126,3637+19]..[126,3637+20])
                      ]
                expression (src/ppx.ml[128,3706+4]..[128,3706+60])
                  Pexp_apply
                  expression (src/ppx.ml[128,3706+5]..[128,3706+18])
                    Pexp_ident "print_endline" (src/ppx.ml[128,3706+5]..[128,3706+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[128,3706+19]..[128,3706+59])
                        Pexp_apply
                        expression (src/ppx.ml[128,3706+20]..[128,3706+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[128,3706+20]..[128,3706+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[128,3706+35]..[128,3706+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[128,3706+37]..[128,3706+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,3767+4]..[129,3767+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[129,3767+4]..[129,3767+14])
                  Some
                    []
                    pattern (src/ppx.ml[129,3767+15]..[129,3767+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[129,3767+16]..[129,3767+17])
                          Ppat_var "a" (src/ppx.ml[129,3767+16]..[129,3767+17])
                        pattern (src/ppx.ml[129,3767+18]..[129,3767+19])
                          Ppat_var "b" (src/ppx.ml[129,3767+18]..[129,3767+19])
                      ]
                expression (src/ppx.ml[131,3837+4]..[131,3837+60])
                  Pexp_apply
                  expression (src/ppx.ml[131,3837+5]..[131,3837+18])
                    Pexp_ident "print_endline" (src/ppx.ml[131,3837+5]..[131,3837+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[131,3837+19]..[131,3837+59])
                        Pexp_apply
                        expression (src/ppx.ml[131,3837+20]..[131,3837+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[131,3837+20]..[131,3837+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[131,3837+35]..[131,3837+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[131,3837+37]..[131,3837+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[132,3898+4]..[132,3898+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[132,3898+4]..[132,3898+14])
                  Some
                    []
                    pattern (src/ppx.ml[132,3898+15]..[132,3898+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[132,3898+16]..[132,3898+17])
                          Ppat_var "a" (src/ppx.ml[132,3898+16]..[132,3898+17])
                        pattern (src/ppx.ml[132,3898+18]..[132,3898+19])
                          Ppat_var "b" (src/ppx.ml[132,3898+18]..[132,3898+19])
                      ]
                expression (src/ppx.ml[134,3959+4]..[134,3959+60])
                  Pexp_apply
                  expression (src/ppx.ml[134,3959+5]..[134,3959+18])
                    Pexp_ident "print_endline" (src/ppx.ml[134,3959+5]..[134,3959+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[134,3959+19]..[134,3959+59])
                        Pexp_apply
                        expression (src/ppx.ml[134,3959+20]..[134,3959+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[134,3959+20]..[134,3959+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[134,3959+35]..[134,3959+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[134,3959+37]..[134,3959+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[135,4020+4]..[135,4020+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[135,4020+4]..[135,4020+16])
                  Some
                    []
                    pattern (src/ppx.ml[135,4020+17]..[135,4020+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4020+18]..[135,4020+19])
                          Ppat_var "a" (src/ppx.ml[135,4020+18]..[135,4020+19])
                        pattern (src/ppx.ml[135,4020+20]..[135,4020+21])
                          Ppat_var "b" (src/ppx.ml[135,4020+20]..[135,4020+21])
                        pattern (src/ppx.ml[135,4020+22]..[135,4020+23])
                          Ppat_var "c" (src/ppx.ml[135,4020+22]..[135,4020+23])
                      ]
                expression (src/ppx.ml[137,4110+4]..[137,4110+60])
                  Pexp_apply
                  expression (src/ppx.ml[137,4110+5]..[137,4110+18])
                    Pexp_ident "print_endline" (src/ppx.ml[137,4110+5]..[137,4110+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[137,4110+19]..[137,4110+59])
                        Pexp_apply
                        expression (src/ppx.ml[137,4110+20]..[137,4110+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[137,4110+20]..[137,4110+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[137,4110+35]..[137,4110+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[137,4110+37]..[137,4110+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[138,4171+4]..[138,4171+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[138,4171+4]..[138,4171+13])
                  Some
                    []
                    pattern (src/ppx.ml[138,4171+14]..[138,4171+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[138,4171+15]..[138,4171+16])
                          Ppat_var "a" (src/ppx.ml[138,4171+15]..[138,4171+16])
                        pattern (src/ppx.ml[138,4171+17]..[138,4171+18])
                          Ppat_var "b" (src/ppx.ml[138,4171+17]..[138,4171+18])
                      ]
                expression (src/ppx.ml[140,4235+4]..[140,4235+60])
                  Pexp_apply
                  expression (src/ppx.ml[140,4235+5]..[140,4235+18])
                    Pexp_ident "print_endline" (src/ppx.ml[140,4235+5]..[140,4235+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[140,4235+19]..[140,4235+59])
                        Pexp_apply
                        expression (src/ppx.ml[140,4235+20]..[140,4235+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[140,4235+20]..[140,4235+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[140,4235+35]..[140,4235+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[140,4235+37]..[140,4235+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[141,4296+4]..[141,4296+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[141,4296+4]..[141,4296+16])
                  Some
                    []
                    pattern (src/ppx.ml[141,4296+17]..[141,4296+18])
                      Ppat_var "a" (src/ppx.ml[141,4296+17]..[141,4296+18])
                expression (src/ppx.ml[143,4344+4]..[143,4344+62])
                  Pexp_apply
                  expression (src/ppx.ml[143,4344+5]..[143,4344+18])
                    Pexp_ident "print_endline" (src/ppx.ml[143,4344+5]..[143,4344+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[143,4344+19]..[143,4344+61])
                        Pexp_apply
                        expression (src/ppx.ml[143,4344+20]..[143,4344+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[143,4344+20]..[143,4344+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[143,4344+35]..[143,4344+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[143,4344+36]..[143,4344+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[143,4344+37]..[143,4344+55]),None)
                                expression (src/ppx.ml[143,4344+57]..[143,4344+58])
                                  Pexp_ident "a" (src/ppx.ml[143,4344+57]..[143,4344+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[146,4552+4]..[146,4552+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[146,4552+4]..[146,4552+18])
                  Some
                    []
                    pattern (src/ppx.ml[146,4552+19]..[146,4552+20])
                      Ppat_var "a" (src/ppx.ml[146,4552+19]..[146,4552+20])
                expression (src/ppx.ml[147,4600+4]..[147,4600+65])
                  Pexp_apply
                  expression (src/ppx.ml[147,4600+5]..[147,4600+18])
                    Pexp_ident "print_endline" (src/ppx.ml[147,4600+5]..[147,4600+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[147,4600+19]..[147,4600+64])
                        Pexp_apply
                        expression (src/ppx.ml[147,4600+20]..[147,4600+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[147,4600+20]..[147,4600+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[147,4600+35]..[147,4600+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[147,4600+36]..[147,4600+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[147,4600+37]..[147,4600+58]),None)
                                expression (src/ppx.ml[147,4600+60]..[147,4600+61])
                                  Pexp_ident "a" (src/ppx.ml[147,4600+60]..[147,4600+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[149,4670+2]..[149,4670+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[149,4670+2]..[149,4670+26])
        expression (src/ppx.ml[149,4670+26]..[155,4807+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[149,4670+26]..[149,4670+29])
            Ppat_var "x" (src/ppx.ml[149,4670+27]..[149,4670+28])
          expression (src/ppx.ml[150,4702+2]..[155,4807+6])
            Pexp_match
            expression (src/ppx.ml[150,4702+8]..[150,4702+9])
              Pexp_ident "x" (src/ppx.ml[150,4702+8]..[150,4702+9])
            [
              <case>
                pattern (src/ppx.ml[151,4717+4]..[151,4717+6])
                  Ppat_construct "[]" (src/ppx.ml[151,4717+4]..[151,4717+6])
                  None
                expression (src/ppx.ml[151,4717+10]..[151,4717+12])
                  Pexp_construct "()" (src/ppx.ml[151,4717+10]..[151,4717+12])
                  None
              <case>
                pattern (src/ppx.ml[152,4730+4]..[152,4730+10])
                  Ppat_construct "::" (src/ppx.ml[152,4730+6]..[152,4730+8])
                  Some
                    []
                    pattern (src/ppx.ml[152,4730+4]..[152,4730+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[152,4730+4]..[152,4730+5])
                          Ppat_var "h" (src/ppx.ml[152,4730+4]..[152,4730+5])
                        pattern (src/ppx.ml[152,4730+9]..[152,4730+10])
                          Ppat_var "t" (src/ppx.ml[152,4730+9]..[152,4730+10])
                      ]
                expression (src/ppx.ml[153,4744+4]..[155,4807+6])
                  Pexp_sequence
                  expression (src/ppx.ml[153,4744+4]..[153,4744+27])
                    Pexp_apply
                    expression (src/ppx.ml[153,4744+5]..[153,4744+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[153,4744+5]..[153,4744+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[153,4744+25]..[153,4744+26])
                          Pexp_ident "h" (src/ppx.ml[153,4744+25]..[153,4744+26])
                    ]
                  expression (src/ppx.ml[154,4773+4]..[155,4807+6])
                    Pexp_sequence
                    expression (src/ppx.ml[154,4773+4]..[154,4773+32])
                      Pexp_apply
                      expression (src/ppx.ml[154,4773+5]..[154,4773+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[154,4773+5]..[154,4773+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[154,4773+30]..[154,4773+31])
                            Pexp_ident "t" (src/ppx.ml[154,4773+30]..[154,4773+31])
                      ]
                    expression (src/ppx.ml[155,4807+4]..[155,4807+6])
                      Pexp_construct "()" (src/ppx.ml[155,4807+4]..[155,4807+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[157,4818+0]..[157,4818+17])
          Ppat_var "process_core_type" (src/ppx.ml[157,4818+0]..[157,4818+17])
        expression (src/ppx.ml[157,4818+17]..[167,5085+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[157,4818+17]..[157,4818+20])
            Ppat_var "x" (src/ppx.ml[157,4818+18]..[157,4818+19])
          expression (src/ppx.ml[158,4841+2]..[167,5085+80])
            Pexp_match
            expression (src/ppx.ml[158,4841+8]..[158,4841+9])
              Pexp_ident "x" (src/ppx.ml[158,4841+8]..[158,4841+9])
            [
              <case>
                pattern (src/ppx.ml[159,4857+4]..[164,5018+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[160,4863+6]..[160,4863+15]) ghost
                      pattern (src/ppx.ml[160,4863+6]..[160,4863+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[160,4863+6]..[160,4863+15])
                    "ptyp_loc" (src/ppx.ml[161,4902+5]..[161,4902+13]) ghost
                      pattern (src/ppx.ml[161,4902+5]..[161,4902+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[161,4902+5]..[161,4902+13])
                    "ptyp_loc_stack" (src/ppx.ml[162,4935+5]..[162,4935+19]) ghost
                      pattern (src/ppx.ml[162,4935+5]..[162,4935+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[162,4935+5]..[162,4935+19])
                    "ptyp_attributes" (src/ppx.ml[163,4978+5]..[163,4978+20]) ghost
                      pattern (src/ppx.ml[163,4978+5]..[163,4978+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[163,4978+5]..[163,4978+20])
                  ]
                expression (src/ppx.ml[165,5026+4]..[167,5085+80])
                  Pexp_sequence
                  expression (src/ppx.ml[165,5026+4]..[165,5026+38])
                    Pexp_apply
                    expression (src/ppx.ml[165,5026+5]..[165,5026+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[165,5026+5]..[165,5026+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[165,5026+28]..[165,5026+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[165,5026+28]..[165,5026+37])
                    ]
                  expression (src/ppx.ml[167,5085+4]..[167,5085+80])
                    Pexp_apply
                    expression (src/ppx.ml[167,5085+5]..[167,5085+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,5085+5]..[167,5085+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,5085+19]..[167,5085+79])
                          Pexp_apply
                          expression (src/ppx.ml[167,5085+20]..[167,5085+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,5085+20]..[167,5085+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,5085+35]..[167,5085+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,5085+36]..[167,5085+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[167,5085+37]..[167,5085+63]),None)
                                  expression (src/ppx.ml[167,5085+68]..[167,5085+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[167,5085+68]..[167,5085+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[168,5166+4]..[168,5166+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[168,5166+4]..[168,5166+26])
        expression (src/ppx.ml[168,5166+26]..[173,5282+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[168,5166+26]..[168,5166+44])
            Ppat_constraint
            pattern (src/ppx.ml[168,5166+27]..[168,5166+28])
              Ppat_var "x" (src/ppx.ml[168,5166+27]..[168,5166+28])
            core_type (src/ppx.ml[168,5166+29]..[168,5166+43])
              Ptyp_constr "list" (src/ppx.ml[168,5166+39]..[168,5166+43])
              [
                core_type (src/ppx.ml[168,5166+29]..[168,5166+38])
                  Ptyp_constr "core_type" (src/ppx.ml[168,5166+29]..[168,5166+38])
                  []
              ]
          expression (src/ppx.ml[169,5213+2]..[173,5282+29])
            Pexp_match
            expression (src/ppx.ml[169,5213+8]..[169,5213+9])
              Pexp_ident "x" (src/ppx.ml[169,5213+8]..[169,5213+9])
            [
              <case>
                pattern (src/ppx.ml[170,5228+4]..[170,5228+6])
                  Ppat_construct "[]" (src/ppx.ml[170,5228+4]..[170,5228+6])
                  None
                expression (src/ppx.ml[170,5228+10]..[170,5228+12])
                  Pexp_construct "()" (src/ppx.ml[170,5228+10]..[170,5228+12])
                  None
              <case>
                pattern (src/ppx.ml[171,5241+4]..[171,5241+10])
                  Ppat_construct "::" (src/ppx.ml[171,5241+6]..[171,5241+8])
                  Some
                    []
                    pattern (src/ppx.ml[171,5241+4]..[171,5241+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[171,5241+4]..[171,5241+5])
                          Ppat_var "h" (src/ppx.ml[171,5241+4]..[171,5241+5])
                        pattern (src/ppx.ml[171,5241+9]..[171,5241+10])
                          Ppat_var "t" (src/ppx.ml[171,5241+9]..[171,5241+10])
                      ]
                expression (src/ppx.ml[172,5255+4]..[173,5282+29])
                  Pexp_sequence
                  expression (src/ppx.ml[172,5255+4]..[172,5255+25])
                    Pexp_apply
                    expression (src/ppx.ml[172,5255+4]..[172,5255+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[172,5255+4]..[172,5255+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[172,5255+22]..[172,5255+25])
                          Pexp_ident "h" (src/ppx.ml[172,5255+23]..[172,5255+24])
                    ]
                  expression (src/ppx.ml[173,5282+4]..[173,5282+29])
                    Pexp_apply
                    expression (src/ppx.ml[173,5282+4]..[173,5282+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[173,5282+4]..[173,5282+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[173,5282+26]..[173,5282+29])
                          Pexp_ident "t" (src/ppx.ml[173,5282+27]..[173,5282+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[180,5326+0]..[187,5525+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[180,5326+4]..[180,5326+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[180,5326+4]..[180,5326+31])
        expression (src/ppx.ml[180,5326+31]..[187,5525+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[180,5326+31]..[180,5326+34])
            Ppat_var "x" (src/ppx.ml[180,5326+32]..[180,5326+33])
          expression (src/ppx.ml[181,5363+2]..[187,5525+65])
            Pexp_match
            expression (src/ppx.ml[181,5363+8]..[181,5363+9])
              Pexp_ident "x" (src/ppx.ml[181,5363+8]..[181,5363+9])
            [
              <case>
                pattern (src/ppx.ml[182,5378+4]..[182,5378+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[182,5378+4]..[182,5378+15])
                  Some
                    []
                    pattern (src/ppx.ml[182,5378+16]..[182,5378+17])
                      Ppat_var "a" (src/ppx.ml[182,5378+16]..[182,5378+17])
                expression (src/ppx.ml[183,5399+4]..[184,5431+64])
                  Pexp_sequence
                  expression (src/ppx.ml[183,5399+4]..[183,5399+30])
                    Pexp_apply
                    expression (src/ppx.ml[183,5399+5]..[183,5399+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[183,5399+5]..[183,5399+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[183,5399+28]..[183,5399+29])
                          Pexp_ident "a" (src/ppx.ml[183,5399+28]..[183,5399+29])
                    ]
                  expression (src/ppx.ml[184,5431+4]..[184,5431+64])
                    Pexp_apply
                    expression (src/ppx.ml[184,5431+5]..[184,5431+18])
                      Pexp_ident "print_endline" (src/ppx.ml[184,5431+5]..[184,5431+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[184,5431+19]..[184,5431+63])
                          Pexp_apply
                          expression (src/ppx.ml[184,5431+20]..[184,5431+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[184,5431+20]..[184,5431+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[184,5431+35]..[184,5431+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[184,5431+36]..[184,5431+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[184,5431+37]..[184,5431+55]),None)
                                  expression (src/ppx.ml[184,5431+60]..[184,5431+61])
                                    Pexp_ident "a" (src/ppx.ml[184,5431+60]..[184,5431+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[186,5503+4]..[186,5503+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[186,5503+4]..[186,5503+16])
                  Some
                    []
                    pattern (src/ppx.ml[186,5503+17]..[186,5503+18])
                      Ppat_var "a" (src/ppx.ml[186,5503+17]..[186,5503+18])
                expression (src/ppx.ml[187,5525+4]..[187,5525+65])
                  Pexp_apply
                  expression (src/ppx.ml[187,5525+5]..[187,5525+18])
                    Pexp_ident "print_endline" (src/ppx.ml[187,5525+5]..[187,5525+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[187,5525+19]..[187,5525+64])
                        Pexp_apply
                        expression (src/ppx.ml[187,5525+20]..[187,5525+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[187,5525+20]..[187,5525+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[187,5525+35]..[187,5525+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[187,5525+36]..[187,5525+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[187,5525+37]..[187,5525+56]),None)
                                expression (src/ppx.ml[187,5525+61]..[187,5525+62])
                                  Pexp_ident "a" (src/ppx.ml[187,5525+61]..[187,5525+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[189,5592+0]..[221,6568+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[189,5592+8]..[189,5592+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[189,5592+8]..[189,5592+57])
        expression (src/ppx.ml[189,5592+57]..[221,6568+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[189,5592+57]..[189,5592+60])
            Ppat_var "x" (src/ppx.ml[189,5592+58]..[189,5592+59])
          expression (src/ppx.ml[190,5655+2]..[221,6568+8])
            Pexp_match
            expression (src/ppx.ml[190,5655+8]..[190,5655+9])
              Pexp_ident "x" (src/ppx.ml[190,5655+8]..[190,5655+9])
            [
              <case>
                pattern (src/ppx.ml[191,5670+4]..[191,5670+6])
                  Ppat_construct "[]" (src/ppx.ml[191,5670+4]..[191,5670+6])
                  None
                expression (src/ppx.ml[191,5670+10]..[191,5670+12])
                  Pexp_construct "()" (src/ppx.ml[191,5670+10]..[191,5670+12])
                  None
              <case>
                pattern (src/ppx.ml[192,5683+4]..[192,5683+10])
                  Ppat_construct "::" (src/ppx.ml[192,5683+6]..[192,5683+8])
                  Some
                    []
                    pattern (src/ppx.ml[192,5683+4]..[192,5683+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[192,5683+4]..[192,5683+5])
                          Ppat_var "h" (src/ppx.ml[192,5683+4]..[192,5683+5])
                        pattern (src/ppx.ml[192,5683+9]..[192,5683+10])
                          Ppat_var "t" (src/ppx.ml[192,5683+9]..[192,5683+10])
                      ]
                expression (src/ppx.ml[194,5762+4]..[221,6568+8])
                  Pexp_match
                  expression (src/ppx.ml[194,5762+10]..[194,5762+11])
                    Pexp_ident "h" (src/ppx.ml[194,5762+10]..[194,5762+11])
                  [
                    <case>
                      pattern (src/ppx.ml[195,5779+5]..[202,6017+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[196,5786+6]..[196,5786+14]) ghost
                            pattern (src/ppx.ml[196,5786+6]..[196,5786+14])
                              Ppat_var "pcd_name" (src/ppx.ml[196,5786+6]..[196,5786+14])
                          "pcd_vars" (src/ppx.ml[197,5820+6]..[197,5820+14]) ghost
                            pattern (src/ppx.ml[197,5820+6]..[197,5820+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[197,5820+6]..[197,5820+14])
                          "pcd_args" (src/ppx.ml[198,5859+6]..[198,5859+14]) ghost
                            pattern (src/ppx.ml[198,5859+6]..[198,5859+14])
                              Ppat_var "pcd_args" (src/ppx.ml[198,5859+6]..[198,5859+14])
                          "pcd_res" (src/ppx.ml[199,5904+6]..[199,5904+13]) ghost
                            pattern (src/ppx.ml[199,5904+6]..[199,5904+13])
                              Ppat_var "pcd_res" (src/ppx.ml[199,5904+6]..[199,5904+13])
                          "pcd_loc" (src/ppx.ml[200,5943+6]..[200,5943+13]) ghost
                            pattern (src/ppx.ml[200,5943+6]..[200,5943+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[200,5943+6]..[200,5943+13])
                          "pcd_attributes" (src/ppx.ml[201,5976+6]..[201,5976+20]) ghost
                            pattern (src/ppx.ml[201,5976+6]..[201,5976+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[201,5976+6]..[201,5976+20])
                        ]
                      expression (src/ppx.ml[205,6099+6]..[221,6568+8])
                        Pexp_sequence
                        expression (src/ppx.ml[205,6099+6]..[205,6099+43])
                          Pexp_apply
                          expression (src/ppx.ml[205,6099+6]..[205,6099+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[205,6099+6]..[205,6099+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[205,6099+33]..[205,6099+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[205,6099+34]..[205,6099+42])
                          ]
                        expression (src/ppx.ml[206,6144+6]..[221,6568+8])
                          Pexp_sequence
                          expression (src/ppx.ml[206,6144+6]..[219,6489+16])
                            Pexp_apply
                            expression (src/ppx.ml[206,6144+7]..[206,6144+20])
                              Pexp_ident "print_endline" (src/ppx.ml[206,6144+7]..[206,6144+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[206,6144+21]..[219,6489+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[206,6144+22]..[206,6144+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[206,6144+22]..[206,6144+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[206,6144+37]..[219,6489+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[207,6183+11]..[207,6183+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[207,6183+12]..[207,6183+36]),None)
                                          expression (src/ppx.ml[208,6222+15]..[208,6222+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[208,6222+15]..[208,6222+23])
                                          expression (src/ppx.ml[209,6247+15]..[209,6247+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[209,6247+16]..[209,6247+20]),None)
                                          expression (src/ppx.ml[210,6270+15]..[210,6270+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[210,6270+15]..[210,6270+23])
                                          expression (src/ppx.ml[211,6295+15]..[211,6295+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[211,6295+16]..[211,6295+20]),None)
                                          expression (src/ppx.ml[212,6318+15]..[212,6318+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[212,6318+15]..[212,6318+23])
                                          expression (src/ppx.ml[213,6343+15]..[213,6343+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[213,6343+16]..[213,6343+19]),None)
                                          expression (src/ppx.ml[214,6365+15]..[214,6365+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[214,6365+15]..[214,6365+22])
                                          expression (src/ppx.ml[215,6389+15]..[215,6389+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[215,6389+16]..[215,6389+19]),None)
                                          expression (src/ppx.ml[216,6411+15]..[216,6411+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[216,6411+15]..[216,6411+22])
                                          expression (src/ppx.ml[217,6435+15]..[217,6435+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[217,6435+16]..[217,6435+21]),None)
                                          expression (src/ppx.ml[218,6459+15]..[218,6459+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[218,6459+15]..[218,6459+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[220,6507+6]..[221,6568+8])
                            Pexp_sequence
                            expression (src/ppx.ml[220,6507+6]..[220,6507+59])
                              Pexp_apply
                              expression (src/ppx.ml[220,6507+7]..[220,6507+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[220,6507+7]..[220,6507+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[220,6507+57]..[220,6507+58])
                                    Pexp_ident "t" (src/ppx.ml[220,6507+57]..[220,6507+58])
                              ]
                            expression (src/ppx.ml[221,6568+6]..[221,6568+8])
                              Pexp_construct "()" (src/ppx.ml[221,6568+6]..[221,6568+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[223,6580+0]..[234,6977+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[223,6580+4]..[223,6580+16])
          Ppat_var "process_kind" (src/ppx.ml[223,6580+4]..[223,6580+16])
        expression (src/ppx.ml[223,6580+16]..[234,6977+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[223,6580+16]..[223,6580+19])
            Ppat_var "x" (src/ppx.ml[223,6580+17]..[223,6580+18])
          expression (src/ppx.ml[224,6602+2]..[234,6977+77])
            Pexp_match
            expression (src/ppx.ml[224,6602+8]..[224,6602+9])
              Pexp_ident "x" (src/ppx.ml[224,6602+8]..[224,6602+9])
            [
              <case>
                pattern (src/ppx.ml[226,6639+4]..[226,6639+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[226,6639+4]..[226,6639+18])
                  None
                expression (src/ppx.ml[226,6639+23]..[226,6639+81])
                  Pexp_apply
                  expression (src/ppx.ml[226,6639+24]..[226,6639+37])
                    Pexp_ident "print_endline" (src/ppx.ml[226,6639+24]..[226,6639+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[226,6639+38]..[226,6639+80])
                        Pexp_apply
                        expression (src/ppx.ml[226,6639+39]..[226,6639+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[226,6639+39]..[226,6639+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[226,6639+54]..[226,6639+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6639+56]..[226,6639+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[227,6721+4]..[227,6721+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[227,6721+4]..[227,6721+17])
                  Some
                    []
                    pattern (src/ppx.ml[227,6721+18]..[227,6721+19])
                      Ppat_var "a" (src/ppx.ml[227,6721+18]..[227,6721+19])
                expression (src/ppx.ml[228,6744+4]..[229,6803+65])
                  Pexp_sequence
                  expression (src/ppx.ml[228,6744+4]..[228,6744+57])
                    Pexp_apply
                    expression (src/ppx.ml[228,6744+5]..[228,6744+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[228,6744+5]..[228,6744+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[228,6744+55]..[228,6744+56])
                          Pexp_ident "a" (src/ppx.ml[228,6744+55]..[228,6744+56])
                    ]
                  expression (src/ppx.ml[229,6803+4]..[229,6803+65])
                    Pexp_apply
                    expression (src/ppx.ml[229,6803+5]..[229,6803+18])
                      Pexp_ident "print_endline" (src/ppx.ml[229,6803+5]..[229,6803+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[229,6803+19]..[229,6803+64])
                          Pexp_apply
                          expression (src/ppx.ml[229,6803+20]..[229,6803+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[229,6803+20]..[229,6803+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[229,6803+35]..[229,6803+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[229,6803+36]..[229,6803+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[229,6803+37]..[229,6803+57]),None)
                                  expression (src/ppx.ml[229,6803+61]..[229,6803+62])
                                    Pexp_ident "a" (src/ppx.ml[229,6803+61]..[229,6803+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[232,6916+5]..[232,6916+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[232,6916+5]..[232,6916+17])
                  Some
                    []
                    pattern (src/ppx.ml[232,6916+18]..[232,6916+19])
                      Ppat_var "a" (src/ppx.ml[232,6916+18]..[232,6916+19])
                expression (src/ppx.ml[233,6944+5]..[233,6944+32])
                  Pexp_apply
                  expression (src/ppx.ml[233,6944+5]..[233,6944+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[233,6944+5]..[233,6944+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[233,6944+29]..[233,6944+32])
                        Pexp_ident "a" (src/ppx.ml[233,6944+30]..[233,6944+31])
                  ]
              <case>
                pattern (src/ppx.ml[234,6977+5]..[234,6977+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[234,6977+5]..[234,6977+15])
                  None
                expression (src/ppx.ml[234,6977+19]..[234,6977+77])
                  Pexp_apply
                  expression (src/ppx.ml[234,6977+20]..[234,6977+33])
                    Pexp_ident "print_endline" (src/ppx.ml[234,6977+20]..[234,6977+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[234,6977+34]..[234,6977+76])
                        Pexp_apply
                        expression (src/ppx.ml[234,6977+35]..[234,6977+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[234,6977+35]..[234,6977+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[234,6977+50]..[234,6977+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[234,6977+52]..[234,6977+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[236,7056+0]..[257,8062+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[236,7056+4]..[236,7056+19])
          Ppat_var "print_type_decl" (src/ppx.ml[236,7056+4]..[236,7056+19])
        expression (src/ppx.ml[236,7056+19]..[257,8062+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[236,7056+19]..[236,7056+22])
            Ppat_var "x" (src/ppx.ml[236,7056+20]..[236,7056+21])
          expression (src/ppx.ml[237,7081+2]..[257,8062+38])
            Pexp_match
            expression (src/ppx.ml[237,7081+8]..[237,7081+9])
              Pexp_ident "x" (src/ppx.ml[237,7081+8]..[237,7081+9])
            [
              <case>
                pattern (src/ppx.ml[238,7096+4]..[247,7477+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[239,7102+6]..[239,7102+16]) ghost
                      pattern (src/ppx.ml[239,7102+6]..[239,7102+16])
                        Ppat_var "ptype_name" (src/ppx.ml[239,7102+6]..[239,7102+16])
                    "ptype_params" (src/ppx.ml[240,7139+6]..[240,7139+18]) ghost
                      pattern (src/ppx.ml[240,7139+6]..[240,7139+18])
                        Ppat_var "ptype_params" (src/ppx.ml[240,7139+6]..[240,7139+18])
                    "ptype_cstrs" (src/ppx.ml[241,7211+6]..[241,7211+17]) ghost
                      pattern (src/ppx.ml[241,7211+6]..[241,7211+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[241,7211+6]..[241,7211+17])
                    "ptype_kind" (src/ppx.ml[242,7280+6]..[242,7280+16]) ghost
                      pattern (src/ppx.ml[242,7280+6]..[242,7280+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[242,7280+6]..[242,7280+16])
                    "ptype_private" (src/ppx.ml[243,7317+6]..[243,7317+19]) ghost
                      pattern (src/ppx.ml[243,7317+6]..[243,7317+19])
                        Ppat_var "ptype_private" (src/ppx.ml[243,7317+6]..[243,7317+19])
                    "ptype_manifest" (src/ppx.ml[244,7358+6]..[244,7358+20]) ghost
                      pattern (src/ppx.ml[244,7358+6]..[244,7358+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[244,7358+6]..[244,7358+20])
                    "ptype_attributes" (src/ppx.ml[245,7405+6]..[245,7405+22]) ghost
                      pattern (src/ppx.ml[245,7405+6]..[245,7405+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[245,7405+6]..[245,7405+22])
                    "ptype_loc" (src/ppx.ml[246,7446+6]..[246,7446+15]) ghost
                      pattern (src/ppx.ml[246,7446+6]..[246,7446+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[246,7446+6]..[246,7446+15])
                  ]
                expression (src/ppx.ml[248,7486+4]..[257,8062+38])
                  Pexp_sequence
                  expression (src/ppx.ml[248,7486+4]..[248,7486+69])
                    Pexp_apply
                    expression (src/ppx.ml[248,7486+5]..[248,7486+18])
                      Pexp_ident "print_endline" (src/ppx.ml[248,7486+5]..[248,7486+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[248,7486+19]..[248,7486+68])
                          Pexp_apply
                          expression (src/ppx.ml[248,7486+20]..[248,7486+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[248,7486+20]..[248,7486+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[248,7486+35]..[248,7486+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[248,7486+36]..[248,7486+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[248,7486+37]..[248,7486+53]),None)
                                  expression (src/ppx.ml[248,7486+56]..[248,7486+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[248,7486+56]..[248,7486+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[249,7557+4]..[257,8062+38])
                    Pexp_sequence
                    expression (src/ppx.ml[249,7557+4]..[249,7557+72])
                      Pexp_apply
                      expression (src/ppx.ml[249,7557+5]..[249,7557+18])
                        Pexp_ident "print_endline" (src/ppx.ml[249,7557+5]..[249,7557+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[249,7557+19]..[249,7557+71])
                            Pexp_apply
                            expression (src/ppx.ml[249,7557+20]..[249,7557+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[249,7557+20]..[249,7557+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[249,7557+35]..[249,7557+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[249,7557+36]..[249,7557+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[249,7557+37]..[249,7557+54]),None)
                                    expression (src/ppx.ml[249,7557+57]..[249,7557+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[249,7557+57]..[249,7557+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[250,7631+4]..[257,8062+38])
                      Pexp_sequence
                      expression (src/ppx.ml[250,7631+4]..[250,7631+66])
                        Pexp_apply
                        expression (src/ppx.ml[250,7631+5]..[250,7631+18])
                          Pexp_ident "print_endline" (src/ppx.ml[250,7631+5]..[250,7631+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[250,7631+19]..[250,7631+65])
                              Pexp_apply
                              expression (src/ppx.ml[250,7631+20]..[250,7631+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[250,7631+20]..[250,7631+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[250,7631+35]..[250,7631+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[250,7631+36]..[250,7631+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[250,7631+37]..[250,7631+49]),None)
                                      expression (src/ppx.ml[250,7631+52]..[250,7631+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[250,7631+52]..[250,7631+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[251,7699+4]..[257,8062+38])
                        Pexp_sequence
                        expression (src/ppx.ml[251,7699+4]..[251,7699+63])
                          Pexp_apply
                          expression (src/ppx.ml[251,7699+5]..[251,7699+18])
                            Pexp_ident "print_endline" (src/ppx.ml[251,7699+5]..[251,7699+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[251,7699+19]..[251,7699+62])
                                Pexp_apply
                                expression (src/ppx.ml[251,7699+20]..[251,7699+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[251,7699+20]..[251,7699+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[251,7699+35]..[251,7699+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[251,7699+36]..[251,7699+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[251,7699+37]..[251,7699+48]),None)
                                        expression (src/ppx.ml[251,7699+50]..[251,7699+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[251,7699+50]..[251,7699+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[252,7764+4]..[257,8062+38])
                          Pexp_sequence
                          expression (src/ppx.ml[252,7764+4]..[252,7764+29])
                            Pexp_apply
                            expression (src/ppx.ml[252,7764+5]..[252,7764+17])
                              Pexp_ident "process_kind" (src/ppx.ml[252,7764+5]..[252,7764+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[252,7764+18]..[252,7764+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[252,7764+18]..[252,7764+28])
                            ]
                          expression (src/ppx.ml[253,7795+4]..[257,8062+38])
                            Pexp_apply
                            expression (src/ppx.ml[253,7795+5]..[253,7795+18])
                              Pexp_ident "print_endline" (src/ppx.ml[253,7795+5]..[253,7795+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7795+19]..[257,8062+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[253,7795+20]..[253,7795+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[253,7795+20]..[253,7795+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[253,7795+35]..[257,8062+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[253,7795+36]..[253,7795+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[253,7795+37]..[253,7795+51]),None)
                                          expression (src/ppx.ml[253,7795+55]..[253,7795+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[253,7795+55]..[253,7795+68])
                                          expression (src/ppx.ml[254,7865+36]..[254,7865+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[254,7865+37]..[254,7865+51]),None)
                                          expression (src/ppx.ml[254,7865+54]..[254,7865+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[254,7865+54]..[254,7865+68])
                                          expression (src/ppx.ml[255,7935+36]..[255,7935+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[255,7935+37]..[255,7935+47]),None)
                                          expression (src/ppx.ml[255,7935+50]..[255,7935+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[255,7935+50]..[255,7935+66])
                                          expression (src/ppx.ml[256,8003+36]..[256,8003+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[256,8003+37]..[256,8003+46]),None)
                                          expression (src/ppx.ml[256,8003+49]..[256,8003+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[256,8003+49]..[256,8003+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[259,8106+0]..[265,8241+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[259,8106+8]..[259,8106+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[259,8106+8]..[259,8106+30])
        expression (src/ppx.ml[259,8106+30]..[265,8241+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[259,8106+30]..[259,8106+33])
            Ppat_var "x" (src/ppx.ml[259,8106+31]..[259,8106+32])
          expression (src/ppx.ml[260,8142+2]..[265,8241+6])
            Pexp_match
            expression (src/ppx.ml[260,8142+8]..[260,8142+9])
              Pexp_ident "x" (src/ppx.ml[260,8142+8]..[260,8142+9])
            [
              <case>
                pattern (src/ppx.ml[261,8157+4]..[261,8157+6])
                  Ppat_construct "[]" (src/ppx.ml[261,8157+4]..[261,8157+6])
                  None
                expression (src/ppx.ml[261,8157+10]..[261,8157+12])
                  Pexp_construct "()" (src/ppx.ml[261,8157+10]..[261,8157+12])
                  None
              <case>
                pattern (src/ppx.ml[262,8170+4]..[262,8170+10])
                  Ppat_construct "::" (src/ppx.ml[262,8170+6]..[262,8170+8])
                  Some
                    []
                    pattern (src/ppx.ml[262,8170+4]..[262,8170+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[262,8170+4]..[262,8170+5])
                          Ppat_var "h" (src/ppx.ml[262,8170+4]..[262,8170+5])
                        pattern (src/ppx.ml[262,8170+9]..[262,8170+10])
                          Ppat_var "t" (src/ppx.ml[262,8170+9]..[262,8170+10])
                      ]
                expression (src/ppx.ml[263,8184+4]..[265,8241+6])
                  Pexp_sequence
                  expression (src/ppx.ml[263,8184+4]..[263,8184+23])
                    Pexp_apply
                    expression (src/ppx.ml[263,8184+5]..[263,8184+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[263,8184+5]..[263,8184+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[263,8184+21]..[263,8184+22])
                          Pexp_ident "h" (src/ppx.ml[263,8184+21]..[263,8184+22])
                    ]
                  expression (src/ppx.ml[264,8209+4]..[265,8241+6])
                    Pexp_sequence
                    expression (src/ppx.ml[264,8209+4]..[264,8209+30])
                      Pexp_apply
                      expression (src/ppx.ml[264,8209+5]..[264,8209+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[264,8209+5]..[264,8209+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[264,8209+28]..[264,8209+29])
                            Pexp_ident "t" (src/ppx.ml[264,8209+28]..[264,8209+29])
                      ]
                    expression (src/ppx.ml[265,8241+4]..[265,8241+6])
                      Pexp_construct "()" (src/ppx.ml[265,8241+4]..[265,8241+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[267,8253+0]..[293,10217+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,8253+4]..[267,8253+13])
          Ppat_var "printdesc" (src/ppx.ml[267,8253+4]..[267,8253+13])
        expression (src/ppx.ml[267,8253+13]..[293,10217+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[267,8253+13]..[267,8253+37])
            Ppat_constraint
            pattern (src/ppx.ml[267,8253+14]..[267,8253+15])
              Ppat_var "x" (src/ppx.ml[267,8253+14]..[267,8253+15])
            core_type (src/ppx.ml[267,8253+17]..[267,8253+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[267,8253+17]..[267,8253+36])
              []
          expression (src/ppx.ml[267,8253+38]..[293,10217+128])
            Pexp_constraint
            expression (src/ppx.ml[268,8299+2]..[293,10217+128])
              Pexp_sequence
              expression (src/ppx.ml[268,8299+2]..[268,8299+68])
                Pexp_apply
                expression (src/ppx.ml[268,8299+3]..[268,8299+16])
                  Pexp_ident "print_endline" (src/ppx.ml[268,8299+3]..[268,8299+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[268,8299+17]..[268,8299+67])
                      Pexp_apply
                      expression (src/ppx.ml[268,8299+18]..[268,8299+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[268,8299+18]..[268,8299+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8299+33]..[268,8299+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[268,8299+34]..[268,8299+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[268,8299+35]..[268,8299+61]),None)
                              expression (src/ppx.ml[268,8299+64]..[268,8299+65])
                                Pexp_ident "x" (src/ppx.ml[268,8299+64]..[268,8299+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[269,8369+2]..[293,10217+128])
                Pexp_match
                expression (src/ppx.ml[269,8369+8]..[269,8369+9])
                  Pexp_ident "x" (src/ppx.ml[269,8369+8]..[269,8369+9])
                [
                  <case>
                    pattern (src/ppx.ml[270,8384+4]..[270,8384+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[270,8384+4]..[270,8384+13])
                      Some
                        []
                        pattern (src/ppx.ml[270,8384+14]..[270,8384+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[270,8384+15]..[270,8384+25])
                              Ppat_var "expression" (src/ppx.ml[270,8384+15]..[270,8384+25])
                            pattern (src/ppx.ml[270,8384+26]..[270,8384+36])
                              Ppat_var "attributes" (src/ppx.ml[270,8384+26]..[270,8384+36])
                          ]
                    expression (src/ppx.ml[270,8384+41]..[270,8384+117])
                      Pexp_apply
                      expression (src/ppx.ml[270,8384+42]..[270,8384+55])
                        Pexp_ident "print_endline" (src/ppx.ml[270,8384+42]..[270,8384+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,8384+56]..[270,8384+116])
                            Pexp_apply
                            expression (src/ppx.ml[270,8384+57]..[270,8384+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,8384+57]..[270,8384+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,8384+72]..[270,8384+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,8384+73]..[270,8384+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[270,8384+74]..[270,8384+90]),None)
                                    expression (src/ppx.ml[270,8384+93]..[270,8384+103])
                                      Pexp_ident "expression" (src/ppx.ml[270,8384+93]..[270,8384+103])
                                    expression (src/ppx.ml[270,8384+104]..[270,8384+114])
                                      Pexp_ident "attributes" (src/ppx.ml[270,8384+104]..[270,8384+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,8522+4]..[272,8522+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[272,8522+4]..[272,8522+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,8522+15]..[272,8522+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[272,8522+16]..[272,8522+24])
                              Ppat_var "rec_flag" (src/ppx.ml[272,8522+16]..[272,8522+24])
                            pattern (src/ppx.ml[272,8522+26]..[272,8522+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[272,8522+26]..[272,8522+44])
                          ]
                    expression (src/ppx.ml[272,8522+48]..[273,8656+48])
                      Pexp_sequence
                      expression (src/ppx.ml[272,8522+48]..[272,8522+132])
                        Pexp_apply
                        expression (src/ppx.ml[272,8522+49]..[272,8522+62])
                          Pexp_ident "print_endline" (src/ppx.ml[272,8522+49]..[272,8522+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[272,8522+63]..[272,8522+131])
                              Pexp_apply
                              expression (src/ppx.ml[272,8522+64]..[272,8522+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[272,8522+64]..[272,8522+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[272,8522+79]..[272,8522+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[272,8522+80]..[272,8522+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[272,8522+81]..[272,8522+98]),None)
                                      expression (src/ppx.ml[272,8522+101]..[272,8522+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[272,8522+101]..[272,8522+109])
                                      expression (src/ppx.ml[272,8522+111]..[272,8522+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[272,8522+111]..[272,8522+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[273,8656+4]..[273,8656+48])
                        Pexp_apply
                        expression (src/ppx.ml[273,8656+4]..[273,8656+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[273,8656+4]..[273,8656+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[273,8656+28]..[273,8656+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[273,8656+29]..[273,8656+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[274,8705+4]..[274,8705+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[274,8705+4]..[274,8705+18])
                      Some
                        []
                        pattern (src/ppx.ml[274,8705+19]..[274,8705+36])
                          Ppat_var "value_description" (src/ppx.ml[274,8705+19]..[274,8705+36])
                    expression (src/ppx.ml[274,8705+39]..[274,8705+116])
                      Pexp_apply
                      expression (src/ppx.ml[274,8705+40]..[274,8705+53])
                        Pexp_ident "print_endline" (src/ppx.ml[274,8705+40]..[274,8705+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,8705+54]..[274,8705+115])
                            Pexp_apply
                            expression (src/ppx.ml[274,8705+55]..[274,8705+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,8705+55]..[274,8705+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,8705+70]..[274,8705+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,8705+71]..[274,8705+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[274,8705+72]..[274,8705+93]),None)
                                    expression (src/ppx.ml[274,8705+96]..[274,8705+113])
                                      Pexp_ident "value_description" (src/ppx.ml[274,8705+96]..[274,8705+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,8823+4]..[276,8823+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[276,8823+4]..[276,8823+13])
                      Some
                        []
                        pattern (src/ppx.ml[276,8823+14]..[276,8823+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,8823+15]..[276,8823+23])
                              Ppat_var "rec_flag" (src/ppx.ml[276,8823+15]..[276,8823+23])
                            pattern (src/ppx.ml[276,8823+25]..[276,8823+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[276,8823+25]..[276,8823+46])
                          ]
                    expression (src/ppx.ml[278,8902+4]..[279,8953+90])
                      Pexp_sequence
                      expression (src/ppx.ml[278,8902+4]..[278,8902+49])
                        Pexp_apply
                        expression (src/ppx.ml[278,8902+4]..[278,8902+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[278,8902+4]..[278,8902+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[278,8902+26]..[278,8902+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[278,8902+27]..[278,8902+48])
                        ]
                      expression (src/ppx.ml[279,8953+4]..[279,8953+90])
                        Pexp_apply
                        expression (src/ppx.ml[279,8953+5]..[279,8953+18])
                          Pexp_ident "print_endline" (src/ppx.ml[279,8953+5]..[279,8953+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[279,8953+19]..[279,8953+89])
                              Pexp_apply
                              expression (src/ppx.ml[279,8953+20]..[279,8953+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[279,8953+20]..[279,8953+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[279,8953+35]..[279,8953+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[279,8953+36]..[279,8953+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[279,8953+37]..[279,8953+53]),None)
                                      expression (src/ppx.ml[279,8953+56]..[279,8953+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[279,8953+56]..[279,8953+64])
                                      expression (src/ppx.ml[279,8953+66]..[279,8953+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[279,8953+66]..[279,8953+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[282,9046+4]..[282,9046+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[282,9046+4]..[282,9046+15])
                      Some
                        []
                        pattern (src/ppx.ml[282,9046+17]..[282,9046+31])
                          Ppat_var "type_extension" (src/ppx.ml[282,9046+17]..[282,9046+31])
                    expression (src/ppx.ml[282,9046+34]..[282,9046+105])
                      Pexp_apply
                      expression (src/ppx.ml[282,9046+35]..[282,9046+48])
                        Pexp_ident "print_endline" (src/ppx.ml[282,9046+35]..[282,9046+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[282,9046+49]..[282,9046+104])
                            Pexp_apply
                            expression (src/ppx.ml[282,9046+50]..[282,9046+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[282,9046+50]..[282,9046+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[282,9046+65]..[282,9046+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[282,9046+66]..[282,9046+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[282,9046+67]..[282,9046+85]),None)
                                    expression (src/ppx.ml[282,9046+88]..[282,9046+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[282,9046+88]..[282,9046+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[283,9152+4]..[283,9152+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[283,9152+4]..[283,9152+18])
                      Some
                        []
                        pattern (src/ppx.ml[283,9152+19]..[283,9152+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[283,9152+19]..[283,9152+40])
                    expression (src/ppx.ml[283,9152+43]..[283,9152+124])
                      Pexp_apply
                      expression (src/ppx.ml[283,9152+44]..[283,9152+57])
                        Pexp_ident "print_endline" (src/ppx.ml[283,9152+44]..[283,9152+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[283,9152+58]..[283,9152+123])
                            Pexp_apply
                            expression (src/ppx.ml[283,9152+59]..[283,9152+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[283,9152+59]..[283,9152+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[283,9152+74]..[283,9152+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[283,9152+75]..[283,9152+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[283,9152+76]..[283,9152+97]),None)
                                    expression (src/ppx.ml[283,9152+100]..[283,9152+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[283,9152+100]..[283,9152+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[284,9277+4]..[284,9277+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[284,9277+4]..[284,9277+15])
                      Some
                        []
                        pattern (src/ppx.ml[284,9277+17]..[284,9277+31])
                          Ppat_var "module_binding" (src/ppx.ml[284,9277+17]..[284,9277+31])
                    expression (src/ppx.ml[284,9277+34]..[284,9277+104])
                      Pexp_apply
                      expression (src/ppx.ml[284,9277+35]..[284,9277+48])
                        Pexp_ident "print_endline" (src/ppx.ml[284,9277+35]..[284,9277+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[284,9277+49]..[284,9277+103])
                            Pexp_apply
                            expression (src/ppx.ml[284,9277+50]..[284,9277+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[284,9277+50]..[284,9277+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[284,9277+65]..[284,9277+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[284,9277+66]..[284,9277+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[284,9277+67]..[284,9277+85]),None)
                                    expression (src/ppx.ml[284,9277+87]..[284,9277+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[284,9277+87]..[284,9277+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[285,9382+4]..[285,9382+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[285,9382+4]..[285,9382+18])
                      Some
                        []
                        pattern (src/ppx.ml[285,9382+20]..[285,9382+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[285,9382+20]..[285,9382+39])
                    expression (src/ppx.ml[285,9382+42]..[285,9382+121])
                      Pexp_apply
                      expression (src/ppx.ml[285,9382+43]..[285,9382+56])
                        Pexp_ident "print_endline" (src/ppx.ml[285,9382+43]..[285,9382+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[285,9382+57]..[285,9382+120])
                            Pexp_apply
                            expression (src/ppx.ml[285,9382+58]..[285,9382+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[285,9382+58]..[285,9382+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[285,9382+73]..[285,9382+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[285,9382+74]..[285,9382+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[285,9382+75]..[285,9382+96]),None)
                                    expression (src/ppx.ml[285,9382+99]..[285,9382+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[285,9382+99]..[285,9382+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[286,9504+4]..[286,9504+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[286,9504+4]..[286,9504+16])
                      Some
                        []
                        pattern (src/ppx.ml[286,9504+17]..[286,9504+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[286,9504+17]..[286,9504+40])
                    expression (src/ppx.ml[286,9504+43]..[286,9504+124])
                      Pexp_apply
                      expression (src/ppx.ml[286,9504+44]..[286,9504+57])
                        Pexp_ident "print_endline" (src/ppx.ml[286,9504+44]..[286,9504+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[286,9504+58]..[286,9504+123])
                            Pexp_apply
                            expression (src/ppx.ml[286,9504+59]..[286,9504+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[286,9504+59]..[286,9504+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[286,9504+74]..[286,9504+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[286,9504+75]..[286,9504+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[286,9504+76]..[286,9504+95]),None)
                                    expression (src/ppx.ml[286,9504+98]..[286,9504+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[286,9504+98]..[286,9504+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[288,9646+4]..[288,9646+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[288,9646+4]..[288,9646+13])
                      Some
                        []
                        pattern (src/ppx.ml[288,9646+14]..[288,9646+30])
                          Ppat_var "open_description" (src/ppx.ml[288,9646+14]..[288,9646+30])
                    expression (src/ppx.ml[288,9646+33]..[288,9646+103])
                      Pexp_apply
                      expression (src/ppx.ml[288,9646+34]..[288,9646+47])
                        Pexp_ident "print_endline" (src/ppx.ml[288,9646+34]..[288,9646+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[288,9646+48]..[288,9646+102])
                            Pexp_apply
                            expression (src/ppx.ml[288,9646+49]..[288,9646+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[288,9646+49]..[288,9646+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[288,9646+64]..[288,9646+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[288,9646+65]..[288,9646+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[288,9646+66]..[288,9646+81]),None)
                                    expression (src/ppx.ml[288,9646+84]..[288,9646+100])
                                      Pexp_ident "open_description" (src/ppx.ml[288,9646+84]..[288,9646+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[289,9750+4]..[289,9750+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[289,9750+4]..[289,9750+14])
                      Some
                        []
                        pattern (src/ppx.ml[289,9750+15]..[289,9750+36])
                          Ppat_var "class_declarations" (src/ppx.ml[289,9750+16]..[289,9750+34])
                    expression (src/ppx.ml[289,9750+39]..[289,9750+113])
                      Pexp_apply
                      expression (src/ppx.ml[289,9750+40]..[289,9750+53])
                        Pexp_ident "print_endline" (src/ppx.ml[289,9750+40]..[289,9750+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[289,9750+54]..[289,9750+112])
                            Pexp_apply
                            expression (src/ppx.ml[289,9750+55]..[289,9750+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[289,9750+55]..[289,9750+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[289,9750+70]..[289,9750+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[289,9750+71]..[289,9750+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[289,9750+72]..[289,9750+89]),None)
                                    expression (src/ppx.ml[289,9750+92]..[289,9750+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[289,9750+92]..[289,9750+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[290,9864+4]..[290,9864+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[290,9864+4]..[290,9864+19])
                      Some
                        []
                        pattern (src/ppx.ml[290,9864+20]..[290,9864+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[290,9864+21]..[290,9864+44])
                    expression (src/ppx.ml[290,9864+48]..[290,9864+132])
                      Pexp_apply
                      expression (src/ppx.ml[290,9864+49]..[290,9864+62])
                        Pexp_ident "print_endline" (src/ppx.ml[290,9864+49]..[290,9864+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[290,9864+63]..[290,9864+131])
                            Pexp_apply
                            expression (src/ppx.ml[290,9864+64]..[290,9864+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[290,9864+64]..[290,9864+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[290,9864+79]..[290,9864+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[290,9864+80]..[290,9864+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[290,9864+81]..[290,9864+103]),None)
                                    expression (src/ppx.ml[290,9864+106]..[290,9864+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[290,9864+106]..[290,9864+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[291,9997+4]..[291,9997+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[291,9997+4]..[291,9997+16])
                      Some
                        []
                        pattern (src/ppx.ml[291,9997+18]..[291,9997+39])
                          Ppat_var "include_declaration" (src/ppx.ml[291,9997+19]..[291,9997+38])
                    expression (src/ppx.ml[291,9997+41]..[291,9997+117])
                      Pexp_apply
                      expression (src/ppx.ml[291,9997+42]..[291,9997+55])
                        Pexp_ident "print_endline" (src/ppx.ml[291,9997+42]..[291,9997+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[291,9997+56]..[291,9997+116])
                            Pexp_apply
                            expression (src/ppx.ml[291,9997+57]..[291,9997+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[291,9997+57]..[291,9997+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[291,9997+72]..[291,9997+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[291,9997+73]..[291,9997+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[291,9997+74]..[291,9997+93]),None)
                                    expression (src/ppx.ml[291,9997+95]..[291,9997+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[291,9997+95]..[291,9997+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[292,10115+4]..[292,10115+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[292,10115+4]..[292,10115+18])
                      Some
                        []
                        pattern (src/ppx.ml[292,10115+19]..[292,10115+30])
                          Ppat_var "attribute" (src/ppx.ml[292,10115+20]..[292,10115+29])
                    expression (src/ppx.ml[292,10115+32]..[292,10115+101])
                      Pexp_apply
                      expression (src/ppx.ml[292,10115+33]..[292,10115+46])
                        Pexp_ident "print_endline" (src/ppx.ml[292,10115+33]..[292,10115+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[292,10115+47]..[292,10115+100])
                            Pexp_apply
                            expression (src/ppx.ml[292,10115+48]..[292,10115+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[292,10115+48]..[292,10115+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[292,10115+63]..[292,10115+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[292,10115+64]..[292,10115+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[292,10115+65]..[292,10115+86]),None)
                                    expression (src/ppx.ml[292,10115+89]..[292,10115+98])
                                      Pexp_ident "attribute" (src/ppx.ml[292,10115+89]..[292,10115+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[293,10217+4]..[293,10217+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[293,10217+4]..[293,10217+18])
                      Some
                        []
                        pattern (src/ppx.ml[293,10217+19]..[293,10217+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[293,10217+21]..[293,10217+30])
                              Ppat_var "extension" (src/ppx.ml[293,10217+21]..[293,10217+30])
                            pattern (src/ppx.ml[293,10217+33]..[293,10217+43])
                              Ppat_var "attributes" (src/ppx.ml[293,10217+33]..[293,10217+43])
                          ]
                    expression (src/ppx.ml[293,10217+46]..[293,10217+128])
                      Pexp_apply
                      expression (src/ppx.ml[293,10217+47]..[293,10217+60])
                        Pexp_ident "print_endline" (src/ppx.ml[293,10217+47]..[293,10217+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[293,10217+61]..[293,10217+127])
                            Pexp_apply
                            expression (src/ppx.ml[293,10217+62]..[293,10217+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[293,10217+62]..[293,10217+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[293,10217+77]..[293,10217+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[293,10217+78]..[293,10217+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[293,10217+79]..[293,10217+100]),None)
                                    expression (src/ppx.ml[293,10217+103]..[293,10217+112])
                                      Pexp_ident "extension" (src/ppx.ml[293,10217+103]..[293,10217+112])
                                    expression (src/ppx.ml[293,10217+115]..[293,10217+125])
                                      Pexp_ident "attributes" (src/ppx.ml[293,10217+115]..[293,10217+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[267,8253+39]..[267,8253+43])
              Ptyp_constr "unit" (src/ppx.ml[267,8253+39]..[267,8253+43])
              []
    ]
  structure_item (src/ppx.ml[295,10347+0]..[295,10347+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10347+4]..[295,10347+7])
          Ppat_var "foo" (src/ppx.ml[295,10347+4]..[295,10347+7])
        expression (src/ppx.ml[295,10347+10]..[295,10347+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[297,10362+0]..[305,10581+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10362+4]..[297,10362+12])
          Ppat_var "printone" (src/ppx.ml[297,10362+4]..[297,10362+12])
        expression (src/ppx.ml[297,10362+13]..[305,10581+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[297,10362+13]..[297,10362+34])
            Ppat_constraint
            pattern (src/ppx.ml[297,10362+14]..[297,10362+15])
              Ppat_var "x" (src/ppx.ml[297,10362+14]..[297,10362+15])
            core_type (src/ppx.ml[297,10362+18]..[297,10362+32])
              Ptyp_constr "structure_item" (src/ppx.ml[297,10362+18]..[297,10362+32])
              []
          expression (src/ppx.ml[297,10362+35]..[305,10581+6])
            Pexp_constraint
            expression (src/ppx.ml[298,10405+2]..[305,10581+6])
              Pexp_match
              expression (src/ppx.ml[298,10405+8]..[298,10405+9])
                Pexp_ident "x" (src/ppx.ml[298,10405+8]..[298,10405+9])
              [
                <case>
                  pattern (src/ppx.ml[299,10420+3]..[302,10470+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[300,10425+4]..[300,10425+13]) ghost
                        pattern (src/ppx.ml[300,10425+4]..[300,10425+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[300,10425+4]..[300,10425+13])
                    ]
                  expression (src/ppx.ml[304,10554+4]..[305,10581+6])
                    Pexp_sequence
                    expression (src/ppx.ml[304,10554+4]..[304,10554+25])
                      Pexp_apply
                      expression (src/ppx.ml[304,10554+5]..[304,10554+14])
                        Pexp_ident "printdesc" (src/ppx.ml[304,10554+5]..[304,10554+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[304,10554+15]..[304,10554+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[304,10554+15]..[304,10554+24])
                      ]
                    expression (src/ppx.ml[305,10581+4]..[305,10581+6])
                      Pexp_construct "()" (src/ppx.ml[305,10581+4]..[305,10581+6])
                      None
              ]
            core_type (src/ppx.ml[297,10362+36]..[297,10362+40])
              Ptyp_constr "unit" (src/ppx.ml[297,10362+36]..[297,10362+40])
              []
    ]
  structure_item (src/ppx.ml[311,10701+0]..[313,10782+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10701+4]..[311,10701+13])
          Ppat_var "printone2" (src/ppx.ml[311,10701+4]..[311,10701+13])
        expression (src/ppx.ml[311,10701+14]..[313,10782+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[311,10701+14]..[311,10701+15])
            Ppat_var "x" (src/ppx.ml[311,10701+14]..[311,10701+15])
          expression (src/ppx.ml[311,10701+16]..[313,10782+12])
            Pexp_constraint
            expression (src/ppx.ml[312,10725+2]..[313,10782+12])
              Pexp_sequence
              expression (src/ppx.ml[312,10725+2]..[312,10725+55])
                Pexp_apply
                expression (src/ppx.ml[312,10725+3]..[312,10725+16])
                  Pexp_ident "print_endline" (src/ppx.ml[312,10725+3]..[312,10725+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[312,10725+17]..[312,10725+54])
                      Pexp_apply
                      expression (src/ppx.ml[312,10725+18]..[312,10725+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[312,10725+18]..[312,10725+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[312,10725+33]..[312,10725+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[312,10725+34]..[312,10725+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[312,10725+35]..[312,10725+49]),None)
                              expression (src/ppx.ml[312,10725+51]..[312,10725+52])
                                Pexp_ident "x" (src/ppx.ml[312,10725+51]..[312,10725+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[313,10782+2]..[313,10782+12])
                Pexp_apply
                expression (src/ppx.ml[313,10782+2]..[313,10782+10])
                  Pexp_ident "printone" (src/ppx.ml[313,10782+2]..[313,10782+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[313,10782+11]..[313,10782+12])
                      Pexp_ident "x" (src/ppx.ml[313,10782+11]..[313,10782+12])
                ]
            core_type (src/ppx.ml[311,10701+17]..[311,10701+21])
              Ptyp_constr "unit" (src/ppx.ml[311,10701+17]..[311,10701+21])
              []
    ]
  structure_item (src/ppx.ml[315,10798+0]..[317,10829+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[315,10798+4]..[315,10798+9])
          Ppat_var "proc1" (src/ppx.ml[315,10798+4]..[315,10798+9])
        expression (src/ppx.ml[315,10798+10]..[317,10829+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[315,10798+10]..[315,10798+11])
            Ppat_var "x" (src/ppx.ml[315,10798+10]..[315,10798+11])
          expression (src/ppx.ml[316,10814+2]..[317,10829+3])
            Pexp_sequence
            expression (src/ppx.ml[316,10814+2]..[316,10814+13])
              Pexp_apply
              expression (src/ppx.ml[316,10814+2]..[316,10814+11])
                Pexp_ident "printone2" (src/ppx.ml[316,10814+2]..[316,10814+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[316,10814+12]..[316,10814+13])
                    Pexp_ident "x" (src/ppx.ml[316,10814+12]..[316,10814+13])
              ]
            expression (src/ppx.ml[317,10829+2]..[317,10829+3])
              Pexp_ident "x" (src/ppx.ml[317,10829+2]..[317,10829+3])
    ]
  structure_item (src/ppx.ml[319,10834+0]..[322,10983+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[319,10834+4]..[319,10834+9])
          Ppat_var "debug" (src/ppx.ml[319,10834+4]..[319,10834+9])
        expression (src/ppx.ml[319,10834+10]..[322,10983+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[319,10834+10]..[319,10834+14])
            Ppat_var "proc" (src/ppx.ml[319,10834+10]..[319,10834+14])
          expression (src/ppx.ml[319,10834+15]..[322,10983+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[319,10834+15]..[319,10834+18])
              Ppat_var "lst" (src/ppx.ml[319,10834+15]..[319,10834+18])
            expression (src/ppx.ml[319,10834+19]..[322,10983+4])
              Pexp_constraint
              expression (src/ppx.ml[320,10862+2]..[322,10983+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[320,10862+6]..[320,10862+12])
                      Ppat_var "result" (src/ppx.ml[320,10862+6]..[320,10862+12])
                    expression (src/ppx.ml[320,10862+15]..[320,10862+32])
                      Pexp_apply
                      expression (src/ppx.ml[320,10862+15]..[320,10862+23])
                        Pexp_ident "List.map" (src/ppx.ml[320,10862+15]..[320,10862+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[320,10862+24]..[320,10862+28])
                            Pexp_ident "proc" (src/ppx.ml[320,10862+24]..[320,10862+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[320,10862+29]..[320,10862+32])
                            Pexp_ident "lst" (src/ppx.ml[320,10862+29]..[320,10862+32])
                      ]
                ]
                expression (src/ppx.ml[321,10898+2]..[322,10983+4])
                  Pexp_sequence
                  expression (src/ppx.ml[321,10898+2]..[321,10898+83])
                    Pexp_apply
                    expression (src/ppx.ml[321,10898+2]..[321,10898+11])
                      Pexp_ident "List.iter" (src/ppx.ml[321,10898+2]..[321,10898+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[321,10898+12]..[321,10898+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[321,10898+17]..[321,10898+18])
                            Ppat_var "i" (src/ppx.ml[321,10898+17]..[321,10898+18])
                          expression (src/ppx.ml[321,10898+22]..[321,10898+75])
                            Pexp_apply
                            expression (src/ppx.ml[321,10898+22]..[321,10898+35])
                              Pexp_ident "print_endline" (src/ppx.ml[321,10898+22]..[321,10898+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[321,10898+36]..[321,10898+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[321,10898+37]..[321,10898+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[321,10898+37]..[321,10898+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[321,10898+52]..[321,10898+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[321,10898+53]..[321,10898+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[321,10898+54]..[321,10898+69]),None)
                                          expression (src/ppx.ml[321,10898+72]..[321,10898+73])
                                            Pexp_ident "i" (src/ppx.ml[321,10898+72]..[321,10898+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[321,10898+77]..[321,10898+83])
                          Pexp_ident "result" (src/ppx.ml[321,10898+77]..[321,10898+83])
                    ]
                  expression (src/ppx.ml[322,10983+2]..[322,10983+4])
                    Pexp_construct "()" (src/ppx.ml[322,10983+2]..[322,10983+4])
                    None
              core_type (src/ppx.ml[319,10834+21]..[319,10834+25])
                Ptyp_constr "unit" (src/ppx.ml[319,10834+21]..[319,10834+25])
                []
    ]
  structure_item (src/ppx.ml[324,11005+0]..[327,11129+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[324,11005+4]..[324,11005+13])
          Ppat_var "transform" (src/ppx.ml[324,11005+4]..[324,11005+13])
        expression (src/ppx.ml[324,11005+14]..[327,11129+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[324,11005+14]..[324,11005+15])
            Ppat_var "x" (src/ppx.ml[324,11005+14]..[324,11005+15])
          expression (src/ppx.ml[325,11060+2]..[327,11129+3])
            Pexp_sequence
            expression (src/ppx.ml[325,11060+2]..[325,11060+48])
              Pexp_apply
              expression (src/ppx.ml[325,11060+3]..[325,11060+16])
                Pexp_ident "print_endline" (src/ppx.ml[325,11060+3]..[325,11060+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[325,11060+17]..[325,11060+47])
                    Pexp_apply
                    expression (src/ppx.ml[325,11060+18]..[325,11060+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[325,11060+18]..[325,11060+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[325,11060+33]..[325,11060+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[325,11060+34]..[325,11060+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[325,11060+35]..[325,11060+42]),None)
                            expression (src/ppx.ml[325,11060+44]..[325,11060+45])
                              Pexp_ident "x" (src/ppx.ml[325,11060+44]..[325,11060+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[326,11110+2]..[327,11129+3])
              Pexp_sequence
              expression (src/ppx.ml[326,11110+2]..[326,11110+17])
                Pexp_apply
                expression (src/ppx.ml[326,11110+3]..[326,11110+8])
                  Pexp_ident "debug" (src/ppx.ml[326,11110+3]..[326,11110+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[326,11110+9]..[326,11110+14])
                      Pexp_ident "proc1" (src/ppx.ml[326,11110+9]..[326,11110+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[326,11110+15]..[326,11110+16])
                      Pexp_ident "x" (src/ppx.ml[326,11110+15]..[326,11110+16])
                ]
              expression (src/ppx.ml[327,11129+2]..[327,11129+3])
                Pexp_ident "x" (src/ppx.ml[327,11129+2]..[327,11129+3])
    ]
  structure_item (src/ppx.ml[329,11136+1]..[329,11136+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[329,11136+5]..[329,11136+7])
          Ppat_construct "()" (src/ppx.ml[329,11136+5]..[329,11136+7])
          None
        expression (src/ppx.ml[329,11136+10]..[329,11136+69])
          Pexp_apply
          expression (src/ppx.ml[329,11136+10]..[329,11136+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[329,11136+10]..[329,11136+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[329,11136+47]..[329,11136+56])
                Pexp_ident "transform" (src/ppx.ml[329,11136+47]..[329,11136+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[329,11136+57]..[329,11136+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[329,11136+58]..[329,11136+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let rec process_id2 (x : longident) =
  match x with
  | Lident string -> string
  | Ldot (longident, string) -> (process_id2 longident) ^ ("." ^ string)
  | Lapply (longident, longident2) ->
      (process_id2 longident) ^ ("." ^ (process_id2 longident2))
let process_id (x : longident_loc) =
  match x with | { txt;_} -> process_id2 txt
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       Printf.printf "DEBUG:Ptyp_constr1:%s" myid;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, myid, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[76,2104+34])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[69,1879+8]..src/ppx.ml[69,1879+19])
          Tpat_var "process_id2/1437"
        expression (src/ppx.ml[69,1879+19]..src/ppx.ml[76,2104+34]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+20]..src/ppx.ml[69,1879+21])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+22]..src/ppx.ml[69,1879+31])
                    Ttyp_constr "Ppxlib!.longident"
                    []
                Tpat_alias "x/1438"
                pattern (src/ppx.ml[69,1879+20]..src/ppx.ml[69,1879+21])
                  Tpat_any
              expression (src/ppx.ml[70,1914+2]..src/ppx.ml[76,2104+34])
                Texp_match
                expression (src/ppx.ml[70,1914+8]..src/ppx.ml[70,1914+9])
                  Texp_ident "x/1438"
                [
                  <case>
                    pattern (src/ppx.ml[71,1929+4]..src/ppx.ml[71,1929+17])
                      Tpat_value
                      pattern (src/ppx.ml[71,1929+4]..src/ppx.ml[71,1929+17])
                        Tpat_construct "Lident"
                        [
                          pattern (src/ppx.ml[71,1929+11]..src/ppx.ml[71,1929+17])
                            Tpat_var "string/1665"
                        ]
                        None
                    expression (src/ppx.ml[71,1929+21]..src/ppx.ml[71,1929+27])
                      Texp_ident "string/1665"
                  <case>
                    pattern (src/ppx.ml[72,1957+4]..src/ppx.ml[72,1957+28])
                      Tpat_value
                      pattern (src/ppx.ml[72,1957+4]..src/ppx.ml[72,1957+28])
                        Tpat_construct "Ldot"
                        [
                          pattern (src/ppx.ml[72,1957+10]..src/ppx.ml[72,1957+19])
                            Tpat_var "longident/1666"
                          pattern (src/ppx.ml[72,1957+21]..src/ppx.ml[72,1957+27])
                            Tpat_var "string/1667"
                        ]
                        None
                    expression (src/ppx.ml[73,1989+4]..src/ppx.ml[73,1989+42])
                      Texp_apply
                      expression (src/ppx.ml[73,1989+28]..src/ppx.ml[73,1989+29])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[73,1989+4]..src/ppx.ml[73,1989+27])
                            Texp_apply
                            expression (src/ppx.ml[73,1989+5]..src/ppx.ml[73,1989+16])
                              Texp_ident "process_id2/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+17]..src/ppx.ml[73,1989+26])
                                  Texp_ident "longident/1666"
                            ]
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[73,1989+30]..src/ppx.ml[73,1989+42])
                            Texp_apply
                            expression (src/ppx.ml[73,1989+34]..src/ppx.ml[73,1989+35])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+30]..src/ppx.ml[73,1989+33])
                                  Texp_constant Const_string(".",(src/ppx.ml[73,1989+31]..src/ppx.ml[73,1989+32]),None)
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[73,1989+36]..src/ppx.ml[73,1989+42])
                                  Texp_ident "string/1667"
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[74,2032+4]..src/ppx.ml[74,2032+33])
                      Tpat_value
                      pattern (src/ppx.ml[74,2032+4]..src/ppx.ml[74,2032+33])
                        Tpat_construct "Lapply"
                        [
                          pattern (src/ppx.ml[74,2032+12]..src/ppx.ml[74,2032+21])
                            Tpat_var "longident/1668"
                          pattern (src/ppx.ml[74,2032+22]..src/ppx.ml[74,2032+32])
                            Tpat_var "longident2/1669"
                        ]
                        None
                    expression (src/ppx.ml[75,2066+7]..src/ppx.ml[76,2104+34])
                      Texp_apply
                      expression (src/ppx.ml[75,2066+32]..src/ppx.ml[75,2066+33])
                        Texp_ident "Stdlib!.^"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[75,2066+7]..src/ppx.ml[75,2066+30])
                            Texp_apply
                            expression (src/ppx.ml[75,2066+8]..src/ppx.ml[75,2066+19])
                              Texp_ident "process_id2/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[75,2066+20]..src/ppx.ml[75,2066+29])
                                  Texp_ident "longident/1668"
                            ]
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[75,2066+34]..src/ppx.ml[76,2104+34])
                            Texp_apply
                            expression (src/ppx.ml[76,2104+7]..src/ppx.ml[76,2104+8])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[75,2066+34]..src/ppx.ml[75,2066+37])
                                  Texp_constant Const_string(".",(src/ppx.ml[75,2066+35]..src/ppx.ml[75,2066+36]),None)
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[76,2104+9]..src/ppx.ml[76,2104+34])
                                  Texp_apply
                                  expression (src/ppx.ml[76,2104+10]..src/ppx.ml[76,2104+21])
                                    Texp_ident "process_id2/1437"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[76,2104+22]..src/ppx.ml[76,2104+32])
                                        Texp_ident "longident2/1669"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[78,2140+0]..src/ppx.ml[80,2189+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[78,2140+4]..src/ppx.ml[78,2140+14])
          Tpat_var "process_id/1670"
        expression (src/ppx.ml[78,2140+14]..src/ppx.ml[80,2189+31]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[78,2140+15]..src/ppx.ml[78,2140+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[78,2140+17]..src/ppx.ml[78,2140+30])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1672"
                pattern (src/ppx.ml[78,2140+15]..src/ppx.ml[78,2140+16])
                  Tpat_any
              expression (src/ppx.ml[79,2174+2]..src/ppx.ml[80,2189+31])
                Texp_match
                expression (src/ppx.ml[79,2174+8]..src/ppx.ml[79,2174+9])
                  Texp_ident "x/1672"
                [
                  <case>
                    pattern (src/ppx.ml[80,2189+4]..src/ppx.ml[80,2189+11])
                      Tpat_value
                      pattern (src/ppx.ml[80,2189+4]..src/ppx.ml[80,2189+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[80,2189+5]..src/ppx.ml[80,2189+8])
                              Tpat_var "txt/1743"
                        ]
                    expression (src/ppx.ml[80,2189+14]..src/ppx.ml[80,2189+31])
                      Texp_apply
                      expression (src/ppx.ml[80,2189+15]..src/ppx.ml[80,2189+26])
                        Texp_ident "process_id2/1437"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[80,2189+27]..src/ppx.ml[80,2189+30])
                            Texp_ident "txt/1743"
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[85,2325+0]..src/ppx.ml[173,5282+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[85,2325+8]..src/ppx.ml[85,2325+27])
          Tpat_var "process_record_kind/1744"
        expression (src/ppx.ml[85,2325+27]..src/ppx.ml[99,2809+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[85,2325+27]..src/ppx.ml[85,2325+30])
                Tpat_var "x/1749"
              expression (src/ppx.ml[86,2358+2]..src/ppx.ml[99,2809+47])
                Texp_match
                expression (src/ppx.ml[86,2358+8]..src/ppx.ml[86,2358+9])
                  Texp_ident "x/1749"
                [
                  <case>
                    pattern (src/ppx.ml[87,2373+4]..src/ppx.ml[93,2554+4])
                      Tpat_value
                      pattern (src/ppx.ml[87,2373+4]..src/ppx.ml[93,2554+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[88,2379+5]..src/ppx.ml[88,2379+13])
                              Tpat_var "pld_name/1750"
                          "pld_mutable"
                            pattern (src/ppx.ml[89,2412+5]..src/ppx.ml[89,2412+16])
                              Tpat_var "pld_mutable/1751"
                          "pld_type"
                            pattern (src/ppx.ml[90,2450+5]..src/ppx.ml[90,2450+13])
                              Tpat_var "pld_type/1752"
                          "pld_loc"
                            pattern (src/ppx.ml[91,2482+5]..src/ppx.ml[91,2482+12])
                              Tpat_var "pld_loc/1753"
                          "pld_attributes"
                            pattern (src/ppx.ml[92,2514+5]..src/ppx.ml[92,2514+19])
                              Tpat_var "pld_attributes/1754"
                        ]
                    expression (src/ppx.ml[94,2562+4]..src/ppx.ml[99,2809+47])
                      Texp_apply
                      expression (src/ppx.ml[94,2562+5]..src/ppx.ml[94,2562+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[94,2562+19]..src/ppx.ml[99,2809+46])
                            Texp_apply
                            expression (src/ppx.ml[94,2562+20]..src/ppx.ml[94,2562+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[94,2562+35]..src/ppx.ml[99,2809+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[94,2562+36]..src/ppx.ml[94,2562+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[94,2562+37]..src/ppx.ml[94,2562+56]),None)
                                    expression (src/ppx.ml[95,2623+36]..src/ppx.ml[95,2623+44])
                                      Texp_ident "pld_name/1750"
                                    expression (src/ppx.ml[96,2669+36]..src/ppx.ml[96,2669+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[96,2669+37]..src/ppx.ml[96,2669+44]),None)
                                    expression (src/ppx.ml[97,2716+36]..src/ppx.ml[97,2716+47])
                                      Texp_ident "pld_mutable/1751"
                                    expression (src/ppx.ml[98,2765+36]..src/ppx.ml[98,2765+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[98,2765+37]..src/ppx.ml[98,2765+41]),None)
                                    expression (src/ppx.ml[99,2809+36]..src/ppx.ml[99,2809+44])
                                      Texp_ident "pld_type/1752"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[101,2861+0]..src/ppx.ml[101,2861+22])
          Tpat_var "process_core_type_desc/1745"
        expression (src/ppx.ml[101,2861+23]..src/ppx.ml[147,4600+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[101,2861+23]..src/ppx.ml[101,2861+24])
                Tpat_var "x/1755"
              expression (src/ppx.ml[102,2888+2]..src/ppx.ml[147,4600+65])
                Texp_match
                expression (src/ppx.ml[102,2888+8]..src/ppx.ml[102,2888+9])
                  Texp_ident "x/1755"
                [
                  <case>
                    pattern (src/ppx.ml[103,2903+4]..src/ppx.ml[103,2903+21])
                      Tpat_value
                      pattern (src/ppx.ml[103,2903+4]..src/ppx.ml[103,2903+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[103,2903+17]..src/ppx.ml[103,2903+18])
                            Tpat_var "a/1756"
                          pattern (src/ppx.ml[103,2903+19]..src/ppx.ml[103,2903+20])
                            Tpat_var "b/1757"
                        ]
                        None
                    expression (src/ppx.ml[105,2974+4]..src/ppx.ml[114,3217+22])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[105,2974+8]..src/ppx.ml[105,2974+12])
                            Tpat_var "myid/1776"
                          expression (src/ppx.ml[105,2974+15]..src/ppx.ml[105,2974+29])
                            Texp_apply
                            expression (src/ppx.ml[105,2974+16]..src/ppx.ml[105,2974+26])
                              Texp_ident "process_id/1670"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[105,2974+27]..src/ppx.ml[105,2974+28])
                                  Texp_ident "a/1756"
                            ]
                      ]
                      expression (src/ppx.ml[106,3007+4]..src/ppx.ml[114,3217+22])
                        Texp_sequence
                        expression (src/ppx.ml[106,3007+4]..src/ppx.ml[106,3007+30])
                          Texp_apply
                          expression (src/ppx.ml[106,3007+5]..src/ppx.ml[106,3007+27])
                            Texp_ident "process_core_type_list/1748"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[106,3007+28]..src/ppx.ml[106,3007+29])
                                Texp_ident "b/1757"
                          ]
                        expression (src/ppx.ml[108,3040+4]..src/ppx.ml[114,3217+22])
                          Texp_sequence
                          expression (src/ppx.ml[108,3040+4]..src/ppx.ml[108,3040+46])
                            Texp_apply
                            expression (src/ppx.ml[108,3040+4]..src/ppx.ml[108,3040+17])
                              Texp_ident "Stdlib!.Printf.printf"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                          Texp_constant Const_string("DEBUG:Ptyp_constr1:",(src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost,None)
                                        expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                    expression (src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost
                                      Texp_constant Const_string("DEBUG:Ptyp_constr1:%s",(src/ppx.ml[108,3040+18]..src/ppx.ml[108,3040+41]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[108,3040+42]..src/ppx.ml[108,3040+46])
                                  Texp_ident "myid/1776"
                            ]
                          expression (src/ppx.ml[111,3127+4]..src/ppx.ml[114,3217+22])
                            Texp_apply
                            expression (src/ppx.ml[111,3127+5]..src/ppx.ml[111,3127+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[111,3127+19]..src/ppx.ml[114,3217+21])
                                  Texp_apply
                                  expression (src/ppx.ml[111,3127+20]..src/ppx.ml[111,3127+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[111,3127+35]..src/ppx.ml[114,3217+20])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[112,3164+9]..src/ppx.ml[112,3164+29])
                                            Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[112,3164+10]..src/ppx.ml[112,3164+28]),None)
                                          expression (src/ppx.ml[113,3195+9]..src/ppx.ml[113,3195+13])
                                            Texp_constant Const_string("id",(src/ppx.ml[113,3195+10]..src/ppx.ml[113,3195+12]),None)
                                          expression (src/ppx.ml[113,3195+14]..src/ppx.ml[113,3195+15])
                                            Texp_ident "a/1756"
                                          expression (src/ppx.ml[113,3195+16]..src/ppx.ml[113,3195+20])
                                            Texp_ident "myid/1776"
                                          expression (src/ppx.ml[114,3217+9]..src/ppx.ml[114,3217+16])
                                            Texp_constant Const_string("types",(src/ppx.ml[114,3217+10]..src/ppx.ml[114,3217+15]),None)
                                          expression (src/ppx.ml[114,3217+17]..src/ppx.ml[114,3217+18])
                                            Texp_ident "b/1757"
                                        ]
                                  ]
                            ]
                  <case>
                    pattern (src/ppx.ml[116,3241+4]..src/ppx.ml[116,3241+16])
                      Tpat_value
                      pattern (src/ppx.ml[116,3241+4]..src/ppx.ml[116,3241+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[116,3241+15]..src/ppx.ml[116,3241+16])
                            Tpat_var "a/1758"
                        ]
                        None
                    expression (src/ppx.ml[118,3289+4]..src/ppx.ml[118,3289+59])
                      Texp_apply
                      expression (src/ppx.ml[118,3289+5]..src/ppx.ml[118,3289+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[118,3289+19]..src/ppx.ml[118,3289+58])
                            Texp_apply
                            expression (src/ppx.ml[118,3289+20]..src/ppx.ml[118,3289+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[118,3289+35]..src/ppx.ml[118,3289+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[118,3289+37]..src/ppx.ml[118,3289+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[121,3368+4]..src/ppx.ml[121,3368+12])
                      Tpat_value
                      pattern (src/ppx.ml[121,3368+4]..src/ppx.ml[121,3368+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[121,3368+17]..src/ppx.ml[121,3368+69])
                      Texp_apply
                      expression (src/ppx.ml[121,3368+18]..src/ppx.ml[121,3368+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[121,3368+32]..src/ppx.ml[121,3368+68])
                            Texp_apply
                            expression (src/ppx.ml[121,3368+33]..src/ppx.ml[121,3368+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[121,3368+48]..src/ppx.ml[121,3368+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[121,3368+50]..src/ppx.ml[121,3368+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[122,3438+4]..src/ppx.ml[122,3438+17])
                      Tpat_value
                      pattern (src/ppx.ml[122,3438+4]..src/ppx.ml[122,3438+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[122,3438+13]..src/ppx.ml[122,3438+17])
                            Tpat_var "name/1759"
                        ]
                        None
                    expression (src/ppx.ml[122,3438+20]..src/ppx.ml[122,3438+80])
                      Texp_apply
                      expression (src/ppx.ml[122,3438+21]..src/ppx.ml[122,3438+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[122,3438+35]..src/ppx.ml[122,3438+79])
                            Texp_apply
                            expression (src/ppx.ml[122,3438+36]..src/ppx.ml[122,3438+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[122,3438+51]..src/ppx.ml[122,3438+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[122,3438+52]..src/ppx.ml[122,3438+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[122,3438+53]..src/ppx.ml[122,3438+68]),None)
                                    expression (src/ppx.ml[122,3438+73]..src/ppx.ml[122,3438+77])
                                      Texp_ident "name/1759"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[123,3519+4]..src/ppx.ml[123,3519+51])
                      Tpat_value
                      pattern (src/ppx.ml[123,3519+4]..src/ppx.ml[123,3519+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[123,3519+16]..src/ppx.ml[123,3519+25])
                            Tpat_var "arg_label/1760"
                          pattern (src/ppx.ml[123,3519+28]..src/ppx.ml[123,3519+37])
                            Tpat_var "core_type/1761"
                          pattern (src/ppx.ml[123,3519+40]..src/ppx.ml[123,3519+50])
                            Tpat_var "core_type2/1762"
                        ]
                        None
                    expression (src/ppx.ml[124,3574+4]..src/ppx.ml[124,3574+61])
                      Texp_apply
                      expression (src/ppx.ml[124,3574+5]..src/ppx.ml[124,3574+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[124,3574+19]..src/ppx.ml[124,3574+60])
                            Texp_apply
                            expression (src/ppx.ml[124,3574+20]..src/ppx.ml[124,3574+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[124,3574+35]..src/ppx.ml[124,3574+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[124,3574+37]..src/ppx.ml[124,3574+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[126,3637+4]..src/ppx.ml[126,3637+21])
                      Tpat_value
                      pattern (src/ppx.ml[126,3637+4]..src/ppx.ml[126,3637+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[126,3637+17]..src/ppx.ml[126,3637+18])
                            Tpat_var "a/1763"
                          pattern (src/ppx.ml[126,3637+19]..src/ppx.ml[126,3637+20])
                            Tpat_var "b/1764"
                        ]
                        None
                    expression (src/ppx.ml[128,3706+4]..src/ppx.ml[128,3706+60])
                      Texp_apply
                      expression (src/ppx.ml[128,3706+5]..src/ppx.ml[128,3706+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[128,3706+19]..src/ppx.ml[128,3706+59])
                            Texp_apply
                            expression (src/ppx.ml[128,3706+20]..src/ppx.ml[128,3706+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[128,3706+35]..src/ppx.ml[128,3706+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[128,3706+37]..src/ppx.ml[128,3706+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[129,3767+4]..src/ppx.ml[129,3767+20])
                      Tpat_value
                      pattern (src/ppx.ml[129,3767+4]..src/ppx.ml[129,3767+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[129,3767+16]..src/ppx.ml[129,3767+17])
                            Tpat_var "a/1765"
                          pattern (src/ppx.ml[129,3767+18]..src/ppx.ml[129,3767+19])
                            Tpat_var "b/1766"
                        ]
                        None
                    expression (src/ppx.ml[131,3837+4]..src/ppx.ml[131,3837+60])
                      Texp_apply
                      expression (src/ppx.ml[131,3837+5]..src/ppx.ml[131,3837+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[131,3837+19]..src/ppx.ml[131,3837+59])
                            Texp_apply
                            expression (src/ppx.ml[131,3837+20]..src/ppx.ml[131,3837+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[131,3837+35]..src/ppx.ml[131,3837+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[131,3837+37]..src/ppx.ml[131,3837+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[132,3898+4]..src/ppx.ml[132,3898+20])
                      Tpat_value
                      pattern (src/ppx.ml[132,3898+4]..src/ppx.ml[132,3898+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[132,3898+16]..src/ppx.ml[132,3898+17])
                            Tpat_var "a/1767"
                          pattern (src/ppx.ml[132,3898+18]..src/ppx.ml[132,3898+19])
                            Tpat_var "b/1768"
                        ]
                        None
                    expression (src/ppx.ml[134,3959+4]..src/ppx.ml[134,3959+60])
                      Texp_apply
                      expression (src/ppx.ml[134,3959+5]..src/ppx.ml[134,3959+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[134,3959+19]..src/ppx.ml[134,3959+59])
                            Texp_apply
                            expression (src/ppx.ml[134,3959+20]..src/ppx.ml[134,3959+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[134,3959+35]..src/ppx.ml[134,3959+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[134,3959+37]..src/ppx.ml[134,3959+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[135,4020+4]..src/ppx.ml[135,4020+24])
                      Tpat_value
                      pattern (src/ppx.ml[135,4020+4]..src/ppx.ml[135,4020+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[135,4020+18]..src/ppx.ml[135,4020+19])
                            Tpat_var "a/1769"
                          pattern (src/ppx.ml[135,4020+20]..src/ppx.ml[135,4020+21])
                            Tpat_var "b/1770"
                          pattern (src/ppx.ml[135,4020+22]..src/ppx.ml[135,4020+23])
                            Tpat_var "c/1771"
                        ]
                        None
                    expression (src/ppx.ml[137,4110+4]..src/ppx.ml[137,4110+60])
                      Texp_apply
                      expression (src/ppx.ml[137,4110+5]..src/ppx.ml[137,4110+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[137,4110+19]..src/ppx.ml[137,4110+59])
                            Texp_apply
                            expression (src/ppx.ml[137,4110+20]..src/ppx.ml[137,4110+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[137,4110+35]..src/ppx.ml[137,4110+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[137,4110+37]..src/ppx.ml[137,4110+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[138,4171+4]..src/ppx.ml[138,4171+19])
                      Tpat_value
                      pattern (src/ppx.ml[138,4171+4]..src/ppx.ml[138,4171+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[138,4171+15]..src/ppx.ml[138,4171+16])
                            Tpat_var "a/1772"
                          pattern (src/ppx.ml[138,4171+17]..src/ppx.ml[138,4171+18])
                            Tpat_var "b/1773"
                        ]
                        None
                    expression (src/ppx.ml[140,4235+4]..src/ppx.ml[140,4235+60])
                      Texp_apply
                      expression (src/ppx.ml[140,4235+5]..src/ppx.ml[140,4235+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[140,4235+19]..src/ppx.ml[140,4235+59])
                            Texp_apply
                            expression (src/ppx.ml[140,4235+20]..src/ppx.ml[140,4235+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[140,4235+35]..src/ppx.ml[140,4235+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[140,4235+37]..src/ppx.ml[140,4235+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[141,4296+4]..src/ppx.ml[141,4296+18])
                      Tpat_value
                      pattern (src/ppx.ml[141,4296+4]..src/ppx.ml[141,4296+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[141,4296+17]..src/ppx.ml[141,4296+18])
                            Tpat_var "a/1774"
                        ]
                        None
                    expression (src/ppx.ml[143,4344+4]..src/ppx.ml[143,4344+62])
                      Texp_apply
                      expression (src/ppx.ml[143,4344+5]..src/ppx.ml[143,4344+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[143,4344+19]..src/ppx.ml[143,4344+61])
                            Texp_apply
                            expression (src/ppx.ml[143,4344+20]..src/ppx.ml[143,4344+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[143,4344+35]..src/ppx.ml[143,4344+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[143,4344+36]..src/ppx.ml[143,4344+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[143,4344+37]..src/ppx.ml[143,4344+55]),None)
                                    expression (src/ppx.ml[143,4344+57]..src/ppx.ml[143,4344+58])
                                      Texp_ident "a/1774"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[146,4552+4]..src/ppx.ml[146,4552+20])
                      Tpat_value
                      pattern (src/ppx.ml[146,4552+4]..src/ppx.ml[146,4552+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[146,4552+19]..src/ppx.ml[146,4552+20])
                            Tpat_var "a/1775"
                        ]
                        None
                    expression (src/ppx.ml[147,4600+4]..src/ppx.ml[147,4600+65])
                      Texp_apply
                      expression (src/ppx.ml[147,4600+5]..src/ppx.ml[147,4600+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[147,4600+19]..src/ppx.ml[147,4600+64])
                            Texp_apply
                            expression (src/ppx.ml[147,4600+20]..src/ppx.ml[147,4600+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[147,4600+35]..src/ppx.ml[147,4600+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[147,4600+36]..src/ppx.ml[147,4600+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[147,4600+37]..src/ppx.ml[147,4600+58]),None)
                                    expression (src/ppx.ml[147,4600+60]..src/ppx.ml[147,4600+61])
                                      Texp_ident "a/1775"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[149,4670+2]..src/ppx.ml[149,4670+26])
          Tpat_var "process_record_kind_list/1746"
        expression (src/ppx.ml[149,4670+26]..src/ppx.ml[155,4807+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[149,4670+26]..src/ppx.ml[149,4670+29])
                Tpat_var "x/1839"
              expression (src/ppx.ml[150,4702+2]..src/ppx.ml[155,4807+6])
                Texp_match
                expression (src/ppx.ml[150,4702+8]..src/ppx.ml[150,4702+9])
                  Texp_ident "x/1839"
                [
                  <case>
                    pattern (src/ppx.ml[151,4717+4]..src/ppx.ml[151,4717+6])
                      Tpat_value
                      pattern (src/ppx.ml[151,4717+4]..src/ppx.ml[151,4717+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[151,4717+10]..src/ppx.ml[151,4717+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[152,4730+4]..src/ppx.ml[152,4730+10])
                      Tpat_value
                      pattern (src/ppx.ml[152,4730+4]..src/ppx.ml[152,4730+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[152,4730+4]..src/ppx.ml[152,4730+5])
                            Tpat_var "h/1840"
                          pattern (src/ppx.ml[152,4730+9]..src/ppx.ml[152,4730+10])
                            Tpat_var "t/1841"
                        ]
                        None
                    expression (src/ppx.ml[153,4744+4]..src/ppx.ml[155,4807+6])
                      Texp_sequence
                      expression (src/ppx.ml[153,4744+4]..src/ppx.ml[153,4744+27])
                        Texp_apply
                        expression (src/ppx.ml[153,4744+5]..src/ppx.ml[153,4744+24])
                          Texp_ident "process_record_kind/1744"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[153,4744+25]..src/ppx.ml[153,4744+26])
                              Texp_ident "h/1840"
                        ]
                      expression (src/ppx.ml[154,4773+4]..src/ppx.ml[155,4807+6])
                        Texp_sequence
                        expression (src/ppx.ml[154,4773+4]..src/ppx.ml[154,4773+32])
                          Texp_apply
                          expression (src/ppx.ml[154,4773+5]..src/ppx.ml[154,4773+29])
                            Texp_ident "process_record_kind_list/1746"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[154,4773+30]..src/ppx.ml[154,4773+31])
                                Texp_ident "t/1841"
                          ]
                        expression (src/ppx.ml[155,4807+4]..src/ppx.ml[155,4807+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[157,4818+0]..src/ppx.ml[157,4818+17])
          Tpat_var "process_core_type/1747"
        expression (src/ppx.ml[157,4818+17]..src/ppx.ml[167,5085+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[157,4818+17]..src/ppx.ml[157,4818+20])
                Tpat_var "x/1842"
              expression (src/ppx.ml[158,4841+2]..src/ppx.ml[167,5085+80])
                Texp_match
                expression (src/ppx.ml[158,4841+8]..src/ppx.ml[158,4841+9])
                  Texp_ident "x/1842"
                [
                  <case>
                    pattern (src/ppx.ml[159,4857+4]..src/ppx.ml[164,5018+5])
                      Tpat_value
                      pattern (src/ppx.ml[159,4857+4]..src/ppx.ml[164,5018+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[160,4863+6]..src/ppx.ml[160,4863+15])
                              Tpat_var "ptyp_desc/1843"
                          "ptyp_loc"
                            pattern (src/ppx.ml[161,4902+5]..src/ppx.ml[161,4902+13])
                              Tpat_var "ptyp_loc/1844"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[162,4935+5]..src/ppx.ml[162,4935+19])
                              Tpat_var "ptyp_loc_stack/1845"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[163,4978+5]..src/ppx.ml[163,4978+20])
                              Tpat_var "ptyp_attributes/1846"
                        ]
                    expression (src/ppx.ml[165,5026+4]..src/ppx.ml[167,5085+80])
                      Texp_sequence
                      expression (src/ppx.ml[165,5026+4]..src/ppx.ml[165,5026+38])
                        Texp_apply
                        expression (src/ppx.ml[165,5026+5]..src/ppx.ml[165,5026+27])
                          Texp_ident "process_core_type_desc/1745"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[165,5026+28]..src/ppx.ml[165,5026+37])
                              Texp_ident "ptyp_desc/1843"
                        ]
                      expression (src/ppx.ml[167,5085+4]..src/ppx.ml[167,5085+80])
                        Texp_apply
                        expression (src/ppx.ml[167,5085+5]..src/ppx.ml[167,5085+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[167,5085+19]..src/ppx.ml[167,5085+79])
                              Texp_apply
                              expression (src/ppx.ml[167,5085+20]..src/ppx.ml[167,5085+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[167,5085+35]..src/ppx.ml[167,5085+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[167,5085+36]..src/ppx.ml[167,5085+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[167,5085+37]..src/ppx.ml[167,5085+63]),None)
                                      expression (src/ppx.ml[167,5085+68]..src/ppx.ml[167,5085+77])
                                        Texp_ident "ptyp_desc/1843"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[168,5166+4]..src/ppx.ml[168,5166+26])
          Tpat_var "process_core_type_list/1748"
        expression (src/ppx.ml[168,5166+26]..src/ppx.ml[173,5282+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[168,5166+27]..src/ppx.ml[168,5166+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[168,5166+29]..src/ppx.ml[168,5166+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[168,5166+29]..src/ppx.ml[168,5166+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1847"
                pattern (src/ppx.ml[168,5166+27]..src/ppx.ml[168,5166+28])
                  Tpat_any
              expression (src/ppx.ml[169,5213+2]..src/ppx.ml[173,5282+29])
                Texp_match
                expression (src/ppx.ml[169,5213+8]..src/ppx.ml[169,5213+9])
                  Texp_ident "x/1847"
                [
                  <case>
                    pattern (src/ppx.ml[170,5228+4]..src/ppx.ml[170,5228+6])
                      Tpat_value
                      pattern (src/ppx.ml[170,5228+4]..src/ppx.ml[170,5228+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[170,5228+10]..src/ppx.ml[170,5228+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[171,5241+4]..src/ppx.ml[171,5241+10])
                      Tpat_value
                      pattern (src/ppx.ml[171,5241+4]..src/ppx.ml[171,5241+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[171,5241+4]..src/ppx.ml[171,5241+5])
                            Tpat_var "h/1848"
                          pattern (src/ppx.ml[171,5241+9]..src/ppx.ml[171,5241+10])
                            Tpat_var "t/1849"
                        ]
                        None
                    expression (src/ppx.ml[172,5255+4]..src/ppx.ml[173,5282+29])
                      Texp_sequence
                      expression (src/ppx.ml[172,5255+4]..src/ppx.ml[172,5255+25])
                        Texp_apply
                        expression (src/ppx.ml[172,5255+4]..src/ppx.ml[172,5255+21])
                          Texp_ident "process_core_type/1747"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[172,5255+22]..src/ppx.ml[172,5255+25])
                              Texp_ident "h/1848"
                        ]
                      expression (src/ppx.ml[173,5282+4]..src/ppx.ml[173,5282+29])
                        Texp_apply
                        expression (src/ppx.ml[173,5282+4]..src/ppx.ml[173,5282+26])
                          Texp_ident "process_core_type_list/1748"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[173,5282+26]..src/ppx.ml[173,5282+29])
                              Texp_ident "t/1849"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[180,5326+0]..src/ppx.ml[187,5525+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[180,5326+4]..src/ppx.ml[180,5326+31])
          Tpat_var "print_constructor_arguments/1850"
        expression (src/ppx.ml[180,5326+31]..src/ppx.ml[187,5525+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[180,5326+31]..src/ppx.ml[180,5326+34])
                Tpat_var "x/1852"
              expression (src/ppx.ml[181,5363+2]..src/ppx.ml[187,5525+65])
                Texp_match
                expression (src/ppx.ml[181,5363+8]..src/ppx.ml[181,5363+9])
                  Texp_ident "x/1852"
                [
                  <case>
                    pattern (src/ppx.ml[182,5378+4]..src/ppx.ml[182,5378+17])
                      Tpat_value
                      pattern (src/ppx.ml[182,5378+4]..src/ppx.ml[182,5378+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[182,5378+16]..src/ppx.ml[182,5378+17])
                            Tpat_var "a/1853"
                        ]
                        None
                    expression (src/ppx.ml[183,5399+4]..src/ppx.ml[184,5431+64])
                      Texp_sequence
                      expression (src/ppx.ml[183,5399+4]..src/ppx.ml[183,5399+30])
                        Texp_apply
                        expression (src/ppx.ml[183,5399+5]..src/ppx.ml[183,5399+27])
                          Texp_ident "process_core_type_list/1748"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[183,5399+28]..src/ppx.ml[183,5399+29])
                              Texp_ident "a/1853"
                        ]
                      expression (src/ppx.ml[184,5431+4]..src/ppx.ml[184,5431+64])
                        Texp_apply
                        expression (src/ppx.ml[184,5431+5]..src/ppx.ml[184,5431+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[184,5431+19]..src/ppx.ml[184,5431+63])
                              Texp_apply
                              expression (src/ppx.ml[184,5431+20]..src/ppx.ml[184,5431+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[184,5431+35]..src/ppx.ml[184,5431+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[184,5431+36]..src/ppx.ml[184,5431+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[184,5431+37]..src/ppx.ml[184,5431+55]),None)
                                      expression (src/ppx.ml[184,5431+60]..src/ppx.ml[184,5431+61])
                                        Texp_ident "a/1853"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[186,5503+4]..src/ppx.ml[186,5503+18])
                      Tpat_value
                      pattern (src/ppx.ml[186,5503+4]..src/ppx.ml[186,5503+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[186,5503+17]..src/ppx.ml[186,5503+18])
                            Tpat_var "a/1854"
                        ]
                        None
                    expression (src/ppx.ml[187,5525+4]..src/ppx.ml[187,5525+65])
                      Texp_apply
                      expression (src/ppx.ml[187,5525+5]..src/ppx.ml[187,5525+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[187,5525+19]..src/ppx.ml[187,5525+64])
                            Texp_apply
                            expression (src/ppx.ml[187,5525+20]..src/ppx.ml[187,5525+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[187,5525+35]..src/ppx.ml[187,5525+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[187,5525+36]..src/ppx.ml[187,5525+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[187,5525+37]..src/ppx.ml[187,5525+56]),None)
                                    expression (src/ppx.ml[187,5525+61]..src/ppx.ml[187,5525+62])
                                      Texp_ident "a/1854"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[189,5592+0]..src/ppx.ml[221,6568+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[189,5592+8]..src/ppx.ml[189,5592+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1855"
        expression (src/ppx.ml[189,5592+57]..src/ppx.ml[221,6568+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[189,5592+57]..src/ppx.ml[189,5592+60])
                Tpat_var "x/1856"
              expression (src/ppx.ml[190,5655+2]..src/ppx.ml[221,6568+8])
                Texp_match
                expression (src/ppx.ml[190,5655+8]..src/ppx.ml[190,5655+9])
                  Texp_ident "x/1856"
                [
                  <case>
                    pattern (src/ppx.ml[191,5670+4]..src/ppx.ml[191,5670+6])
                      Tpat_value
                      pattern (src/ppx.ml[191,5670+4]..src/ppx.ml[191,5670+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[191,5670+10]..src/ppx.ml[191,5670+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[192,5683+4]..src/ppx.ml[192,5683+10])
                      Tpat_value
                      pattern (src/ppx.ml[192,5683+4]..src/ppx.ml[192,5683+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[192,5683+4]..src/ppx.ml[192,5683+5])
                            Tpat_var "h/1857"
                          pattern (src/ppx.ml[192,5683+9]..src/ppx.ml[192,5683+10])
                            Tpat_var "t/1858"
                        ]
                        None
                    expression (src/ppx.ml[194,5762+4]..src/ppx.ml[221,6568+8])
                      Texp_match
                      expression (src/ppx.ml[194,5762+10]..src/ppx.ml[194,5762+11])
                        Texp_ident "h/1857"
                      [
                        <case>
                          pattern (src/ppx.ml[195,5779+5]..src/ppx.ml[202,6017+5])
                            Tpat_value
                            pattern (src/ppx.ml[195,5779+5]..src/ppx.ml[202,6017+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[196,5786+6]..src/ppx.ml[196,5786+14])
                                    Tpat_var "pcd_name/1859"
                                "pcd_vars"
                                  pattern (src/ppx.ml[197,5820+6]..src/ppx.ml[197,5820+14])
                                    Tpat_var "pcd_vars/1860"
                                "pcd_args"
                                  pattern (src/ppx.ml[198,5859+6]..src/ppx.ml[198,5859+14])
                                    Tpat_var "pcd_args/1861"
                                "pcd_res"
                                  pattern (src/ppx.ml[199,5904+6]..src/ppx.ml[199,5904+13])
                                    Tpat_var "pcd_res/1862"
                                "pcd_loc"
                                  pattern (src/ppx.ml[200,5943+6]..src/ppx.ml[200,5943+13])
                                    Tpat_var "pcd_loc/1863"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[201,5976+6]..src/ppx.ml[201,5976+20])
                                    Tpat_var "pcd_attributes/1864"
                              ]
                          expression (src/ppx.ml[205,6099+6]..src/ppx.ml[221,6568+8])
                            Texp_sequence
                            expression (src/ppx.ml[205,6099+6]..src/ppx.ml[205,6099+43])
                              Texp_apply
                              expression (src/ppx.ml[205,6099+6]..src/ppx.ml[205,6099+33])
                                Texp_ident "print_constructor_arguments/1850"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[205,6099+33]..src/ppx.ml[205,6099+43])
                                    Texp_ident "pcd_args/1861"
                              ]
                            expression (src/ppx.ml[206,6144+6]..src/ppx.ml[221,6568+8])
                              Texp_sequence
                              expression (src/ppx.ml[206,6144+6]..src/ppx.ml[219,6489+16])
                                Texp_apply
                                expression (src/ppx.ml[206,6144+7]..src/ppx.ml[206,6144+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[206,6144+21]..src/ppx.ml[219,6489+15])
                                      Texp_apply
                                      expression (src/ppx.ml[206,6144+22]..src/ppx.ml[206,6144+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[206,6144+37]..src/ppx.ml[219,6489+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[207,6183+11]..src/ppx.ml[207,6183+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[207,6183+12]..src/ppx.ml[207,6183+36]),None)
                                              expression (src/ppx.ml[208,6222+15]..src/ppx.ml[208,6222+23])
                                                Texp_ident "pcd_name/1859"
                                              expression (src/ppx.ml[209,6247+15]..src/ppx.ml[209,6247+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[209,6247+16]..src/ppx.ml[209,6247+20]),None)
                                              expression (src/ppx.ml[210,6270+15]..src/ppx.ml[210,6270+23])
                                                Texp_ident "pcd_vars/1860"
                                              expression (src/ppx.ml[211,6295+15]..src/ppx.ml[211,6295+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[211,6295+16]..src/ppx.ml[211,6295+20]),None)
                                              expression (src/ppx.ml[212,6318+15]..src/ppx.ml[212,6318+23])
                                                Texp_ident "pcd_args/1861"
                                              expression (src/ppx.ml[213,6343+15]..src/ppx.ml[213,6343+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[213,6343+16]..src/ppx.ml[213,6343+19]),None)
                                              expression (src/ppx.ml[214,6365+15]..src/ppx.ml[214,6365+22])
                                                Texp_ident "pcd_res/1862"
                                              expression (src/ppx.ml[215,6389+15]..src/ppx.ml[215,6389+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[215,6389+16]..src/ppx.ml[215,6389+19]),None)
                                              expression (src/ppx.ml[216,6411+15]..src/ppx.ml[216,6411+22])
                                                Texp_ident "pcd_loc/1863"
                                              expression (src/ppx.ml[217,6435+15]..src/ppx.ml[217,6435+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[217,6435+16]..src/ppx.ml[217,6435+21]),None)
                                              expression (src/ppx.ml[218,6459+15]..src/ppx.ml[218,6459+29])
                                                Texp_ident "pcd_attributes/1864"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[220,6507+6]..src/ppx.ml[221,6568+8])
                                Texp_sequence
                                expression (src/ppx.ml[220,6507+6]..src/ppx.ml[220,6507+59])
                                  Texp_apply
                                  expression (src/ppx.ml[220,6507+7]..src/ppx.ml[220,6507+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1855"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[220,6507+57]..src/ppx.ml[220,6507+58])
                                        Texp_ident "t/1858"
                                  ]
                                expression (src/ppx.ml[221,6568+6]..src/ppx.ml[221,6568+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[223,6580+0]..src/ppx.ml[234,6977+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[223,6580+4]..src/ppx.ml[223,6580+16])
          Tpat_var "process_kind/1865"
        expression (src/ppx.ml[223,6580+16]..src/ppx.ml[234,6977+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[223,6580+16]..src/ppx.ml[223,6580+19])
                Tpat_var "x/1867"
              expression (src/ppx.ml[224,6602+2]..src/ppx.ml[234,6977+77])
                Texp_match
                expression (src/ppx.ml[224,6602+8]..src/ppx.ml[224,6602+9])
                  Texp_ident "x/1867"
                [
                  <case>
                    pattern (src/ppx.ml[226,6639+4]..src/ppx.ml[226,6639+18])
                      Tpat_value
                      pattern (src/ppx.ml[226,6639+4]..src/ppx.ml[226,6639+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[226,6639+23]..src/ppx.ml[226,6639+81])
                      Texp_apply
                      expression (src/ppx.ml[226,6639+24]..src/ppx.ml[226,6639+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[226,6639+38]..src/ppx.ml[226,6639+80])
                            Texp_apply
                            expression (src/ppx.ml[226,6639+39]..src/ppx.ml[226,6639+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[226,6639+54]..src/ppx.ml[226,6639+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[226,6639+56]..src/ppx.ml[226,6639+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[227,6721+4]..src/ppx.ml[227,6721+19])
                      Tpat_value
                      pattern (src/ppx.ml[227,6721+4]..src/ppx.ml[227,6721+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[227,6721+18]..src/ppx.ml[227,6721+19])
                            Tpat_var "a/1868"
                        ]
                        None
                    expression (src/ppx.ml[228,6744+4]..src/ppx.ml[229,6803+65])
                      Texp_sequence
                      expression (src/ppx.ml[228,6744+4]..src/ppx.ml[228,6744+57])
                        Texp_apply
                        expression (src/ppx.ml[228,6744+5]..src/ppx.ml[228,6744+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1855"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[228,6744+55]..src/ppx.ml[228,6744+56])
                              Texp_ident "a/1868"
                        ]
                      expression (src/ppx.ml[229,6803+4]..src/ppx.ml[229,6803+65])
                        Texp_apply
                        expression (src/ppx.ml[229,6803+5]..src/ppx.ml[229,6803+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[229,6803+19]..src/ppx.ml[229,6803+64])
                              Texp_apply
                              expression (src/ppx.ml[229,6803+20]..src/ppx.ml[229,6803+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[229,6803+35]..src/ppx.ml[229,6803+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[229,6803+36]..src/ppx.ml[229,6803+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[229,6803+37]..src/ppx.ml[229,6803+57]),None)
                                      expression (src/ppx.ml[229,6803+61]..src/ppx.ml[229,6803+62])
                                        Texp_ident "a/1868"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[232,6916+5]..src/ppx.ml[232,6916+19])
                      Tpat_value
                      pattern (src/ppx.ml[232,6916+5]..src/ppx.ml[232,6916+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[232,6916+18]..src/ppx.ml[232,6916+19])
                            Tpat_var "a/1869"
                        ]
                        None
                    expression (src/ppx.ml[233,6944+5]..src/ppx.ml[233,6944+32])
                      Texp_apply
                      expression (src/ppx.ml[233,6944+5]..src/ppx.ml[233,6944+29])
                        Texp_ident "process_record_kind_list/1746"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[233,6944+29]..src/ppx.ml[233,6944+32])
                            Texp_ident "a/1869"
                      ]
                  <case>
                    pattern (src/ppx.ml[234,6977+5]..src/ppx.ml[234,6977+15])
                      Tpat_value
                      pattern (src/ppx.ml[234,6977+5]..src/ppx.ml[234,6977+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[234,6977+19]..src/ppx.ml[234,6977+77])
                      Texp_apply
                      expression (src/ppx.ml[234,6977+20]..src/ppx.ml[234,6977+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[234,6977+34]..src/ppx.ml[234,6977+76])
                            Texp_apply
                            expression (src/ppx.ml[234,6977+35]..src/ppx.ml[234,6977+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[234,6977+50]..src/ppx.ml[234,6977+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[234,6977+52]..src/ppx.ml[234,6977+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[236,7056+0]..src/ppx.ml[257,8062+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[236,7056+4]..src/ppx.ml[236,7056+19])
          Tpat_var "print_type_decl/1870"
        expression (src/ppx.ml[236,7056+19]..src/ppx.ml[257,8062+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[236,7056+19]..src/ppx.ml[236,7056+22])
                Tpat_var "x/1872"
              expression (src/ppx.ml[237,7081+2]..src/ppx.ml[257,8062+38])
                Texp_match
                expression (src/ppx.ml[237,7081+8]..src/ppx.ml[237,7081+9])
                  Texp_ident "x/1872"
                [
                  <case>
                    pattern (src/ppx.ml[238,7096+4]..src/ppx.ml[247,7477+5])
                      Tpat_value
                      pattern (src/ppx.ml[238,7096+4]..src/ppx.ml[247,7477+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[239,7102+6]..src/ppx.ml[239,7102+16])
                              Tpat_var "ptype_name/1873"
                          "ptype_params"
                            pattern (src/ppx.ml[240,7139+6]..src/ppx.ml[240,7139+18])
                              Tpat_var "ptype_params/1874"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[241,7211+6]..src/ppx.ml[241,7211+17])
                              Tpat_var "ptype_cstrs/1875"
                          "ptype_kind"
                            pattern (src/ppx.ml[242,7280+6]..src/ppx.ml[242,7280+16])
                              Tpat_var "ptype_kind/1876"
                          "ptype_private"
                            pattern (src/ppx.ml[243,7317+6]..src/ppx.ml[243,7317+19])
                              Tpat_var "ptype_private/1877"
                          "ptype_manifest"
                            pattern (src/ppx.ml[244,7358+6]..src/ppx.ml[244,7358+20])
                              Tpat_var "ptype_manifest/1878"
                          "ptype_attributes"
                            pattern (src/ppx.ml[245,7405+6]..src/ppx.ml[245,7405+22])
                              Tpat_var "ptype_attributes/1879"
                          "ptype_loc"
                            pattern (src/ppx.ml[246,7446+6]..src/ppx.ml[246,7446+15])
                              Tpat_var "ptype_loc/1880"
                        ]
                    expression (src/ppx.ml[248,7486+4]..src/ppx.ml[257,8062+38])
                      Texp_sequence
                      expression (src/ppx.ml[248,7486+4]..src/ppx.ml[248,7486+69])
                        Texp_apply
                        expression (src/ppx.ml[248,7486+5]..src/ppx.ml[248,7486+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[248,7486+19]..src/ppx.ml[248,7486+68])
                              Texp_apply
                              expression (src/ppx.ml[248,7486+20]..src/ppx.ml[248,7486+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[248,7486+35]..src/ppx.ml[248,7486+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[248,7486+36]..src/ppx.ml[248,7486+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[248,7486+37]..src/ppx.ml[248,7486+53]),None)
                                      expression (src/ppx.ml[248,7486+56]..src/ppx.ml[248,7486+66])
                                        Texp_ident "ptype_name/1873"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[249,7557+4]..src/ppx.ml[257,8062+38])
                        Texp_sequence
                        expression (src/ppx.ml[249,7557+4]..src/ppx.ml[249,7557+72])
                          Texp_apply
                          expression (src/ppx.ml[249,7557+5]..src/ppx.ml[249,7557+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,7557+19]..src/ppx.ml[249,7557+71])
                                Texp_apply
                                expression (src/ppx.ml[249,7557+20]..src/ppx.ml[249,7557+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[249,7557+35]..src/ppx.ml[249,7557+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[249,7557+36]..src/ppx.ml[249,7557+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[249,7557+37]..src/ppx.ml[249,7557+54]),None)
                                        expression (src/ppx.ml[249,7557+57]..src/ppx.ml[249,7557+69])
                                          Texp_ident "ptype_params/1874"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[250,7631+4]..src/ppx.ml[257,8062+38])
                          Texp_sequence
                          expression (src/ppx.ml[250,7631+4]..src/ppx.ml[250,7631+66])
                            Texp_apply
                            expression (src/ppx.ml[250,7631+5]..src/ppx.ml[250,7631+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[250,7631+19]..src/ppx.ml[250,7631+65])
                                  Texp_apply
                                  expression (src/ppx.ml[250,7631+20]..src/ppx.ml[250,7631+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[250,7631+35]..src/ppx.ml[250,7631+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[250,7631+36]..src/ppx.ml[250,7631+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[250,7631+37]..src/ppx.ml[250,7631+49]),None)
                                          expression (src/ppx.ml[250,7631+52]..src/ppx.ml[250,7631+63])
                                            Texp_ident "ptype_cstrs/1875"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[251,7699+4]..src/ppx.ml[257,8062+38])
                            Texp_sequence
                            expression (src/ppx.ml[251,7699+4]..src/ppx.ml[251,7699+63])
                              Texp_apply
                              expression (src/ppx.ml[251,7699+5]..src/ppx.ml[251,7699+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[251,7699+19]..src/ppx.ml[251,7699+62])
                                    Texp_apply
                                    expression (src/ppx.ml[251,7699+20]..src/ppx.ml[251,7699+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[251,7699+35]..src/ppx.ml[251,7699+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[251,7699+36]..src/ppx.ml[251,7699+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[251,7699+37]..src/ppx.ml[251,7699+48]),None)
                                            expression (src/ppx.ml[251,7699+50]..src/ppx.ml[251,7699+60])
                                              Texp_ident "ptype_kind/1876"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[252,7764+4]..src/ppx.ml[257,8062+38])
                              Texp_sequence
                              expression (src/ppx.ml[252,7764+4]..src/ppx.ml[252,7764+29])
                                Texp_apply
                                expression (src/ppx.ml[252,7764+5]..src/ppx.ml[252,7764+17])
                                  Texp_ident "process_kind/1865"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[252,7764+18]..src/ppx.ml[252,7764+28])
                                      Texp_ident "ptype_kind/1876"
                                ]
                              expression (src/ppx.ml[253,7795+4]..src/ppx.ml[257,8062+38])
                                Texp_apply
                                expression (src/ppx.ml[253,7795+5]..src/ppx.ml[253,7795+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[253,7795+19]..src/ppx.ml[257,8062+37])
                                      Texp_apply
                                      expression (src/ppx.ml[253,7795+20]..src/ppx.ml[253,7795+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[253,7795+35]..src/ppx.ml[257,8062+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[253,7795+36]..src/ppx.ml[253,7795+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[253,7795+37]..src/ppx.ml[253,7795+51]),None)
                                              expression (src/ppx.ml[253,7795+55]..src/ppx.ml[253,7795+68])
                                                Texp_ident "ptype_private/1877"
                                              expression (src/ppx.ml[254,7865+36]..src/ppx.ml[254,7865+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[254,7865+37]..src/ppx.ml[254,7865+51]),None)
                                              expression (src/ppx.ml[254,7865+54]..src/ppx.ml[254,7865+68])
                                                Texp_ident "ptype_manifest/1878"
                                              expression (src/ppx.ml[255,7935+36]..src/ppx.ml[255,7935+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[255,7935+37]..src/ppx.ml[255,7935+47]),None)
                                              expression (src/ppx.ml[255,7935+50]..src/ppx.ml[255,7935+66])
                                                Texp_ident "ptype_attributes/1879"
                                              expression (src/ppx.ml[256,8003+36]..src/ppx.ml[256,8003+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[256,8003+37]..src/ppx.ml[256,8003+46]),None)
                                              expression (src/ppx.ml[256,8003+49]..src/ppx.ml[256,8003+58])
                                                Texp_ident "ptype_loc/1880"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[259,8106+0]..src/ppx.ml[265,8241+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[259,8106+8]..src/ppx.ml[259,8106+30])
          Tpat_var "process_type_decl_list/1881"
        expression (src/ppx.ml[259,8106+30]..src/ppx.ml[265,8241+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[259,8106+30]..src/ppx.ml[259,8106+33])
                Tpat_var "x/1882"
              expression (src/ppx.ml[260,8142+2]..src/ppx.ml[265,8241+6])
                Texp_match
                expression (src/ppx.ml[260,8142+8]..src/ppx.ml[260,8142+9])
                  Texp_ident "x/1882"
                [
                  <case>
                    pattern (src/ppx.ml[261,8157+4]..src/ppx.ml[261,8157+6])
                      Tpat_value
                      pattern (src/ppx.ml[261,8157+4]..src/ppx.ml[261,8157+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[261,8157+10]..src/ppx.ml[261,8157+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[262,8170+4]..src/ppx.ml[262,8170+10])
                      Tpat_value
                      pattern (src/ppx.ml[262,8170+4]..src/ppx.ml[262,8170+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[262,8170+4]..src/ppx.ml[262,8170+5])
                            Tpat_var "h/1883"
                          pattern (src/ppx.ml[262,8170+9]..src/ppx.ml[262,8170+10])
                            Tpat_var "t/1884"
                        ]
                        None
                    expression (src/ppx.ml[263,8184+4]..src/ppx.ml[265,8241+6])
                      Texp_sequence
                      expression (src/ppx.ml[263,8184+4]..src/ppx.ml[263,8184+23])
                        Texp_apply
                        expression (src/ppx.ml[263,8184+5]..src/ppx.ml[263,8184+20])
                          Texp_ident "print_type_decl/1870"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[263,8184+21]..src/ppx.ml[263,8184+22])
                              Texp_ident "h/1883"
                        ]
                      expression (src/ppx.ml[264,8209+4]..src/ppx.ml[265,8241+6])
                        Texp_sequence
                        expression (src/ppx.ml[264,8209+4]..src/ppx.ml[264,8209+30])
                          Texp_apply
                          expression (src/ppx.ml[264,8209+5]..src/ppx.ml[264,8209+27])
                            Texp_ident "process_type_decl_list/1881"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[264,8209+28]..src/ppx.ml[264,8209+29])
                                Texp_ident "t/1884"
                          ]
                        expression (src/ppx.ml[265,8241+4]..src/ppx.ml[265,8241+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[267,8253+0]..src/ppx.ml[293,10217+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[267,8253+4]..src/ppx.ml[267,8253+13])
          Tpat_var "printdesc/1885"
        expression (src/ppx.ml[267,8253+13]..src/ppx.ml[293,10217+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[267,8253+14]..src/ppx.ml[267,8253+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[267,8253+17]..src/ppx.ml[267,8253+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1887"
                pattern (src/ppx.ml[267,8253+14]..src/ppx.ml[267,8253+15])
                  Tpat_any
              expression (src/ppx.ml[268,8299+2]..src/ppx.ml[293,10217+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[267,8253+39]..src/ppx.ml[267,8253+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[268,8299+2]..src/ppx.ml[268,8299+68])
                  Texp_apply
                  expression (src/ppx.ml[268,8299+3]..src/ppx.ml[268,8299+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[268,8299+17]..src/ppx.ml[268,8299+67])
                        Texp_apply
                        expression (src/ppx.ml[268,8299+18]..src/ppx.ml[268,8299+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8299+33]..src/ppx.ml[268,8299+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[268,8299+34]..src/ppx.ml[268,8299+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[268,8299+35]..src/ppx.ml[268,8299+61]),None)
                                expression (src/ppx.ml[268,8299+64]..src/ppx.ml[268,8299+65])
                                  Texp_ident "x/1887"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[269,8369+2]..src/ppx.ml[293,10217+128])
                  Texp_match
                  expression (src/ppx.ml[269,8369+8]..src/ppx.ml[269,8369+9])
                    Texp_ident "x/1887"
                  [
                    <case>
                      pattern (src/ppx.ml[270,8384+4]..src/ppx.ml[270,8384+37])
                        Tpat_value
                        pattern (src/ppx.ml[270,8384+4]..src/ppx.ml[270,8384+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[270,8384+15]..src/ppx.ml[270,8384+25])
                              Tpat_var "expression/1888"
                            pattern (src/ppx.ml[270,8384+26]..src/ppx.ml[270,8384+36])
                              Tpat_var "attributes/1889"
                          ]
                          None
                      expression (src/ppx.ml[270,8384+41]..src/ppx.ml[270,8384+117])
                        Texp_apply
                        expression (src/ppx.ml[270,8384+42]..src/ppx.ml[270,8384+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[270,8384+56]..src/ppx.ml[270,8384+116])
                              Texp_apply
                              expression (src/ppx.ml[270,8384+57]..src/ppx.ml[270,8384+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[270,8384+72]..src/ppx.ml[270,8384+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[270,8384+73]..src/ppx.ml[270,8384+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[270,8384+74]..src/ppx.ml[270,8384+90]),None)
                                      expression (src/ppx.ml[270,8384+93]..src/ppx.ml[270,8384+103])
                                        Texp_ident "expression/1888"
                                      expression (src/ppx.ml[270,8384+104]..src/ppx.ml[270,8384+114])
                                        Texp_ident "attributes/1889"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[272,8522+4]..src/ppx.ml[272,8522+45])
                        Tpat_value
                        pattern (src/ppx.ml[272,8522+4]..src/ppx.ml[272,8522+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[272,8522+16]..src/ppx.ml[272,8522+24])
                              Tpat_var "rec_flag/1890"
                            pattern (src/ppx.ml[272,8522+26]..src/ppx.ml[272,8522+44])
                              Tpat_var "value_binding_list/1891"
                          ]
                          None
                      expression (src/ppx.ml[272,8522+48]..src/ppx.ml[273,8656+48])
                        Texp_sequence
                        expression (src/ppx.ml[272,8522+48]..src/ppx.ml[272,8522+132])
                          Texp_apply
                          expression (src/ppx.ml[272,8522+49]..src/ppx.ml[272,8522+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[272,8522+63]..src/ppx.ml[272,8522+131])
                                Texp_apply
                                expression (src/ppx.ml[272,8522+64]..src/ppx.ml[272,8522+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[272,8522+79]..src/ppx.ml[272,8522+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[272,8522+80]..src/ppx.ml[272,8522+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[272,8522+81]..src/ppx.ml[272,8522+98]),None)
                                        expression (src/ppx.ml[272,8522+101]..src/ppx.ml[272,8522+109])
                                          Texp_ident "rec_flag/1890"
                                        expression (src/ppx.ml[272,8522+111]..src/ppx.ml[272,8522+129])
                                          Texp_ident "value_binding_list/1891"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[273,8656+4]..src/ppx.ml[273,8656+48])
                          Texp_apply
                          expression (src/ppx.ml[273,8656+4]..src/ppx.ml[273,8656+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[273,8656+28]..src/ppx.ml[273,8656+48])
                                Texp_ident "value_binding_list/1891"
                          ]
                    <case>
                      pattern (src/ppx.ml[274,8705+4]..src/ppx.ml[274,8705+36])
                        Tpat_value
                        pattern (src/ppx.ml[274,8705+4]..src/ppx.ml[274,8705+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[274,8705+19]..src/ppx.ml[274,8705+36])
                              Tpat_var "value_description/1892"
                          ]
                          None
                      expression (src/ppx.ml[274,8705+39]..src/ppx.ml[274,8705+116])
                        Texp_apply
                        expression (src/ppx.ml[274,8705+40]..src/ppx.ml[274,8705+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,8705+54]..src/ppx.ml[274,8705+115])
                              Texp_apply
                              expression (src/ppx.ml[274,8705+55]..src/ppx.ml[274,8705+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,8705+70]..src/ppx.ml[274,8705+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,8705+71]..src/ppx.ml[274,8705+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[274,8705+72]..src/ppx.ml[274,8705+93]),None)
                                      expression (src/ppx.ml[274,8705+96]..src/ppx.ml[274,8705+113])
                                        Texp_ident "value_description/1892"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,8823+4]..src/ppx.ml[276,8823+47])
                        Tpat_value
                        pattern (src/ppx.ml[276,8823+4]..src/ppx.ml[276,8823+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[276,8823+15]..src/ppx.ml[276,8823+23])
                              Tpat_var "rec_flag/1893"
                            pattern (src/ppx.ml[276,8823+25]..src/ppx.ml[276,8823+46])
                              Tpat_var "type_declaration_list/1894"
                          ]
                          None
                      expression (src/ppx.ml[278,8902+4]..src/ppx.ml[279,8953+90])
                        Texp_sequence
                        expression (src/ppx.ml[278,8902+4]..src/ppx.ml[278,8902+49])
                          Texp_apply
                          expression (src/ppx.ml[278,8902+4]..src/ppx.ml[278,8902+26])
                            Texp_ident "process_type_decl_list/1881"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[278,8902+26]..src/ppx.ml[278,8902+49])
                                Texp_ident "type_declaration_list/1894"
                          ]
                        expression (src/ppx.ml[279,8953+4]..src/ppx.ml[279,8953+90])
                          Texp_apply
                          expression (src/ppx.ml[279,8953+5]..src/ppx.ml[279,8953+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[279,8953+19]..src/ppx.ml[279,8953+89])
                                Texp_apply
                                expression (src/ppx.ml[279,8953+20]..src/ppx.ml[279,8953+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[279,8953+35]..src/ppx.ml[279,8953+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[279,8953+36]..src/ppx.ml[279,8953+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[279,8953+37]..src/ppx.ml[279,8953+53]),None)
                                        expression (src/ppx.ml[279,8953+56]..src/ppx.ml[279,8953+64])
                                          Texp_ident "rec_flag/1893"
                                        expression (src/ppx.ml[279,8953+66]..src/ppx.ml[279,8953+87])
                                          Texp_ident "type_declaration_list/1894"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[282,9046+4]..src/ppx.ml[282,9046+31])
                        Tpat_value
                        pattern (src/ppx.ml[282,9046+4]..src/ppx.ml[282,9046+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[282,9046+17]..src/ppx.ml[282,9046+31])
                              Tpat_var "type_extension/1895"
                          ]
                          None
                      expression (src/ppx.ml[282,9046+34]..src/ppx.ml[282,9046+105])
                        Texp_apply
                        expression (src/ppx.ml[282,9046+35]..src/ppx.ml[282,9046+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[282,9046+49]..src/ppx.ml[282,9046+104])
                              Texp_apply
                              expression (src/ppx.ml[282,9046+50]..src/ppx.ml[282,9046+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[282,9046+65]..src/ppx.ml[282,9046+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[282,9046+66]..src/ppx.ml[282,9046+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[282,9046+67]..src/ppx.ml[282,9046+85]),None)
                                      expression (src/ppx.ml[282,9046+88]..src/ppx.ml[282,9046+102])
                                        Texp_ident "type_extension/1895"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[283,9152+4]..src/ppx.ml[283,9152+40])
                        Tpat_value
                        pattern (src/ppx.ml[283,9152+4]..src/ppx.ml[283,9152+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[283,9152+19]..src/ppx.ml[283,9152+40])
                              Tpat_var "extension_constructor/1896"
                          ]
                          None
                      expression (src/ppx.ml[283,9152+43]..src/ppx.ml[283,9152+124])
                        Texp_apply
                        expression (src/ppx.ml[283,9152+44]..src/ppx.ml[283,9152+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[283,9152+58]..src/ppx.ml[283,9152+123])
                              Texp_apply
                              expression (src/ppx.ml[283,9152+59]..src/ppx.ml[283,9152+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[283,9152+74]..src/ppx.ml[283,9152+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[283,9152+75]..src/ppx.ml[283,9152+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[283,9152+76]..src/ppx.ml[283,9152+97]),None)
                                      expression (src/ppx.ml[283,9152+100]..src/ppx.ml[283,9152+121])
                                        Texp_ident "extension_constructor/1896"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[284,9277+4]..src/ppx.ml[284,9277+31])
                        Tpat_value
                        pattern (src/ppx.ml[284,9277+4]..src/ppx.ml[284,9277+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[284,9277+17]..src/ppx.ml[284,9277+31])
                              Tpat_var "module_binding/1897"
                          ]
                          None
                      expression (src/ppx.ml[284,9277+34]..src/ppx.ml[284,9277+104])
                        Texp_apply
                        expression (src/ppx.ml[284,9277+35]..src/ppx.ml[284,9277+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[284,9277+49]..src/ppx.ml[284,9277+103])
                              Texp_apply
                              expression (src/ppx.ml[284,9277+50]..src/ppx.ml[284,9277+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[284,9277+65]..src/ppx.ml[284,9277+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[284,9277+66]..src/ppx.ml[284,9277+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[284,9277+67]..src/ppx.ml[284,9277+85]),None)
                                      expression (src/ppx.ml[284,9277+87]..src/ppx.ml[284,9277+101])
                                        Texp_ident "module_binding/1897"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[285,9382+4]..src/ppx.ml[285,9382+39])
                        Tpat_value
                        pattern (src/ppx.ml[285,9382+4]..src/ppx.ml[285,9382+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[285,9382+20]..src/ppx.ml[285,9382+39])
                              Tpat_var "module_binding_list/1898"
                          ]
                          None
                      expression (src/ppx.ml[285,9382+42]..src/ppx.ml[285,9382+121])
                        Texp_apply
                        expression (src/ppx.ml[285,9382+43]..src/ppx.ml[285,9382+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[285,9382+57]..src/ppx.ml[285,9382+120])
                              Texp_apply
                              expression (src/ppx.ml[285,9382+58]..src/ppx.ml[285,9382+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[285,9382+73]..src/ppx.ml[285,9382+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[285,9382+74]..src/ppx.ml[285,9382+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[285,9382+75]..src/ppx.ml[285,9382+96]),None)
                                      expression (src/ppx.ml[285,9382+99]..src/ppx.ml[285,9382+118])
                                        Texp_ident "module_binding_list/1898"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[286,9504+4]..src/ppx.ml[286,9504+40])
                        Tpat_value
                        pattern (src/ppx.ml[286,9504+4]..src/ppx.ml[286,9504+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[286,9504+17]..src/ppx.ml[286,9504+40])
                              Tpat_var "module_type_declaration/1899"
                          ]
                          None
                      expression (src/ppx.ml[286,9504+43]..src/ppx.ml[286,9504+124])
                        Texp_apply
                        expression (src/ppx.ml[286,9504+44]..src/ppx.ml[286,9504+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[286,9504+58]..src/ppx.ml[286,9504+123])
                              Texp_apply
                              expression (src/ppx.ml[286,9504+59]..src/ppx.ml[286,9504+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[286,9504+74]..src/ppx.ml[286,9504+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[286,9504+75]..src/ppx.ml[286,9504+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[286,9504+76]..src/ppx.ml[286,9504+95]),None)
                                      expression (src/ppx.ml[286,9504+98]..src/ppx.ml[286,9504+121])
                                        Texp_ident "module_type_declaration/1899"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[288,9646+4]..src/ppx.ml[288,9646+30])
                        Tpat_value
                        pattern (src/ppx.ml[288,9646+4]..src/ppx.ml[288,9646+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[288,9646+14]..src/ppx.ml[288,9646+30])
                              Tpat_var "open_description/1900"
                          ]
                          None
                      expression (src/ppx.ml[288,9646+33]..src/ppx.ml[288,9646+103])
                        Texp_apply
                        expression (src/ppx.ml[288,9646+34]..src/ppx.ml[288,9646+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[288,9646+48]..src/ppx.ml[288,9646+102])
                              Texp_apply
                              expression (src/ppx.ml[288,9646+49]..src/ppx.ml[288,9646+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[288,9646+64]..src/ppx.ml[288,9646+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[288,9646+65]..src/ppx.ml[288,9646+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[288,9646+66]..src/ppx.ml[288,9646+81]),None)
                                      expression (src/ppx.ml[288,9646+84]..src/ppx.ml[288,9646+100])
                                        Texp_ident "open_description/1900"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[289,9750+4]..src/ppx.ml[289,9750+36])
                        Tpat_value
                        pattern (src/ppx.ml[289,9750+4]..src/ppx.ml[289,9750+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[289,9750+15]..src/ppx.ml[289,9750+36])
                              Tpat_var "class_declarations/1901"
                          ]
                          None
                      expression (src/ppx.ml[289,9750+39]..src/ppx.ml[289,9750+113])
                        Texp_apply
                        expression (src/ppx.ml[289,9750+40]..src/ppx.ml[289,9750+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[289,9750+54]..src/ppx.ml[289,9750+112])
                              Texp_apply
                              expression (src/ppx.ml[289,9750+55]..src/ppx.ml[289,9750+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[289,9750+70]..src/ppx.ml[289,9750+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[289,9750+71]..src/ppx.ml[289,9750+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[289,9750+72]..src/ppx.ml[289,9750+89]),None)
                                      expression (src/ppx.ml[289,9750+92]..src/ppx.ml[289,9750+110])
                                        Texp_ident "class_declarations/1901"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[290,9864+4]..src/ppx.ml[290,9864+45])
                        Tpat_value
                        pattern (src/ppx.ml[290,9864+4]..src/ppx.ml[290,9864+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[290,9864+20]..src/ppx.ml[290,9864+45])
                              Tpat_var "class_type_declarations/1902"
                          ]
                          None
                      expression (src/ppx.ml[290,9864+48]..src/ppx.ml[290,9864+132])
                        Texp_apply
                        expression (src/ppx.ml[290,9864+49]..src/ppx.ml[290,9864+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[290,9864+63]..src/ppx.ml[290,9864+131])
                              Texp_apply
                              expression (src/ppx.ml[290,9864+64]..src/ppx.ml[290,9864+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[290,9864+79]..src/ppx.ml[290,9864+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[290,9864+80]..src/ppx.ml[290,9864+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[290,9864+81]..src/ppx.ml[290,9864+103]),None)
                                      expression (src/ppx.ml[290,9864+106]..src/ppx.ml[290,9864+129])
                                        Texp_ident "class_type_declarations/1902"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[291,9997+4]..src/ppx.ml[291,9997+39])
                        Tpat_value
                        pattern (src/ppx.ml[291,9997+4]..src/ppx.ml[291,9997+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[291,9997+18]..src/ppx.ml[291,9997+39])
                              Tpat_var "include_declaration/1903"
                          ]
                          None
                      expression (src/ppx.ml[291,9997+41]..src/ppx.ml[291,9997+117])
                        Texp_apply
                        expression (src/ppx.ml[291,9997+42]..src/ppx.ml[291,9997+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[291,9997+56]..src/ppx.ml[291,9997+116])
                              Texp_apply
                              expression (src/ppx.ml[291,9997+57]..src/ppx.ml[291,9997+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[291,9997+72]..src/ppx.ml[291,9997+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[291,9997+73]..src/ppx.ml[291,9997+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[291,9997+74]..src/ppx.ml[291,9997+93]),None)
                                      expression (src/ppx.ml[291,9997+95]..src/ppx.ml[291,9997+114])
                                        Texp_ident "include_declaration/1903"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[292,10115+4]..src/ppx.ml[292,10115+30])
                        Tpat_value
                        pattern (src/ppx.ml[292,10115+4]..src/ppx.ml[292,10115+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[292,10115+19]..src/ppx.ml[292,10115+30])
                              Tpat_var "attribute/1904"
                          ]
                          None
                      expression (src/ppx.ml[292,10115+32]..src/ppx.ml[292,10115+101])
                        Texp_apply
                        expression (src/ppx.ml[292,10115+33]..src/ppx.ml[292,10115+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[292,10115+47]..src/ppx.ml[292,10115+100])
                              Texp_apply
                              expression (src/ppx.ml[292,10115+48]..src/ppx.ml[292,10115+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[292,10115+63]..src/ppx.ml[292,10115+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[292,10115+64]..src/ppx.ml[292,10115+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[292,10115+65]..src/ppx.ml[292,10115+86]),None)
                                      expression (src/ppx.ml[292,10115+89]..src/ppx.ml[292,10115+98])
                                        Texp_ident "attribute/1904"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[293,10217+4]..src/ppx.ml[293,10217+44])
                        Tpat_value
                        pattern (src/ppx.ml[293,10217+4]..src/ppx.ml[293,10217+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[293,10217+21]..src/ppx.ml[293,10217+30])
                              Tpat_var "extension/1905"
                            pattern (src/ppx.ml[293,10217+33]..src/ppx.ml[293,10217+43])
                              Tpat_var "attributes/1906"
                          ]
                          None
                      expression (src/ppx.ml[293,10217+46]..src/ppx.ml[293,10217+128])
                        Texp_apply
                        expression (src/ppx.ml[293,10217+47]..src/ppx.ml[293,10217+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[293,10217+61]..src/ppx.ml[293,10217+127])
                              Texp_apply
                              expression (src/ppx.ml[293,10217+62]..src/ppx.ml[293,10217+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[293,10217+77]..src/ppx.ml[293,10217+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[293,10217+78]..src/ppx.ml[293,10217+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[293,10217+79]..src/ppx.ml[293,10217+100]),None)
                                      expression (src/ppx.ml[293,10217+103]..src/ppx.ml[293,10217+112])
                                        Texp_ident "extension/1905"
                                      expression (src/ppx.ml[293,10217+115]..src/ppx.ml[293,10217+125])
                                        Texp_ident "attributes/1906"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[295,10347+0]..src/ppx.ml[295,10347+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[295,10347+4]..src/ppx.ml[295,10347+7])
          Tpat_var "foo/1907"
        expression (src/ppx.ml[295,10347+10]..src/ppx.ml[295,10347+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[297,10362+0]..src/ppx.ml[305,10581+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[297,10362+4]..src/ppx.ml[297,10362+12])
          Tpat_var "printone/1908"
        expression (src/ppx.ml[297,10362+13]..src/ppx.ml[305,10581+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[297,10362+14]..src/ppx.ml[297,10362+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[297,10362+18]..src/ppx.ml[297,10362+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1909"
                pattern (src/ppx.ml[297,10362+14]..src/ppx.ml[297,10362+15])
                  Tpat_any
              expression (src/ppx.ml[298,10405+2]..src/ppx.ml[305,10581+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[297,10362+36]..src/ppx.ml[297,10362+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[298,10405+8]..src/ppx.ml[298,10405+9])
                  Texp_ident "x/1909"
                [
                  <case>
                    pattern (src/ppx.ml[299,10420+3]..src/ppx.ml[302,10470+3])
                      Tpat_value
                      pattern (src/ppx.ml[299,10420+3]..src/ppx.ml[302,10470+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[300,10425+4]..src/ppx.ml[300,10425+13])
                              Tpat_var "pstr_desc/1910"
                        ]
                    expression (src/ppx.ml[304,10554+4]..src/ppx.ml[305,10581+6])
                      Texp_sequence
                      expression (src/ppx.ml[304,10554+4]..src/ppx.ml[304,10554+25])
                        Texp_apply
                        expression (src/ppx.ml[304,10554+5]..src/ppx.ml[304,10554+14])
                          Texp_ident "printdesc/1885"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[304,10554+15]..src/ppx.ml[304,10554+24])
                              Texp_ident "pstr_desc/1910"
                        ]
                      expression (src/ppx.ml[305,10581+4]..src/ppx.ml[305,10581+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[311,10701+0]..src/ppx.ml[313,10782+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[311,10701+4]..src/ppx.ml[311,10701+13])
          Tpat_var "printone2/1911"
        expression (src/ppx.ml[311,10701+14]..src/ppx.ml[313,10782+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[311,10701+14]..src/ppx.ml[311,10701+15])
                Tpat_var "x/1912"
              expression (src/ppx.ml[312,10725+2]..src/ppx.ml[313,10782+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[311,10701+17]..src/ppx.ml[311,10701+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[312,10725+2]..src/ppx.ml[312,10725+55])
                  Texp_apply
                  expression (src/ppx.ml[312,10725+3]..src/ppx.ml[312,10725+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[312,10725+17]..src/ppx.ml[312,10725+54])
                        Texp_apply
                        expression (src/ppx.ml[312,10725+18]..src/ppx.ml[312,10725+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[312,10725+33]..src/ppx.ml[312,10725+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[312,10725+34]..src/ppx.ml[312,10725+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[312,10725+35]..src/ppx.ml[312,10725+49]),None)
                                expression (src/ppx.ml[312,10725+51]..src/ppx.ml[312,10725+52])
                                  Texp_ident "x/1912"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[313,10782+2]..src/ppx.ml[313,10782+12])
                  Texp_apply
                  expression (src/ppx.ml[313,10782+2]..src/ppx.ml[313,10782+10])
                    Texp_ident "printone/1908"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[313,10782+11]..src/ppx.ml[313,10782+12])
                        Texp_ident "x/1912"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[315,10798+0]..src/ppx.ml[317,10829+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[315,10798+4]..src/ppx.ml[315,10798+9])
          Tpat_var "proc1/1913"
        expression (src/ppx.ml[315,10798+10]..src/ppx.ml[317,10829+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[315,10798+10]..src/ppx.ml[315,10798+11])
                Tpat_var "x/1915"
              expression (src/ppx.ml[316,10814+2]..src/ppx.ml[317,10829+3])
                Texp_sequence
                expression (src/ppx.ml[316,10814+2]..src/ppx.ml[316,10814+13])
                  Texp_apply
                  expression (src/ppx.ml[316,10814+2]..src/ppx.ml[316,10814+11])
                    Texp_ident "printone2/1911"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[316,10814+12]..src/ppx.ml[316,10814+13])
                        Texp_ident "x/1915"
                  ]
                expression (src/ppx.ml[317,10829+2]..src/ppx.ml[317,10829+3])
                  Texp_ident "x/1915"
          ]
    ]
  structure_item (src/ppx.ml[319,10834+0]..src/ppx.ml[322,10983+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[319,10834+4]..src/ppx.ml[319,10834+9])
          Tpat_var "debug/1916"
        expression (src/ppx.ml[319,10834+10]..src/ppx.ml[322,10983+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[319,10834+10]..src/ppx.ml[319,10834+14])
                Tpat_var "proc/1918"
              expression (src/ppx.ml[319,10834+15]..src/ppx.ml[322,10983+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[319,10834+15]..src/ppx.ml[319,10834+18])
                      Tpat_var "lst/1919"
                    expression (src/ppx.ml[320,10862+2]..src/ppx.ml[322,10983+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[319,10834+21]..src/ppx.ml[319,10834+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[320,10862+6]..src/ppx.ml[320,10862+12])
                            Tpat_var "result/1920"
                          expression (src/ppx.ml[320,10862+15]..src/ppx.ml[320,10862+32])
                            Texp_apply
                            expression (src/ppx.ml[320,10862+15]..src/ppx.ml[320,10862+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[320,10862+24]..src/ppx.ml[320,10862+28])
                                  Texp_ident "proc/1918"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[320,10862+29]..src/ppx.ml[320,10862+32])
                                  Texp_ident "lst/1919"
                            ]
                      ]
                      expression (src/ppx.ml[321,10898+2]..src/ppx.ml[322,10983+4])
                        Texp_sequence
                        expression (src/ppx.ml[321,10898+2]..src/ppx.ml[321,10898+83])
                          Texp_apply
                          expression (src/ppx.ml[321,10898+2]..src/ppx.ml[321,10898+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[321,10898+12]..src/ppx.ml[321,10898+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[321,10898+17]..src/ppx.ml[321,10898+18])
                                      Tpat_var "i/1984"
                                    expression (src/ppx.ml[321,10898+22]..src/ppx.ml[321,10898+75])
                                      Texp_apply
                                      expression (src/ppx.ml[321,10898+22]..src/ppx.ml[321,10898+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[321,10898+36]..src/ppx.ml[321,10898+75])
                                            Texp_apply
                                            expression (src/ppx.ml[321,10898+37]..src/ppx.ml[321,10898+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[321,10898+52]..src/ppx.ml[321,10898+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[321,10898+53]..src/ppx.ml[321,10898+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[321,10898+54]..src/ppx.ml[321,10898+69]),None)
                                                    expression (src/ppx.ml[321,10898+72]..src/ppx.ml[321,10898+73])
                                                      Texp_ident "i/1984"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[321,10898+77]..src/ppx.ml[321,10898+83])
                                Texp_ident "result/1920"
                          ]
                        expression (src/ppx.ml[322,10983+2]..src/ppx.ml[322,10983+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[324,11005+0]..src/ppx.ml[327,11129+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[324,11005+4]..src/ppx.ml[324,11005+13])
          Tpat_var "transform/1985"
        expression (src/ppx.ml[324,11005+14]..src/ppx.ml[327,11129+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[324,11005+14]..src/ppx.ml[324,11005+15])
                Tpat_var "x/1987"
              expression (src/ppx.ml[325,11060+2]..src/ppx.ml[327,11129+3])
                Texp_sequence
                expression (src/ppx.ml[325,11060+2]..src/ppx.ml[325,11060+48])
                  Texp_apply
                  expression (src/ppx.ml[325,11060+3]..src/ppx.ml[325,11060+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[325,11060+17]..src/ppx.ml[325,11060+47])
                        Texp_apply
                        expression (src/ppx.ml[325,11060+18]..src/ppx.ml[325,11060+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[325,11060+33]..src/ppx.ml[325,11060+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[325,11060+34]..src/ppx.ml[325,11060+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[325,11060+35]..src/ppx.ml[325,11060+42]),None)
                                expression (src/ppx.ml[325,11060+44]..src/ppx.ml[325,11060+45])
                                  Texp_ident "x/1987"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[326,11110+2]..src/ppx.ml[327,11129+3])
                  Texp_sequence
                  expression (src/ppx.ml[326,11110+2]..src/ppx.ml[326,11110+17])
                    Texp_apply
                    expression (src/ppx.ml[326,11110+3]..src/ppx.ml[326,11110+8])
                      Texp_ident "debug/1916"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[326,11110+9]..src/ppx.ml[326,11110+14])
                          Texp_ident "proc1/1913"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[326,11110+15]..src/ppx.ml[326,11110+16])
                          Texp_ident "x/1987"
                    ]
                  expression (src/ppx.ml[327,11129+2]..src/ppx.ml[327,11129+3])
                    Texp_ident "x/1987"
          ]
    ]
  structure_item (src/ppx.ml[329,11136+1]..src/ppx.ml[329,11136+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[329,11136+5]..src/ppx.ml[329,11136+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[329,11136+10]..src/ppx.ml[329,11136+69])
          Texp_apply
          expression (src/ppx.ml[329,11136+10]..src/ppx.ml[329,11136+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[329,11136+47]..src/ppx.ml[329,11136+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[329,11136+47]..src/ppx.ml[329,11136+56])
                    Texp_ident "transform/1985"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[329,11136+57]..src/ppx.ml[329,11136+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[329,11136+58]..src/ppx.ml[329,11136+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.142>;
 "foo"[value] -> <Ppx.134>;
 "print_constructor_arguments"[value] -> <Ppx.81>;
 "print_type_decl"[value] -> <Ppx.99>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.113>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.135>;
 "printone2"[value] -> <Ppx.138>;
 "proc1"[value] -> <Ppx.140>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.40>;
 "process_core_type_desc"[value] -> <Ppx.38>;
 "process_core_type_list"[value] -> <Ppx.41>;
 "process_id"[value] -> <Ppx.34>;
 "process_id2"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.95>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.85>;
 "process_record_kind"[value] -> <Ppx.37>;
 "process_record_kind_list"[value] -> <Ppx.39>;
 "process_type_decl_list"[value] -> <Ppx.109>;
 "transform"[value] -> <Ppx.147>;
 }

(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let
               (*match*/4664 =a (field 1 x/1047)
                pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_loc_stack/1289 =a (field 2 x/1286)
                pexp_loc/1288 =a (field 1 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_id2/1437
           (function x/1438
             (funct-body Ppx.process_id2 src/ppx.ml(69)<ghost>:1898-2138
               (before Ppx.process_id2 src/ppx.ml(70):1916-2138
                 (switch* x/1438
                  case tag 0:
                   (let (string/1665 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(71):1950-1956
                       string/1665))
                  case tag 1:
                   (let
                     (string/1667 =a (field 1 x/1438)
                      longident/1666 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(73):1993-2031
                       (after Ppx.process_id2 src/ppx.ml(73):1993-2031
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(73):1993-2016
                             (apply process_id2/1437 longident/1666))
                           (after Ppx.process_id2 src/ppx.ml(73):2019-2031
                             (apply (field 27 (global Stdlib!)) "."
                               string/1667))))))
                  case tag 2:
                   (let
                     (longident2/1669 =a (field 1 x/1438)
                      longident/1668 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(75):2073-2138
                       (after Ppx.process_id2 src/ppx.ml(75):2073-2138
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(75):2073-2096
                             (apply process_id2/1437 longident/1668))
                           (after Ppx.process_id2 src/ppx.ml(75):2100-2138
                             (apply (field 27 (global Stdlib!)) "."
                               (after Ppx.process_id2 src/ppx.ml(76):2113-2138
                                 (apply process_id2/1437 longident2/1669)))))))))))))
        (let
          (process_id/1670 =
             (function x/1672
               (funct-body Ppx.process_id src/ppx.ml(78)<ghost>:2154-2220
                 (before Ppx.process_id src/ppx.ml(79):2176-2220
                   (let
                     (*match*/4665 =a (field 1 x/1672)
                      txt/1743 =a (field 0 x/1672))
                     (before Ppx.process_id src/ppx.ml(80):2203-2220
                       (after Ppx.process_id src/ppx.ml(80):2203-2220
                         (apply process_id2/1437 txt/1743))))))))
          (letrec
            (process_record_kind/1744
               (function x/1749 : int
                 (funct-body Ppx.process_record_kind src/ppx.ml(85)<ghost>:2352-2856
                   (before Ppx.process_record_kind src/ppx.ml(86):2360-2856
                     (let
                       (pld_attributes/1754 =a (field 4 x/1749)
                        pld_loc/1753 =a (field 3 x/1749)
                        pld_type/1752 =a (field 2 x/1749)
                        pld_mutable/1751 =a (field 1 x/1749)
                        pld_name/1750 =a (field 0 x/1749))
                       (before Ppx.process_record_kind src/ppx.ml(94):2566-2856
                         (after Ppx.process_record_kind src/ppx.ml(94):2566-2856
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.process_record_kind src/ppx.ml(94):2581-2855
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 (*,*,*,int,*,*)
                                   "DEBUG:precord_kind:" pld_name/1750
                                   "mutable" pld_mutable/1751 "type"
                                   pld_type/1752))))))))))
              process_core_type_desc/1745
                (function x/1755 : int
                  (funct-body Ppx.process_core_type_desc src/ppx.ml(101)<ghost>:2884-4665
                    (before Ppx.process_core_type_desc src/ppx.ml(102):2890-4665
                      (switch* x/1755
                       case int 0:
                        (before Ppx.process_core_type_desc src/ppx.ml(121):3385-3437
                          (after Ppx.process_core_type_desc src/ppx.ml(121):3385-3437
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(121):3400-3436
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_any:")))))
                       case tag 0:
                        (let (name/1759 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(122):3458-3518
                            (after Ppx.process_core_type_desc src/ppx.ml(122):3458-3518
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(122):3473-3517
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_var:" name/1759)))))))
                       case tag 1:
                        (let
                          (core_type2/1762 =a (field 2 x/1755)
                           core_type/1761 =a (field 1 x/1755)
                           arg_label/1760 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(124):3578-3635
                            (after Ppx.process_core_type_desc src/ppx.ml(124):3578-3635
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(124):3593-3634
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow10:"))))))
                       case tag 2:
                        (let (a/1758 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(118):3293-3348
                            (after Ppx.process_core_type_desc src/ppx.ml(118):3293-3348
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(118):3308-3347
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_tuple:"))))))
                       case tag 3:
                        (let
                          (b/1757 =a (field 1 x/1755)
                           a/1756 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(105):2978-3239
                            (let
                              (myid/1776 =
                                 (after Ppx.process_core_type_desc src/ppx.ml(105):2989-3003
                                   (apply process_id/1670 a/1756)))
                              (before Ppx.process_core_type_desc src/ppx.ml(106):3011-3239
                                (seq
                                  (after Ppx.process_core_type_desc src/ppx.ml(106):3011-3037
                                    (apply process_core_type_list/1748
                                      b/1757))
                                  (before Ppx.process_core_type_desc src/ppx.ml(108):3044-3239
                                    (seq
                                      (after Ppx.process_core_type_desc src/ppx.ml(108):3044-3086
                                        (apply
                                          (field 1 (global Stdlib__Printf!))
                                          [0:
                                           [11:
                                            "DEBUG:Ptyp_constr1:" [2: 0 0]]
                                           "DEBUG:Ptyp_constr1:%s"]
                                          myid/1776))
                                      (before Ppx.process_core_type_desc src/ppx.ml(111):3131-3239
                                        (after Ppx.process_core_type_desc src/ppx.ml(111):3131-3239
                                          (apply (field 45 (global Stdlib!))
                                            (after Ppx.process_core_type_desc src/ppx.ml(111):3146-3238
                                              (apply
                                                (field 65
                                                  (global Batteries!))
                                                (makeblock 0
                                                  "DEBUG:Ptyp_constr:" "id"
                                                  a/1756 myid/1776 "types"
                                                  b/1757)))))))))))))
                       case tag 4:
                        (let
                          (b/1764 =a (field 1 x/1755)
                           a/1763 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(128):3710-3766
                            (after Ppx.process_core_type_desc src/ppx.ml(128):3710-3766
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(128):3725-3765
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow8:"))))))
                       case tag 5:
                        (let
                          (b/1766 =a (field 1 x/1755)
                           a/1765 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(131):3841-3897
                            (after Ppx.process_core_type_desc src/ppx.ml(131):3841-3897
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(131):3856-3896
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow7:"))))))
                       case tag 6:
                        (let
                          (b/1768 =a (field 1 x/1755)
                           a/1767 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(134):3963-4019
                            (after Ppx.process_core_type_desc src/ppx.ml(134):3963-4019
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(134):3978-4018
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow6:"))))))
                       case tag 7:
                        (let
                          (c/1771 =a (field 2 x/1755)
                           b/1770 =a (field 1 x/1755)
                           a/1769 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(137):4114-4170
                            (after Ppx.process_core_type_desc src/ppx.ml(137):4114-4170
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(137):4129-4169
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow5:"))))))
                       case tag 8:
                        (let
                          (b/1773 =a (field 1 x/1755)
                           a/1772 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(140):4239-4295
                            (after Ppx.process_core_type_desc src/ppx.ml(140):4239-4295
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(140):4254-4294
                                  (apply (field 65 (global Batteries!))
                                    "DEBUG:Ptyp_arrow4:"))))))
                       case tag 9:
                        (let (a/1774 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(143):4348-4406
                            (after Ppx.process_core_type_desc src/ppx.ml(143):4348-4406
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(143):4363-4405
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1774)))))))
                       case tag 10:
                        (let (a/1775 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(147):4604-4665
                            (after Ppx.process_core_type_desc src/ppx.ml(147):4604-4665
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(147):4619-4664
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_extension:"
                                      a/1775)))))))))))
              process_record_kind_list/1746
                (function x/1839 : int
                  (funct-body Ppx.process_record_kind_list src/ppx.ml(149)<ghost>:4696-4813
                    (before Ppx.process_record_kind_list src/ppx.ml(150):4704-4813
                      (if x/1839
                        (let
                          (t/1841 =a (field 1 x/1839)
                           h/1840 =a (field 0 x/1839))
                          (before Ppx.process_record_kind_list src/ppx.ml(153):4748-4813
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(153):4748-4771
                                (apply process_record_kind/1744 h/1840))
                              (before Ppx.process_record_kind_list src/ppx.ml(154):4777-4813
                                (seq
                                  (after Ppx.process_record_kind_list src/ppx.ml(154):4777-4805
                                    (apply process_record_kind_list/1746
                                      t/1841))
                                  (before Ppx.process_record_kind_list src/ppx.ml(155):4811-4813
                                    0))))))
                        (before Ppx.process_record_kind_list src/ppx.ml(151):4727-4729
                          0)))))
              process_core_type/1747
                (function x/1842 : int
                  (funct-body Ppx.process_core_type src/ppx.ml(157)<ghost>:4835-5165
                    (before Ppx.process_core_type src/ppx.ml(158):4843-5165
                      (let
                        (ptyp_attributes/1846 =a (field 3 x/1842)
                         ptyp_loc_stack/1845 =a (field 2 x/1842)
                         ptyp_loc/1844 =a (field 1 x/1842)
                         ptyp_desc/1843 =a (field 0 x/1842))
                        (before Ppx.process_core_type src/ppx.ml(165):5030-5165
                          (seq
                            (after Ppx.process_core_type src/ppx.ml(165):5030-5064
                              (apply process_core_type_desc/1745
                                ptyp_desc/1843))
                            (before Ppx.process_core_type src/ppx.ml(167):5089-5165
                              (after Ppx.process_core_type src/ppx.ml(167):5089-5165
                                (apply (field 45 (global Stdlib!))
                                  (after Ppx.process_core_type src/ppx.ml(167):5104-5164
                                    (apply (field 65 (global Batteries!))
                                      (makeblock 0
                                        "DEBUG:core_type.ptyp_desc:"
                                        ptyp_desc/1843))))))))))))
              process_core_type_list/1748
                (function x/1847 : int
                  (funct-body Ppx.process_core_type_list src/ppx.ml(168)<ghost>:5192-5311
                    (before Ppx.process_core_type_list src/ppx.ml(169):5215-5311
                      (if x/1847
                        (let
                          (t/1849 =a (field 1 x/1847)
                           h/1848 =a (field 0 x/1847))
                          (before Ppx.process_core_type_list src/ppx.ml(172):5259-5311
                            (seq
                              (after Ppx.process_core_type_list src/ppx.ml(172):5259-5280
                                (apply process_core_type/1747 h/1848))
                              (before Ppx.process_core_type_list src/ppx.ml(173):5286-5311
                                (after Ppx.process_core_type_list src/ppx.ml(173):5286-5311
                                  (apply process_core_type_list/1748 t/1849))))))
                        (before Ppx.process_core_type_list src/ppx.ml(170):5238-5240
                          0))))))
            (let
              (print_constructor_arguments/1850 =
                 (function x/1852 : int
                   (funct-body Ppx.print_constructor_arguments src/ppx.ml(180)<ghost>:5357-5590
                     (before Ppx.print_constructor_arguments src/ppx.ml(181):5365-5590
                       (switch* x/1852
                        case tag 0:
                         (let (a/1853 =a (field 0 x/1852))
                           (before Ppx.print_constructor_arguments src/ppx.ml(183):5403-5495
                             (seq
                               (after Ppx.print_constructor_arguments src/ppx.ml(183):5403-5429
                                 (apply process_core_type_list/1748 a/1853))
                               (before Ppx.print_constructor_arguments src/ppx.ml(184):5435-5495
                                 (after Ppx.print_constructor_arguments src/ppx.ml(184):5435-5495
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_constructor_arguments src/ppx.ml(184):5450-5494
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Pcstr_tuple:"
                                           a/1853)))))))))
                        case tag 1:
                         (let (a/1854 =a (field 0 x/1852))
                           (before Ppx.print_constructor_arguments src/ppx.ml(187):5529-5590
                             (after Ppx.print_constructor_arguments src/ppx.ml(187):5529-5590
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(187):5544-5589
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_record:"
                                       a/1854))))))))))))
              (letrec
                (process_pype_variant_constructor_declaration_list/1855
                   (function x/1856 : int
                     (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(189)<ghost>:5649-6576
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5657-6576
                         (if x/1856
                           (let
                             (t/1858 =a (field 1 x/1856)
                              h/1857 =a (field 0 x/1856))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(194):5766-6576
                               (let
                                 (pcd_attributes/1864 =a (field 5 h/1857)
                                  pcd_loc/1863 =a (field 4 h/1857)
                                  pcd_res/1862 =a (field 3 h/1857)
                                  pcd_args/1861 =a (field 2 h/1857)
                                  pcd_vars/1860 =a (field 1 h/1857)
                                  pcd_name/1859 =a (field 0 h/1857))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6105-6576
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6105-6142
                                       (apply
                                         print_constructor_arguments/1850
                                         pcd_args/1861))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6150-6576
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6150-6505
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6165-6504
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "constructor_declaration:"
                                                   pcd_name/1859 "vars"
                                                   pcd_vars/1860 "args"
                                                   pcd_args/1861 "res"
                                                   pcd_res/1862 "loc"
                                                   pcd_loc/1863 "attrs"
                                                   pcd_attributes/1864)))))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6513-6576
                                           (seq
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6513-6566
                                               (apply
                                                 process_pype_variant_constructor_declaration_list/1855
                                                 t/1858))
                                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(221):6574-6576
                                               0))))))))))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5680-5682
                             0))))))
                (let
                  (process_kind/1865 =
                     (function x/1867 : int
                       (funct-body Ppx.process_kind src/ppx.ml(223)<ghost>:6596-7054
                         (before Ppx.process_kind src/ppx.ml(224):6604-7054
                           (switch* x/1867
                            case int 0:
                             (before Ppx.process_kind src/ppx.ml(226):6662-6720
                               (after Ppx.process_kind src/ppx.ml(226):6662-6720
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(226):6677-6719
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case int 1:
                             (before Ppx.process_kind src/ppx.ml(234):6996-7054
                               (after Ppx.process_kind src/ppx.ml(234):6996-7054
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(234):7011-7053
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case tag 0:
                             (let (a/1868 =a (field 0 x/1867))
                               (before Ppx.process_kind src/ppx.ml(228):6748-6868
                                 (seq
                                   (after Ppx.process_kind src/ppx.ml(228):6748-6801
                                     (apply
                                       process_pype_variant_constructor_declaration_list/1855
                                       a/1868))
                                   (before Ppx.process_kind src/ppx.ml(229):6807-6868
                                     (after Ppx.process_kind src/ppx.ml(229):6807-6868
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_kind src/ppx.ml(229):6822-6867
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Ptype_variant:" a/1868)))))))))
                            case tag 1:
                             (let (a/1869 =a (field 0 x/1867))
                               (before Ppx.process_kind src/ppx.ml(233):6949-6976
                                 (after Ppx.process_kind src/ppx.ml(233):6949-6976
                                   (apply process_record_kind_list/1746
                                     a/1869))))))))
                   print_type_decl/1870 =
                     (function x/1872 : int
                       (funct-body Ppx.print_type_decl src/ppx.ml(236)<ghost>:7075-8100
                         (before Ppx.print_type_decl src/ppx.ml(237):7083-8100
                           (let
                             (ptype_loc/1880 =a (field 7 x/1872)
                              ptype_attributes/1879 =a (field 6 x/1872)
                              ptype_manifest/1878 =a (field 5 x/1872)
                              ptype_private/1877 =a (field 4 x/1872)
                              ptype_kind/1876 =a (field 3 x/1872)
                              ptype_cstrs/1875 =a (field 2 x/1872)
                              ptype_params/1874 =a (field 1 x/1872)
                              ptype_name/1873 =a (field 0 x/1872))
                             (before Ppx.print_type_decl src/ppx.ml(248):7490-8100
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(248):7490-7555
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(248):7505-7554
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:type_decl:"
                                           ptype_name/1873)))))
                                 (before Ppx.print_type_decl src/ppx.ml(249):7561-8100
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(249):7561-7629
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(249):7576-7628
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:parameters:"
                                               ptype_params/1874)))))
                                     (before Ppx.print_type_decl src/ppx.ml(250):7635-8100
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(250):7635-7697
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(250):7650-7696
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:cstrs:"
                                                   ptype_cstrs/1875)))))
                                         (before Ppx.print_type_decl src/ppx.ml(251):7703-8100
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(251):7703-7762
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.print_type_decl src/ppx.ml(251):7718-7761
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:kind:"
                                                       ptype_kind/1876)))))
                                             (before Ppx.print_type_decl src/ppx.ml(252):7768-8100
                                               (seq
                                                 (after Ppx.print_type_decl src/ppx.ml(252):7768-7793
                                                   (apply process_kind/1865
                                                     ptype_kind/1876))
                                                 (before Ppx.print_type_decl src/ppx.ml(253):7799-8100
                                                   (after Ppx.print_type_decl src/ppx.ml(253):7799-8100
                                                     (apply
                                                       (field 45
                                                         (global Stdlib!))
                                                       (after Ppx.print_type_decl src/ppx.ml(253):7814-8099
                                                         (apply
                                                           (field 65
                                                             (global Batteries!))
                                                           (makeblock 0 (*,int,*,*,*,*,*,*)
                                                             "DEBUG:private:"
                                                             ptype_private/1877
                                                             "DEBUG:manifest"
                                                             ptype_manifest/1878
                                                             "DEBUG:attr"
                                                             ptype_attributes/1879
                                                             "DEBUG:loc"
                                                             ptype_loc/1880)))))))))))))))))))))
                  (letrec
                    (process_type_decl_list/1881
                       (function x/1882 : int
                         (funct-body Ppx.process_type_decl_list src/ppx.ml(259)<ghost>:8136-8247
                           (before Ppx.process_type_decl_list src/ppx.ml(260):8144-8247
                             (if x/1882
                               (let
                                 (t/1884 =a (field 1 x/1882)
                                  h/1883 =a (field 0 x/1882))
                                 (before Ppx.process_type_decl_list src/ppx.ml(263):8188-8247
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(263):8188-8207
                                       (apply print_type_decl/1870 h/1883))
                                     (before Ppx.process_type_decl_list src/ppx.ml(264):8213-8247
                                       (seq
                                         (after Ppx.process_type_decl_list src/ppx.ml(264):8213-8239
                                           (apply process_type_decl_list/1881
                                             t/1884))
                                         (before Ppx.process_type_decl_list src/ppx.ml(265):8245-8247
                                           0))))))
                               (before Ppx.process_type_decl_list src/ppx.ml(261):8167-8169
                                 0))))))
                    (let
                      (printdesc/1885 =
                         (function x/1887 : int
                           (funct-body Ppx.printdesc src/ppx.ml(267)<ghost>:8266-10345
                             (before Ppx.printdesc src/ppx.ml(268):8301-10345
                               (seq
                                 (after Ppx.printdesc src/ppx.ml(268):8301-8367
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printdesc src/ppx.ml(268):8316-8366
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0
                                           "DEBUG:structure_item_desc:"
                                           x/1887)))))
                                 (before Ppx.printdesc src/ppx.ml(269):8371-10345
                                   (switch* x/1887
                                    case tag 0:
                                     (let
                                       (attributes/1889 =a (field 1 x/1887)
                                        expression/1888 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(270):8425-8501
                                         (after Ppx.printdesc src/ppx.ml(270):8425-8501
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(270):8440-8500
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_eval:"
                                                   expression/1888
                                                   attributes/1889)))))))
                                    case tag 1:
                                     (let
                                       (value_binding_list/1891 =a
                                          (field 1 x/1887)
                                        rec_flag/1890 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(272):8570-8704
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(272):8570-8654
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(272):8585-8653
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_value:"
                                                     rec_flag/1890
                                                     value_binding_list/1891)))))
                                           (before Ppx.printdesc src/ppx.ml(273):8660-8704
                                             (after Ppx.printdesc src/ppx.ml(273):8660-8704
                                               (apply
                                                 print_value_binding_list/1298
                                                 value_binding_list/1891))))))
                                    case tag 2:
                                     (let
                                       (value_description/1892 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(274):8744-8821
                                         (after Ppx.printdesc src/ppx.ml(274):8744-8821
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(274):8759-8820
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_primitive:"
                                                   value_description/1892)))))))
                                    case tag 3:
                                     (let
                                       (type_declaration_list/1894 =a
                                          (field 1 x/1887)
                                        rec_flag/1893 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(278):8906-9043
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(278):8906-8951
                                             (apply
                                               process_type_decl_list/1881
                                               type_declaration_list/1894))
                                           (before Ppx.printdesc src/ppx.ml(279):8957-9043
                                             (after Ppx.printdesc src/ppx.ml(279):8957-9043
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.printdesc src/ppx.ml(279):8972-9042
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0 (*,int,*)
                                                       "DEBUG:Pstr_type:"
                                                       rec_flag/1893
                                                       type_declaration_list/1894)))))))))
                                    case tag 4:
                                     (let
                                       (type_extension/1895 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(282):9080-9151
                                         (after Ppx.printdesc src/ppx.ml(282):9080-9151
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(282):9095-9150
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_typext:"
                                                   type_extension/1895)))))))
                                    case tag 5:
                                     (let
                                       (extension_constructor/1896 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(283):9195-9276
                                         (after Ppx.printdesc src/ppx.ml(283):9195-9276
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(283):9210-9275
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_exception:"
                                                   extension_constructor/1896)))))))
                                    case tag 6:
                                     (let
                                       (module_binding/1897 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(284):9311-9381
                                         (after Ppx.printdesc src/ppx.ml(284):9311-9381
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(284):9326-9380
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_module:"
                                                   module_binding/1897)))))))
                                    case tag 7:
                                     (let
                                       (module_binding_list/1898 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(285):9424-9503
                                         (after Ppx.printdesc src/ppx.ml(285):9424-9503
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(285):9439-9502
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_recmodule:"
                                                   module_binding_list/1898)))))))
                                    case tag 8:
                                     (let
                                       (module_type_declaration/1899 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(286):9547-9628
                                         (after Ppx.printdesc src/ppx.ml(286):9547-9628
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(286):9562-9627
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_modtype:"
                                                   module_type_declaration/1899)))))))
                                    case tag 9:
                                     (let
                                       (open_description/1900 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(288):9679-9749
                                         (after Ppx.printdesc src/ppx.ml(288):9679-9749
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(288):9694-9748
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_open"
                                                   open_description/1900)))))))
                                    case tag 10:
                                     (let
                                       (class_declarations/1901 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(289):9789-9863
                                         (after Ppx.printdesc src/ppx.ml(289):9789-9863
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(289):9804-9862
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class:"
                                                   class_declarations/1901)))))))
                                    case tag 11:
                                     (let
                                       (class_type_declarations/1902 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(290):9912-9996
                                         (after Ppx.printdesc src/ppx.ml(290):9912-9996
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(290):9927-9995
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class_type:"
                                                   class_type_declarations/1902)))))))
                                    case tag 12:
                                     (let
                                       (include_declaration/1903 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(291):10038-10114
                                         (after Ppx.printdesc src/ppx.ml(291):10038-10114
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(291):10053-10113
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_include:"
                                                   include_declaration/1903)))))))
                                    case tag 13:
                                     (let
                                       (attribute/1904 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(292):10147-10216
                                         (after Ppx.printdesc src/ppx.ml(292):10147-10216
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(292):10162-10215
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_attribute:"
                                                   attribute/1904)))))))
                                    case tag 14:
                                     (let
                                       (attributes/1906 =a (field 1 x/1887)
                                        extension/1905 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(293):10263-10345
                                         (after Ppx.printdesc src/ppx.ml(293):10263-10345
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(293):10278-10344
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_extension:"
                                                   extension/1905
                                                   attributes/1906)))))))))))))
                       foo/1907 =[int] 1
                       printone/1908 =
                         (function x/1909 : int
                           (funct-body Ppx.printone src/ppx.ml(297)<ghost>:10375-10587
                             (before Ppx.printone src/ppx.ml(298):10407-10587
                               (let
                                 (*match*/4666 =a (field 1 x/1909)
                                  pstr_desc/1910 =a (field 0 x/1909))
                                 (before Ppx.printone src/ppx.ml(304):10558-10587
                                   (seq
                                     (after Ppx.printone src/ppx.ml(304):10558-10579
                                       (apply printdesc/1885 pstr_desc/1910))
                                     (before Ppx.printone src/ppx.ml(305):10585-10587
                                       0)))))))
                       printone2/1911 =
                         (function x/1912 : int
                           (funct-body Ppx.printone2 src/ppx.ml(311)<ghost>:10715-10794
                             (before Ppx.printone2 src/ppx.ml(312):10727-10794
                               (seq
                                 (after Ppx.printone2 src/ppx.ml(312):10727-10780
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printone2 src/ppx.ml(312):10742-10779
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:SECOND::"
                                           x/1912)))))
                                 (before Ppx.printone2 src/ppx.ml(313):10784-10794
                                   (after Ppx.printone2 src/ppx.ml(313):10784-10794
                                     (apply printone/1908 x/1912)))))))
                       proc1/1913 =
                         (function x/1915
                           (funct-body Ppx.proc1 src/ppx.ml(315)<ghost>:10808-10832
                             (before Ppx.proc1 src/ppx.ml(316):10816-10832
                               (seq
                                 (after Ppx.proc1 src/ppx.ml(316):10816-10827
                                   (apply printone2/1911 x/1915))
                                 (before Ppx.proc1 src/ppx.ml(317):10831-10832
                                   x/1915)))))
                       debug/1916 =
                         (function proc/1918 lst/1919 : int
                           (funct-body Ppx.debug src/ppx.ml(319)<ghost>:10844-10987
                             (before Ppx.debug src/ppx.ml(320):10864-10987
                               (let
                                 (result/1920 =
                                    (after Ppx.debug src/ppx.ml(320):10877-10894
                                      (apply
                                        (field 18 (global Stdlib__List!))
                                        proc/1918 lst/1919)))
                                 (before Ppx.debug src/ppx.ml(321):10900-10987
                                   (seq
                                     (after Ppx.debug src/ppx.ml(321):10900-10981
                                       (apply
                                         (field 16 (global Stdlib__List!))
                                         (function i/1984 : int
                                           (funct-body Ppx.debug.(fun) src/ppx.ml(321):10910-10974
                                             (before Ppx.debug.(fun) src/ppx.ml(321):10920-10973
                                               (after Ppx.debug.(fun) src/ppx.ml(321):10920-10973
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.debug.(fun) src/ppx.ml(321):10934-10973
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0
                                                         "DEBUG:TOPLEVEL:"
                                                         i/1984))))))))
                                         result/1920))
                                     (before Ppx.debug src/ppx.ml(322):10985-10987
                                       0)))))))
                       transform/1985 =
                         (function x/1987
                           (funct-body Ppx.transform src/ppx.ml(324)<ghost>:11019-11132
                             (before Ppx.transform src/ppx.ml(325):11062-11132
                               (seq
                                 (after Ppx.transform src/ppx.ml(325):11062-11108
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.transform src/ppx.ml(325):11077-11107
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG3:" x/1987)))))
                                 (before Ppx.transform src/ppx.ml(326):11112-11132
                                   (seq
                                     (after Ppx.transform src/ppx.ml(326):11112-11127
                                       (apply debug/1916 proc1/1913 x/1987))
                                     (before Ppx.transform src/ppx.ml(327):11131-11132
                                       x/1987)))))))
                       *match*/4668 =
                         (after Ppx src/ppx.ml(329):11146-11205
                           (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                             (makeblock 0 transform/1985) 0 0 0 0 0 0 0
                             "simple-ppx")))
                      (pseudo <unknown location>
                        (makeblock 0 proc2/1279 printdesc2/1282
                          print_value_binding_expr/1284
                          print_value_binding_list2/1291
                          print_value_binding_list/1298 process_id2/1437
                          process_id/1670 process_record_kind/1744
                          process_core_type_desc/1745
                          process_record_kind_list/1746
                          process_core_type/1747 process_core_type_list/1748
                          print_constructor_arguments/1850
                          process_pype_variant_constructor_declaration_list/1855
                          process_kind/1865 print_type_decl/1870
                          process_type_decl_list/1881 printdesc/1885 foo/1907
                          printone/1908 printone2/1911 proc1/1913 debug/1916
                          transform/1985)))))))))))))
(setglobal Ppx!
  (let
    (printdesc2/701 =
       (function x/703 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(6)<ghost>:132-221
           (before Ppx.printdesc2 src/ppx.ml(7):167-221
             (seq
               (after Ppx.printdesc2 src/ppx.ml(7):167-215
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printdesc2 src/ppx.ml(7):182-214
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG21:" x/703)))))
               (before Ppx.printdesc2 src/ppx.ml(8):219-221 0)))))
     printone/1045 =
       (function x/1047 : int
         (funct-body Ppx.printone src/ppx.ml(10)<ghost>:236-372
           (before Ppx.printone src/ppx.ml(11):268-372
             (let (pstr_desc/1275 =a (field 0 x/1047))
               (before Ppx.printone src/ppx.ml(16):342-372
                 (seq
                   (after Ppx.printone src/ppx.ml(16):342-364
                     (apply printdesc2/701 pstr_desc/1275))
                   (before Ppx.printone src/ppx.ml(17):370-372 0)))))))
     printone2/1276 =
       (function x/1278 : int
         (funct-body Ppx.printone2 src/ppx.ml(20)<ghost>:395-467
           (before Ppx.printone2 src/ppx.ml(21):407-467
             (seq
               (after Ppx.printone2 src/ppx.ml(21):407-453
                 (apply (field 45 (global Stdlib!))
                   (after Ppx.printone2 src/ppx.ml(21):422-452
                     (apply (field 65 (global Batteries!))
                       (makeblock 0 "DEBUG1:" x/1278)))))
               (before Ppx.printone2 src/ppx.ml(22):457-467
                 (after Ppx.printone2 src/ppx.ml(22):457-467
                   (apply printone/1045 x/1278)))))))
     proc2/1279 =
       (function x/1281 : int
         (funct-body Ppx.proc2 src/ppx.ml(24)<ghost>:479-510
           (before Ppx.proc2 src/ppx.ml(25):493-510
             (seq
               (after Ppx.proc2 src/ppx.ml(25):493-504
                 (apply printone2/1276 x/1281))
               (before Ppx.proc2 src/ppx.ml(26):508-510 0)))))
     printdesc2/1282 =
       (function x/1283 : int
         (funct-body Ppx.printdesc2 src/ppx.ml(28)<ghost>:526-609
           (before Ppx.printdesc2 src/ppx.ml(29):561-609
             (after Ppx.printdesc2 src/ppx.ml(29):561-609
               (apply (field 45 (global Stdlib!))
                 (after Ppx.printdesc2 src/ppx.ml(29):576-608
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG33:" x/1283))))))))
     print_value_binding_expr/1284 =
       (function x/1286 : int
         (funct-body Ppx.print_value_binding_expr src/ppx.ml(35)<ghost>:728-1109
           (before Ppx.print_value_binding_expr src/ppx.ml(36):755-1109
             (let
               (pexp_attributes/1290 =a (field 3 x/1286)
                pexp_desc/1287 =a (field 0 x/1286))
               (before Ppx.print_value_binding_expr src/ppx.ml(43):969-1109
                 (seq
                   (after Ppx.print_value_binding_expr src/ppx.ml(43):969-1030
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_expr src/ppx.ml(43):984-1029
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))))
                   (before Ppx.print_value_binding_expr src/ppx.ml(44):1036-1109
                     (seq
                       (after Ppx.print_value_binding_expr src/ppx.ml(44):1036-1103
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_expr src/ppx.ml(44):1051-1102
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG66:desc"
                                 pexp_attributes/1290)))))
                       (before Ppx.print_value_binding_expr src/ppx.ml(45):1107-1109
                         0)))))))))
     print_value_binding_list2/1291 =
       (function x/1293 : int
         (funct-body Ppx.print_value_binding_list2 src/ppx.ml(47)<ghost>:1143-1692
           (before Ppx.print_value_binding_list2 src/ppx.ml(48):1173-1692
             (let
               (pvb_loc/1297 =a (field 3 x/1293)
                pvb_attributes/1296 =a (field 2 x/1293)
                pvb_expr/1295 =a (field 1 x/1293)
                pvb_pat/1294 =a (field 0 x/1293))
               (before Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1692
                 (seq
                   (after Ppx.print_value_binding_list2 src/ppx.ml(55):1338-1409
                     (apply (field 45 (global Stdlib!))
                       (after Ppx.print_value_binding_list2 src/ppx.ml(55):1353-1408
                         (apply (field 65 (global Batteries!))
                           (makeblock 0 "DEBUG:value_binding.pat:"
                             pvb_pat/1294)))))
                   (before Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1692
                     (seq
                       (after Ppx.print_value_binding_list2 src/ppx.ml(56):1415-1488
                         (apply (field 45 (global Stdlib!))
                           (after Ppx.print_value_binding_list2 src/ppx.ml(56):1430-1487
                             (apply (field 65 (global Batteries!))
                               (makeblock 0 "DEBUG:value_binding.expr:"
                                 pvb_expr/1295)))))
                       (before Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1692
                         (seq
                           (after Ppx.print_value_binding_list2 src/ppx.ml(58):1536-1615
                             (apply (field 45 (global Stdlib!))
                               (after Ppx.print_value_binding_list2 src/ppx.ml(58):1551-1614
                                 (apply (field 65 (global Batteries!))
                                   (makeblock 0 "DEBUG:value_binding.atrr:"
                                     pvb_attributes/1296)))))
                           (before Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                             (after Ppx.print_value_binding_list2 src/ppx.ml(59):1621-1692
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_value_binding_list2 src/ppx.ml(59):1636-1691
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:value_binding.loc:"
                                       pvb_loc/1297)))))))))))))))))
    (letrec
      (print_value_binding_list/1298
         (function x/1299 : int
           (funct-body Ppx.print_value_binding_list src/ppx.ml(61)<ghost>:1727-1877
             (before Ppx.print_value_binding_list src/ppx.ml(62):1762-1877
               (if x/1299
                 (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
                   (before Ppx.print_value_binding_list src/ppx.ml(65):1806-1877
                     (seq
                       (after Ppx.print_value_binding_list src/ppx.ml(65):1806-1835
                         (apply print_value_binding_list2/1291 h/1300))
                       (before Ppx.print_value_binding_list src/ppx.ml(66):1841-1877
                         (seq
                           (after Ppx.print_value_binding_list src/ppx.ml(66):1841-1869
                             (apply print_value_binding_list/1298 t/1301))
                           (before Ppx.print_value_binding_list src/ppx.ml(67):1875-1877
                             0))))))
                 (before Ppx.print_value_binding_list src/ppx.ml(63):1785-1787
                   0))))))
      (letrec
        (process_id2/1437
           (function x/1438
             (funct-body Ppx.process_id2 src/ppx.ml(69)<ghost>:1898-2138
               (before Ppx.process_id2 src/ppx.ml(70):1916-2138
                 (switch* x/1438
                  case tag 0:
                   (let (string/1665 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(71):1950-1956
                       string/1665))
                  case tag 1:
                   (let
                     (string/1667 =a (field 1 x/1438)
                      longident/1666 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(73):1993-2031
                       (after Ppx.process_id2 src/ppx.ml(73):1993-2031
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(73):1993-2016
                             (apply process_id2/1437 longident/1666))
                           (after Ppx.process_id2 src/ppx.ml(73):2019-2031
                             (apply (field 27 (global Stdlib!)) "."
                               string/1667))))))
                  case tag 2:
                   (let
                     (longident2/1669 =a (field 1 x/1438)
                      longident/1668 =a (field 0 x/1438))
                     (before Ppx.process_id2 src/ppx.ml(75):2073-2138
                       (after Ppx.process_id2 src/ppx.ml(75):2073-2138
                         (apply (field 27 (global Stdlib!))
                           (after Ppx.process_id2 src/ppx.ml(75):2073-2096
                             (apply process_id2/1437 longident/1668))
                           (after Ppx.process_id2 src/ppx.ml(75):2100-2138
                             (apply (field 27 (global Stdlib!)) "."
                               (after Ppx.process_id2 src/ppx.ml(76):2113-2138
                                 (apply process_id2/1437 longident2/1669)))))))))))))
        (let
          (process_id/1670 =
             (function x/1672
               (funct-body Ppx.process_id src/ppx.ml(78)<ghost>:2154-2220
                 (before Ppx.process_id src/ppx.ml(79):2176-2220
                   (let (txt/1743 =a (field 0 x/1672))
                     (before Ppx.process_id src/ppx.ml(80):2203-2220
                       (after Ppx.process_id src/ppx.ml(80):2203-2220
                         (apply process_id2/1437 txt/1743))))))))
          (letrec
            (process_record_kind/1744
               (function x/1749 : int
                 (funct-body Ppx.process_record_kind src/ppx.ml(85)<ghost>:2352-2856
                   (before Ppx.process_record_kind src/ppx.ml(86):2360-2856
                     (let
                       (pld_type/1752 =a (field 2 x/1749)
                        pld_mutable/1751 =a (field 1 x/1749)
                        pld_name/1750 =a (field 0 x/1749))
                       (before Ppx.process_record_kind src/ppx.ml(94):2566-2856
                         (after Ppx.process_record_kind src/ppx.ml(94):2566-2856
                           (apply (field 45 (global Stdlib!))
                             (after Ppx.process_record_kind src/ppx.ml(94):2581-2855
                               (apply (field 65 (global Batteries!))
                                 (makeblock 0 (*,*,*,int,*,*)
                                   "DEBUG:precord_kind:" pld_name/1750
                                   "mutable" pld_mutable/1751 "type"
                                   pld_type/1752))))))))))
              process_core_type_desc/1745
                (function x/1755 : int
                  (funct-body Ppx.process_core_type_desc src/ppx.ml(101)<ghost>:2884-4665
                    (before Ppx.process_core_type_desc src/ppx.ml(102):2890-4665
                      (switch* x/1755
                       case int 0:
                        (before Ppx.process_core_type_desc src/ppx.ml(121):3385-3437
                          (after Ppx.process_core_type_desc src/ppx.ml(121):3385-3437
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(121):3400-3436
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_any:")))))
                       case tag 0:
                        (let (name/1759 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(122):3458-3518
                            (after Ppx.process_core_type_desc src/ppx.ml(122):3458-3518
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(122):3473-3517
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_var:" name/1759)))))))
                       case tag 1:
                        (before Ppx.process_core_type_desc src/ppx.ml(124):3578-3635
                          (after Ppx.process_core_type_desc src/ppx.ml(124):3578-3635
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(124):3593-3634
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow10:")))))
                       case tag 2:
                        (before Ppx.process_core_type_desc src/ppx.ml(118):3293-3348
                          (after Ppx.process_core_type_desc src/ppx.ml(118):3293-3348
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(118):3308-3347
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_tuple:")))))
                       case tag 3:
                        (let
                          (b/1757 =a (field 1 x/1755)
                           a/1756 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(105):2978-3239
                            (let
                              (myid/1776 =
                                 (after Ppx.process_core_type_desc src/ppx.ml(105):2989-3003
                                   (apply process_id/1670 a/1756)))
                              (before Ppx.process_core_type_desc src/ppx.ml(106):3011-3239
                                (seq
                                  (after Ppx.process_core_type_desc src/ppx.ml(106):3011-3037
                                    (apply process_core_type_list/1748
                                      b/1757))
                                  (before Ppx.process_core_type_desc src/ppx.ml(108):3044-3239
                                    (seq
                                      (after Ppx.process_core_type_desc src/ppx.ml(108):3044-3086
                                        (apply
                                          (field 1 (global Stdlib__Printf!))
                                          [0:
                                           [11:
                                            "DEBUG:Ptyp_constr1:" [2: 0 0]]
                                           "DEBUG:Ptyp_constr1:%s"]
                                          myid/1776))
                                      (before Ppx.process_core_type_desc src/ppx.ml(111):3131-3239
                                        (after Ppx.process_core_type_desc src/ppx.ml(111):3131-3239
                                          (apply (field 45 (global Stdlib!))
                                            (after Ppx.process_core_type_desc src/ppx.ml(111):3146-3238
                                              (apply
                                                (field 65
                                                  (global Batteries!))
                                                (makeblock 0
                                                  "DEBUG:Ptyp_constr:" "id"
                                                  a/1756 myid/1776 "types"
                                                  b/1757)))))))))))))
                       case tag 4:
                        (before Ppx.process_core_type_desc src/ppx.ml(128):3710-3766
                          (after Ppx.process_core_type_desc src/ppx.ml(128):3710-3766
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(128):3725-3765
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow8:")))))
                       case tag 5:
                        (before Ppx.process_core_type_desc src/ppx.ml(131):3841-3897
                          (after Ppx.process_core_type_desc src/ppx.ml(131):3841-3897
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(131):3856-3896
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow7:")))))
                       case tag 6:
                        (before Ppx.process_core_type_desc src/ppx.ml(134):3963-4019
                          (after Ppx.process_core_type_desc src/ppx.ml(134):3963-4019
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(134):3978-4018
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow6:")))))
                       case tag 7:
                        (before Ppx.process_core_type_desc src/ppx.ml(137):4114-4170
                          (after Ppx.process_core_type_desc src/ppx.ml(137):4114-4170
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(137):4129-4169
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow5:")))))
                       case tag 8:
                        (before Ppx.process_core_type_desc src/ppx.ml(140):4239-4295
                          (after Ppx.process_core_type_desc src/ppx.ml(140):4239-4295
                            (apply (field 45 (global Stdlib!))
                              (after Ppx.process_core_type_desc src/ppx.ml(140):4254-4294
                                (apply (field 65 (global Batteries!))
                                  "DEBUG:Ptyp_arrow4:")))))
                       case tag 9:
                        (let (a/1774 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(143):4348-4406
                            (after Ppx.process_core_type_desc src/ppx.ml(143):4348-4406
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(143):4363-4405
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1774)))))))
                       case tag 10:
                        (let (a/1775 =a (field 0 x/1755))
                          (before Ppx.process_core_type_desc src/ppx.ml(147):4604-4665
                            (after Ppx.process_core_type_desc src/ppx.ml(147):4604-4665
                              (apply (field 45 (global Stdlib!))
                                (after Ppx.process_core_type_desc src/ppx.ml(147):4619-4664
                                  (apply (field 65 (global Batteries!))
                                    (makeblock 0 "DEBUG:Ptyp_extension:"
                                      a/1775)))))))))))
              process_record_kind_list/1746
                (function x/1839 : int
                  (funct-body Ppx.process_record_kind_list src/ppx.ml(149)<ghost>:4696-4813
                    (before Ppx.process_record_kind_list src/ppx.ml(150):4704-4813
                      (if x/1839
                        (let
                          (t/1841 =a (field 1 x/1839)
                           h/1840 =a (field 0 x/1839))
                          (before Ppx.process_record_kind_list src/ppx.ml(153):4748-4813
                            (seq
                              (after Ppx.process_record_kind_list src/ppx.ml(153):4748-4771
                                (apply process_record_kind/1744 h/1840))
                              (before Ppx.process_record_kind_list src/ppx.ml(154):4777-4813
                                (seq
                                  (after Ppx.process_record_kind_list src/ppx.ml(154):4777-4805
                                    (apply process_record_kind_list/1746
                                      t/1841))
                                  (before Ppx.process_record_kind_list src/ppx.ml(155):4811-4813
                                    0))))))
                        (before Ppx.process_record_kind_list src/ppx.ml(151):4727-4729
                          0)))))
              process_core_type/1747
                (function x/1842 : int
                  (funct-body Ppx.process_core_type src/ppx.ml(157)<ghost>:4835-5165
                    (before Ppx.process_core_type src/ppx.ml(158):4843-5165
                      (let (ptyp_desc/1843 =a (field 0 x/1842))
                        (before Ppx.process_core_type src/ppx.ml(165):5030-5165
                          (seq
                            (after Ppx.process_core_type src/ppx.ml(165):5030-5064
                              (apply process_core_type_desc/1745
                                ptyp_desc/1843))
                            (before Ppx.process_core_type src/ppx.ml(167):5089-5165
                              (after Ppx.process_core_type src/ppx.ml(167):5089-5165
                                (apply (field 45 (global Stdlib!))
                                  (after Ppx.process_core_type src/ppx.ml(167):5104-5164
                                    (apply (field 65 (global Batteries!))
                                      (makeblock 0
                                        "DEBUG:core_type.ptyp_desc:"
                                        ptyp_desc/1843))))))))))))
              process_core_type_list/1748
                (function x/1847 : int
                  (funct-body Ppx.process_core_type_list src/ppx.ml(168)<ghost>:5192-5311
                    (before Ppx.process_core_type_list src/ppx.ml(169):5215-5311
                      (if x/1847
                        (let
                          (t/1849 =a (field 1 x/1847)
                           h/1848 =a (field 0 x/1847))
                          (before Ppx.process_core_type_list src/ppx.ml(172):5259-5311
                            (seq
                              (after Ppx.process_core_type_list src/ppx.ml(172):5259-5280
                                (apply process_core_type/1747 h/1848))
                              (before Ppx.process_core_type_list src/ppx.ml(173):5286-5311
                                (after Ppx.process_core_type_list src/ppx.ml(173):5286-5311
                                  (apply process_core_type_list/1748 t/1849))))))
                        (before Ppx.process_core_type_list src/ppx.ml(170):5238-5240
                          0))))))
            (let
              (print_constructor_arguments/1850 =
                 (function x/1852 : int
                   (funct-body Ppx.print_constructor_arguments src/ppx.ml(180)<ghost>:5357-5590
                     (before Ppx.print_constructor_arguments src/ppx.ml(181):5365-5590
                       (switch* x/1852
                        case tag 0:
                         (let (a/1853 =a (field 0 x/1852))
                           (before Ppx.print_constructor_arguments src/ppx.ml(183):5403-5495
                             (seq
                               (after Ppx.print_constructor_arguments src/ppx.ml(183):5403-5429
                                 (apply process_core_type_list/1748 a/1853))
                               (before Ppx.print_constructor_arguments src/ppx.ml(184):5435-5495
                                 (after Ppx.print_constructor_arguments src/ppx.ml(184):5435-5495
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_constructor_arguments src/ppx.ml(184):5450-5494
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:Pcstr_tuple:"
                                           a/1853)))))))))
                        case tag 1:
                         (let (a/1854 =a (field 0 x/1852))
                           (before Ppx.print_constructor_arguments src/ppx.ml(187):5529-5590
                             (after Ppx.print_constructor_arguments src/ppx.ml(187):5529-5590
                               (apply (field 45 (global Stdlib!))
                                 (after Ppx.print_constructor_arguments src/ppx.ml(187):5544-5589
                                   (apply (field 65 (global Batteries!))
                                     (makeblock 0 "DEBUG:Pcstr_record:"
                                       a/1854))))))))))))
              (letrec
                (process_pype_variant_constructor_declaration_list/1855
                   (function x/1856 : int
                     (funct-body Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(189)<ghost>:5649-6576
                       (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(190):5657-6576
                         (if x/1856
                           (let
                             (t/1858 =a (field 1 x/1856)
                              h/1857 =a (field 0 x/1856))
                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(194):5766-6576
                               (let
                                 (pcd_attributes/1864 =a (field 5 h/1857)
                                  pcd_loc/1863 =a (field 4 h/1857)
                                  pcd_res/1862 =a (field 3 h/1857)
                                  pcd_args/1861 =a (field 2 h/1857)
                                  pcd_vars/1860 =a (field 1 h/1857)
                                  pcd_name/1859 =a (field 0 h/1857))
                                 (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6105-6576
                                   (seq
                                     (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(205):6105-6142
                                       (apply
                                         print_constructor_arguments/1850
                                         pcd_args/1861))
                                     (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6150-6576
                                       (seq
                                         (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6150-6505
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(206):6165-6504
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "constructor_declaration:"
                                                   pcd_name/1859 "vars"
                                                   pcd_vars/1860 "args"
                                                   pcd_args/1861 "res"
                                                   pcd_res/1862 "loc"
                                                   pcd_loc/1863 "attrs"
                                                   pcd_attributes/1864)))))
                                         (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6513-6576
                                           (seq
                                             (after Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(220):6513-6566
                                               (apply
                                                 process_pype_variant_constructor_declaration_list/1855
                                                 t/1858))
                                             (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(221):6574-6576
                                               0))))))))))
                           (before Ppx.process_pype_variant_constructor_declaration_list src/ppx.ml(191):5680-5682
                             0))))))
                (let
                  (process_kind/1865 =
                     (function x/1867 : int
                       (funct-body Ppx.process_kind src/ppx.ml(223)<ghost>:6596-7054
                         (before Ppx.process_kind src/ppx.ml(224):6604-7054
                           (switch* x/1867
                            case int 0:
                             (before Ppx.process_kind src/ppx.ml(226):6662-6720
                               (after Ppx.process_kind src/ppx.ml(226):6662-6720
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(226):6677-6719
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case int 1:
                             (before Ppx.process_kind src/ppx.ml(234):6996-7054
                               (after Ppx.process_kind src/ppx.ml(234):6996-7054
                                 (apply (field 45 (global Stdlib!))
                                   (after Ppx.process_kind src/ppx.ml(234):7011-7053
                                     (apply (field 65 (global Batteries!))
                                       "DEBUG:Ptype_abstract:")))))
                            case tag 0:
                             (let (a/1868 =a (field 0 x/1867))
                               (before Ppx.process_kind src/ppx.ml(228):6748-6868
                                 (seq
                                   (after Ppx.process_kind src/ppx.ml(228):6748-6801
                                     (apply
                                       process_pype_variant_constructor_declaration_list/1855
                                       a/1868))
                                   (before Ppx.process_kind src/ppx.ml(229):6807-6868
                                     (after Ppx.process_kind src/ppx.ml(229):6807-6868
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.process_kind src/ppx.ml(229):6822-6867
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0
                                               "DEBUG:Ptype_variant:" a/1868)))))))))
                            case tag 1:
                             (let (a/1869 =a (field 0 x/1867))
                               (before Ppx.process_kind src/ppx.ml(233):6949-6976
                                 (after Ppx.process_kind src/ppx.ml(233):6949-6976
                                   (apply process_record_kind_list/1746
                                     a/1869))))))))
                   print_type_decl/1870 =
                     (function x/1872 : int
                       (funct-body Ppx.print_type_decl src/ppx.ml(236)<ghost>:7075-8100
                         (before Ppx.print_type_decl src/ppx.ml(237):7083-8100
                           (let
                             (ptype_loc/1880 =a (field 7 x/1872)
                              ptype_attributes/1879 =a (field 6 x/1872)
                              ptype_manifest/1878 =a (field 5 x/1872)
                              ptype_private/1877 =a (field 4 x/1872)
                              ptype_kind/1876 =a (field 3 x/1872)
                              ptype_cstrs/1875 =a (field 2 x/1872)
                              ptype_params/1874 =a (field 1 x/1872)
                              ptype_name/1873 =a (field 0 x/1872))
                             (before Ppx.print_type_decl src/ppx.ml(248):7490-8100
                               (seq
                                 (after Ppx.print_type_decl src/ppx.ml(248):7490-7555
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.print_type_decl src/ppx.ml(248):7505-7554
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:type_decl:"
                                           ptype_name/1873)))))
                                 (before Ppx.print_type_decl src/ppx.ml(249):7561-8100
                                   (seq
                                     (after Ppx.print_type_decl src/ppx.ml(249):7561-7629
                                       (apply (field 45 (global Stdlib!))
                                         (after Ppx.print_type_decl src/ppx.ml(249):7576-7628
                                           (apply
                                             (field 65 (global Batteries!))
                                             (makeblock 0 "DEBUG:parameters:"
                                               ptype_params/1874)))))
                                     (before Ppx.print_type_decl src/ppx.ml(250):7635-8100
                                       (seq
                                         (after Ppx.print_type_decl src/ppx.ml(250):7635-7697
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.print_type_decl src/ppx.ml(250):7650-7696
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0 "DEBUG:cstrs:"
                                                   ptype_cstrs/1875)))))
                                         (before Ppx.print_type_decl src/ppx.ml(251):7703-8100
                                           (seq
                                             (after Ppx.print_type_decl src/ppx.ml(251):7703-7762
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.print_type_decl src/ppx.ml(251):7718-7761
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0
                                                       "DEBUG:kind:"
                                                       ptype_kind/1876)))))
                                             (before Ppx.print_type_decl src/ppx.ml(252):7768-8100
                                               (seq
                                                 (after Ppx.print_type_decl src/ppx.ml(252):7768-7793
                                                   (apply process_kind/1865
                                                     ptype_kind/1876))
                                                 (before Ppx.print_type_decl src/ppx.ml(253):7799-8100
                                                   (after Ppx.print_type_decl src/ppx.ml(253):7799-8100
                                                     (apply
                                                       (field 45
                                                         (global Stdlib!))
                                                       (after Ppx.print_type_decl src/ppx.ml(253):7814-8099
                                                         (apply
                                                           (field 65
                                                             (global Batteries!))
                                                           (makeblock 0 (*,int,*,*,*,*,*,*)
                                                             "DEBUG:private:"
                                                             ptype_private/1877
                                                             "DEBUG:manifest"
                                                             ptype_manifest/1878
                                                             "DEBUG:attr"
                                                             ptype_attributes/1879
                                                             "DEBUG:loc"
                                                             ptype_loc/1880)))))))))))))))))))))
                  (letrec
                    (process_type_decl_list/1881
                       (function x/1882 : int
                         (funct-body Ppx.process_type_decl_list src/ppx.ml(259)<ghost>:8136-8247
                           (before Ppx.process_type_decl_list src/ppx.ml(260):8144-8247
                             (if x/1882
                               (let
                                 (t/1884 =a (field 1 x/1882)
                                  h/1883 =a (field 0 x/1882))
                                 (before Ppx.process_type_decl_list src/ppx.ml(263):8188-8247
                                   (seq
                                     (after Ppx.process_type_decl_list src/ppx.ml(263):8188-8207
                                       (apply print_type_decl/1870 h/1883))
                                     (before Ppx.process_type_decl_list src/ppx.ml(264):8213-8247
                                       (seq
                                         (after Ppx.process_type_decl_list src/ppx.ml(264):8213-8239
                                           (apply process_type_decl_list/1881
                                             t/1884))
                                         (before Ppx.process_type_decl_list src/ppx.ml(265):8245-8247
                                           0))))))
                               (before Ppx.process_type_decl_list src/ppx.ml(261):8167-8169
                                 0))))))
                    (let
                      (printdesc/1885 =
                         (function x/1887 : int
                           (funct-body Ppx.printdesc src/ppx.ml(267)<ghost>:8266-10345
                             (before Ppx.printdesc src/ppx.ml(268):8301-10345
                               (seq
                                 (after Ppx.printdesc src/ppx.ml(268):8301-8367
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printdesc src/ppx.ml(268):8316-8366
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0
                                           "DEBUG:structure_item_desc:"
                                           x/1887)))))
                                 (before Ppx.printdesc src/ppx.ml(269):8371-10345
                                   (switch* x/1887
                                    case tag 0:
                                     (let
                                       (attributes/1889 =a (field 1 x/1887)
                                        expression/1888 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(270):8425-8501
                                         (after Ppx.printdesc src/ppx.ml(270):8425-8501
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(270):8440-8500
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_eval:"
                                                   expression/1888
                                                   attributes/1889)))))))
                                    case tag 1:
                                     (let
                                       (value_binding_list/1891 =a
                                          (field 1 x/1887)
                                        rec_flag/1890 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(272):8570-8704
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(272):8570-8654
                                             (apply
                                               (field 45 (global Stdlib!))
                                               (after Ppx.printdesc src/ppx.ml(272):8585-8653
                                                 (apply
                                                   (field 65
                                                     (global Batteries!))
                                                   (makeblock 0 (*,int,*)
                                                     "DEBUG:Pstr_value:"
                                                     rec_flag/1890
                                                     value_binding_list/1891)))))
                                           (before Ppx.printdesc src/ppx.ml(273):8660-8704
                                             (after Ppx.printdesc src/ppx.ml(273):8660-8704
                                               (apply
                                                 print_value_binding_list/1298
                                                 value_binding_list/1891))))))
                                    case tag 2:
                                     (let
                                       (value_description/1892 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(274):8744-8821
                                         (after Ppx.printdesc src/ppx.ml(274):8744-8821
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(274):8759-8820
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_primitive:"
                                                   value_description/1892)))))))
                                    case tag 3:
                                     (let
                                       (type_declaration_list/1894 =a
                                          (field 1 x/1887)
                                        rec_flag/1893 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(278):8906-9043
                                         (seq
                                           (after Ppx.printdesc src/ppx.ml(278):8906-8951
                                             (apply
                                               process_type_decl_list/1881
                                               type_declaration_list/1894))
                                           (before Ppx.printdesc src/ppx.ml(279):8957-9043
                                             (after Ppx.printdesc src/ppx.ml(279):8957-9043
                                               (apply
                                                 (field 45 (global Stdlib!))
                                                 (after Ppx.printdesc src/ppx.ml(279):8972-9042
                                                   (apply
                                                     (field 65
                                                       (global Batteries!))
                                                     (makeblock 0 (*,int,*)
                                                       "DEBUG:Pstr_type:"
                                                       rec_flag/1893
                                                       type_declaration_list/1894)))))))))
                                    case tag 4:
                                     (let
                                       (type_extension/1895 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(282):9080-9151
                                         (after Ppx.printdesc src/ppx.ml(282):9080-9151
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(282):9095-9150
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_typext:"
                                                   type_extension/1895)))))))
                                    case tag 5:
                                     (let
                                       (extension_constructor/1896 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(283):9195-9276
                                         (after Ppx.printdesc src/ppx.ml(283):9195-9276
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(283):9210-9275
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_exception:"
                                                   extension_constructor/1896)))))))
                                    case tag 6:
                                     (let
                                       (module_binding/1897 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(284):9311-9381
                                         (after Ppx.printdesc src/ppx.ml(284):9311-9381
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(284):9326-9380
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_module:"
                                                   module_binding/1897)))))))
                                    case tag 7:
                                     (let
                                       (module_binding_list/1898 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(285):9424-9503
                                         (after Ppx.printdesc src/ppx.ml(285):9424-9503
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(285):9439-9502
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_recmodule:"
                                                   module_binding_list/1898)))))))
                                    case tag 8:
                                     (let
                                       (module_type_declaration/1899 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(286):9547-9628
                                         (after Ppx.printdesc src/ppx.ml(286):9547-9628
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(286):9562-9627
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_modtype:"
                                                   module_type_declaration/1899)))))))
                                    case tag 9:
                                     (let
                                       (open_description/1900 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(288):9679-9749
                                         (after Ppx.printdesc src/ppx.ml(288):9679-9749
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(288):9694-9748
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_open"
                                                   open_description/1900)))))))
                                    case tag 10:
                                     (let
                                       (class_declarations/1901 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(289):9789-9863
                                         (after Ppx.printdesc src/ppx.ml(289):9789-9863
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(289):9804-9862
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class:"
                                                   class_declarations/1901)))))))
                                    case tag 11:
                                     (let
                                       (class_type_declarations/1902 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(290):9912-9996
                                         (after Ppx.printdesc src/ppx.ml(290):9912-9996
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(290):9927-9995
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_class_type:"
                                                   class_type_declarations/1902)))))))
                                    case tag 12:
                                     (let
                                       (include_declaration/1903 =a
                                          (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(291):10038-10114
                                         (after Ppx.printdesc src/ppx.ml(291):10038-10114
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(291):10053-10113
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_include:"
                                                   include_declaration/1903)))))))
                                    case tag 13:
                                     (let
                                       (attribute/1904 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(292):10147-10216
                                         (after Ppx.printdesc src/ppx.ml(292):10147-10216
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(292):10162-10215
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_attribute:"
                                                   attribute/1904)))))))
                                    case tag 14:
                                     (let
                                       (attributes/1906 =a (field 1 x/1887)
                                        extension/1905 =a (field 0 x/1887))
                                       (before Ppx.printdesc src/ppx.ml(293):10263-10345
                                         (after Ppx.printdesc src/ppx.ml(293):10263-10345
                                           (apply (field 45 (global Stdlib!))
                                             (after Ppx.printdesc src/ppx.ml(293):10278-10344
                                               (apply
                                                 (field 65
                                                   (global Batteries!))
                                                 (makeblock 0
                                                   "DEBUG:Pstr_extension:"
                                                   extension/1905
                                                   attributes/1906)))))))))))))
                       foo/1907 =[int] 1
                       printone/1908 =
                         (function x/1909 : int
                           (funct-body Ppx.printone src/ppx.ml(297)<ghost>:10375-10587
                             (before Ppx.printone src/ppx.ml(298):10407-10587
                               (let (pstr_desc/1910 =a (field 0 x/1909))
                                 (before Ppx.printone src/ppx.ml(304):10558-10587
                                   (seq
                                     (after Ppx.printone src/ppx.ml(304):10558-10579
                                       (apply printdesc/1885 pstr_desc/1910))
                                     (before Ppx.printone src/ppx.ml(305):10585-10587
                                       0)))))))
                       printone2/1911 =
                         (function x/1912 : int
                           (funct-body Ppx.printone2 src/ppx.ml(311)<ghost>:10715-10794
                             (before Ppx.printone2 src/ppx.ml(312):10727-10794
                               (seq
                                 (after Ppx.printone2 src/ppx.ml(312):10727-10780
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.printone2 src/ppx.ml(312):10742-10779
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG:SECOND::"
                                           x/1912)))))
                                 (before Ppx.printone2 src/ppx.ml(313):10784-10794
                                   (after Ppx.printone2 src/ppx.ml(313):10784-10794
                                     (apply printone/1908 x/1912)))))))
                       proc1/1913 =
                         (function x/1915
                           (funct-body Ppx.proc1 src/ppx.ml(315)<ghost>:10808-10832
                             (before Ppx.proc1 src/ppx.ml(316):10816-10832
                               (seq
                                 (after Ppx.proc1 src/ppx.ml(316):10816-10827
                                   (apply printone2/1911 x/1915))
                                 (before Ppx.proc1 src/ppx.ml(317):10831-10832
                                   x/1915)))))
                       debug/1916 =
                         (function proc/1918 lst/1919 : int
                           (funct-body Ppx.debug src/ppx.ml(319)<ghost>:10844-10987
                             (before Ppx.debug src/ppx.ml(320):10864-10987
                               (let
                                 (result/1920 =
                                    (after Ppx.debug src/ppx.ml(320):10877-10894
                                      (apply
                                        (field 18 (global Stdlib__List!))
                                        proc/1918 lst/1919)))
                                 (before Ppx.debug src/ppx.ml(321):10900-10987
                                   (seq
                                     (after Ppx.debug src/ppx.ml(321):10900-10981
                                       (apply
                                         (field 16 (global Stdlib__List!))
                                         (function i/1984 : int
                                           (funct-body Ppx.debug.(fun) src/ppx.ml(321):10910-10974
                                             (before Ppx.debug.(fun) src/ppx.ml(321):10920-10973
                                               (after Ppx.debug.(fun) src/ppx.ml(321):10920-10973
                                                 (apply
                                                   (field 45
                                                     (global Stdlib!))
                                                   (after Ppx.debug.(fun) src/ppx.ml(321):10934-10973
                                                     (apply
                                                       (field 65
                                                         (global Batteries!))
                                                       (makeblock 0
                                                         "DEBUG:TOPLEVEL:"
                                                         i/1984))))))))
                                         result/1920))
                                     (before Ppx.debug src/ppx.ml(322):10985-10987
                                       0)))))))
                       transform/1985 =
                         (function x/1987
                           (funct-body Ppx.transform src/ppx.ml(324)<ghost>:11019-11132
                             (before Ppx.transform src/ppx.ml(325):11062-11132
                               (seq
                                 (after Ppx.transform src/ppx.ml(325):11062-11108
                                   (apply (field 45 (global Stdlib!))
                                     (after Ppx.transform src/ppx.ml(325):11077-11107
                                       (apply (field 65 (global Batteries!))
                                         (makeblock 0 "DEBUG3:" x/1987)))))
                                 (before Ppx.transform src/ppx.ml(326):11112-11132
                                   (seq
                                     (after Ppx.transform src/ppx.ml(326):11112-11127
                                       (apply debug/1916 proc1/1913 x/1987))
                                     (before Ppx.transform src/ppx.ml(327):11131-11132
                                       x/1987)))))))
                       *match*/4668 =
                         (after Ppx src/ppx.ml(329):11146-11205
                           (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
                             (makeblock 0 transform/1985) 0 0 0 0 0 0 0
                             "simple-ppx")))
                      (pseudo <unknown location>
                        (makeblock 0 proc2/1279 printdesc2/1282
                          print_value_binding_expr/1284
                          print_value_binding_list2/1291
                          print_value_binding_list/1298 process_id2/1437
                          process_id/1670 process_record_kind/1744
                          process_core_type_desc/1745
                          process_record_kind_list/1746
                          process_core_type/1747 process_core_type_list/1748
                          print_constructor_arguments/1850
                          process_pype_variant_constructor_declaration_list/1855
                          process_kind/1865 print_type_decl/1870
                          process_type_decl_list/1881 printdesc/1885 foo/1907
                          printone/1908 printone2/1911 proc1/1913 debug/1916
                          transform/1985)))))))))))))

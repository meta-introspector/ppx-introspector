[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[72,1948+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[72,1948+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[69,1879+31]..[72,1948+64])
            Pexp_constraint
            expression (src/ppx.ml[70,1918+2]..[72,1948+64])
              Pexp_match
              expression (src/ppx.ml[70,1918+8]..[70,1918+9])
                Pexp_ident "x" (src/ppx.ml[70,1918+8]..[70,1918+9])
              [
                <case>
                  pattern (src/ppx.ml[71,1933+4]..[71,1933+11])
                    Ppat_record Open
                    [
                      "txt" (src/ppx.ml[71,1933+5]..[71,1933+8]) ghost
                        pattern (src/ppx.ml[71,1933+5]..[71,1933+8])
                          Ppat_var "txt" (src/ppx.ml[71,1933+5]..[71,1933+8])
                    ]
                  expression (src/ppx.ml[72,1948+4]..[72,1948+64])
                    Pexp_apply
                    expression (src/ppx.ml[72,1948+5]..[72,1948+18])
                      Pexp_ident "print_endline" (src/ppx.ml[72,1948+5]..[72,1948+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[72,1948+19]..[72,1948+63])
                          Pexp_apply
                          expression (src/ppx.ml[72,1948+20]..[72,1948+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[72,1948+20]..[72,1948+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[72,1948+35]..[72,1948+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[72,1948+36]..[72,1948+55])
                                    Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[72,1948+37]..[72,1948+54]),None)
                                  expression (src/ppx.ml[72,1948+58]..[72,1948+61])
                                    Pexp_ident "txt" (src/ppx.ml[72,1948+58]..[72,1948+61])
                                ]
                          ]
                    ]
              ]
            core_type (src/ppx.ml[69,1879+32]..[69,1879+36])
              Ptyp_constr "unit" (src/ppx.ml[69,1879+32]..[69,1879+36])
              []
    ]
  structure_item (src/ppx.ml[74,2016+0]..[156,4841+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[74,2016+8]..[74,2016+27])
          Ppat_var "process_record_kind" (src/ppx.ml[74,2016+8]..[74,2016+27])
        expression (src/ppx.ml[74,2016+27]..[88,2500+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[74,2016+27]..[74,2016+30])
            Ppat_var "x" (src/ppx.ml[74,2016+28]..[74,2016+29])
          expression (src/ppx.ml[75,2049+2]..[88,2500+47])
            Pexp_match
            expression (src/ppx.ml[75,2049+8]..[75,2049+9])
              Pexp_ident "x" (src/ppx.ml[75,2049+8]..[75,2049+9])
            [
              <case>
                pattern (src/ppx.ml[76,2064+4]..[82,2245+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[77,2070+5]..[77,2070+13]) ghost
                      pattern (src/ppx.ml[77,2070+5]..[77,2070+13])
                        Ppat_var "pld_name" (src/ppx.ml[77,2070+5]..[77,2070+13])
                    "pld_mutable" (src/ppx.ml[78,2103+5]..[78,2103+16]) ghost
                      pattern (src/ppx.ml[78,2103+5]..[78,2103+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[78,2103+5]..[78,2103+16])
                    "pld_type" (src/ppx.ml[79,2141+5]..[79,2141+13]) ghost
                      pattern (src/ppx.ml[79,2141+5]..[79,2141+13])
                        Ppat_var "pld_type" (src/ppx.ml[79,2141+5]..[79,2141+13])
                    "pld_loc" (src/ppx.ml[80,2173+5]..[80,2173+12]) ghost
                      pattern (src/ppx.ml[80,2173+5]..[80,2173+12])
                        Ppat_var "pld_loc" (src/ppx.ml[80,2173+5]..[80,2173+12])
                    "pld_attributes" (src/ppx.ml[81,2205+5]..[81,2205+19]) ghost
                      pattern (src/ppx.ml[81,2205+5]..[81,2205+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[81,2205+5]..[81,2205+19])
                  ]
                expression (src/ppx.ml[83,2253+4]..[88,2500+47])
                  Pexp_apply
                  expression (src/ppx.ml[83,2253+5]..[83,2253+18])
                    Pexp_ident "print_endline" (src/ppx.ml[83,2253+5]..[83,2253+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[83,2253+19]..[88,2500+46])
                        Pexp_apply
                        expression (src/ppx.ml[83,2253+20]..[83,2253+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[83,2253+20]..[83,2253+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[83,2253+35]..[88,2500+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[83,2253+36]..[83,2253+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[83,2253+37]..[83,2253+56]),None)
                                expression (src/ppx.ml[84,2314+36]..[84,2314+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[84,2314+36]..[84,2314+44])
                                expression (src/ppx.ml[85,2360+36]..[85,2360+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[85,2360+37]..[85,2360+44]),None)
                                expression (src/ppx.ml[86,2407+36]..[86,2407+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[86,2407+36]..[86,2407+47])
                                expression (src/ppx.ml[87,2456+36]..[87,2456+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[87,2456+37]..[87,2456+41]),None)
                                expression (src/ppx.ml[88,2500+36]..[88,2500+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[88,2500+36]..[88,2500+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[90,2552+0]..[90,2552+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[90,2552+0]..[90,2552+22])
        expression (src/ppx.ml[90,2552+23]..[130,4159+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[90,2552+23]..[90,2552+24])
            Ppat_var "x" (src/ppx.ml[90,2552+23]..[90,2552+24])
          expression (src/ppx.ml[91,2579+2]..[130,4159+65])
            Pexp_match
            expression (src/ppx.ml[91,2579+8]..[91,2579+9])
              Pexp_ident "x" (src/ppx.ml[91,2579+8]..[91,2579+9])
            [
              <case>
                pattern (src/ppx.ml[92,2594+4]..[92,2594+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[92,2594+4]..[92,2594+15])
                  Some
                    []
                    pattern (src/ppx.ml[92,2594+16]..[92,2594+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[92,2594+17]..[92,2594+18])
                          Ppat_var "a" (src/ppx.ml[92,2594+17]..[92,2594+18])
                        pattern (src/ppx.ml[92,2594+19]..[92,2594+20])
                          Ppat_var "b" (src/ppx.ml[92,2594+19]..[92,2594+20])
                      ]
                expression (src/ppx.ml[94,2665+4]..[97,2719+79])
                  Pexp_sequence
                  expression (src/ppx.ml[94,2665+4]..[94,2665+18])
                    Pexp_apply
                    expression (src/ppx.ml[94,2665+5]..[94,2665+15])
                      Pexp_ident "process_id" (src/ppx.ml[94,2665+5]..[94,2665+15])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[94,2665+16]..[94,2665+17])
                          Pexp_ident "a" (src/ppx.ml[94,2665+16]..[94,2665+17])
                    ]
                  expression (src/ppx.ml[95,2685+4]..[97,2719+79])
                    Pexp_sequence
                    expression (src/ppx.ml[95,2685+4]..[95,2685+30])
                      Pexp_apply
                      expression (src/ppx.ml[95,2685+5]..[95,2685+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[95,2685+5]..[95,2685+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[95,2685+28]..[95,2685+29])
                            Pexp_ident "b" (src/ppx.ml[95,2685+28]..[95,2685+29])
                      ]
                    expression (src/ppx.ml[97,2719+4]..[97,2719+79])
                      Pexp_apply
                      expression (src/ppx.ml[97,2719+5]..[97,2719+18])
                        Pexp_ident "print_endline" (src/ppx.ml[97,2719+5]..[97,2719+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[97,2719+19]..[97,2719+78])
                            Pexp_apply
                            expression (src/ppx.ml[97,2719+20]..[97,2719+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[97,2719+20]..[97,2719+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[97,2719+35]..[97,2719+77])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[97,2719+36]..[97,2719+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2719+37]..[97,2719+55]),None)
                                    expression (src/ppx.ml[97,2719+58]..[97,2719+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[97,2719+59]..[97,2719+61]),None)
                                    expression (src/ppx.ml[97,2719+63]..[97,2719+64])
                                      Pexp_ident "a" (src/ppx.ml[97,2719+63]..[97,2719+64])
                                    expression (src/ppx.ml[97,2719+66]..[97,2719+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[97,2719+67]..[97,2719+72]),None)
                                    expression (src/ppx.ml[97,2719+74]..[97,2719+75])
                                      Pexp_ident "b" (src/ppx.ml[97,2719+74]..[97,2719+75])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[99,2800+4]..[99,2800+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[99,2800+4]..[99,2800+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2800+15]..[99,2800+16])
                      Ppat_var "a" (src/ppx.ml[99,2800+15]..[99,2800+16])
                expression (src/ppx.ml[101,2848+4]..[101,2848+59])
                  Pexp_apply
                  expression (src/ppx.ml[101,2848+5]..[101,2848+18])
                    Pexp_ident "print_endline" (src/ppx.ml[101,2848+5]..[101,2848+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[101,2848+19]..[101,2848+58])
                        Pexp_apply
                        expression (src/ppx.ml[101,2848+20]..[101,2848+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[101,2848+20]..[101,2848+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2848+35]..[101,2848+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2848+37]..[101,2848+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,2927+4]..[104,2927+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[104,2927+4]..[104,2927+12])
                  None
                expression (src/ppx.ml[104,2927+17]..[104,2927+69])
                  Pexp_apply
                  expression (src/ppx.ml[104,2927+18]..[104,2927+31])
                    Pexp_ident "print_endline" (src/ppx.ml[104,2927+18]..[104,2927+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,2927+32]..[104,2927+68])
                        Pexp_apply
                        expression (src/ppx.ml[104,2927+33]..[104,2927+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,2927+33]..[104,2927+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2927+48]..[104,2927+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2927+50]..[104,2927+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,2997+4]..[105,2997+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[105,2997+4]..[105,2997+12])
                  Some
                    []
                    pattern (src/ppx.ml[105,2997+13]..[105,2997+17])
                      Ppat_var "name" (src/ppx.ml[105,2997+13]..[105,2997+17])
                expression (src/ppx.ml[105,2997+20]..[105,2997+80])
                  Pexp_apply
                  expression (src/ppx.ml[105,2997+21]..[105,2997+34])
                    Pexp_ident "print_endline" (src/ppx.ml[105,2997+21]..[105,2997+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,2997+35]..[105,2997+79])
                        Pexp_apply
                        expression (src/ppx.ml[105,2997+36]..[105,2997+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,2997+36]..[105,2997+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,2997+51]..[105,2997+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[105,2997+52]..[105,2997+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,2997+53]..[105,2997+68]),None)
                                expression (src/ppx.ml[105,2997+73]..[105,2997+77])
                                  Pexp_ident "name" (src/ppx.ml[105,2997+73]..[105,2997+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,3078+4]..[106,3078+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[106,3078+4]..[106,3078+14])
                  Some
                    []
                    pattern (src/ppx.ml[106,3078+15]..[106,3078+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[106,3078+16]..[106,3078+25])
                          Ppat_var "arg_label" (src/ppx.ml[106,3078+16]..[106,3078+25])
                        pattern (src/ppx.ml[106,3078+28]..[106,3078+37])
                          Ppat_var "core_type" (src/ppx.ml[106,3078+28]..[106,3078+37])
                        pattern (src/ppx.ml[106,3078+40]..[106,3078+50])
                          Ppat_var "core_type2" (src/ppx.ml[106,3078+40]..[106,3078+50])
                      ]
                expression (src/ppx.ml[107,3133+4]..[107,3133+61])
                  Pexp_apply
                  expression (src/ppx.ml[107,3133+5]..[107,3133+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3133+5]..[107,3133+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3133+19]..[107,3133+60])
                        Pexp_apply
                        expression (src/ppx.ml[107,3133+20]..[107,3133+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3133+20]..[107,3133+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3133+35]..[107,3133+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3133+37]..[107,3133+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[109,3196+4]..[109,3196+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[109,3196+4]..[109,3196+15])
                  Some
                    []
                    pattern (src/ppx.ml[109,3196+16]..[109,3196+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[109,3196+17]..[109,3196+18])
                          Ppat_var "a" (src/ppx.ml[109,3196+17]..[109,3196+18])
                        pattern (src/ppx.ml[109,3196+19]..[109,3196+20])
                          Ppat_var "b" (src/ppx.ml[109,3196+19]..[109,3196+20])
                      ]
                expression (src/ppx.ml[111,3265+4]..[111,3265+60])
                  Pexp_apply
                  expression (src/ppx.ml[111,3265+5]..[111,3265+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3265+5]..[111,3265+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3265+19]..[111,3265+59])
                        Pexp_apply
                        expression (src/ppx.ml[111,3265+20]..[111,3265+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3265+20]..[111,3265+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3265+35]..[111,3265+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3265+37]..[111,3265+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[112,3326+4]..[112,3326+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[112,3326+4]..[112,3326+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3326+15]..[112,3326+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[112,3326+16]..[112,3326+17])
                          Ppat_var "a" (src/ppx.ml[112,3326+16]..[112,3326+17])
                        pattern (src/ppx.ml[112,3326+18]..[112,3326+19])
                          Ppat_var "b" (src/ppx.ml[112,3326+18]..[112,3326+19])
                      ]
                expression (src/ppx.ml[114,3396+4]..[114,3396+60])
                  Pexp_apply
                  expression (src/ppx.ml[114,3396+5]..[114,3396+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3396+5]..[114,3396+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3396+19]..[114,3396+59])
                        Pexp_apply
                        expression (src/ppx.ml[114,3396+20]..[114,3396+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3396+20]..[114,3396+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3396+35]..[114,3396+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3396+37]..[114,3396+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3457+4]..[115,3457+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[115,3457+4]..[115,3457+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3457+15]..[115,3457+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3457+16]..[115,3457+17])
                          Ppat_var "a" (src/ppx.ml[115,3457+16]..[115,3457+17])
                        pattern (src/ppx.ml[115,3457+18]..[115,3457+19])
                          Ppat_var "b" (src/ppx.ml[115,3457+18]..[115,3457+19])
                      ]
                expression (src/ppx.ml[117,3518+4]..[117,3518+60])
                  Pexp_apply
                  expression (src/ppx.ml[117,3518+5]..[117,3518+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3518+5]..[117,3518+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3518+19]..[117,3518+59])
                        Pexp_apply
                        expression (src/ppx.ml[117,3518+20]..[117,3518+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3518+20]..[117,3518+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3518+35]..[117,3518+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3518+37]..[117,3518+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3579+4]..[118,3579+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[118,3579+4]..[118,3579+16])
                  Some
                    []
                    pattern (src/ppx.ml[118,3579+17]..[118,3579+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3579+18]..[118,3579+19])
                          Ppat_var "a" (src/ppx.ml[118,3579+18]..[118,3579+19])
                        pattern (src/ppx.ml[118,3579+20]..[118,3579+21])
                          Ppat_var "b" (src/ppx.ml[118,3579+20]..[118,3579+21])
                        pattern (src/ppx.ml[118,3579+22]..[118,3579+23])
                          Ppat_var "c" (src/ppx.ml[118,3579+22]..[118,3579+23])
                      ]
                expression (src/ppx.ml[120,3669+4]..[120,3669+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3669+5]..[120,3669+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3669+5]..[120,3669+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3669+19]..[120,3669+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3669+20]..[120,3669+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3669+20]..[120,3669+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3669+35]..[120,3669+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3669+37]..[120,3669+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3730+4]..[121,3730+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[121,3730+4]..[121,3730+13])
                  Some
                    []
                    pattern (src/ppx.ml[121,3730+14]..[121,3730+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3730+15]..[121,3730+16])
                          Ppat_var "a" (src/ppx.ml[121,3730+15]..[121,3730+16])
                        pattern (src/ppx.ml[121,3730+17]..[121,3730+18])
                          Ppat_var "b" (src/ppx.ml[121,3730+17]..[121,3730+18])
                      ]
                expression (src/ppx.ml[123,3794+4]..[123,3794+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3794+5]..[123,3794+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3794+5]..[123,3794+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3794+19]..[123,3794+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3794+20]..[123,3794+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3794+20]..[123,3794+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3794+35]..[123,3794+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3794+37]..[123,3794+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3855+4]..[124,3855+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[124,3855+4]..[124,3855+16])
                  Some
                    []
                    pattern (src/ppx.ml[124,3855+17]..[124,3855+18])
                      Ppat_var "a" (src/ppx.ml[124,3855+17]..[124,3855+18])
                expression (src/ppx.ml[126,3903+4]..[126,3903+62])
                  Pexp_apply
                  expression (src/ppx.ml[126,3903+5]..[126,3903+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3903+5]..[126,3903+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3903+19]..[126,3903+61])
                        Pexp_apply
                        expression (src/ppx.ml[126,3903+20]..[126,3903+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3903+20]..[126,3903+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3903+35]..[126,3903+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[126,3903+36]..[126,3903+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3903+37]..[126,3903+55]),None)
                                expression (src/ppx.ml[126,3903+57]..[126,3903+58])
                                  Pexp_ident "a" (src/ppx.ml[126,3903+57]..[126,3903+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,4111+4]..[129,4111+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[129,4111+4]..[129,4111+18])
                  Some
                    []
                    pattern (src/ppx.ml[129,4111+19]..[129,4111+20])
                      Ppat_var "a" (src/ppx.ml[129,4111+19]..[129,4111+20])
                expression (src/ppx.ml[130,4159+4]..[130,4159+65])
                  Pexp_apply
                  expression (src/ppx.ml[130,4159+5]..[130,4159+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,4159+5]..[130,4159+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,4159+19]..[130,4159+64])
                        Pexp_apply
                        expression (src/ppx.ml[130,4159+20]..[130,4159+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,4159+20]..[130,4159+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,4159+35]..[130,4159+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[130,4159+36]..[130,4159+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4159+37]..[130,4159+58]),None)
                                expression (src/ppx.ml[130,4159+60]..[130,4159+61])
                                  Pexp_ident "a" (src/ppx.ml[130,4159+60]..[130,4159+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[132,4229+2]..[132,4229+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[132,4229+2]..[132,4229+26])
        expression (src/ppx.ml[132,4229+26]..[138,4366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[132,4229+26]..[132,4229+29])
            Ppat_var "x" (src/ppx.ml[132,4229+27]..[132,4229+28])
          expression (src/ppx.ml[133,4261+2]..[138,4366+6])
            Pexp_match
            expression (src/ppx.ml[133,4261+8]..[133,4261+9])
              Pexp_ident "x" (src/ppx.ml[133,4261+8]..[133,4261+9])
            [
              <case>
                pattern (src/ppx.ml[134,4276+4]..[134,4276+6])
                  Ppat_construct "[]" (src/ppx.ml[134,4276+4]..[134,4276+6])
                  None
                expression (src/ppx.ml[134,4276+10]..[134,4276+12])
                  Pexp_construct "()" (src/ppx.ml[134,4276+10]..[134,4276+12])
                  None
              <case>
                pattern (src/ppx.ml[135,4289+4]..[135,4289+10])
                  Ppat_construct "::" (src/ppx.ml[135,4289+6]..[135,4289+8])
                  Some
                    []
                    pattern (src/ppx.ml[135,4289+4]..[135,4289+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4289+4]..[135,4289+5])
                          Ppat_var "h" (src/ppx.ml[135,4289+4]..[135,4289+5])
                        pattern (src/ppx.ml[135,4289+9]..[135,4289+10])
                          Ppat_var "t" (src/ppx.ml[135,4289+9]..[135,4289+10])
                      ]
                expression (src/ppx.ml[136,4303+4]..[138,4366+6])
                  Pexp_sequence
                  expression (src/ppx.ml[136,4303+4]..[136,4303+27])
                    Pexp_apply
                    expression (src/ppx.ml[136,4303+5]..[136,4303+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[136,4303+5]..[136,4303+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[136,4303+25]..[136,4303+26])
                          Pexp_ident "h" (src/ppx.ml[136,4303+25]..[136,4303+26])
                    ]
                  expression (src/ppx.ml[137,4332+4]..[138,4366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[137,4332+4]..[137,4332+32])
                      Pexp_apply
                      expression (src/ppx.ml[137,4332+5]..[137,4332+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[137,4332+5]..[137,4332+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[137,4332+30]..[137,4332+31])
                            Pexp_ident "t" (src/ppx.ml[137,4332+30]..[137,4332+31])
                      ]
                    expression (src/ppx.ml[138,4366+4]..[138,4366+6])
                      Pexp_construct "()" (src/ppx.ml[138,4366+4]..[138,4366+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[140,4377+0]..[140,4377+17])
          Ppat_var "process_core_type" (src/ppx.ml[140,4377+0]..[140,4377+17])
        expression (src/ppx.ml[140,4377+17]..[150,4644+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4377+17]..[140,4377+20])
            Ppat_var "x" (src/ppx.ml[140,4377+18]..[140,4377+19])
          expression (src/ppx.ml[141,4400+2]..[150,4644+80])
            Pexp_match
            expression (src/ppx.ml[141,4400+8]..[141,4400+9])
              Pexp_ident "x" (src/ppx.ml[141,4400+8]..[141,4400+9])
            [
              <case>
                pattern (src/ppx.ml[142,4416+4]..[147,4577+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[143,4422+6]..[143,4422+15]) ghost
                      pattern (src/ppx.ml[143,4422+6]..[143,4422+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[143,4422+6]..[143,4422+15])
                    "ptyp_loc" (src/ppx.ml[144,4461+5]..[144,4461+13]) ghost
                      pattern (src/ppx.ml[144,4461+5]..[144,4461+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[144,4461+5]..[144,4461+13])
                    "ptyp_loc_stack" (src/ppx.ml[145,4494+5]..[145,4494+19]) ghost
                      pattern (src/ppx.ml[145,4494+5]..[145,4494+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[145,4494+5]..[145,4494+19])
                    "ptyp_attributes" (src/ppx.ml[146,4537+5]..[146,4537+20]) ghost
                      pattern (src/ppx.ml[146,4537+5]..[146,4537+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[146,4537+5]..[146,4537+20])
                  ]
                expression (src/ppx.ml[148,4585+4]..[150,4644+80])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4585+4]..[148,4585+38])
                    Pexp_apply
                    expression (src/ppx.ml[148,4585+5]..[148,4585+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[148,4585+5]..[148,4585+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4585+28]..[148,4585+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[148,4585+28]..[148,4585+37])
                    ]
                  expression (src/ppx.ml[150,4644+4]..[150,4644+80])
                    Pexp_apply
                    expression (src/ppx.ml[150,4644+5]..[150,4644+18])
                      Pexp_ident "print_endline" (src/ppx.ml[150,4644+5]..[150,4644+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4644+19]..[150,4644+79])
                          Pexp_apply
                          expression (src/ppx.ml[150,4644+20]..[150,4644+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[150,4644+20]..[150,4644+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[150,4644+35]..[150,4644+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[150,4644+36]..[150,4644+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4644+37]..[150,4644+63]),None)
                                  expression (src/ppx.ml[150,4644+68]..[150,4644+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[150,4644+68]..[150,4644+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[151,4725+4]..[151,4725+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[151,4725+4]..[151,4725+26])
        expression (src/ppx.ml[151,4725+26]..[156,4841+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4725+26]..[151,4725+44])
            Ppat_constraint
            pattern (src/ppx.ml[151,4725+27]..[151,4725+28])
              Ppat_var "x" (src/ppx.ml[151,4725+27]..[151,4725+28])
            core_type (src/ppx.ml[151,4725+29]..[151,4725+43])
              Ptyp_constr "list" (src/ppx.ml[151,4725+39]..[151,4725+43])
              [
                core_type (src/ppx.ml[151,4725+29]..[151,4725+38])
                  Ptyp_constr "core_type" (src/ppx.ml[151,4725+29]..[151,4725+38])
                  []
              ]
          expression (src/ppx.ml[152,4772+2]..[156,4841+29])
            Pexp_match
            expression (src/ppx.ml[152,4772+8]..[152,4772+9])
              Pexp_ident "x" (src/ppx.ml[152,4772+8]..[152,4772+9])
            [
              <case>
                pattern (src/ppx.ml[153,4787+4]..[153,4787+6])
                  Ppat_construct "[]" (src/ppx.ml[153,4787+4]..[153,4787+6])
                  None
                expression (src/ppx.ml[153,4787+10]..[153,4787+12])
                  Pexp_construct "()" (src/ppx.ml[153,4787+10]..[153,4787+12])
                  None
              <case>
                pattern (src/ppx.ml[154,4800+4]..[154,4800+10])
                  Ppat_construct "::" (src/ppx.ml[154,4800+6]..[154,4800+8])
                  Some
                    []
                    pattern (src/ppx.ml[154,4800+4]..[154,4800+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[154,4800+4]..[154,4800+5])
                          Ppat_var "h" (src/ppx.ml[154,4800+4]..[154,4800+5])
                        pattern (src/ppx.ml[154,4800+9]..[154,4800+10])
                          Ppat_var "t" (src/ppx.ml[154,4800+9]..[154,4800+10])
                      ]
                expression (src/ppx.ml[155,4814+4]..[156,4841+29])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4814+4]..[155,4814+25])
                    Pexp_apply
                    expression (src/ppx.ml[155,4814+4]..[155,4814+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[155,4814+4]..[155,4814+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4814+22]..[155,4814+25])
                          Pexp_ident "h" (src/ppx.ml[155,4814+23]..[155,4814+24])
                    ]
                  expression (src/ppx.ml[156,4841+4]..[156,4841+29])
                    Pexp_apply
                    expression (src/ppx.ml[156,4841+4]..[156,4841+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[156,4841+4]..[156,4841+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4841+26]..[156,4841+29])
                          Pexp_ident "t" (src/ppx.ml[156,4841+27]..[156,4841+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[163,4885+0]..[170,5084+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4885+4]..[163,4885+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[163,4885+4]..[163,4885+31])
        expression (src/ppx.ml[163,4885+31]..[170,5084+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[163,4885+31]..[163,4885+34])
            Ppat_var "x" (src/ppx.ml[163,4885+32]..[163,4885+33])
          expression (src/ppx.ml[164,4922+2]..[170,5084+65])
            Pexp_match
            expression (src/ppx.ml[164,4922+8]..[164,4922+9])
              Pexp_ident "x" (src/ppx.ml[164,4922+8]..[164,4922+9])
            [
              <case>
                pattern (src/ppx.ml[165,4937+4]..[165,4937+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[165,4937+4]..[165,4937+15])
                  Some
                    []
                    pattern (src/ppx.ml[165,4937+16]..[165,4937+17])
                      Ppat_var "a" (src/ppx.ml[165,4937+16]..[165,4937+17])
                expression (src/ppx.ml[166,4958+4]..[167,4990+64])
                  Pexp_sequence
                  expression (src/ppx.ml[166,4958+4]..[166,4958+30])
                    Pexp_apply
                    expression (src/ppx.ml[166,4958+5]..[166,4958+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,4958+5]..[166,4958+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,4958+28]..[166,4958+29])
                          Pexp_ident "a" (src/ppx.ml[166,4958+28]..[166,4958+29])
                    ]
                  expression (src/ppx.ml[167,4990+4]..[167,4990+64])
                    Pexp_apply
                    expression (src/ppx.ml[167,4990+5]..[167,4990+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,4990+5]..[167,4990+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,4990+19]..[167,4990+63])
                          Pexp_apply
                          expression (src/ppx.ml[167,4990+20]..[167,4990+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,4990+20]..[167,4990+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,4990+35]..[167,4990+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,4990+36]..[167,4990+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,4990+37]..[167,4990+55]),None)
                                  expression (src/ppx.ml[167,4990+60]..[167,4990+61])
                                    Pexp_ident "a" (src/ppx.ml[167,4990+60]..[167,4990+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[169,5062+4]..[169,5062+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[169,5062+4]..[169,5062+16])
                  Some
                    []
                    pattern (src/ppx.ml[169,5062+17]..[169,5062+18])
                      Ppat_var "a" (src/ppx.ml[169,5062+17]..[169,5062+18])
                expression (src/ppx.ml[170,5084+4]..[170,5084+65])
                  Pexp_apply
                  expression (src/ppx.ml[170,5084+5]..[170,5084+18])
                    Pexp_ident "print_endline" (src/ppx.ml[170,5084+5]..[170,5084+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[170,5084+19]..[170,5084+64])
                        Pexp_apply
                        expression (src/ppx.ml[170,5084+20]..[170,5084+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[170,5084+20]..[170,5084+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[170,5084+35]..[170,5084+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[170,5084+36]..[170,5084+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5084+37]..[170,5084+56]),None)
                                expression (src/ppx.ml[170,5084+61]..[170,5084+62])
                                  Pexp_ident "a" (src/ppx.ml[170,5084+61]..[170,5084+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[172,5151+0]..[204,6127+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5151+8]..[172,5151+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[172,5151+8]..[172,5151+57])
        expression (src/ppx.ml[172,5151+57]..[204,6127+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5151+57]..[172,5151+60])
            Ppat_var "x" (src/ppx.ml[172,5151+58]..[172,5151+59])
          expression (src/ppx.ml[173,5214+2]..[204,6127+8])
            Pexp_match
            expression (src/ppx.ml[173,5214+8]..[173,5214+9])
              Pexp_ident "x" (src/ppx.ml[173,5214+8]..[173,5214+9])
            [
              <case>
                pattern (src/ppx.ml[174,5229+4]..[174,5229+6])
                  Ppat_construct "[]" (src/ppx.ml[174,5229+4]..[174,5229+6])
                  None
                expression (src/ppx.ml[174,5229+10]..[174,5229+12])
                  Pexp_construct "()" (src/ppx.ml[174,5229+10]..[174,5229+12])
                  None
              <case>
                pattern (src/ppx.ml[175,5242+4]..[175,5242+10])
                  Ppat_construct "::" (src/ppx.ml[175,5242+6]..[175,5242+8])
                  Some
                    []
                    pattern (src/ppx.ml[175,5242+4]..[175,5242+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[175,5242+4]..[175,5242+5])
                          Ppat_var "h" (src/ppx.ml[175,5242+4]..[175,5242+5])
                        pattern (src/ppx.ml[175,5242+9]..[175,5242+10])
                          Ppat_var "t" (src/ppx.ml[175,5242+9]..[175,5242+10])
                      ]
                expression (src/ppx.ml[177,5321+4]..[204,6127+8])
                  Pexp_match
                  expression (src/ppx.ml[177,5321+10]..[177,5321+11])
                    Pexp_ident "h" (src/ppx.ml[177,5321+10]..[177,5321+11])
                  [
                    <case>
                      pattern (src/ppx.ml[178,5338+5]..[185,5576+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[179,5345+6]..[179,5345+14]) ghost
                            pattern (src/ppx.ml[179,5345+6]..[179,5345+14])
                              Ppat_var "pcd_name" (src/ppx.ml[179,5345+6]..[179,5345+14])
                          "pcd_vars" (src/ppx.ml[180,5379+6]..[180,5379+14]) ghost
                            pattern (src/ppx.ml[180,5379+6]..[180,5379+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[180,5379+6]..[180,5379+14])
                          "pcd_args" (src/ppx.ml[181,5418+6]..[181,5418+14]) ghost
                            pattern (src/ppx.ml[181,5418+6]..[181,5418+14])
                              Ppat_var "pcd_args" (src/ppx.ml[181,5418+6]..[181,5418+14])
                          "pcd_res" (src/ppx.ml[182,5463+6]..[182,5463+13]) ghost
                            pattern (src/ppx.ml[182,5463+6]..[182,5463+13])
                              Ppat_var "pcd_res" (src/ppx.ml[182,5463+6]..[182,5463+13])
                          "pcd_loc" (src/ppx.ml[183,5502+6]..[183,5502+13]) ghost
                            pattern (src/ppx.ml[183,5502+6]..[183,5502+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[183,5502+6]..[183,5502+13])
                          "pcd_attributes" (src/ppx.ml[184,5535+6]..[184,5535+20]) ghost
                            pattern (src/ppx.ml[184,5535+6]..[184,5535+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[184,5535+6]..[184,5535+20])
                        ]
                      expression (src/ppx.ml[188,5658+6]..[204,6127+8])
                        Pexp_sequence
                        expression (src/ppx.ml[188,5658+6]..[188,5658+43])
                          Pexp_apply
                          expression (src/ppx.ml[188,5658+6]..[188,5658+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[188,5658+6]..[188,5658+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[188,5658+33]..[188,5658+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[188,5658+34]..[188,5658+42])
                          ]
                        expression (src/ppx.ml[189,5703+6]..[204,6127+8])
                          Pexp_sequence
                          expression (src/ppx.ml[189,5703+6]..[202,6048+16])
                            Pexp_apply
                            expression (src/ppx.ml[189,5703+7]..[189,5703+20])
                              Pexp_ident "print_endline" (src/ppx.ml[189,5703+7]..[189,5703+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[189,5703+21]..[202,6048+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[189,5703+22]..[189,5703+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[189,5703+22]..[189,5703+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[189,5703+37]..[202,6048+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[190,5742+11]..[190,5742+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[190,5742+12]..[190,5742+36]),None)
                                          expression (src/ppx.ml[191,5781+15]..[191,5781+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[191,5781+15]..[191,5781+23])
                                          expression (src/ppx.ml[192,5806+15]..[192,5806+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[192,5806+16]..[192,5806+20]),None)
                                          expression (src/ppx.ml[193,5829+15]..[193,5829+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[193,5829+15]..[193,5829+23])
                                          expression (src/ppx.ml[194,5854+15]..[194,5854+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[194,5854+16]..[194,5854+20]),None)
                                          expression (src/ppx.ml[195,5877+15]..[195,5877+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[195,5877+15]..[195,5877+23])
                                          expression (src/ppx.ml[196,5902+15]..[196,5902+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[196,5902+16]..[196,5902+19]),None)
                                          expression (src/ppx.ml[197,5924+15]..[197,5924+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[197,5924+15]..[197,5924+22])
                                          expression (src/ppx.ml[198,5948+15]..[198,5948+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[198,5948+16]..[198,5948+19]),None)
                                          expression (src/ppx.ml[199,5970+15]..[199,5970+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[199,5970+15]..[199,5970+22])
                                          expression (src/ppx.ml[200,5994+15]..[200,5994+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[200,5994+16]..[200,5994+21]),None)
                                          expression (src/ppx.ml[201,6018+15]..[201,6018+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[201,6018+15]..[201,6018+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[203,6066+6]..[204,6127+8])
                            Pexp_sequence
                            expression (src/ppx.ml[203,6066+6]..[203,6066+59])
                              Pexp_apply
                              expression (src/ppx.ml[203,6066+7]..[203,6066+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[203,6066+7]..[203,6066+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[203,6066+57]..[203,6066+58])
                                    Pexp_ident "t" (src/ppx.ml[203,6066+57]..[203,6066+58])
                              ]
                            expression (src/ppx.ml[204,6127+6]..[204,6127+8])
                              Pexp_construct "()" (src/ppx.ml[204,6127+6]..[204,6127+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[206,6139+0]..[217,6536+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6139+4]..[206,6139+16])
          Ppat_var "process_kind" (src/ppx.ml[206,6139+4]..[206,6139+16])
        expression (src/ppx.ml[206,6139+16]..[217,6536+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[206,6139+16]..[206,6139+19])
            Ppat_var "x" (src/ppx.ml[206,6139+17]..[206,6139+18])
          expression (src/ppx.ml[207,6161+2]..[217,6536+77])
            Pexp_match
            expression (src/ppx.ml[207,6161+8]..[207,6161+9])
              Pexp_ident "x" (src/ppx.ml[207,6161+8]..[207,6161+9])
            [
              <case>
                pattern (src/ppx.ml[209,6198+4]..[209,6198+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[209,6198+4]..[209,6198+18])
                  None
                expression (src/ppx.ml[209,6198+23]..[209,6198+81])
                  Pexp_apply
                  expression (src/ppx.ml[209,6198+24]..[209,6198+37])
                    Pexp_ident "print_endline" (src/ppx.ml[209,6198+24]..[209,6198+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6198+38]..[209,6198+80])
                        Pexp_apply
                        expression (src/ppx.ml[209,6198+39]..[209,6198+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[209,6198+39]..[209,6198+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[209,6198+54]..[209,6198+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6198+56]..[209,6198+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[210,6280+4]..[210,6280+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[210,6280+4]..[210,6280+17])
                  Some
                    []
                    pattern (src/ppx.ml[210,6280+18]..[210,6280+19])
                      Ppat_var "a" (src/ppx.ml[210,6280+18]..[210,6280+19])
                expression (src/ppx.ml[211,6303+4]..[212,6362+65])
                  Pexp_sequence
                  expression (src/ppx.ml[211,6303+4]..[211,6303+57])
                    Pexp_apply
                    expression (src/ppx.ml[211,6303+5]..[211,6303+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[211,6303+5]..[211,6303+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[211,6303+55]..[211,6303+56])
                          Pexp_ident "a" (src/ppx.ml[211,6303+55]..[211,6303+56])
                    ]
                  expression (src/ppx.ml[212,6362+4]..[212,6362+65])
                    Pexp_apply
                    expression (src/ppx.ml[212,6362+5]..[212,6362+18])
                      Pexp_ident "print_endline" (src/ppx.ml[212,6362+5]..[212,6362+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[212,6362+19]..[212,6362+64])
                          Pexp_apply
                          expression (src/ppx.ml[212,6362+20]..[212,6362+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[212,6362+20]..[212,6362+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[212,6362+35]..[212,6362+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[212,6362+36]..[212,6362+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6362+37]..[212,6362+57]),None)
                                  expression (src/ppx.ml[212,6362+61]..[212,6362+62])
                                    Pexp_ident "a" (src/ppx.ml[212,6362+61]..[212,6362+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[215,6475+5]..[215,6475+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[215,6475+5]..[215,6475+17])
                  Some
                    []
                    pattern (src/ppx.ml[215,6475+18]..[215,6475+19])
                      Ppat_var "a" (src/ppx.ml[215,6475+18]..[215,6475+19])
                expression (src/ppx.ml[216,6503+5]..[216,6503+32])
                  Pexp_apply
                  expression (src/ppx.ml[216,6503+5]..[216,6503+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[216,6503+5]..[216,6503+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[216,6503+29]..[216,6503+32])
                        Pexp_ident "a" (src/ppx.ml[216,6503+30]..[216,6503+31])
                  ]
              <case>
                pattern (src/ppx.ml[217,6536+5]..[217,6536+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[217,6536+5]..[217,6536+15])
                  None
                expression (src/ppx.ml[217,6536+19]..[217,6536+77])
                  Pexp_apply
                  expression (src/ppx.ml[217,6536+20]..[217,6536+33])
                    Pexp_ident "print_endline" (src/ppx.ml[217,6536+20]..[217,6536+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[217,6536+34]..[217,6536+76])
                        Pexp_apply
                        expression (src/ppx.ml[217,6536+35]..[217,6536+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[217,6536+35]..[217,6536+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[217,6536+50]..[217,6536+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6536+52]..[217,6536+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6615+0]..[240,7621+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6615+4]..[219,6615+19])
          Ppat_var "print_type_decl" (src/ppx.ml[219,6615+4]..[219,6615+19])
        expression (src/ppx.ml[219,6615+19]..[240,7621+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6615+19]..[219,6615+22])
            Ppat_var "x" (src/ppx.ml[219,6615+20]..[219,6615+21])
          expression (src/ppx.ml[220,6640+2]..[240,7621+38])
            Pexp_match
            expression (src/ppx.ml[220,6640+8]..[220,6640+9])
              Pexp_ident "x" (src/ppx.ml[220,6640+8]..[220,6640+9])
            [
              <case>
                pattern (src/ppx.ml[221,6655+4]..[230,7036+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[222,6661+6]..[222,6661+16]) ghost
                      pattern (src/ppx.ml[222,6661+6]..[222,6661+16])
                        Ppat_var "ptype_name" (src/ppx.ml[222,6661+6]..[222,6661+16])
                    "ptype_params" (src/ppx.ml[223,6698+6]..[223,6698+18]) ghost
                      pattern (src/ppx.ml[223,6698+6]..[223,6698+18])
                        Ppat_var "ptype_params" (src/ppx.ml[223,6698+6]..[223,6698+18])
                    "ptype_cstrs" (src/ppx.ml[224,6770+6]..[224,6770+17]) ghost
                      pattern (src/ppx.ml[224,6770+6]..[224,6770+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[224,6770+6]..[224,6770+17])
                    "ptype_kind" (src/ppx.ml[225,6839+6]..[225,6839+16]) ghost
                      pattern (src/ppx.ml[225,6839+6]..[225,6839+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[225,6839+6]..[225,6839+16])
                    "ptype_private" (src/ppx.ml[226,6876+6]..[226,6876+19]) ghost
                      pattern (src/ppx.ml[226,6876+6]..[226,6876+19])
                        Ppat_var "ptype_private" (src/ppx.ml[226,6876+6]..[226,6876+19])
                    "ptype_manifest" (src/ppx.ml[227,6917+6]..[227,6917+20]) ghost
                      pattern (src/ppx.ml[227,6917+6]..[227,6917+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[227,6917+6]..[227,6917+20])
                    "ptype_attributes" (src/ppx.ml[228,6964+6]..[228,6964+22]) ghost
                      pattern (src/ppx.ml[228,6964+6]..[228,6964+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[228,6964+6]..[228,6964+22])
                    "ptype_loc" (src/ppx.ml[229,7005+6]..[229,7005+15]) ghost
                      pattern (src/ppx.ml[229,7005+6]..[229,7005+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[229,7005+6]..[229,7005+15])
                  ]
                expression (src/ppx.ml[231,7045+4]..[240,7621+38])
                  Pexp_sequence
                  expression (src/ppx.ml[231,7045+4]..[231,7045+69])
                    Pexp_apply
                    expression (src/ppx.ml[231,7045+5]..[231,7045+18])
                      Pexp_ident "print_endline" (src/ppx.ml[231,7045+5]..[231,7045+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[231,7045+19]..[231,7045+68])
                          Pexp_apply
                          expression (src/ppx.ml[231,7045+20]..[231,7045+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[231,7045+20]..[231,7045+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[231,7045+35]..[231,7045+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[231,7045+36]..[231,7045+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[231,7045+37]..[231,7045+53]),None)
                                  expression (src/ppx.ml[231,7045+56]..[231,7045+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[231,7045+56]..[231,7045+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[232,7116+4]..[240,7621+38])
                    Pexp_sequence
                    expression (src/ppx.ml[232,7116+4]..[232,7116+72])
                      Pexp_apply
                      expression (src/ppx.ml[232,7116+5]..[232,7116+18])
                        Pexp_ident "print_endline" (src/ppx.ml[232,7116+5]..[232,7116+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[232,7116+19]..[232,7116+71])
                            Pexp_apply
                            expression (src/ppx.ml[232,7116+20]..[232,7116+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[232,7116+20]..[232,7116+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[232,7116+35]..[232,7116+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[232,7116+36]..[232,7116+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[232,7116+37]..[232,7116+54]),None)
                                    expression (src/ppx.ml[232,7116+57]..[232,7116+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[232,7116+57]..[232,7116+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[233,7190+4]..[240,7621+38])
                      Pexp_sequence
                      expression (src/ppx.ml[233,7190+4]..[233,7190+66])
                        Pexp_apply
                        expression (src/ppx.ml[233,7190+5]..[233,7190+18])
                          Pexp_ident "print_endline" (src/ppx.ml[233,7190+5]..[233,7190+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[233,7190+19]..[233,7190+65])
                              Pexp_apply
                              expression (src/ppx.ml[233,7190+20]..[233,7190+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[233,7190+20]..[233,7190+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[233,7190+35]..[233,7190+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[233,7190+36]..[233,7190+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[233,7190+37]..[233,7190+49]),None)
                                      expression (src/ppx.ml[233,7190+52]..[233,7190+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[233,7190+52]..[233,7190+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7258+4]..[240,7621+38])
                        Pexp_sequence
                        expression (src/ppx.ml[234,7258+4]..[234,7258+63])
                          Pexp_apply
                          expression (src/ppx.ml[234,7258+5]..[234,7258+18])
                            Pexp_ident "print_endline" (src/ppx.ml[234,7258+5]..[234,7258+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[234,7258+19]..[234,7258+62])
                                Pexp_apply
                                expression (src/ppx.ml[234,7258+20]..[234,7258+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[234,7258+20]..[234,7258+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[234,7258+35]..[234,7258+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[234,7258+36]..[234,7258+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[234,7258+37]..[234,7258+48]),None)
                                        expression (src/ppx.ml[234,7258+50]..[234,7258+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[234,7258+50]..[234,7258+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7323+4]..[240,7621+38])
                          Pexp_sequence
                          expression (src/ppx.ml[235,7323+4]..[235,7323+29])
                            Pexp_apply
                            expression (src/ppx.ml[235,7323+5]..[235,7323+17])
                              Pexp_ident "process_kind" (src/ppx.ml[235,7323+5]..[235,7323+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[235,7323+18]..[235,7323+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[235,7323+18]..[235,7323+28])
                            ]
                          expression (src/ppx.ml[236,7354+4]..[240,7621+38])
                            Pexp_apply
                            expression (src/ppx.ml[236,7354+5]..[236,7354+18])
                              Pexp_ident "print_endline" (src/ppx.ml[236,7354+5]..[236,7354+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[236,7354+19]..[240,7621+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[236,7354+20]..[236,7354+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[236,7354+20]..[236,7354+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[236,7354+35]..[240,7621+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[236,7354+36]..[236,7354+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[236,7354+37]..[236,7354+51]),None)
                                          expression (src/ppx.ml[236,7354+55]..[236,7354+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[236,7354+55]..[236,7354+68])
                                          expression (src/ppx.ml[237,7424+36]..[237,7424+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[237,7424+37]..[237,7424+51]),None)
                                          expression (src/ppx.ml[237,7424+54]..[237,7424+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[237,7424+54]..[237,7424+68])
                                          expression (src/ppx.ml[238,7494+36]..[238,7494+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[238,7494+37]..[238,7494+47]),None)
                                          expression (src/ppx.ml[238,7494+50]..[238,7494+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[238,7494+50]..[238,7494+66])
                                          expression (src/ppx.ml[239,7562+36]..[239,7562+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[239,7562+37]..[239,7562+46]),None)
                                          expression (src/ppx.ml[239,7562+49]..[239,7562+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[239,7562+49]..[239,7562+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[242,7665+0]..[248,7800+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7665+8]..[242,7665+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[242,7665+8]..[242,7665+30])
        expression (src/ppx.ml[242,7665+30]..[248,7800+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[242,7665+30]..[242,7665+33])
            Ppat_var "x" (src/ppx.ml[242,7665+31]..[242,7665+32])
          expression (src/ppx.ml[243,7701+2]..[248,7800+6])
            Pexp_match
            expression (src/ppx.ml[243,7701+8]..[243,7701+9])
              Pexp_ident "x" (src/ppx.ml[243,7701+8]..[243,7701+9])
            [
              <case>
                pattern (src/ppx.ml[244,7716+4]..[244,7716+6])
                  Ppat_construct "[]" (src/ppx.ml[244,7716+4]..[244,7716+6])
                  None
                expression (src/ppx.ml[244,7716+10]..[244,7716+12])
                  Pexp_construct "()" (src/ppx.ml[244,7716+10]..[244,7716+12])
                  None
              <case>
                pattern (src/ppx.ml[245,7729+4]..[245,7729+10])
                  Ppat_construct "::" (src/ppx.ml[245,7729+6]..[245,7729+8])
                  Some
                    []
                    pattern (src/ppx.ml[245,7729+4]..[245,7729+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[245,7729+4]..[245,7729+5])
                          Ppat_var "h" (src/ppx.ml[245,7729+4]..[245,7729+5])
                        pattern (src/ppx.ml[245,7729+9]..[245,7729+10])
                          Ppat_var "t" (src/ppx.ml[245,7729+9]..[245,7729+10])
                      ]
                expression (src/ppx.ml[246,7743+4]..[248,7800+6])
                  Pexp_sequence
                  expression (src/ppx.ml[246,7743+4]..[246,7743+23])
                    Pexp_apply
                    expression (src/ppx.ml[246,7743+5]..[246,7743+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[246,7743+5]..[246,7743+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[246,7743+21]..[246,7743+22])
                          Pexp_ident "h" (src/ppx.ml[246,7743+21]..[246,7743+22])
                    ]
                  expression (src/ppx.ml[247,7768+4]..[248,7800+6])
                    Pexp_sequence
                    expression (src/ppx.ml[247,7768+4]..[247,7768+30])
                      Pexp_apply
                      expression (src/ppx.ml[247,7768+5]..[247,7768+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[247,7768+5]..[247,7768+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[247,7768+28]..[247,7768+29])
                            Pexp_ident "t" (src/ppx.ml[247,7768+28]..[247,7768+29])
                      ]
                    expression (src/ppx.ml[248,7800+4]..[248,7800+6])
                      Pexp_construct "()" (src/ppx.ml[248,7800+4]..[248,7800+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[250,7812+0]..[276,9776+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7812+4]..[250,7812+13])
          Ppat_var "printdesc" (src/ppx.ml[250,7812+4]..[250,7812+13])
        expression (src/ppx.ml[250,7812+13]..[276,9776+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[250,7812+13]..[250,7812+37])
            Ppat_constraint
            pattern (src/ppx.ml[250,7812+14]..[250,7812+15])
              Ppat_var "x" (src/ppx.ml[250,7812+14]..[250,7812+15])
            core_type (src/ppx.ml[250,7812+17]..[250,7812+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[250,7812+17]..[250,7812+36])
              []
          expression (src/ppx.ml[250,7812+38]..[276,9776+128])
            Pexp_constraint
            expression (src/ppx.ml[251,7858+2]..[276,9776+128])
              Pexp_sequence
              expression (src/ppx.ml[251,7858+2]..[251,7858+68])
                Pexp_apply
                expression (src/ppx.ml[251,7858+3]..[251,7858+16])
                  Pexp_ident "print_endline" (src/ppx.ml[251,7858+3]..[251,7858+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[251,7858+17]..[251,7858+67])
                      Pexp_apply
                      expression (src/ppx.ml[251,7858+18]..[251,7858+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[251,7858+18]..[251,7858+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7858+33]..[251,7858+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[251,7858+34]..[251,7858+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7858+35]..[251,7858+61]),None)
                              expression (src/ppx.ml[251,7858+64]..[251,7858+65])
                                Pexp_ident "x" (src/ppx.ml[251,7858+64]..[251,7858+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[252,7928+2]..[276,9776+128])
                Pexp_match
                expression (src/ppx.ml[252,7928+8]..[252,7928+9])
                  Pexp_ident "x" (src/ppx.ml[252,7928+8]..[252,7928+9])
                [
                  <case>
                    pattern (src/ppx.ml[253,7943+4]..[253,7943+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[253,7943+4]..[253,7943+13])
                      Some
                        []
                        pattern (src/ppx.ml[253,7943+14]..[253,7943+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,7943+15]..[253,7943+25])
                              Ppat_var "expression" (src/ppx.ml[253,7943+15]..[253,7943+25])
                            pattern (src/ppx.ml[253,7943+26]..[253,7943+36])
                              Ppat_var "attributes" (src/ppx.ml[253,7943+26]..[253,7943+36])
                          ]
                    expression (src/ppx.ml[253,7943+41]..[253,7943+117])
                      Pexp_apply
                      expression (src/ppx.ml[253,7943+42]..[253,7943+55])
                        Pexp_ident "print_endline" (src/ppx.ml[253,7943+42]..[253,7943+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7943+56]..[253,7943+116])
                            Pexp_apply
                            expression (src/ppx.ml[253,7943+57]..[253,7943+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,7943+57]..[253,7943+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7943+72]..[253,7943+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,7943+73]..[253,7943+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7943+74]..[253,7943+90]),None)
                                    expression (src/ppx.ml[253,7943+93]..[253,7943+103])
                                      Pexp_ident "expression" (src/ppx.ml[253,7943+93]..[253,7943+103])
                                    expression (src/ppx.ml[253,7943+104]..[253,7943+114])
                                      Pexp_ident "attributes" (src/ppx.ml[253,7943+104]..[253,7943+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8081+4]..[255,8081+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[255,8081+4]..[255,8081+14])
                      Some
                        []
                        pattern (src/ppx.ml[255,8081+15]..[255,8081+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8081+16]..[255,8081+24])
                              Ppat_var "rec_flag" (src/ppx.ml[255,8081+16]..[255,8081+24])
                            pattern (src/ppx.ml[255,8081+26]..[255,8081+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[255,8081+26]..[255,8081+44])
                          ]
                    expression (src/ppx.ml[255,8081+48]..[256,8215+48])
                      Pexp_sequence
                      expression (src/ppx.ml[255,8081+48]..[255,8081+132])
                        Pexp_apply
                        expression (src/ppx.ml[255,8081+49]..[255,8081+62])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8081+49]..[255,8081+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8081+63]..[255,8081+131])
                              Pexp_apply
                              expression (src/ppx.ml[255,8081+64]..[255,8081+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8081+64]..[255,8081+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8081+79]..[255,8081+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8081+80]..[255,8081+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8081+81]..[255,8081+98]),None)
                                      expression (src/ppx.ml[255,8081+101]..[255,8081+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8081+101]..[255,8081+109])
                                      expression (src/ppx.ml[255,8081+111]..[255,8081+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[255,8081+111]..[255,8081+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[256,8215+4]..[256,8215+48])
                        Pexp_apply
                        expression (src/ppx.ml[256,8215+4]..[256,8215+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[256,8215+4]..[256,8215+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[256,8215+28]..[256,8215+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[256,8215+29]..[256,8215+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[257,8264+4]..[257,8264+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[257,8264+4]..[257,8264+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8264+19]..[257,8264+36])
                          Ppat_var "value_description" (src/ppx.ml[257,8264+19]..[257,8264+36])
                    expression (src/ppx.ml[257,8264+39]..[257,8264+116])
                      Pexp_apply
                      expression (src/ppx.ml[257,8264+40]..[257,8264+53])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8264+40]..[257,8264+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8264+54]..[257,8264+115])
                            Pexp_apply
                            expression (src/ppx.ml[257,8264+55]..[257,8264+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8264+55]..[257,8264+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8264+70]..[257,8264+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8264+71]..[257,8264+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8264+72]..[257,8264+93]),None)
                                    expression (src/ppx.ml[257,8264+96]..[257,8264+113])
                                      Pexp_ident "value_description" (src/ppx.ml[257,8264+96]..[257,8264+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8382+4]..[259,8382+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[259,8382+4]..[259,8382+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8382+14]..[259,8382+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[259,8382+15]..[259,8382+23])
                              Ppat_var "rec_flag" (src/ppx.ml[259,8382+15]..[259,8382+23])
                            pattern (src/ppx.ml[259,8382+25]..[259,8382+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[259,8382+25]..[259,8382+46])
                          ]
                    expression (src/ppx.ml[261,8461+4]..[262,8512+90])
                      Pexp_sequence
                      expression (src/ppx.ml[261,8461+4]..[261,8461+49])
                        Pexp_apply
                        expression (src/ppx.ml[261,8461+4]..[261,8461+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[261,8461+4]..[261,8461+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[261,8461+26]..[261,8461+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[261,8461+27]..[261,8461+48])
                        ]
                      expression (src/ppx.ml[262,8512+4]..[262,8512+90])
                        Pexp_apply
                        expression (src/ppx.ml[262,8512+5]..[262,8512+18])
                          Pexp_ident "print_endline" (src/ppx.ml[262,8512+5]..[262,8512+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[262,8512+19]..[262,8512+89])
                              Pexp_apply
                              expression (src/ppx.ml[262,8512+20]..[262,8512+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[262,8512+20]..[262,8512+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[262,8512+35]..[262,8512+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[262,8512+36]..[262,8512+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8512+37]..[262,8512+53]),None)
                                      expression (src/ppx.ml[262,8512+56]..[262,8512+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[262,8512+56]..[262,8512+64])
                                      expression (src/ppx.ml[262,8512+66]..[262,8512+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[262,8512+66]..[262,8512+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[265,8605+4]..[265,8605+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[265,8605+4]..[265,8605+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8605+17]..[265,8605+31])
                          Ppat_var "type_extension" (src/ppx.ml[265,8605+17]..[265,8605+31])
                    expression (src/ppx.ml[265,8605+34]..[265,8605+105])
                      Pexp_apply
                      expression (src/ppx.ml[265,8605+35]..[265,8605+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8605+35]..[265,8605+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8605+49]..[265,8605+104])
                            Pexp_apply
                            expression (src/ppx.ml[265,8605+50]..[265,8605+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8605+50]..[265,8605+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8605+65]..[265,8605+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8605+66]..[265,8605+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8605+67]..[265,8605+85]),None)
                                    expression (src/ppx.ml[265,8605+88]..[265,8605+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[265,8605+88]..[265,8605+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8711+4]..[266,8711+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[266,8711+4]..[266,8711+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8711+19]..[266,8711+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[266,8711+19]..[266,8711+40])
                    expression (src/ppx.ml[266,8711+43]..[266,8711+124])
                      Pexp_apply
                      expression (src/ppx.ml[266,8711+44]..[266,8711+57])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8711+44]..[266,8711+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8711+58]..[266,8711+123])
                            Pexp_apply
                            expression (src/ppx.ml[266,8711+59]..[266,8711+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8711+59]..[266,8711+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8711+74]..[266,8711+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8711+75]..[266,8711+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8711+76]..[266,8711+97]),None)
                                    expression (src/ppx.ml[266,8711+100]..[266,8711+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[266,8711+100]..[266,8711+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,8836+4]..[267,8836+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[267,8836+4]..[267,8836+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8836+17]..[267,8836+31])
                          Ppat_var "module_binding" (src/ppx.ml[267,8836+17]..[267,8836+31])
                    expression (src/ppx.ml[267,8836+34]..[267,8836+104])
                      Pexp_apply
                      expression (src/ppx.ml[267,8836+35]..[267,8836+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8836+35]..[267,8836+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8836+49]..[267,8836+103])
                            Pexp_apply
                            expression (src/ppx.ml[267,8836+50]..[267,8836+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8836+50]..[267,8836+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8836+65]..[267,8836+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8836+66]..[267,8836+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8836+67]..[267,8836+85]),None)
                                    expression (src/ppx.ml[267,8836+87]..[267,8836+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[267,8836+87]..[267,8836+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8941+4]..[268,8941+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[268,8941+4]..[268,8941+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8941+20]..[268,8941+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[268,8941+20]..[268,8941+39])
                    expression (src/ppx.ml[268,8941+42]..[268,8941+121])
                      Pexp_apply
                      expression (src/ppx.ml[268,8941+43]..[268,8941+56])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8941+43]..[268,8941+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8941+57]..[268,8941+120])
                            Pexp_apply
                            expression (src/ppx.ml[268,8941+58]..[268,8941+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8941+58]..[268,8941+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8941+73]..[268,8941+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8941+74]..[268,8941+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8941+75]..[268,8941+96]),None)
                                    expression (src/ppx.ml[268,8941+99]..[268,8941+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[268,8941+99]..[268,8941+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9063+4]..[269,9063+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[269,9063+4]..[269,9063+16])
                      Some
                        []
                        pattern (src/ppx.ml[269,9063+17]..[269,9063+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[269,9063+17]..[269,9063+40])
                    expression (src/ppx.ml[269,9063+43]..[269,9063+124])
                      Pexp_apply
                      expression (src/ppx.ml[269,9063+44]..[269,9063+57])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9063+44]..[269,9063+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9063+58]..[269,9063+123])
                            Pexp_apply
                            expression (src/ppx.ml[269,9063+59]..[269,9063+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9063+59]..[269,9063+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9063+74]..[269,9063+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9063+75]..[269,9063+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9063+76]..[269,9063+95]),None)
                                    expression (src/ppx.ml[269,9063+98]..[269,9063+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[269,9063+98]..[269,9063+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9205+4]..[271,9205+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[271,9205+4]..[271,9205+13])
                      Some
                        []
                        pattern (src/ppx.ml[271,9205+14]..[271,9205+30])
                          Ppat_var "open_description" (src/ppx.ml[271,9205+14]..[271,9205+30])
                    expression (src/ppx.ml[271,9205+33]..[271,9205+103])
                      Pexp_apply
                      expression (src/ppx.ml[271,9205+34]..[271,9205+47])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9205+34]..[271,9205+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9205+48]..[271,9205+102])
                            Pexp_apply
                            expression (src/ppx.ml[271,9205+49]..[271,9205+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9205+49]..[271,9205+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9205+64]..[271,9205+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9205+65]..[271,9205+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[271,9205+66]..[271,9205+81]),None)
                                    expression (src/ppx.ml[271,9205+84]..[271,9205+100])
                                      Pexp_ident "open_description" (src/ppx.ml[271,9205+84]..[271,9205+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9309+4]..[272,9309+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[272,9309+4]..[272,9309+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,9309+15]..[272,9309+36])
                          Ppat_var "class_declarations" (src/ppx.ml[272,9309+16]..[272,9309+34])
                    expression (src/ppx.ml[272,9309+39]..[272,9309+113])
                      Pexp_apply
                      expression (src/ppx.ml[272,9309+40]..[272,9309+53])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9309+40]..[272,9309+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9309+54]..[272,9309+112])
                            Pexp_apply
                            expression (src/ppx.ml[272,9309+55]..[272,9309+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9309+55]..[272,9309+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9309+70]..[272,9309+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9309+71]..[272,9309+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9309+72]..[272,9309+89]),None)
                                    expression (src/ppx.ml[272,9309+92]..[272,9309+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[272,9309+92]..[272,9309+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9423+4]..[273,9423+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[273,9423+4]..[273,9423+19])
                      Some
                        []
                        pattern (src/ppx.ml[273,9423+20]..[273,9423+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[273,9423+21]..[273,9423+44])
                    expression (src/ppx.ml[273,9423+48]..[273,9423+132])
                      Pexp_apply
                      expression (src/ppx.ml[273,9423+49]..[273,9423+62])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9423+49]..[273,9423+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9423+63]..[273,9423+131])
                            Pexp_apply
                            expression (src/ppx.ml[273,9423+64]..[273,9423+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9423+64]..[273,9423+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9423+79]..[273,9423+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9423+80]..[273,9423+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9423+81]..[273,9423+103]),None)
                                    expression (src/ppx.ml[273,9423+106]..[273,9423+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[273,9423+106]..[273,9423+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9556+4]..[274,9556+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[274,9556+4]..[274,9556+16])
                      Some
                        []
                        pattern (src/ppx.ml[274,9556+18]..[274,9556+39])
                          Ppat_var "include_declaration" (src/ppx.ml[274,9556+19]..[274,9556+38])
                    expression (src/ppx.ml[274,9556+41]..[274,9556+117])
                      Pexp_apply
                      expression (src/ppx.ml[274,9556+42]..[274,9556+55])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9556+42]..[274,9556+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9556+56]..[274,9556+116])
                            Pexp_apply
                            expression (src/ppx.ml[274,9556+57]..[274,9556+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9556+57]..[274,9556+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9556+72]..[274,9556+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9556+73]..[274,9556+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9556+74]..[274,9556+93]),None)
                                    expression (src/ppx.ml[274,9556+95]..[274,9556+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[274,9556+95]..[274,9556+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9674+4]..[275,9674+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[275,9674+4]..[275,9674+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,9674+19]..[275,9674+30])
                          Ppat_var "attribute" (src/ppx.ml[275,9674+20]..[275,9674+29])
                    expression (src/ppx.ml[275,9674+32]..[275,9674+101])
                      Pexp_apply
                      expression (src/ppx.ml[275,9674+33]..[275,9674+46])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9674+33]..[275,9674+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9674+47]..[275,9674+100])
                            Pexp_apply
                            expression (src/ppx.ml[275,9674+48]..[275,9674+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9674+48]..[275,9674+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9674+63]..[275,9674+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9674+64]..[275,9674+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9674+65]..[275,9674+86]),None)
                                    expression (src/ppx.ml[275,9674+89]..[275,9674+98])
                                      Pexp_ident "attribute" (src/ppx.ml[275,9674+89]..[275,9674+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9776+4]..[276,9776+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[276,9776+4]..[276,9776+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,9776+19]..[276,9776+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,9776+21]..[276,9776+30])
                              Ppat_var "extension" (src/ppx.ml[276,9776+21]..[276,9776+30])
                            pattern (src/ppx.ml[276,9776+33]..[276,9776+43])
                              Ppat_var "attributes" (src/ppx.ml[276,9776+33]..[276,9776+43])
                          ]
                    expression (src/ppx.ml[276,9776+46]..[276,9776+128])
                      Pexp_apply
                      expression (src/ppx.ml[276,9776+47]..[276,9776+60])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9776+47]..[276,9776+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9776+61]..[276,9776+127])
                            Pexp_apply
                            expression (src/ppx.ml[276,9776+62]..[276,9776+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9776+62]..[276,9776+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9776+77]..[276,9776+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9776+78]..[276,9776+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9776+79]..[276,9776+100]),None)
                                    expression (src/ppx.ml[276,9776+103]..[276,9776+112])
                                      Pexp_ident "extension" (src/ppx.ml[276,9776+103]..[276,9776+112])
                                    expression (src/ppx.ml[276,9776+115]..[276,9776+125])
                                      Pexp_ident "attributes" (src/ppx.ml[276,9776+115]..[276,9776+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[250,7812+39]..[250,7812+43])
              Ptyp_constr "unit" (src/ppx.ml[250,7812+39]..[250,7812+43])
              []
    ]
  structure_item (src/ppx.ml[278,9906+0]..[278,9906+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9906+4]..[278,9906+7])
          Ppat_var "foo" (src/ppx.ml[278,9906+4]..[278,9906+7])
        expression (src/ppx.ml[278,9906+10]..[278,9906+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[280,9921+0]..[288,10140+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9921+4]..[280,9921+12])
          Ppat_var "printone" (src/ppx.ml[280,9921+4]..[280,9921+12])
        expression (src/ppx.ml[280,9921+13]..[288,10140+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[280,9921+13]..[280,9921+34])
            Ppat_constraint
            pattern (src/ppx.ml[280,9921+14]..[280,9921+15])
              Ppat_var "x" (src/ppx.ml[280,9921+14]..[280,9921+15])
            core_type (src/ppx.ml[280,9921+18]..[280,9921+32])
              Ptyp_constr "structure_item" (src/ppx.ml[280,9921+18]..[280,9921+32])
              []
          expression (src/ppx.ml[280,9921+35]..[288,10140+6])
            Pexp_constraint
            expression (src/ppx.ml[281,9964+2]..[288,10140+6])
              Pexp_match
              expression (src/ppx.ml[281,9964+8]..[281,9964+9])
                Pexp_ident "x" (src/ppx.ml[281,9964+8]..[281,9964+9])
              [
                <case>
                  pattern (src/ppx.ml[282,9979+3]..[285,10029+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[283,9984+4]..[283,9984+13]) ghost
                        pattern (src/ppx.ml[283,9984+4]..[283,9984+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[283,9984+4]..[283,9984+13])
                    ]
                  expression (src/ppx.ml[287,10113+4]..[288,10140+6])
                    Pexp_sequence
                    expression (src/ppx.ml[287,10113+4]..[287,10113+25])
                      Pexp_apply
                      expression (src/ppx.ml[287,10113+5]..[287,10113+14])
                        Pexp_ident "printdesc" (src/ppx.ml[287,10113+5]..[287,10113+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,10113+15]..[287,10113+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[287,10113+15]..[287,10113+24])
                      ]
                    expression (src/ppx.ml[288,10140+4]..[288,10140+6])
                      Pexp_construct "()" (src/ppx.ml[288,10140+4]..[288,10140+6])
                      None
              ]
            core_type (src/ppx.ml[280,9921+36]..[280,9921+40])
              Ptyp_constr "unit" (src/ppx.ml[280,9921+36]..[280,9921+40])
              []
    ]
  structure_item (src/ppx.ml[294,10260+0]..[296,10341+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10260+4]..[294,10260+13])
          Ppat_var "printone2" (src/ppx.ml[294,10260+4]..[294,10260+13])
        expression (src/ppx.ml[294,10260+14]..[296,10341+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[294,10260+14]..[294,10260+15])
            Ppat_var "x" (src/ppx.ml[294,10260+14]..[294,10260+15])
          expression (src/ppx.ml[294,10260+16]..[296,10341+12])
            Pexp_constraint
            expression (src/ppx.ml[295,10284+2]..[296,10341+12])
              Pexp_sequence
              expression (src/ppx.ml[295,10284+2]..[295,10284+55])
                Pexp_apply
                expression (src/ppx.ml[295,10284+3]..[295,10284+16])
                  Pexp_ident "print_endline" (src/ppx.ml[295,10284+3]..[295,10284+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[295,10284+17]..[295,10284+54])
                      Pexp_apply
                      expression (src/ppx.ml[295,10284+18]..[295,10284+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[295,10284+18]..[295,10284+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[295,10284+33]..[295,10284+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[295,10284+34]..[295,10284+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[295,10284+35]..[295,10284+49]),None)
                              expression (src/ppx.ml[295,10284+51]..[295,10284+52])
                                Pexp_ident "x" (src/ppx.ml[295,10284+51]..[295,10284+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[296,10341+2]..[296,10341+12])
                Pexp_apply
                expression (src/ppx.ml[296,10341+2]..[296,10341+10])
                  Pexp_ident "printone" (src/ppx.ml[296,10341+2]..[296,10341+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[296,10341+11]..[296,10341+12])
                      Pexp_ident "x" (src/ppx.ml[296,10341+11]..[296,10341+12])
                ]
            core_type (src/ppx.ml[294,10260+17]..[294,10260+21])
              Ptyp_constr "unit" (src/ppx.ml[294,10260+17]..[294,10260+21])
              []
    ]
  structure_item (src/ppx.ml[298,10357+0]..[300,10388+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10357+4]..[298,10357+9])
          Ppat_var "proc1" (src/ppx.ml[298,10357+4]..[298,10357+9])
        expression (src/ppx.ml[298,10357+10]..[300,10388+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[298,10357+10]..[298,10357+11])
            Ppat_var "x" (src/ppx.ml[298,10357+10]..[298,10357+11])
          expression (src/ppx.ml[299,10373+2]..[300,10388+3])
            Pexp_sequence
            expression (src/ppx.ml[299,10373+2]..[299,10373+13])
              Pexp_apply
              expression (src/ppx.ml[299,10373+2]..[299,10373+11])
                Pexp_ident "printone2" (src/ppx.ml[299,10373+2]..[299,10373+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[299,10373+12]..[299,10373+13])
                    Pexp_ident "x" (src/ppx.ml[299,10373+12]..[299,10373+13])
              ]
            expression (src/ppx.ml[300,10388+2]..[300,10388+3])
              Pexp_ident "x" (src/ppx.ml[300,10388+2]..[300,10388+3])
    ]
  structure_item (src/ppx.ml[302,10393+0]..[305,10542+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10393+4]..[302,10393+9])
          Ppat_var "debug" (src/ppx.ml[302,10393+4]..[302,10393+9])
        expression (src/ppx.ml[302,10393+10]..[305,10542+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10393+10]..[302,10393+14])
            Ppat_var "proc" (src/ppx.ml[302,10393+10]..[302,10393+14])
          expression (src/ppx.ml[302,10393+15]..[305,10542+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[302,10393+15]..[302,10393+18])
              Ppat_var "lst" (src/ppx.ml[302,10393+15]..[302,10393+18])
            expression (src/ppx.ml[302,10393+19]..[305,10542+4])
              Pexp_constraint
              expression (src/ppx.ml[303,10421+2]..[305,10542+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[303,10421+6]..[303,10421+12])
                      Ppat_var "result" (src/ppx.ml[303,10421+6]..[303,10421+12])
                    expression (src/ppx.ml[303,10421+15]..[303,10421+32])
                      Pexp_apply
                      expression (src/ppx.ml[303,10421+15]..[303,10421+23])
                        Pexp_ident "List.map" (src/ppx.ml[303,10421+15]..[303,10421+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10421+24]..[303,10421+28])
                            Pexp_ident "proc" (src/ppx.ml[303,10421+24]..[303,10421+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10421+29]..[303,10421+32])
                            Pexp_ident "lst" (src/ppx.ml[303,10421+29]..[303,10421+32])
                      ]
                ]
                expression (src/ppx.ml[304,10457+2]..[305,10542+4])
                  Pexp_sequence
                  expression (src/ppx.ml[304,10457+2]..[304,10457+83])
                    Pexp_apply
                    expression (src/ppx.ml[304,10457+2]..[304,10457+11])
                      Pexp_ident "List.iter" (src/ppx.ml[304,10457+2]..[304,10457+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10457+12]..[304,10457+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[304,10457+17]..[304,10457+18])
                            Ppat_var "i" (src/ppx.ml[304,10457+17]..[304,10457+18])
                          expression (src/ppx.ml[304,10457+22]..[304,10457+75])
                            Pexp_apply
                            expression (src/ppx.ml[304,10457+22]..[304,10457+35])
                              Pexp_ident "print_endline" (src/ppx.ml[304,10457+22]..[304,10457+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[304,10457+36]..[304,10457+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[304,10457+37]..[304,10457+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[304,10457+37]..[304,10457+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[304,10457+52]..[304,10457+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[304,10457+53]..[304,10457+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10457+54]..[304,10457+69]),None)
                                          expression (src/ppx.ml[304,10457+72]..[304,10457+73])
                                            Pexp_ident "i" (src/ppx.ml[304,10457+72]..[304,10457+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10457+77]..[304,10457+83])
                          Pexp_ident "result" (src/ppx.ml[304,10457+77]..[304,10457+83])
                    ]
                  expression (src/ppx.ml[305,10542+2]..[305,10542+4])
                    Pexp_construct "()" (src/ppx.ml[305,10542+2]..[305,10542+4])
                    None
              core_type (src/ppx.ml[302,10393+21]..[302,10393+25])
                Ptyp_constr "unit" (src/ppx.ml[302,10393+21]..[302,10393+25])
                []
    ]
  structure_item (src/ppx.ml[307,10564+0]..[310,10688+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10564+4]..[307,10564+13])
          Ppat_var "transform" (src/ppx.ml[307,10564+4]..[307,10564+13])
        expression (src/ppx.ml[307,10564+14]..[310,10688+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10564+14]..[307,10564+15])
            Ppat_var "x" (src/ppx.ml[307,10564+14]..[307,10564+15])
          expression (src/ppx.ml[308,10619+2]..[310,10688+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10619+2]..[308,10619+48])
              Pexp_apply
              expression (src/ppx.ml[308,10619+3]..[308,10619+16])
                Pexp_ident "print_endline" (src/ppx.ml[308,10619+3]..[308,10619+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10619+17]..[308,10619+47])
                    Pexp_apply
                    expression (src/ppx.ml[308,10619+18]..[308,10619+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[308,10619+18]..[308,10619+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[308,10619+33]..[308,10619+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[308,10619+34]..[308,10619+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[308,10619+35]..[308,10619+42]),None)
                            expression (src/ppx.ml[308,10619+44]..[308,10619+45])
                              Pexp_ident "x" (src/ppx.ml[308,10619+44]..[308,10619+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[309,10669+2]..[310,10688+3])
              Pexp_sequence
              expression (src/ppx.ml[309,10669+2]..[309,10669+17])
                Pexp_apply
                expression (src/ppx.ml[309,10669+3]..[309,10669+8])
                  Pexp_ident "debug" (src/ppx.ml[309,10669+3]..[309,10669+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10669+9]..[309,10669+14])
                      Pexp_ident "proc1" (src/ppx.ml[309,10669+9]..[309,10669+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10669+15]..[309,10669+16])
                      Pexp_ident "x" (src/ppx.ml[309,10669+15]..[309,10669+16])
                ]
              expression (src/ppx.ml[310,10688+2]..[310,10688+3])
                Pexp_ident "x" (src/ppx.ml[310,10688+2]..[310,10688+3])
    ]
  structure_item (src/ppx.ml[312,10695+1]..[312,10695+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10695+5]..[312,10695+7])
          Ppat_construct "()" (src/ppx.ml[312,10695+5]..[312,10695+7])
          None
        expression (src/ppx.ml[312,10695+10]..[312,10695+69])
          Pexp_apply
          expression (src/ppx.ml[312,10695+10]..[312,10695+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[312,10695+10]..[312,10695+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[312,10695+47]..[312,10695+56])
                Pexp_ident "transform" (src/ppx.ml[312,10695+47]..[312,10695+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[312,10695+57]..[312,10695+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[312,10695+58]..[312,10695+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  (match x with
   | { txt;_} -> print_endline (Batteries.dump ("DEBUG:process_id:", txt)) : 
  unit)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      (process_id a;
       process_core_type_list b;
       print_endline
         (Batteries.dump ("DEBUG:Ptyp_constr:", "id", a, "types", b)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[72,1948+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..src/ppx.ml[69,1879+14])
          Tpat_var "process_id/1437"
        expression (src/ppx.ml[69,1879+14]..src/ppx.ml[72,1948+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+17]..src/ppx.ml[69,1879+30])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1439"
                pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                  Tpat_any
              expression (src/ppx.ml[70,1918+2]..src/ppx.ml[72,1948+64])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[69,1879+32]..src/ppx.ml[69,1879+36])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[70,1918+8]..src/ppx.ml[70,1918+9])
                  Texp_ident "x/1439"
                [
                  <case>
                    pattern (src/ppx.ml[71,1933+4]..src/ppx.ml[71,1933+11])
                      Tpat_value
                      pattern (src/ppx.ml[71,1933+4]..src/ppx.ml[71,1933+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[71,1933+5]..src/ppx.ml[71,1933+8])
                              Tpat_var "txt/1723"
                        ]
                    expression (src/ppx.ml[72,1948+4]..src/ppx.ml[72,1948+64])
                      Texp_apply
                      expression (src/ppx.ml[72,1948+5]..src/ppx.ml[72,1948+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[72,1948+19]..src/ppx.ml[72,1948+63])
                            Texp_apply
                            expression (src/ppx.ml[72,1948+20]..src/ppx.ml[72,1948+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[72,1948+35]..src/ppx.ml[72,1948+62])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[72,1948+36]..src/ppx.ml[72,1948+55])
                                      Texp_constant Const_string("DEBUG:process_id:",(src/ppx.ml[72,1948+37]..src/ppx.ml[72,1948+54]),None)
                                    expression (src/ppx.ml[72,1948+58]..src/ppx.ml[72,1948+61])
                                      Texp_ident "txt/1723"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[74,2016+0]..src/ppx.ml[156,4841+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[74,2016+8]..src/ppx.ml[74,2016+27])
          Tpat_var "process_record_kind/1724"
        expression (src/ppx.ml[74,2016+27]..src/ppx.ml[88,2500+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[74,2016+27]..src/ppx.ml[74,2016+30])
                Tpat_var "x/1729"
              expression (src/ppx.ml[75,2049+2]..src/ppx.ml[88,2500+47])
                Texp_match
                expression (src/ppx.ml[75,2049+8]..src/ppx.ml[75,2049+9])
                  Texp_ident "x/1729"
                [
                  <case>
                    pattern (src/ppx.ml[76,2064+4]..src/ppx.ml[82,2245+4])
                      Tpat_value
                      pattern (src/ppx.ml[76,2064+4]..src/ppx.ml[82,2245+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[77,2070+5]..src/ppx.ml[77,2070+13])
                              Tpat_var "pld_name/1730"
                          "pld_mutable"
                            pattern (src/ppx.ml[78,2103+5]..src/ppx.ml[78,2103+16])
                              Tpat_var "pld_mutable/1731"
                          "pld_type"
                            pattern (src/ppx.ml[79,2141+5]..src/ppx.ml[79,2141+13])
                              Tpat_var "pld_type/1732"
                          "pld_loc"
                            pattern (src/ppx.ml[80,2173+5]..src/ppx.ml[80,2173+12])
                              Tpat_var "pld_loc/1733"
                          "pld_attributes"
                            pattern (src/ppx.ml[81,2205+5]..src/ppx.ml[81,2205+19])
                              Tpat_var "pld_attributes/1734"
                        ]
                    expression (src/ppx.ml[83,2253+4]..src/ppx.ml[88,2500+47])
                      Texp_apply
                      expression (src/ppx.ml[83,2253+5]..src/ppx.ml[83,2253+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[83,2253+19]..src/ppx.ml[88,2500+46])
                            Texp_apply
                            expression (src/ppx.ml[83,2253+20]..src/ppx.ml[83,2253+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[83,2253+35]..src/ppx.ml[88,2500+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[83,2253+36]..src/ppx.ml[83,2253+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[83,2253+37]..src/ppx.ml[83,2253+56]),None)
                                    expression (src/ppx.ml[84,2314+36]..src/ppx.ml[84,2314+44])
                                      Texp_ident "pld_name/1730"
                                    expression (src/ppx.ml[85,2360+36]..src/ppx.ml[85,2360+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[85,2360+37]..src/ppx.ml[85,2360+44]),None)
                                    expression (src/ppx.ml[86,2407+36]..src/ppx.ml[86,2407+47])
                                      Texp_ident "pld_mutable/1731"
                                    expression (src/ppx.ml[87,2456+36]..src/ppx.ml[87,2456+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[87,2456+37]..src/ppx.ml[87,2456+41]),None)
                                    expression (src/ppx.ml[88,2500+36]..src/ppx.ml[88,2500+44])
                                      Texp_ident "pld_type/1732"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[90,2552+0]..src/ppx.ml[90,2552+22])
          Tpat_var "process_core_type_desc/1725"
        expression (src/ppx.ml[90,2552+23]..src/ppx.ml[130,4159+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[90,2552+23]..src/ppx.ml[90,2552+24])
                Tpat_var "x/1735"
              expression (src/ppx.ml[91,2579+2]..src/ppx.ml[130,4159+65])
                Texp_match
                expression (src/ppx.ml[91,2579+8]..src/ppx.ml[91,2579+9])
                  Texp_ident "x/1735"
                [
                  <case>
                    pattern (src/ppx.ml[92,2594+4]..src/ppx.ml[92,2594+21])
                      Tpat_value
                      pattern (src/ppx.ml[92,2594+4]..src/ppx.ml[92,2594+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[92,2594+17]..src/ppx.ml[92,2594+18])
                            Tpat_var "a/1736"
                          pattern (src/ppx.ml[92,2594+19]..src/ppx.ml[92,2594+20])
                            Tpat_var "b/1737"
                        ]
                        None
                    expression (src/ppx.ml[94,2665+4]..src/ppx.ml[97,2719+79])
                      Texp_sequence
                      expression (src/ppx.ml[94,2665+4]..src/ppx.ml[94,2665+18])
                        Texp_apply
                        expression (src/ppx.ml[94,2665+5]..src/ppx.ml[94,2665+15])
                          Texp_ident "process_id/1437"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[94,2665+16]..src/ppx.ml[94,2665+17])
                              Texp_ident "a/1736"
                        ]
                      expression (src/ppx.ml[95,2685+4]..src/ppx.ml[97,2719+79])
                        Texp_sequence
                        expression (src/ppx.ml[95,2685+4]..src/ppx.ml[95,2685+30])
                          Texp_apply
                          expression (src/ppx.ml[95,2685+5]..src/ppx.ml[95,2685+27])
                            Texp_ident "process_core_type_list/1728"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[95,2685+28]..src/ppx.ml[95,2685+29])
                                Texp_ident "b/1737"
                          ]
                        expression (src/ppx.ml[97,2719+4]..src/ppx.ml[97,2719+79])
                          Texp_apply
                          expression (src/ppx.ml[97,2719+5]..src/ppx.ml[97,2719+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[97,2719+19]..src/ppx.ml[97,2719+78])
                                Texp_apply
                                expression (src/ppx.ml[97,2719+20]..src/ppx.ml[97,2719+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[97,2719+35]..src/ppx.ml[97,2719+77])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[97,2719+36]..src/ppx.ml[97,2719+56])
                                          Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2719+37]..src/ppx.ml[97,2719+55]),None)
                                        expression (src/ppx.ml[97,2719+58]..src/ppx.ml[97,2719+62])
                                          Texp_constant Const_string("id",(src/ppx.ml[97,2719+59]..src/ppx.ml[97,2719+61]),None)
                                        expression (src/ppx.ml[97,2719+63]..src/ppx.ml[97,2719+64])
                                          Texp_ident "a/1736"
                                        expression (src/ppx.ml[97,2719+66]..src/ppx.ml[97,2719+73])
                                          Texp_constant Const_string("types",(src/ppx.ml[97,2719+67]..src/ppx.ml[97,2719+72]),None)
                                        expression (src/ppx.ml[97,2719+74]..src/ppx.ml[97,2719+75])
                                          Texp_ident "b/1737"
                                      ]
                                ]
                          ]
                  <case>
                    pattern (src/ppx.ml[99,2800+4]..src/ppx.ml[99,2800+16])
                      Tpat_value
                      pattern (src/ppx.ml[99,2800+4]..src/ppx.ml[99,2800+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[99,2800+15]..src/ppx.ml[99,2800+16])
                            Tpat_var "a/1738"
                        ]
                        None
                    expression (src/ppx.ml[101,2848+4]..src/ppx.ml[101,2848+59])
                      Texp_apply
                      expression (src/ppx.ml[101,2848+5]..src/ppx.ml[101,2848+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[101,2848+19]..src/ppx.ml[101,2848+58])
                            Texp_apply
                            expression (src/ppx.ml[101,2848+20]..src/ppx.ml[101,2848+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[101,2848+35]..src/ppx.ml[101,2848+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2848+37]..src/ppx.ml[101,2848+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,2927+4]..src/ppx.ml[104,2927+12])
                      Tpat_value
                      pattern (src/ppx.ml[104,2927+4]..src/ppx.ml[104,2927+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[104,2927+17]..src/ppx.ml[104,2927+69])
                      Texp_apply
                      expression (src/ppx.ml[104,2927+18]..src/ppx.ml[104,2927+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[104,2927+32]..src/ppx.ml[104,2927+68])
                            Texp_apply
                            expression (src/ppx.ml[104,2927+33]..src/ppx.ml[104,2927+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[104,2927+48]..src/ppx.ml[104,2927+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2927+50]..src/ppx.ml[104,2927+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[105,2997+4]..src/ppx.ml[105,2997+17])
                      Tpat_value
                      pattern (src/ppx.ml[105,2997+4]..src/ppx.ml[105,2997+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[105,2997+13]..src/ppx.ml[105,2997+17])
                            Tpat_var "name/1739"
                        ]
                        None
                    expression (src/ppx.ml[105,2997+20]..src/ppx.ml[105,2997+80])
                      Texp_apply
                      expression (src/ppx.ml[105,2997+21]..src/ppx.ml[105,2997+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[105,2997+35]..src/ppx.ml[105,2997+79])
                            Texp_apply
                            expression (src/ppx.ml[105,2997+36]..src/ppx.ml[105,2997+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[105,2997+51]..src/ppx.ml[105,2997+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[105,2997+52]..src/ppx.ml[105,2997+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,2997+53]..src/ppx.ml[105,2997+68]),None)
                                    expression (src/ppx.ml[105,2997+73]..src/ppx.ml[105,2997+77])
                                      Texp_ident "name/1739"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[106,3078+4]..src/ppx.ml[106,3078+51])
                      Tpat_value
                      pattern (src/ppx.ml[106,3078+4]..src/ppx.ml[106,3078+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[106,3078+16]..src/ppx.ml[106,3078+25])
                            Tpat_var "arg_label/1740"
                          pattern (src/ppx.ml[106,3078+28]..src/ppx.ml[106,3078+37])
                            Tpat_var "core_type/1741"
                          pattern (src/ppx.ml[106,3078+40]..src/ppx.ml[106,3078+50])
                            Tpat_var "core_type2/1742"
                        ]
                        None
                    expression (src/ppx.ml[107,3133+4]..src/ppx.ml[107,3133+61])
                      Texp_apply
                      expression (src/ppx.ml[107,3133+5]..src/ppx.ml[107,3133+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[107,3133+19]..src/ppx.ml[107,3133+60])
                            Texp_apply
                            expression (src/ppx.ml[107,3133+20]..src/ppx.ml[107,3133+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[107,3133+35]..src/ppx.ml[107,3133+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3133+37]..src/ppx.ml[107,3133+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[109,3196+4]..src/ppx.ml[109,3196+21])
                      Tpat_value
                      pattern (src/ppx.ml[109,3196+4]..src/ppx.ml[109,3196+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[109,3196+17]..src/ppx.ml[109,3196+18])
                            Tpat_var "a/1743"
                          pattern (src/ppx.ml[109,3196+19]..src/ppx.ml[109,3196+20])
                            Tpat_var "b/1744"
                        ]
                        None
                    expression (src/ppx.ml[111,3265+4]..src/ppx.ml[111,3265+60])
                      Texp_apply
                      expression (src/ppx.ml[111,3265+5]..src/ppx.ml[111,3265+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[111,3265+19]..src/ppx.ml[111,3265+59])
                            Texp_apply
                            expression (src/ppx.ml[111,3265+20]..src/ppx.ml[111,3265+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[111,3265+35]..src/ppx.ml[111,3265+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3265+37]..src/ppx.ml[111,3265+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[112,3326+4]..src/ppx.ml[112,3326+20])
                      Tpat_value
                      pattern (src/ppx.ml[112,3326+4]..src/ppx.ml[112,3326+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[112,3326+16]..src/ppx.ml[112,3326+17])
                            Tpat_var "a/1745"
                          pattern (src/ppx.ml[112,3326+18]..src/ppx.ml[112,3326+19])
                            Tpat_var "b/1746"
                        ]
                        None
                    expression (src/ppx.ml[114,3396+4]..src/ppx.ml[114,3396+60])
                      Texp_apply
                      expression (src/ppx.ml[114,3396+5]..src/ppx.ml[114,3396+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[114,3396+19]..src/ppx.ml[114,3396+59])
                            Texp_apply
                            expression (src/ppx.ml[114,3396+20]..src/ppx.ml[114,3396+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[114,3396+35]..src/ppx.ml[114,3396+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3396+37]..src/ppx.ml[114,3396+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[115,3457+4]..src/ppx.ml[115,3457+20])
                      Tpat_value
                      pattern (src/ppx.ml[115,3457+4]..src/ppx.ml[115,3457+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[115,3457+16]..src/ppx.ml[115,3457+17])
                            Tpat_var "a/1747"
                          pattern (src/ppx.ml[115,3457+18]..src/ppx.ml[115,3457+19])
                            Tpat_var "b/1748"
                        ]
                        None
                    expression (src/ppx.ml[117,3518+4]..src/ppx.ml[117,3518+60])
                      Texp_apply
                      expression (src/ppx.ml[117,3518+5]..src/ppx.ml[117,3518+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[117,3518+19]..src/ppx.ml[117,3518+59])
                            Texp_apply
                            expression (src/ppx.ml[117,3518+20]..src/ppx.ml[117,3518+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[117,3518+35]..src/ppx.ml[117,3518+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3518+37]..src/ppx.ml[117,3518+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[118,3579+4]..src/ppx.ml[118,3579+24])
                      Tpat_value
                      pattern (src/ppx.ml[118,3579+4]..src/ppx.ml[118,3579+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[118,3579+18]..src/ppx.ml[118,3579+19])
                            Tpat_var "a/1749"
                          pattern (src/ppx.ml[118,3579+20]..src/ppx.ml[118,3579+21])
                            Tpat_var "b/1750"
                          pattern (src/ppx.ml[118,3579+22]..src/ppx.ml[118,3579+23])
                            Tpat_var "c/1751"
                        ]
                        None
                    expression (src/ppx.ml[120,3669+4]..src/ppx.ml[120,3669+60])
                      Texp_apply
                      expression (src/ppx.ml[120,3669+5]..src/ppx.ml[120,3669+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[120,3669+19]..src/ppx.ml[120,3669+59])
                            Texp_apply
                            expression (src/ppx.ml[120,3669+20]..src/ppx.ml[120,3669+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[120,3669+35]..src/ppx.ml[120,3669+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3669+37]..src/ppx.ml[120,3669+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[121,3730+4]..src/ppx.ml[121,3730+19])
                      Tpat_value
                      pattern (src/ppx.ml[121,3730+4]..src/ppx.ml[121,3730+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[121,3730+15]..src/ppx.ml[121,3730+16])
                            Tpat_var "a/1752"
                          pattern (src/ppx.ml[121,3730+17]..src/ppx.ml[121,3730+18])
                            Tpat_var "b/1753"
                        ]
                        None
                    expression (src/ppx.ml[123,3794+4]..src/ppx.ml[123,3794+60])
                      Texp_apply
                      expression (src/ppx.ml[123,3794+5]..src/ppx.ml[123,3794+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[123,3794+19]..src/ppx.ml[123,3794+59])
                            Texp_apply
                            expression (src/ppx.ml[123,3794+20]..src/ppx.ml[123,3794+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[123,3794+35]..src/ppx.ml[123,3794+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3794+37]..src/ppx.ml[123,3794+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[124,3855+4]..src/ppx.ml[124,3855+18])
                      Tpat_value
                      pattern (src/ppx.ml[124,3855+4]..src/ppx.ml[124,3855+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[124,3855+17]..src/ppx.ml[124,3855+18])
                            Tpat_var "a/1754"
                        ]
                        None
                    expression (src/ppx.ml[126,3903+4]..src/ppx.ml[126,3903+62])
                      Texp_apply
                      expression (src/ppx.ml[126,3903+5]..src/ppx.ml[126,3903+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[126,3903+19]..src/ppx.ml[126,3903+61])
                            Texp_apply
                            expression (src/ppx.ml[126,3903+20]..src/ppx.ml[126,3903+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[126,3903+35]..src/ppx.ml[126,3903+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[126,3903+36]..src/ppx.ml[126,3903+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3903+37]..src/ppx.ml[126,3903+55]),None)
                                    expression (src/ppx.ml[126,3903+57]..src/ppx.ml[126,3903+58])
                                      Texp_ident "a/1754"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[129,4111+4]..src/ppx.ml[129,4111+20])
                      Tpat_value
                      pattern (src/ppx.ml[129,4111+4]..src/ppx.ml[129,4111+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[129,4111+19]..src/ppx.ml[129,4111+20])
                            Tpat_var "a/1755"
                        ]
                        None
                    expression (src/ppx.ml[130,4159+4]..src/ppx.ml[130,4159+65])
                      Texp_apply
                      expression (src/ppx.ml[130,4159+5]..src/ppx.ml[130,4159+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[130,4159+19]..src/ppx.ml[130,4159+64])
                            Texp_apply
                            expression (src/ppx.ml[130,4159+20]..src/ppx.ml[130,4159+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[130,4159+35]..src/ppx.ml[130,4159+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[130,4159+36]..src/ppx.ml[130,4159+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4159+37]..src/ppx.ml[130,4159+58]),None)
                                    expression (src/ppx.ml[130,4159+60]..src/ppx.ml[130,4159+61])
                                      Texp_ident "a/1755"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[132,4229+2]..src/ppx.ml[132,4229+26])
          Tpat_var "process_record_kind_list/1726"
        expression (src/ppx.ml[132,4229+26]..src/ppx.ml[138,4366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[132,4229+26]..src/ppx.ml[132,4229+29])
                Tpat_var "x/1795"
              expression (src/ppx.ml[133,4261+2]..src/ppx.ml[138,4366+6])
                Texp_match
                expression (src/ppx.ml[133,4261+8]..src/ppx.ml[133,4261+9])
                  Texp_ident "x/1795"
                [
                  <case>
                    pattern (src/ppx.ml[134,4276+4]..src/ppx.ml[134,4276+6])
                      Tpat_value
                      pattern (src/ppx.ml[134,4276+4]..src/ppx.ml[134,4276+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[134,4276+10]..src/ppx.ml[134,4276+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[135,4289+4]..src/ppx.ml[135,4289+10])
                      Tpat_value
                      pattern (src/ppx.ml[135,4289+4]..src/ppx.ml[135,4289+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[135,4289+4]..src/ppx.ml[135,4289+5])
                            Tpat_var "h/1796"
                          pattern (src/ppx.ml[135,4289+9]..src/ppx.ml[135,4289+10])
                            Tpat_var "t/1797"
                        ]
                        None
                    expression (src/ppx.ml[136,4303+4]..src/ppx.ml[138,4366+6])
                      Texp_sequence
                      expression (src/ppx.ml[136,4303+4]..src/ppx.ml[136,4303+27])
                        Texp_apply
                        expression (src/ppx.ml[136,4303+5]..src/ppx.ml[136,4303+24])
                          Texp_ident "process_record_kind/1724"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[136,4303+25]..src/ppx.ml[136,4303+26])
                              Texp_ident "h/1796"
                        ]
                      expression (src/ppx.ml[137,4332+4]..src/ppx.ml[138,4366+6])
                        Texp_sequence
                        expression (src/ppx.ml[137,4332+4]..src/ppx.ml[137,4332+32])
                          Texp_apply
                          expression (src/ppx.ml[137,4332+5]..src/ppx.ml[137,4332+29])
                            Texp_ident "process_record_kind_list/1726"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[137,4332+30]..src/ppx.ml[137,4332+31])
                                Texp_ident "t/1797"
                          ]
                        expression (src/ppx.ml[138,4366+4]..src/ppx.ml[138,4366+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[140,4377+0]..src/ppx.ml[140,4377+17])
          Tpat_var "process_core_type/1727"
        expression (src/ppx.ml[140,4377+17]..src/ppx.ml[150,4644+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[140,4377+17]..src/ppx.ml[140,4377+20])
                Tpat_var "x/1798"
              expression (src/ppx.ml[141,4400+2]..src/ppx.ml[150,4644+80])
                Texp_match
                expression (src/ppx.ml[141,4400+8]..src/ppx.ml[141,4400+9])
                  Texp_ident "x/1798"
                [
                  <case>
                    pattern (src/ppx.ml[142,4416+4]..src/ppx.ml[147,4577+5])
                      Tpat_value
                      pattern (src/ppx.ml[142,4416+4]..src/ppx.ml[147,4577+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[143,4422+6]..src/ppx.ml[143,4422+15])
                              Tpat_var "ptyp_desc/1799"
                          "ptyp_loc"
                            pattern (src/ppx.ml[144,4461+5]..src/ppx.ml[144,4461+13])
                              Tpat_var "ptyp_loc/1800"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[145,4494+5]..src/ppx.ml[145,4494+19])
                              Tpat_var "ptyp_loc_stack/1801"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[146,4537+5]..src/ppx.ml[146,4537+20])
                              Tpat_var "ptyp_attributes/1802"
                        ]
                    expression (src/ppx.ml[148,4585+4]..src/ppx.ml[150,4644+80])
                      Texp_sequence
                      expression (src/ppx.ml[148,4585+4]..src/ppx.ml[148,4585+38])
                        Texp_apply
                        expression (src/ppx.ml[148,4585+5]..src/ppx.ml[148,4585+27])
                          Texp_ident "process_core_type_desc/1725"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[148,4585+28]..src/ppx.ml[148,4585+37])
                              Texp_ident "ptyp_desc/1799"
                        ]
                      expression (src/ppx.ml[150,4644+4]..src/ppx.ml[150,4644+80])
                        Texp_apply
                        expression (src/ppx.ml[150,4644+5]..src/ppx.ml[150,4644+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[150,4644+19]..src/ppx.ml[150,4644+79])
                              Texp_apply
                              expression (src/ppx.ml[150,4644+20]..src/ppx.ml[150,4644+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[150,4644+35]..src/ppx.ml[150,4644+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[150,4644+36]..src/ppx.ml[150,4644+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4644+37]..src/ppx.ml[150,4644+63]),None)
                                      expression (src/ppx.ml[150,4644+68]..src/ppx.ml[150,4644+77])
                                        Texp_ident "ptyp_desc/1799"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[151,4725+4]..src/ppx.ml[151,4725+26])
          Tpat_var "process_core_type_list/1728"
        expression (src/ppx.ml[151,4725+26]..src/ppx.ml[156,4841+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[151,4725+27]..src/ppx.ml[151,4725+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[151,4725+29]..src/ppx.ml[151,4725+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[151,4725+29]..src/ppx.ml[151,4725+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1803"
                pattern (src/ppx.ml[151,4725+27]..src/ppx.ml[151,4725+28])
                  Tpat_any
              expression (src/ppx.ml[152,4772+2]..src/ppx.ml[156,4841+29])
                Texp_match
                expression (src/ppx.ml[152,4772+8]..src/ppx.ml[152,4772+9])
                  Texp_ident "x/1803"
                [
                  <case>
                    pattern (src/ppx.ml[153,4787+4]..src/ppx.ml[153,4787+6])
                      Tpat_value
                      pattern (src/ppx.ml[153,4787+4]..src/ppx.ml[153,4787+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[153,4787+10]..src/ppx.ml[153,4787+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[154,4800+4]..src/ppx.ml[154,4800+10])
                      Tpat_value
                      pattern (src/ppx.ml[154,4800+4]..src/ppx.ml[154,4800+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[154,4800+4]..src/ppx.ml[154,4800+5])
                            Tpat_var "h/1804"
                          pattern (src/ppx.ml[154,4800+9]..src/ppx.ml[154,4800+10])
                            Tpat_var "t/1805"
                        ]
                        None
                    expression (src/ppx.ml[155,4814+4]..src/ppx.ml[156,4841+29])
                      Texp_sequence
                      expression (src/ppx.ml[155,4814+4]..src/ppx.ml[155,4814+25])
                        Texp_apply
                        expression (src/ppx.ml[155,4814+4]..src/ppx.ml[155,4814+21])
                          Texp_ident "process_core_type/1727"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[155,4814+22]..src/ppx.ml[155,4814+25])
                              Texp_ident "h/1804"
                        ]
                      expression (src/ppx.ml[156,4841+4]..src/ppx.ml[156,4841+29])
                        Texp_apply
                        expression (src/ppx.ml[156,4841+4]..src/ppx.ml[156,4841+26])
                          Texp_ident "process_core_type_list/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[156,4841+26]..src/ppx.ml[156,4841+29])
                              Texp_ident "t/1805"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[163,4885+0]..src/ppx.ml[170,5084+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4885+4]..src/ppx.ml[163,4885+31])
          Tpat_var "print_constructor_arguments/1806"
        expression (src/ppx.ml[163,4885+31]..src/ppx.ml[170,5084+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[163,4885+31]..src/ppx.ml[163,4885+34])
                Tpat_var "x/1808"
              expression (src/ppx.ml[164,4922+2]..src/ppx.ml[170,5084+65])
                Texp_match
                expression (src/ppx.ml[164,4922+8]..src/ppx.ml[164,4922+9])
                  Texp_ident "x/1808"
                [
                  <case>
                    pattern (src/ppx.ml[165,4937+4]..src/ppx.ml[165,4937+17])
                      Tpat_value
                      pattern (src/ppx.ml[165,4937+4]..src/ppx.ml[165,4937+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[165,4937+16]..src/ppx.ml[165,4937+17])
                            Tpat_var "a/1809"
                        ]
                        None
                    expression (src/ppx.ml[166,4958+4]..src/ppx.ml[167,4990+64])
                      Texp_sequence
                      expression (src/ppx.ml[166,4958+4]..src/ppx.ml[166,4958+30])
                        Texp_apply
                        expression (src/ppx.ml[166,4958+5]..src/ppx.ml[166,4958+27])
                          Texp_ident "process_core_type_list/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[166,4958+28]..src/ppx.ml[166,4958+29])
                              Texp_ident "a/1809"
                        ]
                      expression (src/ppx.ml[167,4990+4]..src/ppx.ml[167,4990+64])
                        Texp_apply
                        expression (src/ppx.ml[167,4990+5]..src/ppx.ml[167,4990+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[167,4990+19]..src/ppx.ml[167,4990+63])
                              Texp_apply
                              expression (src/ppx.ml[167,4990+20]..src/ppx.ml[167,4990+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[167,4990+35]..src/ppx.ml[167,4990+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[167,4990+36]..src/ppx.ml[167,4990+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,4990+37]..src/ppx.ml[167,4990+55]),None)
                                      expression (src/ppx.ml[167,4990+60]..src/ppx.ml[167,4990+61])
                                        Texp_ident "a/1809"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[169,5062+4]..src/ppx.ml[169,5062+18])
                      Tpat_value
                      pattern (src/ppx.ml[169,5062+4]..src/ppx.ml[169,5062+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[169,5062+17]..src/ppx.ml[169,5062+18])
                            Tpat_var "a/1810"
                        ]
                        None
                    expression (src/ppx.ml[170,5084+4]..src/ppx.ml[170,5084+65])
                      Texp_apply
                      expression (src/ppx.ml[170,5084+5]..src/ppx.ml[170,5084+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[170,5084+19]..src/ppx.ml[170,5084+64])
                            Texp_apply
                            expression (src/ppx.ml[170,5084+20]..src/ppx.ml[170,5084+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[170,5084+35]..src/ppx.ml[170,5084+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[170,5084+36]..src/ppx.ml[170,5084+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5084+37]..src/ppx.ml[170,5084+56]),None)
                                    expression (src/ppx.ml[170,5084+61]..src/ppx.ml[170,5084+62])
                                      Texp_ident "a/1810"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[172,5151+0]..src/ppx.ml[204,6127+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5151+8]..src/ppx.ml[172,5151+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1811"
        expression (src/ppx.ml[172,5151+57]..src/ppx.ml[204,6127+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[172,5151+57]..src/ppx.ml[172,5151+60])
                Tpat_var "x/1812"
              expression (src/ppx.ml[173,5214+2]..src/ppx.ml[204,6127+8])
                Texp_match
                expression (src/ppx.ml[173,5214+8]..src/ppx.ml[173,5214+9])
                  Texp_ident "x/1812"
                [
                  <case>
                    pattern (src/ppx.ml[174,5229+4]..src/ppx.ml[174,5229+6])
                      Tpat_value
                      pattern (src/ppx.ml[174,5229+4]..src/ppx.ml[174,5229+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[174,5229+10]..src/ppx.ml[174,5229+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[175,5242+4]..src/ppx.ml[175,5242+10])
                      Tpat_value
                      pattern (src/ppx.ml[175,5242+4]..src/ppx.ml[175,5242+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[175,5242+4]..src/ppx.ml[175,5242+5])
                            Tpat_var "h/1813"
                          pattern (src/ppx.ml[175,5242+9]..src/ppx.ml[175,5242+10])
                            Tpat_var "t/1814"
                        ]
                        None
                    expression (src/ppx.ml[177,5321+4]..src/ppx.ml[204,6127+8])
                      Texp_match
                      expression (src/ppx.ml[177,5321+10]..src/ppx.ml[177,5321+11])
                        Texp_ident "h/1813"
                      [
                        <case>
                          pattern (src/ppx.ml[178,5338+5]..src/ppx.ml[185,5576+5])
                            Tpat_value
                            pattern (src/ppx.ml[178,5338+5]..src/ppx.ml[185,5576+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[179,5345+6]..src/ppx.ml[179,5345+14])
                                    Tpat_var "pcd_name/1815"
                                "pcd_vars"
                                  pattern (src/ppx.ml[180,5379+6]..src/ppx.ml[180,5379+14])
                                    Tpat_var "pcd_vars/1816"
                                "pcd_args"
                                  pattern (src/ppx.ml[181,5418+6]..src/ppx.ml[181,5418+14])
                                    Tpat_var "pcd_args/1817"
                                "pcd_res"
                                  pattern (src/ppx.ml[182,5463+6]..src/ppx.ml[182,5463+13])
                                    Tpat_var "pcd_res/1818"
                                "pcd_loc"
                                  pattern (src/ppx.ml[183,5502+6]..src/ppx.ml[183,5502+13])
                                    Tpat_var "pcd_loc/1819"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[184,5535+6]..src/ppx.ml[184,5535+20])
                                    Tpat_var "pcd_attributes/1820"
                              ]
                          expression (src/ppx.ml[188,5658+6]..src/ppx.ml[204,6127+8])
                            Texp_sequence
                            expression (src/ppx.ml[188,5658+6]..src/ppx.ml[188,5658+43])
                              Texp_apply
                              expression (src/ppx.ml[188,5658+6]..src/ppx.ml[188,5658+33])
                                Texp_ident "print_constructor_arguments/1806"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[188,5658+33]..src/ppx.ml[188,5658+43])
                                    Texp_ident "pcd_args/1817"
                              ]
                            expression (src/ppx.ml[189,5703+6]..src/ppx.ml[204,6127+8])
                              Texp_sequence
                              expression (src/ppx.ml[189,5703+6]..src/ppx.ml[202,6048+16])
                                Texp_apply
                                expression (src/ppx.ml[189,5703+7]..src/ppx.ml[189,5703+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[189,5703+21]..src/ppx.ml[202,6048+15])
                                      Texp_apply
                                      expression (src/ppx.ml[189,5703+22]..src/ppx.ml[189,5703+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[189,5703+37]..src/ppx.ml[202,6048+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[190,5742+11]..src/ppx.ml[190,5742+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[190,5742+12]..src/ppx.ml[190,5742+36]),None)
                                              expression (src/ppx.ml[191,5781+15]..src/ppx.ml[191,5781+23])
                                                Texp_ident "pcd_name/1815"
                                              expression (src/ppx.ml[192,5806+15]..src/ppx.ml[192,5806+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[192,5806+16]..src/ppx.ml[192,5806+20]),None)
                                              expression (src/ppx.ml[193,5829+15]..src/ppx.ml[193,5829+23])
                                                Texp_ident "pcd_vars/1816"
                                              expression (src/ppx.ml[194,5854+15]..src/ppx.ml[194,5854+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[194,5854+16]..src/ppx.ml[194,5854+20]),None)
                                              expression (src/ppx.ml[195,5877+15]..src/ppx.ml[195,5877+23])
                                                Texp_ident "pcd_args/1817"
                                              expression (src/ppx.ml[196,5902+15]..src/ppx.ml[196,5902+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[196,5902+16]..src/ppx.ml[196,5902+19]),None)
                                              expression (src/ppx.ml[197,5924+15]..src/ppx.ml[197,5924+22])
                                                Texp_ident "pcd_res/1818"
                                              expression (src/ppx.ml[198,5948+15]..src/ppx.ml[198,5948+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[198,5948+16]..src/ppx.ml[198,5948+19]),None)
                                              expression (src/ppx.ml[199,5970+15]..src/ppx.ml[199,5970+22])
                                                Texp_ident "pcd_loc/1819"
                                              expression (src/ppx.ml[200,5994+15]..src/ppx.ml[200,5994+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[200,5994+16]..src/ppx.ml[200,5994+21]),None)
                                              expression (src/ppx.ml[201,6018+15]..src/ppx.ml[201,6018+29])
                                                Texp_ident "pcd_attributes/1820"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[203,6066+6]..src/ppx.ml[204,6127+8])
                                Texp_sequence
                                expression (src/ppx.ml[203,6066+6]..src/ppx.ml[203,6066+59])
                                  Texp_apply
                                  expression (src/ppx.ml[203,6066+7]..src/ppx.ml[203,6066+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1811"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[203,6066+57]..src/ppx.ml[203,6066+58])
                                        Texp_ident "t/1814"
                                  ]
                                expression (src/ppx.ml[204,6127+6]..src/ppx.ml[204,6127+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[206,6139+0]..src/ppx.ml[217,6536+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6139+4]..src/ppx.ml[206,6139+16])
          Tpat_var "process_kind/1821"
        expression (src/ppx.ml[206,6139+16]..src/ppx.ml[217,6536+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[206,6139+16]..src/ppx.ml[206,6139+19])
                Tpat_var "x/1823"
              expression (src/ppx.ml[207,6161+2]..src/ppx.ml[217,6536+77])
                Texp_match
                expression (src/ppx.ml[207,6161+8]..src/ppx.ml[207,6161+9])
                  Texp_ident "x/1823"
                [
                  <case>
                    pattern (src/ppx.ml[209,6198+4]..src/ppx.ml[209,6198+18])
                      Tpat_value
                      pattern (src/ppx.ml[209,6198+4]..src/ppx.ml[209,6198+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[209,6198+23]..src/ppx.ml[209,6198+81])
                      Texp_apply
                      expression (src/ppx.ml[209,6198+24]..src/ppx.ml[209,6198+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[209,6198+38]..src/ppx.ml[209,6198+80])
                            Texp_apply
                            expression (src/ppx.ml[209,6198+39]..src/ppx.ml[209,6198+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[209,6198+54]..src/ppx.ml[209,6198+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6198+56]..src/ppx.ml[209,6198+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[210,6280+4]..src/ppx.ml[210,6280+19])
                      Tpat_value
                      pattern (src/ppx.ml[210,6280+4]..src/ppx.ml[210,6280+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[210,6280+18]..src/ppx.ml[210,6280+19])
                            Tpat_var "a/1824"
                        ]
                        None
                    expression (src/ppx.ml[211,6303+4]..src/ppx.ml[212,6362+65])
                      Texp_sequence
                      expression (src/ppx.ml[211,6303+4]..src/ppx.ml[211,6303+57])
                        Texp_apply
                        expression (src/ppx.ml[211,6303+5]..src/ppx.ml[211,6303+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1811"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[211,6303+55]..src/ppx.ml[211,6303+56])
                              Texp_ident "a/1824"
                        ]
                      expression (src/ppx.ml[212,6362+4]..src/ppx.ml[212,6362+65])
                        Texp_apply
                        expression (src/ppx.ml[212,6362+5]..src/ppx.ml[212,6362+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[212,6362+19]..src/ppx.ml[212,6362+64])
                              Texp_apply
                              expression (src/ppx.ml[212,6362+20]..src/ppx.ml[212,6362+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[212,6362+35]..src/ppx.ml[212,6362+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[212,6362+36]..src/ppx.ml[212,6362+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6362+37]..src/ppx.ml[212,6362+57]),None)
                                      expression (src/ppx.ml[212,6362+61]..src/ppx.ml[212,6362+62])
                                        Texp_ident "a/1824"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[215,6475+5]..src/ppx.ml[215,6475+19])
                      Tpat_value
                      pattern (src/ppx.ml[215,6475+5]..src/ppx.ml[215,6475+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[215,6475+18]..src/ppx.ml[215,6475+19])
                            Tpat_var "a/1825"
                        ]
                        None
                    expression (src/ppx.ml[216,6503+5]..src/ppx.ml[216,6503+32])
                      Texp_apply
                      expression (src/ppx.ml[216,6503+5]..src/ppx.ml[216,6503+29])
                        Texp_ident "process_record_kind_list/1726"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[216,6503+29]..src/ppx.ml[216,6503+32])
                            Texp_ident "a/1825"
                      ]
                  <case>
                    pattern (src/ppx.ml[217,6536+5]..src/ppx.ml[217,6536+15])
                      Tpat_value
                      pattern (src/ppx.ml[217,6536+5]..src/ppx.ml[217,6536+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[217,6536+19]..src/ppx.ml[217,6536+77])
                      Texp_apply
                      expression (src/ppx.ml[217,6536+20]..src/ppx.ml[217,6536+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[217,6536+34]..src/ppx.ml[217,6536+76])
                            Texp_apply
                            expression (src/ppx.ml[217,6536+35]..src/ppx.ml[217,6536+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[217,6536+50]..src/ppx.ml[217,6536+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6536+52]..src/ppx.ml[217,6536+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[219,6615+0]..src/ppx.ml[240,7621+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6615+4]..src/ppx.ml[219,6615+19])
          Tpat_var "print_type_decl/1826"
        expression (src/ppx.ml[219,6615+19]..src/ppx.ml[240,7621+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[219,6615+19]..src/ppx.ml[219,6615+22])
                Tpat_var "x/1828"
              expression (src/ppx.ml[220,6640+2]..src/ppx.ml[240,7621+38])
                Texp_match
                expression (src/ppx.ml[220,6640+8]..src/ppx.ml[220,6640+9])
                  Texp_ident "x/1828"
                [
                  <case>
                    pattern (src/ppx.ml[221,6655+4]..src/ppx.ml[230,7036+5])
                      Tpat_value
                      pattern (src/ppx.ml[221,6655+4]..src/ppx.ml[230,7036+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[222,6661+6]..src/ppx.ml[222,6661+16])
                              Tpat_var "ptype_name/1829"
                          "ptype_params"
                            pattern (src/ppx.ml[223,6698+6]..src/ppx.ml[223,6698+18])
                              Tpat_var "ptype_params/1830"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[224,6770+6]..src/ppx.ml[224,6770+17])
                              Tpat_var "ptype_cstrs/1831"
                          "ptype_kind"
                            pattern (src/ppx.ml[225,6839+6]..src/ppx.ml[225,6839+16])
                              Tpat_var "ptype_kind/1832"
                          "ptype_private"
                            pattern (src/ppx.ml[226,6876+6]..src/ppx.ml[226,6876+19])
                              Tpat_var "ptype_private/1833"
                          "ptype_manifest"
                            pattern (src/ppx.ml[227,6917+6]..src/ppx.ml[227,6917+20])
                              Tpat_var "ptype_manifest/1834"
                          "ptype_attributes"
                            pattern (src/ppx.ml[228,6964+6]..src/ppx.ml[228,6964+22])
                              Tpat_var "ptype_attributes/1835"
                          "ptype_loc"
                            pattern (src/ppx.ml[229,7005+6]..src/ppx.ml[229,7005+15])
                              Tpat_var "ptype_loc/1836"
                        ]
                    expression (src/ppx.ml[231,7045+4]..src/ppx.ml[240,7621+38])
                      Texp_sequence
                      expression (src/ppx.ml[231,7045+4]..src/ppx.ml[231,7045+69])
                        Texp_apply
                        expression (src/ppx.ml[231,7045+5]..src/ppx.ml[231,7045+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[231,7045+19]..src/ppx.ml[231,7045+68])
                              Texp_apply
                              expression (src/ppx.ml[231,7045+20]..src/ppx.ml[231,7045+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[231,7045+35]..src/ppx.ml[231,7045+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[231,7045+36]..src/ppx.ml[231,7045+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[231,7045+37]..src/ppx.ml[231,7045+53]),None)
                                      expression (src/ppx.ml[231,7045+56]..src/ppx.ml[231,7045+66])
                                        Texp_ident "ptype_name/1829"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[232,7116+4]..src/ppx.ml[240,7621+38])
                        Texp_sequence
                        expression (src/ppx.ml[232,7116+4]..src/ppx.ml[232,7116+72])
                          Texp_apply
                          expression (src/ppx.ml[232,7116+5]..src/ppx.ml[232,7116+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[232,7116+19]..src/ppx.ml[232,7116+71])
                                Texp_apply
                                expression (src/ppx.ml[232,7116+20]..src/ppx.ml[232,7116+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[232,7116+35]..src/ppx.ml[232,7116+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[232,7116+36]..src/ppx.ml[232,7116+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[232,7116+37]..src/ppx.ml[232,7116+54]),None)
                                        expression (src/ppx.ml[232,7116+57]..src/ppx.ml[232,7116+69])
                                          Texp_ident "ptype_params/1830"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[233,7190+4]..src/ppx.ml[240,7621+38])
                          Texp_sequence
                          expression (src/ppx.ml[233,7190+4]..src/ppx.ml[233,7190+66])
                            Texp_apply
                            expression (src/ppx.ml[233,7190+5]..src/ppx.ml[233,7190+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[233,7190+19]..src/ppx.ml[233,7190+65])
                                  Texp_apply
                                  expression (src/ppx.ml[233,7190+20]..src/ppx.ml[233,7190+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[233,7190+35]..src/ppx.ml[233,7190+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[233,7190+36]..src/ppx.ml[233,7190+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[233,7190+37]..src/ppx.ml[233,7190+49]),None)
                                          expression (src/ppx.ml[233,7190+52]..src/ppx.ml[233,7190+63])
                                            Texp_ident "ptype_cstrs/1831"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[234,7258+4]..src/ppx.ml[240,7621+38])
                            Texp_sequence
                            expression (src/ppx.ml[234,7258+4]..src/ppx.ml[234,7258+63])
                              Texp_apply
                              expression (src/ppx.ml[234,7258+5]..src/ppx.ml[234,7258+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[234,7258+19]..src/ppx.ml[234,7258+62])
                                    Texp_apply
                                    expression (src/ppx.ml[234,7258+20]..src/ppx.ml[234,7258+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[234,7258+35]..src/ppx.ml[234,7258+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[234,7258+36]..src/ppx.ml[234,7258+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[234,7258+37]..src/ppx.ml[234,7258+48]),None)
                                            expression (src/ppx.ml[234,7258+50]..src/ppx.ml[234,7258+60])
                                              Texp_ident "ptype_kind/1832"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[235,7323+4]..src/ppx.ml[240,7621+38])
                              Texp_sequence
                              expression (src/ppx.ml[235,7323+4]..src/ppx.ml[235,7323+29])
                                Texp_apply
                                expression (src/ppx.ml[235,7323+5]..src/ppx.ml[235,7323+17])
                                  Texp_ident "process_kind/1821"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[235,7323+18]..src/ppx.ml[235,7323+28])
                                      Texp_ident "ptype_kind/1832"
                                ]
                              expression (src/ppx.ml[236,7354+4]..src/ppx.ml[240,7621+38])
                                Texp_apply
                                expression (src/ppx.ml[236,7354+5]..src/ppx.ml[236,7354+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[236,7354+19]..src/ppx.ml[240,7621+37])
                                      Texp_apply
                                      expression (src/ppx.ml[236,7354+20]..src/ppx.ml[236,7354+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[236,7354+35]..src/ppx.ml[240,7621+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[236,7354+36]..src/ppx.ml[236,7354+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[236,7354+37]..src/ppx.ml[236,7354+51]),None)
                                              expression (src/ppx.ml[236,7354+55]..src/ppx.ml[236,7354+68])
                                                Texp_ident "ptype_private/1833"
                                              expression (src/ppx.ml[237,7424+36]..src/ppx.ml[237,7424+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[237,7424+37]..src/ppx.ml[237,7424+51]),None)
                                              expression (src/ppx.ml[237,7424+54]..src/ppx.ml[237,7424+68])
                                                Texp_ident "ptype_manifest/1834"
                                              expression (src/ppx.ml[238,7494+36]..src/ppx.ml[238,7494+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[238,7494+37]..src/ppx.ml[238,7494+47]),None)
                                              expression (src/ppx.ml[238,7494+50]..src/ppx.ml[238,7494+66])
                                                Texp_ident "ptype_attributes/1835"
                                              expression (src/ppx.ml[239,7562+36]..src/ppx.ml[239,7562+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[239,7562+37]..src/ppx.ml[239,7562+46]),None)
                                              expression (src/ppx.ml[239,7562+49]..src/ppx.ml[239,7562+58])
                                                Texp_ident "ptype_loc/1836"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[242,7665+0]..src/ppx.ml[248,7800+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7665+8]..src/ppx.ml[242,7665+30])
          Tpat_var "process_type_decl_list/1837"
        expression (src/ppx.ml[242,7665+30]..src/ppx.ml[248,7800+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[242,7665+30]..src/ppx.ml[242,7665+33])
                Tpat_var "x/1838"
              expression (src/ppx.ml[243,7701+2]..src/ppx.ml[248,7800+6])
                Texp_match
                expression (src/ppx.ml[243,7701+8]..src/ppx.ml[243,7701+9])
                  Texp_ident "x/1838"
                [
                  <case>
                    pattern (src/ppx.ml[244,7716+4]..src/ppx.ml[244,7716+6])
                      Tpat_value
                      pattern (src/ppx.ml[244,7716+4]..src/ppx.ml[244,7716+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[244,7716+10]..src/ppx.ml[244,7716+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[245,7729+4]..src/ppx.ml[245,7729+10])
                      Tpat_value
                      pattern (src/ppx.ml[245,7729+4]..src/ppx.ml[245,7729+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[245,7729+4]..src/ppx.ml[245,7729+5])
                            Tpat_var "h/1839"
                          pattern (src/ppx.ml[245,7729+9]..src/ppx.ml[245,7729+10])
                            Tpat_var "t/1840"
                        ]
                        None
                    expression (src/ppx.ml[246,7743+4]..src/ppx.ml[248,7800+6])
                      Texp_sequence
                      expression (src/ppx.ml[246,7743+4]..src/ppx.ml[246,7743+23])
                        Texp_apply
                        expression (src/ppx.ml[246,7743+5]..src/ppx.ml[246,7743+20])
                          Texp_ident "print_type_decl/1826"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[246,7743+21]..src/ppx.ml[246,7743+22])
                              Texp_ident "h/1839"
                        ]
                      expression (src/ppx.ml[247,7768+4]..src/ppx.ml[248,7800+6])
                        Texp_sequence
                        expression (src/ppx.ml[247,7768+4]..src/ppx.ml[247,7768+30])
                          Texp_apply
                          expression (src/ppx.ml[247,7768+5]..src/ppx.ml[247,7768+27])
                            Texp_ident "process_type_decl_list/1837"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[247,7768+28]..src/ppx.ml[247,7768+29])
                                Texp_ident "t/1840"
                          ]
                        expression (src/ppx.ml[248,7800+4]..src/ppx.ml[248,7800+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[250,7812+0]..src/ppx.ml[276,9776+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7812+4]..src/ppx.ml[250,7812+13])
          Tpat_var "printdesc/1841"
        expression (src/ppx.ml[250,7812+13]..src/ppx.ml[276,9776+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[250,7812+14]..src/ppx.ml[250,7812+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[250,7812+17]..src/ppx.ml[250,7812+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1843"
                pattern (src/ppx.ml[250,7812+14]..src/ppx.ml[250,7812+15])
                  Tpat_any
              expression (src/ppx.ml[251,7858+2]..src/ppx.ml[276,9776+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[250,7812+39]..src/ppx.ml[250,7812+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[251,7858+2]..src/ppx.ml[251,7858+68])
                  Texp_apply
                  expression (src/ppx.ml[251,7858+3]..src/ppx.ml[251,7858+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[251,7858+17]..src/ppx.ml[251,7858+67])
                        Texp_apply
                        expression (src/ppx.ml[251,7858+18]..src/ppx.ml[251,7858+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[251,7858+33]..src/ppx.ml[251,7858+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[251,7858+34]..src/ppx.ml[251,7858+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7858+35]..src/ppx.ml[251,7858+61]),None)
                                expression (src/ppx.ml[251,7858+64]..src/ppx.ml[251,7858+65])
                                  Texp_ident "x/1843"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[252,7928+2]..src/ppx.ml[276,9776+128])
                  Texp_match
                  expression (src/ppx.ml[252,7928+8]..src/ppx.ml[252,7928+9])
                    Texp_ident "x/1843"
                  [
                    <case>
                      pattern (src/ppx.ml[253,7943+4]..src/ppx.ml[253,7943+37])
                        Tpat_value
                        pattern (src/ppx.ml[253,7943+4]..src/ppx.ml[253,7943+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[253,7943+15]..src/ppx.ml[253,7943+25])
                              Tpat_var "expression/1844"
                            pattern (src/ppx.ml[253,7943+26]..src/ppx.ml[253,7943+36])
                              Tpat_var "attributes/1845"
                          ]
                          None
                      expression (src/ppx.ml[253,7943+41]..src/ppx.ml[253,7943+117])
                        Texp_apply
                        expression (src/ppx.ml[253,7943+42]..src/ppx.ml[253,7943+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,7943+56]..src/ppx.ml[253,7943+116])
                              Texp_apply
                              expression (src/ppx.ml[253,7943+57]..src/ppx.ml[253,7943+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[253,7943+72]..src/ppx.ml[253,7943+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[253,7943+73]..src/ppx.ml[253,7943+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7943+74]..src/ppx.ml[253,7943+90]),None)
                                      expression (src/ppx.ml[253,7943+93]..src/ppx.ml[253,7943+103])
                                        Texp_ident "expression/1844"
                                      expression (src/ppx.ml[253,7943+104]..src/ppx.ml[253,7943+114])
                                        Texp_ident "attributes/1845"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[255,8081+4]..src/ppx.ml[255,8081+45])
                        Tpat_value
                        pattern (src/ppx.ml[255,8081+4]..src/ppx.ml[255,8081+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[255,8081+16]..src/ppx.ml[255,8081+24])
                              Tpat_var "rec_flag/1846"
                            pattern (src/ppx.ml[255,8081+26]..src/ppx.ml[255,8081+44])
                              Tpat_var "value_binding_list/1847"
                          ]
                          None
                      expression (src/ppx.ml[255,8081+48]..src/ppx.ml[256,8215+48])
                        Texp_sequence
                        expression (src/ppx.ml[255,8081+48]..src/ppx.ml[255,8081+132])
                          Texp_apply
                          expression (src/ppx.ml[255,8081+49]..src/ppx.ml[255,8081+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[255,8081+63]..src/ppx.ml[255,8081+131])
                                Texp_apply
                                expression (src/ppx.ml[255,8081+64]..src/ppx.ml[255,8081+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[255,8081+79]..src/ppx.ml[255,8081+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[255,8081+80]..src/ppx.ml[255,8081+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8081+81]..src/ppx.ml[255,8081+98]),None)
                                        expression (src/ppx.ml[255,8081+101]..src/ppx.ml[255,8081+109])
                                          Texp_ident "rec_flag/1846"
                                        expression (src/ppx.ml[255,8081+111]..src/ppx.ml[255,8081+129])
                                          Texp_ident "value_binding_list/1847"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[256,8215+4]..src/ppx.ml[256,8215+48])
                          Texp_apply
                          expression (src/ppx.ml[256,8215+4]..src/ppx.ml[256,8215+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[256,8215+28]..src/ppx.ml[256,8215+48])
                                Texp_ident "value_binding_list/1847"
                          ]
                    <case>
                      pattern (src/ppx.ml[257,8264+4]..src/ppx.ml[257,8264+36])
                        Tpat_value
                        pattern (src/ppx.ml[257,8264+4]..src/ppx.ml[257,8264+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[257,8264+19]..src/ppx.ml[257,8264+36])
                              Tpat_var "value_description/1848"
                          ]
                          None
                      expression (src/ppx.ml[257,8264+39]..src/ppx.ml[257,8264+116])
                        Texp_apply
                        expression (src/ppx.ml[257,8264+40]..src/ppx.ml[257,8264+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[257,8264+54]..src/ppx.ml[257,8264+115])
                              Texp_apply
                              expression (src/ppx.ml[257,8264+55]..src/ppx.ml[257,8264+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[257,8264+70]..src/ppx.ml[257,8264+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[257,8264+71]..src/ppx.ml[257,8264+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8264+72]..src/ppx.ml[257,8264+93]),None)
                                      expression (src/ppx.ml[257,8264+96]..src/ppx.ml[257,8264+113])
                                        Texp_ident "value_description/1848"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[259,8382+4]..src/ppx.ml[259,8382+47])
                        Tpat_value
                        pattern (src/ppx.ml[259,8382+4]..src/ppx.ml[259,8382+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[259,8382+15]..src/ppx.ml[259,8382+23])
                              Tpat_var "rec_flag/1849"
                            pattern (src/ppx.ml[259,8382+25]..src/ppx.ml[259,8382+46])
                              Tpat_var "type_declaration_list/1850"
                          ]
                          None
                      expression (src/ppx.ml[261,8461+4]..src/ppx.ml[262,8512+90])
                        Texp_sequence
                        expression (src/ppx.ml[261,8461+4]..src/ppx.ml[261,8461+49])
                          Texp_apply
                          expression (src/ppx.ml[261,8461+4]..src/ppx.ml[261,8461+26])
                            Texp_ident "process_type_decl_list/1837"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[261,8461+26]..src/ppx.ml[261,8461+49])
                                Texp_ident "type_declaration_list/1850"
                          ]
                        expression (src/ppx.ml[262,8512+4]..src/ppx.ml[262,8512+90])
                          Texp_apply
                          expression (src/ppx.ml[262,8512+5]..src/ppx.ml[262,8512+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[262,8512+19]..src/ppx.ml[262,8512+89])
                                Texp_apply
                                expression (src/ppx.ml[262,8512+20]..src/ppx.ml[262,8512+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[262,8512+35]..src/ppx.ml[262,8512+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[262,8512+36]..src/ppx.ml[262,8512+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8512+37]..src/ppx.ml[262,8512+53]),None)
                                        expression (src/ppx.ml[262,8512+56]..src/ppx.ml[262,8512+64])
                                          Texp_ident "rec_flag/1849"
                                        expression (src/ppx.ml[262,8512+66]..src/ppx.ml[262,8512+87])
                                          Texp_ident "type_declaration_list/1850"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[265,8605+4]..src/ppx.ml[265,8605+31])
                        Tpat_value
                        pattern (src/ppx.ml[265,8605+4]..src/ppx.ml[265,8605+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[265,8605+17]..src/ppx.ml[265,8605+31])
                              Tpat_var "type_extension/1851"
                          ]
                          None
                      expression (src/ppx.ml[265,8605+34]..src/ppx.ml[265,8605+105])
                        Texp_apply
                        expression (src/ppx.ml[265,8605+35]..src/ppx.ml[265,8605+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[265,8605+49]..src/ppx.ml[265,8605+104])
                              Texp_apply
                              expression (src/ppx.ml[265,8605+50]..src/ppx.ml[265,8605+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[265,8605+65]..src/ppx.ml[265,8605+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[265,8605+66]..src/ppx.ml[265,8605+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8605+67]..src/ppx.ml[265,8605+85]),None)
                                      expression (src/ppx.ml[265,8605+88]..src/ppx.ml[265,8605+102])
                                        Texp_ident "type_extension/1851"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[266,8711+4]..src/ppx.ml[266,8711+40])
                        Tpat_value
                        pattern (src/ppx.ml[266,8711+4]..src/ppx.ml[266,8711+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[266,8711+19]..src/ppx.ml[266,8711+40])
                              Tpat_var "extension_constructor/1852"
                          ]
                          None
                      expression (src/ppx.ml[266,8711+43]..src/ppx.ml[266,8711+124])
                        Texp_apply
                        expression (src/ppx.ml[266,8711+44]..src/ppx.ml[266,8711+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[266,8711+58]..src/ppx.ml[266,8711+123])
                              Texp_apply
                              expression (src/ppx.ml[266,8711+59]..src/ppx.ml[266,8711+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[266,8711+74]..src/ppx.ml[266,8711+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[266,8711+75]..src/ppx.ml[266,8711+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8711+76]..src/ppx.ml[266,8711+97]),None)
                                      expression (src/ppx.ml[266,8711+100]..src/ppx.ml[266,8711+121])
                                        Texp_ident "extension_constructor/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[267,8836+4]..src/ppx.ml[267,8836+31])
                        Tpat_value
                        pattern (src/ppx.ml[267,8836+4]..src/ppx.ml[267,8836+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[267,8836+17]..src/ppx.ml[267,8836+31])
                              Tpat_var "module_binding/1853"
                          ]
                          None
                      expression (src/ppx.ml[267,8836+34]..src/ppx.ml[267,8836+104])
                        Texp_apply
                        expression (src/ppx.ml[267,8836+35]..src/ppx.ml[267,8836+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,8836+49]..src/ppx.ml[267,8836+103])
                              Texp_apply
                              expression (src/ppx.ml[267,8836+50]..src/ppx.ml[267,8836+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,8836+65]..src/ppx.ml[267,8836+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,8836+66]..src/ppx.ml[267,8836+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8836+67]..src/ppx.ml[267,8836+85]),None)
                                      expression (src/ppx.ml[267,8836+87]..src/ppx.ml[267,8836+101])
                                        Texp_ident "module_binding/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[268,8941+4]..src/ppx.ml[268,8941+39])
                        Tpat_value
                        pattern (src/ppx.ml[268,8941+4]..src/ppx.ml[268,8941+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[268,8941+20]..src/ppx.ml[268,8941+39])
                              Tpat_var "module_binding_list/1854"
                          ]
                          None
                      expression (src/ppx.ml[268,8941+42]..src/ppx.ml[268,8941+121])
                        Texp_apply
                        expression (src/ppx.ml[268,8941+43]..src/ppx.ml[268,8941+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8941+57]..src/ppx.ml[268,8941+120])
                              Texp_apply
                              expression (src/ppx.ml[268,8941+58]..src/ppx.ml[268,8941+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[268,8941+73]..src/ppx.ml[268,8941+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[268,8941+74]..src/ppx.ml[268,8941+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8941+75]..src/ppx.ml[268,8941+96]),None)
                                      expression (src/ppx.ml[268,8941+99]..src/ppx.ml[268,8941+118])
                                        Texp_ident "module_binding_list/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,9063+4]..src/ppx.ml[269,9063+40])
                        Tpat_value
                        pattern (src/ppx.ml[269,9063+4]..src/ppx.ml[269,9063+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[269,9063+17]..src/ppx.ml[269,9063+40])
                              Tpat_var "module_type_declaration/1855"
                          ]
                          None
                      expression (src/ppx.ml[269,9063+43]..src/ppx.ml[269,9063+124])
                        Texp_apply
                        expression (src/ppx.ml[269,9063+44]..src/ppx.ml[269,9063+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,9063+58]..src/ppx.ml[269,9063+123])
                              Texp_apply
                              expression (src/ppx.ml[269,9063+59]..src/ppx.ml[269,9063+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,9063+74]..src/ppx.ml[269,9063+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,9063+75]..src/ppx.ml[269,9063+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9063+76]..src/ppx.ml[269,9063+95]),None)
                                      expression (src/ppx.ml[269,9063+98]..src/ppx.ml[269,9063+121])
                                        Texp_ident "module_type_declaration/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[271,9205+4]..src/ppx.ml[271,9205+30])
                        Tpat_value
                        pattern (src/ppx.ml[271,9205+4]..src/ppx.ml[271,9205+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[271,9205+14]..src/ppx.ml[271,9205+30])
                              Tpat_var "open_description/1856"
                          ]
                          None
                      expression (src/ppx.ml[271,9205+33]..src/ppx.ml[271,9205+103])
                        Texp_apply
                        expression (src/ppx.ml[271,9205+34]..src/ppx.ml[271,9205+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[271,9205+48]..src/ppx.ml[271,9205+102])
                              Texp_apply
                              expression (src/ppx.ml[271,9205+49]..src/ppx.ml[271,9205+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[271,9205+64]..src/ppx.ml[271,9205+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[271,9205+65]..src/ppx.ml[271,9205+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[271,9205+66]..src/ppx.ml[271,9205+81]),None)
                                      expression (src/ppx.ml[271,9205+84]..src/ppx.ml[271,9205+100])
                                        Texp_ident "open_description/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[272,9309+4]..src/ppx.ml[272,9309+36])
                        Tpat_value
                        pattern (src/ppx.ml[272,9309+4]..src/ppx.ml[272,9309+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[272,9309+15]..src/ppx.ml[272,9309+36])
                              Tpat_var "class_declarations/1857"
                          ]
                          None
                      expression (src/ppx.ml[272,9309+39]..src/ppx.ml[272,9309+113])
                        Texp_apply
                        expression (src/ppx.ml[272,9309+40]..src/ppx.ml[272,9309+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[272,9309+54]..src/ppx.ml[272,9309+112])
                              Texp_apply
                              expression (src/ppx.ml[272,9309+55]..src/ppx.ml[272,9309+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[272,9309+70]..src/ppx.ml[272,9309+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[272,9309+71]..src/ppx.ml[272,9309+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9309+72]..src/ppx.ml[272,9309+89]),None)
                                      expression (src/ppx.ml[272,9309+92]..src/ppx.ml[272,9309+110])
                                        Texp_ident "class_declarations/1857"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[273,9423+4]..src/ppx.ml[273,9423+45])
                        Tpat_value
                        pattern (src/ppx.ml[273,9423+4]..src/ppx.ml[273,9423+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[273,9423+20]..src/ppx.ml[273,9423+45])
                              Tpat_var "class_type_declarations/1858"
                          ]
                          None
                      expression (src/ppx.ml[273,9423+48]..src/ppx.ml[273,9423+132])
                        Texp_apply
                        expression (src/ppx.ml[273,9423+49]..src/ppx.ml[273,9423+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[273,9423+63]..src/ppx.ml[273,9423+131])
                              Texp_apply
                              expression (src/ppx.ml[273,9423+64]..src/ppx.ml[273,9423+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[273,9423+79]..src/ppx.ml[273,9423+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[273,9423+80]..src/ppx.ml[273,9423+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9423+81]..src/ppx.ml[273,9423+103]),None)
                                      expression (src/ppx.ml[273,9423+106]..src/ppx.ml[273,9423+129])
                                        Texp_ident "class_type_declarations/1858"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[274,9556+4]..src/ppx.ml[274,9556+39])
                        Tpat_value
                        pattern (src/ppx.ml[274,9556+4]..src/ppx.ml[274,9556+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[274,9556+18]..src/ppx.ml[274,9556+39])
                              Tpat_var "include_declaration/1859"
                          ]
                          None
                      expression (src/ppx.ml[274,9556+41]..src/ppx.ml[274,9556+117])
                        Texp_apply
                        expression (src/ppx.ml[274,9556+42]..src/ppx.ml[274,9556+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,9556+56]..src/ppx.ml[274,9556+116])
                              Texp_apply
                              expression (src/ppx.ml[274,9556+57]..src/ppx.ml[274,9556+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,9556+72]..src/ppx.ml[274,9556+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,9556+73]..src/ppx.ml[274,9556+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9556+74]..src/ppx.ml[274,9556+93]),None)
                                      expression (src/ppx.ml[274,9556+95]..src/ppx.ml[274,9556+114])
                                        Texp_ident "include_declaration/1859"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[275,9674+4]..src/ppx.ml[275,9674+30])
                        Tpat_value
                        pattern (src/ppx.ml[275,9674+4]..src/ppx.ml[275,9674+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[275,9674+19]..src/ppx.ml[275,9674+30])
                              Tpat_var "attribute/1860"
                          ]
                          None
                      expression (src/ppx.ml[275,9674+32]..src/ppx.ml[275,9674+101])
                        Texp_apply
                        expression (src/ppx.ml[275,9674+33]..src/ppx.ml[275,9674+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9674+47]..src/ppx.ml[275,9674+100])
                              Texp_apply
                              expression (src/ppx.ml[275,9674+48]..src/ppx.ml[275,9674+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[275,9674+63]..src/ppx.ml[275,9674+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[275,9674+64]..src/ppx.ml[275,9674+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9674+65]..src/ppx.ml[275,9674+86]),None)
                                      expression (src/ppx.ml[275,9674+89]..src/ppx.ml[275,9674+98])
                                        Texp_ident "attribute/1860"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,9776+4]..src/ppx.ml[276,9776+44])
                        Tpat_value
                        pattern (src/ppx.ml[276,9776+4]..src/ppx.ml[276,9776+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[276,9776+21]..src/ppx.ml[276,9776+30])
                              Tpat_var "extension/1861"
                            pattern (src/ppx.ml[276,9776+33]..src/ppx.ml[276,9776+43])
                              Tpat_var "attributes/1862"
                          ]
                          None
                      expression (src/ppx.ml[276,9776+46]..src/ppx.ml[276,9776+128])
                        Texp_apply
                        expression (src/ppx.ml[276,9776+47]..src/ppx.ml[276,9776+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[276,9776+61]..src/ppx.ml[276,9776+127])
                              Texp_apply
                              expression (src/ppx.ml[276,9776+62]..src/ppx.ml[276,9776+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[276,9776+77]..src/ppx.ml[276,9776+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[276,9776+78]..src/ppx.ml[276,9776+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9776+79]..src/ppx.ml[276,9776+100]),None)
                                      expression (src/ppx.ml[276,9776+103]..src/ppx.ml[276,9776+112])
                                        Texp_ident "extension/1861"
                                      expression (src/ppx.ml[276,9776+115]..src/ppx.ml[276,9776+125])
                                        Texp_ident "attributes/1862"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[278,9906+0]..src/ppx.ml[278,9906+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9906+4]..src/ppx.ml[278,9906+7])
          Tpat_var "foo/1863"
        expression (src/ppx.ml[278,9906+10]..src/ppx.ml[278,9906+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[280,9921+0]..src/ppx.ml[288,10140+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9921+4]..src/ppx.ml[280,9921+12])
          Tpat_var "printone/1864"
        expression (src/ppx.ml[280,9921+13]..src/ppx.ml[288,10140+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[280,9921+14]..src/ppx.ml[280,9921+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[280,9921+18]..src/ppx.ml[280,9921+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1865"
                pattern (src/ppx.ml[280,9921+14]..src/ppx.ml[280,9921+15])
                  Tpat_any
              expression (src/ppx.ml[281,9964+2]..src/ppx.ml[288,10140+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[280,9921+36]..src/ppx.ml[280,9921+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[281,9964+8]..src/ppx.ml[281,9964+9])
                  Texp_ident "x/1865"
                [
                  <case>
                    pattern (src/ppx.ml[282,9979+3]..src/ppx.ml[285,10029+3])
                      Tpat_value
                      pattern (src/ppx.ml[282,9979+3]..src/ppx.ml[285,10029+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[283,9984+4]..src/ppx.ml[283,9984+13])
                              Tpat_var "pstr_desc/1866"
                        ]
                    expression (src/ppx.ml[287,10113+4]..src/ppx.ml[288,10140+6])
                      Texp_sequence
                      expression (src/ppx.ml[287,10113+4]..src/ppx.ml[287,10113+25])
                        Texp_apply
                        expression (src/ppx.ml[287,10113+5]..src/ppx.ml[287,10113+14])
                          Texp_ident "printdesc/1841"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[287,10113+15]..src/ppx.ml[287,10113+24])
                              Texp_ident "pstr_desc/1866"
                        ]
                      expression (src/ppx.ml[288,10140+4]..src/ppx.ml[288,10140+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[294,10260+0]..src/ppx.ml[296,10341+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10260+4]..src/ppx.ml[294,10260+13])
          Tpat_var "printone2/1867"
        expression (src/ppx.ml[294,10260+14]..src/ppx.ml[296,10341+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[294,10260+14]..src/ppx.ml[294,10260+15])
                Tpat_var "x/1868"
              expression (src/ppx.ml[295,10284+2]..src/ppx.ml[296,10341+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[294,10260+17]..src/ppx.ml[294,10260+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[295,10284+2]..src/ppx.ml[295,10284+55])
                  Texp_apply
                  expression (src/ppx.ml[295,10284+3]..src/ppx.ml[295,10284+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[295,10284+17]..src/ppx.ml[295,10284+54])
                        Texp_apply
                        expression (src/ppx.ml[295,10284+18]..src/ppx.ml[295,10284+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[295,10284+33]..src/ppx.ml[295,10284+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[295,10284+34]..src/ppx.ml[295,10284+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[295,10284+35]..src/ppx.ml[295,10284+49]),None)
                                expression (src/ppx.ml[295,10284+51]..src/ppx.ml[295,10284+52])
                                  Texp_ident "x/1868"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[296,10341+2]..src/ppx.ml[296,10341+12])
                  Texp_apply
                  expression (src/ppx.ml[296,10341+2]..src/ppx.ml[296,10341+10])
                    Texp_ident "printone/1864"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[296,10341+11]..src/ppx.ml[296,10341+12])
                        Texp_ident "x/1868"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[298,10357+0]..src/ppx.ml[300,10388+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10357+4]..src/ppx.ml[298,10357+9])
          Tpat_var "proc1/1869"
        expression (src/ppx.ml[298,10357+10]..src/ppx.ml[300,10388+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[298,10357+10]..src/ppx.ml[298,10357+11])
                Tpat_var "x/1871"
              expression (src/ppx.ml[299,10373+2]..src/ppx.ml[300,10388+3])
                Texp_sequence
                expression (src/ppx.ml[299,10373+2]..src/ppx.ml[299,10373+13])
                  Texp_apply
                  expression (src/ppx.ml[299,10373+2]..src/ppx.ml[299,10373+11])
                    Texp_ident "printone2/1867"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[299,10373+12]..src/ppx.ml[299,10373+13])
                        Texp_ident "x/1871"
                  ]
                expression (src/ppx.ml[300,10388+2]..src/ppx.ml[300,10388+3])
                  Texp_ident "x/1871"
          ]
    ]
  structure_item (src/ppx.ml[302,10393+0]..src/ppx.ml[305,10542+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10393+4]..src/ppx.ml[302,10393+9])
          Tpat_var "debug/1872"
        expression (src/ppx.ml[302,10393+10]..src/ppx.ml[305,10542+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[302,10393+10]..src/ppx.ml[302,10393+14])
                Tpat_var "proc/1874"
              expression (src/ppx.ml[302,10393+15]..src/ppx.ml[305,10542+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[302,10393+15]..src/ppx.ml[302,10393+18])
                      Tpat_var "lst/1875"
                    expression (src/ppx.ml[303,10421+2]..src/ppx.ml[305,10542+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[302,10393+21]..src/ppx.ml[302,10393+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[303,10421+6]..src/ppx.ml[303,10421+12])
                            Tpat_var "result/1876"
                          expression (src/ppx.ml[303,10421+15]..src/ppx.ml[303,10421+32])
                            Texp_apply
                            expression (src/ppx.ml[303,10421+15]..src/ppx.ml[303,10421+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[303,10421+24]..src/ppx.ml[303,10421+28])
                                  Texp_ident "proc/1874"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[303,10421+29]..src/ppx.ml[303,10421+32])
                                  Texp_ident "lst/1875"
                            ]
                      ]
                      expression (src/ppx.ml[304,10457+2]..src/ppx.ml[305,10542+4])
                        Texp_sequence
                        expression (src/ppx.ml[304,10457+2]..src/ppx.ml[304,10457+83])
                          Texp_apply
                          expression (src/ppx.ml[304,10457+2]..src/ppx.ml[304,10457+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[304,10457+12]..src/ppx.ml[304,10457+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[304,10457+17]..src/ppx.ml[304,10457+18])
                                      Tpat_var "i/1940"
                                    expression (src/ppx.ml[304,10457+22]..src/ppx.ml[304,10457+75])
                                      Texp_apply
                                      expression (src/ppx.ml[304,10457+22]..src/ppx.ml[304,10457+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[304,10457+36]..src/ppx.ml[304,10457+75])
                                            Texp_apply
                                            expression (src/ppx.ml[304,10457+37]..src/ppx.ml[304,10457+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[304,10457+52]..src/ppx.ml[304,10457+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[304,10457+53]..src/ppx.ml[304,10457+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10457+54]..src/ppx.ml[304,10457+69]),None)
                                                    expression (src/ppx.ml[304,10457+72]..src/ppx.ml[304,10457+73])
                                                      Texp_ident "i/1940"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[304,10457+77]..src/ppx.ml[304,10457+83])
                                Texp_ident "result/1876"
                          ]
                        expression (src/ppx.ml[305,10542+2]..src/ppx.ml[305,10542+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[307,10564+0]..src/ppx.ml[310,10688+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10564+4]..src/ppx.ml[307,10564+13])
          Tpat_var "transform/1941"
        expression (src/ppx.ml[307,10564+14]..src/ppx.ml[310,10688+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[307,10564+14]..src/ppx.ml[307,10564+15])
                Tpat_var "x/1943"
              expression (src/ppx.ml[308,10619+2]..src/ppx.ml[310,10688+3])
                Texp_sequence
                expression (src/ppx.ml[308,10619+2]..src/ppx.ml[308,10619+48])
                  Texp_apply
                  expression (src/ppx.ml[308,10619+3]..src/ppx.ml[308,10619+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[308,10619+17]..src/ppx.ml[308,10619+47])
                        Texp_apply
                        expression (src/ppx.ml[308,10619+18]..src/ppx.ml[308,10619+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[308,10619+33]..src/ppx.ml[308,10619+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[308,10619+34]..src/ppx.ml[308,10619+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[308,10619+35]..src/ppx.ml[308,10619+42]),None)
                                expression (src/ppx.ml[308,10619+44]..src/ppx.ml[308,10619+45])
                                  Texp_ident "x/1943"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[309,10669+2]..src/ppx.ml[310,10688+3])
                  Texp_sequence
                  expression (src/ppx.ml[309,10669+2]..src/ppx.ml[309,10669+17])
                    Texp_apply
                    expression (src/ppx.ml[309,10669+3]..src/ppx.ml[309,10669+8])
                      Texp_ident "debug/1872"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[309,10669+9]..src/ppx.ml[309,10669+14])
                          Texp_ident "proc1/1869"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[309,10669+15]..src/ppx.ml[309,10669+16])
                          Texp_ident "x/1943"
                    ]
                  expression (src/ppx.ml[310,10688+2]..src/ppx.ml[310,10688+3])
                    Texp_ident "x/1943"
          ]
    ]
  structure_item (src/ppx.ml[312,10695+1]..src/ppx.ml[312,10695+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10695+5]..src/ppx.ml[312,10695+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[312,10695+10]..src/ppx.ml[312,10695+69])
          Texp_apply
          expression (src/ppx.ml[312,10695+10]..src/ppx.ml[312,10695+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[312,10695+47]..src/ppx.ml[312,10695+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[312,10695+47]..src/ppx.ml[312,10695+56])
                    Texp_ident "transform/1941"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[312,10695+57]..src/ppx.ml[312,10695+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[312,10695+58]..src/ppx.ml[312,10695+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.134>;
 "foo"[value] -> <Ppx.126>;
 "print_constructor_arguments"[value] -> <Ppx.73>;
 "print_type_decl"[value] -> <Ppx.91>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.105>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.127>;
 "printone2"[value] -> <Ppx.130>;
 "proc1"[value] -> <Ppx.132>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.33>;
 "process_core_type_desc"[value] -> <Ppx.31>;
 "process_core_type_list"[value] -> <Ppx.34>;
 "process_id"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.87>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.77>;
 "process_record_kind"[value] -> <Ppx.30>;
 "process_record_kind_list"[value] -> <Ppx.32>;
 "process_type_decl_list"[value] -> <Ppx.101>;
 "transform"[value] -> <Ppx.139>;
 }

(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (let
           (*match*/5106 =a (field 1 x/1047)
            pstr_desc/1275 =a (field 0 x/1047))
           (seq (apply (field 23 (global Ppx!)) pstr_desc/1275) 0))))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (let
           (pexp_attributes/1290 =a (field 3 x/1286)
            pexp_loc_stack/1289 =a (field 2 x/1286)
            pexp_loc/1288 =a (field 1 x/1286)
            pexp_desc/1287 =a (field 0 x/1286))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_attributes/1290)))
             0))))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (let
           (pvb_loc/1297 =a (field 3 x/1293)
            pvb_attributes/1296 =a (field 2 x/1293)
            pvb_expr/1295 =a (field 1 x/1293)
            pvb_pat/1294 =a (field 0 x/1293))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.pat:" pvb_pat/1294)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.expr:" pvb_expr/1295)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.atrr:"
                   pvb_attributes/1296)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.loc:" pvb_loc/1297)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
             (seq (apply (field 3 (global Ppx!)) h/1300)
               (apply print_value_binding_list/1298 t/1301) 0)))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439 : int
         (let (*match*/5107 =a (field 1 x/1439) txt/1723 =a (field 0 x/1439))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:process_id:" txt/1723))))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1724
       (function x/1729 : int
         (let
           (pld_attributes/1734 =a (field 4 x/1729)
            pld_loc/1733 =a (field 3 x/1729)
            pld_type/1732 =a (field 2 x/1729)
            pld_mutable/1731 =a (field 1 x/1729)
            pld_name/1730 =a (field 0 x/1729))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
                 pld_name/1730 "mutable" pld_mutable/1731 "type"
                 pld_type/1732)))))
      process_core_type_desc/1725
        (function x/1735 : int
          (switch* x/1735
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (let (name/1739 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_var:" name/1739))))
           case tag 1:
            (let
              (core_type2/1742 =a (field 2 x/1735)
               core_type/1741 =a (field 1 x/1735)
               arg_label/1740 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:")))
           case tag 2:
            (let (a/1738 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:")))
           case tag 3:
            (let (b/1737 =a (field 1 x/1735) a/1736 =a (field 0 x/1735))
              (seq (apply (field 5 (global Ppx!)) a/1736)
                (apply process_core_type_list/1728 b/1737)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1736 "types"
                      b/1737)))))
           case tag 4:
            (let (b/1744 =a (field 1 x/1735) a/1743 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:")))
           case tag 5:
            (let (b/1746 =a (field 1 x/1735) a/1745 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:")))
           case tag 6:
            (let (b/1748 =a (field 1 x/1735) a/1747 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:")))
           case tag 7:
            (let
              (c/1751 =a (field 2 x/1735)
               b/1750 =a (field 1 x/1735)
               a/1749 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:")))
           case tag 8:
            (let (b/1753 =a (field 1 x/1735) a/1752 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:")))
           case tag 9:
            (let (a/1754 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1754))))
           case tag 10:
            (let (a/1755 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_extension:" a/1755))))))
      process_record_kind_list/1726
        (function x/1795 : int
          (if (isint x/1795) 0
            (let (t/1797 =a (field 1 x/1795) h/1796 =a (field 0 x/1795))
              (seq (apply process_record_kind/1724 h/1796)
                (apply process_record_kind_list/1726 t/1797) 0))))
      process_core_type/1727
        (function x/1798 : int
          (let
            (ptyp_attributes/1802 =a (field 3 x/1798)
             ptyp_loc_stack/1801 =a (field 2 x/1798)
             ptyp_loc/1800 =a (field 1 x/1798)
             ptyp_desc/1799 =a (field 0 x/1798))
            (seq (apply process_core_type_desc/1725 ptyp_desc/1799)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1799))))))
      process_core_type_list/1728
        (function x/1803 : int
          (if (isint x/1803) 0
            (let (t/1805 =a (field 1 x/1803) h/1804 =a (field 0 x/1803))
              (seq (apply process_core_type/1727 h/1804)
                (apply process_core_type_list/1728 t/1805))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1724)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1725)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1726)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1727)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1728)))
  (let
    (print_constructor_arguments/1806 =
       (function x/1808 : int
         (switch* x/1808
          case tag 0:
           (let (a/1809 =a (field 0 x/1808))
             (seq (apply (field 10 (global Ppx!)) a/1809)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1809)))))
          case tag 1:
           (let (a/1810 =a (field 0 x/1808))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pcstr_record:" a/1810)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1806))
  (letrec
    (process_pype_variant_constructor_declaration_list/1811
       (function x/1812 : int
         (if (isint x/1812) 0
           (let
             (h/1813 =a (field 0 x/1812)
              pcd_attributes/1820 =a (field 5 h/1813)
              pcd_loc/1819 =a (field 4 h/1813)
              pcd_res/1818 =a (field 3 h/1813)
              pcd_args/1817 =a (field 2 h/1813)
              pcd_vars/1816 =a (field 1 h/1813)
              pcd_name/1815 =a (field 0 h/1813)
              t/1814 =a (field 1 x/1812))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1817)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" pcd_name/1815
                     "vars" pcd_vars/1816 "args" pcd_args/1817 "res"
                     pcd_res/1818 "loc" pcd_loc/1819 "attrs"
                     pcd_attributes/1820)))
               (apply process_pype_variant_constructor_declaration_list/1811
                 t/1814)
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1811))
  (let
    (process_kind/1821 =
       (function x/1823 : int
         (switch* x/1823
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1824 =a (field 0 x/1823))
             (seq (apply (field 12 (global Ppx!)) a/1824)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1824)))))
          case tag 1:
           (let (a/1825 =a (field 0 x/1823))
             (apply (field 8 (global Ppx!)) a/1825)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1821))
  (let
    (print_type_decl/1826 =
       (function x/1828 : int
         (let
           (ptype_loc/1836 =a (field 7 x/1828)
            ptype_attributes/1835 =a (field 6 x/1828)
            ptype_manifest/1834 =a (field 5 x/1828)
            ptype_private/1833 =a (field 4 x/1828)
            ptype_kind/1832 =a (field 3 x/1828)
            ptype_cstrs/1831 =a (field 2 x/1828)
            ptype_params/1830 =a (field 1 x/1828)
            ptype_name/1829 =a (field 0 x/1828))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" ptype_name/1829)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" ptype_params/1830)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" ptype_cstrs/1831)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1832)))
             (apply (field 13 (global Ppx!)) ptype_kind/1832)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   ptype_private/1833 "DEBUG:manifest" ptype_manifest/1834
                   "DEBUG:attr" ptype_attributes/1835 "DEBUG:loc"
                   ptype_loc/1836)))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1826))
  (letrec
    (process_type_decl_list/1837
       (function x/1838 : int
         (if (isint x/1838) 0
           (let (t/1840 =a (field 1 x/1838) h/1839 =a (field 0 x/1838))
             (seq (apply (field 14 (global Ppx!)) h/1839)
               (apply process_type_decl_list/1837 t/1840) 0)))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1837))
  (let
    (printdesc/1841 =
       (function x/1843 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1843)))
           (switch* x/1843
            case tag 0:
             (let
               (attributes/1845 =a (field 1 x/1843)
                expression/1844 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_eval:" expression/1844
                     attributes/1845))))
            case tag 1:
             (let
               (value_binding_list/1847 =a (field 1 x/1843)
                rec_flag/1846 =a (field 0 x/1843))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:" rec_flag/1846
                       value_binding_list/1847)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1847)))
            case tag 2:
             (let (value_description/1848 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_primitive:"
                     value_description/1848))))
            case tag 3:
             (let
               (type_declaration_list/1850 =a (field 1 x/1843)
                rec_flag/1849 =a (field 0 x/1843))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1850)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:" rec_flag/1849
                       type_declaration_list/1850)))))
            case tag 4:
             (let (type_extension/1851 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_typext:" type_extension/1851))))
            case tag 5:
             (let (extension_constructor/1852 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_exception:"
                     extension_constructor/1852))))
            case tag 6:
             (let (module_binding/1853 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_module:" module_binding/1853))))
            case tag 7:
             (let (module_binding_list/1854 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_recmodule:"
                     module_binding_list/1854))))
            case tag 8:
             (let (module_type_declaration/1855 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_modtype:"
                     module_type_declaration/1855))))
            case tag 9:
             (let (open_description/1856 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_open" open_description/1856))))
            case tag 10:
             (let (class_declarations/1857 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class:" class_declarations/1857))))
            case tag 11:
             (let (class_type_declarations/1858 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class_type:"
                     class_type_declarations/1858))))
            case tag 12:
             (let (include_declaration/1859 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_include:"
                     include_declaration/1859))))
            case tag 13:
             (let (attribute/1860 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_attribute:" attribute/1860))))
            case tag 14:
             (let
               (attributes/1862 =a (field 1 x/1843)
                extension/1861 =a (field 0 x/1843))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_extension:" extension/1861
                     attributes/1862))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1841))
  (let (foo/1863 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1863))
  (let
    (printone/1864 =
       (function x/1865 : int
         (let
           (*match*/5108 =a (field 1 x/1865)
            pstr_desc/1866 =a (field 0 x/1865))
           (seq (apply (field 16 (global Ppx!)) pstr_desc/1866) 0))))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1864))
  (let
    (printone2/1867 =
       (function x/1868 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1868)))
           (apply (field 18 (global Ppx!)) x/1868))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1867))
  (let
    (proc1/1869 =
       (function x/1871 (seq (apply (field 19 (global Ppx!)) x/1871) x/1871)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1869))
  (let
    (debug/1872 =
       (function proc/1874 lst/1875 : int
         (let
           (result/1876 =
              (apply (field 18 (global Stdlib__List!)) proc/1874 lst/1875))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1940 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1940))))
               result/1876)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1872))
  (let
    (transform/1941 =
       (function x/1943
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1943)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1943)
           x/1943)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1941))
  (let
    (*match*/5110 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)
(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (seq (apply (field 23 (global Ppx!)) (field 0 x/1047)) 0)))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 0 x/1286))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 3 x/1286))))
           0)))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.pat:" (field 0 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.expr:" (field 1 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.atrr:" (field 2 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.loc:" (field 3 x/1293)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (seq (apply (field 3 (global Ppx!)) (field 0 x/1299))
             (apply print_value_binding_list/1298 (field 1 x/1299)) 0))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG:process_id:" (field 0 x/1439))))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1724
       (function x/1729 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
               (field 0 x/1729) "mutable" (field 1 x/1729) "type"
               (field 2 x/1729)))))
      process_core_type_desc/1725
        (function x/1735 : int
          (switch* x/1735
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_var:" (field 0 x/1735))))
           case tag 1:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:"))
           case tag 2:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:"))
           case tag 3:
            (let (b/1737 =a (field 1 x/1735) a/1736 =a (field 0 x/1735))
              (seq (apply (field 5 (global Ppx!)) a/1736)
                (apply process_core_type_list/1728 b/1737)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1736 "types"
                      b/1737)))))
           case tag 4:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:"))
           case tag 5:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:"))
           case tag 6:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:"))
           case tag 7:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:"))
           case tag 8:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:"))
           case tag 9:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_arrow3:" (field 0 x/1735))))
           case tag 10:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_extension:" (field 0 x/1735))))))
      process_record_kind_list/1726
        (function x/1795 : int
          (if (isint x/1795) 0
            (seq (apply process_record_kind/1724 (field 0 x/1795))
              (apply process_record_kind_list/1726 (field 1 x/1795)) 0)))
      process_core_type/1727
        (function x/1798 : int
          (let (ptyp_desc/1799 =a (field 0 x/1798))
            (seq (apply process_core_type_desc/1725 ptyp_desc/1799)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1799))))))
      process_core_type_list/1728
        (function x/1803 : int
          (if (isint x/1803) 0
            (seq (apply process_core_type/1727 (field 0 x/1803))
              (apply process_core_type_list/1728 (field 1 x/1803))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1724)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1725)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1726)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1727)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1728)))
  (let
    (print_constructor_arguments/1806 =
       (function x/1808 : int
         (switch* x/1808
          case tag 0:
           (let (a/1809 =a (field 0 x/1808))
             (seq (apply (field 10 (global Ppx!)) a/1809)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1809)))))
          case tag 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:Pcstr_record:" (field 0 x/1808)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1806))
  (letrec
    (process_pype_variant_constructor_declaration_list/1811
       (function x/1812 : int
         (if (isint x/1812) 0
           (let
             (h/1813 =a (field 0 x/1812) pcd_args/1817 =a (field 2 h/1813))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1817)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" (field 0 h/1813)
                     "vars" (field 1 h/1813) "args" pcd_args/1817 "res"
                     (field 3 h/1813) "loc" (field 4 h/1813) "attrs"
                     (field 5 h/1813))))
               (apply process_pype_variant_constructor_declaration_list/1811
                 (field 1 x/1812))
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1811))
  (let
    (process_kind/1821 =
       (function x/1823 : int
         (switch* x/1823
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1824 =a (field 0 x/1823))
             (seq (apply (field 12 (global Ppx!)) a/1824)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1824)))))
          case tag 1: (apply (field 8 (global Ppx!)) (field 0 x/1823)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1821))
  (let
    (print_type_decl/1826 =
       (function x/1828 : int
         (let (ptype_kind/1832 =a (field 3 x/1828))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" (field 0 x/1828))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" (field 1 x/1828))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" (field 2 x/1828))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1832)))
             (apply (field 13 (global Ppx!)) ptype_kind/1832)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   (field 4 x/1828) "DEBUG:manifest" (field 5 x/1828)
                   "DEBUG:attr" (field 6 x/1828) "DEBUG:loc"
                   (field 7 x/1828))))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1826))
  (letrec
    (process_type_decl_list/1837
       (function x/1838 : int
         (if (isint x/1838) 0
           (seq (apply (field 14 (global Ppx!)) (field 0 x/1838))
             (apply process_type_decl_list/1837 (field 1 x/1838)) 0))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1837))
  (let
    (printdesc/1841 =
       (function x/1843 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1843)))
           (switch* x/1843
            case tag 0:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_eval:" (field 0 x/1843)
                   (field 1 x/1843))))
            case tag 1:
             (let (value_binding_list/1847 =a (field 1 x/1843))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:"
                       (field 0 x/1843) value_binding_list/1847)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1847)))
            case tag 2:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_primitive:" (field 0 x/1843))))
            case tag 3:
             (let (type_declaration_list/1850 =a (field 1 x/1843))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1850)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:"
                       (field 0 x/1843) type_declaration_list/1850)))))
            case tag 4:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_typext:" (field 0 x/1843))))
            case tag 5:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_exception:" (field 0 x/1843))))
            case tag 6:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_module:" (field 0 x/1843))))
            case tag 7:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_recmodule:" (field 0 x/1843))))
            case tag 8:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_modtype:" (field 0 x/1843))))
            case tag 9:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_open" (field 0 x/1843))))
            case tag 10:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class:" (field 0 x/1843))))
            case tag 11:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class_type:" (field 0 x/1843))))
            case tag 12:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_include:" (field 0 x/1843))))
            case tag 13:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_attribute:" (field 0 x/1843))))
            case tag 14:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_extension:" (field 0 x/1843)
                   (field 1 x/1843))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1841))
  (let (foo/1863 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1863))
  (let
    (printone/1864 =
       (function x/1865 : int
         (seq (apply (field 16 (global Ppx!)) (field 0 x/1865)) 0)))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1864))
  (let
    (printone2/1867 =
       (function x/1868 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1868)))
           (apply (field 18 (global Ppx!)) x/1868))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1867))
  (let
    (proc1/1869 =
       (function x/1871 (seq (apply (field 19 (global Ppx!)) x/1871) x/1871)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1869))
  (let
    (debug/1872 =
       (function proc/1874 lst/1875 : int
         (let
           (result/1876 =
              (apply (field 18 (global Stdlib__List!)) proc/1874 lst/1875))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1940 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1940))))
               result/1876)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1872))
  (let
    (transform/1941 =
       (function x/1943
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1943)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1943)
           x/1943)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1941))
  (let
    (*match*/5110 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)

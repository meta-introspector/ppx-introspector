[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[75,2045+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[75,2045+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[75,2045+7])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[75,2045+7])
                  Pexp_match
                  expression (src/ppx.ml[72,1943+10]..[72,1943+13])
                    Pexp_ident "txt" (src/ppx.ml[72,1943+10]..[72,1943+13])
                  [
                    <case>
                      pattern (src/ppx.ml[73,1962+4]..[73,1962+12])
                        Ppat_var "txt2" (src/ppx.ml[73,1962+6]..[73,1962+10])
                      expression (src/ppx.ml[74,1978+4]..[75,2045+7])
                        Pexp_sequence
                        expression (src/ppx.ml[74,1978+4]..[74,1978+65])
                          Pexp_apply
                          expression (src/ppx.ml[74,1978+5]..[74,1978+18])
                            Pexp_ident "print_endline" (src/ppx.ml[74,1978+5]..[74,1978+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[74,1978+19]..[74,1978+64])
                                Pexp_apply
                                expression (src/ppx.ml[74,1978+20]..[74,1978+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[74,1978+20]..[74,1978+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[74,1978+35]..[74,1978+63])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[74,1978+36]..[74,1978+55])
                                          Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[74,1978+37]..[74,1978+54]),None)
                                        expression (src/ppx.ml[74,1978+58]..[74,1978+62])
                                          Pexp_ident "txt2" (src/ppx.ml[74,1978+58]..[74,1978+62])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[75,2045+4]..[75,2045+7])
                          Pexp_ident "txt" (src/ppx.ml[75,2045+4]..[75,2045+7])
                  ]
            ]
    ]
  structure_item (src/ppx.ml[77,2056+0]..[158,4905+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2056+8]..[77,2056+27])
          Ppat_var "process_record_kind" (src/ppx.ml[77,2056+8]..[77,2056+27])
        expression (src/ppx.ml[77,2056+27]..[91,2540+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[77,2056+27]..[77,2056+30])
            Ppat_var "x" (src/ppx.ml[77,2056+28]..[77,2056+29])
          expression (src/ppx.ml[78,2089+2]..[91,2540+47])
            Pexp_match
            expression (src/ppx.ml[78,2089+8]..[78,2089+9])
              Pexp_ident "x" (src/ppx.ml[78,2089+8]..[78,2089+9])
            [
              <case>
                pattern (src/ppx.ml[79,2104+4]..[85,2285+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[80,2110+5]..[80,2110+13]) ghost
                      pattern (src/ppx.ml[80,2110+5]..[80,2110+13])
                        Ppat_var "pld_name" (src/ppx.ml[80,2110+5]..[80,2110+13])
                    "pld_mutable" (src/ppx.ml[81,2143+5]..[81,2143+16]) ghost
                      pattern (src/ppx.ml[81,2143+5]..[81,2143+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[81,2143+5]..[81,2143+16])
                    "pld_type" (src/ppx.ml[82,2181+5]..[82,2181+13]) ghost
                      pattern (src/ppx.ml[82,2181+5]..[82,2181+13])
                        Ppat_var "pld_type" (src/ppx.ml[82,2181+5]..[82,2181+13])
                    "pld_loc" (src/ppx.ml[83,2213+5]..[83,2213+12]) ghost
                      pattern (src/ppx.ml[83,2213+5]..[83,2213+12])
                        Ppat_var "pld_loc" (src/ppx.ml[83,2213+5]..[83,2213+12])
                    "pld_attributes" (src/ppx.ml[84,2245+5]..[84,2245+19]) ghost
                      pattern (src/ppx.ml[84,2245+5]..[84,2245+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[84,2245+5]..[84,2245+19])
                  ]
                expression (src/ppx.ml[86,2293+4]..[91,2540+47])
                  Pexp_apply
                  expression (src/ppx.ml[86,2293+5]..[86,2293+18])
                    Pexp_ident "print_endline" (src/ppx.ml[86,2293+5]..[86,2293+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[86,2293+19]..[91,2540+46])
                        Pexp_apply
                        expression (src/ppx.ml[86,2293+20]..[86,2293+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[86,2293+20]..[86,2293+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[86,2293+35]..[91,2540+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[86,2293+36]..[86,2293+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[86,2293+37]..[86,2293+56]),None)
                                expression (src/ppx.ml[87,2354+36]..[87,2354+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[87,2354+36]..[87,2354+44])
                                expression (src/ppx.ml[88,2400+36]..[88,2400+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[88,2400+37]..[88,2400+44]),None)
                                expression (src/ppx.ml[89,2447+36]..[89,2447+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[89,2447+36]..[89,2447+47])
                                expression (src/ppx.ml[90,2496+36]..[90,2496+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[90,2496+37]..[90,2496+41]),None)
                                expression (src/ppx.ml[91,2540+36]..[91,2540+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[91,2540+36]..[91,2540+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[93,2592+0]..[93,2592+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[93,2592+0]..[93,2592+22])
        expression (src/ppx.ml[93,2592+23]..[132,4223+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[93,2592+23]..[93,2592+24])
            Ppat_var "x" (src/ppx.ml[93,2592+23]..[93,2592+24])
          expression (src/ppx.ml[94,2619+2]..[132,4223+65])
            Pexp_match
            expression (src/ppx.ml[94,2619+8]..[94,2619+9])
              Pexp_ident "x" (src/ppx.ml[94,2619+8]..[94,2619+9])
            [
              <case>
                pattern (src/ppx.ml[95,2634+4]..[95,2634+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[95,2634+4]..[95,2634+15])
                  Some
                    []
                    pattern (src/ppx.ml[95,2634+16]..[95,2634+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[95,2634+17]..[95,2634+18])
                          Ppat_var "a" (src/ppx.ml[95,2634+17]..[95,2634+18])
                        pattern (src/ppx.ml[95,2634+19]..[95,2634+20])
                          Ppat_var "b" (src/ppx.ml[95,2634+19]..[95,2634+20])
                      ]
                expression (src/ppx.ml[97,2705+4]..[99,2771+91])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[97,2705+8]..[97,2705+12])
                        Ppat_var "myid" (src/ppx.ml[97,2705+8]..[97,2705+12])
                      expression (src/ppx.ml[97,2705+15]..[97,2705+29])
                        Pexp_apply
                        expression (src/ppx.ml[97,2705+16]..[97,2705+26])
                          Pexp_ident "process_id" (src/ppx.ml[97,2705+16]..[97,2705+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[97,2705+27]..[97,2705+28])
                              Pexp_ident "a" (src/ppx.ml[97,2705+27]..[97,2705+28])
                        ]
                  ]
                  expression (src/ppx.ml[98,2738+4]..[99,2771+91])
                    Pexp_sequence
                    expression (src/ppx.ml[98,2738+4]..[98,2738+30])
                      Pexp_apply
                      expression (src/ppx.ml[98,2738+5]..[98,2738+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[98,2738+5]..[98,2738+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[98,2738+28]..[98,2738+29])
                            Pexp_ident "b" (src/ppx.ml[98,2738+28]..[98,2738+29])
                      ]
                    expression (src/ppx.ml[99,2771+4]..[99,2771+91])
                      Pexp_apply
                      expression (src/ppx.ml[99,2771+5]..[99,2771+18])
                        Pexp_ident "print_endline" (src/ppx.ml[99,2771+5]..[99,2771+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[99,2771+19]..[99,2771+90])
                            Pexp_apply
                            expression (src/ppx.ml[99,2771+20]..[99,2771+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[99,2771+20]..[99,2771+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[99,2771+35]..[99,2771+89])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[99,2771+36]..[99,2771+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[99,2771+37]..[99,2771+55]),None)
                                    expression (src/ppx.ml[99,2771+58]..[99,2771+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[99,2771+59]..[99,2771+61]),None)
                                    expression (src/ppx.ml[99,2771+63]..[99,2771+64])
                                      Pexp_ident "a" (src/ppx.ml[99,2771+63]..[99,2771+64])
                                    expression (src/ppx.ml[99,2771+66]..[99,2771+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[99,2771+67]..[99,2771+72]),None)
                                    expression (src/ppx.ml[99,2771+74]..[99,2771+75])
                                      Pexp_ident "b" (src/ppx.ml[99,2771+74]..[99,2771+75])
                                    expression (src/ppx.ml[99,2771+78]..[99,2771+83])
                                      Pexp_constant PConst_string("id2",(src/ppx.ml[99,2771+79]..[99,2771+82]),None)
                                    expression (src/ppx.ml[99,2771+84]..[99,2771+88])
                                      Pexp_ident "myid" (src/ppx.ml[99,2771+84]..[99,2771+88])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[101,2864+4]..[101,2864+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[101,2864+4]..[101,2864+14])
                  Some
                    []
                    pattern (src/ppx.ml[101,2864+15]..[101,2864+16])
                      Ppat_var "a" (src/ppx.ml[101,2864+15]..[101,2864+16])
                expression (src/ppx.ml[103,2912+4]..[103,2912+59])
                  Pexp_apply
                  expression (src/ppx.ml[103,2912+5]..[103,2912+18])
                    Pexp_ident "print_endline" (src/ppx.ml[103,2912+5]..[103,2912+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[103,2912+19]..[103,2912+58])
                        Pexp_apply
                        expression (src/ppx.ml[103,2912+20]..[103,2912+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[103,2912+20]..[103,2912+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[103,2912+35]..[103,2912+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[103,2912+37]..[103,2912+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,2991+4]..[106,2991+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[106,2991+4]..[106,2991+12])
                  None
                expression (src/ppx.ml[106,2991+17]..[106,2991+69])
                  Pexp_apply
                  expression (src/ppx.ml[106,2991+18]..[106,2991+31])
                    Pexp_ident "print_endline" (src/ppx.ml[106,2991+18]..[106,2991+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[106,2991+32]..[106,2991+68])
                        Pexp_apply
                        expression (src/ppx.ml[106,2991+33]..[106,2991+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[106,2991+33]..[106,2991+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[106,2991+48]..[106,2991+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[106,2991+50]..[106,2991+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[107,3061+4]..[107,3061+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[107,3061+4]..[107,3061+12])
                  Some
                    []
                    pattern (src/ppx.ml[107,3061+13]..[107,3061+17])
                      Ppat_var "name" (src/ppx.ml[107,3061+13]..[107,3061+17])
                expression (src/ppx.ml[107,3061+20]..[107,3061+80])
                  Pexp_apply
                  expression (src/ppx.ml[107,3061+21]..[107,3061+34])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3061+21]..[107,3061+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3061+35]..[107,3061+79])
                        Pexp_apply
                        expression (src/ppx.ml[107,3061+36]..[107,3061+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3061+36]..[107,3061+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3061+51]..[107,3061+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[107,3061+52]..[107,3061+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[107,3061+53]..[107,3061+68]),None)
                                expression (src/ppx.ml[107,3061+73]..[107,3061+77])
                                  Pexp_ident "name" (src/ppx.ml[107,3061+73]..[107,3061+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[108,3142+4]..[108,3142+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[108,3142+4]..[108,3142+14])
                  Some
                    []
                    pattern (src/ppx.ml[108,3142+15]..[108,3142+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[108,3142+16]..[108,3142+25])
                          Ppat_var "arg_label" (src/ppx.ml[108,3142+16]..[108,3142+25])
                        pattern (src/ppx.ml[108,3142+28]..[108,3142+37])
                          Ppat_var "core_type" (src/ppx.ml[108,3142+28]..[108,3142+37])
                        pattern (src/ppx.ml[108,3142+40]..[108,3142+50])
                          Ppat_var "core_type2" (src/ppx.ml[108,3142+40]..[108,3142+50])
                      ]
                expression (src/ppx.ml[109,3197+4]..[109,3197+61])
                  Pexp_apply
                  expression (src/ppx.ml[109,3197+5]..[109,3197+18])
                    Pexp_ident "print_endline" (src/ppx.ml[109,3197+5]..[109,3197+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[109,3197+19]..[109,3197+60])
                        Pexp_apply
                        expression (src/ppx.ml[109,3197+20]..[109,3197+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[109,3197+20]..[109,3197+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[109,3197+35]..[109,3197+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[109,3197+37]..[109,3197+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[111,3260+4]..[111,3260+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[111,3260+4]..[111,3260+15])
                  Some
                    []
                    pattern (src/ppx.ml[111,3260+16]..[111,3260+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[111,3260+17]..[111,3260+18])
                          Ppat_var "a" (src/ppx.ml[111,3260+17]..[111,3260+18])
                        pattern (src/ppx.ml[111,3260+19]..[111,3260+20])
                          Ppat_var "b" (src/ppx.ml[111,3260+19]..[111,3260+20])
                      ]
                expression (src/ppx.ml[113,3329+4]..[113,3329+60])
                  Pexp_apply
                  expression (src/ppx.ml[113,3329+5]..[113,3329+18])
                    Pexp_ident "print_endline" (src/ppx.ml[113,3329+5]..[113,3329+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[113,3329+19]..[113,3329+59])
                        Pexp_apply
                        expression (src/ppx.ml[113,3329+20]..[113,3329+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[113,3329+20]..[113,3329+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[113,3329+35]..[113,3329+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[113,3329+37]..[113,3329+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[114,3390+4]..[114,3390+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[114,3390+4]..[114,3390+14])
                  Some
                    []
                    pattern (src/ppx.ml[114,3390+15]..[114,3390+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[114,3390+16]..[114,3390+17])
                          Ppat_var "a" (src/ppx.ml[114,3390+16]..[114,3390+17])
                        pattern (src/ppx.ml[114,3390+18]..[114,3390+19])
                          Ppat_var "b" (src/ppx.ml[114,3390+18]..[114,3390+19])
                      ]
                expression (src/ppx.ml[116,3460+4]..[116,3460+60])
                  Pexp_apply
                  expression (src/ppx.ml[116,3460+5]..[116,3460+18])
                    Pexp_ident "print_endline" (src/ppx.ml[116,3460+5]..[116,3460+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[116,3460+19]..[116,3460+59])
                        Pexp_apply
                        expression (src/ppx.ml[116,3460+20]..[116,3460+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[116,3460+20]..[116,3460+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[116,3460+35]..[116,3460+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[116,3460+37]..[116,3460+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[117,3521+4]..[117,3521+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[117,3521+4]..[117,3521+14])
                  Some
                    []
                    pattern (src/ppx.ml[117,3521+15]..[117,3521+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[117,3521+16]..[117,3521+17])
                          Ppat_var "a" (src/ppx.ml[117,3521+16]..[117,3521+17])
                        pattern (src/ppx.ml[117,3521+18]..[117,3521+19])
                          Ppat_var "b" (src/ppx.ml[117,3521+18]..[117,3521+19])
                      ]
                expression (src/ppx.ml[119,3582+4]..[119,3582+60])
                  Pexp_apply
                  expression (src/ppx.ml[119,3582+5]..[119,3582+18])
                    Pexp_ident "print_endline" (src/ppx.ml[119,3582+5]..[119,3582+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[119,3582+19]..[119,3582+59])
                        Pexp_apply
                        expression (src/ppx.ml[119,3582+20]..[119,3582+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[119,3582+20]..[119,3582+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[119,3582+35]..[119,3582+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[119,3582+37]..[119,3582+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[120,3643+4]..[120,3643+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[120,3643+4]..[120,3643+16])
                  Some
                    []
                    pattern (src/ppx.ml[120,3643+17]..[120,3643+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[120,3643+18]..[120,3643+19])
                          Ppat_var "a" (src/ppx.ml[120,3643+18]..[120,3643+19])
                        pattern (src/ppx.ml[120,3643+20]..[120,3643+21])
                          Ppat_var "b" (src/ppx.ml[120,3643+20]..[120,3643+21])
                        pattern (src/ppx.ml[120,3643+22]..[120,3643+23])
                          Ppat_var "c" (src/ppx.ml[120,3643+22]..[120,3643+23])
                      ]
                expression (src/ppx.ml[122,3733+4]..[122,3733+60])
                  Pexp_apply
                  expression (src/ppx.ml[122,3733+5]..[122,3733+18])
                    Pexp_ident "print_endline" (src/ppx.ml[122,3733+5]..[122,3733+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[122,3733+19]..[122,3733+59])
                        Pexp_apply
                        expression (src/ppx.ml[122,3733+20]..[122,3733+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[122,3733+20]..[122,3733+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[122,3733+35]..[122,3733+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[122,3733+37]..[122,3733+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[123,3794+4]..[123,3794+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[123,3794+4]..[123,3794+13])
                  Some
                    []
                    pattern (src/ppx.ml[123,3794+14]..[123,3794+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[123,3794+15]..[123,3794+16])
                          Ppat_var "a" (src/ppx.ml[123,3794+15]..[123,3794+16])
                        pattern (src/ppx.ml[123,3794+17]..[123,3794+18])
                          Ppat_var "b" (src/ppx.ml[123,3794+17]..[123,3794+18])
                      ]
                expression (src/ppx.ml[125,3858+4]..[125,3858+60])
                  Pexp_apply
                  expression (src/ppx.ml[125,3858+5]..[125,3858+18])
                    Pexp_ident "print_endline" (src/ppx.ml[125,3858+5]..[125,3858+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[125,3858+19]..[125,3858+59])
                        Pexp_apply
                        expression (src/ppx.ml[125,3858+20]..[125,3858+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[125,3858+20]..[125,3858+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[125,3858+35]..[125,3858+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[125,3858+37]..[125,3858+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[126,3919+4]..[126,3919+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[126,3919+4]..[126,3919+16])
                  Some
                    []
                    pattern (src/ppx.ml[126,3919+17]..[126,3919+18])
                      Ppat_var "a" (src/ppx.ml[126,3919+17]..[126,3919+18])
                expression (src/ppx.ml[128,3967+4]..[128,3967+62])
                  Pexp_apply
                  expression (src/ppx.ml[128,3967+5]..[128,3967+18])
                    Pexp_ident "print_endline" (src/ppx.ml[128,3967+5]..[128,3967+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[128,3967+19]..[128,3967+61])
                        Pexp_apply
                        expression (src/ppx.ml[128,3967+20]..[128,3967+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[128,3967+20]..[128,3967+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[128,3967+35]..[128,3967+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[128,3967+36]..[128,3967+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[128,3967+37]..[128,3967+55]),None)
                                expression (src/ppx.ml[128,3967+57]..[128,3967+58])
                                  Pexp_ident "a" (src/ppx.ml[128,3967+57]..[128,3967+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[131,4175+4]..[131,4175+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[131,4175+4]..[131,4175+18])
                  Some
                    []
                    pattern (src/ppx.ml[131,4175+19]..[131,4175+20])
                      Ppat_var "a" (src/ppx.ml[131,4175+19]..[131,4175+20])
                expression (src/ppx.ml[132,4223+4]..[132,4223+65])
                  Pexp_apply
                  expression (src/ppx.ml[132,4223+5]..[132,4223+18])
                    Pexp_ident "print_endline" (src/ppx.ml[132,4223+5]..[132,4223+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[132,4223+19]..[132,4223+64])
                        Pexp_apply
                        expression (src/ppx.ml[132,4223+20]..[132,4223+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[132,4223+20]..[132,4223+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[132,4223+35]..[132,4223+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[132,4223+36]..[132,4223+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[132,4223+37]..[132,4223+58]),None)
                                expression (src/ppx.ml[132,4223+60]..[132,4223+61])
                                  Pexp_ident "a" (src/ppx.ml[132,4223+60]..[132,4223+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[134,4293+2]..[134,4293+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[134,4293+2]..[134,4293+26])
        expression (src/ppx.ml[134,4293+26]..[140,4430+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[134,4293+26]..[134,4293+29])
            Ppat_var "x" (src/ppx.ml[134,4293+27]..[134,4293+28])
          expression (src/ppx.ml[135,4325+2]..[140,4430+6])
            Pexp_match
            expression (src/ppx.ml[135,4325+8]..[135,4325+9])
              Pexp_ident "x" (src/ppx.ml[135,4325+8]..[135,4325+9])
            [
              <case>
                pattern (src/ppx.ml[136,4340+4]..[136,4340+6])
                  Ppat_construct "[]" (src/ppx.ml[136,4340+4]..[136,4340+6])
                  None
                expression (src/ppx.ml[136,4340+10]..[136,4340+12])
                  Pexp_construct "()" (src/ppx.ml[136,4340+10]..[136,4340+12])
                  None
              <case>
                pattern (src/ppx.ml[137,4353+4]..[137,4353+10])
                  Ppat_construct "::" (src/ppx.ml[137,4353+6]..[137,4353+8])
                  Some
                    []
                    pattern (src/ppx.ml[137,4353+4]..[137,4353+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[137,4353+4]..[137,4353+5])
                          Ppat_var "h" (src/ppx.ml[137,4353+4]..[137,4353+5])
                        pattern (src/ppx.ml[137,4353+9]..[137,4353+10])
                          Ppat_var "t" (src/ppx.ml[137,4353+9]..[137,4353+10])
                      ]
                expression (src/ppx.ml[138,4367+4]..[140,4430+6])
                  Pexp_sequence
                  expression (src/ppx.ml[138,4367+4]..[138,4367+27])
                    Pexp_apply
                    expression (src/ppx.ml[138,4367+5]..[138,4367+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[138,4367+5]..[138,4367+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[138,4367+25]..[138,4367+26])
                          Pexp_ident "h" (src/ppx.ml[138,4367+25]..[138,4367+26])
                    ]
                  expression (src/ppx.ml[139,4396+4]..[140,4430+6])
                    Pexp_sequence
                    expression (src/ppx.ml[139,4396+4]..[139,4396+32])
                      Pexp_apply
                      expression (src/ppx.ml[139,4396+5]..[139,4396+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[139,4396+5]..[139,4396+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[139,4396+30]..[139,4396+31])
                            Pexp_ident "t" (src/ppx.ml[139,4396+30]..[139,4396+31])
                      ]
                    expression (src/ppx.ml[140,4430+4]..[140,4430+6])
                      Pexp_construct "()" (src/ppx.ml[140,4430+4]..[140,4430+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[142,4441+0]..[142,4441+17])
          Ppat_var "process_core_type" (src/ppx.ml[142,4441+0]..[142,4441+17])
        expression (src/ppx.ml[142,4441+17]..[152,4708+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[142,4441+17]..[142,4441+20])
            Ppat_var "x" (src/ppx.ml[142,4441+18]..[142,4441+19])
          expression (src/ppx.ml[143,4464+2]..[152,4708+80])
            Pexp_match
            expression (src/ppx.ml[143,4464+8]..[143,4464+9])
              Pexp_ident "x" (src/ppx.ml[143,4464+8]..[143,4464+9])
            [
              <case>
                pattern (src/ppx.ml[144,4480+4]..[149,4641+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[145,4486+6]..[145,4486+15]) ghost
                      pattern (src/ppx.ml[145,4486+6]..[145,4486+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[145,4486+6]..[145,4486+15])
                    "ptyp_loc" (src/ppx.ml[146,4525+5]..[146,4525+13]) ghost
                      pattern (src/ppx.ml[146,4525+5]..[146,4525+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[146,4525+5]..[146,4525+13])
                    "ptyp_loc_stack" (src/ppx.ml[147,4558+5]..[147,4558+19]) ghost
                      pattern (src/ppx.ml[147,4558+5]..[147,4558+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[147,4558+5]..[147,4558+19])
                    "ptyp_attributes" (src/ppx.ml[148,4601+5]..[148,4601+20]) ghost
                      pattern (src/ppx.ml[148,4601+5]..[148,4601+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[148,4601+5]..[148,4601+20])
                  ]
                expression (src/ppx.ml[150,4649+4]..[152,4708+80])
                  Pexp_sequence
                  expression (src/ppx.ml[150,4649+4]..[150,4649+38])
                    Pexp_apply
                    expression (src/ppx.ml[150,4649+5]..[150,4649+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[150,4649+5]..[150,4649+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4649+28]..[150,4649+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[150,4649+28]..[150,4649+37])
                    ]
                  expression (src/ppx.ml[152,4708+4]..[152,4708+80])
                    Pexp_apply
                    expression (src/ppx.ml[152,4708+5]..[152,4708+18])
                      Pexp_ident "print_endline" (src/ppx.ml[152,4708+5]..[152,4708+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[152,4708+19]..[152,4708+79])
                          Pexp_apply
                          expression (src/ppx.ml[152,4708+20]..[152,4708+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[152,4708+20]..[152,4708+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[152,4708+35]..[152,4708+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[152,4708+36]..[152,4708+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[152,4708+37]..[152,4708+63]),None)
                                  expression (src/ppx.ml[152,4708+68]..[152,4708+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[152,4708+68]..[152,4708+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[153,4789+4]..[153,4789+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[153,4789+4]..[153,4789+26])
        expression (src/ppx.ml[153,4789+26]..[158,4905+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[153,4789+26]..[153,4789+44])
            Ppat_constraint
            pattern (src/ppx.ml[153,4789+27]..[153,4789+28])
              Ppat_var "x" (src/ppx.ml[153,4789+27]..[153,4789+28])
            core_type (src/ppx.ml[153,4789+29]..[153,4789+43])
              Ptyp_constr "list" (src/ppx.ml[153,4789+39]..[153,4789+43])
              [
                core_type (src/ppx.ml[153,4789+29]..[153,4789+38])
                  Ptyp_constr "core_type" (src/ppx.ml[153,4789+29]..[153,4789+38])
                  []
              ]
          expression (src/ppx.ml[154,4836+2]..[158,4905+29])
            Pexp_match
            expression (src/ppx.ml[154,4836+8]..[154,4836+9])
              Pexp_ident "x" (src/ppx.ml[154,4836+8]..[154,4836+9])
            [
              <case>
                pattern (src/ppx.ml[155,4851+4]..[155,4851+6])
                  Ppat_construct "[]" (src/ppx.ml[155,4851+4]..[155,4851+6])
                  None
                expression (src/ppx.ml[155,4851+10]..[155,4851+12])
                  Pexp_construct "()" (src/ppx.ml[155,4851+10]..[155,4851+12])
                  None
              <case>
                pattern (src/ppx.ml[156,4864+4]..[156,4864+10])
                  Ppat_construct "::" (src/ppx.ml[156,4864+6]..[156,4864+8])
                  Some
                    []
                    pattern (src/ppx.ml[156,4864+4]..[156,4864+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[156,4864+4]..[156,4864+5])
                          Ppat_var "h" (src/ppx.ml[156,4864+4]..[156,4864+5])
                        pattern (src/ppx.ml[156,4864+9]..[156,4864+10])
                          Ppat_var "t" (src/ppx.ml[156,4864+9]..[156,4864+10])
                      ]
                expression (src/ppx.ml[157,4878+4]..[158,4905+29])
                  Pexp_sequence
                  expression (src/ppx.ml[157,4878+4]..[157,4878+25])
                    Pexp_apply
                    expression (src/ppx.ml[157,4878+4]..[157,4878+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[157,4878+4]..[157,4878+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[157,4878+22]..[157,4878+25])
                          Pexp_ident "h" (src/ppx.ml[157,4878+23]..[157,4878+24])
                    ]
                  expression (src/ppx.ml[158,4905+4]..[158,4905+29])
                    Pexp_apply
                    expression (src/ppx.ml[158,4905+4]..[158,4905+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[158,4905+4]..[158,4905+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[158,4905+26]..[158,4905+29])
                          Pexp_ident "t" (src/ppx.ml[158,4905+27]..[158,4905+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[165,4949+0]..[172,5148+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[165,4949+4]..[165,4949+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[165,4949+4]..[165,4949+31])
        expression (src/ppx.ml[165,4949+31]..[172,5148+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[165,4949+31]..[165,4949+34])
            Ppat_var "x" (src/ppx.ml[165,4949+32]..[165,4949+33])
          expression (src/ppx.ml[166,4986+2]..[172,5148+65])
            Pexp_match
            expression (src/ppx.ml[166,4986+8]..[166,4986+9])
              Pexp_ident "x" (src/ppx.ml[166,4986+8]..[166,4986+9])
            [
              <case>
                pattern (src/ppx.ml[167,5001+4]..[167,5001+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[167,5001+4]..[167,5001+15])
                  Some
                    []
                    pattern (src/ppx.ml[167,5001+16]..[167,5001+17])
                      Ppat_var "a" (src/ppx.ml[167,5001+16]..[167,5001+17])
                expression (src/ppx.ml[168,5022+4]..[169,5054+64])
                  Pexp_sequence
                  expression (src/ppx.ml[168,5022+4]..[168,5022+30])
                    Pexp_apply
                    expression (src/ppx.ml[168,5022+5]..[168,5022+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[168,5022+5]..[168,5022+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[168,5022+28]..[168,5022+29])
                          Pexp_ident "a" (src/ppx.ml[168,5022+28]..[168,5022+29])
                    ]
                  expression (src/ppx.ml[169,5054+4]..[169,5054+64])
                    Pexp_apply
                    expression (src/ppx.ml[169,5054+5]..[169,5054+18])
                      Pexp_ident "print_endline" (src/ppx.ml[169,5054+5]..[169,5054+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[169,5054+19]..[169,5054+63])
                          Pexp_apply
                          expression (src/ppx.ml[169,5054+20]..[169,5054+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[169,5054+20]..[169,5054+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[169,5054+35]..[169,5054+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[169,5054+36]..[169,5054+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[169,5054+37]..[169,5054+55]),None)
                                  expression (src/ppx.ml[169,5054+60]..[169,5054+61])
                                    Pexp_ident "a" (src/ppx.ml[169,5054+60]..[169,5054+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[171,5126+4]..[171,5126+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[171,5126+4]..[171,5126+16])
                  Some
                    []
                    pattern (src/ppx.ml[171,5126+17]..[171,5126+18])
                      Ppat_var "a" (src/ppx.ml[171,5126+17]..[171,5126+18])
                expression (src/ppx.ml[172,5148+4]..[172,5148+65])
                  Pexp_apply
                  expression (src/ppx.ml[172,5148+5]..[172,5148+18])
                    Pexp_ident "print_endline" (src/ppx.ml[172,5148+5]..[172,5148+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[172,5148+19]..[172,5148+64])
                        Pexp_apply
                        expression (src/ppx.ml[172,5148+20]..[172,5148+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[172,5148+20]..[172,5148+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[172,5148+35]..[172,5148+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[172,5148+36]..[172,5148+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[172,5148+37]..[172,5148+56]),None)
                                expression (src/ppx.ml[172,5148+61]..[172,5148+62])
                                  Pexp_ident "a" (src/ppx.ml[172,5148+61]..[172,5148+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[174,5215+0]..[206,6191+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[174,5215+8]..[174,5215+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[174,5215+8]..[174,5215+57])
        expression (src/ppx.ml[174,5215+57]..[206,6191+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[174,5215+57]..[174,5215+60])
            Ppat_var "x" (src/ppx.ml[174,5215+58]..[174,5215+59])
          expression (src/ppx.ml[175,5278+2]..[206,6191+8])
            Pexp_match
            expression (src/ppx.ml[175,5278+8]..[175,5278+9])
              Pexp_ident "x" (src/ppx.ml[175,5278+8]..[175,5278+9])
            [
              <case>
                pattern (src/ppx.ml[176,5293+4]..[176,5293+6])
                  Ppat_construct "[]" (src/ppx.ml[176,5293+4]..[176,5293+6])
                  None
                expression (src/ppx.ml[176,5293+10]..[176,5293+12])
                  Pexp_construct "()" (src/ppx.ml[176,5293+10]..[176,5293+12])
                  None
              <case>
                pattern (src/ppx.ml[177,5306+4]..[177,5306+10])
                  Ppat_construct "::" (src/ppx.ml[177,5306+6]..[177,5306+8])
                  Some
                    []
                    pattern (src/ppx.ml[177,5306+4]..[177,5306+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[177,5306+4]..[177,5306+5])
                          Ppat_var "h" (src/ppx.ml[177,5306+4]..[177,5306+5])
                        pattern (src/ppx.ml[177,5306+9]..[177,5306+10])
                          Ppat_var "t" (src/ppx.ml[177,5306+9]..[177,5306+10])
                      ]
                expression (src/ppx.ml[179,5385+4]..[206,6191+8])
                  Pexp_match
                  expression (src/ppx.ml[179,5385+10]..[179,5385+11])
                    Pexp_ident "h" (src/ppx.ml[179,5385+10]..[179,5385+11])
                  [
                    <case>
                      pattern (src/ppx.ml[180,5402+5]..[187,5640+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[181,5409+6]..[181,5409+14]) ghost
                            pattern (src/ppx.ml[181,5409+6]..[181,5409+14])
                              Ppat_var "pcd_name" (src/ppx.ml[181,5409+6]..[181,5409+14])
                          "pcd_vars" (src/ppx.ml[182,5443+6]..[182,5443+14]) ghost
                            pattern (src/ppx.ml[182,5443+6]..[182,5443+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[182,5443+6]..[182,5443+14])
                          "pcd_args" (src/ppx.ml[183,5482+6]..[183,5482+14]) ghost
                            pattern (src/ppx.ml[183,5482+6]..[183,5482+14])
                              Ppat_var "pcd_args" (src/ppx.ml[183,5482+6]..[183,5482+14])
                          "pcd_res" (src/ppx.ml[184,5527+6]..[184,5527+13]) ghost
                            pattern (src/ppx.ml[184,5527+6]..[184,5527+13])
                              Ppat_var "pcd_res" (src/ppx.ml[184,5527+6]..[184,5527+13])
                          "pcd_loc" (src/ppx.ml[185,5566+6]..[185,5566+13]) ghost
                            pattern (src/ppx.ml[185,5566+6]..[185,5566+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[185,5566+6]..[185,5566+13])
                          "pcd_attributes" (src/ppx.ml[186,5599+6]..[186,5599+20]) ghost
                            pattern (src/ppx.ml[186,5599+6]..[186,5599+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[186,5599+6]..[186,5599+20])
                        ]
                      expression (src/ppx.ml[190,5722+6]..[206,6191+8])
                        Pexp_sequence
                        expression (src/ppx.ml[190,5722+6]..[190,5722+43])
                          Pexp_apply
                          expression (src/ppx.ml[190,5722+6]..[190,5722+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[190,5722+6]..[190,5722+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[190,5722+33]..[190,5722+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[190,5722+34]..[190,5722+42])
                          ]
                        expression (src/ppx.ml[191,5767+6]..[206,6191+8])
                          Pexp_sequence
                          expression (src/ppx.ml[191,5767+6]..[204,6112+16])
                            Pexp_apply
                            expression (src/ppx.ml[191,5767+7]..[191,5767+20])
                              Pexp_ident "print_endline" (src/ppx.ml[191,5767+7]..[191,5767+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[191,5767+21]..[204,6112+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[191,5767+22]..[191,5767+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[191,5767+22]..[191,5767+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[191,5767+37]..[204,6112+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[192,5806+11]..[192,5806+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[192,5806+12]..[192,5806+36]),None)
                                          expression (src/ppx.ml[193,5845+15]..[193,5845+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[193,5845+15]..[193,5845+23])
                                          expression (src/ppx.ml[194,5870+15]..[194,5870+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[194,5870+16]..[194,5870+20]),None)
                                          expression (src/ppx.ml[195,5893+15]..[195,5893+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[195,5893+15]..[195,5893+23])
                                          expression (src/ppx.ml[196,5918+15]..[196,5918+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[196,5918+16]..[196,5918+20]),None)
                                          expression (src/ppx.ml[197,5941+15]..[197,5941+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[197,5941+15]..[197,5941+23])
                                          expression (src/ppx.ml[198,5966+15]..[198,5966+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[198,5966+16]..[198,5966+19]),None)
                                          expression (src/ppx.ml[199,5988+15]..[199,5988+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[199,5988+15]..[199,5988+22])
                                          expression (src/ppx.ml[200,6012+15]..[200,6012+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[200,6012+16]..[200,6012+19]),None)
                                          expression (src/ppx.ml[201,6034+15]..[201,6034+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[201,6034+15]..[201,6034+22])
                                          expression (src/ppx.ml[202,6058+15]..[202,6058+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[202,6058+16]..[202,6058+21]),None)
                                          expression (src/ppx.ml[203,6082+15]..[203,6082+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[203,6082+15]..[203,6082+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[205,6130+6]..[206,6191+8])
                            Pexp_sequence
                            expression (src/ppx.ml[205,6130+6]..[205,6130+59])
                              Pexp_apply
                              expression (src/ppx.ml[205,6130+7]..[205,6130+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[205,6130+7]..[205,6130+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[205,6130+57]..[205,6130+58])
                                    Pexp_ident "t" (src/ppx.ml[205,6130+57]..[205,6130+58])
                              ]
                            expression (src/ppx.ml[206,6191+6]..[206,6191+8])
                              Pexp_construct "()" (src/ppx.ml[206,6191+6]..[206,6191+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[208,6203+0]..[219,6600+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6203+4]..[208,6203+16])
          Ppat_var "process_kind" (src/ppx.ml[208,6203+4]..[208,6203+16])
        expression (src/ppx.ml[208,6203+16]..[219,6600+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[208,6203+16]..[208,6203+19])
            Ppat_var "x" (src/ppx.ml[208,6203+17]..[208,6203+18])
          expression (src/ppx.ml[209,6225+2]..[219,6600+77])
            Pexp_match
            expression (src/ppx.ml[209,6225+8]..[209,6225+9])
              Pexp_ident "x" (src/ppx.ml[209,6225+8]..[209,6225+9])
            [
              <case>
                pattern (src/ppx.ml[211,6262+4]..[211,6262+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[211,6262+4]..[211,6262+18])
                  None
                expression (src/ppx.ml[211,6262+23]..[211,6262+81])
                  Pexp_apply
                  expression (src/ppx.ml[211,6262+24]..[211,6262+37])
                    Pexp_ident "print_endline" (src/ppx.ml[211,6262+24]..[211,6262+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[211,6262+38]..[211,6262+80])
                        Pexp_apply
                        expression (src/ppx.ml[211,6262+39]..[211,6262+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[211,6262+39]..[211,6262+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[211,6262+54]..[211,6262+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[211,6262+56]..[211,6262+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[212,6344+4]..[212,6344+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[212,6344+4]..[212,6344+17])
                  Some
                    []
                    pattern (src/ppx.ml[212,6344+18]..[212,6344+19])
                      Ppat_var "a" (src/ppx.ml[212,6344+18]..[212,6344+19])
                expression (src/ppx.ml[213,6367+4]..[214,6426+65])
                  Pexp_sequence
                  expression (src/ppx.ml[213,6367+4]..[213,6367+57])
                    Pexp_apply
                    expression (src/ppx.ml[213,6367+5]..[213,6367+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[213,6367+5]..[213,6367+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[213,6367+55]..[213,6367+56])
                          Pexp_ident "a" (src/ppx.ml[213,6367+55]..[213,6367+56])
                    ]
                  expression (src/ppx.ml[214,6426+4]..[214,6426+65])
                    Pexp_apply
                    expression (src/ppx.ml[214,6426+5]..[214,6426+18])
                      Pexp_ident "print_endline" (src/ppx.ml[214,6426+5]..[214,6426+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[214,6426+19]..[214,6426+64])
                          Pexp_apply
                          expression (src/ppx.ml[214,6426+20]..[214,6426+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[214,6426+20]..[214,6426+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[214,6426+35]..[214,6426+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[214,6426+36]..[214,6426+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[214,6426+37]..[214,6426+57]),None)
                                  expression (src/ppx.ml[214,6426+61]..[214,6426+62])
                                    Pexp_ident "a" (src/ppx.ml[214,6426+61]..[214,6426+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[217,6539+5]..[217,6539+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[217,6539+5]..[217,6539+17])
                  Some
                    []
                    pattern (src/ppx.ml[217,6539+18]..[217,6539+19])
                      Ppat_var "a" (src/ppx.ml[217,6539+18]..[217,6539+19])
                expression (src/ppx.ml[218,6567+5]..[218,6567+32])
                  Pexp_apply
                  expression (src/ppx.ml[218,6567+5]..[218,6567+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[218,6567+5]..[218,6567+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[218,6567+29]..[218,6567+32])
                        Pexp_ident "a" (src/ppx.ml[218,6567+30]..[218,6567+31])
                  ]
              <case>
                pattern (src/ppx.ml[219,6600+5]..[219,6600+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[219,6600+5]..[219,6600+15])
                  None
                expression (src/ppx.ml[219,6600+19]..[219,6600+77])
                  Pexp_apply
                  expression (src/ppx.ml[219,6600+20]..[219,6600+33])
                    Pexp_ident "print_endline" (src/ppx.ml[219,6600+20]..[219,6600+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[219,6600+34]..[219,6600+76])
                        Pexp_apply
                        expression (src/ppx.ml[219,6600+35]..[219,6600+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[219,6600+35]..[219,6600+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[219,6600+50]..[219,6600+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[219,6600+52]..[219,6600+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[221,6679+0]..[242,7685+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[221,6679+4]..[221,6679+19])
          Ppat_var "print_type_decl" (src/ppx.ml[221,6679+4]..[221,6679+19])
        expression (src/ppx.ml[221,6679+19]..[242,7685+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[221,6679+19]..[221,6679+22])
            Ppat_var "x" (src/ppx.ml[221,6679+20]..[221,6679+21])
          expression (src/ppx.ml[222,6704+2]..[242,7685+38])
            Pexp_match
            expression (src/ppx.ml[222,6704+8]..[222,6704+9])
              Pexp_ident "x" (src/ppx.ml[222,6704+8]..[222,6704+9])
            [
              <case>
                pattern (src/ppx.ml[223,6719+4]..[232,7100+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[224,6725+6]..[224,6725+16]) ghost
                      pattern (src/ppx.ml[224,6725+6]..[224,6725+16])
                        Ppat_var "ptype_name" (src/ppx.ml[224,6725+6]..[224,6725+16])
                    "ptype_params" (src/ppx.ml[225,6762+6]..[225,6762+18]) ghost
                      pattern (src/ppx.ml[225,6762+6]..[225,6762+18])
                        Ppat_var "ptype_params" (src/ppx.ml[225,6762+6]..[225,6762+18])
                    "ptype_cstrs" (src/ppx.ml[226,6834+6]..[226,6834+17]) ghost
                      pattern (src/ppx.ml[226,6834+6]..[226,6834+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[226,6834+6]..[226,6834+17])
                    "ptype_kind" (src/ppx.ml[227,6903+6]..[227,6903+16]) ghost
                      pattern (src/ppx.ml[227,6903+6]..[227,6903+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[227,6903+6]..[227,6903+16])
                    "ptype_private" (src/ppx.ml[228,6940+6]..[228,6940+19]) ghost
                      pattern (src/ppx.ml[228,6940+6]..[228,6940+19])
                        Ppat_var "ptype_private" (src/ppx.ml[228,6940+6]..[228,6940+19])
                    "ptype_manifest" (src/ppx.ml[229,6981+6]..[229,6981+20]) ghost
                      pattern (src/ppx.ml[229,6981+6]..[229,6981+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[229,6981+6]..[229,6981+20])
                    "ptype_attributes" (src/ppx.ml[230,7028+6]..[230,7028+22]) ghost
                      pattern (src/ppx.ml[230,7028+6]..[230,7028+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[230,7028+6]..[230,7028+22])
                    "ptype_loc" (src/ppx.ml[231,7069+6]..[231,7069+15]) ghost
                      pattern (src/ppx.ml[231,7069+6]..[231,7069+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[231,7069+6]..[231,7069+15])
                  ]
                expression (src/ppx.ml[233,7109+4]..[242,7685+38])
                  Pexp_sequence
                  expression (src/ppx.ml[233,7109+4]..[233,7109+69])
                    Pexp_apply
                    expression (src/ppx.ml[233,7109+5]..[233,7109+18])
                      Pexp_ident "print_endline" (src/ppx.ml[233,7109+5]..[233,7109+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[233,7109+19]..[233,7109+68])
                          Pexp_apply
                          expression (src/ppx.ml[233,7109+20]..[233,7109+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[233,7109+20]..[233,7109+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[233,7109+35]..[233,7109+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[233,7109+36]..[233,7109+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[233,7109+37]..[233,7109+53]),None)
                                  expression (src/ppx.ml[233,7109+56]..[233,7109+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[233,7109+56]..[233,7109+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[234,7180+4]..[242,7685+38])
                    Pexp_sequence
                    expression (src/ppx.ml[234,7180+4]..[234,7180+72])
                      Pexp_apply
                      expression (src/ppx.ml[234,7180+5]..[234,7180+18])
                        Pexp_ident "print_endline" (src/ppx.ml[234,7180+5]..[234,7180+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[234,7180+19]..[234,7180+71])
                            Pexp_apply
                            expression (src/ppx.ml[234,7180+20]..[234,7180+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[234,7180+20]..[234,7180+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[234,7180+35]..[234,7180+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[234,7180+36]..[234,7180+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[234,7180+37]..[234,7180+54]),None)
                                    expression (src/ppx.ml[234,7180+57]..[234,7180+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[234,7180+57]..[234,7180+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[235,7254+4]..[242,7685+38])
                      Pexp_sequence
                      expression (src/ppx.ml[235,7254+4]..[235,7254+66])
                        Pexp_apply
                        expression (src/ppx.ml[235,7254+5]..[235,7254+18])
                          Pexp_ident "print_endline" (src/ppx.ml[235,7254+5]..[235,7254+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[235,7254+19]..[235,7254+65])
                              Pexp_apply
                              expression (src/ppx.ml[235,7254+20]..[235,7254+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[235,7254+20]..[235,7254+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[235,7254+35]..[235,7254+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[235,7254+36]..[235,7254+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[235,7254+37]..[235,7254+49]),None)
                                      expression (src/ppx.ml[235,7254+52]..[235,7254+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[235,7254+52]..[235,7254+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[236,7322+4]..[242,7685+38])
                        Pexp_sequence
                        expression (src/ppx.ml[236,7322+4]..[236,7322+63])
                          Pexp_apply
                          expression (src/ppx.ml[236,7322+5]..[236,7322+18])
                            Pexp_ident "print_endline" (src/ppx.ml[236,7322+5]..[236,7322+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[236,7322+19]..[236,7322+62])
                                Pexp_apply
                                expression (src/ppx.ml[236,7322+20]..[236,7322+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[236,7322+20]..[236,7322+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[236,7322+35]..[236,7322+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[236,7322+36]..[236,7322+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[236,7322+37]..[236,7322+48]),None)
                                        expression (src/ppx.ml[236,7322+50]..[236,7322+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[236,7322+50]..[236,7322+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[237,7387+4]..[242,7685+38])
                          Pexp_sequence
                          expression (src/ppx.ml[237,7387+4]..[237,7387+29])
                            Pexp_apply
                            expression (src/ppx.ml[237,7387+5]..[237,7387+17])
                              Pexp_ident "process_kind" (src/ppx.ml[237,7387+5]..[237,7387+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[237,7387+18]..[237,7387+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[237,7387+18]..[237,7387+28])
                            ]
                          expression (src/ppx.ml[238,7418+4]..[242,7685+38])
                            Pexp_apply
                            expression (src/ppx.ml[238,7418+5]..[238,7418+18])
                              Pexp_ident "print_endline" (src/ppx.ml[238,7418+5]..[238,7418+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[238,7418+19]..[242,7685+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[238,7418+20]..[238,7418+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[238,7418+20]..[238,7418+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[238,7418+35]..[242,7685+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[238,7418+36]..[238,7418+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[238,7418+37]..[238,7418+51]),None)
                                          expression (src/ppx.ml[238,7418+55]..[238,7418+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[238,7418+55]..[238,7418+68])
                                          expression (src/ppx.ml[239,7488+36]..[239,7488+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[239,7488+37]..[239,7488+51]),None)
                                          expression (src/ppx.ml[239,7488+54]..[239,7488+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[239,7488+54]..[239,7488+68])
                                          expression (src/ppx.ml[240,7558+36]..[240,7558+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[240,7558+37]..[240,7558+47]),None)
                                          expression (src/ppx.ml[240,7558+50]..[240,7558+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[240,7558+50]..[240,7558+66])
                                          expression (src/ppx.ml[241,7626+36]..[241,7626+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[241,7626+37]..[241,7626+46]),None)
                                          expression (src/ppx.ml[241,7626+49]..[241,7626+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[241,7626+49]..[241,7626+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[244,7729+0]..[250,7864+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[244,7729+8]..[244,7729+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[244,7729+8]..[244,7729+30])
        expression (src/ppx.ml[244,7729+30]..[250,7864+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[244,7729+30]..[244,7729+33])
            Ppat_var "x" (src/ppx.ml[244,7729+31]..[244,7729+32])
          expression (src/ppx.ml[245,7765+2]..[250,7864+6])
            Pexp_match
            expression (src/ppx.ml[245,7765+8]..[245,7765+9])
              Pexp_ident "x" (src/ppx.ml[245,7765+8]..[245,7765+9])
            [
              <case>
                pattern (src/ppx.ml[246,7780+4]..[246,7780+6])
                  Ppat_construct "[]" (src/ppx.ml[246,7780+4]..[246,7780+6])
                  None
                expression (src/ppx.ml[246,7780+10]..[246,7780+12])
                  Pexp_construct "()" (src/ppx.ml[246,7780+10]..[246,7780+12])
                  None
              <case>
                pattern (src/ppx.ml[247,7793+4]..[247,7793+10])
                  Ppat_construct "::" (src/ppx.ml[247,7793+6]..[247,7793+8])
                  Some
                    []
                    pattern (src/ppx.ml[247,7793+4]..[247,7793+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[247,7793+4]..[247,7793+5])
                          Ppat_var "h" (src/ppx.ml[247,7793+4]..[247,7793+5])
                        pattern (src/ppx.ml[247,7793+9]..[247,7793+10])
                          Ppat_var "t" (src/ppx.ml[247,7793+9]..[247,7793+10])
                      ]
                expression (src/ppx.ml[248,7807+4]..[250,7864+6])
                  Pexp_sequence
                  expression (src/ppx.ml[248,7807+4]..[248,7807+23])
                    Pexp_apply
                    expression (src/ppx.ml[248,7807+5]..[248,7807+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[248,7807+5]..[248,7807+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[248,7807+21]..[248,7807+22])
                          Pexp_ident "h" (src/ppx.ml[248,7807+21]..[248,7807+22])
                    ]
                  expression (src/ppx.ml[249,7832+4]..[250,7864+6])
                    Pexp_sequence
                    expression (src/ppx.ml[249,7832+4]..[249,7832+30])
                      Pexp_apply
                      expression (src/ppx.ml[249,7832+5]..[249,7832+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[249,7832+5]..[249,7832+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[249,7832+28]..[249,7832+29])
                            Pexp_ident "t" (src/ppx.ml[249,7832+28]..[249,7832+29])
                      ]
                    expression (src/ppx.ml[250,7864+4]..[250,7864+6])
                      Pexp_construct "()" (src/ppx.ml[250,7864+4]..[250,7864+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[252,7876+0]..[278,9840+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[252,7876+4]..[252,7876+13])
          Ppat_var "printdesc" (src/ppx.ml[252,7876+4]..[252,7876+13])
        expression (src/ppx.ml[252,7876+13]..[278,9840+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[252,7876+13]..[252,7876+37])
            Ppat_constraint
            pattern (src/ppx.ml[252,7876+14]..[252,7876+15])
              Ppat_var "x" (src/ppx.ml[252,7876+14]..[252,7876+15])
            core_type (src/ppx.ml[252,7876+17]..[252,7876+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[252,7876+17]..[252,7876+36])
              []
          expression (src/ppx.ml[252,7876+38]..[278,9840+128])
            Pexp_constraint
            expression (src/ppx.ml[253,7922+2]..[278,9840+128])
              Pexp_sequence
              expression (src/ppx.ml[253,7922+2]..[253,7922+68])
                Pexp_apply
                expression (src/ppx.ml[253,7922+3]..[253,7922+16])
                  Pexp_ident "print_endline" (src/ppx.ml[253,7922+3]..[253,7922+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[253,7922+17]..[253,7922+67])
                      Pexp_apply
                      expression (src/ppx.ml[253,7922+18]..[253,7922+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[253,7922+18]..[253,7922+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7922+33]..[253,7922+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[253,7922+34]..[253,7922+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[253,7922+35]..[253,7922+61]),None)
                              expression (src/ppx.ml[253,7922+64]..[253,7922+65])
                                Pexp_ident "x" (src/ppx.ml[253,7922+64]..[253,7922+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[254,7992+2]..[278,9840+128])
                Pexp_match
                expression (src/ppx.ml[254,7992+8]..[254,7992+9])
                  Pexp_ident "x" (src/ppx.ml[254,7992+8]..[254,7992+9])
                [
                  <case>
                    pattern (src/ppx.ml[255,8007+4]..[255,8007+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[255,8007+4]..[255,8007+13])
                      Some
                        []
                        pattern (src/ppx.ml[255,8007+14]..[255,8007+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8007+15]..[255,8007+25])
                              Ppat_var "expression" (src/ppx.ml[255,8007+15]..[255,8007+25])
                            pattern (src/ppx.ml[255,8007+26]..[255,8007+36])
                              Ppat_var "attributes" (src/ppx.ml[255,8007+26]..[255,8007+36])
                          ]
                    expression (src/ppx.ml[255,8007+41]..[255,8007+117])
                      Pexp_apply
                      expression (src/ppx.ml[255,8007+42]..[255,8007+55])
                        Pexp_ident "print_endline" (src/ppx.ml[255,8007+42]..[255,8007+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[255,8007+56]..[255,8007+116])
                            Pexp_apply
                            expression (src/ppx.ml[255,8007+57]..[255,8007+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[255,8007+57]..[255,8007+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[255,8007+72]..[255,8007+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[255,8007+73]..[255,8007+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[255,8007+74]..[255,8007+90]),None)
                                    expression (src/ppx.ml[255,8007+93]..[255,8007+103])
                                      Pexp_ident "expression" (src/ppx.ml[255,8007+93]..[255,8007+103])
                                    expression (src/ppx.ml[255,8007+104]..[255,8007+114])
                                      Pexp_ident "attributes" (src/ppx.ml[255,8007+104]..[255,8007+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[257,8145+4]..[257,8145+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[257,8145+4]..[257,8145+14])
                      Some
                        []
                        pattern (src/ppx.ml[257,8145+15]..[257,8145+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[257,8145+16]..[257,8145+24])
                              Ppat_var "rec_flag" (src/ppx.ml[257,8145+16]..[257,8145+24])
                            pattern (src/ppx.ml[257,8145+26]..[257,8145+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[257,8145+26]..[257,8145+44])
                          ]
                    expression (src/ppx.ml[257,8145+48]..[258,8279+48])
                      Pexp_sequence
                      expression (src/ppx.ml[257,8145+48]..[257,8145+132])
                        Pexp_apply
                        expression (src/ppx.ml[257,8145+49]..[257,8145+62])
                          Pexp_ident "print_endline" (src/ppx.ml[257,8145+49]..[257,8145+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[257,8145+63]..[257,8145+131])
                              Pexp_apply
                              expression (src/ppx.ml[257,8145+64]..[257,8145+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[257,8145+64]..[257,8145+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[257,8145+79]..[257,8145+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[257,8145+80]..[257,8145+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[257,8145+81]..[257,8145+98]),None)
                                      expression (src/ppx.ml[257,8145+101]..[257,8145+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[257,8145+101]..[257,8145+109])
                                      expression (src/ppx.ml[257,8145+111]..[257,8145+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[257,8145+111]..[257,8145+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[258,8279+4]..[258,8279+48])
                        Pexp_apply
                        expression (src/ppx.ml[258,8279+4]..[258,8279+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[258,8279+4]..[258,8279+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[258,8279+28]..[258,8279+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[258,8279+29]..[258,8279+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[259,8328+4]..[259,8328+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[259,8328+4]..[259,8328+18])
                      Some
                        []
                        pattern (src/ppx.ml[259,8328+19]..[259,8328+36])
                          Ppat_var "value_description" (src/ppx.ml[259,8328+19]..[259,8328+36])
                    expression (src/ppx.ml[259,8328+39]..[259,8328+116])
                      Pexp_apply
                      expression (src/ppx.ml[259,8328+40]..[259,8328+53])
                        Pexp_ident "print_endline" (src/ppx.ml[259,8328+40]..[259,8328+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[259,8328+54]..[259,8328+115])
                            Pexp_apply
                            expression (src/ppx.ml[259,8328+55]..[259,8328+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[259,8328+55]..[259,8328+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[259,8328+70]..[259,8328+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[259,8328+71]..[259,8328+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[259,8328+72]..[259,8328+93]),None)
                                    expression (src/ppx.ml[259,8328+96]..[259,8328+113])
                                      Pexp_ident "value_description" (src/ppx.ml[259,8328+96]..[259,8328+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[261,8446+4]..[261,8446+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[261,8446+4]..[261,8446+13])
                      Some
                        []
                        pattern (src/ppx.ml[261,8446+14]..[261,8446+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[261,8446+15]..[261,8446+23])
                              Ppat_var "rec_flag" (src/ppx.ml[261,8446+15]..[261,8446+23])
                            pattern (src/ppx.ml[261,8446+25]..[261,8446+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[261,8446+25]..[261,8446+46])
                          ]
                    expression (src/ppx.ml[263,8525+4]..[264,8576+90])
                      Pexp_sequence
                      expression (src/ppx.ml[263,8525+4]..[263,8525+49])
                        Pexp_apply
                        expression (src/ppx.ml[263,8525+4]..[263,8525+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[263,8525+4]..[263,8525+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[263,8525+26]..[263,8525+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[263,8525+27]..[263,8525+48])
                        ]
                      expression (src/ppx.ml[264,8576+4]..[264,8576+90])
                        Pexp_apply
                        expression (src/ppx.ml[264,8576+5]..[264,8576+18])
                          Pexp_ident "print_endline" (src/ppx.ml[264,8576+5]..[264,8576+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[264,8576+19]..[264,8576+89])
                              Pexp_apply
                              expression (src/ppx.ml[264,8576+20]..[264,8576+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[264,8576+20]..[264,8576+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[264,8576+35]..[264,8576+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[264,8576+36]..[264,8576+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[264,8576+37]..[264,8576+53]),None)
                                      expression (src/ppx.ml[264,8576+56]..[264,8576+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[264,8576+56]..[264,8576+64])
                                      expression (src/ppx.ml[264,8576+66]..[264,8576+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[264,8576+66]..[264,8576+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[267,8669+4]..[267,8669+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[267,8669+4]..[267,8669+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8669+17]..[267,8669+31])
                          Ppat_var "type_extension" (src/ppx.ml[267,8669+17]..[267,8669+31])
                    expression (src/ppx.ml[267,8669+34]..[267,8669+105])
                      Pexp_apply
                      expression (src/ppx.ml[267,8669+35]..[267,8669+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8669+35]..[267,8669+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8669+49]..[267,8669+104])
                            Pexp_apply
                            expression (src/ppx.ml[267,8669+50]..[267,8669+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8669+50]..[267,8669+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8669+65]..[267,8669+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8669+66]..[267,8669+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[267,8669+67]..[267,8669+85]),None)
                                    expression (src/ppx.ml[267,8669+88]..[267,8669+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[267,8669+88]..[267,8669+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8775+4]..[268,8775+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[268,8775+4]..[268,8775+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8775+19]..[268,8775+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[268,8775+19]..[268,8775+40])
                    expression (src/ppx.ml[268,8775+43]..[268,8775+124])
                      Pexp_apply
                      expression (src/ppx.ml[268,8775+44]..[268,8775+57])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8775+44]..[268,8775+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8775+58]..[268,8775+123])
                            Pexp_apply
                            expression (src/ppx.ml[268,8775+59]..[268,8775+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8775+59]..[268,8775+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8775+74]..[268,8775+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8775+75]..[268,8775+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[268,8775+76]..[268,8775+97]),None)
                                    expression (src/ppx.ml[268,8775+100]..[268,8775+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[268,8775+100]..[268,8775+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,8900+4]..[269,8900+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[269,8900+4]..[269,8900+15])
                      Some
                        []
                        pattern (src/ppx.ml[269,8900+17]..[269,8900+31])
                          Ppat_var "module_binding" (src/ppx.ml[269,8900+17]..[269,8900+31])
                    expression (src/ppx.ml[269,8900+34]..[269,8900+104])
                      Pexp_apply
                      expression (src/ppx.ml[269,8900+35]..[269,8900+48])
                        Pexp_ident "print_endline" (src/ppx.ml[269,8900+35]..[269,8900+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,8900+49]..[269,8900+103])
                            Pexp_apply
                            expression (src/ppx.ml[269,8900+50]..[269,8900+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,8900+50]..[269,8900+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,8900+65]..[269,8900+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,8900+66]..[269,8900+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[269,8900+67]..[269,8900+85]),None)
                                    expression (src/ppx.ml[269,8900+87]..[269,8900+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[269,8900+87]..[269,8900+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[270,9005+4]..[270,9005+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[270,9005+4]..[270,9005+18])
                      Some
                        []
                        pattern (src/ppx.ml[270,9005+20]..[270,9005+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[270,9005+20]..[270,9005+39])
                    expression (src/ppx.ml[270,9005+42]..[270,9005+121])
                      Pexp_apply
                      expression (src/ppx.ml[270,9005+43]..[270,9005+56])
                        Pexp_ident "print_endline" (src/ppx.ml[270,9005+43]..[270,9005+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[270,9005+57]..[270,9005+120])
                            Pexp_apply
                            expression (src/ppx.ml[270,9005+58]..[270,9005+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[270,9005+58]..[270,9005+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[270,9005+73]..[270,9005+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[270,9005+74]..[270,9005+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[270,9005+75]..[270,9005+96]),None)
                                    expression (src/ppx.ml[270,9005+99]..[270,9005+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[270,9005+99]..[270,9005+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9127+4]..[271,9127+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[271,9127+4]..[271,9127+16])
                      Some
                        []
                        pattern (src/ppx.ml[271,9127+17]..[271,9127+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[271,9127+17]..[271,9127+40])
                    expression (src/ppx.ml[271,9127+43]..[271,9127+124])
                      Pexp_apply
                      expression (src/ppx.ml[271,9127+44]..[271,9127+57])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9127+44]..[271,9127+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9127+58]..[271,9127+123])
                            Pexp_apply
                            expression (src/ppx.ml[271,9127+59]..[271,9127+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9127+59]..[271,9127+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9127+74]..[271,9127+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9127+75]..[271,9127+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[271,9127+76]..[271,9127+95]),None)
                                    expression (src/ppx.ml[271,9127+98]..[271,9127+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[271,9127+98]..[271,9127+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9269+4]..[273,9269+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[273,9269+4]..[273,9269+13])
                      Some
                        []
                        pattern (src/ppx.ml[273,9269+14]..[273,9269+30])
                          Ppat_var "open_description" (src/ppx.ml[273,9269+14]..[273,9269+30])
                    expression (src/ppx.ml[273,9269+33]..[273,9269+103])
                      Pexp_apply
                      expression (src/ppx.ml[273,9269+34]..[273,9269+47])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9269+34]..[273,9269+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9269+48]..[273,9269+102])
                            Pexp_apply
                            expression (src/ppx.ml[273,9269+49]..[273,9269+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9269+49]..[273,9269+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9269+64]..[273,9269+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9269+65]..[273,9269+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[273,9269+66]..[273,9269+81]),None)
                                    expression (src/ppx.ml[273,9269+84]..[273,9269+100])
                                      Pexp_ident "open_description" (src/ppx.ml[273,9269+84]..[273,9269+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9373+4]..[274,9373+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[274,9373+4]..[274,9373+14])
                      Some
                        []
                        pattern (src/ppx.ml[274,9373+15]..[274,9373+36])
                          Ppat_var "class_declarations" (src/ppx.ml[274,9373+16]..[274,9373+34])
                    expression (src/ppx.ml[274,9373+39]..[274,9373+113])
                      Pexp_apply
                      expression (src/ppx.ml[274,9373+40]..[274,9373+53])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9373+40]..[274,9373+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9373+54]..[274,9373+112])
                            Pexp_apply
                            expression (src/ppx.ml[274,9373+55]..[274,9373+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9373+55]..[274,9373+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9373+70]..[274,9373+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9373+71]..[274,9373+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[274,9373+72]..[274,9373+89]),None)
                                    expression (src/ppx.ml[274,9373+92]..[274,9373+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[274,9373+92]..[274,9373+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9487+4]..[275,9487+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[275,9487+4]..[275,9487+19])
                      Some
                        []
                        pattern (src/ppx.ml[275,9487+20]..[275,9487+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[275,9487+21]..[275,9487+44])
                    expression (src/ppx.ml[275,9487+48]..[275,9487+132])
                      Pexp_apply
                      expression (src/ppx.ml[275,9487+49]..[275,9487+62])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9487+49]..[275,9487+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9487+63]..[275,9487+131])
                            Pexp_apply
                            expression (src/ppx.ml[275,9487+64]..[275,9487+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9487+64]..[275,9487+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9487+79]..[275,9487+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9487+80]..[275,9487+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[275,9487+81]..[275,9487+103]),None)
                                    expression (src/ppx.ml[275,9487+106]..[275,9487+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[275,9487+106]..[275,9487+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9620+4]..[276,9620+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[276,9620+4]..[276,9620+16])
                      Some
                        []
                        pattern (src/ppx.ml[276,9620+18]..[276,9620+39])
                          Ppat_var "include_declaration" (src/ppx.ml[276,9620+19]..[276,9620+38])
                    expression (src/ppx.ml[276,9620+41]..[276,9620+117])
                      Pexp_apply
                      expression (src/ppx.ml[276,9620+42]..[276,9620+55])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9620+42]..[276,9620+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9620+56]..[276,9620+116])
                            Pexp_apply
                            expression (src/ppx.ml[276,9620+57]..[276,9620+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9620+57]..[276,9620+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9620+72]..[276,9620+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9620+73]..[276,9620+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[276,9620+74]..[276,9620+93]),None)
                                    expression (src/ppx.ml[276,9620+95]..[276,9620+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[276,9620+95]..[276,9620+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[277,9738+4]..[277,9738+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[277,9738+4]..[277,9738+18])
                      Some
                        []
                        pattern (src/ppx.ml[277,9738+19]..[277,9738+30])
                          Ppat_var "attribute" (src/ppx.ml[277,9738+20]..[277,9738+29])
                    expression (src/ppx.ml[277,9738+32]..[277,9738+101])
                      Pexp_apply
                      expression (src/ppx.ml[277,9738+33]..[277,9738+46])
                        Pexp_ident "print_endline" (src/ppx.ml[277,9738+33]..[277,9738+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[277,9738+47]..[277,9738+100])
                            Pexp_apply
                            expression (src/ppx.ml[277,9738+48]..[277,9738+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[277,9738+48]..[277,9738+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[277,9738+63]..[277,9738+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[277,9738+64]..[277,9738+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[277,9738+65]..[277,9738+86]),None)
                                    expression (src/ppx.ml[277,9738+89]..[277,9738+98])
                                      Pexp_ident "attribute" (src/ppx.ml[277,9738+89]..[277,9738+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[278,9840+4]..[278,9840+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[278,9840+4]..[278,9840+18])
                      Some
                        []
                        pattern (src/ppx.ml[278,9840+19]..[278,9840+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[278,9840+21]..[278,9840+30])
                              Ppat_var "extension" (src/ppx.ml[278,9840+21]..[278,9840+30])
                            pattern (src/ppx.ml[278,9840+33]..[278,9840+43])
                              Ppat_var "attributes" (src/ppx.ml[278,9840+33]..[278,9840+43])
                          ]
                    expression (src/ppx.ml[278,9840+46]..[278,9840+128])
                      Pexp_apply
                      expression (src/ppx.ml[278,9840+47]..[278,9840+60])
                        Pexp_ident "print_endline" (src/ppx.ml[278,9840+47]..[278,9840+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[278,9840+61]..[278,9840+127])
                            Pexp_apply
                            expression (src/ppx.ml[278,9840+62]..[278,9840+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[278,9840+62]..[278,9840+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[278,9840+77]..[278,9840+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[278,9840+78]..[278,9840+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[278,9840+79]..[278,9840+100]),None)
                                    expression (src/ppx.ml[278,9840+103]..[278,9840+112])
                                      Pexp_ident "extension" (src/ppx.ml[278,9840+103]..[278,9840+112])
                                    expression (src/ppx.ml[278,9840+115]..[278,9840+125])
                                      Pexp_ident "attributes" (src/ppx.ml[278,9840+115]..[278,9840+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[252,7876+39]..[252,7876+43])
              Ptyp_constr "unit" (src/ppx.ml[252,7876+39]..[252,7876+43])
              []
    ]
  structure_item (src/ppx.ml[280,9970+0]..[280,9970+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9970+4]..[280,9970+7])
          Ppat_var "foo" (src/ppx.ml[280,9970+4]..[280,9970+7])
        expression (src/ppx.ml[280,9970+10]..[280,9970+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[282,9985+0]..[290,10204+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9985+4]..[282,9985+12])
          Ppat_var "printone" (src/ppx.ml[282,9985+4]..[282,9985+12])
        expression (src/ppx.ml[282,9985+13]..[290,10204+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[282,9985+13]..[282,9985+34])
            Ppat_constraint
            pattern (src/ppx.ml[282,9985+14]..[282,9985+15])
              Ppat_var "x" (src/ppx.ml[282,9985+14]..[282,9985+15])
            core_type (src/ppx.ml[282,9985+18]..[282,9985+32])
              Ptyp_constr "structure_item" (src/ppx.ml[282,9985+18]..[282,9985+32])
              []
          expression (src/ppx.ml[282,9985+35]..[290,10204+6])
            Pexp_constraint
            expression (src/ppx.ml[283,10028+2]..[290,10204+6])
              Pexp_match
              expression (src/ppx.ml[283,10028+8]..[283,10028+9])
                Pexp_ident "x" (src/ppx.ml[283,10028+8]..[283,10028+9])
              [
                <case>
                  pattern (src/ppx.ml[284,10043+3]..[287,10093+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[285,10048+4]..[285,10048+13]) ghost
                        pattern (src/ppx.ml[285,10048+4]..[285,10048+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[285,10048+4]..[285,10048+13])
                    ]
                  expression (src/ppx.ml[289,10177+4]..[290,10204+6])
                    Pexp_sequence
                    expression (src/ppx.ml[289,10177+4]..[289,10177+25])
                      Pexp_apply
                      expression (src/ppx.ml[289,10177+5]..[289,10177+14])
                        Pexp_ident "printdesc" (src/ppx.ml[289,10177+5]..[289,10177+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[289,10177+15]..[289,10177+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[289,10177+15]..[289,10177+24])
                      ]
                    expression (src/ppx.ml[290,10204+4]..[290,10204+6])
                      Pexp_construct "()" (src/ppx.ml[290,10204+4]..[290,10204+6])
                      None
              ]
            core_type (src/ppx.ml[282,9985+36]..[282,9985+40])
              Ptyp_constr "unit" (src/ppx.ml[282,9985+36]..[282,9985+40])
              []
    ]
  structure_item (src/ppx.ml[296,10324+0]..[298,10405+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10324+4]..[296,10324+13])
          Ppat_var "printone2" (src/ppx.ml[296,10324+4]..[296,10324+13])
        expression (src/ppx.ml[296,10324+14]..[298,10405+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[296,10324+14]..[296,10324+15])
            Ppat_var "x" (src/ppx.ml[296,10324+14]..[296,10324+15])
          expression (src/ppx.ml[296,10324+16]..[298,10405+12])
            Pexp_constraint
            expression (src/ppx.ml[297,10348+2]..[298,10405+12])
              Pexp_sequence
              expression (src/ppx.ml[297,10348+2]..[297,10348+55])
                Pexp_apply
                expression (src/ppx.ml[297,10348+3]..[297,10348+16])
                  Pexp_ident "print_endline" (src/ppx.ml[297,10348+3]..[297,10348+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[297,10348+17]..[297,10348+54])
                      Pexp_apply
                      expression (src/ppx.ml[297,10348+18]..[297,10348+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[297,10348+18]..[297,10348+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[297,10348+33]..[297,10348+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[297,10348+34]..[297,10348+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[297,10348+35]..[297,10348+49]),None)
                              expression (src/ppx.ml[297,10348+51]..[297,10348+52])
                                Pexp_ident "x" (src/ppx.ml[297,10348+51]..[297,10348+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[298,10405+2]..[298,10405+12])
                Pexp_apply
                expression (src/ppx.ml[298,10405+2]..[298,10405+10])
                  Pexp_ident "printone" (src/ppx.ml[298,10405+2]..[298,10405+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[298,10405+11]..[298,10405+12])
                      Pexp_ident "x" (src/ppx.ml[298,10405+11]..[298,10405+12])
                ]
            core_type (src/ppx.ml[296,10324+17]..[296,10324+21])
              Ptyp_constr "unit" (src/ppx.ml[296,10324+17]..[296,10324+21])
              []
    ]
  structure_item (src/ppx.ml[300,10421+0]..[302,10452+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10421+4]..[300,10421+9])
          Ppat_var "proc1" (src/ppx.ml[300,10421+4]..[300,10421+9])
        expression (src/ppx.ml[300,10421+10]..[302,10452+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[300,10421+10]..[300,10421+11])
            Ppat_var "x" (src/ppx.ml[300,10421+10]..[300,10421+11])
          expression (src/ppx.ml[301,10437+2]..[302,10452+3])
            Pexp_sequence
            expression (src/ppx.ml[301,10437+2]..[301,10437+13])
              Pexp_apply
              expression (src/ppx.ml[301,10437+2]..[301,10437+11])
                Pexp_ident "printone2" (src/ppx.ml[301,10437+2]..[301,10437+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[301,10437+12]..[301,10437+13])
                    Pexp_ident "x" (src/ppx.ml[301,10437+12]..[301,10437+13])
              ]
            expression (src/ppx.ml[302,10452+2]..[302,10452+3])
              Pexp_ident "x" (src/ppx.ml[302,10452+2]..[302,10452+3])
    ]
  structure_item (src/ppx.ml[304,10457+0]..[307,10606+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[304,10457+4]..[304,10457+9])
          Ppat_var "debug" (src/ppx.ml[304,10457+4]..[304,10457+9])
        expression (src/ppx.ml[304,10457+10]..[307,10606+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[304,10457+10]..[304,10457+14])
            Ppat_var "proc" (src/ppx.ml[304,10457+10]..[304,10457+14])
          expression (src/ppx.ml[304,10457+15]..[307,10606+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[304,10457+15]..[304,10457+18])
              Ppat_var "lst" (src/ppx.ml[304,10457+15]..[304,10457+18])
            expression (src/ppx.ml[304,10457+19]..[307,10606+4])
              Pexp_constraint
              expression (src/ppx.ml[305,10485+2]..[307,10606+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[305,10485+6]..[305,10485+12])
                      Ppat_var "result" (src/ppx.ml[305,10485+6]..[305,10485+12])
                    expression (src/ppx.ml[305,10485+15]..[305,10485+32])
                      Pexp_apply
                      expression (src/ppx.ml[305,10485+15]..[305,10485+23])
                        Pexp_ident "List.map" (src/ppx.ml[305,10485+15]..[305,10485+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[305,10485+24]..[305,10485+28])
                            Pexp_ident "proc" (src/ppx.ml[305,10485+24]..[305,10485+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[305,10485+29]..[305,10485+32])
                            Pexp_ident "lst" (src/ppx.ml[305,10485+29]..[305,10485+32])
                      ]
                ]
                expression (src/ppx.ml[306,10521+2]..[307,10606+4])
                  Pexp_sequence
                  expression (src/ppx.ml[306,10521+2]..[306,10521+83])
                    Pexp_apply
                    expression (src/ppx.ml[306,10521+2]..[306,10521+11])
                      Pexp_ident "List.iter" (src/ppx.ml[306,10521+2]..[306,10521+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[306,10521+12]..[306,10521+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[306,10521+17]..[306,10521+18])
                            Ppat_var "i" (src/ppx.ml[306,10521+17]..[306,10521+18])
                          expression (src/ppx.ml[306,10521+22]..[306,10521+75])
                            Pexp_apply
                            expression (src/ppx.ml[306,10521+22]..[306,10521+35])
                              Pexp_ident "print_endline" (src/ppx.ml[306,10521+22]..[306,10521+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[306,10521+36]..[306,10521+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[306,10521+37]..[306,10521+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[306,10521+37]..[306,10521+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[306,10521+52]..[306,10521+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[306,10521+53]..[306,10521+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[306,10521+54]..[306,10521+69]),None)
                                          expression (src/ppx.ml[306,10521+72]..[306,10521+73])
                                            Pexp_ident "i" (src/ppx.ml[306,10521+72]..[306,10521+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[306,10521+77]..[306,10521+83])
                          Pexp_ident "result" (src/ppx.ml[306,10521+77]..[306,10521+83])
                    ]
                  expression (src/ppx.ml[307,10606+2]..[307,10606+4])
                    Pexp_construct "()" (src/ppx.ml[307,10606+2]..[307,10606+4])
                    None
              core_type (src/ppx.ml[304,10457+21]..[304,10457+25])
                Ptyp_constr "unit" (src/ppx.ml[304,10457+21]..[304,10457+25])
                []
    ]
  structure_item (src/ppx.ml[309,10628+0]..[312,10752+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[309,10628+4]..[309,10628+13])
          Ppat_var "transform" (src/ppx.ml[309,10628+4]..[309,10628+13])
        expression (src/ppx.ml[309,10628+14]..[312,10752+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[309,10628+14]..[309,10628+15])
            Ppat_var "x" (src/ppx.ml[309,10628+14]..[309,10628+15])
          expression (src/ppx.ml[310,10683+2]..[312,10752+3])
            Pexp_sequence
            expression (src/ppx.ml[310,10683+2]..[310,10683+48])
              Pexp_apply
              expression (src/ppx.ml[310,10683+3]..[310,10683+16])
                Pexp_ident "print_endline" (src/ppx.ml[310,10683+3]..[310,10683+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[310,10683+17]..[310,10683+47])
                    Pexp_apply
                    expression (src/ppx.ml[310,10683+18]..[310,10683+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[310,10683+18]..[310,10683+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[310,10683+33]..[310,10683+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[310,10683+34]..[310,10683+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[310,10683+35]..[310,10683+42]),None)
                            expression (src/ppx.ml[310,10683+44]..[310,10683+45])
                              Pexp_ident "x" (src/ppx.ml[310,10683+44]..[310,10683+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[311,10733+2]..[312,10752+3])
              Pexp_sequence
              expression (src/ppx.ml[311,10733+2]..[311,10733+17])
                Pexp_apply
                expression (src/ppx.ml[311,10733+3]..[311,10733+8])
                  Pexp_ident "debug" (src/ppx.ml[311,10733+3]..[311,10733+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[311,10733+9]..[311,10733+14])
                      Pexp_ident "proc1" (src/ppx.ml[311,10733+9]..[311,10733+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[311,10733+15]..[311,10733+16])
                      Pexp_ident "x" (src/ppx.ml[311,10733+15]..[311,10733+16])
                ]
              expression (src/ppx.ml[312,10752+2]..[312,10752+3])
                Pexp_ident "x" (src/ppx.ml[312,10752+2]..[312,10752+3])
    ]
  structure_item (src/ppx.ml[314,10759+1]..[314,10759+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[314,10759+5]..[314,10759+7])
          Ppat_construct "()" (src/ppx.ml[314,10759+5]..[314,10759+7])
          None
        expression (src/ppx.ml[314,10759+10]..[314,10759+69])
          Pexp_apply
          expression (src/ppx.ml[314,10759+10]..[314,10759+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[314,10759+10]..[314,10759+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[314,10759+47]..[314,10759+56])
                Pexp_ident "transform" (src/ppx.ml[314,10759+47]..[314,10759+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[314,10759+57]..[314,10759+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[314,10759+58]..[314,10759+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with
  | { txt;_} ->
      (match txt with
       | txt2 ->
           (print_endline (Batteries.dump ("DEBUG:process_id:", txt2)); txt))
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       print_endline
         (Batteries.dump
            ("DEBUG:Ptyp_constr:", "id", a, "types", b, "id2", myid)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[75,2045+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..src/ppx.ml[69,1879+14])
          Tpat_var "process_id/1437"
        expression (src/ppx.ml[69,1879+14]..src/ppx.ml[75,2045+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+17]..src/ppx.ml[69,1879+30])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1439"
                pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                  Tpat_any
              expression (src/ppx.ml[70,1913+2]..src/ppx.ml[75,2045+7])
                Texp_match
                expression (src/ppx.ml[70,1913+8]..src/ppx.ml[70,1913+9])
                  Texp_ident "x/1439"
                [
                  <case>
                    pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                      Tpat_value
                      pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[71,1928+5]..src/ppx.ml[71,1928+8])
                              Tpat_var "txt/1723"
                        ]
                    expression (src/ppx.ml[72,1943+4]..src/ppx.ml[75,2045+7])
                      Texp_match
                      expression (src/ppx.ml[72,1943+10]..src/ppx.ml[72,1943+13])
                        Texp_ident "txt/1723"
                      [
                        <case>
                          pattern (src/ppx.ml[73,1962+4]..src/ppx.ml[73,1962+12])
                            Tpat_value
                            pattern (src/ppx.ml[73,1962+4]..src/ppx.ml[73,1962+12])
                              Tpat_var "txt2/1724"
                          expression (src/ppx.ml[74,1978+4]..src/ppx.ml[75,2045+7])
                            Texp_sequence
                            expression (src/ppx.ml[74,1978+4]..src/ppx.ml[74,1978+65])
                              Texp_apply
                              expression (src/ppx.ml[74,1978+5]..src/ppx.ml[74,1978+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[74,1978+19]..src/ppx.ml[74,1978+64])
                                    Texp_apply
                                    expression (src/ppx.ml[74,1978+20]..src/ppx.ml[74,1978+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[74,1978+35]..src/ppx.ml[74,1978+63])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[74,1978+36]..src/ppx.ml[74,1978+55])
                                              Texp_constant Const_string("DEBUG:process_id:",(src/ppx.ml[74,1978+37]..src/ppx.ml[74,1978+54]),None)
                                            expression (src/ppx.ml[74,1978+58]..src/ppx.ml[74,1978+62])
                                              Texp_ident "txt2/1724"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[75,2045+4]..src/ppx.ml[75,2045+7])
                              Texp_ident "txt/1723"
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[77,2056+0]..src/ppx.ml[158,4905+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[77,2056+8]..src/ppx.ml[77,2056+27])
          Tpat_var "process_record_kind/1725"
        expression (src/ppx.ml[77,2056+27]..src/ppx.ml[91,2540+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[77,2056+27]..src/ppx.ml[77,2056+30])
                Tpat_var "x/1730"
              expression (src/ppx.ml[78,2089+2]..src/ppx.ml[91,2540+47])
                Texp_match
                expression (src/ppx.ml[78,2089+8]..src/ppx.ml[78,2089+9])
                  Texp_ident "x/1730"
                [
                  <case>
                    pattern (src/ppx.ml[79,2104+4]..src/ppx.ml[85,2285+4])
                      Tpat_value
                      pattern (src/ppx.ml[79,2104+4]..src/ppx.ml[85,2285+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[80,2110+5]..src/ppx.ml[80,2110+13])
                              Tpat_var "pld_name/1731"
                          "pld_mutable"
                            pattern (src/ppx.ml[81,2143+5]..src/ppx.ml[81,2143+16])
                              Tpat_var "pld_mutable/1732"
                          "pld_type"
                            pattern (src/ppx.ml[82,2181+5]..src/ppx.ml[82,2181+13])
                              Tpat_var "pld_type/1733"
                          "pld_loc"
                            pattern (src/ppx.ml[83,2213+5]..src/ppx.ml[83,2213+12])
                              Tpat_var "pld_loc/1734"
                          "pld_attributes"
                            pattern (src/ppx.ml[84,2245+5]..src/ppx.ml[84,2245+19])
                              Tpat_var "pld_attributes/1735"
                        ]
                    expression (src/ppx.ml[86,2293+4]..src/ppx.ml[91,2540+47])
                      Texp_apply
                      expression (src/ppx.ml[86,2293+5]..src/ppx.ml[86,2293+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[86,2293+19]..src/ppx.ml[91,2540+46])
                            Texp_apply
                            expression (src/ppx.ml[86,2293+20]..src/ppx.ml[86,2293+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[86,2293+35]..src/ppx.ml[91,2540+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[86,2293+36]..src/ppx.ml[86,2293+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[86,2293+37]..src/ppx.ml[86,2293+56]),None)
                                    expression (src/ppx.ml[87,2354+36]..src/ppx.ml[87,2354+44])
                                      Texp_ident "pld_name/1731"
                                    expression (src/ppx.ml[88,2400+36]..src/ppx.ml[88,2400+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[88,2400+37]..src/ppx.ml[88,2400+44]),None)
                                    expression (src/ppx.ml[89,2447+36]..src/ppx.ml[89,2447+47])
                                      Texp_ident "pld_mutable/1732"
                                    expression (src/ppx.ml[90,2496+36]..src/ppx.ml[90,2496+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[90,2496+37]..src/ppx.ml[90,2496+41]),None)
                                    expression (src/ppx.ml[91,2540+36]..src/ppx.ml[91,2540+44])
                                      Texp_ident "pld_type/1733"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[93,2592+0]..src/ppx.ml[93,2592+22])
          Tpat_var "process_core_type_desc/1726"
        expression (src/ppx.ml[93,2592+23]..src/ppx.ml[132,4223+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[93,2592+23]..src/ppx.ml[93,2592+24])
                Tpat_var "x/1736"
              expression (src/ppx.ml[94,2619+2]..src/ppx.ml[132,4223+65])
                Texp_match
                expression (src/ppx.ml[94,2619+8]..src/ppx.ml[94,2619+9])
                  Texp_ident "x/1736"
                [
                  <case>
                    pattern (src/ppx.ml[95,2634+4]..src/ppx.ml[95,2634+21])
                      Tpat_value
                      pattern (src/ppx.ml[95,2634+4]..src/ppx.ml[95,2634+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[95,2634+17]..src/ppx.ml[95,2634+18])
                            Tpat_var "a/1737"
                          pattern (src/ppx.ml[95,2634+19]..src/ppx.ml[95,2634+20])
                            Tpat_var "b/1738"
                        ]
                        None
                    expression (src/ppx.ml[97,2705+4]..src/ppx.ml[99,2771+91])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[97,2705+8]..src/ppx.ml[97,2705+12])
                            Tpat_var "myid/1757"
                          expression (src/ppx.ml[97,2705+15]..src/ppx.ml[97,2705+29])
                            Texp_apply
                            expression (src/ppx.ml[97,2705+16]..src/ppx.ml[97,2705+26])
                              Texp_ident "process_id/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[97,2705+27]..src/ppx.ml[97,2705+28])
                                  Texp_ident "a/1737"
                            ]
                      ]
                      expression (src/ppx.ml[98,2738+4]..src/ppx.ml[99,2771+91])
                        Texp_sequence
                        expression (src/ppx.ml[98,2738+4]..src/ppx.ml[98,2738+30])
                          Texp_apply
                          expression (src/ppx.ml[98,2738+5]..src/ppx.ml[98,2738+27])
                            Texp_ident "process_core_type_list/1729"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[98,2738+28]..src/ppx.ml[98,2738+29])
                                Texp_ident "b/1738"
                          ]
                        expression (src/ppx.ml[99,2771+4]..src/ppx.ml[99,2771+91])
                          Texp_apply
                          expression (src/ppx.ml[99,2771+5]..src/ppx.ml[99,2771+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[99,2771+19]..src/ppx.ml[99,2771+90])
                                Texp_apply
                                expression (src/ppx.ml[99,2771+20]..src/ppx.ml[99,2771+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[99,2771+35]..src/ppx.ml[99,2771+89])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[99,2771+36]..src/ppx.ml[99,2771+56])
                                          Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[99,2771+37]..src/ppx.ml[99,2771+55]),None)
                                        expression (src/ppx.ml[99,2771+58]..src/ppx.ml[99,2771+62])
                                          Texp_constant Const_string("id",(src/ppx.ml[99,2771+59]..src/ppx.ml[99,2771+61]),None)
                                        expression (src/ppx.ml[99,2771+63]..src/ppx.ml[99,2771+64])
                                          Texp_ident "a/1737"
                                        expression (src/ppx.ml[99,2771+66]..src/ppx.ml[99,2771+73])
                                          Texp_constant Const_string("types",(src/ppx.ml[99,2771+67]..src/ppx.ml[99,2771+72]),None)
                                        expression (src/ppx.ml[99,2771+74]..src/ppx.ml[99,2771+75])
                                          Texp_ident "b/1738"
                                        expression (src/ppx.ml[99,2771+78]..src/ppx.ml[99,2771+83])
                                          Texp_constant Const_string("id2",(src/ppx.ml[99,2771+79]..src/ppx.ml[99,2771+82]),None)
                                        expression (src/ppx.ml[99,2771+84]..src/ppx.ml[99,2771+88])
                                          Texp_ident "myid/1757"
                                      ]
                                ]
                          ]
                  <case>
                    pattern (src/ppx.ml[101,2864+4]..src/ppx.ml[101,2864+16])
                      Tpat_value
                      pattern (src/ppx.ml[101,2864+4]..src/ppx.ml[101,2864+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[101,2864+15]..src/ppx.ml[101,2864+16])
                            Tpat_var "a/1739"
                        ]
                        None
                    expression (src/ppx.ml[103,2912+4]..src/ppx.ml[103,2912+59])
                      Texp_apply
                      expression (src/ppx.ml[103,2912+5]..src/ppx.ml[103,2912+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[103,2912+19]..src/ppx.ml[103,2912+58])
                            Texp_apply
                            expression (src/ppx.ml[103,2912+20]..src/ppx.ml[103,2912+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[103,2912+35]..src/ppx.ml[103,2912+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[103,2912+37]..src/ppx.ml[103,2912+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[106,2991+4]..src/ppx.ml[106,2991+12])
                      Tpat_value
                      pattern (src/ppx.ml[106,2991+4]..src/ppx.ml[106,2991+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[106,2991+17]..src/ppx.ml[106,2991+69])
                      Texp_apply
                      expression (src/ppx.ml[106,2991+18]..src/ppx.ml[106,2991+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[106,2991+32]..src/ppx.ml[106,2991+68])
                            Texp_apply
                            expression (src/ppx.ml[106,2991+33]..src/ppx.ml[106,2991+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[106,2991+48]..src/ppx.ml[106,2991+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[106,2991+50]..src/ppx.ml[106,2991+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[107,3061+4]..src/ppx.ml[107,3061+17])
                      Tpat_value
                      pattern (src/ppx.ml[107,3061+4]..src/ppx.ml[107,3061+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[107,3061+13]..src/ppx.ml[107,3061+17])
                            Tpat_var "name/1740"
                        ]
                        None
                    expression (src/ppx.ml[107,3061+20]..src/ppx.ml[107,3061+80])
                      Texp_apply
                      expression (src/ppx.ml[107,3061+21]..src/ppx.ml[107,3061+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[107,3061+35]..src/ppx.ml[107,3061+79])
                            Texp_apply
                            expression (src/ppx.ml[107,3061+36]..src/ppx.ml[107,3061+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[107,3061+51]..src/ppx.ml[107,3061+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[107,3061+52]..src/ppx.ml[107,3061+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[107,3061+53]..src/ppx.ml[107,3061+68]),None)
                                    expression (src/ppx.ml[107,3061+73]..src/ppx.ml[107,3061+77])
                                      Texp_ident "name/1740"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[108,3142+4]..src/ppx.ml[108,3142+51])
                      Tpat_value
                      pattern (src/ppx.ml[108,3142+4]..src/ppx.ml[108,3142+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[108,3142+16]..src/ppx.ml[108,3142+25])
                            Tpat_var "arg_label/1741"
                          pattern (src/ppx.ml[108,3142+28]..src/ppx.ml[108,3142+37])
                            Tpat_var "core_type/1742"
                          pattern (src/ppx.ml[108,3142+40]..src/ppx.ml[108,3142+50])
                            Tpat_var "core_type2/1743"
                        ]
                        None
                    expression (src/ppx.ml[109,3197+4]..src/ppx.ml[109,3197+61])
                      Texp_apply
                      expression (src/ppx.ml[109,3197+5]..src/ppx.ml[109,3197+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[109,3197+19]..src/ppx.ml[109,3197+60])
                            Texp_apply
                            expression (src/ppx.ml[109,3197+20]..src/ppx.ml[109,3197+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[109,3197+35]..src/ppx.ml[109,3197+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[109,3197+37]..src/ppx.ml[109,3197+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[111,3260+4]..src/ppx.ml[111,3260+21])
                      Tpat_value
                      pattern (src/ppx.ml[111,3260+4]..src/ppx.ml[111,3260+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[111,3260+17]..src/ppx.ml[111,3260+18])
                            Tpat_var "a/1744"
                          pattern (src/ppx.ml[111,3260+19]..src/ppx.ml[111,3260+20])
                            Tpat_var "b/1745"
                        ]
                        None
                    expression (src/ppx.ml[113,3329+4]..src/ppx.ml[113,3329+60])
                      Texp_apply
                      expression (src/ppx.ml[113,3329+5]..src/ppx.ml[113,3329+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[113,3329+19]..src/ppx.ml[113,3329+59])
                            Texp_apply
                            expression (src/ppx.ml[113,3329+20]..src/ppx.ml[113,3329+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[113,3329+35]..src/ppx.ml[113,3329+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[113,3329+37]..src/ppx.ml[113,3329+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[114,3390+4]..src/ppx.ml[114,3390+20])
                      Tpat_value
                      pattern (src/ppx.ml[114,3390+4]..src/ppx.ml[114,3390+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[114,3390+16]..src/ppx.ml[114,3390+17])
                            Tpat_var "a/1746"
                          pattern (src/ppx.ml[114,3390+18]..src/ppx.ml[114,3390+19])
                            Tpat_var "b/1747"
                        ]
                        None
                    expression (src/ppx.ml[116,3460+4]..src/ppx.ml[116,3460+60])
                      Texp_apply
                      expression (src/ppx.ml[116,3460+5]..src/ppx.ml[116,3460+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[116,3460+19]..src/ppx.ml[116,3460+59])
                            Texp_apply
                            expression (src/ppx.ml[116,3460+20]..src/ppx.ml[116,3460+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[116,3460+35]..src/ppx.ml[116,3460+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[116,3460+37]..src/ppx.ml[116,3460+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[117,3521+4]..src/ppx.ml[117,3521+20])
                      Tpat_value
                      pattern (src/ppx.ml[117,3521+4]..src/ppx.ml[117,3521+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[117,3521+16]..src/ppx.ml[117,3521+17])
                            Tpat_var "a/1748"
                          pattern (src/ppx.ml[117,3521+18]..src/ppx.ml[117,3521+19])
                            Tpat_var "b/1749"
                        ]
                        None
                    expression (src/ppx.ml[119,3582+4]..src/ppx.ml[119,3582+60])
                      Texp_apply
                      expression (src/ppx.ml[119,3582+5]..src/ppx.ml[119,3582+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[119,3582+19]..src/ppx.ml[119,3582+59])
                            Texp_apply
                            expression (src/ppx.ml[119,3582+20]..src/ppx.ml[119,3582+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[119,3582+35]..src/ppx.ml[119,3582+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[119,3582+37]..src/ppx.ml[119,3582+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[120,3643+4]..src/ppx.ml[120,3643+24])
                      Tpat_value
                      pattern (src/ppx.ml[120,3643+4]..src/ppx.ml[120,3643+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[120,3643+18]..src/ppx.ml[120,3643+19])
                            Tpat_var "a/1750"
                          pattern (src/ppx.ml[120,3643+20]..src/ppx.ml[120,3643+21])
                            Tpat_var "b/1751"
                          pattern (src/ppx.ml[120,3643+22]..src/ppx.ml[120,3643+23])
                            Tpat_var "c/1752"
                        ]
                        None
                    expression (src/ppx.ml[122,3733+4]..src/ppx.ml[122,3733+60])
                      Texp_apply
                      expression (src/ppx.ml[122,3733+5]..src/ppx.ml[122,3733+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[122,3733+19]..src/ppx.ml[122,3733+59])
                            Texp_apply
                            expression (src/ppx.ml[122,3733+20]..src/ppx.ml[122,3733+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[122,3733+35]..src/ppx.ml[122,3733+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[122,3733+37]..src/ppx.ml[122,3733+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[123,3794+4]..src/ppx.ml[123,3794+19])
                      Tpat_value
                      pattern (src/ppx.ml[123,3794+4]..src/ppx.ml[123,3794+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[123,3794+15]..src/ppx.ml[123,3794+16])
                            Tpat_var "a/1753"
                          pattern (src/ppx.ml[123,3794+17]..src/ppx.ml[123,3794+18])
                            Tpat_var "b/1754"
                        ]
                        None
                    expression (src/ppx.ml[125,3858+4]..src/ppx.ml[125,3858+60])
                      Texp_apply
                      expression (src/ppx.ml[125,3858+5]..src/ppx.ml[125,3858+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[125,3858+19]..src/ppx.ml[125,3858+59])
                            Texp_apply
                            expression (src/ppx.ml[125,3858+20]..src/ppx.ml[125,3858+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[125,3858+35]..src/ppx.ml[125,3858+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[125,3858+37]..src/ppx.ml[125,3858+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[126,3919+4]..src/ppx.ml[126,3919+18])
                      Tpat_value
                      pattern (src/ppx.ml[126,3919+4]..src/ppx.ml[126,3919+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[126,3919+17]..src/ppx.ml[126,3919+18])
                            Tpat_var "a/1755"
                        ]
                        None
                    expression (src/ppx.ml[128,3967+4]..src/ppx.ml[128,3967+62])
                      Texp_apply
                      expression (src/ppx.ml[128,3967+5]..src/ppx.ml[128,3967+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[128,3967+19]..src/ppx.ml[128,3967+61])
                            Texp_apply
                            expression (src/ppx.ml[128,3967+20]..src/ppx.ml[128,3967+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[128,3967+35]..src/ppx.ml[128,3967+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[128,3967+36]..src/ppx.ml[128,3967+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[128,3967+37]..src/ppx.ml[128,3967+55]),None)
                                    expression (src/ppx.ml[128,3967+57]..src/ppx.ml[128,3967+58])
                                      Texp_ident "a/1755"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[131,4175+4]..src/ppx.ml[131,4175+20])
                      Tpat_value
                      pattern (src/ppx.ml[131,4175+4]..src/ppx.ml[131,4175+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[131,4175+19]..src/ppx.ml[131,4175+20])
                            Tpat_var "a/1756"
                        ]
                        None
                    expression (src/ppx.ml[132,4223+4]..src/ppx.ml[132,4223+65])
                      Texp_apply
                      expression (src/ppx.ml[132,4223+5]..src/ppx.ml[132,4223+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[132,4223+19]..src/ppx.ml[132,4223+64])
                            Texp_apply
                            expression (src/ppx.ml[132,4223+20]..src/ppx.ml[132,4223+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[132,4223+35]..src/ppx.ml[132,4223+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[132,4223+36]..src/ppx.ml[132,4223+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[132,4223+37]..src/ppx.ml[132,4223+58]),None)
                                    expression (src/ppx.ml[132,4223+60]..src/ppx.ml[132,4223+61])
                                      Texp_ident "a/1756"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[134,4293+2]..src/ppx.ml[134,4293+26])
          Tpat_var "process_record_kind_list/1727"
        expression (src/ppx.ml[134,4293+26]..src/ppx.ml[140,4430+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[134,4293+26]..src/ppx.ml[134,4293+29])
                Tpat_var "x/1797"
              expression (src/ppx.ml[135,4325+2]..src/ppx.ml[140,4430+6])
                Texp_match
                expression (src/ppx.ml[135,4325+8]..src/ppx.ml[135,4325+9])
                  Texp_ident "x/1797"
                [
                  <case>
                    pattern (src/ppx.ml[136,4340+4]..src/ppx.ml[136,4340+6])
                      Tpat_value
                      pattern (src/ppx.ml[136,4340+4]..src/ppx.ml[136,4340+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[136,4340+10]..src/ppx.ml[136,4340+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[137,4353+4]..src/ppx.ml[137,4353+10])
                      Tpat_value
                      pattern (src/ppx.ml[137,4353+4]..src/ppx.ml[137,4353+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[137,4353+4]..src/ppx.ml[137,4353+5])
                            Tpat_var "h/1798"
                          pattern (src/ppx.ml[137,4353+9]..src/ppx.ml[137,4353+10])
                            Tpat_var "t/1799"
                        ]
                        None
                    expression (src/ppx.ml[138,4367+4]..src/ppx.ml[140,4430+6])
                      Texp_sequence
                      expression (src/ppx.ml[138,4367+4]..src/ppx.ml[138,4367+27])
                        Texp_apply
                        expression (src/ppx.ml[138,4367+5]..src/ppx.ml[138,4367+24])
                          Texp_ident "process_record_kind/1725"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[138,4367+25]..src/ppx.ml[138,4367+26])
                              Texp_ident "h/1798"
                        ]
                      expression (src/ppx.ml[139,4396+4]..src/ppx.ml[140,4430+6])
                        Texp_sequence
                        expression (src/ppx.ml[139,4396+4]..src/ppx.ml[139,4396+32])
                          Texp_apply
                          expression (src/ppx.ml[139,4396+5]..src/ppx.ml[139,4396+29])
                            Texp_ident "process_record_kind_list/1727"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[139,4396+30]..src/ppx.ml[139,4396+31])
                                Texp_ident "t/1799"
                          ]
                        expression (src/ppx.ml[140,4430+4]..src/ppx.ml[140,4430+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[142,4441+0]..src/ppx.ml[142,4441+17])
          Tpat_var "process_core_type/1728"
        expression (src/ppx.ml[142,4441+17]..src/ppx.ml[152,4708+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[142,4441+17]..src/ppx.ml[142,4441+20])
                Tpat_var "x/1800"
              expression (src/ppx.ml[143,4464+2]..src/ppx.ml[152,4708+80])
                Texp_match
                expression (src/ppx.ml[143,4464+8]..src/ppx.ml[143,4464+9])
                  Texp_ident "x/1800"
                [
                  <case>
                    pattern (src/ppx.ml[144,4480+4]..src/ppx.ml[149,4641+5])
                      Tpat_value
                      pattern (src/ppx.ml[144,4480+4]..src/ppx.ml[149,4641+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[145,4486+6]..src/ppx.ml[145,4486+15])
                              Tpat_var "ptyp_desc/1801"
                          "ptyp_loc"
                            pattern (src/ppx.ml[146,4525+5]..src/ppx.ml[146,4525+13])
                              Tpat_var "ptyp_loc/1802"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[147,4558+5]..src/ppx.ml[147,4558+19])
                              Tpat_var "ptyp_loc_stack/1803"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[148,4601+5]..src/ppx.ml[148,4601+20])
                              Tpat_var "ptyp_attributes/1804"
                        ]
                    expression (src/ppx.ml[150,4649+4]..src/ppx.ml[152,4708+80])
                      Texp_sequence
                      expression (src/ppx.ml[150,4649+4]..src/ppx.ml[150,4649+38])
                        Texp_apply
                        expression (src/ppx.ml[150,4649+5]..src/ppx.ml[150,4649+27])
                          Texp_ident "process_core_type_desc/1726"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[150,4649+28]..src/ppx.ml[150,4649+37])
                              Texp_ident "ptyp_desc/1801"
                        ]
                      expression (src/ppx.ml[152,4708+4]..src/ppx.ml[152,4708+80])
                        Texp_apply
                        expression (src/ppx.ml[152,4708+5]..src/ppx.ml[152,4708+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[152,4708+19]..src/ppx.ml[152,4708+79])
                              Texp_apply
                              expression (src/ppx.ml[152,4708+20]..src/ppx.ml[152,4708+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[152,4708+35]..src/ppx.ml[152,4708+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[152,4708+36]..src/ppx.ml[152,4708+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[152,4708+37]..src/ppx.ml[152,4708+63]),None)
                                      expression (src/ppx.ml[152,4708+68]..src/ppx.ml[152,4708+77])
                                        Texp_ident "ptyp_desc/1801"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[153,4789+4]..src/ppx.ml[153,4789+26])
          Tpat_var "process_core_type_list/1729"
        expression (src/ppx.ml[153,4789+26]..src/ppx.ml[158,4905+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[153,4789+27]..src/ppx.ml[153,4789+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[153,4789+29]..src/ppx.ml[153,4789+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[153,4789+29]..src/ppx.ml[153,4789+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1805"
                pattern (src/ppx.ml[153,4789+27]..src/ppx.ml[153,4789+28])
                  Tpat_any
              expression (src/ppx.ml[154,4836+2]..src/ppx.ml[158,4905+29])
                Texp_match
                expression (src/ppx.ml[154,4836+8]..src/ppx.ml[154,4836+9])
                  Texp_ident "x/1805"
                [
                  <case>
                    pattern (src/ppx.ml[155,4851+4]..src/ppx.ml[155,4851+6])
                      Tpat_value
                      pattern (src/ppx.ml[155,4851+4]..src/ppx.ml[155,4851+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[155,4851+10]..src/ppx.ml[155,4851+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[156,4864+4]..src/ppx.ml[156,4864+10])
                      Tpat_value
                      pattern (src/ppx.ml[156,4864+4]..src/ppx.ml[156,4864+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[156,4864+4]..src/ppx.ml[156,4864+5])
                            Tpat_var "h/1806"
                          pattern (src/ppx.ml[156,4864+9]..src/ppx.ml[156,4864+10])
                            Tpat_var "t/1807"
                        ]
                        None
                    expression (src/ppx.ml[157,4878+4]..src/ppx.ml[158,4905+29])
                      Texp_sequence
                      expression (src/ppx.ml[157,4878+4]..src/ppx.ml[157,4878+25])
                        Texp_apply
                        expression (src/ppx.ml[157,4878+4]..src/ppx.ml[157,4878+21])
                          Texp_ident "process_core_type/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[157,4878+22]..src/ppx.ml[157,4878+25])
                              Texp_ident "h/1806"
                        ]
                      expression (src/ppx.ml[158,4905+4]..src/ppx.ml[158,4905+29])
                        Texp_apply
                        expression (src/ppx.ml[158,4905+4]..src/ppx.ml[158,4905+26])
                          Texp_ident "process_core_type_list/1729"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[158,4905+26]..src/ppx.ml[158,4905+29])
                              Texp_ident "t/1807"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[165,4949+0]..src/ppx.ml[172,5148+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[165,4949+4]..src/ppx.ml[165,4949+31])
          Tpat_var "print_constructor_arguments/1808"
        expression (src/ppx.ml[165,4949+31]..src/ppx.ml[172,5148+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[165,4949+31]..src/ppx.ml[165,4949+34])
                Tpat_var "x/1810"
              expression (src/ppx.ml[166,4986+2]..src/ppx.ml[172,5148+65])
                Texp_match
                expression (src/ppx.ml[166,4986+8]..src/ppx.ml[166,4986+9])
                  Texp_ident "x/1810"
                [
                  <case>
                    pattern (src/ppx.ml[167,5001+4]..src/ppx.ml[167,5001+17])
                      Tpat_value
                      pattern (src/ppx.ml[167,5001+4]..src/ppx.ml[167,5001+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[167,5001+16]..src/ppx.ml[167,5001+17])
                            Tpat_var "a/1811"
                        ]
                        None
                    expression (src/ppx.ml[168,5022+4]..src/ppx.ml[169,5054+64])
                      Texp_sequence
                      expression (src/ppx.ml[168,5022+4]..src/ppx.ml[168,5022+30])
                        Texp_apply
                        expression (src/ppx.ml[168,5022+5]..src/ppx.ml[168,5022+27])
                          Texp_ident "process_core_type_list/1729"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[168,5022+28]..src/ppx.ml[168,5022+29])
                              Texp_ident "a/1811"
                        ]
                      expression (src/ppx.ml[169,5054+4]..src/ppx.ml[169,5054+64])
                        Texp_apply
                        expression (src/ppx.ml[169,5054+5]..src/ppx.ml[169,5054+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[169,5054+19]..src/ppx.ml[169,5054+63])
                              Texp_apply
                              expression (src/ppx.ml[169,5054+20]..src/ppx.ml[169,5054+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[169,5054+35]..src/ppx.ml[169,5054+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[169,5054+36]..src/ppx.ml[169,5054+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[169,5054+37]..src/ppx.ml[169,5054+55]),None)
                                      expression (src/ppx.ml[169,5054+60]..src/ppx.ml[169,5054+61])
                                        Texp_ident "a/1811"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[171,5126+4]..src/ppx.ml[171,5126+18])
                      Tpat_value
                      pattern (src/ppx.ml[171,5126+4]..src/ppx.ml[171,5126+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[171,5126+17]..src/ppx.ml[171,5126+18])
                            Tpat_var "a/1812"
                        ]
                        None
                    expression (src/ppx.ml[172,5148+4]..src/ppx.ml[172,5148+65])
                      Texp_apply
                      expression (src/ppx.ml[172,5148+5]..src/ppx.ml[172,5148+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[172,5148+19]..src/ppx.ml[172,5148+64])
                            Texp_apply
                            expression (src/ppx.ml[172,5148+20]..src/ppx.ml[172,5148+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[172,5148+35]..src/ppx.ml[172,5148+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[172,5148+36]..src/ppx.ml[172,5148+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[172,5148+37]..src/ppx.ml[172,5148+56]),None)
                                    expression (src/ppx.ml[172,5148+61]..src/ppx.ml[172,5148+62])
                                      Texp_ident "a/1812"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[174,5215+0]..src/ppx.ml[206,6191+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[174,5215+8]..src/ppx.ml[174,5215+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1813"
        expression (src/ppx.ml[174,5215+57]..src/ppx.ml[206,6191+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[174,5215+57]..src/ppx.ml[174,5215+60])
                Tpat_var "x/1814"
              expression (src/ppx.ml[175,5278+2]..src/ppx.ml[206,6191+8])
                Texp_match
                expression (src/ppx.ml[175,5278+8]..src/ppx.ml[175,5278+9])
                  Texp_ident "x/1814"
                [
                  <case>
                    pattern (src/ppx.ml[176,5293+4]..src/ppx.ml[176,5293+6])
                      Tpat_value
                      pattern (src/ppx.ml[176,5293+4]..src/ppx.ml[176,5293+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[176,5293+10]..src/ppx.ml[176,5293+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[177,5306+4]..src/ppx.ml[177,5306+10])
                      Tpat_value
                      pattern (src/ppx.ml[177,5306+4]..src/ppx.ml[177,5306+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[177,5306+4]..src/ppx.ml[177,5306+5])
                            Tpat_var "h/1815"
                          pattern (src/ppx.ml[177,5306+9]..src/ppx.ml[177,5306+10])
                            Tpat_var "t/1816"
                        ]
                        None
                    expression (src/ppx.ml[179,5385+4]..src/ppx.ml[206,6191+8])
                      Texp_match
                      expression (src/ppx.ml[179,5385+10]..src/ppx.ml[179,5385+11])
                        Texp_ident "h/1815"
                      [
                        <case>
                          pattern (src/ppx.ml[180,5402+5]..src/ppx.ml[187,5640+5])
                            Tpat_value
                            pattern (src/ppx.ml[180,5402+5]..src/ppx.ml[187,5640+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[181,5409+6]..src/ppx.ml[181,5409+14])
                                    Tpat_var "pcd_name/1817"
                                "pcd_vars"
                                  pattern (src/ppx.ml[182,5443+6]..src/ppx.ml[182,5443+14])
                                    Tpat_var "pcd_vars/1818"
                                "pcd_args"
                                  pattern (src/ppx.ml[183,5482+6]..src/ppx.ml[183,5482+14])
                                    Tpat_var "pcd_args/1819"
                                "pcd_res"
                                  pattern (src/ppx.ml[184,5527+6]..src/ppx.ml[184,5527+13])
                                    Tpat_var "pcd_res/1820"
                                "pcd_loc"
                                  pattern (src/ppx.ml[185,5566+6]..src/ppx.ml[185,5566+13])
                                    Tpat_var "pcd_loc/1821"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[186,5599+6]..src/ppx.ml[186,5599+20])
                                    Tpat_var "pcd_attributes/1822"
                              ]
                          expression (src/ppx.ml[190,5722+6]..src/ppx.ml[206,6191+8])
                            Texp_sequence
                            expression (src/ppx.ml[190,5722+6]..src/ppx.ml[190,5722+43])
                              Texp_apply
                              expression (src/ppx.ml[190,5722+6]..src/ppx.ml[190,5722+33])
                                Texp_ident "print_constructor_arguments/1808"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[190,5722+33]..src/ppx.ml[190,5722+43])
                                    Texp_ident "pcd_args/1819"
                              ]
                            expression (src/ppx.ml[191,5767+6]..src/ppx.ml[206,6191+8])
                              Texp_sequence
                              expression (src/ppx.ml[191,5767+6]..src/ppx.ml[204,6112+16])
                                Texp_apply
                                expression (src/ppx.ml[191,5767+7]..src/ppx.ml[191,5767+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[191,5767+21]..src/ppx.ml[204,6112+15])
                                      Texp_apply
                                      expression (src/ppx.ml[191,5767+22]..src/ppx.ml[191,5767+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[191,5767+37]..src/ppx.ml[204,6112+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[192,5806+11]..src/ppx.ml[192,5806+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[192,5806+12]..src/ppx.ml[192,5806+36]),None)
                                              expression (src/ppx.ml[193,5845+15]..src/ppx.ml[193,5845+23])
                                                Texp_ident "pcd_name/1817"
                                              expression (src/ppx.ml[194,5870+15]..src/ppx.ml[194,5870+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[194,5870+16]..src/ppx.ml[194,5870+20]),None)
                                              expression (src/ppx.ml[195,5893+15]..src/ppx.ml[195,5893+23])
                                                Texp_ident "pcd_vars/1818"
                                              expression (src/ppx.ml[196,5918+15]..src/ppx.ml[196,5918+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[196,5918+16]..src/ppx.ml[196,5918+20]),None)
                                              expression (src/ppx.ml[197,5941+15]..src/ppx.ml[197,5941+23])
                                                Texp_ident "pcd_args/1819"
                                              expression (src/ppx.ml[198,5966+15]..src/ppx.ml[198,5966+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[198,5966+16]..src/ppx.ml[198,5966+19]),None)
                                              expression (src/ppx.ml[199,5988+15]..src/ppx.ml[199,5988+22])
                                                Texp_ident "pcd_res/1820"
                                              expression (src/ppx.ml[200,6012+15]..src/ppx.ml[200,6012+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[200,6012+16]..src/ppx.ml[200,6012+19]),None)
                                              expression (src/ppx.ml[201,6034+15]..src/ppx.ml[201,6034+22])
                                                Texp_ident "pcd_loc/1821"
                                              expression (src/ppx.ml[202,6058+15]..src/ppx.ml[202,6058+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[202,6058+16]..src/ppx.ml[202,6058+21]),None)
                                              expression (src/ppx.ml[203,6082+15]..src/ppx.ml[203,6082+29])
                                                Texp_ident "pcd_attributes/1822"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[205,6130+6]..src/ppx.ml[206,6191+8])
                                Texp_sequence
                                expression (src/ppx.ml[205,6130+6]..src/ppx.ml[205,6130+59])
                                  Texp_apply
                                  expression (src/ppx.ml[205,6130+7]..src/ppx.ml[205,6130+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1813"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[205,6130+57]..src/ppx.ml[205,6130+58])
                                        Texp_ident "t/1816"
                                  ]
                                expression (src/ppx.ml[206,6191+6]..src/ppx.ml[206,6191+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[208,6203+0]..src/ppx.ml[219,6600+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[208,6203+4]..src/ppx.ml[208,6203+16])
          Tpat_var "process_kind/1823"
        expression (src/ppx.ml[208,6203+16]..src/ppx.ml[219,6600+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[208,6203+16]..src/ppx.ml[208,6203+19])
                Tpat_var "x/1825"
              expression (src/ppx.ml[209,6225+2]..src/ppx.ml[219,6600+77])
                Texp_match
                expression (src/ppx.ml[209,6225+8]..src/ppx.ml[209,6225+9])
                  Texp_ident "x/1825"
                [
                  <case>
                    pattern (src/ppx.ml[211,6262+4]..src/ppx.ml[211,6262+18])
                      Tpat_value
                      pattern (src/ppx.ml[211,6262+4]..src/ppx.ml[211,6262+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[211,6262+23]..src/ppx.ml[211,6262+81])
                      Texp_apply
                      expression (src/ppx.ml[211,6262+24]..src/ppx.ml[211,6262+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[211,6262+38]..src/ppx.ml[211,6262+80])
                            Texp_apply
                            expression (src/ppx.ml[211,6262+39]..src/ppx.ml[211,6262+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[211,6262+54]..src/ppx.ml[211,6262+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[211,6262+56]..src/ppx.ml[211,6262+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[212,6344+4]..src/ppx.ml[212,6344+19])
                      Tpat_value
                      pattern (src/ppx.ml[212,6344+4]..src/ppx.ml[212,6344+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[212,6344+18]..src/ppx.ml[212,6344+19])
                            Tpat_var "a/1826"
                        ]
                        None
                    expression (src/ppx.ml[213,6367+4]..src/ppx.ml[214,6426+65])
                      Texp_sequence
                      expression (src/ppx.ml[213,6367+4]..src/ppx.ml[213,6367+57])
                        Texp_apply
                        expression (src/ppx.ml[213,6367+5]..src/ppx.ml[213,6367+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1813"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[213,6367+55]..src/ppx.ml[213,6367+56])
                              Texp_ident "a/1826"
                        ]
                      expression (src/ppx.ml[214,6426+4]..src/ppx.ml[214,6426+65])
                        Texp_apply
                        expression (src/ppx.ml[214,6426+5]..src/ppx.ml[214,6426+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[214,6426+19]..src/ppx.ml[214,6426+64])
                              Texp_apply
                              expression (src/ppx.ml[214,6426+20]..src/ppx.ml[214,6426+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[214,6426+35]..src/ppx.ml[214,6426+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[214,6426+36]..src/ppx.ml[214,6426+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[214,6426+37]..src/ppx.ml[214,6426+57]),None)
                                      expression (src/ppx.ml[214,6426+61]..src/ppx.ml[214,6426+62])
                                        Texp_ident "a/1826"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[217,6539+5]..src/ppx.ml[217,6539+19])
                      Tpat_value
                      pattern (src/ppx.ml[217,6539+5]..src/ppx.ml[217,6539+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[217,6539+18]..src/ppx.ml[217,6539+19])
                            Tpat_var "a/1827"
                        ]
                        None
                    expression (src/ppx.ml[218,6567+5]..src/ppx.ml[218,6567+32])
                      Texp_apply
                      expression (src/ppx.ml[218,6567+5]..src/ppx.ml[218,6567+29])
                        Texp_ident "process_record_kind_list/1727"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[218,6567+29]..src/ppx.ml[218,6567+32])
                            Texp_ident "a/1827"
                      ]
                  <case>
                    pattern (src/ppx.ml[219,6600+5]..src/ppx.ml[219,6600+15])
                      Tpat_value
                      pattern (src/ppx.ml[219,6600+5]..src/ppx.ml[219,6600+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[219,6600+19]..src/ppx.ml[219,6600+77])
                      Texp_apply
                      expression (src/ppx.ml[219,6600+20]..src/ppx.ml[219,6600+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[219,6600+34]..src/ppx.ml[219,6600+76])
                            Texp_apply
                            expression (src/ppx.ml[219,6600+35]..src/ppx.ml[219,6600+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[219,6600+50]..src/ppx.ml[219,6600+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[219,6600+52]..src/ppx.ml[219,6600+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[221,6679+0]..src/ppx.ml[242,7685+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[221,6679+4]..src/ppx.ml[221,6679+19])
          Tpat_var "print_type_decl/1828"
        expression (src/ppx.ml[221,6679+19]..src/ppx.ml[242,7685+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[221,6679+19]..src/ppx.ml[221,6679+22])
                Tpat_var "x/1830"
              expression (src/ppx.ml[222,6704+2]..src/ppx.ml[242,7685+38])
                Texp_match
                expression (src/ppx.ml[222,6704+8]..src/ppx.ml[222,6704+9])
                  Texp_ident "x/1830"
                [
                  <case>
                    pattern (src/ppx.ml[223,6719+4]..src/ppx.ml[232,7100+5])
                      Tpat_value
                      pattern (src/ppx.ml[223,6719+4]..src/ppx.ml[232,7100+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[224,6725+6]..src/ppx.ml[224,6725+16])
                              Tpat_var "ptype_name/1831"
                          "ptype_params"
                            pattern (src/ppx.ml[225,6762+6]..src/ppx.ml[225,6762+18])
                              Tpat_var "ptype_params/1832"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[226,6834+6]..src/ppx.ml[226,6834+17])
                              Tpat_var "ptype_cstrs/1833"
                          "ptype_kind"
                            pattern (src/ppx.ml[227,6903+6]..src/ppx.ml[227,6903+16])
                              Tpat_var "ptype_kind/1834"
                          "ptype_private"
                            pattern (src/ppx.ml[228,6940+6]..src/ppx.ml[228,6940+19])
                              Tpat_var "ptype_private/1835"
                          "ptype_manifest"
                            pattern (src/ppx.ml[229,6981+6]..src/ppx.ml[229,6981+20])
                              Tpat_var "ptype_manifest/1836"
                          "ptype_attributes"
                            pattern (src/ppx.ml[230,7028+6]..src/ppx.ml[230,7028+22])
                              Tpat_var "ptype_attributes/1837"
                          "ptype_loc"
                            pattern (src/ppx.ml[231,7069+6]..src/ppx.ml[231,7069+15])
                              Tpat_var "ptype_loc/1838"
                        ]
                    expression (src/ppx.ml[233,7109+4]..src/ppx.ml[242,7685+38])
                      Texp_sequence
                      expression (src/ppx.ml[233,7109+4]..src/ppx.ml[233,7109+69])
                        Texp_apply
                        expression (src/ppx.ml[233,7109+5]..src/ppx.ml[233,7109+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[233,7109+19]..src/ppx.ml[233,7109+68])
                              Texp_apply
                              expression (src/ppx.ml[233,7109+20]..src/ppx.ml[233,7109+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[233,7109+35]..src/ppx.ml[233,7109+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[233,7109+36]..src/ppx.ml[233,7109+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[233,7109+37]..src/ppx.ml[233,7109+53]),None)
                                      expression (src/ppx.ml[233,7109+56]..src/ppx.ml[233,7109+66])
                                        Texp_ident "ptype_name/1831"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7180+4]..src/ppx.ml[242,7685+38])
                        Texp_sequence
                        expression (src/ppx.ml[234,7180+4]..src/ppx.ml[234,7180+72])
                          Texp_apply
                          expression (src/ppx.ml[234,7180+5]..src/ppx.ml[234,7180+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[234,7180+19]..src/ppx.ml[234,7180+71])
                                Texp_apply
                                expression (src/ppx.ml[234,7180+20]..src/ppx.ml[234,7180+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[234,7180+35]..src/ppx.ml[234,7180+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[234,7180+36]..src/ppx.ml[234,7180+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[234,7180+37]..src/ppx.ml[234,7180+54]),None)
                                        expression (src/ppx.ml[234,7180+57]..src/ppx.ml[234,7180+69])
                                          Texp_ident "ptype_params/1832"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7254+4]..src/ppx.ml[242,7685+38])
                          Texp_sequence
                          expression (src/ppx.ml[235,7254+4]..src/ppx.ml[235,7254+66])
                            Texp_apply
                            expression (src/ppx.ml[235,7254+5]..src/ppx.ml[235,7254+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[235,7254+19]..src/ppx.ml[235,7254+65])
                                  Texp_apply
                                  expression (src/ppx.ml[235,7254+20]..src/ppx.ml[235,7254+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[235,7254+35]..src/ppx.ml[235,7254+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[235,7254+36]..src/ppx.ml[235,7254+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[235,7254+37]..src/ppx.ml[235,7254+49]),None)
                                          expression (src/ppx.ml[235,7254+52]..src/ppx.ml[235,7254+63])
                                            Texp_ident "ptype_cstrs/1833"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[236,7322+4]..src/ppx.ml[242,7685+38])
                            Texp_sequence
                            expression (src/ppx.ml[236,7322+4]..src/ppx.ml[236,7322+63])
                              Texp_apply
                              expression (src/ppx.ml[236,7322+5]..src/ppx.ml[236,7322+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[236,7322+19]..src/ppx.ml[236,7322+62])
                                    Texp_apply
                                    expression (src/ppx.ml[236,7322+20]..src/ppx.ml[236,7322+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[236,7322+35]..src/ppx.ml[236,7322+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[236,7322+36]..src/ppx.ml[236,7322+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[236,7322+37]..src/ppx.ml[236,7322+48]),None)
                                            expression (src/ppx.ml[236,7322+50]..src/ppx.ml[236,7322+60])
                                              Texp_ident "ptype_kind/1834"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[237,7387+4]..src/ppx.ml[242,7685+38])
                              Texp_sequence
                              expression (src/ppx.ml[237,7387+4]..src/ppx.ml[237,7387+29])
                                Texp_apply
                                expression (src/ppx.ml[237,7387+5]..src/ppx.ml[237,7387+17])
                                  Texp_ident "process_kind/1823"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[237,7387+18]..src/ppx.ml[237,7387+28])
                                      Texp_ident "ptype_kind/1834"
                                ]
                              expression (src/ppx.ml[238,7418+4]..src/ppx.ml[242,7685+38])
                                Texp_apply
                                expression (src/ppx.ml[238,7418+5]..src/ppx.ml[238,7418+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[238,7418+19]..src/ppx.ml[242,7685+37])
                                      Texp_apply
                                      expression (src/ppx.ml[238,7418+20]..src/ppx.ml[238,7418+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[238,7418+35]..src/ppx.ml[242,7685+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[238,7418+36]..src/ppx.ml[238,7418+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[238,7418+37]..src/ppx.ml[238,7418+51]),None)
                                              expression (src/ppx.ml[238,7418+55]..src/ppx.ml[238,7418+68])
                                                Texp_ident "ptype_private/1835"
                                              expression (src/ppx.ml[239,7488+36]..src/ppx.ml[239,7488+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[239,7488+37]..src/ppx.ml[239,7488+51]),None)
                                              expression (src/ppx.ml[239,7488+54]..src/ppx.ml[239,7488+68])
                                                Texp_ident "ptype_manifest/1836"
                                              expression (src/ppx.ml[240,7558+36]..src/ppx.ml[240,7558+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[240,7558+37]..src/ppx.ml[240,7558+47]),None)
                                              expression (src/ppx.ml[240,7558+50]..src/ppx.ml[240,7558+66])
                                                Texp_ident "ptype_attributes/1837"
                                              expression (src/ppx.ml[241,7626+36]..src/ppx.ml[241,7626+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[241,7626+37]..src/ppx.ml[241,7626+46]),None)
                                              expression (src/ppx.ml[241,7626+49]..src/ppx.ml[241,7626+58])
                                                Texp_ident "ptype_loc/1838"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[244,7729+0]..src/ppx.ml[250,7864+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[244,7729+8]..src/ppx.ml[244,7729+30])
          Tpat_var "process_type_decl_list/1839"
        expression (src/ppx.ml[244,7729+30]..src/ppx.ml[250,7864+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[244,7729+30]..src/ppx.ml[244,7729+33])
                Tpat_var "x/1840"
              expression (src/ppx.ml[245,7765+2]..src/ppx.ml[250,7864+6])
                Texp_match
                expression (src/ppx.ml[245,7765+8]..src/ppx.ml[245,7765+9])
                  Texp_ident "x/1840"
                [
                  <case>
                    pattern (src/ppx.ml[246,7780+4]..src/ppx.ml[246,7780+6])
                      Tpat_value
                      pattern (src/ppx.ml[246,7780+4]..src/ppx.ml[246,7780+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[246,7780+10]..src/ppx.ml[246,7780+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[247,7793+4]..src/ppx.ml[247,7793+10])
                      Tpat_value
                      pattern (src/ppx.ml[247,7793+4]..src/ppx.ml[247,7793+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[247,7793+4]..src/ppx.ml[247,7793+5])
                            Tpat_var "h/1841"
                          pattern (src/ppx.ml[247,7793+9]..src/ppx.ml[247,7793+10])
                            Tpat_var "t/1842"
                        ]
                        None
                    expression (src/ppx.ml[248,7807+4]..src/ppx.ml[250,7864+6])
                      Texp_sequence
                      expression (src/ppx.ml[248,7807+4]..src/ppx.ml[248,7807+23])
                        Texp_apply
                        expression (src/ppx.ml[248,7807+5]..src/ppx.ml[248,7807+20])
                          Texp_ident "print_type_decl/1828"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[248,7807+21]..src/ppx.ml[248,7807+22])
                              Texp_ident "h/1841"
                        ]
                      expression (src/ppx.ml[249,7832+4]..src/ppx.ml[250,7864+6])
                        Texp_sequence
                        expression (src/ppx.ml[249,7832+4]..src/ppx.ml[249,7832+30])
                          Texp_apply
                          expression (src/ppx.ml[249,7832+5]..src/ppx.ml[249,7832+27])
                            Texp_ident "process_type_decl_list/1839"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[249,7832+28]..src/ppx.ml[249,7832+29])
                                Texp_ident "t/1842"
                          ]
                        expression (src/ppx.ml[250,7864+4]..src/ppx.ml[250,7864+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[252,7876+0]..src/ppx.ml[278,9840+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[252,7876+4]..src/ppx.ml[252,7876+13])
          Tpat_var "printdesc/1843"
        expression (src/ppx.ml[252,7876+13]..src/ppx.ml[278,9840+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[252,7876+14]..src/ppx.ml[252,7876+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[252,7876+17]..src/ppx.ml[252,7876+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1845"
                pattern (src/ppx.ml[252,7876+14]..src/ppx.ml[252,7876+15])
                  Tpat_any
              expression (src/ppx.ml[253,7922+2]..src/ppx.ml[278,9840+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[252,7876+39]..src/ppx.ml[252,7876+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[253,7922+2]..src/ppx.ml[253,7922+68])
                  Texp_apply
                  expression (src/ppx.ml[253,7922+3]..src/ppx.ml[253,7922+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[253,7922+17]..src/ppx.ml[253,7922+67])
                        Texp_apply
                        expression (src/ppx.ml[253,7922+18]..src/ppx.ml[253,7922+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,7922+33]..src/ppx.ml[253,7922+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[253,7922+34]..src/ppx.ml[253,7922+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[253,7922+35]..src/ppx.ml[253,7922+61]),None)
                                expression (src/ppx.ml[253,7922+64]..src/ppx.ml[253,7922+65])
                                  Texp_ident "x/1845"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[254,7992+2]..src/ppx.ml[278,9840+128])
                  Texp_match
                  expression (src/ppx.ml[254,7992+8]..src/ppx.ml[254,7992+9])
                    Texp_ident "x/1845"
                  [
                    <case>
                      pattern (src/ppx.ml[255,8007+4]..src/ppx.ml[255,8007+37])
                        Tpat_value
                        pattern (src/ppx.ml[255,8007+4]..src/ppx.ml[255,8007+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[255,8007+15]..src/ppx.ml[255,8007+25])
                              Tpat_var "expression/1846"
                            pattern (src/ppx.ml[255,8007+26]..src/ppx.ml[255,8007+36])
                              Tpat_var "attributes/1847"
                          ]
                          None
                      expression (src/ppx.ml[255,8007+41]..src/ppx.ml[255,8007+117])
                        Texp_apply
                        expression (src/ppx.ml[255,8007+42]..src/ppx.ml[255,8007+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[255,8007+56]..src/ppx.ml[255,8007+116])
                              Texp_apply
                              expression (src/ppx.ml[255,8007+57]..src/ppx.ml[255,8007+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[255,8007+72]..src/ppx.ml[255,8007+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[255,8007+73]..src/ppx.ml[255,8007+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[255,8007+74]..src/ppx.ml[255,8007+90]),None)
                                      expression (src/ppx.ml[255,8007+93]..src/ppx.ml[255,8007+103])
                                        Texp_ident "expression/1846"
                                      expression (src/ppx.ml[255,8007+104]..src/ppx.ml[255,8007+114])
                                        Texp_ident "attributes/1847"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[257,8145+4]..src/ppx.ml[257,8145+45])
                        Tpat_value
                        pattern (src/ppx.ml[257,8145+4]..src/ppx.ml[257,8145+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[257,8145+16]..src/ppx.ml[257,8145+24])
                              Tpat_var "rec_flag/1848"
                            pattern (src/ppx.ml[257,8145+26]..src/ppx.ml[257,8145+44])
                              Tpat_var "value_binding_list/1849"
                          ]
                          None
                      expression (src/ppx.ml[257,8145+48]..src/ppx.ml[258,8279+48])
                        Texp_sequence
                        expression (src/ppx.ml[257,8145+48]..src/ppx.ml[257,8145+132])
                          Texp_apply
                          expression (src/ppx.ml[257,8145+49]..src/ppx.ml[257,8145+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[257,8145+63]..src/ppx.ml[257,8145+131])
                                Texp_apply
                                expression (src/ppx.ml[257,8145+64]..src/ppx.ml[257,8145+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[257,8145+79]..src/ppx.ml[257,8145+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[257,8145+80]..src/ppx.ml[257,8145+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[257,8145+81]..src/ppx.ml[257,8145+98]),None)
                                        expression (src/ppx.ml[257,8145+101]..src/ppx.ml[257,8145+109])
                                          Texp_ident "rec_flag/1848"
                                        expression (src/ppx.ml[257,8145+111]..src/ppx.ml[257,8145+129])
                                          Texp_ident "value_binding_list/1849"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[258,8279+4]..src/ppx.ml[258,8279+48])
                          Texp_apply
                          expression (src/ppx.ml[258,8279+4]..src/ppx.ml[258,8279+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[258,8279+28]..src/ppx.ml[258,8279+48])
                                Texp_ident "value_binding_list/1849"
                          ]
                    <case>
                      pattern (src/ppx.ml[259,8328+4]..src/ppx.ml[259,8328+36])
                        Tpat_value
                        pattern (src/ppx.ml[259,8328+4]..src/ppx.ml[259,8328+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[259,8328+19]..src/ppx.ml[259,8328+36])
                              Tpat_var "value_description/1850"
                          ]
                          None
                      expression (src/ppx.ml[259,8328+39]..src/ppx.ml[259,8328+116])
                        Texp_apply
                        expression (src/ppx.ml[259,8328+40]..src/ppx.ml[259,8328+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[259,8328+54]..src/ppx.ml[259,8328+115])
                              Texp_apply
                              expression (src/ppx.ml[259,8328+55]..src/ppx.ml[259,8328+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[259,8328+70]..src/ppx.ml[259,8328+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[259,8328+71]..src/ppx.ml[259,8328+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[259,8328+72]..src/ppx.ml[259,8328+93]),None)
                                      expression (src/ppx.ml[259,8328+96]..src/ppx.ml[259,8328+113])
                                        Texp_ident "value_description/1850"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[261,8446+4]..src/ppx.ml[261,8446+47])
                        Tpat_value
                        pattern (src/ppx.ml[261,8446+4]..src/ppx.ml[261,8446+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[261,8446+15]..src/ppx.ml[261,8446+23])
                              Tpat_var "rec_flag/1851"
                            pattern (src/ppx.ml[261,8446+25]..src/ppx.ml[261,8446+46])
                              Tpat_var "type_declaration_list/1852"
                          ]
                          None
                      expression (src/ppx.ml[263,8525+4]..src/ppx.ml[264,8576+90])
                        Texp_sequence
                        expression (src/ppx.ml[263,8525+4]..src/ppx.ml[263,8525+49])
                          Texp_apply
                          expression (src/ppx.ml[263,8525+4]..src/ppx.ml[263,8525+26])
                            Texp_ident "process_type_decl_list/1839"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[263,8525+26]..src/ppx.ml[263,8525+49])
                                Texp_ident "type_declaration_list/1852"
                          ]
                        expression (src/ppx.ml[264,8576+4]..src/ppx.ml[264,8576+90])
                          Texp_apply
                          expression (src/ppx.ml[264,8576+5]..src/ppx.ml[264,8576+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[264,8576+19]..src/ppx.ml[264,8576+89])
                                Texp_apply
                                expression (src/ppx.ml[264,8576+20]..src/ppx.ml[264,8576+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[264,8576+35]..src/ppx.ml[264,8576+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[264,8576+36]..src/ppx.ml[264,8576+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[264,8576+37]..src/ppx.ml[264,8576+53]),None)
                                        expression (src/ppx.ml[264,8576+56]..src/ppx.ml[264,8576+64])
                                          Texp_ident "rec_flag/1851"
                                        expression (src/ppx.ml[264,8576+66]..src/ppx.ml[264,8576+87])
                                          Texp_ident "type_declaration_list/1852"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[267,8669+4]..src/ppx.ml[267,8669+31])
                        Tpat_value
                        pattern (src/ppx.ml[267,8669+4]..src/ppx.ml[267,8669+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[267,8669+17]..src/ppx.ml[267,8669+31])
                              Tpat_var "type_extension/1853"
                          ]
                          None
                      expression (src/ppx.ml[267,8669+34]..src/ppx.ml[267,8669+105])
                        Texp_apply
                        expression (src/ppx.ml[267,8669+35]..src/ppx.ml[267,8669+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,8669+49]..src/ppx.ml[267,8669+104])
                              Texp_apply
                              expression (src/ppx.ml[267,8669+50]..src/ppx.ml[267,8669+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,8669+65]..src/ppx.ml[267,8669+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,8669+66]..src/ppx.ml[267,8669+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[267,8669+67]..src/ppx.ml[267,8669+85]),None)
                                      expression (src/ppx.ml[267,8669+88]..src/ppx.ml[267,8669+102])
                                        Texp_ident "type_extension/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[268,8775+4]..src/ppx.ml[268,8775+40])
                        Tpat_value
                        pattern (src/ppx.ml[268,8775+4]..src/ppx.ml[268,8775+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[268,8775+19]..src/ppx.ml[268,8775+40])
                              Tpat_var "extension_constructor/1854"
                          ]
                          None
                      expression (src/ppx.ml[268,8775+43]..src/ppx.ml[268,8775+124])
                        Texp_apply
                        expression (src/ppx.ml[268,8775+44]..src/ppx.ml[268,8775+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8775+58]..src/ppx.ml[268,8775+123])
                              Texp_apply
                              expression (src/ppx.ml[268,8775+59]..src/ppx.ml[268,8775+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[268,8775+74]..src/ppx.ml[268,8775+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[268,8775+75]..src/ppx.ml[268,8775+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[268,8775+76]..src/ppx.ml[268,8775+97]),None)
                                      expression (src/ppx.ml[268,8775+100]..src/ppx.ml[268,8775+121])
                                        Texp_ident "extension_constructor/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,8900+4]..src/ppx.ml[269,8900+31])
                        Tpat_value
                        pattern (src/ppx.ml[269,8900+4]..src/ppx.ml[269,8900+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[269,8900+17]..src/ppx.ml[269,8900+31])
                              Tpat_var "module_binding/1855"
                          ]
                          None
                      expression (src/ppx.ml[269,8900+34]..src/ppx.ml[269,8900+104])
                        Texp_apply
                        expression (src/ppx.ml[269,8900+35]..src/ppx.ml[269,8900+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,8900+49]..src/ppx.ml[269,8900+103])
                              Texp_apply
                              expression (src/ppx.ml[269,8900+50]..src/ppx.ml[269,8900+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,8900+65]..src/ppx.ml[269,8900+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,8900+66]..src/ppx.ml[269,8900+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[269,8900+67]..src/ppx.ml[269,8900+85]),None)
                                      expression (src/ppx.ml[269,8900+87]..src/ppx.ml[269,8900+101])
                                        Texp_ident "module_binding/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[270,9005+4]..src/ppx.ml[270,9005+39])
                        Tpat_value
                        pattern (src/ppx.ml[270,9005+4]..src/ppx.ml[270,9005+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[270,9005+20]..src/ppx.ml[270,9005+39])
                              Tpat_var "module_binding_list/1856"
                          ]
                          None
                      expression (src/ppx.ml[270,9005+42]..src/ppx.ml[270,9005+121])
                        Texp_apply
                        expression (src/ppx.ml[270,9005+43]..src/ppx.ml[270,9005+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[270,9005+57]..src/ppx.ml[270,9005+120])
                              Texp_apply
                              expression (src/ppx.ml[270,9005+58]..src/ppx.ml[270,9005+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[270,9005+73]..src/ppx.ml[270,9005+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[270,9005+74]..src/ppx.ml[270,9005+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[270,9005+75]..src/ppx.ml[270,9005+96]),None)
                                      expression (src/ppx.ml[270,9005+99]..src/ppx.ml[270,9005+118])
                                        Texp_ident "module_binding_list/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[271,9127+4]..src/ppx.ml[271,9127+40])
                        Tpat_value
                        pattern (src/ppx.ml[271,9127+4]..src/ppx.ml[271,9127+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[271,9127+17]..src/ppx.ml[271,9127+40])
                              Tpat_var "module_type_declaration/1857"
                          ]
                          None
                      expression (src/ppx.ml[271,9127+43]..src/ppx.ml[271,9127+124])
                        Texp_apply
                        expression (src/ppx.ml[271,9127+44]..src/ppx.ml[271,9127+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[271,9127+58]..src/ppx.ml[271,9127+123])
                              Texp_apply
                              expression (src/ppx.ml[271,9127+59]..src/ppx.ml[271,9127+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[271,9127+74]..src/ppx.ml[271,9127+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[271,9127+75]..src/ppx.ml[271,9127+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[271,9127+76]..src/ppx.ml[271,9127+95]),None)
                                      expression (src/ppx.ml[271,9127+98]..src/ppx.ml[271,9127+121])
                                        Texp_ident "module_type_declaration/1857"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[273,9269+4]..src/ppx.ml[273,9269+30])
                        Tpat_value
                        pattern (src/ppx.ml[273,9269+4]..src/ppx.ml[273,9269+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[273,9269+14]..src/ppx.ml[273,9269+30])
                              Tpat_var "open_description/1858"
                          ]
                          None
                      expression (src/ppx.ml[273,9269+33]..src/ppx.ml[273,9269+103])
                        Texp_apply
                        expression (src/ppx.ml[273,9269+34]..src/ppx.ml[273,9269+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[273,9269+48]..src/ppx.ml[273,9269+102])
                              Texp_apply
                              expression (src/ppx.ml[273,9269+49]..src/ppx.ml[273,9269+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[273,9269+64]..src/ppx.ml[273,9269+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[273,9269+65]..src/ppx.ml[273,9269+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[273,9269+66]..src/ppx.ml[273,9269+81]),None)
                                      expression (src/ppx.ml[273,9269+84]..src/ppx.ml[273,9269+100])
                                        Texp_ident "open_description/1858"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[274,9373+4]..src/ppx.ml[274,9373+36])
                        Tpat_value
                        pattern (src/ppx.ml[274,9373+4]..src/ppx.ml[274,9373+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[274,9373+15]..src/ppx.ml[274,9373+36])
                              Tpat_var "class_declarations/1859"
                          ]
                          None
                      expression (src/ppx.ml[274,9373+39]..src/ppx.ml[274,9373+113])
                        Texp_apply
                        expression (src/ppx.ml[274,9373+40]..src/ppx.ml[274,9373+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,9373+54]..src/ppx.ml[274,9373+112])
                              Texp_apply
                              expression (src/ppx.ml[274,9373+55]..src/ppx.ml[274,9373+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,9373+70]..src/ppx.ml[274,9373+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,9373+71]..src/ppx.ml[274,9373+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[274,9373+72]..src/ppx.ml[274,9373+89]),None)
                                      expression (src/ppx.ml[274,9373+92]..src/ppx.ml[274,9373+110])
                                        Texp_ident "class_declarations/1859"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[275,9487+4]..src/ppx.ml[275,9487+45])
                        Tpat_value
                        pattern (src/ppx.ml[275,9487+4]..src/ppx.ml[275,9487+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[275,9487+20]..src/ppx.ml[275,9487+45])
                              Tpat_var "class_type_declarations/1860"
                          ]
                          None
                      expression (src/ppx.ml[275,9487+48]..src/ppx.ml[275,9487+132])
                        Texp_apply
                        expression (src/ppx.ml[275,9487+49]..src/ppx.ml[275,9487+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9487+63]..src/ppx.ml[275,9487+131])
                              Texp_apply
                              expression (src/ppx.ml[275,9487+64]..src/ppx.ml[275,9487+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[275,9487+79]..src/ppx.ml[275,9487+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[275,9487+80]..src/ppx.ml[275,9487+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[275,9487+81]..src/ppx.ml[275,9487+103]),None)
                                      expression (src/ppx.ml[275,9487+106]..src/ppx.ml[275,9487+129])
                                        Texp_ident "class_type_declarations/1860"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,9620+4]..src/ppx.ml[276,9620+39])
                        Tpat_value
                        pattern (src/ppx.ml[276,9620+4]..src/ppx.ml[276,9620+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[276,9620+18]..src/ppx.ml[276,9620+39])
                              Tpat_var "include_declaration/1861"
                          ]
                          None
                      expression (src/ppx.ml[276,9620+41]..src/ppx.ml[276,9620+117])
                        Texp_apply
                        expression (src/ppx.ml[276,9620+42]..src/ppx.ml[276,9620+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[276,9620+56]..src/ppx.ml[276,9620+116])
                              Texp_apply
                              expression (src/ppx.ml[276,9620+57]..src/ppx.ml[276,9620+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[276,9620+72]..src/ppx.ml[276,9620+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[276,9620+73]..src/ppx.ml[276,9620+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[276,9620+74]..src/ppx.ml[276,9620+93]),None)
                                      expression (src/ppx.ml[276,9620+95]..src/ppx.ml[276,9620+114])
                                        Texp_ident "include_declaration/1861"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[277,9738+4]..src/ppx.ml[277,9738+30])
                        Tpat_value
                        pattern (src/ppx.ml[277,9738+4]..src/ppx.ml[277,9738+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[277,9738+19]..src/ppx.ml[277,9738+30])
                              Tpat_var "attribute/1862"
                          ]
                          None
                      expression (src/ppx.ml[277,9738+32]..src/ppx.ml[277,9738+101])
                        Texp_apply
                        expression (src/ppx.ml[277,9738+33]..src/ppx.ml[277,9738+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[277,9738+47]..src/ppx.ml[277,9738+100])
                              Texp_apply
                              expression (src/ppx.ml[277,9738+48]..src/ppx.ml[277,9738+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[277,9738+63]..src/ppx.ml[277,9738+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[277,9738+64]..src/ppx.ml[277,9738+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[277,9738+65]..src/ppx.ml[277,9738+86]),None)
                                      expression (src/ppx.ml[277,9738+89]..src/ppx.ml[277,9738+98])
                                        Texp_ident "attribute/1862"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[278,9840+4]..src/ppx.ml[278,9840+44])
                        Tpat_value
                        pattern (src/ppx.ml[278,9840+4]..src/ppx.ml[278,9840+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[278,9840+21]..src/ppx.ml[278,9840+30])
                              Tpat_var "extension/1863"
                            pattern (src/ppx.ml[278,9840+33]..src/ppx.ml[278,9840+43])
                              Tpat_var "attributes/1864"
                          ]
                          None
                      expression (src/ppx.ml[278,9840+46]..src/ppx.ml[278,9840+128])
                        Texp_apply
                        expression (src/ppx.ml[278,9840+47]..src/ppx.ml[278,9840+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[278,9840+61]..src/ppx.ml[278,9840+127])
                              Texp_apply
                              expression (src/ppx.ml[278,9840+62]..src/ppx.ml[278,9840+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[278,9840+77]..src/ppx.ml[278,9840+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[278,9840+78]..src/ppx.ml[278,9840+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[278,9840+79]..src/ppx.ml[278,9840+100]),None)
                                      expression (src/ppx.ml[278,9840+103]..src/ppx.ml[278,9840+112])
                                        Texp_ident "extension/1863"
                                      expression (src/ppx.ml[278,9840+115]..src/ppx.ml[278,9840+125])
                                        Texp_ident "attributes/1864"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[280,9970+0]..src/ppx.ml[280,9970+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9970+4]..src/ppx.ml[280,9970+7])
          Tpat_var "foo/1865"
        expression (src/ppx.ml[280,9970+10]..src/ppx.ml[280,9970+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[282,9985+0]..src/ppx.ml[290,10204+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[282,9985+4]..src/ppx.ml[282,9985+12])
          Tpat_var "printone/1866"
        expression (src/ppx.ml[282,9985+13]..src/ppx.ml[290,10204+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[282,9985+14]..src/ppx.ml[282,9985+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[282,9985+18]..src/ppx.ml[282,9985+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1867"
                pattern (src/ppx.ml[282,9985+14]..src/ppx.ml[282,9985+15])
                  Tpat_any
              expression (src/ppx.ml[283,10028+2]..src/ppx.ml[290,10204+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[282,9985+36]..src/ppx.ml[282,9985+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[283,10028+8]..src/ppx.ml[283,10028+9])
                  Texp_ident "x/1867"
                [
                  <case>
                    pattern (src/ppx.ml[284,10043+3]..src/ppx.ml[287,10093+3])
                      Tpat_value
                      pattern (src/ppx.ml[284,10043+3]..src/ppx.ml[287,10093+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[285,10048+4]..src/ppx.ml[285,10048+13])
                              Tpat_var "pstr_desc/1868"
                        ]
                    expression (src/ppx.ml[289,10177+4]..src/ppx.ml[290,10204+6])
                      Texp_sequence
                      expression (src/ppx.ml[289,10177+4]..src/ppx.ml[289,10177+25])
                        Texp_apply
                        expression (src/ppx.ml[289,10177+5]..src/ppx.ml[289,10177+14])
                          Texp_ident "printdesc/1843"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[289,10177+15]..src/ppx.ml[289,10177+24])
                              Texp_ident "pstr_desc/1868"
                        ]
                      expression (src/ppx.ml[290,10204+4]..src/ppx.ml[290,10204+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[296,10324+0]..src/ppx.ml[298,10405+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[296,10324+4]..src/ppx.ml[296,10324+13])
          Tpat_var "printone2/1869"
        expression (src/ppx.ml[296,10324+14]..src/ppx.ml[298,10405+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[296,10324+14]..src/ppx.ml[296,10324+15])
                Tpat_var "x/1870"
              expression (src/ppx.ml[297,10348+2]..src/ppx.ml[298,10405+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[296,10324+17]..src/ppx.ml[296,10324+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[297,10348+2]..src/ppx.ml[297,10348+55])
                  Texp_apply
                  expression (src/ppx.ml[297,10348+3]..src/ppx.ml[297,10348+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[297,10348+17]..src/ppx.ml[297,10348+54])
                        Texp_apply
                        expression (src/ppx.ml[297,10348+18]..src/ppx.ml[297,10348+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[297,10348+33]..src/ppx.ml[297,10348+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[297,10348+34]..src/ppx.ml[297,10348+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[297,10348+35]..src/ppx.ml[297,10348+49]),None)
                                expression (src/ppx.ml[297,10348+51]..src/ppx.ml[297,10348+52])
                                  Texp_ident "x/1870"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[298,10405+2]..src/ppx.ml[298,10405+12])
                  Texp_apply
                  expression (src/ppx.ml[298,10405+2]..src/ppx.ml[298,10405+10])
                    Texp_ident "printone/1866"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[298,10405+11]..src/ppx.ml[298,10405+12])
                        Texp_ident "x/1870"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[300,10421+0]..src/ppx.ml[302,10452+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[300,10421+4]..src/ppx.ml[300,10421+9])
          Tpat_var "proc1/1871"
        expression (src/ppx.ml[300,10421+10]..src/ppx.ml[302,10452+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[300,10421+10]..src/ppx.ml[300,10421+11])
                Tpat_var "x/1873"
              expression (src/ppx.ml[301,10437+2]..src/ppx.ml[302,10452+3])
                Texp_sequence
                expression (src/ppx.ml[301,10437+2]..src/ppx.ml[301,10437+13])
                  Texp_apply
                  expression (src/ppx.ml[301,10437+2]..src/ppx.ml[301,10437+11])
                    Texp_ident "printone2/1869"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[301,10437+12]..src/ppx.ml[301,10437+13])
                        Texp_ident "x/1873"
                  ]
                expression (src/ppx.ml[302,10452+2]..src/ppx.ml[302,10452+3])
                  Texp_ident "x/1873"
          ]
    ]
  structure_item (src/ppx.ml[304,10457+0]..src/ppx.ml[307,10606+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[304,10457+4]..src/ppx.ml[304,10457+9])
          Tpat_var "debug/1874"
        expression (src/ppx.ml[304,10457+10]..src/ppx.ml[307,10606+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[304,10457+10]..src/ppx.ml[304,10457+14])
                Tpat_var "proc/1876"
              expression (src/ppx.ml[304,10457+15]..src/ppx.ml[307,10606+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[304,10457+15]..src/ppx.ml[304,10457+18])
                      Tpat_var "lst/1877"
                    expression (src/ppx.ml[305,10485+2]..src/ppx.ml[307,10606+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[304,10457+21]..src/ppx.ml[304,10457+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[305,10485+6]..src/ppx.ml[305,10485+12])
                            Tpat_var "result/1878"
                          expression (src/ppx.ml[305,10485+15]..src/ppx.ml[305,10485+32])
                            Texp_apply
                            expression (src/ppx.ml[305,10485+15]..src/ppx.ml[305,10485+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[305,10485+24]..src/ppx.ml[305,10485+28])
                                  Texp_ident "proc/1876"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[305,10485+29]..src/ppx.ml[305,10485+32])
                                  Texp_ident "lst/1877"
                            ]
                      ]
                      expression (src/ppx.ml[306,10521+2]..src/ppx.ml[307,10606+4])
                        Texp_sequence
                        expression (src/ppx.ml[306,10521+2]..src/ppx.ml[306,10521+83])
                          Texp_apply
                          expression (src/ppx.ml[306,10521+2]..src/ppx.ml[306,10521+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[306,10521+12]..src/ppx.ml[306,10521+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[306,10521+17]..src/ppx.ml[306,10521+18])
                                      Tpat_var "i/1942"
                                    expression (src/ppx.ml[306,10521+22]..src/ppx.ml[306,10521+75])
                                      Texp_apply
                                      expression (src/ppx.ml[306,10521+22]..src/ppx.ml[306,10521+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[306,10521+36]..src/ppx.ml[306,10521+75])
                                            Texp_apply
                                            expression (src/ppx.ml[306,10521+37]..src/ppx.ml[306,10521+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[306,10521+52]..src/ppx.ml[306,10521+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[306,10521+53]..src/ppx.ml[306,10521+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[306,10521+54]..src/ppx.ml[306,10521+69]),None)
                                                    expression (src/ppx.ml[306,10521+72]..src/ppx.ml[306,10521+73])
                                                      Texp_ident "i/1942"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[306,10521+77]..src/ppx.ml[306,10521+83])
                                Texp_ident "result/1878"
                          ]
                        expression (src/ppx.ml[307,10606+2]..src/ppx.ml[307,10606+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[309,10628+0]..src/ppx.ml[312,10752+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[309,10628+4]..src/ppx.ml[309,10628+13])
          Tpat_var "transform/1943"
        expression (src/ppx.ml[309,10628+14]..src/ppx.ml[312,10752+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[309,10628+14]..src/ppx.ml[309,10628+15])
                Tpat_var "x/1945"
              expression (src/ppx.ml[310,10683+2]..src/ppx.ml[312,10752+3])
                Texp_sequence
                expression (src/ppx.ml[310,10683+2]..src/ppx.ml[310,10683+48])
                  Texp_apply
                  expression (src/ppx.ml[310,10683+3]..src/ppx.ml[310,10683+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[310,10683+17]..src/ppx.ml[310,10683+47])
                        Texp_apply
                        expression (src/ppx.ml[310,10683+18]..src/ppx.ml[310,10683+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[310,10683+33]..src/ppx.ml[310,10683+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[310,10683+34]..src/ppx.ml[310,10683+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[310,10683+35]..src/ppx.ml[310,10683+42]),None)
                                expression (src/ppx.ml[310,10683+44]..src/ppx.ml[310,10683+45])
                                  Texp_ident "x/1945"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[311,10733+2]..src/ppx.ml[312,10752+3])
                  Texp_sequence
                  expression (src/ppx.ml[311,10733+2]..src/ppx.ml[311,10733+17])
                    Texp_apply
                    expression (src/ppx.ml[311,10733+3]..src/ppx.ml[311,10733+8])
                      Texp_ident "debug/1874"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[311,10733+9]..src/ppx.ml[311,10733+14])
                          Texp_ident "proc1/1871"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[311,10733+15]..src/ppx.ml[311,10733+16])
                          Texp_ident "x/1945"
                    ]
                  expression (src/ppx.ml[312,10752+2]..src/ppx.ml[312,10752+3])
                    Texp_ident "x/1945"
          ]
    ]
  structure_item (src/ppx.ml[314,10759+1]..src/ppx.ml[314,10759+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[314,10759+5]..src/ppx.ml[314,10759+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[314,10759+10]..src/ppx.ml[314,10759+69])
          Texp_apply
          expression (src/ppx.ml[314,10759+10]..src/ppx.ml[314,10759+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[314,10759+47]..src/ppx.ml[314,10759+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[314,10759+47]..src/ppx.ml[314,10759+56])
                    Texp_ident "transform/1943"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[314,10759+57]..src/ppx.ml[314,10759+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[314,10759+58]..src/ppx.ml[314,10759+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.136>;
 "foo"[value] -> <Ppx.128>;
 "print_constructor_arguments"[value] -> <Ppx.75>;
 "print_type_decl"[value] -> <Ppx.93>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.107>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.129>;
 "printone2"[value] -> <Ppx.132>;
 "proc1"[value] -> <Ppx.134>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.34>;
 "process_core_type_desc"[value] -> <Ppx.32>;
 "process_core_type_list"[value] -> <Ppx.35>;
 "process_id"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.89>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.79>;
 "process_record_kind"[value] -> <Ppx.31>;
 "process_record_kind_list"[value] -> <Ppx.33>;
 "process_type_decl_list"[value] -> <Ppx.103>;
 "transform"[value] -> <Ppx.141>;
 }

(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (let
           (*match*/5108 =a (field 1 x/1047)
            pstr_desc/1275 =a (field 0 x/1047))
           (seq (apply (field 23 (global Ppx!)) pstr_desc/1275) 0))))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (let
           (pexp_attributes/1290 =a (field 3 x/1286)
            pexp_loc_stack/1289 =a (field 2 x/1286)
            pexp_loc/1288 =a (field 1 x/1286)
            pexp_desc/1287 =a (field 0 x/1286))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_attributes/1290)))
             0))))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (let
           (pvb_loc/1297 =a (field 3 x/1293)
            pvb_attributes/1296 =a (field 2 x/1293)
            pvb_expr/1295 =a (field 1 x/1293)
            pvb_pat/1294 =a (field 0 x/1293))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.pat:" pvb_pat/1294)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.expr:" pvb_expr/1295)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.atrr:"
                   pvb_attributes/1296)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.loc:" pvb_loc/1297)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
             (seq (apply (field 3 (global Ppx!)) h/1300)
               (apply print_value_binding_list/1298 t/1301) 0)))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439
         (let
           (txt/1723 =a (field 0 x/1439)
            txt2/1724 =a txt/1723
            *match*/5109 =a (field 1 x/1439))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:process_id:" txt2/1724)))
             txt/1723))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1725
       (function x/1730 : int
         (let
           (pld_attributes/1735 =a (field 4 x/1730)
            pld_loc/1734 =a (field 3 x/1730)
            pld_type/1733 =a (field 2 x/1730)
            pld_mutable/1732 =a (field 1 x/1730)
            pld_name/1731 =a (field 0 x/1730))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
                 pld_name/1731 "mutable" pld_mutable/1732 "type"
                 pld_type/1733)))))
      process_core_type_desc/1726
        (function x/1736 : int
          (switch* x/1736
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (let (name/1740 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_var:" name/1740))))
           case tag 1:
            (let
              (core_type2/1743 =a (field 2 x/1736)
               core_type/1742 =a (field 1 x/1736)
               arg_label/1741 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:")))
           case tag 2:
            (let (a/1739 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:")))
           case tag 3:
            (let
              (b/1738 =a (field 1 x/1736)
               a/1737 =a (field 0 x/1736)
               myid/1757 = (apply (field 5 (global Ppx!)) a/1737))
              (seq (apply process_core_type_list/1729 b/1738)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1737 "types"
                      b/1738 "id2" myid/1757)))))
           case tag 4:
            (let (b/1745 =a (field 1 x/1736) a/1744 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:")))
           case tag 5:
            (let (b/1747 =a (field 1 x/1736) a/1746 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:")))
           case tag 6:
            (let (b/1749 =a (field 1 x/1736) a/1748 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:")))
           case tag 7:
            (let
              (c/1752 =a (field 2 x/1736)
               b/1751 =a (field 1 x/1736)
               a/1750 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:")))
           case tag 8:
            (let (b/1754 =a (field 1 x/1736) a/1753 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:")))
           case tag 9:
            (let (a/1755 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1755))))
           case tag 10:
            (let (a/1756 =a (field 0 x/1736))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_extension:" a/1756))))))
      process_record_kind_list/1727
        (function x/1797 : int
          (if (isint x/1797) 0
            (let (t/1799 =a (field 1 x/1797) h/1798 =a (field 0 x/1797))
              (seq (apply process_record_kind/1725 h/1798)
                (apply process_record_kind_list/1727 t/1799) 0))))
      process_core_type/1728
        (function x/1800 : int
          (let
            (ptyp_attributes/1804 =a (field 3 x/1800)
             ptyp_loc_stack/1803 =a (field 2 x/1800)
             ptyp_loc/1802 =a (field 1 x/1800)
             ptyp_desc/1801 =a (field 0 x/1800))
            (seq (apply process_core_type_desc/1726 ptyp_desc/1801)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1801))))))
      process_core_type_list/1729
        (function x/1805 : int
          (if (isint x/1805) 0
            (let (t/1807 =a (field 1 x/1805) h/1806 =a (field 0 x/1805))
              (seq (apply process_core_type/1728 h/1806)
                (apply process_core_type_list/1729 t/1807))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1725)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1726)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1727)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1728)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1729)))
  (let
    (print_constructor_arguments/1808 =
       (function x/1810 : int
         (switch* x/1810
          case tag 0:
           (let (a/1811 =a (field 0 x/1810))
             (seq (apply (field 10 (global Ppx!)) a/1811)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1811)))))
          case tag 1:
           (let (a/1812 =a (field 0 x/1810))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pcstr_record:" a/1812)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1808))
  (letrec
    (process_pype_variant_constructor_declaration_list/1813
       (function x/1814 : int
         (if (isint x/1814) 0
           (let
             (h/1815 =a (field 0 x/1814)
              pcd_attributes/1822 =a (field 5 h/1815)
              pcd_loc/1821 =a (field 4 h/1815)
              pcd_res/1820 =a (field 3 h/1815)
              pcd_args/1819 =a (field 2 h/1815)
              pcd_vars/1818 =a (field 1 h/1815)
              pcd_name/1817 =a (field 0 h/1815)
              t/1816 =a (field 1 x/1814))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1819)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" pcd_name/1817
                     "vars" pcd_vars/1818 "args" pcd_args/1819 "res"
                     pcd_res/1820 "loc" pcd_loc/1821 "attrs"
                     pcd_attributes/1822)))
               (apply process_pype_variant_constructor_declaration_list/1813
                 t/1816)
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1813))
  (let
    (process_kind/1823 =
       (function x/1825 : int
         (switch* x/1825
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1826 =a (field 0 x/1825))
             (seq (apply (field 12 (global Ppx!)) a/1826)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1826)))))
          case tag 1:
           (let (a/1827 =a (field 0 x/1825))
             (apply (field 8 (global Ppx!)) a/1827)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1823))
  (let
    (print_type_decl/1828 =
       (function x/1830 : int
         (let
           (ptype_loc/1838 =a (field 7 x/1830)
            ptype_attributes/1837 =a (field 6 x/1830)
            ptype_manifest/1836 =a (field 5 x/1830)
            ptype_private/1835 =a (field 4 x/1830)
            ptype_kind/1834 =a (field 3 x/1830)
            ptype_cstrs/1833 =a (field 2 x/1830)
            ptype_params/1832 =a (field 1 x/1830)
            ptype_name/1831 =a (field 0 x/1830))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" ptype_name/1831)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" ptype_params/1832)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" ptype_cstrs/1833)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1834)))
             (apply (field 13 (global Ppx!)) ptype_kind/1834)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   ptype_private/1835 "DEBUG:manifest" ptype_manifest/1836
                   "DEBUG:attr" ptype_attributes/1837 "DEBUG:loc"
                   ptype_loc/1838)))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1828))
  (letrec
    (process_type_decl_list/1839
       (function x/1840 : int
         (if (isint x/1840) 0
           (let (t/1842 =a (field 1 x/1840) h/1841 =a (field 0 x/1840))
             (seq (apply (field 14 (global Ppx!)) h/1841)
               (apply process_type_decl_list/1839 t/1842) 0)))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1839))
  (let
    (printdesc/1843 =
       (function x/1845 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1845)))
           (switch* x/1845
            case tag 0:
             (let
               (attributes/1847 =a (field 1 x/1845)
                expression/1846 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_eval:" expression/1846
                     attributes/1847))))
            case tag 1:
             (let
               (value_binding_list/1849 =a (field 1 x/1845)
                rec_flag/1848 =a (field 0 x/1845))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:" rec_flag/1848
                       value_binding_list/1849)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1849)))
            case tag 2:
             (let (value_description/1850 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_primitive:"
                     value_description/1850))))
            case tag 3:
             (let
               (type_declaration_list/1852 =a (field 1 x/1845)
                rec_flag/1851 =a (field 0 x/1845))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1852)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:" rec_flag/1851
                       type_declaration_list/1852)))))
            case tag 4:
             (let (type_extension/1853 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_typext:" type_extension/1853))))
            case tag 5:
             (let (extension_constructor/1854 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_exception:"
                     extension_constructor/1854))))
            case tag 6:
             (let (module_binding/1855 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_module:" module_binding/1855))))
            case tag 7:
             (let (module_binding_list/1856 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_recmodule:"
                     module_binding_list/1856))))
            case tag 8:
             (let (module_type_declaration/1857 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_modtype:"
                     module_type_declaration/1857))))
            case tag 9:
             (let (open_description/1858 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_open" open_description/1858))))
            case tag 10:
             (let (class_declarations/1859 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class:" class_declarations/1859))))
            case tag 11:
             (let (class_type_declarations/1860 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class_type:"
                     class_type_declarations/1860))))
            case tag 12:
             (let (include_declaration/1861 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_include:"
                     include_declaration/1861))))
            case tag 13:
             (let (attribute/1862 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_attribute:" attribute/1862))))
            case tag 14:
             (let
               (attributes/1864 =a (field 1 x/1845)
                extension/1863 =a (field 0 x/1845))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_extension:" extension/1863
                     attributes/1864))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1843))
  (let (foo/1865 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1865))
  (let
    (printone/1866 =
       (function x/1867 : int
         (let
           (*match*/5110 =a (field 1 x/1867)
            pstr_desc/1868 =a (field 0 x/1867))
           (seq (apply (field 16 (global Ppx!)) pstr_desc/1868) 0))))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1866))
  (let
    (printone2/1869 =
       (function x/1870 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1870)))
           (apply (field 18 (global Ppx!)) x/1870))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1869))
  (let
    (proc1/1871 =
       (function x/1873 (seq (apply (field 19 (global Ppx!)) x/1873) x/1873)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1871))
  (let
    (debug/1874 =
       (function proc/1876 lst/1877 : int
         (let
           (result/1878 =
              (apply (field 18 (global Stdlib__List!)) proc/1876 lst/1877))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1942 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1942))))
               result/1878)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1874))
  (let
    (transform/1943 =
       (function x/1945
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1945)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1945)
           x/1945)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1943))
  (let
    (*match*/5112 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)
(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (seq (apply (field 23 (global Ppx!)) (field 0 x/1047)) 0)))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 0 x/1286))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 3 x/1286))))
           0)))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.pat:" (field 0 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.expr:" (field 1 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.atrr:" (field 2 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.loc:" (field 3 x/1293)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (seq (apply (field 3 (global Ppx!)) (field 0 x/1299))
             (apply print_value_binding_list/1298 (field 1 x/1299)) 0))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439
         (let (txt/1723 =a (field 0 x/1439))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:process_id:" txt/1723)))
             txt/1723))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1725
       (function x/1730 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
               (field 0 x/1730) "mutable" (field 1 x/1730) "type"
               (field 2 x/1730)))))
      process_core_type_desc/1726
        (function x/1736 : int
          (switch* x/1736
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_var:" (field 0 x/1736))))
           case tag 1:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:"))
           case tag 2:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:"))
           case tag 3:
            (let
              (b/1738 =a (field 1 x/1736)
               a/1737 =a (field 0 x/1736)
               myid/1757 = (apply (field 5 (global Ppx!)) a/1737))
              (seq (apply process_core_type_list/1729 b/1738)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1737 "types"
                      b/1738 "id2" myid/1757)))))
           case tag 4:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:"))
           case tag 5:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:"))
           case tag 6:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:"))
           case tag 7:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:"))
           case tag 8:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:"))
           case tag 9:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_arrow3:" (field 0 x/1736))))
           case tag 10:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_extension:" (field 0 x/1736))))))
      process_record_kind_list/1727
        (function x/1797 : int
          (if (isint x/1797) 0
            (seq (apply process_record_kind/1725 (field 0 x/1797))
              (apply process_record_kind_list/1727 (field 1 x/1797)) 0)))
      process_core_type/1728
        (function x/1800 : int
          (let (ptyp_desc/1801 =a (field 0 x/1800))
            (seq (apply process_core_type_desc/1726 ptyp_desc/1801)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1801))))))
      process_core_type_list/1729
        (function x/1805 : int
          (if (isint x/1805) 0
            (seq (apply process_core_type/1728 (field 0 x/1805))
              (apply process_core_type_list/1729 (field 1 x/1805))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1725)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1726)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1727)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1728)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1729)))
  (let
    (print_constructor_arguments/1808 =
       (function x/1810 : int
         (switch* x/1810
          case tag 0:
           (let (a/1811 =a (field 0 x/1810))
             (seq (apply (field 10 (global Ppx!)) a/1811)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1811)))))
          case tag 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:Pcstr_record:" (field 0 x/1810)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1808))
  (letrec
    (process_pype_variant_constructor_declaration_list/1813
       (function x/1814 : int
         (if (isint x/1814) 0
           (let
             (h/1815 =a (field 0 x/1814) pcd_args/1819 =a (field 2 h/1815))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1819)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" (field 0 h/1815)
                     "vars" (field 1 h/1815) "args" pcd_args/1819 "res"
                     (field 3 h/1815) "loc" (field 4 h/1815) "attrs"
                     (field 5 h/1815))))
               (apply process_pype_variant_constructor_declaration_list/1813
                 (field 1 x/1814))
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1813))
  (let
    (process_kind/1823 =
       (function x/1825 : int
         (switch* x/1825
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1826 =a (field 0 x/1825))
             (seq (apply (field 12 (global Ppx!)) a/1826)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1826)))))
          case tag 1: (apply (field 8 (global Ppx!)) (field 0 x/1825)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1823))
  (let
    (print_type_decl/1828 =
       (function x/1830 : int
         (let (ptype_kind/1834 =a (field 3 x/1830))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" (field 0 x/1830))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" (field 1 x/1830))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" (field 2 x/1830))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1834)))
             (apply (field 13 (global Ppx!)) ptype_kind/1834)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   (field 4 x/1830) "DEBUG:manifest" (field 5 x/1830)
                   "DEBUG:attr" (field 6 x/1830) "DEBUG:loc"
                   (field 7 x/1830))))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1828))
  (letrec
    (process_type_decl_list/1839
       (function x/1840 : int
         (if (isint x/1840) 0
           (seq (apply (field 14 (global Ppx!)) (field 0 x/1840))
             (apply process_type_decl_list/1839 (field 1 x/1840)) 0))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1839))
  (let
    (printdesc/1843 =
       (function x/1845 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1845)))
           (switch* x/1845
            case tag 0:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_eval:" (field 0 x/1845)
                   (field 1 x/1845))))
            case tag 1:
             (let (value_binding_list/1849 =a (field 1 x/1845))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:"
                       (field 0 x/1845) value_binding_list/1849)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1849)))
            case tag 2:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_primitive:" (field 0 x/1845))))
            case tag 3:
             (let (type_declaration_list/1852 =a (field 1 x/1845))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1852)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:"
                       (field 0 x/1845) type_declaration_list/1852)))))
            case tag 4:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_typext:" (field 0 x/1845))))
            case tag 5:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_exception:" (field 0 x/1845))))
            case tag 6:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_module:" (field 0 x/1845))))
            case tag 7:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_recmodule:" (field 0 x/1845))))
            case tag 8:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_modtype:" (field 0 x/1845))))
            case tag 9:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_open" (field 0 x/1845))))
            case tag 10:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class:" (field 0 x/1845))))
            case tag 11:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class_type:" (field 0 x/1845))))
            case tag 12:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_include:" (field 0 x/1845))))
            case tag 13:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_attribute:" (field 0 x/1845))))
            case tag 14:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_extension:" (field 0 x/1845)
                   (field 1 x/1845))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1843))
  (let (foo/1865 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1865))
  (let
    (printone/1866 =
       (function x/1867 : int
         (seq (apply (field 16 (global Ppx!)) (field 0 x/1867)) 0)))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1866))
  (let
    (printone2/1869 =
       (function x/1870 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1870)))
           (apply (field 18 (global Ppx!)) x/1870))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1869))
  (let
    (proc1/1871 =
       (function x/1873 (seq (apply (field 19 (global Ppx!)) x/1873) x/1873)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1871))
  (let
    (debug/1874 =
       (function proc/1876 lst/1877 : int
         (let
           (result/1878 =
              (apply (field 18 (global Stdlib__List!)) proc/1876 lst/1877))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1942 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1942))))
               result/1878)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1874))
  (let
    (transform/1943 =
       (function x/1945
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1945)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1945)
           x/1945)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1943))
  (let
    (*match*/5112 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)

[
  structure_item (src/ppx.ml[1,0+0]..[1,0+11])
    Pstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..[1,0+11])
      Pmod_ident "Ppxlib" (src/ppx.ml[1,0+5]..[1,0+11])
  structure_item (src/ppx.ml[6,118+0]..[8,217+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..[6,118+14])
          Ppat_var "printdesc2" (src/ppx.ml[6,118+4]..[6,118+14])
        expression (src/ppx.ml[6,118+14]..[8,217+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[6,118+14]..[6,118+38])
            Ppat_constraint
            pattern (src/ppx.ml[6,118+15]..[6,118+16])
              Ppat_var "x" (src/ppx.ml[6,118+15]..[6,118+16])
            core_type (src/ppx.ml[6,118+18]..[6,118+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[6,118+18]..[6,118+37])
              []
          expression (src/ppx.ml[6,118+39]..[8,217+4])
            Pexp_constraint
            expression (src/ppx.ml[7,165+2]..[8,217+4])
              Pexp_sequence
              expression (src/ppx.ml[7,165+2]..[7,165+50])
                Pexp_apply
                expression (src/ppx.ml[7,165+3]..[7,165+16])
                  Pexp_ident "print_endline" (src/ppx.ml[7,165+3]..[7,165+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[7,165+17]..[7,165+49])
                      Pexp_apply
                      expression (src/ppx.ml[7,165+18]..[7,165+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[7,165+18]..[7,165+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[7,165+33]..[7,165+48])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[7,165+34]..[7,165+44])
                                Pexp_constant PConst_string("DEBUG21:",(src/ppx.ml[7,165+35]..[7,165+43]),None)
                              expression (src/ppx.ml[7,165+46]..[7,165+47])
                                Pexp_ident "x" (src/ppx.ml[7,165+46]..[7,165+47])
                            ]
                      ]
                ]
              expression (src/ppx.ml[8,217+2]..[8,217+4])
                Pexp_construct "()" (src/ppx.ml[8,217+2]..[8,217+4])
                None
            core_type (src/ppx.ml[6,118+40]..[6,118+44])
              Ptyp_constr "unit" (src/ppx.ml[6,118+40]..[6,118+44])
              []
    ]
  structure_item (src/ppx.ml[10,223+0]..[17,366+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..[10,223+12])
          Ppat_var "printone" (src/ppx.ml[10,223+4]..[10,223+12])
        expression (src/ppx.ml[10,223+13]..[17,366+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[10,223+13]..[10,223+34])
            Ppat_constraint
            pattern (src/ppx.ml[10,223+14]..[10,223+15])
              Ppat_var "x" (src/ppx.ml[10,223+14]..[10,223+15])
            core_type (src/ppx.ml[10,223+18]..[10,223+32])
              Ptyp_constr "structure_item" (src/ppx.ml[10,223+18]..[10,223+32])
              []
          expression (src/ppx.ml[10,223+35]..[17,366+6])
            Pexp_constraint
            expression (src/ppx.ml[11,266+2]..[17,366+6])
              Pexp_match
              expression (src/ppx.ml[11,266+8]..[11,266+9])
                Pexp_ident "x" (src/ppx.ml[11,266+8]..[11,266+9])
              [
                <case>
                  pattern (src/ppx.ml[12,281+3]..[15,331+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13]) ghost
                        pattern (src/ppx.ml[13,286+4]..[13,286+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[13,286+4]..[13,286+13])
                    ]
                  expression (src/ppx.ml[16,338+4]..[17,366+6])
                    Pexp_sequence
                    expression (src/ppx.ml[16,338+4]..[16,338+26])
                      Pexp_apply
                      expression (src/ppx.ml[16,338+5]..[16,338+15])
                        Pexp_ident "printdesc2" (src/ppx.ml[16,338+5]..[16,338+15])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[16,338+16]..[16,338+25])
                            Pexp_ident "pstr_desc" (src/ppx.ml[16,338+16]..[16,338+25])
                      ]
                    expression (src/ppx.ml[17,366+4]..[17,366+6])
                      Pexp_construct "()" (src/ppx.ml[17,366+4]..[17,366+6])
                      None
              ]
            core_type (src/ppx.ml[10,223+36]..[10,223+40])
              Ptyp_constr "unit" (src/ppx.ml[10,223+36]..[10,223+40])
              []
    ]
  structure_item (src/ppx.ml[20,381+0]..[22,455+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..[20,381+13])
          Ppat_var "printone2" (src/ppx.ml[20,381+4]..[20,381+13])
        expression (src/ppx.ml[20,381+14]..[22,455+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[20,381+14]..[20,381+15])
            Ppat_var "x" (src/ppx.ml[20,381+14]..[20,381+15])
          expression (src/ppx.ml[20,381+16]..[22,455+12])
            Pexp_constraint
            expression (src/ppx.ml[21,405+2]..[22,455+12])
              Pexp_sequence
              expression (src/ppx.ml[21,405+2]..[21,405+48])
                Pexp_apply
                expression (src/ppx.ml[21,405+3]..[21,405+16])
                  Pexp_ident "print_endline" (src/ppx.ml[21,405+3]..[21,405+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[21,405+17]..[21,405+47])
                      Pexp_apply
                      expression (src/ppx.ml[21,405+18]..[21,405+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[21,405+18]..[21,405+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[21,405+33]..[21,405+46])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[21,405+34]..[21,405+43])
                                Pexp_constant PConst_string("DEBUG1:",(src/ppx.ml[21,405+35]..[21,405+42]),None)
                              expression (src/ppx.ml[21,405+44]..[21,405+45])
                                Pexp_ident "x" (src/ppx.ml[21,405+44]..[21,405+45])
                            ]
                      ]
                ]
              expression (src/ppx.ml[22,455+2]..[22,455+12])
                Pexp_apply
                expression (src/ppx.ml[22,455+2]..[22,455+10])
                  Pexp_ident "printone" (src/ppx.ml[22,455+2]..[22,455+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[22,455+11]..[22,455+12])
                      Pexp_ident "x" (src/ppx.ml[22,455+11]..[22,455+12])
                ]
            core_type (src/ppx.ml[20,381+17]..[20,381+21])
              Ptyp_constr "unit" (src/ppx.ml[20,381+17]..[20,381+21])
              []
    ]
  structure_item (src/ppx.ml[24,469+0]..[26,506+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..[24,469+9])
          Ppat_var "proc2" (src/ppx.ml[24,469+4]..[24,469+9])
        expression (src/ppx.ml[24,469+10]..[26,506+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[24,469+10]..[24,469+11])
            Ppat_var "x" (src/ppx.ml[24,469+10]..[24,469+11])
          expression (src/ppx.ml[24,469+13]..[26,506+4])
            Pexp_constraint
            expression (src/ppx.ml[25,491+2]..[26,506+4])
              Pexp_sequence
              expression (src/ppx.ml[25,491+2]..[25,491+13])
                Pexp_apply
                expression (src/ppx.ml[25,491+2]..[25,491+11])
                  Pexp_ident "printone2" (src/ppx.ml[25,491+2]..[25,491+11])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[25,491+12]..[25,491+13])
                      Pexp_ident "x" (src/ppx.ml[25,491+12]..[25,491+13])
                ]
              expression (src/ppx.ml[26,506+2]..[26,506+4])
                Pexp_construct "()" (src/ppx.ml[26,506+2]..[26,506+4])
                None
            core_type (src/ppx.ml[24,469+15]..[24,469+19])
              Ptyp_constr "unit" (src/ppx.ml[24,469+15]..[24,469+19])
              []
    ]
  structure_item (src/ppx.ml[28,512+0]..[29,559+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..[28,512+14])
          Ppat_var "printdesc2" (src/ppx.ml[28,512+4]..[28,512+14])
        expression (src/ppx.ml[28,512+14]..[29,559+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[28,512+14]..[28,512+38])
            Ppat_constraint
            pattern (src/ppx.ml[28,512+15]..[28,512+16])
              Ppat_var "x" (src/ppx.ml[28,512+15]..[28,512+16])
            core_type (src/ppx.ml[28,512+18]..[28,512+37])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[28,512+18]..[28,512+37])
              []
          expression (src/ppx.ml[28,512+39]..[29,559+50])
            Pexp_constraint
            expression (src/ppx.ml[29,559+2]..[29,559+50])
              Pexp_apply
              expression (src/ppx.ml[29,559+3]..[29,559+16])
                Pexp_ident "print_endline" (src/ppx.ml[29,559+3]..[29,559+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[29,559+17]..[29,559+49])
                    Pexp_apply
                    expression (src/ppx.ml[29,559+18]..[29,559+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[29,559+18]..[29,559+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[29,559+33]..[29,559+48])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[29,559+34]..[29,559+44])
                              Pexp_constant PConst_string("DEBUG33:",(src/ppx.ml[29,559+35]..[29,559+43]),None)
                            expression (src/ppx.ml[29,559+46]..[29,559+47])
                              Pexp_ident "x" (src/ppx.ml[29,559+46]..[29,559+47])
                          ]
                    ]
              ]
            core_type (src/ppx.ml[28,512+40]..[28,512+44])
              Ptyp_constr "unit" (src/ppx.ml[28,512+40]..[28,512+44])
              []
    ]
  structure_item (src/ppx.ml[35,699+0]..[45,1105+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..[35,699+28])
          Ppat_var "print_value_binding_expr" (src/ppx.ml[35,699+4]..[35,699+28])
        expression (src/ppx.ml[35,699+29]..[45,1105+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[35,699+29]..[35,699+45])
            Ppat_constraint
            pattern (src/ppx.ml[35,699+30]..[35,699+31])
              Ppat_var "x" (src/ppx.ml[35,699+30]..[35,699+31])
            core_type (src/ppx.ml[35,699+34]..[35,699+44])
              Ptyp_constr "expression" (src/ppx.ml[35,699+34]..[35,699+44])
              []
          expression (src/ppx.ml[35,699+46]..[45,1105+4])
            Pexp_constraint
            expression (src/ppx.ml[36,753+2]..[45,1105+4])
              Pexp_match
              expression (src/ppx.ml[36,753+8]..[36,753+9])
                Pexp_ident "x" (src/ppx.ml[36,753+8]..[36,753+9])
              [
                <case>
                  pattern (src/ppx.ml[37,768+4]..[42,958+3])
                    Ppat_record Closed
                    [
                      "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13]) ghost
                        pattern (src/ppx.ml[38,774+4]..[38,774+13])
                          Ppat_var "pexp_desc" (src/ppx.ml[38,774+4]..[38,774+13])
                      "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12]) ghost
                        pattern (src/ppx.ml[39,813+4]..[39,813+12])
                          Ppat_var "pexp_loc" (src/ppx.ml[39,813+4]..[39,813+12])
                      "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18]) ghost
                        pattern (src/ppx.ml[40,845+4]..[40,845+18])
                          Ppat_var "pexp_loc_stack" (src/ppx.ml[40,845+4]..[40,845+18])
                      "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19]) ghost
                        pattern (src/ppx.ml[41,888+4]..[41,888+19])
                          Ppat_var "pexp_attributes" (src/ppx.ml[41,888+4]..[41,888+19])
                    ]
                  expression (src/ppx.ml[43,965+4]..[45,1105+4])
                    Pexp_sequence
                    expression (src/ppx.ml[43,965+4]..[43,965+65])
                      Pexp_apply
                      expression (src/ppx.ml[43,965+5]..[43,965+18])
                        Pexp_ident "print_endline" (src/ppx.ml[43,965+5]..[43,965+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[43,965+19]..[43,965+64])
                            Pexp_apply
                            expression (src/ppx.ml[43,965+20]..[43,965+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[43,965+20]..[43,965+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[43,965+35]..[43,965+63])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[43,965+36]..[43,965+50])
                                      Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..[43,965+49]),None)
                                    expression (src/ppx.ml[43,965+52]..[43,965+61])
                                      Pexp_ident "pexp_desc" (src/ppx.ml[43,965+52]..[43,965+61])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[44,1032+4]..[45,1105+4])
                      Pexp_sequence
                      expression (src/ppx.ml[44,1032+4]..[44,1032+71])
                        Pexp_apply
                        expression (src/ppx.ml[44,1032+5]..[44,1032+18])
                          Pexp_ident "print_endline" (src/ppx.ml[44,1032+5]..[44,1032+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[44,1032+19]..[44,1032+70])
                              Pexp_apply
                              expression (src/ppx.ml[44,1032+20]..[44,1032+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[44,1032+20]..[44,1032+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[44,1032+35]..[44,1032+69])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[44,1032+36]..[44,1032+50])
                                        Pexp_constant PConst_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..[44,1032+49]),None)
                                      expression (src/ppx.ml[44,1032+52]..[44,1032+67])
                                        Pexp_ident "pexp_attributes" (src/ppx.ml[44,1032+52]..[44,1032+67])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[45,1105+2]..[45,1105+4])
                        Pexp_construct "()" (src/ppx.ml[45,1105+2]..[45,1105+4])
                        None
              ]
            core_type (src/ppx.ml[35,699+48]..[35,699+52])
              Ptyp_constr "unit" (src/ppx.ml[35,699+48]..[35,699+52])
              []
    ]
  structure_item (src/ppx.ml[47,1113+0]..[59,1617+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..[47,1113+29])
          Ppat_var "print_value_binding_list2" (src/ppx.ml[47,1113+4]..[47,1113+29])
        expression (src/ppx.ml[47,1113+30]..[59,1617+75]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[47,1113+30]..[47,1113+49])
            Ppat_constraint
            pattern (src/ppx.ml[47,1113+31]..[47,1113+32])
              Ppat_var "x" (src/ppx.ml[47,1113+31]..[47,1113+32])
            core_type (src/ppx.ml[47,1113+35]..[47,1113+48])
              Ptyp_constr "value_binding" (src/ppx.ml[47,1113+35]..[47,1113+48])
              []
          expression (src/ppx.ml[47,1113+50]..[59,1617+75])
            Pexp_constraint
            expression (src/ppx.ml[48,1171+2]..[59,1617+75])
              Pexp_match
              expression (src/ppx.ml[48,1171+8]..[48,1171+9])
                Pexp_ident "x" (src/ppx.ml[48,1171+8]..[48,1171+9])
              [
                <case>
                  pattern (src/ppx.ml[49,1186+4]..[54,1327+3])
                    Ppat_record Closed
                    [
                      "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11]) ghost
                        pattern (src/ppx.ml[50,1192+4]..[50,1192+11])
                          Ppat_var "pvb_pat" (src/ppx.ml[50,1192+4]..[50,1192+11])
                      "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12]) ghost
                        pattern (src/ppx.ml[51,1222+4]..[51,1222+12])
                          Ppat_var "pvb_expr" (src/ppx.ml[51,1222+4]..[51,1222+12])
                      "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18]) ghost
                        pattern (src/ppx.ml[52,1256+4]..[52,1256+18])
                          Ppat_var "pvb_attributes" (src/ppx.ml[52,1256+4]..[52,1256+18])
                      "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11]) ghost
                        pattern (src/ppx.ml[53,1296+4]..[53,1296+11])
                          Ppat_var "pvb_loc" (src/ppx.ml[53,1296+4]..[53,1296+11])
                    ]
                  expression (src/ppx.ml[55,1334+4]..[59,1617+75])
                    Pexp_sequence
                    expression (src/ppx.ml[55,1334+4]..[55,1334+75])
                      Pexp_apply
                      expression (src/ppx.ml[55,1334+5]..[55,1334+18])
                        Pexp_ident "print_endline" (src/ppx.ml[55,1334+5]..[55,1334+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[55,1334+19]..[55,1334+74])
                            Pexp_apply
                            expression (src/ppx.ml[55,1334+20]..[55,1334+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[55,1334+20]..[55,1334+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[55,1334+35]..[55,1334+73])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[55,1334+36]..[55,1334+62])
                                      Pexp_constant PConst_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..[55,1334+61]),None)
                                    expression (src/ppx.ml[55,1334+64]..[55,1334+71])
                                      Pexp_ident "pvb_pat" (src/ppx.ml[55,1334+64]..[55,1334+71])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[56,1411+4]..[59,1617+75])
                      Pexp_sequence
                      expression (src/ppx.ml[56,1411+4]..[56,1411+77])
                        Pexp_apply
                        expression (src/ppx.ml[56,1411+5]..[56,1411+18])
                          Pexp_ident "print_endline" (src/ppx.ml[56,1411+5]..[56,1411+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[56,1411+19]..[56,1411+76])
                              Pexp_apply
                              expression (src/ppx.ml[56,1411+20]..[56,1411+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[56,1411+20]..[56,1411+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[56,1411+35]..[56,1411+75])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[56,1411+36]..[56,1411+63])
                                        Pexp_constant PConst_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..[56,1411+62]),None)
                                      expression (src/ppx.ml[56,1411+65]..[56,1411+73])
                                        Pexp_ident "pvb_expr" (src/ppx.ml[56,1411+65]..[56,1411+73])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[58,1532+4]..[59,1617+75])
                        Pexp_sequence
                        expression (src/ppx.ml[58,1532+4]..[58,1532+83])
                          Pexp_apply
                          expression (src/ppx.ml[58,1532+5]..[58,1532+18])
                            Pexp_ident "print_endline" (src/ppx.ml[58,1532+5]..[58,1532+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[58,1532+19]..[58,1532+82])
                                Pexp_apply
                                expression (src/ppx.ml[58,1532+20]..[58,1532+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[58,1532+20]..[58,1532+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[58,1532+35]..[58,1532+81])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[58,1532+36]..[58,1532+63])
                                          Pexp_constant PConst_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..[58,1532+62]),None)
                                        expression (src/ppx.ml[58,1532+65]..[58,1532+79])
                                          Pexp_ident "pvb_attributes" (src/ppx.ml[58,1532+65]..[58,1532+79])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[59,1617+4]..[59,1617+75])
                          Pexp_apply
                          expression (src/ppx.ml[59,1617+5]..[59,1617+18])
                            Pexp_ident "print_endline" (src/ppx.ml[59,1617+5]..[59,1617+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[59,1617+19]..[59,1617+74])
                                Pexp_apply
                                expression (src/ppx.ml[59,1617+20]..[59,1617+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[59,1617+20]..[59,1617+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[59,1617+35]..[59,1617+73])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[59,1617+36]..[59,1617+62])
                                          Pexp_constant PConst_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..[59,1617+61]),None)
                                        expression (src/ppx.ml[59,1617+64]..[59,1617+71])
                                          Pexp_ident "pvb_loc" (src/ppx.ml[59,1617+64]..[59,1617+71])
                                      ]
                                ]
                          ]
              ]
            core_type (src/ppx.ml[47,1113+52]..[47,1113+56])
              Ptyp_constr "unit" (src/ppx.ml[47,1113+52]..[47,1113+56])
              []
    ]
  structure_item (src/ppx.ml[61,1694+0]..[67,1871+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..[61,1694+32])
          Ppat_var "print_value_binding_list" (src/ppx.ml[61,1694+8]..[61,1694+32])
        expression (src/ppx.ml[61,1694+33]..[67,1871+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[61,1694+33]..[61,1694+57])
            Ppat_constraint
            pattern (src/ppx.ml[61,1694+34]..[61,1694+35])
              Ppat_var "x" (src/ppx.ml[61,1694+34]..[61,1694+35])
            core_type (src/ppx.ml[61,1694+38]..[61,1694+56])
              Ptyp_constr "list" (src/ppx.ml[61,1694+52]..[61,1694+56])
              [
                core_type (src/ppx.ml[61,1694+38]..[61,1694+51])
                  Ptyp_constr "value_binding" (src/ppx.ml[61,1694+38]..[61,1694+51])
                  []
              ]
          expression (src/ppx.ml[61,1694+58]..[67,1871+6])
            Pexp_constraint
            expression (src/ppx.ml[62,1760+2]..[67,1871+6])
              Pexp_match
              expression (src/ppx.ml[62,1760+8]..[62,1760+9])
                Pexp_ident "x" (src/ppx.ml[62,1760+8]..[62,1760+9])
              [
                <case>
                  pattern (src/ppx.ml[63,1775+4]..[63,1775+6])
                    Ppat_construct "[]" (src/ppx.ml[63,1775+4]..[63,1775+6])
                    None
                  expression (src/ppx.ml[63,1775+10]..[63,1775+12])
                    Pexp_construct "()" (src/ppx.ml[63,1775+10]..[63,1775+12])
                    None
                <case>
                  pattern (src/ppx.ml[64,1788+4]..[64,1788+10])
                    Ppat_construct "::" (src/ppx.ml[64,1788+6]..[64,1788+8])
                    Some
                      []
                      pattern (src/ppx.ml[64,1788+4]..[64,1788+10]) ghost
                        Ppat_tuple
                        [
                          pattern (src/ppx.ml[64,1788+4]..[64,1788+5])
                            Ppat_var "h" (src/ppx.ml[64,1788+4]..[64,1788+5])
                          pattern (src/ppx.ml[64,1788+9]..[64,1788+10])
                            Ppat_var "t" (src/ppx.ml[64,1788+9]..[64,1788+10])
                        ]
                  expression (src/ppx.ml[65,1802+4]..[67,1871+6])
                    Pexp_sequence
                    expression (src/ppx.ml[65,1802+4]..[65,1802+33])
                      Pexp_apply
                      expression (src/ppx.ml[65,1802+5]..[65,1802+30])
                        Pexp_ident "print_value_binding_list2" (src/ppx.ml[65,1802+5]..[65,1802+30])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[65,1802+31]..[65,1802+32])
                            Pexp_ident "h" (src/ppx.ml[65,1802+31]..[65,1802+32])
                      ]
                    expression (src/ppx.ml[66,1837+4]..[67,1871+6])
                      Pexp_sequence
                      expression (src/ppx.ml[66,1837+4]..[66,1837+32])
                        Pexp_apply
                        expression (src/ppx.ml[66,1837+5]..[66,1837+29])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[66,1837+5]..[66,1837+29])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[66,1837+30]..[66,1837+31])
                              Pexp_ident "t" (src/ppx.ml[66,1837+30]..[66,1837+31])
                        ]
                      expression (src/ppx.ml[67,1871+4]..[67,1871+6])
                        Pexp_construct "()" (src/ppx.ml[67,1871+4]..[67,1871+6])
                        None
              ]
            core_type (src/ppx.ml[61,1694+60]..[61,1694+64])
              Ptyp_constr "unit" (src/ppx.ml[61,1694+60]..[61,1694+64])
              []
    ]
  structure_item (src/ppx.ml[69,1879+0]..[73,2009+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..[69,1879+14])
          Ppat_var "process_id" (src/ppx.ml[69,1879+4]..[69,1879+14])
        expression (src/ppx.ml[69,1879+14]..[73,2009+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[69,1879+14]..[69,1879+31])
            Ppat_constraint
            pattern (src/ppx.ml[69,1879+15]..[69,1879+16])
              Ppat_var "x" (src/ppx.ml[69,1879+15]..[69,1879+16])
            core_type (src/ppx.ml[69,1879+17]..[69,1879+30])
              Ptyp_constr "longident_loc" (src/ppx.ml[69,1879+17]..[69,1879+30])
              []
          expression (src/ppx.ml[70,1913+2]..[73,2009+7])
            Pexp_match
            expression (src/ppx.ml[70,1913+8]..[70,1913+9])
              Pexp_ident "x" (src/ppx.ml[70,1913+8]..[70,1913+9])
            [
              <case>
                pattern (src/ppx.ml[71,1928+4]..[71,1928+11])
                  Ppat_record Open
                  [
                    "txt" (src/ppx.ml[71,1928+5]..[71,1928+8]) ghost
                      pattern (src/ppx.ml[71,1928+5]..[71,1928+8])
                        Ppat_var "txt" (src/ppx.ml[71,1928+5]..[71,1928+8])
                  ]
                expression (src/ppx.ml[72,1943+4]..[73,2009+7])
                  Pexp_sequence
                  expression (src/ppx.ml[72,1943+4]..[72,1943+64])
                    Pexp_apply
                    expression (src/ppx.ml[72,1943+5]..[72,1943+18])
                      Pexp_ident "print_endline" (src/ppx.ml[72,1943+5]..[72,1943+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[72,1943+19]..[72,1943+63])
                          Pexp_apply
                          expression (src/ppx.ml[72,1943+20]..[72,1943+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[72,1943+20]..[72,1943+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[72,1943+35]..[72,1943+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[72,1943+36]..[72,1943+55])
                                    Pexp_constant PConst_string("DEBUG:process_id:",(src/ppx.ml[72,1943+37]..[72,1943+54]),None)
                                  expression (src/ppx.ml[72,1943+58]..[72,1943+61])
                                    Pexp_ident "txt" (src/ppx.ml[72,1943+58]..[72,1943+61])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[73,2009+4]..[73,2009+7])
                    Pexp_ident "txt" (src/ppx.ml[73,2009+4]..[73,2009+7])
            ]
    ]
  structure_item (src/ppx.ml[75,2020+0]..[156,4869+29])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[75,2020+8]..[75,2020+27])
          Ppat_var "process_record_kind" (src/ppx.ml[75,2020+8]..[75,2020+27])
        expression (src/ppx.ml[75,2020+27]..[89,2504+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[75,2020+27]..[75,2020+30])
            Ppat_var "x" (src/ppx.ml[75,2020+28]..[75,2020+29])
          expression (src/ppx.ml[76,2053+2]..[89,2504+47])
            Pexp_match
            expression (src/ppx.ml[76,2053+8]..[76,2053+9])
              Pexp_ident "x" (src/ppx.ml[76,2053+8]..[76,2053+9])
            [
              <case>
                pattern (src/ppx.ml[77,2068+4]..[83,2249+4])
                  Ppat_record Closed
                  [
                    "pld_name" (src/ppx.ml[78,2074+5]..[78,2074+13]) ghost
                      pattern (src/ppx.ml[78,2074+5]..[78,2074+13])
                        Ppat_var "pld_name" (src/ppx.ml[78,2074+5]..[78,2074+13])
                    "pld_mutable" (src/ppx.ml[79,2107+5]..[79,2107+16]) ghost
                      pattern (src/ppx.ml[79,2107+5]..[79,2107+16])
                        Ppat_var "pld_mutable" (src/ppx.ml[79,2107+5]..[79,2107+16])
                    "pld_type" (src/ppx.ml[80,2145+5]..[80,2145+13]) ghost
                      pattern (src/ppx.ml[80,2145+5]..[80,2145+13])
                        Ppat_var "pld_type" (src/ppx.ml[80,2145+5]..[80,2145+13])
                    "pld_loc" (src/ppx.ml[81,2177+5]..[81,2177+12]) ghost
                      pattern (src/ppx.ml[81,2177+5]..[81,2177+12])
                        Ppat_var "pld_loc" (src/ppx.ml[81,2177+5]..[81,2177+12])
                    "pld_attributes" (src/ppx.ml[82,2209+5]..[82,2209+19]) ghost
                      pattern (src/ppx.ml[82,2209+5]..[82,2209+19])
                        Ppat_var "pld_attributes" (src/ppx.ml[82,2209+5]..[82,2209+19])
                  ]
                expression (src/ppx.ml[84,2257+4]..[89,2504+47])
                  Pexp_apply
                  expression (src/ppx.ml[84,2257+5]..[84,2257+18])
                    Pexp_ident "print_endline" (src/ppx.ml[84,2257+5]..[84,2257+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[84,2257+19]..[89,2504+46])
                        Pexp_apply
                        expression (src/ppx.ml[84,2257+20]..[84,2257+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[84,2257+20]..[84,2257+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[84,2257+35]..[89,2504+45])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[84,2257+36]..[84,2257+57])
                                  Pexp_constant PConst_string("DEBUG:precord_kind:",(src/ppx.ml[84,2257+37]..[84,2257+56]),None)
                                expression (src/ppx.ml[85,2318+36]..[85,2318+44])
                                  Pexp_ident "pld_name" (src/ppx.ml[85,2318+36]..[85,2318+44])
                                expression (src/ppx.ml[86,2364+36]..[86,2364+45])
                                  Pexp_constant PConst_string("mutable",(src/ppx.ml[86,2364+37]..[86,2364+44]),None)
                                expression (src/ppx.ml[87,2411+36]..[87,2411+47])
                                  Pexp_ident "pld_mutable" (src/ppx.ml[87,2411+36]..[87,2411+47])
                                expression (src/ppx.ml[88,2460+36]..[88,2460+42])
                                  Pexp_constant PConst_string("type",(src/ppx.ml[88,2460+37]..[88,2460+41]),None)
                                expression (src/ppx.ml[89,2504+36]..[89,2504+44])
                                  Pexp_ident "pld_type" (src/ppx.ml[89,2504+36]..[89,2504+44])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[91,2556+0]..[91,2556+22])
          Ppat_var "process_core_type_desc" (src/ppx.ml[91,2556+0]..[91,2556+22])
        expression (src/ppx.ml[91,2556+23]..[130,4187+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[91,2556+23]..[91,2556+24])
            Ppat_var "x" (src/ppx.ml[91,2556+23]..[91,2556+24])
          expression (src/ppx.ml[92,2583+2]..[130,4187+65])
            Pexp_match
            expression (src/ppx.ml[92,2583+8]..[92,2583+9])
              Pexp_ident "x" (src/ppx.ml[92,2583+8]..[92,2583+9])
            [
              <case>
                pattern (src/ppx.ml[93,2598+4]..[93,2598+21])
                  Ppat_construct "Ptyp_constr" (src/ppx.ml[93,2598+4]..[93,2598+15])
                  Some
                    []
                    pattern (src/ppx.ml[93,2598+16]..[93,2598+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[93,2598+17]..[93,2598+18])
                          Ppat_var "a" (src/ppx.ml[93,2598+17]..[93,2598+18])
                        pattern (src/ppx.ml[93,2598+19]..[93,2598+20])
                          Ppat_var "b" (src/ppx.ml[93,2598+19]..[93,2598+20])
                      ]
                expression (src/ppx.ml[95,2669+4]..[97,2735+91])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (src/ppx.ml[95,2669+8]..[95,2669+12])
                        Ppat_var "myid" (src/ppx.ml[95,2669+8]..[95,2669+12])
                      expression (src/ppx.ml[95,2669+15]..[95,2669+29])
                        Pexp_apply
                        expression (src/ppx.ml[95,2669+16]..[95,2669+26])
                          Pexp_ident "process_id" (src/ppx.ml[95,2669+16]..[95,2669+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[95,2669+27]..[95,2669+28])
                              Pexp_ident "a" (src/ppx.ml[95,2669+27]..[95,2669+28])
                        ]
                  ]
                  expression (src/ppx.ml[96,2702+4]..[97,2735+91])
                    Pexp_sequence
                    expression (src/ppx.ml[96,2702+4]..[96,2702+30])
                      Pexp_apply
                      expression (src/ppx.ml[96,2702+5]..[96,2702+27])
                        Pexp_ident "process_core_type_list" (src/ppx.ml[96,2702+5]..[96,2702+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[96,2702+28]..[96,2702+29])
                            Pexp_ident "b" (src/ppx.ml[96,2702+28]..[96,2702+29])
                      ]
                    expression (src/ppx.ml[97,2735+4]..[97,2735+91])
                      Pexp_apply
                      expression (src/ppx.ml[97,2735+5]..[97,2735+18])
                        Pexp_ident "print_endline" (src/ppx.ml[97,2735+5]..[97,2735+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[97,2735+19]..[97,2735+90])
                            Pexp_apply
                            expression (src/ppx.ml[97,2735+20]..[97,2735+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[97,2735+20]..[97,2735+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[97,2735+35]..[97,2735+89])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[97,2735+36]..[97,2735+56])
                                      Pexp_constant PConst_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2735+37]..[97,2735+55]),None)
                                    expression (src/ppx.ml[97,2735+58]..[97,2735+62])
                                      Pexp_constant PConst_string("id",(src/ppx.ml[97,2735+59]..[97,2735+61]),None)
                                    expression (src/ppx.ml[97,2735+63]..[97,2735+64])
                                      Pexp_ident "a" (src/ppx.ml[97,2735+63]..[97,2735+64])
                                    expression (src/ppx.ml[97,2735+66]..[97,2735+73])
                                      Pexp_constant PConst_string("types",(src/ppx.ml[97,2735+67]..[97,2735+72]),None)
                                    expression (src/ppx.ml[97,2735+74]..[97,2735+75])
                                      Pexp_ident "b" (src/ppx.ml[97,2735+74]..[97,2735+75])
                                    expression (src/ppx.ml[97,2735+78]..[97,2735+83])
                                      Pexp_constant PConst_string("id2",(src/ppx.ml[97,2735+79]..[97,2735+82]),None)
                                    expression (src/ppx.ml[97,2735+84]..[97,2735+88])
                                      Pexp_ident "myid" (src/ppx.ml[97,2735+84]..[97,2735+88])
                                  ]
                            ]
                      ]
              <case>
                pattern (src/ppx.ml[99,2828+4]..[99,2828+16])
                  Ppat_construct "Ptyp_tuple" (src/ppx.ml[99,2828+4]..[99,2828+14])
                  Some
                    []
                    pattern (src/ppx.ml[99,2828+15]..[99,2828+16])
                      Ppat_var "a" (src/ppx.ml[99,2828+15]..[99,2828+16])
                expression (src/ppx.ml[101,2876+4]..[101,2876+59])
                  Pexp_apply
                  expression (src/ppx.ml[101,2876+5]..[101,2876+18])
                    Pexp_ident "print_endline" (src/ppx.ml[101,2876+5]..[101,2876+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[101,2876+19]..[101,2876+58])
                        Pexp_apply
                        expression (src/ppx.ml[101,2876+20]..[101,2876+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[101,2876+20]..[101,2876+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[101,2876+35]..[101,2876+57])
                              Pexp_constant PConst_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2876+37]..[101,2876+54]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[104,2955+4]..[104,2955+12])
                  Ppat_construct "Ptyp_any" (src/ppx.ml[104,2955+4]..[104,2955+12])
                  None
                expression (src/ppx.ml[104,2955+17]..[104,2955+69])
                  Pexp_apply
                  expression (src/ppx.ml[104,2955+18]..[104,2955+31])
                    Pexp_ident "print_endline" (src/ppx.ml[104,2955+18]..[104,2955+31])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[104,2955+32]..[104,2955+68])
                        Pexp_apply
                        expression (src/ppx.ml[104,2955+33]..[104,2955+47])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[104,2955+33]..[104,2955+47])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[104,2955+48]..[104,2955+67])
                              Pexp_constant PConst_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2955+50]..[104,2955+65]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[105,3025+4]..[105,3025+17])
                  Ppat_construct "Ptyp_var" (src/ppx.ml[105,3025+4]..[105,3025+12])
                  Some
                    []
                    pattern (src/ppx.ml[105,3025+13]..[105,3025+17])
                      Ppat_var "name" (src/ppx.ml[105,3025+13]..[105,3025+17])
                expression (src/ppx.ml[105,3025+20]..[105,3025+80])
                  Pexp_apply
                  expression (src/ppx.ml[105,3025+21]..[105,3025+34])
                    Pexp_ident "print_endline" (src/ppx.ml[105,3025+21]..[105,3025+34])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[105,3025+35]..[105,3025+79])
                        Pexp_apply
                        expression (src/ppx.ml[105,3025+36]..[105,3025+50])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[105,3025+36]..[105,3025+50])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[105,3025+51]..[105,3025+78])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[105,3025+52]..[105,3025+69])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,3025+53]..[105,3025+68]),None)
                                expression (src/ppx.ml[105,3025+73]..[105,3025+77])
                                  Pexp_ident "name" (src/ppx.ml[105,3025+73]..[105,3025+77])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[106,3106+4]..[106,3106+51])
                  Ppat_construct "Ptyp_arrow" (src/ppx.ml[106,3106+4]..[106,3106+14])
                  Some
                    []
                    pattern (src/ppx.ml[106,3106+15]..[106,3106+51])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[106,3106+16]..[106,3106+25])
                          Ppat_var "arg_label" (src/ppx.ml[106,3106+16]..[106,3106+25])
                        pattern (src/ppx.ml[106,3106+28]..[106,3106+37])
                          Ppat_var "core_type" (src/ppx.ml[106,3106+28]..[106,3106+37])
                        pattern (src/ppx.ml[106,3106+40]..[106,3106+50])
                          Ppat_var "core_type2" (src/ppx.ml[106,3106+40]..[106,3106+50])
                      ]
                expression (src/ppx.ml[107,3161+4]..[107,3161+61])
                  Pexp_apply
                  expression (src/ppx.ml[107,3161+5]..[107,3161+18])
                    Pexp_ident "print_endline" (src/ppx.ml[107,3161+5]..[107,3161+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[107,3161+19]..[107,3161+60])
                        Pexp_apply
                        expression (src/ppx.ml[107,3161+20]..[107,3161+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[107,3161+20]..[107,3161+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[107,3161+35]..[107,3161+59])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3161+37]..[107,3161+56]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[109,3224+4]..[109,3224+21])
                  Ppat_construct "Ptyp_object" (src/ppx.ml[109,3224+4]..[109,3224+15])
                  Some
                    []
                    pattern (src/ppx.ml[109,3224+16]..[109,3224+21])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[109,3224+17]..[109,3224+18])
                          Ppat_var "a" (src/ppx.ml[109,3224+17]..[109,3224+18])
                        pattern (src/ppx.ml[109,3224+19]..[109,3224+20])
                          Ppat_var "b" (src/ppx.ml[109,3224+19]..[109,3224+20])
                      ]
                expression (src/ppx.ml[111,3293+4]..[111,3293+60])
                  Pexp_apply
                  expression (src/ppx.ml[111,3293+5]..[111,3293+18])
                    Pexp_ident "print_endline" (src/ppx.ml[111,3293+5]..[111,3293+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[111,3293+19]..[111,3293+59])
                        Pexp_apply
                        expression (src/ppx.ml[111,3293+20]..[111,3293+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[111,3293+20]..[111,3293+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[111,3293+35]..[111,3293+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3293+37]..[111,3293+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[112,3354+4]..[112,3354+20])
                  Ppat_construct "Ptyp_class" (src/ppx.ml[112,3354+4]..[112,3354+14])
                  Some
                    []
                    pattern (src/ppx.ml[112,3354+15]..[112,3354+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[112,3354+16]..[112,3354+17])
                          Ppat_var "a" (src/ppx.ml[112,3354+16]..[112,3354+17])
                        pattern (src/ppx.ml[112,3354+18]..[112,3354+19])
                          Ppat_var "b" (src/ppx.ml[112,3354+18]..[112,3354+19])
                      ]
                expression (src/ppx.ml[114,3424+4]..[114,3424+60])
                  Pexp_apply
                  expression (src/ppx.ml[114,3424+5]..[114,3424+18])
                    Pexp_ident "print_endline" (src/ppx.ml[114,3424+5]..[114,3424+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[114,3424+19]..[114,3424+59])
                        Pexp_apply
                        expression (src/ppx.ml[114,3424+20]..[114,3424+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[114,3424+20]..[114,3424+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[114,3424+35]..[114,3424+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3424+37]..[114,3424+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[115,3485+4]..[115,3485+20])
                  Ppat_construct "Ptyp_alias" (src/ppx.ml[115,3485+4]..[115,3485+14])
                  Some
                    []
                    pattern (src/ppx.ml[115,3485+15]..[115,3485+20])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[115,3485+16]..[115,3485+17])
                          Ppat_var "a" (src/ppx.ml[115,3485+16]..[115,3485+17])
                        pattern (src/ppx.ml[115,3485+18]..[115,3485+19])
                          Ppat_var "b" (src/ppx.ml[115,3485+18]..[115,3485+19])
                      ]
                expression (src/ppx.ml[117,3546+4]..[117,3546+60])
                  Pexp_apply
                  expression (src/ppx.ml[117,3546+5]..[117,3546+18])
                    Pexp_ident "print_endline" (src/ppx.ml[117,3546+5]..[117,3546+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[117,3546+19]..[117,3546+59])
                        Pexp_apply
                        expression (src/ppx.ml[117,3546+20]..[117,3546+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[117,3546+20]..[117,3546+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[117,3546+35]..[117,3546+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3546+37]..[117,3546+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[118,3607+4]..[118,3607+24])
                  Ppat_construct "Ptyp_variant" (src/ppx.ml[118,3607+4]..[118,3607+16])
                  Some
                    []
                    pattern (src/ppx.ml[118,3607+17]..[118,3607+24])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[118,3607+18]..[118,3607+19])
                          Ppat_var "a" (src/ppx.ml[118,3607+18]..[118,3607+19])
                        pattern (src/ppx.ml[118,3607+20]..[118,3607+21])
                          Ppat_var "b" (src/ppx.ml[118,3607+20]..[118,3607+21])
                        pattern (src/ppx.ml[118,3607+22]..[118,3607+23])
                          Ppat_var "c" (src/ppx.ml[118,3607+22]..[118,3607+23])
                      ]
                expression (src/ppx.ml[120,3697+4]..[120,3697+60])
                  Pexp_apply
                  expression (src/ppx.ml[120,3697+5]..[120,3697+18])
                    Pexp_ident "print_endline" (src/ppx.ml[120,3697+5]..[120,3697+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[120,3697+19]..[120,3697+59])
                        Pexp_apply
                        expression (src/ppx.ml[120,3697+20]..[120,3697+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[120,3697+20]..[120,3697+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[120,3697+35]..[120,3697+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3697+37]..[120,3697+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[121,3758+4]..[121,3758+19])
                  Ppat_construct "Ptyp_poly" (src/ppx.ml[121,3758+4]..[121,3758+13])
                  Some
                    []
                    pattern (src/ppx.ml[121,3758+14]..[121,3758+19])
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[121,3758+15]..[121,3758+16])
                          Ppat_var "a" (src/ppx.ml[121,3758+15]..[121,3758+16])
                        pattern (src/ppx.ml[121,3758+17]..[121,3758+18])
                          Ppat_var "b" (src/ppx.ml[121,3758+17]..[121,3758+18])
                      ]
                expression (src/ppx.ml[123,3822+4]..[123,3822+60])
                  Pexp_apply
                  expression (src/ppx.ml[123,3822+5]..[123,3822+18])
                    Pexp_ident "print_endline" (src/ppx.ml[123,3822+5]..[123,3822+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[123,3822+19]..[123,3822+59])
                        Pexp_apply
                        expression (src/ppx.ml[123,3822+20]..[123,3822+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[123,3822+20]..[123,3822+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[123,3822+35]..[123,3822+58])
                              Pexp_constant PConst_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3822+37]..[123,3822+55]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[124,3883+4]..[124,3883+18])
                  Ppat_construct "Ptyp_package" (src/ppx.ml[124,3883+4]..[124,3883+16])
                  Some
                    []
                    pattern (src/ppx.ml[124,3883+17]..[124,3883+18])
                      Ppat_var "a" (src/ppx.ml[124,3883+17]..[124,3883+18])
                expression (src/ppx.ml[126,3931+4]..[126,3931+62])
                  Pexp_apply
                  expression (src/ppx.ml[126,3931+5]..[126,3931+18])
                    Pexp_ident "print_endline" (src/ppx.ml[126,3931+5]..[126,3931+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[126,3931+19]..[126,3931+61])
                        Pexp_apply
                        expression (src/ppx.ml[126,3931+20]..[126,3931+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[126,3931+20]..[126,3931+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[126,3931+35]..[126,3931+60])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[126,3931+36]..[126,3931+56])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3931+37]..[126,3931+55]),None)
                                expression (src/ppx.ml[126,3931+57]..[126,3931+58])
                                  Pexp_ident "a" (src/ppx.ml[126,3931+57]..[126,3931+58])
                              ]
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[129,4139+4]..[129,4139+20])
                  Ppat_construct "Ptyp_extension" (src/ppx.ml[129,4139+4]..[129,4139+18])
                  Some
                    []
                    pattern (src/ppx.ml[129,4139+19]..[129,4139+20])
                      Ppat_var "a" (src/ppx.ml[129,4139+19]..[129,4139+20])
                expression (src/ppx.ml[130,4187+4]..[130,4187+65])
                  Pexp_apply
                  expression (src/ppx.ml[130,4187+5]..[130,4187+18])
                    Pexp_ident "print_endline" (src/ppx.ml[130,4187+5]..[130,4187+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[130,4187+19]..[130,4187+64])
                        Pexp_apply
                        expression (src/ppx.ml[130,4187+20]..[130,4187+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[130,4187+20]..[130,4187+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[130,4187+35]..[130,4187+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[130,4187+36]..[130,4187+59])
                                  Pexp_constant PConst_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4187+37]..[130,4187+58]),None)
                                expression (src/ppx.ml[130,4187+60]..[130,4187+61])
                                  Pexp_ident "a" (src/ppx.ml[130,4187+60]..[130,4187+61])
                              ]
                        ]
                  ]
            ]
      <def>
        pattern (src/ppx.ml[132,4257+2]..[132,4257+26])
          Ppat_var "process_record_kind_list" (src/ppx.ml[132,4257+2]..[132,4257+26])
        expression (src/ppx.ml[132,4257+26]..[138,4394+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[132,4257+26]..[132,4257+29])
            Ppat_var "x" (src/ppx.ml[132,4257+27]..[132,4257+28])
          expression (src/ppx.ml[133,4289+2]..[138,4394+6])
            Pexp_match
            expression (src/ppx.ml[133,4289+8]..[133,4289+9])
              Pexp_ident "x" (src/ppx.ml[133,4289+8]..[133,4289+9])
            [
              <case>
                pattern (src/ppx.ml[134,4304+4]..[134,4304+6])
                  Ppat_construct "[]" (src/ppx.ml[134,4304+4]..[134,4304+6])
                  None
                expression (src/ppx.ml[134,4304+10]..[134,4304+12])
                  Pexp_construct "()" (src/ppx.ml[134,4304+10]..[134,4304+12])
                  None
              <case>
                pattern (src/ppx.ml[135,4317+4]..[135,4317+10])
                  Ppat_construct "::" (src/ppx.ml[135,4317+6]..[135,4317+8])
                  Some
                    []
                    pattern (src/ppx.ml[135,4317+4]..[135,4317+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[135,4317+4]..[135,4317+5])
                          Ppat_var "h" (src/ppx.ml[135,4317+4]..[135,4317+5])
                        pattern (src/ppx.ml[135,4317+9]..[135,4317+10])
                          Ppat_var "t" (src/ppx.ml[135,4317+9]..[135,4317+10])
                      ]
                expression (src/ppx.ml[136,4331+4]..[138,4394+6])
                  Pexp_sequence
                  expression (src/ppx.ml[136,4331+4]..[136,4331+27])
                    Pexp_apply
                    expression (src/ppx.ml[136,4331+5]..[136,4331+24])
                      Pexp_ident "process_record_kind" (src/ppx.ml[136,4331+5]..[136,4331+24])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[136,4331+25]..[136,4331+26])
                          Pexp_ident "h" (src/ppx.ml[136,4331+25]..[136,4331+26])
                    ]
                  expression (src/ppx.ml[137,4360+4]..[138,4394+6])
                    Pexp_sequence
                    expression (src/ppx.ml[137,4360+4]..[137,4360+32])
                      Pexp_apply
                      expression (src/ppx.ml[137,4360+5]..[137,4360+29])
                        Pexp_ident "process_record_kind_list" (src/ppx.ml[137,4360+5]..[137,4360+29])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[137,4360+30]..[137,4360+31])
                            Pexp_ident "t" (src/ppx.ml[137,4360+30]..[137,4360+31])
                      ]
                    expression (src/ppx.ml[138,4394+4]..[138,4394+6])
                      Pexp_construct "()" (src/ppx.ml[138,4394+4]..[138,4394+6])
                      None
            ]
      <def>
        pattern (src/ppx.ml[140,4405+0]..[140,4405+17])
          Ppat_var "process_core_type" (src/ppx.ml[140,4405+0]..[140,4405+17])
        expression (src/ppx.ml[140,4405+17]..[150,4672+80]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[140,4405+17]..[140,4405+20])
            Ppat_var "x" (src/ppx.ml[140,4405+18]..[140,4405+19])
          expression (src/ppx.ml[141,4428+2]..[150,4672+80])
            Pexp_match
            expression (src/ppx.ml[141,4428+8]..[141,4428+9])
              Pexp_ident "x" (src/ppx.ml[141,4428+8]..[141,4428+9])
            [
              <case>
                pattern (src/ppx.ml[142,4444+4]..[147,4605+5])
                  Ppat_record Closed
                  [
                    "ptyp_desc" (src/ppx.ml[143,4450+6]..[143,4450+15]) ghost
                      pattern (src/ppx.ml[143,4450+6]..[143,4450+15])
                        Ppat_var "ptyp_desc" (src/ppx.ml[143,4450+6]..[143,4450+15])
                    "ptyp_loc" (src/ppx.ml[144,4489+5]..[144,4489+13]) ghost
                      pattern (src/ppx.ml[144,4489+5]..[144,4489+13])
                        Ppat_var "ptyp_loc" (src/ppx.ml[144,4489+5]..[144,4489+13])
                    "ptyp_loc_stack" (src/ppx.ml[145,4522+5]..[145,4522+19]) ghost
                      pattern (src/ppx.ml[145,4522+5]..[145,4522+19])
                        Ppat_var "ptyp_loc_stack" (src/ppx.ml[145,4522+5]..[145,4522+19])
                    "ptyp_attributes" (src/ppx.ml[146,4565+5]..[146,4565+20]) ghost
                      pattern (src/ppx.ml[146,4565+5]..[146,4565+20])
                        Ppat_var "ptyp_attributes" (src/ppx.ml[146,4565+5]..[146,4565+20])
                  ]
                expression (src/ppx.ml[148,4613+4]..[150,4672+80])
                  Pexp_sequence
                  expression (src/ppx.ml[148,4613+4]..[148,4613+38])
                    Pexp_apply
                    expression (src/ppx.ml[148,4613+5]..[148,4613+27])
                      Pexp_ident "process_core_type_desc" (src/ppx.ml[148,4613+5]..[148,4613+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[148,4613+28]..[148,4613+37])
                          Pexp_ident "ptyp_desc" (src/ppx.ml[148,4613+28]..[148,4613+37])
                    ]
                  expression (src/ppx.ml[150,4672+4]..[150,4672+80])
                    Pexp_apply
                    expression (src/ppx.ml[150,4672+5]..[150,4672+18])
                      Pexp_ident "print_endline" (src/ppx.ml[150,4672+5]..[150,4672+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[150,4672+19]..[150,4672+79])
                          Pexp_apply
                          expression (src/ppx.ml[150,4672+20]..[150,4672+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[150,4672+20]..[150,4672+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[150,4672+35]..[150,4672+78])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[150,4672+36]..[150,4672+64])
                                    Pexp_constant PConst_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4672+37]..[150,4672+63]),None)
                                  expression (src/ppx.ml[150,4672+68]..[150,4672+77])
                                    Pexp_ident "ptyp_desc" (src/ppx.ml[150,4672+68]..[150,4672+77])
                                ]
                          ]
                    ]
            ]
      <def>
        pattern (src/ppx.ml[151,4753+4]..[151,4753+26])
          Ppat_var "process_core_type_list" (src/ppx.ml[151,4753+4]..[151,4753+26])
        expression (src/ppx.ml[151,4753+26]..[156,4869+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[151,4753+26]..[151,4753+44])
            Ppat_constraint
            pattern (src/ppx.ml[151,4753+27]..[151,4753+28])
              Ppat_var "x" (src/ppx.ml[151,4753+27]..[151,4753+28])
            core_type (src/ppx.ml[151,4753+29]..[151,4753+43])
              Ptyp_constr "list" (src/ppx.ml[151,4753+39]..[151,4753+43])
              [
                core_type (src/ppx.ml[151,4753+29]..[151,4753+38])
                  Ptyp_constr "core_type" (src/ppx.ml[151,4753+29]..[151,4753+38])
                  []
              ]
          expression (src/ppx.ml[152,4800+2]..[156,4869+29])
            Pexp_match
            expression (src/ppx.ml[152,4800+8]..[152,4800+9])
              Pexp_ident "x" (src/ppx.ml[152,4800+8]..[152,4800+9])
            [
              <case>
                pattern (src/ppx.ml[153,4815+4]..[153,4815+6])
                  Ppat_construct "[]" (src/ppx.ml[153,4815+4]..[153,4815+6])
                  None
                expression (src/ppx.ml[153,4815+10]..[153,4815+12])
                  Pexp_construct "()" (src/ppx.ml[153,4815+10]..[153,4815+12])
                  None
              <case>
                pattern (src/ppx.ml[154,4828+4]..[154,4828+10])
                  Ppat_construct "::" (src/ppx.ml[154,4828+6]..[154,4828+8])
                  Some
                    []
                    pattern (src/ppx.ml[154,4828+4]..[154,4828+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[154,4828+4]..[154,4828+5])
                          Ppat_var "h" (src/ppx.ml[154,4828+4]..[154,4828+5])
                        pattern (src/ppx.ml[154,4828+9]..[154,4828+10])
                          Ppat_var "t" (src/ppx.ml[154,4828+9]..[154,4828+10])
                      ]
                expression (src/ppx.ml[155,4842+4]..[156,4869+29])
                  Pexp_sequence
                  expression (src/ppx.ml[155,4842+4]..[155,4842+25])
                    Pexp_apply
                    expression (src/ppx.ml[155,4842+4]..[155,4842+21])
                      Pexp_ident "process_core_type" (src/ppx.ml[155,4842+4]..[155,4842+21])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[155,4842+22]..[155,4842+25])
                          Pexp_ident "h" (src/ppx.ml[155,4842+23]..[155,4842+24])
                    ]
                  expression (src/ppx.ml[156,4869+4]..[156,4869+29])
                    Pexp_apply
                    expression (src/ppx.ml[156,4869+4]..[156,4869+26])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[156,4869+4]..[156,4869+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[156,4869+26]..[156,4869+29])
                          Pexp_ident "t" (src/ppx.ml[156,4869+27]..[156,4869+28])
                    ]
            ]
    ]
  structure_item (src/ppx.ml[163,4913+0]..[170,5112+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4913+4]..[163,4913+31])
          Ppat_var "print_constructor_arguments" (src/ppx.ml[163,4913+4]..[163,4913+31])
        expression (src/ppx.ml[163,4913+31]..[170,5112+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[163,4913+31]..[163,4913+34])
            Ppat_var "x" (src/ppx.ml[163,4913+32]..[163,4913+33])
          expression (src/ppx.ml[164,4950+2]..[170,5112+65])
            Pexp_match
            expression (src/ppx.ml[164,4950+8]..[164,4950+9])
              Pexp_ident "x" (src/ppx.ml[164,4950+8]..[164,4950+9])
            [
              <case>
                pattern (src/ppx.ml[165,4965+4]..[165,4965+17])
                  Ppat_construct "Pcstr_tuple" (src/ppx.ml[165,4965+4]..[165,4965+15])
                  Some
                    []
                    pattern (src/ppx.ml[165,4965+16]..[165,4965+17])
                      Ppat_var "a" (src/ppx.ml[165,4965+16]..[165,4965+17])
                expression (src/ppx.ml[166,4986+4]..[167,5018+64])
                  Pexp_sequence
                  expression (src/ppx.ml[166,4986+4]..[166,4986+30])
                    Pexp_apply
                    expression (src/ppx.ml[166,4986+5]..[166,4986+27])
                      Pexp_ident "process_core_type_list" (src/ppx.ml[166,4986+5]..[166,4986+27])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[166,4986+28]..[166,4986+29])
                          Pexp_ident "a" (src/ppx.ml[166,4986+28]..[166,4986+29])
                    ]
                  expression (src/ppx.ml[167,5018+4]..[167,5018+64])
                    Pexp_apply
                    expression (src/ppx.ml[167,5018+5]..[167,5018+18])
                      Pexp_ident "print_endline" (src/ppx.ml[167,5018+5]..[167,5018+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[167,5018+19]..[167,5018+63])
                          Pexp_apply
                          expression (src/ppx.ml[167,5018+20]..[167,5018+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[167,5018+20]..[167,5018+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[167,5018+35]..[167,5018+62])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[167,5018+36]..[167,5018+56])
                                    Pexp_constant PConst_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,5018+37]..[167,5018+55]),None)
                                  expression (src/ppx.ml[167,5018+60]..[167,5018+61])
                                    Pexp_ident "a" (src/ppx.ml[167,5018+60]..[167,5018+61])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[169,5090+4]..[169,5090+18])
                  Ppat_construct "Pcstr_record" (src/ppx.ml[169,5090+4]..[169,5090+16])
                  Some
                    []
                    pattern (src/ppx.ml[169,5090+17]..[169,5090+18])
                      Ppat_var "a" (src/ppx.ml[169,5090+17]..[169,5090+18])
                expression (src/ppx.ml[170,5112+4]..[170,5112+65])
                  Pexp_apply
                  expression (src/ppx.ml[170,5112+5]..[170,5112+18])
                    Pexp_ident "print_endline" (src/ppx.ml[170,5112+5]..[170,5112+18])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[170,5112+19]..[170,5112+64])
                        Pexp_apply
                        expression (src/ppx.ml[170,5112+20]..[170,5112+34])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[170,5112+20]..[170,5112+34])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[170,5112+35]..[170,5112+63])
                              Pexp_tuple
                              [
                                expression (src/ppx.ml[170,5112+36]..[170,5112+57])
                                  Pexp_constant PConst_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5112+37]..[170,5112+56]),None)
                                expression (src/ppx.ml[170,5112+61]..[170,5112+62])
                                  Pexp_ident "a" (src/ppx.ml[170,5112+61]..[170,5112+62])
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[172,5179+0]..[204,6155+8])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5179+8]..[172,5179+57])
          Ppat_var "process_pype_variant_constructor_declaration_list" (src/ppx.ml[172,5179+8]..[172,5179+57])
        expression (src/ppx.ml[172,5179+57]..[204,6155+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[172,5179+57]..[172,5179+60])
            Ppat_var "x" (src/ppx.ml[172,5179+58]..[172,5179+59])
          expression (src/ppx.ml[173,5242+2]..[204,6155+8])
            Pexp_match
            expression (src/ppx.ml[173,5242+8]..[173,5242+9])
              Pexp_ident "x" (src/ppx.ml[173,5242+8]..[173,5242+9])
            [
              <case>
                pattern (src/ppx.ml[174,5257+4]..[174,5257+6])
                  Ppat_construct "[]" (src/ppx.ml[174,5257+4]..[174,5257+6])
                  None
                expression (src/ppx.ml[174,5257+10]..[174,5257+12])
                  Pexp_construct "()" (src/ppx.ml[174,5257+10]..[174,5257+12])
                  None
              <case>
                pattern (src/ppx.ml[175,5270+4]..[175,5270+10])
                  Ppat_construct "::" (src/ppx.ml[175,5270+6]..[175,5270+8])
                  Some
                    []
                    pattern (src/ppx.ml[175,5270+4]..[175,5270+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[175,5270+4]..[175,5270+5])
                          Ppat_var "h" (src/ppx.ml[175,5270+4]..[175,5270+5])
                        pattern (src/ppx.ml[175,5270+9]..[175,5270+10])
                          Ppat_var "t" (src/ppx.ml[175,5270+9]..[175,5270+10])
                      ]
                expression (src/ppx.ml[177,5349+4]..[204,6155+8])
                  Pexp_match
                  expression (src/ppx.ml[177,5349+10]..[177,5349+11])
                    Pexp_ident "h" (src/ppx.ml[177,5349+10]..[177,5349+11])
                  [
                    <case>
                      pattern (src/ppx.ml[178,5366+5]..[185,5604+5])
                        Ppat_record Closed
                        [
                          "pcd_name" (src/ppx.ml[179,5373+6]..[179,5373+14]) ghost
                            pattern (src/ppx.ml[179,5373+6]..[179,5373+14])
                              Ppat_var "pcd_name" (src/ppx.ml[179,5373+6]..[179,5373+14])
                          "pcd_vars" (src/ppx.ml[180,5407+6]..[180,5407+14]) ghost
                            pattern (src/ppx.ml[180,5407+6]..[180,5407+14])
                              Ppat_var "pcd_vars" (src/ppx.ml[180,5407+6]..[180,5407+14])
                          "pcd_args" (src/ppx.ml[181,5446+6]..[181,5446+14]) ghost
                            pattern (src/ppx.ml[181,5446+6]..[181,5446+14])
                              Ppat_var "pcd_args" (src/ppx.ml[181,5446+6]..[181,5446+14])
                          "pcd_res" (src/ppx.ml[182,5491+6]..[182,5491+13]) ghost
                            pattern (src/ppx.ml[182,5491+6]..[182,5491+13])
                              Ppat_var "pcd_res" (src/ppx.ml[182,5491+6]..[182,5491+13])
                          "pcd_loc" (src/ppx.ml[183,5530+6]..[183,5530+13]) ghost
                            pattern (src/ppx.ml[183,5530+6]..[183,5530+13])
                              Ppat_var "pcd_loc" (src/ppx.ml[183,5530+6]..[183,5530+13])
                          "pcd_attributes" (src/ppx.ml[184,5563+6]..[184,5563+20]) ghost
                            pattern (src/ppx.ml[184,5563+6]..[184,5563+20])
                              Ppat_var "pcd_attributes" (src/ppx.ml[184,5563+6]..[184,5563+20])
                        ]
                      expression (src/ppx.ml[188,5686+6]..[204,6155+8])
                        Pexp_sequence
                        expression (src/ppx.ml[188,5686+6]..[188,5686+43])
                          Pexp_apply
                          expression (src/ppx.ml[188,5686+6]..[188,5686+33])
                            Pexp_ident "print_constructor_arguments" (src/ppx.ml[188,5686+6]..[188,5686+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[188,5686+33]..[188,5686+43])
                                Pexp_ident "pcd_args" (src/ppx.ml[188,5686+34]..[188,5686+42])
                          ]
                        expression (src/ppx.ml[189,5731+6]..[204,6155+8])
                          Pexp_sequence
                          expression (src/ppx.ml[189,5731+6]..[202,6076+16])
                            Pexp_apply
                            expression (src/ppx.ml[189,5731+7]..[189,5731+20])
                              Pexp_ident "print_endline" (src/ppx.ml[189,5731+7]..[189,5731+20])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[189,5731+21]..[202,6076+15])
                                  Pexp_apply
                                  expression (src/ppx.ml[189,5731+22]..[189,5731+36])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[189,5731+22]..[189,5731+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[189,5731+37]..[202,6076+14])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[190,5770+11]..[190,5770+37])
                                            Pexp_constant PConst_string("constructor_declaration:",(src/ppx.ml[190,5770+12]..[190,5770+36]),None)
                                          expression (src/ppx.ml[191,5809+15]..[191,5809+23])
                                            Pexp_ident "pcd_name" (src/ppx.ml[191,5809+15]..[191,5809+23])
                                          expression (src/ppx.ml[192,5834+15]..[192,5834+21])
                                            Pexp_constant PConst_string("vars",(src/ppx.ml[192,5834+16]..[192,5834+20]),None)
                                          expression (src/ppx.ml[193,5857+15]..[193,5857+23])
                                            Pexp_ident "pcd_vars" (src/ppx.ml[193,5857+15]..[193,5857+23])
                                          expression (src/ppx.ml[194,5882+15]..[194,5882+21])
                                            Pexp_constant PConst_string("args",(src/ppx.ml[194,5882+16]..[194,5882+20]),None)
                                          expression (src/ppx.ml[195,5905+15]..[195,5905+23])
                                            Pexp_ident "pcd_args" (src/ppx.ml[195,5905+15]..[195,5905+23])
                                          expression (src/ppx.ml[196,5930+15]..[196,5930+20])
                                            Pexp_constant PConst_string("res",(src/ppx.ml[196,5930+16]..[196,5930+19]),None)
                                          expression (src/ppx.ml[197,5952+15]..[197,5952+22])
                                            Pexp_ident "pcd_res" (src/ppx.ml[197,5952+15]..[197,5952+22])
                                          expression (src/ppx.ml[198,5976+15]..[198,5976+20])
                                            Pexp_constant PConst_string("loc",(src/ppx.ml[198,5976+16]..[198,5976+19]),None)
                                          expression (src/ppx.ml[199,5998+15]..[199,5998+22])
                                            Pexp_ident "pcd_loc" (src/ppx.ml[199,5998+15]..[199,5998+22])
                                          expression (src/ppx.ml[200,6022+15]..[200,6022+22])
                                            Pexp_constant PConst_string("attrs",(src/ppx.ml[200,6022+16]..[200,6022+21]),None)
                                          expression (src/ppx.ml[201,6046+15]..[201,6046+29])
                                            Pexp_ident "pcd_attributes" (src/ppx.ml[201,6046+15]..[201,6046+29])
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[203,6094+6]..[204,6155+8])
                            Pexp_sequence
                            expression (src/ppx.ml[203,6094+6]..[203,6094+59])
                              Pexp_apply
                              expression (src/ppx.ml[203,6094+7]..[203,6094+56])
                                Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[203,6094+7]..[203,6094+56])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[203,6094+57]..[203,6094+58])
                                    Pexp_ident "t" (src/ppx.ml[203,6094+57]..[203,6094+58])
                              ]
                            expression (src/ppx.ml[204,6155+6]..[204,6155+8])
                              Pexp_construct "()" (src/ppx.ml[204,6155+6]..[204,6155+8])
                              None
                  ]
            ]
    ]
  structure_item (src/ppx.ml[206,6167+0]..[217,6564+77])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6167+4]..[206,6167+16])
          Ppat_var "process_kind" (src/ppx.ml[206,6167+4]..[206,6167+16])
        expression (src/ppx.ml[206,6167+16]..[217,6564+77]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[206,6167+16]..[206,6167+19])
            Ppat_var "x" (src/ppx.ml[206,6167+17]..[206,6167+18])
          expression (src/ppx.ml[207,6189+2]..[217,6564+77])
            Pexp_match
            expression (src/ppx.ml[207,6189+8]..[207,6189+9])
              Pexp_ident "x" (src/ppx.ml[207,6189+8]..[207,6189+9])
            [
              <case>
                pattern (src/ppx.ml[209,6226+4]..[209,6226+18])
                  Ppat_construct "Ptype_abstract" (src/ppx.ml[209,6226+4]..[209,6226+18])
                  None
                expression (src/ppx.ml[209,6226+23]..[209,6226+81])
                  Pexp_apply
                  expression (src/ppx.ml[209,6226+24]..[209,6226+37])
                    Pexp_ident "print_endline" (src/ppx.ml[209,6226+24]..[209,6226+37])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[209,6226+38]..[209,6226+80])
                        Pexp_apply
                        expression (src/ppx.ml[209,6226+39]..[209,6226+53])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[209,6226+39]..[209,6226+53])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[209,6226+54]..[209,6226+79])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6226+56]..[209,6226+77]),None)
                        ]
                  ]
              <case>
                pattern (src/ppx.ml[210,6308+4]..[210,6308+19])
                  Ppat_construct "Ptype_variant" (src/ppx.ml[210,6308+4]..[210,6308+17])
                  Some
                    []
                    pattern (src/ppx.ml[210,6308+18]..[210,6308+19])
                      Ppat_var "a" (src/ppx.ml[210,6308+18]..[210,6308+19])
                expression (src/ppx.ml[211,6331+4]..[212,6390+65])
                  Pexp_sequence
                  expression (src/ppx.ml[211,6331+4]..[211,6331+57])
                    Pexp_apply
                    expression (src/ppx.ml[211,6331+5]..[211,6331+54])
                      Pexp_ident "process_pype_variant_constructor_declaration_list" (src/ppx.ml[211,6331+5]..[211,6331+54])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[211,6331+55]..[211,6331+56])
                          Pexp_ident "a" (src/ppx.ml[211,6331+55]..[211,6331+56])
                    ]
                  expression (src/ppx.ml[212,6390+4]..[212,6390+65])
                    Pexp_apply
                    expression (src/ppx.ml[212,6390+5]..[212,6390+18])
                      Pexp_ident "print_endline" (src/ppx.ml[212,6390+5]..[212,6390+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[212,6390+19]..[212,6390+64])
                          Pexp_apply
                          expression (src/ppx.ml[212,6390+20]..[212,6390+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[212,6390+20]..[212,6390+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[212,6390+35]..[212,6390+63])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[212,6390+36]..[212,6390+58])
                                    Pexp_constant PConst_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6390+37]..[212,6390+57]),None)
                                  expression (src/ppx.ml[212,6390+61]..[212,6390+62])
                                    Pexp_ident "a" (src/ppx.ml[212,6390+61]..[212,6390+62])
                                ]
                          ]
                    ]
              <case>
                pattern (src/ppx.ml[215,6503+5]..[215,6503+19])
                  Ppat_construct "Ptype_record" (src/ppx.ml[215,6503+5]..[215,6503+17])
                  Some
                    []
                    pattern (src/ppx.ml[215,6503+18]..[215,6503+19])
                      Ppat_var "a" (src/ppx.ml[215,6503+18]..[215,6503+19])
                expression (src/ppx.ml[216,6531+5]..[216,6531+32])
                  Pexp_apply
                  expression (src/ppx.ml[216,6531+5]..[216,6531+29])
                    Pexp_ident "process_record_kind_list" (src/ppx.ml[216,6531+5]..[216,6531+29])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[216,6531+29]..[216,6531+32])
                        Pexp_ident "a" (src/ppx.ml[216,6531+30]..[216,6531+31])
                  ]
              <case>
                pattern (src/ppx.ml[217,6564+5]..[217,6564+15])
                  Ppat_construct "Ptype_open" (src/ppx.ml[217,6564+5]..[217,6564+15])
                  None
                expression (src/ppx.ml[217,6564+19]..[217,6564+77])
                  Pexp_apply
                  expression (src/ppx.ml[217,6564+20]..[217,6564+33])
                    Pexp_ident "print_endline" (src/ppx.ml[217,6564+20]..[217,6564+33])
                  [
                    <arg>
                    Nolabel
                      expression (src/ppx.ml[217,6564+34]..[217,6564+76])
                        Pexp_apply
                        expression (src/ppx.ml[217,6564+35]..[217,6564+49])
                          Pexp_ident "Batteries.dump" (src/ppx.ml[217,6564+35]..[217,6564+49])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[217,6564+50]..[217,6564+75])
                              Pexp_constant PConst_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6564+52]..[217,6564+73]),None)
                        ]
                  ]
            ]
    ]
  structure_item (src/ppx.ml[219,6643+0]..[240,7649+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6643+4]..[219,6643+19])
          Ppat_var "print_type_decl" (src/ppx.ml[219,6643+4]..[219,6643+19])
        expression (src/ppx.ml[219,6643+19]..[240,7649+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[219,6643+19]..[219,6643+22])
            Ppat_var "x" (src/ppx.ml[219,6643+20]..[219,6643+21])
          expression (src/ppx.ml[220,6668+2]..[240,7649+38])
            Pexp_match
            expression (src/ppx.ml[220,6668+8]..[220,6668+9])
              Pexp_ident "x" (src/ppx.ml[220,6668+8]..[220,6668+9])
            [
              <case>
                pattern (src/ppx.ml[221,6683+4]..[230,7064+5])
                  Ppat_record Closed
                  [
                    "ptype_name" (src/ppx.ml[222,6689+6]..[222,6689+16]) ghost
                      pattern (src/ppx.ml[222,6689+6]..[222,6689+16])
                        Ppat_var "ptype_name" (src/ppx.ml[222,6689+6]..[222,6689+16])
                    "ptype_params" (src/ppx.ml[223,6726+6]..[223,6726+18]) ghost
                      pattern (src/ppx.ml[223,6726+6]..[223,6726+18])
                        Ppat_var "ptype_params" (src/ppx.ml[223,6726+6]..[223,6726+18])
                    "ptype_cstrs" (src/ppx.ml[224,6798+6]..[224,6798+17]) ghost
                      pattern (src/ppx.ml[224,6798+6]..[224,6798+17])
                        Ppat_var "ptype_cstrs" (src/ppx.ml[224,6798+6]..[224,6798+17])
                    "ptype_kind" (src/ppx.ml[225,6867+6]..[225,6867+16]) ghost
                      pattern (src/ppx.ml[225,6867+6]..[225,6867+16])
                        Ppat_var "ptype_kind" (src/ppx.ml[225,6867+6]..[225,6867+16])
                    "ptype_private" (src/ppx.ml[226,6904+6]..[226,6904+19]) ghost
                      pattern (src/ppx.ml[226,6904+6]..[226,6904+19])
                        Ppat_var "ptype_private" (src/ppx.ml[226,6904+6]..[226,6904+19])
                    "ptype_manifest" (src/ppx.ml[227,6945+6]..[227,6945+20]) ghost
                      pattern (src/ppx.ml[227,6945+6]..[227,6945+20])
                        Ppat_var "ptype_manifest" (src/ppx.ml[227,6945+6]..[227,6945+20])
                    "ptype_attributes" (src/ppx.ml[228,6992+6]..[228,6992+22]) ghost
                      pattern (src/ppx.ml[228,6992+6]..[228,6992+22])
                        Ppat_var "ptype_attributes" (src/ppx.ml[228,6992+6]..[228,6992+22])
                    "ptype_loc" (src/ppx.ml[229,7033+6]..[229,7033+15]) ghost
                      pattern (src/ppx.ml[229,7033+6]..[229,7033+15])
                        Ppat_var "ptype_loc" (src/ppx.ml[229,7033+6]..[229,7033+15])
                  ]
                expression (src/ppx.ml[231,7073+4]..[240,7649+38])
                  Pexp_sequence
                  expression (src/ppx.ml[231,7073+4]..[231,7073+69])
                    Pexp_apply
                    expression (src/ppx.ml[231,7073+5]..[231,7073+18])
                      Pexp_ident "print_endline" (src/ppx.ml[231,7073+5]..[231,7073+18])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[231,7073+19]..[231,7073+68])
                          Pexp_apply
                          expression (src/ppx.ml[231,7073+20]..[231,7073+34])
                            Pexp_ident "Batteries.dump" (src/ppx.ml[231,7073+20]..[231,7073+34])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[231,7073+35]..[231,7073+67])
                                Pexp_tuple
                                [
                                  expression (src/ppx.ml[231,7073+36]..[231,7073+54])
                                    Pexp_constant PConst_string("DEBUG:type_decl:",(src/ppx.ml[231,7073+37]..[231,7073+53]),None)
                                  expression (src/ppx.ml[231,7073+56]..[231,7073+66])
                                    Pexp_ident "ptype_name" (src/ppx.ml[231,7073+56]..[231,7073+66])
                                ]
                          ]
                    ]
                  expression (src/ppx.ml[232,7144+4]..[240,7649+38])
                    Pexp_sequence
                    expression (src/ppx.ml[232,7144+4]..[232,7144+72])
                      Pexp_apply
                      expression (src/ppx.ml[232,7144+5]..[232,7144+18])
                        Pexp_ident "print_endline" (src/ppx.ml[232,7144+5]..[232,7144+18])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[232,7144+19]..[232,7144+71])
                            Pexp_apply
                            expression (src/ppx.ml[232,7144+20]..[232,7144+34])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[232,7144+20]..[232,7144+34])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[232,7144+35]..[232,7144+70])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[232,7144+36]..[232,7144+55])
                                      Pexp_constant PConst_string("DEBUG:parameters:",(src/ppx.ml[232,7144+37]..[232,7144+54]),None)
                                    expression (src/ppx.ml[232,7144+57]..[232,7144+69])
                                      Pexp_ident "ptype_params" (src/ppx.ml[232,7144+57]..[232,7144+69])
                                  ]
                            ]
                      ]
                    expression (src/ppx.ml[233,7218+4]..[240,7649+38])
                      Pexp_sequence
                      expression (src/ppx.ml[233,7218+4]..[233,7218+66])
                        Pexp_apply
                        expression (src/ppx.ml[233,7218+5]..[233,7218+18])
                          Pexp_ident "print_endline" (src/ppx.ml[233,7218+5]..[233,7218+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[233,7218+19]..[233,7218+65])
                              Pexp_apply
                              expression (src/ppx.ml[233,7218+20]..[233,7218+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[233,7218+20]..[233,7218+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[233,7218+35]..[233,7218+64])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[233,7218+36]..[233,7218+50])
                                        Pexp_constant PConst_string("DEBUG:cstrs:",(src/ppx.ml[233,7218+37]..[233,7218+49]),None)
                                      expression (src/ppx.ml[233,7218+52]..[233,7218+63])
                                        Pexp_ident "ptype_cstrs" (src/ppx.ml[233,7218+52]..[233,7218+63])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[234,7286+4]..[240,7649+38])
                        Pexp_sequence
                        expression (src/ppx.ml[234,7286+4]..[234,7286+63])
                          Pexp_apply
                          expression (src/ppx.ml[234,7286+5]..[234,7286+18])
                            Pexp_ident "print_endline" (src/ppx.ml[234,7286+5]..[234,7286+18])
                          [
                            <arg>
                            Nolabel
                              expression (src/ppx.ml[234,7286+19]..[234,7286+62])
                                Pexp_apply
                                expression (src/ppx.ml[234,7286+20]..[234,7286+34])
                                  Pexp_ident "Batteries.dump" (src/ppx.ml[234,7286+20]..[234,7286+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/ppx.ml[234,7286+35]..[234,7286+61])
                                      Pexp_tuple
                                      [
                                        expression (src/ppx.ml[234,7286+36]..[234,7286+49])
                                          Pexp_constant PConst_string("DEBUG:kind:",(src/ppx.ml[234,7286+37]..[234,7286+48]),None)
                                        expression (src/ppx.ml[234,7286+50]..[234,7286+60])
                                          Pexp_ident "ptype_kind" (src/ppx.ml[234,7286+50]..[234,7286+60])
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[235,7351+4]..[240,7649+38])
                          Pexp_sequence
                          expression (src/ppx.ml[235,7351+4]..[235,7351+29])
                            Pexp_apply
                            expression (src/ppx.ml[235,7351+5]..[235,7351+17])
                              Pexp_ident "process_kind" (src/ppx.ml[235,7351+5]..[235,7351+17])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[235,7351+18]..[235,7351+28])
                                  Pexp_ident "ptype_kind" (src/ppx.ml[235,7351+18]..[235,7351+28])
                            ]
                          expression (src/ppx.ml[236,7382+4]..[240,7649+38])
                            Pexp_apply
                            expression (src/ppx.ml[236,7382+5]..[236,7382+18])
                              Pexp_ident "print_endline" (src/ppx.ml[236,7382+5]..[236,7382+18])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[236,7382+19]..[240,7649+37])
                                  Pexp_apply
                                  expression (src/ppx.ml[236,7382+20]..[236,7382+34])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[236,7382+20]..[236,7382+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[236,7382+35]..[240,7649+36])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[236,7382+36]..[236,7382+52])
                                            Pexp_constant PConst_string("DEBUG:private:",(src/ppx.ml[236,7382+37]..[236,7382+51]),None)
                                          expression (src/ppx.ml[236,7382+55]..[236,7382+68])
                                            Pexp_ident "ptype_private" (src/ppx.ml[236,7382+55]..[236,7382+68])
                                          expression (src/ppx.ml[237,7452+36]..[237,7452+52])
                                            Pexp_constant PConst_string("DEBUG:manifest",(src/ppx.ml[237,7452+37]..[237,7452+51]),None)
                                          expression (src/ppx.ml[237,7452+54]..[237,7452+68])
                                            Pexp_ident "ptype_manifest" (src/ppx.ml[237,7452+54]..[237,7452+68])
                                          expression (src/ppx.ml[238,7522+36]..[238,7522+48])
                                            Pexp_constant PConst_string("DEBUG:attr",(src/ppx.ml[238,7522+37]..[238,7522+47]),None)
                                          expression (src/ppx.ml[238,7522+50]..[238,7522+66])
                                            Pexp_ident "ptype_attributes" (src/ppx.ml[238,7522+50]..[238,7522+66])
                                          expression (src/ppx.ml[239,7590+36]..[239,7590+47])
                                            Pexp_constant PConst_string("DEBUG:loc",(src/ppx.ml[239,7590+37]..[239,7590+46]),None)
                                          expression (src/ppx.ml[239,7590+49]..[239,7590+58])
                                            Pexp_ident "ptype_loc" (src/ppx.ml[239,7590+49]..[239,7590+58])
                                        ]
                                  ]
                            ]
            ]
    ]
  structure_item (src/ppx.ml[242,7693+0]..[248,7828+6])
    Pstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7693+8]..[242,7693+30])
          Ppat_var "process_type_decl_list" (src/ppx.ml[242,7693+8]..[242,7693+30])
        expression (src/ppx.ml[242,7693+30]..[248,7828+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[242,7693+30]..[242,7693+33])
            Ppat_var "x" (src/ppx.ml[242,7693+31]..[242,7693+32])
          expression (src/ppx.ml[243,7729+2]..[248,7828+6])
            Pexp_match
            expression (src/ppx.ml[243,7729+8]..[243,7729+9])
              Pexp_ident "x" (src/ppx.ml[243,7729+8]..[243,7729+9])
            [
              <case>
                pattern (src/ppx.ml[244,7744+4]..[244,7744+6])
                  Ppat_construct "[]" (src/ppx.ml[244,7744+4]..[244,7744+6])
                  None
                expression (src/ppx.ml[244,7744+10]..[244,7744+12])
                  Pexp_construct "()" (src/ppx.ml[244,7744+10]..[244,7744+12])
                  None
              <case>
                pattern (src/ppx.ml[245,7757+4]..[245,7757+10])
                  Ppat_construct "::" (src/ppx.ml[245,7757+6]..[245,7757+8])
                  Some
                    []
                    pattern (src/ppx.ml[245,7757+4]..[245,7757+10]) ghost
                      Ppat_tuple
                      [
                        pattern (src/ppx.ml[245,7757+4]..[245,7757+5])
                          Ppat_var "h" (src/ppx.ml[245,7757+4]..[245,7757+5])
                        pattern (src/ppx.ml[245,7757+9]..[245,7757+10])
                          Ppat_var "t" (src/ppx.ml[245,7757+9]..[245,7757+10])
                      ]
                expression (src/ppx.ml[246,7771+4]..[248,7828+6])
                  Pexp_sequence
                  expression (src/ppx.ml[246,7771+4]..[246,7771+23])
                    Pexp_apply
                    expression (src/ppx.ml[246,7771+5]..[246,7771+20])
                      Pexp_ident "print_type_decl" (src/ppx.ml[246,7771+5]..[246,7771+20])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[246,7771+21]..[246,7771+22])
                          Pexp_ident "h" (src/ppx.ml[246,7771+21]..[246,7771+22])
                    ]
                  expression (src/ppx.ml[247,7796+4]..[248,7828+6])
                    Pexp_sequence
                    expression (src/ppx.ml[247,7796+4]..[247,7796+30])
                      Pexp_apply
                      expression (src/ppx.ml[247,7796+5]..[247,7796+27])
                        Pexp_ident "process_type_decl_list" (src/ppx.ml[247,7796+5]..[247,7796+27])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[247,7796+28]..[247,7796+29])
                            Pexp_ident "t" (src/ppx.ml[247,7796+28]..[247,7796+29])
                      ]
                    expression (src/ppx.ml[248,7828+4]..[248,7828+6])
                      Pexp_construct "()" (src/ppx.ml[248,7828+4]..[248,7828+6])
                      None
            ]
    ]
  structure_item (src/ppx.ml[250,7840+0]..[276,9804+128])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7840+4]..[250,7840+13])
          Ppat_var "printdesc" (src/ppx.ml[250,7840+4]..[250,7840+13])
        expression (src/ppx.ml[250,7840+13]..[276,9804+128]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[250,7840+13]..[250,7840+37])
            Ppat_constraint
            pattern (src/ppx.ml[250,7840+14]..[250,7840+15])
              Ppat_var "x" (src/ppx.ml[250,7840+14]..[250,7840+15])
            core_type (src/ppx.ml[250,7840+17]..[250,7840+36])
              Ptyp_constr "structure_item_desc" (src/ppx.ml[250,7840+17]..[250,7840+36])
              []
          expression (src/ppx.ml[250,7840+38]..[276,9804+128])
            Pexp_constraint
            expression (src/ppx.ml[251,7886+2]..[276,9804+128])
              Pexp_sequence
              expression (src/ppx.ml[251,7886+2]..[251,7886+68])
                Pexp_apply
                expression (src/ppx.ml[251,7886+3]..[251,7886+16])
                  Pexp_ident "print_endline" (src/ppx.ml[251,7886+3]..[251,7886+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[251,7886+17]..[251,7886+67])
                      Pexp_apply
                      expression (src/ppx.ml[251,7886+18]..[251,7886+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[251,7886+18]..[251,7886+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[251,7886+33]..[251,7886+66])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[251,7886+34]..[251,7886+62])
                                Pexp_constant PConst_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7886+35]..[251,7886+61]),None)
                              expression (src/ppx.ml[251,7886+64]..[251,7886+65])
                                Pexp_ident "x" (src/ppx.ml[251,7886+64]..[251,7886+65])
                            ]
                      ]
                ]
              expression (src/ppx.ml[252,7956+2]..[276,9804+128])
                Pexp_match
                expression (src/ppx.ml[252,7956+8]..[252,7956+9])
                  Pexp_ident "x" (src/ppx.ml[252,7956+8]..[252,7956+9])
                [
                  <case>
                    pattern (src/ppx.ml[253,7971+4]..[253,7971+37])
                      Ppat_construct "Pstr_eval" (src/ppx.ml[253,7971+4]..[253,7971+13])
                      Some
                        []
                        pattern (src/ppx.ml[253,7971+14]..[253,7971+37])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[253,7971+15]..[253,7971+25])
                              Ppat_var "expression" (src/ppx.ml[253,7971+15]..[253,7971+25])
                            pattern (src/ppx.ml[253,7971+26]..[253,7971+36])
                              Ppat_var "attributes" (src/ppx.ml[253,7971+26]..[253,7971+36])
                          ]
                    expression (src/ppx.ml[253,7971+41]..[253,7971+117])
                      Pexp_apply
                      expression (src/ppx.ml[253,7971+42]..[253,7971+55])
                        Pexp_ident "print_endline" (src/ppx.ml[253,7971+42]..[253,7971+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[253,7971+56]..[253,7971+116])
                            Pexp_apply
                            expression (src/ppx.ml[253,7971+57]..[253,7971+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[253,7971+57]..[253,7971+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[253,7971+72]..[253,7971+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[253,7971+73]..[253,7971+91])
                                      Pexp_constant PConst_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7971+74]..[253,7971+90]),None)
                                    expression (src/ppx.ml[253,7971+93]..[253,7971+103])
                                      Pexp_ident "expression" (src/ppx.ml[253,7971+93]..[253,7971+103])
                                    expression (src/ppx.ml[253,7971+104]..[253,7971+114])
                                      Pexp_ident "attributes" (src/ppx.ml[253,7971+104]..[253,7971+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[255,8109+4]..[255,8109+45])
                      Ppat_construct "Pstr_value" (src/ppx.ml[255,8109+4]..[255,8109+14])
                      Some
                        []
                        pattern (src/ppx.ml[255,8109+15]..[255,8109+45])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[255,8109+16]..[255,8109+24])
                              Ppat_var "rec_flag" (src/ppx.ml[255,8109+16]..[255,8109+24])
                            pattern (src/ppx.ml[255,8109+26]..[255,8109+44])
                              Ppat_var "value_binding_list" (src/ppx.ml[255,8109+26]..[255,8109+44])
                          ]
                    expression (src/ppx.ml[255,8109+48]..[256,8243+48])
                      Pexp_sequence
                      expression (src/ppx.ml[255,8109+48]..[255,8109+132])
                        Pexp_apply
                        expression (src/ppx.ml[255,8109+49]..[255,8109+62])
                          Pexp_ident "print_endline" (src/ppx.ml[255,8109+49]..[255,8109+62])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[255,8109+63]..[255,8109+131])
                              Pexp_apply
                              expression (src/ppx.ml[255,8109+64]..[255,8109+78])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[255,8109+64]..[255,8109+78])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[255,8109+79]..[255,8109+130])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[255,8109+80]..[255,8109+99])
                                        Pexp_constant PConst_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8109+81]..[255,8109+98]),None)
                                      expression (src/ppx.ml[255,8109+101]..[255,8109+109])
                                        Pexp_ident "rec_flag" (src/ppx.ml[255,8109+101]..[255,8109+109])
                                      expression (src/ppx.ml[255,8109+111]..[255,8109+129])
                                        Pexp_ident "value_binding_list" (src/ppx.ml[255,8109+111]..[255,8109+129])
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[256,8243+4]..[256,8243+48])
                        Pexp_apply
                        expression (src/ppx.ml[256,8243+4]..[256,8243+28])
                          Pexp_ident "print_value_binding_list" (src/ppx.ml[256,8243+4]..[256,8243+28])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[256,8243+28]..[256,8243+48])
                              Pexp_ident "value_binding_list" (src/ppx.ml[256,8243+29]..[256,8243+47])
                        ]
                  <case>
                    pattern (src/ppx.ml[257,8292+4]..[257,8292+36])
                      Ppat_construct "Pstr_primitive" (src/ppx.ml[257,8292+4]..[257,8292+18])
                      Some
                        []
                        pattern (src/ppx.ml[257,8292+19]..[257,8292+36])
                          Ppat_var "value_description" (src/ppx.ml[257,8292+19]..[257,8292+36])
                    expression (src/ppx.ml[257,8292+39]..[257,8292+116])
                      Pexp_apply
                      expression (src/ppx.ml[257,8292+40]..[257,8292+53])
                        Pexp_ident "print_endline" (src/ppx.ml[257,8292+40]..[257,8292+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[257,8292+54]..[257,8292+115])
                            Pexp_apply
                            expression (src/ppx.ml[257,8292+55]..[257,8292+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[257,8292+55]..[257,8292+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[257,8292+70]..[257,8292+114])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[257,8292+71]..[257,8292+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8292+72]..[257,8292+93]),None)
                                    expression (src/ppx.ml[257,8292+96]..[257,8292+113])
                                      Pexp_ident "value_description" (src/ppx.ml[257,8292+96]..[257,8292+113])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[259,8410+4]..[259,8410+47])
                      Ppat_construct "Pstr_type" (src/ppx.ml[259,8410+4]..[259,8410+13])
                      Some
                        []
                        pattern (src/ppx.ml[259,8410+14]..[259,8410+47])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[259,8410+15]..[259,8410+23])
                              Ppat_var "rec_flag" (src/ppx.ml[259,8410+15]..[259,8410+23])
                            pattern (src/ppx.ml[259,8410+25]..[259,8410+46])
                              Ppat_var "type_declaration_list" (src/ppx.ml[259,8410+25]..[259,8410+46])
                          ]
                    expression (src/ppx.ml[261,8489+4]..[262,8540+90])
                      Pexp_sequence
                      expression (src/ppx.ml[261,8489+4]..[261,8489+49])
                        Pexp_apply
                        expression (src/ppx.ml[261,8489+4]..[261,8489+26])
                          Pexp_ident "process_type_decl_list" (src/ppx.ml[261,8489+4]..[261,8489+26])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[261,8489+26]..[261,8489+49])
                              Pexp_ident "type_declaration_list" (src/ppx.ml[261,8489+27]..[261,8489+48])
                        ]
                      expression (src/ppx.ml[262,8540+4]..[262,8540+90])
                        Pexp_apply
                        expression (src/ppx.ml[262,8540+5]..[262,8540+18])
                          Pexp_ident "print_endline" (src/ppx.ml[262,8540+5]..[262,8540+18])
                        [
                          <arg>
                          Nolabel
                            expression (src/ppx.ml[262,8540+19]..[262,8540+89])
                              Pexp_apply
                              expression (src/ppx.ml[262,8540+20]..[262,8540+34])
                                Pexp_ident "Batteries.dump" (src/ppx.ml[262,8540+20]..[262,8540+34])
                              [
                                <arg>
                                Nolabel
                                  expression (src/ppx.ml[262,8540+35]..[262,8540+88])
                                    Pexp_tuple
                                    [
                                      expression (src/ppx.ml[262,8540+36]..[262,8540+54])
                                        Pexp_constant PConst_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8540+37]..[262,8540+53]),None)
                                      expression (src/ppx.ml[262,8540+56]..[262,8540+64])
                                        Pexp_ident "rec_flag" (src/ppx.ml[262,8540+56]..[262,8540+64])
                                      expression (src/ppx.ml[262,8540+66]..[262,8540+87])
                                        Pexp_ident "type_declaration_list" (src/ppx.ml[262,8540+66]..[262,8540+87])
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[265,8633+4]..[265,8633+31])
                      Ppat_construct "Pstr_typext" (src/ppx.ml[265,8633+4]..[265,8633+15])
                      Some
                        []
                        pattern (src/ppx.ml[265,8633+17]..[265,8633+31])
                          Ppat_var "type_extension" (src/ppx.ml[265,8633+17]..[265,8633+31])
                    expression (src/ppx.ml[265,8633+34]..[265,8633+105])
                      Pexp_apply
                      expression (src/ppx.ml[265,8633+35]..[265,8633+48])
                        Pexp_ident "print_endline" (src/ppx.ml[265,8633+35]..[265,8633+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[265,8633+49]..[265,8633+104])
                            Pexp_apply
                            expression (src/ppx.ml[265,8633+50]..[265,8633+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[265,8633+50]..[265,8633+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[265,8633+65]..[265,8633+103])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[265,8633+66]..[265,8633+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8633+67]..[265,8633+85]),None)
                                    expression (src/ppx.ml[265,8633+88]..[265,8633+102])
                                      Pexp_ident "type_extension" (src/ppx.ml[265,8633+88]..[265,8633+102])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[266,8739+4]..[266,8739+40])
                      Ppat_construct "Pstr_exception" (src/ppx.ml[266,8739+4]..[266,8739+18])
                      Some
                        []
                        pattern (src/ppx.ml[266,8739+19]..[266,8739+40])
                          Ppat_var "extension_constructor" (src/ppx.ml[266,8739+19]..[266,8739+40])
                    expression (src/ppx.ml[266,8739+43]..[266,8739+124])
                      Pexp_apply
                      expression (src/ppx.ml[266,8739+44]..[266,8739+57])
                        Pexp_ident "print_endline" (src/ppx.ml[266,8739+44]..[266,8739+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[266,8739+58]..[266,8739+123])
                            Pexp_apply
                            expression (src/ppx.ml[266,8739+59]..[266,8739+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[266,8739+59]..[266,8739+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[266,8739+74]..[266,8739+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[266,8739+75]..[266,8739+98])
                                      Pexp_constant PConst_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8739+76]..[266,8739+97]),None)
                                    expression (src/ppx.ml[266,8739+100]..[266,8739+121])
                                      Pexp_ident "extension_constructor" (src/ppx.ml[266,8739+100]..[266,8739+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[267,8864+4]..[267,8864+31])
                      Ppat_construct "Pstr_module" (src/ppx.ml[267,8864+4]..[267,8864+15])
                      Some
                        []
                        pattern (src/ppx.ml[267,8864+17]..[267,8864+31])
                          Ppat_var "module_binding" (src/ppx.ml[267,8864+17]..[267,8864+31])
                    expression (src/ppx.ml[267,8864+34]..[267,8864+104])
                      Pexp_apply
                      expression (src/ppx.ml[267,8864+35]..[267,8864+48])
                        Pexp_ident "print_endline" (src/ppx.ml[267,8864+35]..[267,8864+48])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[267,8864+49]..[267,8864+103])
                            Pexp_apply
                            expression (src/ppx.ml[267,8864+50]..[267,8864+64])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[267,8864+50]..[267,8864+64])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[267,8864+65]..[267,8864+102])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[267,8864+66]..[267,8864+86])
                                      Pexp_constant PConst_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8864+67]..[267,8864+85]),None)
                                    expression (src/ppx.ml[267,8864+87]..[267,8864+101])
                                      Pexp_ident "module_binding" (src/ppx.ml[267,8864+87]..[267,8864+101])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[268,8969+4]..[268,8969+39])
                      Ppat_construct "Pstr_recmodule" (src/ppx.ml[268,8969+4]..[268,8969+18])
                      Some
                        []
                        pattern (src/ppx.ml[268,8969+20]..[268,8969+39])
                          Ppat_var "module_binding_list" (src/ppx.ml[268,8969+20]..[268,8969+39])
                    expression (src/ppx.ml[268,8969+42]..[268,8969+121])
                      Pexp_apply
                      expression (src/ppx.ml[268,8969+43]..[268,8969+56])
                        Pexp_ident "print_endline" (src/ppx.ml[268,8969+43]..[268,8969+56])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[268,8969+57]..[268,8969+120])
                            Pexp_apply
                            expression (src/ppx.ml[268,8969+58]..[268,8969+72])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[268,8969+58]..[268,8969+72])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[268,8969+73]..[268,8969+119])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[268,8969+74]..[268,8969+97])
                                      Pexp_constant PConst_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8969+75]..[268,8969+96]),None)
                                    expression (src/ppx.ml[268,8969+99]..[268,8969+118])
                                      Pexp_ident "module_binding_list" (src/ppx.ml[268,8969+99]..[268,8969+118])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[269,9091+4]..[269,9091+40])
                      Ppat_construct "Pstr_modtype" (src/ppx.ml[269,9091+4]..[269,9091+16])
                      Some
                        []
                        pattern (src/ppx.ml[269,9091+17]..[269,9091+40])
                          Ppat_var "module_type_declaration" (src/ppx.ml[269,9091+17]..[269,9091+40])
                    expression (src/ppx.ml[269,9091+43]..[269,9091+124])
                      Pexp_apply
                      expression (src/ppx.ml[269,9091+44]..[269,9091+57])
                        Pexp_ident "print_endline" (src/ppx.ml[269,9091+44]..[269,9091+57])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[269,9091+58]..[269,9091+123])
                            Pexp_apply
                            expression (src/ppx.ml[269,9091+59]..[269,9091+73])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[269,9091+59]..[269,9091+73])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[269,9091+74]..[269,9091+122])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[269,9091+75]..[269,9091+96])
                                      Pexp_constant PConst_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9091+76]..[269,9091+95]),None)
                                    expression (src/ppx.ml[269,9091+98]..[269,9091+121])
                                      Pexp_ident "module_type_declaration" (src/ppx.ml[269,9091+98]..[269,9091+121])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[271,9233+4]..[271,9233+30])
                      Ppat_construct "Pstr_open" (src/ppx.ml[271,9233+4]..[271,9233+13])
                      Some
                        []
                        pattern (src/ppx.ml[271,9233+14]..[271,9233+30])
                          Ppat_var "open_description" (src/ppx.ml[271,9233+14]..[271,9233+30])
                    expression (src/ppx.ml[271,9233+33]..[271,9233+103])
                      Pexp_apply
                      expression (src/ppx.ml[271,9233+34]..[271,9233+47])
                        Pexp_ident "print_endline" (src/ppx.ml[271,9233+34]..[271,9233+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[271,9233+48]..[271,9233+102])
                            Pexp_apply
                            expression (src/ppx.ml[271,9233+49]..[271,9233+63])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[271,9233+49]..[271,9233+63])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[271,9233+64]..[271,9233+101])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[271,9233+65]..[271,9233+82])
                                      Pexp_constant PConst_string("DEBUG:Pstr_open",(src/ppx.ml[271,9233+66]..[271,9233+81]),None)
                                    expression (src/ppx.ml[271,9233+84]..[271,9233+100])
                                      Pexp_ident "open_description" (src/ppx.ml[271,9233+84]..[271,9233+100])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[272,9337+4]..[272,9337+36])
                      Ppat_construct "Pstr_class" (src/ppx.ml[272,9337+4]..[272,9337+14])
                      Some
                        []
                        pattern (src/ppx.ml[272,9337+15]..[272,9337+36])
                          Ppat_var "class_declarations" (src/ppx.ml[272,9337+16]..[272,9337+34])
                    expression (src/ppx.ml[272,9337+39]..[272,9337+113])
                      Pexp_apply
                      expression (src/ppx.ml[272,9337+40]..[272,9337+53])
                        Pexp_ident "print_endline" (src/ppx.ml[272,9337+40]..[272,9337+53])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[272,9337+54]..[272,9337+112])
                            Pexp_apply
                            expression (src/ppx.ml[272,9337+55]..[272,9337+69])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[272,9337+55]..[272,9337+69])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[272,9337+70]..[272,9337+111])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[272,9337+71]..[272,9337+90])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9337+72]..[272,9337+89]),None)
                                    expression (src/ppx.ml[272,9337+92]..[272,9337+110])
                                      Pexp_ident "class_declarations" (src/ppx.ml[272,9337+92]..[272,9337+110])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[273,9451+4]..[273,9451+45])
                      Ppat_construct "Pstr_class_type" (src/ppx.ml[273,9451+4]..[273,9451+19])
                      Some
                        []
                        pattern (src/ppx.ml[273,9451+20]..[273,9451+45])
                          Ppat_var "class_type_declarations" (src/ppx.ml[273,9451+21]..[273,9451+44])
                    expression (src/ppx.ml[273,9451+48]..[273,9451+132])
                      Pexp_apply
                      expression (src/ppx.ml[273,9451+49]..[273,9451+62])
                        Pexp_ident "print_endline" (src/ppx.ml[273,9451+49]..[273,9451+62])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[273,9451+63]..[273,9451+131])
                            Pexp_apply
                            expression (src/ppx.ml[273,9451+64]..[273,9451+78])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[273,9451+64]..[273,9451+78])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[273,9451+79]..[273,9451+130])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[273,9451+80]..[273,9451+104])
                                      Pexp_constant PConst_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9451+81]..[273,9451+103]),None)
                                    expression (src/ppx.ml[273,9451+106]..[273,9451+129])
                                      Pexp_ident "class_type_declarations" (src/ppx.ml[273,9451+106]..[273,9451+129])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[274,9584+4]..[274,9584+39])
                      Ppat_construct "Pstr_include" (src/ppx.ml[274,9584+4]..[274,9584+16])
                      Some
                        []
                        pattern (src/ppx.ml[274,9584+18]..[274,9584+39])
                          Ppat_var "include_declaration" (src/ppx.ml[274,9584+19]..[274,9584+38])
                    expression (src/ppx.ml[274,9584+41]..[274,9584+117])
                      Pexp_apply
                      expression (src/ppx.ml[274,9584+42]..[274,9584+55])
                        Pexp_ident "print_endline" (src/ppx.ml[274,9584+42]..[274,9584+55])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[274,9584+56]..[274,9584+116])
                            Pexp_apply
                            expression (src/ppx.ml[274,9584+57]..[274,9584+71])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[274,9584+57]..[274,9584+71])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[274,9584+72]..[274,9584+115])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[274,9584+73]..[274,9584+94])
                                      Pexp_constant PConst_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9584+74]..[274,9584+93]),None)
                                    expression (src/ppx.ml[274,9584+95]..[274,9584+114])
                                      Pexp_ident "include_declaration" (src/ppx.ml[274,9584+95]..[274,9584+114])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[275,9702+4]..[275,9702+30])
                      Ppat_construct "Pstr_attribute" (src/ppx.ml[275,9702+4]..[275,9702+18])
                      Some
                        []
                        pattern (src/ppx.ml[275,9702+19]..[275,9702+30])
                          Ppat_var "attribute" (src/ppx.ml[275,9702+20]..[275,9702+29])
                    expression (src/ppx.ml[275,9702+32]..[275,9702+101])
                      Pexp_apply
                      expression (src/ppx.ml[275,9702+33]..[275,9702+46])
                        Pexp_ident "print_endline" (src/ppx.ml[275,9702+33]..[275,9702+46])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[275,9702+47]..[275,9702+100])
                            Pexp_apply
                            expression (src/ppx.ml[275,9702+48]..[275,9702+62])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[275,9702+48]..[275,9702+62])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[275,9702+63]..[275,9702+99])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[275,9702+64]..[275,9702+87])
                                      Pexp_constant PConst_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9702+65]..[275,9702+86]),None)
                                    expression (src/ppx.ml[275,9702+89]..[275,9702+98])
                                      Pexp_ident "attribute" (src/ppx.ml[275,9702+89]..[275,9702+98])
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[276,9804+4]..[276,9804+44])
                      Ppat_construct "Pstr_extension" (src/ppx.ml[276,9804+4]..[276,9804+18])
                      Some
                        []
                        pattern (src/ppx.ml[276,9804+19]..[276,9804+44])
                          Ppat_tuple
                          [
                            pattern (src/ppx.ml[276,9804+21]..[276,9804+30])
                              Ppat_var "extension" (src/ppx.ml[276,9804+21]..[276,9804+30])
                            pattern (src/ppx.ml[276,9804+33]..[276,9804+43])
                              Ppat_var "attributes" (src/ppx.ml[276,9804+33]..[276,9804+43])
                          ]
                    expression (src/ppx.ml[276,9804+46]..[276,9804+128])
                      Pexp_apply
                      expression (src/ppx.ml[276,9804+47]..[276,9804+60])
                        Pexp_ident "print_endline" (src/ppx.ml[276,9804+47]..[276,9804+60])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[276,9804+61]..[276,9804+127])
                            Pexp_apply
                            expression (src/ppx.ml[276,9804+62]..[276,9804+76])
                              Pexp_ident "Batteries.dump" (src/ppx.ml[276,9804+62]..[276,9804+76])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[276,9804+77]..[276,9804+126])
                                  Pexp_tuple
                                  [
                                    expression (src/ppx.ml[276,9804+78]..[276,9804+101])
                                      Pexp_constant PConst_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9804+79]..[276,9804+100]),None)
                                    expression (src/ppx.ml[276,9804+103]..[276,9804+112])
                                      Pexp_ident "extension" (src/ppx.ml[276,9804+103]..[276,9804+112])
                                    expression (src/ppx.ml[276,9804+115]..[276,9804+125])
                                      Pexp_ident "attributes" (src/ppx.ml[276,9804+115]..[276,9804+125])
                                  ]
                            ]
                      ]
                ]
            core_type (src/ppx.ml[250,7840+39]..[250,7840+43])
              Ptyp_constr "unit" (src/ppx.ml[250,7840+39]..[250,7840+43])
              []
    ]
  structure_item (src/ppx.ml[278,9934+0]..[278,9934+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9934+4]..[278,9934+7])
          Ppat_var "foo" (src/ppx.ml[278,9934+4]..[278,9934+7])
        expression (src/ppx.ml[278,9934+10]..[278,9934+11])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (src/ppx.ml[280,9949+0]..[288,10168+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9949+4]..[280,9949+12])
          Ppat_var "printone" (src/ppx.ml[280,9949+4]..[280,9949+12])
        expression (src/ppx.ml[280,9949+13]..[288,10168+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[280,9949+13]..[280,9949+34])
            Ppat_constraint
            pattern (src/ppx.ml[280,9949+14]..[280,9949+15])
              Ppat_var "x" (src/ppx.ml[280,9949+14]..[280,9949+15])
            core_type (src/ppx.ml[280,9949+18]..[280,9949+32])
              Ptyp_constr "structure_item" (src/ppx.ml[280,9949+18]..[280,9949+32])
              []
          expression (src/ppx.ml[280,9949+35]..[288,10168+6])
            Pexp_constraint
            expression (src/ppx.ml[281,9992+2]..[288,10168+6])
              Pexp_match
              expression (src/ppx.ml[281,9992+8]..[281,9992+9])
                Pexp_ident "x" (src/ppx.ml[281,9992+8]..[281,9992+9])
              [
                <case>
                  pattern (src/ppx.ml[282,10007+3]..[285,10057+3])
                    Ppat_record Open
                    [
                      "pstr_desc" (src/ppx.ml[283,10012+4]..[283,10012+13]) ghost
                        pattern (src/ppx.ml[283,10012+4]..[283,10012+13])
                          Ppat_var "pstr_desc" (src/ppx.ml[283,10012+4]..[283,10012+13])
                    ]
                  expression (src/ppx.ml[287,10141+4]..[288,10168+6])
                    Pexp_sequence
                    expression (src/ppx.ml[287,10141+4]..[287,10141+25])
                      Pexp_apply
                      expression (src/ppx.ml[287,10141+5]..[287,10141+14])
                        Pexp_ident "printdesc" (src/ppx.ml[287,10141+5]..[287,10141+14])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[287,10141+15]..[287,10141+24])
                            Pexp_ident "pstr_desc" (src/ppx.ml[287,10141+15]..[287,10141+24])
                      ]
                    expression (src/ppx.ml[288,10168+4]..[288,10168+6])
                      Pexp_construct "()" (src/ppx.ml[288,10168+4]..[288,10168+6])
                      None
              ]
            core_type (src/ppx.ml[280,9949+36]..[280,9949+40])
              Ptyp_constr "unit" (src/ppx.ml[280,9949+36]..[280,9949+40])
              []
    ]
  structure_item (src/ppx.ml[294,10288+0]..[296,10369+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10288+4]..[294,10288+13])
          Ppat_var "printone2" (src/ppx.ml[294,10288+4]..[294,10288+13])
        expression (src/ppx.ml[294,10288+14]..[296,10369+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[294,10288+14]..[294,10288+15])
            Ppat_var "x" (src/ppx.ml[294,10288+14]..[294,10288+15])
          expression (src/ppx.ml[294,10288+16]..[296,10369+12])
            Pexp_constraint
            expression (src/ppx.ml[295,10312+2]..[296,10369+12])
              Pexp_sequence
              expression (src/ppx.ml[295,10312+2]..[295,10312+55])
                Pexp_apply
                expression (src/ppx.ml[295,10312+3]..[295,10312+16])
                  Pexp_ident "print_endline" (src/ppx.ml[295,10312+3]..[295,10312+16])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[295,10312+17]..[295,10312+54])
                      Pexp_apply
                      expression (src/ppx.ml[295,10312+18]..[295,10312+32])
                        Pexp_ident "Batteries.dump" (src/ppx.ml[295,10312+18]..[295,10312+32])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[295,10312+33]..[295,10312+53])
                            Pexp_tuple
                            [
                              expression (src/ppx.ml[295,10312+34]..[295,10312+50])
                                Pexp_constant PConst_string("DEBUG:SECOND::",(src/ppx.ml[295,10312+35]..[295,10312+49]),None)
                              expression (src/ppx.ml[295,10312+51]..[295,10312+52])
                                Pexp_ident "x" (src/ppx.ml[295,10312+51]..[295,10312+52])
                            ]
                      ]
                ]
              expression (src/ppx.ml[296,10369+2]..[296,10369+12])
                Pexp_apply
                expression (src/ppx.ml[296,10369+2]..[296,10369+10])
                  Pexp_ident "printone" (src/ppx.ml[296,10369+2]..[296,10369+10])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[296,10369+11]..[296,10369+12])
                      Pexp_ident "x" (src/ppx.ml[296,10369+11]..[296,10369+12])
                ]
            core_type (src/ppx.ml[294,10288+17]..[294,10288+21])
              Ptyp_constr "unit" (src/ppx.ml[294,10288+17]..[294,10288+21])
              []
    ]
  structure_item (src/ppx.ml[298,10385+0]..[300,10416+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10385+4]..[298,10385+9])
          Ppat_var "proc1" (src/ppx.ml[298,10385+4]..[298,10385+9])
        expression (src/ppx.ml[298,10385+10]..[300,10416+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[298,10385+10]..[298,10385+11])
            Ppat_var "x" (src/ppx.ml[298,10385+10]..[298,10385+11])
          expression (src/ppx.ml[299,10401+2]..[300,10416+3])
            Pexp_sequence
            expression (src/ppx.ml[299,10401+2]..[299,10401+13])
              Pexp_apply
              expression (src/ppx.ml[299,10401+2]..[299,10401+11])
                Pexp_ident "printone2" (src/ppx.ml[299,10401+2]..[299,10401+11])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[299,10401+12]..[299,10401+13])
                    Pexp_ident "x" (src/ppx.ml[299,10401+12]..[299,10401+13])
              ]
            expression (src/ppx.ml[300,10416+2]..[300,10416+3])
              Pexp_ident "x" (src/ppx.ml[300,10416+2]..[300,10416+3])
    ]
  structure_item (src/ppx.ml[302,10421+0]..[305,10570+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10421+4]..[302,10421+9])
          Ppat_var "debug" (src/ppx.ml[302,10421+4]..[302,10421+9])
        expression (src/ppx.ml[302,10421+10]..[305,10570+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[302,10421+10]..[302,10421+14])
            Ppat_var "proc" (src/ppx.ml[302,10421+10]..[302,10421+14])
          expression (src/ppx.ml[302,10421+15]..[305,10570+4]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/ppx.ml[302,10421+15]..[302,10421+18])
              Ppat_var "lst" (src/ppx.ml[302,10421+15]..[302,10421+18])
            expression (src/ppx.ml[302,10421+19]..[305,10570+4])
              Pexp_constraint
              expression (src/ppx.ml[303,10449+2]..[305,10570+4])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/ppx.ml[303,10449+6]..[303,10449+12])
                      Ppat_var "result" (src/ppx.ml[303,10449+6]..[303,10449+12])
                    expression (src/ppx.ml[303,10449+15]..[303,10449+32])
                      Pexp_apply
                      expression (src/ppx.ml[303,10449+15]..[303,10449+23])
                        Pexp_ident "List.map" (src/ppx.ml[303,10449+15]..[303,10449+23])
                      [
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10449+24]..[303,10449+28])
                            Pexp_ident "proc" (src/ppx.ml[303,10449+24]..[303,10449+28])
                        <arg>
                        Nolabel
                          expression (src/ppx.ml[303,10449+29]..[303,10449+32])
                            Pexp_ident "lst" (src/ppx.ml[303,10449+29]..[303,10449+32])
                      ]
                ]
                expression (src/ppx.ml[304,10485+2]..[305,10570+4])
                  Pexp_sequence
                  expression (src/ppx.ml[304,10485+2]..[304,10485+83])
                    Pexp_apply
                    expression (src/ppx.ml[304,10485+2]..[304,10485+11])
                      Pexp_ident "List.iter" (src/ppx.ml[304,10485+2]..[304,10485+11])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10485+12]..[304,10485+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/ppx.ml[304,10485+17]..[304,10485+18])
                            Ppat_var "i" (src/ppx.ml[304,10485+17]..[304,10485+18])
                          expression (src/ppx.ml[304,10485+22]..[304,10485+75])
                            Pexp_apply
                            expression (src/ppx.ml[304,10485+22]..[304,10485+35])
                              Pexp_ident "print_endline" (src/ppx.ml[304,10485+22]..[304,10485+35])
                            [
                              <arg>
                              Nolabel
                                expression (src/ppx.ml[304,10485+36]..[304,10485+75])
                                  Pexp_apply
                                  expression (src/ppx.ml[304,10485+37]..[304,10485+51])
                                    Pexp_ident "Batteries.dump" (src/ppx.ml[304,10485+37]..[304,10485+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/ppx.ml[304,10485+52]..[304,10485+74])
                                        Pexp_tuple
                                        [
                                          expression (src/ppx.ml[304,10485+53]..[304,10485+70])
                                            Pexp_constant PConst_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10485+54]..[304,10485+69]),None)
                                          expression (src/ppx.ml[304,10485+72]..[304,10485+73])
                                            Pexp_ident "i" (src/ppx.ml[304,10485+72]..[304,10485+73])
                                        ]
                                  ]
                            ]
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[304,10485+77]..[304,10485+83])
                          Pexp_ident "result" (src/ppx.ml[304,10485+77]..[304,10485+83])
                    ]
                  expression (src/ppx.ml[305,10570+2]..[305,10570+4])
                    Pexp_construct "()" (src/ppx.ml[305,10570+2]..[305,10570+4])
                    None
              core_type (src/ppx.ml[302,10421+21]..[302,10421+25])
                Ptyp_constr "unit" (src/ppx.ml[302,10421+21]..[302,10421+25])
                []
    ]
  structure_item (src/ppx.ml[307,10592+0]..[310,10716+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10592+4]..[307,10592+13])
          Ppat_var "transform" (src/ppx.ml[307,10592+4]..[307,10592+13])
        expression (src/ppx.ml[307,10592+14]..[310,10716+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/ppx.ml[307,10592+14]..[307,10592+15])
            Ppat_var "x" (src/ppx.ml[307,10592+14]..[307,10592+15])
          expression (src/ppx.ml[308,10647+2]..[310,10716+3])
            Pexp_sequence
            expression (src/ppx.ml[308,10647+2]..[308,10647+48])
              Pexp_apply
              expression (src/ppx.ml[308,10647+3]..[308,10647+16])
                Pexp_ident "print_endline" (src/ppx.ml[308,10647+3]..[308,10647+16])
              [
                <arg>
                Nolabel
                  expression (src/ppx.ml[308,10647+17]..[308,10647+47])
                    Pexp_apply
                    expression (src/ppx.ml[308,10647+18]..[308,10647+32])
                      Pexp_ident "Batteries.dump" (src/ppx.ml[308,10647+18]..[308,10647+32])
                    [
                      <arg>
                      Nolabel
                        expression (src/ppx.ml[308,10647+33]..[308,10647+46])
                          Pexp_tuple
                          [
                            expression (src/ppx.ml[308,10647+34]..[308,10647+43])
                              Pexp_constant PConst_string("DEBUG3:",(src/ppx.ml[308,10647+35]..[308,10647+42]),None)
                            expression (src/ppx.ml[308,10647+44]..[308,10647+45])
                              Pexp_ident "x" (src/ppx.ml[308,10647+44]..[308,10647+45])
                          ]
                    ]
              ]
            expression (src/ppx.ml[309,10697+2]..[310,10716+3])
              Pexp_sequence
              expression (src/ppx.ml[309,10697+2]..[309,10697+17])
                Pexp_apply
                expression (src/ppx.ml[309,10697+3]..[309,10697+8])
                  Pexp_ident "debug" (src/ppx.ml[309,10697+3]..[309,10697+8])
                [
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10697+9]..[309,10697+14])
                      Pexp_ident "proc1" (src/ppx.ml[309,10697+9]..[309,10697+14])
                  <arg>
                  Nolabel
                    expression (src/ppx.ml[309,10697+15]..[309,10697+16])
                      Pexp_ident "x" (src/ppx.ml[309,10697+15]..[309,10697+16])
                ]
              expression (src/ppx.ml[310,10716+2]..[310,10716+3])
                Pexp_ident "x" (src/ppx.ml[310,10716+2]..[310,10716+3])
    ]
  structure_item (src/ppx.ml[312,10723+1]..[312,10723+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10723+5]..[312,10723+7])
          Ppat_construct "()" (src/ppx.ml[312,10723+5]..[312,10723+7])
          None
        expression (src/ppx.ml[312,10723+10]..[312,10723+69])
          Pexp_apply
          expression (src/ppx.ml[312,10723+10]..[312,10723+40])
            Pexp_ident "Driver.register_transformation" (src/ppx.ml[312,10723+10]..[312,10723+40])
          [
            <arg>
            Labelled "impl"
              expression (src/ppx.ml[312,10723+47]..[312,10723+56])
                Pexp_ident "transform" (src/ppx.ml[312,10723+47]..[312,10723+56])
            <arg>
            Nolabel
              expression (src/ppx.ml[312,10723+57]..[312,10723+69])
                Pexp_constant PConst_string("simple-ppx",(src/ppx.ml[312,10723+58]..[312,10723+68]),None)
          ]
    ]
]

open Ppxlib
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG21:", x)); () : unit)
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc2 pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG1:", x)); printone x : unit)
let proc2 x = (printone2 x; () : unit)
let printdesc2 (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG33:", x)) : unit)
let print_value_binding_expr (x : expression) =
  (match x with
   | { pexp_desc; pexp_loc; pexp_loc_stack; pexp_attributes } ->
       (print_endline (Batteries.dump ("DEBUG66:desc", pexp_desc));
        print_endline (Batteries.dump ("DEBUG66:desc", pexp_attributes));
        ()) : unit)
let print_value_binding_list2 (x : value_binding) =
  (match x with
   | { pvb_pat; pvb_expr; pvb_attributes; pvb_loc } ->
       (print_endline (Batteries.dump ("DEBUG:value_binding.pat:", pvb_pat));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.expr:", pvb_expr));
        print_endline
          (Batteries.dump ("DEBUG:value_binding.atrr:", pvb_attributes));
        print_endline (Batteries.dump ("DEBUG:value_binding.loc:", pvb_loc))) : 
  unit)
let rec print_value_binding_list (x : value_binding list) =
  (match x with
   | [] -> ()
   | h::t -> (print_value_binding_list2 h; print_value_binding_list t; ()) : 
  unit)
let process_id (x : longident_loc) =
  match x with
  | { txt;_} ->
      (print_endline (Batteries.dump ("DEBUG:process_id:", txt)); txt)
let rec process_record_kind x =
  match x with
  | { pld_name; pld_mutable; pld_type; pld_loc; pld_attributes } ->
      print_endline
        (Batteries.dump
           ("DEBUG:precord_kind:", pld_name, "mutable", pld_mutable, "type",
             pld_type))
and process_core_type_desc x =
  match x with
  | Ptyp_constr (a, b) ->
      let myid = process_id a in
      (process_core_type_list b;
       print_endline
         (Batteries.dump
            ("DEBUG:Ptyp_constr:", "id", a, "types", b, "id2", myid)))
  | Ptyp_tuple a -> print_endline (Batteries.dump "DEBUG:Ptyp_tuple:")
  | Ptyp_any -> print_endline (Batteries.dump "DEBUG:Ptyp_any:")
  | Ptyp_var name -> print_endline (Batteries.dump ("DEBUG:Ptyp_var:", name))
  | Ptyp_arrow (arg_label, core_type, core_type2) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow10:")
  | Ptyp_object (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow8:")
  | Ptyp_class (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow7:")
  | Ptyp_alias (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow6:")
  | Ptyp_variant (a, b, c) ->
      print_endline (Batteries.dump "DEBUG:Ptyp_arrow5:")
  | Ptyp_poly (a, b) -> print_endline (Batteries.dump "DEBUG:Ptyp_arrow4:")
  | Ptyp_package a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_arrow3:", a))
  | Ptyp_extension a ->
      print_endline (Batteries.dump ("DEBUG:Ptyp_extension:", a))
and process_record_kind_list x =
  match x with
  | [] -> ()
  | h::t -> (process_record_kind h; process_record_kind_list t; ())
and process_core_type x =
  match x with
  | { ptyp_desc; ptyp_loc; ptyp_loc_stack; ptyp_attributes } ->
      (process_core_type_desc ptyp_desc;
       print_endline
         (Batteries.dump ("DEBUG:core_type.ptyp_desc:", ptyp_desc)))
and process_core_type_list (x : core_type list) =
  match x with
  | [] -> ()
  | h::t -> (process_core_type h; process_core_type_list t)
let print_constructor_arguments x =
  match x with
  | Pcstr_tuple a ->
      (process_core_type_list a;
       print_endline (Batteries.dump ("DEBUG:Pcstr_tuple:", a)))
  | Pcstr_record a ->
      print_endline (Batteries.dump ("DEBUG:Pcstr_record:", a))
let rec process_pype_variant_constructor_declaration_list x =
  match x with
  | [] -> ()
  | h::t ->
      (match h with
       | { pcd_name; pcd_vars; pcd_args; pcd_res; pcd_loc; pcd_attributes }
           ->
           (print_constructor_arguments pcd_args;
            print_endline
              (Batteries.dump
                 ("constructor_declaration:", pcd_name, "vars", pcd_vars,
                   "args", pcd_args, "res", pcd_res, "loc", pcd_loc, "attrs",
                   pcd_attributes));
            process_pype_variant_constructor_declaration_list t;
            ()))
let process_kind x =
  match x with
  | Ptype_abstract -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
  | Ptype_variant a ->
      (process_pype_variant_constructor_declaration_list a;
       print_endline (Batteries.dump ("DEBUG:Ptype_variant:", a)))
  | Ptype_record a -> process_record_kind_list a
  | Ptype_open -> print_endline (Batteries.dump "DEBUG:Ptype_abstract:")
let print_type_decl x =
  match x with
  | { ptype_name; ptype_params; ptype_cstrs; ptype_kind; ptype_private;
      ptype_manifest; ptype_attributes; ptype_loc } ->
      (print_endline (Batteries.dump ("DEBUG:type_decl:", ptype_name));
       print_endline (Batteries.dump ("DEBUG:parameters:", ptype_params));
       print_endline (Batteries.dump ("DEBUG:cstrs:", ptype_cstrs));
       print_endline (Batteries.dump ("DEBUG:kind:", ptype_kind));
       process_kind ptype_kind;
       print_endline
         (Batteries.dump
            ("DEBUG:private:", ptype_private, "DEBUG:manifest",
              ptype_manifest, "DEBUG:attr", ptype_attributes, "DEBUG:loc",
              ptype_loc)))
let rec process_type_decl_list x =
  match x with
  | [] -> ()
  | h::t -> (print_type_decl h; process_type_decl_list t; ())
let printdesc (x : structure_item_desc) =
  (print_endline (Batteries.dump ("DEBUG:structure_item_desc:", x));
   (match x with
    | Pstr_eval (expression, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_eval:", expression, attributes))
    | Pstr_value (rec_flag, value_binding_list) ->
        (print_endline
           (Batteries.dump
              ("DEBUG:Pstr_value:", rec_flag, value_binding_list));
         print_value_binding_list value_binding_list)
    | Pstr_primitive value_description ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_primitive:", value_description))
    | Pstr_type (rec_flag, type_declaration_list) ->
        (process_type_decl_list type_declaration_list;
         print_endline
           (Batteries.dump
              ("DEBUG:Pstr_type:", rec_flag, type_declaration_list)))
    | Pstr_typext type_extension ->
        print_endline (Batteries.dump ("DEBUG:Pstr_typext:", type_extension))
    | Pstr_exception extension_constructor ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_exception:", extension_constructor))
    | Pstr_module module_binding ->
        print_endline (Batteries.dump ("DEBUG:Pstr_module:", module_binding))
    | Pstr_recmodule module_binding_list ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_recmodule:", module_binding_list))
    | Pstr_modtype module_type_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_modtype:", module_type_declaration))
    | Pstr_open open_description ->
        print_endline (Batteries.dump ("DEBUG:Pstr_open", open_description))
    | Pstr_class class_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class:", class_declarations))
    | Pstr_class_type class_type_declarations ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_class_type:", class_type_declarations))
    | Pstr_include include_declaration ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_include:", include_declaration))
    | Pstr_attribute attribute ->
        print_endline (Batteries.dump ("DEBUG:Pstr_attribute:", attribute))
    | Pstr_extension (extension, attributes) ->
        print_endline
          (Batteries.dump ("DEBUG:Pstr_extension:", extension, attributes))) : 
  unit)
let foo = 1
let printone (x : structure_item) =
  (match x with | { pstr_desc;_} -> (printdesc pstr_desc; ()) : unit)
let printone2 x =
  (print_endline (Batteries.dump ("DEBUG:SECOND::", x)); printone x : 
  unit)
let proc1 x = printone2 x; x
let debug proc lst =
  (let result = List.map proc lst in
   List.iter (fun i -> print_endline (Batteries.dump ("DEBUG:TOPLEVEL:", i)))
     result;
   () : unit)
let transform x =
  print_endline (Batteries.dump ("DEBUG3:", x)); debug proc1 x; x
let () = Driver.register_transformation ~impl:transform "simple-ppx"
[
  structure_item (src/ppx.ml[1,0+0]..src/ppx.ml[1,0+11])
    Tstr_open Fresh
    module_expr (src/ppx.ml[1,0+5]..src/ppx.ml[1,0+11])
      Tmod_ident "Ppxlib!"
  structure_item (src/ppx.ml[6,118+0]..src/ppx.ml[8,217+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[6,118+4]..src/ppx.ml[6,118+14])
          Tpat_var "printdesc2/701"
        expression (src/ppx.ml[6,118+14]..src/ppx.ml[8,217+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[6,118+18]..src/ppx.ml[6,118+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/703"
                pattern (src/ppx.ml[6,118+15]..src/ppx.ml[6,118+16])
                  Tpat_any
              expression (src/ppx.ml[7,165+2]..src/ppx.ml[8,217+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[6,118+40]..src/ppx.ml[6,118+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[7,165+2]..src/ppx.ml[7,165+50])
                  Texp_apply
                  expression (src/ppx.ml[7,165+3]..src/ppx.ml[7,165+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[7,165+17]..src/ppx.ml[7,165+49])
                        Texp_apply
                        expression (src/ppx.ml[7,165+18]..src/ppx.ml[7,165+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[7,165+33]..src/ppx.ml[7,165+48])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[7,165+34]..src/ppx.ml[7,165+44])
                                  Texp_constant Const_string("DEBUG21:",(src/ppx.ml[7,165+35]..src/ppx.ml[7,165+43]),None)
                                expression (src/ppx.ml[7,165+46]..src/ppx.ml[7,165+47])
                                  Texp_ident "x/703"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[8,217+2]..src/ppx.ml[8,217+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[10,223+0]..src/ppx.ml[17,366+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[10,223+4]..src/ppx.ml[10,223+12])
          Tpat_var "printone/1045"
        expression (src/ppx.ml[10,223+13]..src/ppx.ml[17,366+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[10,223+18]..src/ppx.ml[10,223+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1047"
                pattern (src/ppx.ml[10,223+14]..src/ppx.ml[10,223+15])
                  Tpat_any
              expression (src/ppx.ml[11,266+2]..src/ppx.ml[17,366+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[10,223+36]..src/ppx.ml[10,223+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[11,266+8]..src/ppx.ml[11,266+9])
                  Texp_ident "x/1047"
                [
                  <case>
                    pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                      Tpat_value
                      pattern (src/ppx.ml[12,281+3]..src/ppx.ml[15,331+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[13,286+4]..src/ppx.ml[13,286+13])
                              Tpat_var "pstr_desc/1275"
                        ]
                    expression (src/ppx.ml[16,338+4]..src/ppx.ml[17,366+6])
                      Texp_sequence
                      expression (src/ppx.ml[16,338+4]..src/ppx.ml[16,338+26])
                        Texp_apply
                        expression (src/ppx.ml[16,338+5]..src/ppx.ml[16,338+15])
                          Texp_ident "printdesc2/701"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[16,338+16]..src/ppx.ml[16,338+25])
                              Texp_ident "pstr_desc/1275"
                        ]
                      expression (src/ppx.ml[17,366+4]..src/ppx.ml[17,366+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[20,381+0]..src/ppx.ml[22,455+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[20,381+4]..src/ppx.ml[20,381+13])
          Tpat_var "printone2/1276"
        expression (src/ppx.ml[20,381+14]..src/ppx.ml[22,455+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[20,381+14]..src/ppx.ml[20,381+15])
                Tpat_var "x/1278"
              expression (src/ppx.ml[21,405+2]..src/ppx.ml[22,455+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[20,381+17]..src/ppx.ml[20,381+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[21,405+2]..src/ppx.ml[21,405+48])
                  Texp_apply
                  expression (src/ppx.ml[21,405+3]..src/ppx.ml[21,405+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[21,405+17]..src/ppx.ml[21,405+47])
                        Texp_apply
                        expression (src/ppx.ml[21,405+18]..src/ppx.ml[21,405+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[21,405+33]..src/ppx.ml[21,405+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[21,405+34]..src/ppx.ml[21,405+43])
                                  Texp_constant Const_string("DEBUG1:",(src/ppx.ml[21,405+35]..src/ppx.ml[21,405+42]),None)
                                expression (src/ppx.ml[21,405+44]..src/ppx.ml[21,405+45])
                                  Texp_ident "x/1278"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+12])
                  Texp_apply
                  expression (src/ppx.ml[22,455+2]..src/ppx.ml[22,455+10])
                    Texp_ident "printone/1045"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[22,455+11]..src/ppx.ml[22,455+12])
                        Texp_ident "x/1278"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[24,469+0]..src/ppx.ml[26,506+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[24,469+4]..src/ppx.ml[24,469+9])
          Tpat_var "proc2/1279"
        expression (src/ppx.ml[24,469+10]..src/ppx.ml[26,506+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[24,469+10]..src/ppx.ml[24,469+11])
                Tpat_var "x/1281"
              expression (src/ppx.ml[25,491+2]..src/ppx.ml[26,506+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[24,469+15]..src/ppx.ml[24,469+19])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+13])
                  Texp_apply
                  expression (src/ppx.ml[25,491+2]..src/ppx.ml[25,491+11])
                    Texp_ident "printone2/1276"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[25,491+12]..src/ppx.ml[25,491+13])
                        Texp_ident "x/1281"
                  ]
                expression (src/ppx.ml[26,506+2]..src/ppx.ml[26,506+4])
                  Texp_construct "()"
                  []
          ]
    ]
  structure_item (src/ppx.ml[28,512+0]..src/ppx.ml[29,559+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[28,512+4]..src/ppx.ml[28,512+14])
          Tpat_var "printdesc2/1282"
        expression (src/ppx.ml[28,512+14]..src/ppx.ml[29,559+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[28,512+18]..src/ppx.ml[28,512+37])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1283"
                pattern (src/ppx.ml[28,512+15]..src/ppx.ml[28,512+16])
                  Tpat_any
              expression (src/ppx.ml[29,559+2]..src/ppx.ml[29,559+50])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[28,512+40]..src/ppx.ml[28,512+44])
                    Ttyp_constr "unit/6!"
                    []
                Texp_apply
                expression (src/ppx.ml[29,559+3]..src/ppx.ml[29,559+16])
                  Texp_ident "Stdlib!.print_endline"
                [
                  <arg>
                    Nolabel
                    expression (src/ppx.ml[29,559+17]..src/ppx.ml[29,559+49])
                      Texp_apply
                      expression (src/ppx.ml[29,559+18]..src/ppx.ml[29,559+32])
                        Texp_ident "Batteries!.dump"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[29,559+33]..src/ppx.ml[29,559+48])
                            Texp_tuple
                            [
                              expression (src/ppx.ml[29,559+34]..src/ppx.ml[29,559+44])
                                Texp_constant Const_string("DEBUG33:",(src/ppx.ml[29,559+35]..src/ppx.ml[29,559+43]),None)
                              expression (src/ppx.ml[29,559+46]..src/ppx.ml[29,559+47])
                                Texp_ident "x/1283"
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[35,699+0]..src/ppx.ml[45,1105+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[35,699+4]..src/ppx.ml[35,699+28])
          Tpat_var "print_value_binding_expr/1284"
        expression (src/ppx.ml[35,699+29]..src/ppx.ml[45,1105+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[35,699+34]..src/ppx.ml[35,699+44])
                    Ttyp_constr "Ppxlib!.expression"
                    []
                Tpat_alias "x/1286"
                pattern (src/ppx.ml[35,699+30]..src/ppx.ml[35,699+31])
                  Tpat_any
              expression (src/ppx.ml[36,753+2]..src/ppx.ml[45,1105+4])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[35,699+48]..src/ppx.ml[35,699+52])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[36,753+8]..src/ppx.ml[36,753+9])
                  Texp_ident "x/1286"
                [
                  <case>
                    pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                      Tpat_value
                      pattern (src/ppx.ml[37,768+4]..src/ppx.ml[42,958+3])
                        Tpat_record
                        [
                          "pexp_desc"
                            pattern (src/ppx.ml[38,774+4]..src/ppx.ml[38,774+13])
                              Tpat_var "pexp_desc/1287"
                          "pexp_loc"
                            pattern (src/ppx.ml[39,813+4]..src/ppx.ml[39,813+12])
                              Tpat_var "pexp_loc/1288"
                          "pexp_loc_stack"
                            pattern (src/ppx.ml[40,845+4]..src/ppx.ml[40,845+18])
                              Tpat_var "pexp_loc_stack/1289"
                          "pexp_attributes"
                            pattern (src/ppx.ml[41,888+4]..src/ppx.ml[41,888+19])
                              Tpat_var "pexp_attributes/1290"
                        ]
                    expression (src/ppx.ml[43,965+4]..src/ppx.ml[45,1105+4])
                      Texp_sequence
                      expression (src/ppx.ml[43,965+4]..src/ppx.ml[43,965+65])
                        Texp_apply
                        expression (src/ppx.ml[43,965+5]..src/ppx.ml[43,965+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[43,965+19]..src/ppx.ml[43,965+64])
                              Texp_apply
                              expression (src/ppx.ml[43,965+20]..src/ppx.ml[43,965+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[43,965+35]..src/ppx.ml[43,965+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[43,965+36]..src/ppx.ml[43,965+50])
                                        Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[43,965+37]..src/ppx.ml[43,965+49]),None)
                                      expression (src/ppx.ml[43,965+52]..src/ppx.ml[43,965+61])
                                        Texp_ident "pexp_desc/1287"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[44,1032+4]..src/ppx.ml[45,1105+4])
                        Texp_sequence
                        expression (src/ppx.ml[44,1032+4]..src/ppx.ml[44,1032+71])
                          Texp_apply
                          expression (src/ppx.ml[44,1032+5]..src/ppx.ml[44,1032+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[44,1032+19]..src/ppx.ml[44,1032+70])
                                Texp_apply
                                expression (src/ppx.ml[44,1032+20]..src/ppx.ml[44,1032+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[44,1032+35]..src/ppx.ml[44,1032+69])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[44,1032+36]..src/ppx.ml[44,1032+50])
                                          Texp_constant Const_string("DEBUG66:desc",(src/ppx.ml[44,1032+37]..src/ppx.ml[44,1032+49]),None)
                                        expression (src/ppx.ml[44,1032+52]..src/ppx.ml[44,1032+67])
                                          Texp_ident "pexp_attributes/1290"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[45,1105+2]..src/ppx.ml[45,1105+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[47,1113+0]..src/ppx.ml[59,1617+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[47,1113+4]..src/ppx.ml[47,1113+29])
          Tpat_var "print_value_binding_list2/1291"
        expression (src/ppx.ml[47,1113+30]..src/ppx.ml[59,1617+75]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[47,1113+35]..src/ppx.ml[47,1113+48])
                    Ttyp_constr "Ppxlib!.value_binding"
                    []
                Tpat_alias "x/1293"
                pattern (src/ppx.ml[47,1113+31]..src/ppx.ml[47,1113+32])
                  Tpat_any
              expression (src/ppx.ml[48,1171+2]..src/ppx.ml[59,1617+75])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[47,1113+52]..src/ppx.ml[47,1113+56])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[48,1171+8]..src/ppx.ml[48,1171+9])
                  Texp_ident "x/1293"
                [
                  <case>
                    pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                      Tpat_value
                      pattern (src/ppx.ml[49,1186+4]..src/ppx.ml[54,1327+3])
                        Tpat_record
                        [
                          "pvb_pat"
                            pattern (src/ppx.ml[50,1192+4]..src/ppx.ml[50,1192+11])
                              Tpat_var "pvb_pat/1294"
                          "pvb_expr"
                            pattern (src/ppx.ml[51,1222+4]..src/ppx.ml[51,1222+12])
                              Tpat_var "pvb_expr/1295"
                          "pvb_attributes"
                            pattern (src/ppx.ml[52,1256+4]..src/ppx.ml[52,1256+18])
                              Tpat_var "pvb_attributes/1296"
                          "pvb_loc"
                            pattern (src/ppx.ml[53,1296+4]..src/ppx.ml[53,1296+11])
                              Tpat_var "pvb_loc/1297"
                        ]
                    expression (src/ppx.ml[55,1334+4]..src/ppx.ml[59,1617+75])
                      Texp_sequence
                      expression (src/ppx.ml[55,1334+4]..src/ppx.ml[55,1334+75])
                        Texp_apply
                        expression (src/ppx.ml[55,1334+5]..src/ppx.ml[55,1334+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[55,1334+19]..src/ppx.ml[55,1334+74])
                              Texp_apply
                              expression (src/ppx.ml[55,1334+20]..src/ppx.ml[55,1334+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[55,1334+35]..src/ppx.ml[55,1334+73])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[55,1334+36]..src/ppx.ml[55,1334+62])
                                        Texp_constant Const_string("DEBUG:value_binding.pat:",(src/ppx.ml[55,1334+37]..src/ppx.ml[55,1334+61]),None)
                                      expression (src/ppx.ml[55,1334+64]..src/ppx.ml[55,1334+71])
                                        Texp_ident "pvb_pat/1294"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[56,1411+4]..src/ppx.ml[59,1617+75])
                        Texp_sequence
                        expression (src/ppx.ml[56,1411+4]..src/ppx.ml[56,1411+77])
                          Texp_apply
                          expression (src/ppx.ml[56,1411+5]..src/ppx.ml[56,1411+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[56,1411+19]..src/ppx.ml[56,1411+76])
                                Texp_apply
                                expression (src/ppx.ml[56,1411+20]..src/ppx.ml[56,1411+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[56,1411+35]..src/ppx.ml[56,1411+75])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[56,1411+36]..src/ppx.ml[56,1411+63])
                                          Texp_constant Const_string("DEBUG:value_binding.expr:",(src/ppx.ml[56,1411+37]..src/ppx.ml[56,1411+62]),None)
                                        expression (src/ppx.ml[56,1411+65]..src/ppx.ml[56,1411+73])
                                          Texp_ident "pvb_expr/1295"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[58,1532+4]..src/ppx.ml[59,1617+75])
                          Texp_sequence
                          expression (src/ppx.ml[58,1532+4]..src/ppx.ml[58,1532+83])
                            Texp_apply
                            expression (src/ppx.ml[58,1532+5]..src/ppx.ml[58,1532+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[58,1532+19]..src/ppx.ml[58,1532+82])
                                  Texp_apply
                                  expression (src/ppx.ml[58,1532+20]..src/ppx.ml[58,1532+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[58,1532+35]..src/ppx.ml[58,1532+81])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[58,1532+36]..src/ppx.ml[58,1532+63])
                                            Texp_constant Const_string("DEBUG:value_binding.atrr:",(src/ppx.ml[58,1532+37]..src/ppx.ml[58,1532+62]),None)
                                          expression (src/ppx.ml[58,1532+65]..src/ppx.ml[58,1532+79])
                                            Texp_ident "pvb_attributes/1296"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[59,1617+4]..src/ppx.ml[59,1617+75])
                            Texp_apply
                            expression (src/ppx.ml[59,1617+5]..src/ppx.ml[59,1617+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[59,1617+19]..src/ppx.ml[59,1617+74])
                                  Texp_apply
                                  expression (src/ppx.ml[59,1617+20]..src/ppx.ml[59,1617+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[59,1617+35]..src/ppx.ml[59,1617+73])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[59,1617+36]..src/ppx.ml[59,1617+62])
                                            Texp_constant Const_string("DEBUG:value_binding.loc:",(src/ppx.ml[59,1617+37]..src/ppx.ml[59,1617+61]),None)
                                          expression (src/ppx.ml[59,1617+64]..src/ppx.ml[59,1617+71])
                                            Texp_ident "pvb_loc/1297"
                                        ]
                                  ]
                            ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[61,1694+0]..src/ppx.ml[67,1871+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[61,1694+8]..src/ppx.ml[61,1694+32])
          Tpat_var "print_value_binding_list/1298"
        expression (src/ppx.ml[61,1694+33]..src/ppx.ml[67,1871+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+56])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[61,1694+38]..src/ppx.ml[61,1694+51])
                        Ttyp_constr "Ppxlib!.value_binding"
                        []
                    ]
                Tpat_alias "x/1299"
                pattern (src/ppx.ml[61,1694+34]..src/ppx.ml[61,1694+35])
                  Tpat_any
              expression (src/ppx.ml[62,1760+2]..src/ppx.ml[67,1871+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[61,1694+60]..src/ppx.ml[61,1694+64])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[62,1760+8]..src/ppx.ml[62,1760+9])
                  Texp_ident "x/1299"
                [
                  <case>
                    pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                      Tpat_value
                      pattern (src/ppx.ml[63,1775+4]..src/ppx.ml[63,1775+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[63,1775+10]..src/ppx.ml[63,1775+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                      Tpat_value
                      pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[64,1788+4]..src/ppx.ml[64,1788+5])
                            Tpat_var "h/1300"
                          pattern (src/ppx.ml[64,1788+9]..src/ppx.ml[64,1788+10])
                            Tpat_var "t/1301"
                        ]
                        None
                    expression (src/ppx.ml[65,1802+4]..src/ppx.ml[67,1871+6])
                      Texp_sequence
                      expression (src/ppx.ml[65,1802+4]..src/ppx.ml[65,1802+33])
                        Texp_apply
                        expression (src/ppx.ml[65,1802+5]..src/ppx.ml[65,1802+30])
                          Texp_ident "print_value_binding_list2/1291"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[65,1802+31]..src/ppx.ml[65,1802+32])
                              Texp_ident "h/1300"
                        ]
                      expression (src/ppx.ml[66,1837+4]..src/ppx.ml[67,1871+6])
                        Texp_sequence
                        expression (src/ppx.ml[66,1837+4]..src/ppx.ml[66,1837+32])
                          Texp_apply
                          expression (src/ppx.ml[66,1837+5]..src/ppx.ml[66,1837+29])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[66,1837+30]..src/ppx.ml[66,1837+31])
                                Texp_ident "t/1301"
                          ]
                        expression (src/ppx.ml[67,1871+4]..src/ppx.ml[67,1871+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[69,1879+0]..src/ppx.ml[73,2009+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[69,1879+4]..src/ppx.ml[69,1879+14])
          Tpat_var "process_id/1437"
        expression (src/ppx.ml[69,1879+14]..src/ppx.ml[73,2009+7]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[69,1879+17]..src/ppx.ml[69,1879+30])
                    Ttyp_constr "Ppxlib!.longident_loc"
                    []
                Tpat_alias "x/1439"
                pattern (src/ppx.ml[69,1879+15]..src/ppx.ml[69,1879+16])
                  Tpat_any
              expression (src/ppx.ml[70,1913+2]..src/ppx.ml[73,2009+7])
                Texp_match
                expression (src/ppx.ml[70,1913+8]..src/ppx.ml[70,1913+9])
                  Texp_ident "x/1439"
                [
                  <case>
                    pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                      Tpat_value
                      pattern (src/ppx.ml[71,1928+4]..src/ppx.ml[71,1928+11])
                        Tpat_record
                        [
                          "txt"
                            pattern (src/ppx.ml[71,1928+5]..src/ppx.ml[71,1928+8])
                              Tpat_var "txt/1723"
                        ]
                    expression (src/ppx.ml[72,1943+4]..src/ppx.ml[73,2009+7])
                      Texp_sequence
                      expression (src/ppx.ml[72,1943+4]..src/ppx.ml[72,1943+64])
                        Texp_apply
                        expression (src/ppx.ml[72,1943+5]..src/ppx.ml[72,1943+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[72,1943+19]..src/ppx.ml[72,1943+63])
                              Texp_apply
                              expression (src/ppx.ml[72,1943+20]..src/ppx.ml[72,1943+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[72,1943+35]..src/ppx.ml[72,1943+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[72,1943+36]..src/ppx.ml[72,1943+55])
                                        Texp_constant Const_string("DEBUG:process_id:",(src/ppx.ml[72,1943+37]..src/ppx.ml[72,1943+54]),None)
                                      expression (src/ppx.ml[72,1943+58]..src/ppx.ml[72,1943+61])
                                        Texp_ident "txt/1723"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[73,2009+4]..src/ppx.ml[73,2009+7])
                        Texp_ident "txt/1723"
                ]
          ]
    ]
  structure_item (src/ppx.ml[75,2020+0]..src/ppx.ml[156,4869+29])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[75,2020+8]..src/ppx.ml[75,2020+27])
          Tpat_var "process_record_kind/1724"
        expression (src/ppx.ml[75,2020+27]..src/ppx.ml[89,2504+47]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[75,2020+27]..src/ppx.ml[75,2020+30])
                Tpat_var "x/1729"
              expression (src/ppx.ml[76,2053+2]..src/ppx.ml[89,2504+47])
                Texp_match
                expression (src/ppx.ml[76,2053+8]..src/ppx.ml[76,2053+9])
                  Texp_ident "x/1729"
                [
                  <case>
                    pattern (src/ppx.ml[77,2068+4]..src/ppx.ml[83,2249+4])
                      Tpat_value
                      pattern (src/ppx.ml[77,2068+4]..src/ppx.ml[83,2249+4])
                        Tpat_record
                        [
                          "pld_name"
                            pattern (src/ppx.ml[78,2074+5]..src/ppx.ml[78,2074+13])
                              Tpat_var "pld_name/1730"
                          "pld_mutable"
                            pattern (src/ppx.ml[79,2107+5]..src/ppx.ml[79,2107+16])
                              Tpat_var "pld_mutable/1731"
                          "pld_type"
                            pattern (src/ppx.ml[80,2145+5]..src/ppx.ml[80,2145+13])
                              Tpat_var "pld_type/1732"
                          "pld_loc"
                            pattern (src/ppx.ml[81,2177+5]..src/ppx.ml[81,2177+12])
                              Tpat_var "pld_loc/1733"
                          "pld_attributes"
                            pattern (src/ppx.ml[82,2209+5]..src/ppx.ml[82,2209+19])
                              Tpat_var "pld_attributes/1734"
                        ]
                    expression (src/ppx.ml[84,2257+4]..src/ppx.ml[89,2504+47])
                      Texp_apply
                      expression (src/ppx.ml[84,2257+5]..src/ppx.ml[84,2257+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[84,2257+19]..src/ppx.ml[89,2504+46])
                            Texp_apply
                            expression (src/ppx.ml[84,2257+20]..src/ppx.ml[84,2257+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[84,2257+35]..src/ppx.ml[89,2504+45])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[84,2257+36]..src/ppx.ml[84,2257+57])
                                      Texp_constant Const_string("DEBUG:precord_kind:",(src/ppx.ml[84,2257+37]..src/ppx.ml[84,2257+56]),None)
                                    expression (src/ppx.ml[85,2318+36]..src/ppx.ml[85,2318+44])
                                      Texp_ident "pld_name/1730"
                                    expression (src/ppx.ml[86,2364+36]..src/ppx.ml[86,2364+45])
                                      Texp_constant Const_string("mutable",(src/ppx.ml[86,2364+37]..src/ppx.ml[86,2364+44]),None)
                                    expression (src/ppx.ml[87,2411+36]..src/ppx.ml[87,2411+47])
                                      Texp_ident "pld_mutable/1731"
                                    expression (src/ppx.ml[88,2460+36]..src/ppx.ml[88,2460+42])
                                      Texp_constant Const_string("type",(src/ppx.ml[88,2460+37]..src/ppx.ml[88,2460+41]),None)
                                    expression (src/ppx.ml[89,2504+36]..src/ppx.ml[89,2504+44])
                                      Texp_ident "pld_type/1732"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[91,2556+0]..src/ppx.ml[91,2556+22])
          Tpat_var "process_core_type_desc/1725"
        expression (src/ppx.ml[91,2556+23]..src/ppx.ml[130,4187+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[91,2556+23]..src/ppx.ml[91,2556+24])
                Tpat_var "x/1735"
              expression (src/ppx.ml[92,2583+2]..src/ppx.ml[130,4187+65])
                Texp_match
                expression (src/ppx.ml[92,2583+8]..src/ppx.ml[92,2583+9])
                  Texp_ident "x/1735"
                [
                  <case>
                    pattern (src/ppx.ml[93,2598+4]..src/ppx.ml[93,2598+21])
                      Tpat_value
                      pattern (src/ppx.ml[93,2598+4]..src/ppx.ml[93,2598+21])
                        Tpat_construct "Ptyp_constr"
                        [
                          pattern (src/ppx.ml[93,2598+17]..src/ppx.ml[93,2598+18])
                            Tpat_var "a/1736"
                          pattern (src/ppx.ml[93,2598+19]..src/ppx.ml[93,2598+20])
                            Tpat_var "b/1737"
                        ]
                        None
                    expression (src/ppx.ml[95,2669+4]..src/ppx.ml[97,2735+91])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[95,2669+8]..src/ppx.ml[95,2669+12])
                            Tpat_var "myid/1756"
                          expression (src/ppx.ml[95,2669+15]..src/ppx.ml[95,2669+29])
                            Texp_apply
                            expression (src/ppx.ml[95,2669+16]..src/ppx.ml[95,2669+26])
                              Texp_ident "process_id/1437"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[95,2669+27]..src/ppx.ml[95,2669+28])
                                  Texp_ident "a/1736"
                            ]
                      ]
                      expression (src/ppx.ml[96,2702+4]..src/ppx.ml[97,2735+91])
                        Texp_sequence
                        expression (src/ppx.ml[96,2702+4]..src/ppx.ml[96,2702+30])
                          Texp_apply
                          expression (src/ppx.ml[96,2702+5]..src/ppx.ml[96,2702+27])
                            Texp_ident "process_core_type_list/1728"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[96,2702+28]..src/ppx.ml[96,2702+29])
                                Texp_ident "b/1737"
                          ]
                        expression (src/ppx.ml[97,2735+4]..src/ppx.ml[97,2735+91])
                          Texp_apply
                          expression (src/ppx.ml[97,2735+5]..src/ppx.ml[97,2735+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[97,2735+19]..src/ppx.ml[97,2735+90])
                                Texp_apply
                                expression (src/ppx.ml[97,2735+20]..src/ppx.ml[97,2735+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[97,2735+35]..src/ppx.ml[97,2735+89])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[97,2735+36]..src/ppx.ml[97,2735+56])
                                          Texp_constant Const_string("DEBUG:Ptyp_constr:",(src/ppx.ml[97,2735+37]..src/ppx.ml[97,2735+55]),None)
                                        expression (src/ppx.ml[97,2735+58]..src/ppx.ml[97,2735+62])
                                          Texp_constant Const_string("id",(src/ppx.ml[97,2735+59]..src/ppx.ml[97,2735+61]),None)
                                        expression (src/ppx.ml[97,2735+63]..src/ppx.ml[97,2735+64])
                                          Texp_ident "a/1736"
                                        expression (src/ppx.ml[97,2735+66]..src/ppx.ml[97,2735+73])
                                          Texp_constant Const_string("types",(src/ppx.ml[97,2735+67]..src/ppx.ml[97,2735+72]),None)
                                        expression (src/ppx.ml[97,2735+74]..src/ppx.ml[97,2735+75])
                                          Texp_ident "b/1737"
                                        expression (src/ppx.ml[97,2735+78]..src/ppx.ml[97,2735+83])
                                          Texp_constant Const_string("id2",(src/ppx.ml[97,2735+79]..src/ppx.ml[97,2735+82]),None)
                                        expression (src/ppx.ml[97,2735+84]..src/ppx.ml[97,2735+88])
                                          Texp_ident "myid/1756"
                                      ]
                                ]
                          ]
                  <case>
                    pattern (src/ppx.ml[99,2828+4]..src/ppx.ml[99,2828+16])
                      Tpat_value
                      pattern (src/ppx.ml[99,2828+4]..src/ppx.ml[99,2828+16])
                        Tpat_construct "Ptyp_tuple"
                        [
                          pattern (src/ppx.ml[99,2828+15]..src/ppx.ml[99,2828+16])
                            Tpat_var "a/1738"
                        ]
                        None
                    expression (src/ppx.ml[101,2876+4]..src/ppx.ml[101,2876+59])
                      Texp_apply
                      expression (src/ppx.ml[101,2876+5]..src/ppx.ml[101,2876+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[101,2876+19]..src/ppx.ml[101,2876+58])
                            Texp_apply
                            expression (src/ppx.ml[101,2876+20]..src/ppx.ml[101,2876+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[101,2876+35]..src/ppx.ml[101,2876+57])
                                  Texp_constant Const_string("DEBUG:Ptyp_tuple:",(src/ppx.ml[101,2876+37]..src/ppx.ml[101,2876+54]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[104,2955+4]..src/ppx.ml[104,2955+12])
                      Tpat_value
                      pattern (src/ppx.ml[104,2955+4]..src/ppx.ml[104,2955+12])
                        Tpat_construct "Ptyp_any"
                        []
                        None
                    expression (src/ppx.ml[104,2955+17]..src/ppx.ml[104,2955+69])
                      Texp_apply
                      expression (src/ppx.ml[104,2955+18]..src/ppx.ml[104,2955+31])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[104,2955+32]..src/ppx.ml[104,2955+68])
                            Texp_apply
                            expression (src/ppx.ml[104,2955+33]..src/ppx.ml[104,2955+47])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[104,2955+48]..src/ppx.ml[104,2955+67])
                                  Texp_constant Const_string("DEBUG:Ptyp_any:",(src/ppx.ml[104,2955+50]..src/ppx.ml[104,2955+65]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[105,3025+4]..src/ppx.ml[105,3025+17])
                      Tpat_value
                      pattern (src/ppx.ml[105,3025+4]..src/ppx.ml[105,3025+17])
                        Tpat_construct "Ptyp_var"
                        [
                          pattern (src/ppx.ml[105,3025+13]..src/ppx.ml[105,3025+17])
                            Tpat_var "name/1739"
                        ]
                        None
                    expression (src/ppx.ml[105,3025+20]..src/ppx.ml[105,3025+80])
                      Texp_apply
                      expression (src/ppx.ml[105,3025+21]..src/ppx.ml[105,3025+34])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[105,3025+35]..src/ppx.ml[105,3025+79])
                            Texp_apply
                            expression (src/ppx.ml[105,3025+36]..src/ppx.ml[105,3025+50])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[105,3025+51]..src/ppx.ml[105,3025+78])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[105,3025+52]..src/ppx.ml[105,3025+69])
                                      Texp_constant Const_string("DEBUG:Ptyp_var:",(src/ppx.ml[105,3025+53]..src/ppx.ml[105,3025+68]),None)
                                    expression (src/ppx.ml[105,3025+73]..src/ppx.ml[105,3025+77])
                                      Texp_ident "name/1739"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[106,3106+4]..src/ppx.ml[106,3106+51])
                      Tpat_value
                      pattern (src/ppx.ml[106,3106+4]..src/ppx.ml[106,3106+51])
                        Tpat_construct "Ptyp_arrow"
                        [
                          pattern (src/ppx.ml[106,3106+16]..src/ppx.ml[106,3106+25])
                            Tpat_var "arg_label/1740"
                          pattern (src/ppx.ml[106,3106+28]..src/ppx.ml[106,3106+37])
                            Tpat_var "core_type/1741"
                          pattern (src/ppx.ml[106,3106+40]..src/ppx.ml[106,3106+50])
                            Tpat_var "core_type2/1742"
                        ]
                        None
                    expression (src/ppx.ml[107,3161+4]..src/ppx.ml[107,3161+61])
                      Texp_apply
                      expression (src/ppx.ml[107,3161+5]..src/ppx.ml[107,3161+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[107,3161+19]..src/ppx.ml[107,3161+60])
                            Texp_apply
                            expression (src/ppx.ml[107,3161+20]..src/ppx.ml[107,3161+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[107,3161+35]..src/ppx.ml[107,3161+59])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow10:",(src/ppx.ml[107,3161+37]..src/ppx.ml[107,3161+56]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[109,3224+4]..src/ppx.ml[109,3224+21])
                      Tpat_value
                      pattern (src/ppx.ml[109,3224+4]..src/ppx.ml[109,3224+21])
                        Tpat_construct "Ptyp_object"
                        [
                          pattern (src/ppx.ml[109,3224+17]..src/ppx.ml[109,3224+18])
                            Tpat_var "a/1743"
                          pattern (src/ppx.ml[109,3224+19]..src/ppx.ml[109,3224+20])
                            Tpat_var "b/1744"
                        ]
                        None
                    expression (src/ppx.ml[111,3293+4]..src/ppx.ml[111,3293+60])
                      Texp_apply
                      expression (src/ppx.ml[111,3293+5]..src/ppx.ml[111,3293+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[111,3293+19]..src/ppx.ml[111,3293+59])
                            Texp_apply
                            expression (src/ppx.ml[111,3293+20]..src/ppx.ml[111,3293+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[111,3293+35]..src/ppx.ml[111,3293+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow8:",(src/ppx.ml[111,3293+37]..src/ppx.ml[111,3293+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[112,3354+4]..src/ppx.ml[112,3354+20])
                      Tpat_value
                      pattern (src/ppx.ml[112,3354+4]..src/ppx.ml[112,3354+20])
                        Tpat_construct "Ptyp_class"
                        [
                          pattern (src/ppx.ml[112,3354+16]..src/ppx.ml[112,3354+17])
                            Tpat_var "a/1745"
                          pattern (src/ppx.ml[112,3354+18]..src/ppx.ml[112,3354+19])
                            Tpat_var "b/1746"
                        ]
                        None
                    expression (src/ppx.ml[114,3424+4]..src/ppx.ml[114,3424+60])
                      Texp_apply
                      expression (src/ppx.ml[114,3424+5]..src/ppx.ml[114,3424+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[114,3424+19]..src/ppx.ml[114,3424+59])
                            Texp_apply
                            expression (src/ppx.ml[114,3424+20]..src/ppx.ml[114,3424+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[114,3424+35]..src/ppx.ml[114,3424+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow7:",(src/ppx.ml[114,3424+37]..src/ppx.ml[114,3424+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[115,3485+4]..src/ppx.ml[115,3485+20])
                      Tpat_value
                      pattern (src/ppx.ml[115,3485+4]..src/ppx.ml[115,3485+20])
                        Tpat_construct "Ptyp_alias"
                        [
                          pattern (src/ppx.ml[115,3485+16]..src/ppx.ml[115,3485+17])
                            Tpat_var "a/1747"
                          pattern (src/ppx.ml[115,3485+18]..src/ppx.ml[115,3485+19])
                            Tpat_var "b/1748"
                        ]
                        None
                    expression (src/ppx.ml[117,3546+4]..src/ppx.ml[117,3546+60])
                      Texp_apply
                      expression (src/ppx.ml[117,3546+5]..src/ppx.ml[117,3546+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[117,3546+19]..src/ppx.ml[117,3546+59])
                            Texp_apply
                            expression (src/ppx.ml[117,3546+20]..src/ppx.ml[117,3546+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[117,3546+35]..src/ppx.ml[117,3546+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow6:",(src/ppx.ml[117,3546+37]..src/ppx.ml[117,3546+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[118,3607+4]..src/ppx.ml[118,3607+24])
                      Tpat_value
                      pattern (src/ppx.ml[118,3607+4]..src/ppx.ml[118,3607+24])
                        Tpat_construct "Ptyp_variant"
                        [
                          pattern (src/ppx.ml[118,3607+18]..src/ppx.ml[118,3607+19])
                            Tpat_var "a/1749"
                          pattern (src/ppx.ml[118,3607+20]..src/ppx.ml[118,3607+21])
                            Tpat_var "b/1750"
                          pattern (src/ppx.ml[118,3607+22]..src/ppx.ml[118,3607+23])
                            Tpat_var "c/1751"
                        ]
                        None
                    expression (src/ppx.ml[120,3697+4]..src/ppx.ml[120,3697+60])
                      Texp_apply
                      expression (src/ppx.ml[120,3697+5]..src/ppx.ml[120,3697+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[120,3697+19]..src/ppx.ml[120,3697+59])
                            Texp_apply
                            expression (src/ppx.ml[120,3697+20]..src/ppx.ml[120,3697+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[120,3697+35]..src/ppx.ml[120,3697+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow5:",(src/ppx.ml[120,3697+37]..src/ppx.ml[120,3697+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[121,3758+4]..src/ppx.ml[121,3758+19])
                      Tpat_value
                      pattern (src/ppx.ml[121,3758+4]..src/ppx.ml[121,3758+19])
                        Tpat_construct "Ptyp_poly"
                        [
                          pattern (src/ppx.ml[121,3758+15]..src/ppx.ml[121,3758+16])
                            Tpat_var "a/1752"
                          pattern (src/ppx.ml[121,3758+17]..src/ppx.ml[121,3758+18])
                            Tpat_var "b/1753"
                        ]
                        None
                    expression (src/ppx.ml[123,3822+4]..src/ppx.ml[123,3822+60])
                      Texp_apply
                      expression (src/ppx.ml[123,3822+5]..src/ppx.ml[123,3822+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[123,3822+19]..src/ppx.ml[123,3822+59])
                            Texp_apply
                            expression (src/ppx.ml[123,3822+20]..src/ppx.ml[123,3822+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[123,3822+35]..src/ppx.ml[123,3822+58])
                                  Texp_constant Const_string("DEBUG:Ptyp_arrow4:",(src/ppx.ml[123,3822+37]..src/ppx.ml[123,3822+55]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[124,3883+4]..src/ppx.ml[124,3883+18])
                      Tpat_value
                      pattern (src/ppx.ml[124,3883+4]..src/ppx.ml[124,3883+18])
                        Tpat_construct "Ptyp_package"
                        [
                          pattern (src/ppx.ml[124,3883+17]..src/ppx.ml[124,3883+18])
                            Tpat_var "a/1754"
                        ]
                        None
                    expression (src/ppx.ml[126,3931+4]..src/ppx.ml[126,3931+62])
                      Texp_apply
                      expression (src/ppx.ml[126,3931+5]..src/ppx.ml[126,3931+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[126,3931+19]..src/ppx.ml[126,3931+61])
                            Texp_apply
                            expression (src/ppx.ml[126,3931+20]..src/ppx.ml[126,3931+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[126,3931+35]..src/ppx.ml[126,3931+60])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[126,3931+36]..src/ppx.ml[126,3931+56])
                                      Texp_constant Const_string("DEBUG:Ptyp_arrow3:",(src/ppx.ml[126,3931+37]..src/ppx.ml[126,3931+55]),None)
                                    expression (src/ppx.ml[126,3931+57]..src/ppx.ml[126,3931+58])
                                      Texp_ident "a/1754"
                                  ]
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[129,4139+4]..src/ppx.ml[129,4139+20])
                      Tpat_value
                      pattern (src/ppx.ml[129,4139+4]..src/ppx.ml[129,4139+20])
                        Tpat_construct "Ptyp_extension"
                        [
                          pattern (src/ppx.ml[129,4139+19]..src/ppx.ml[129,4139+20])
                            Tpat_var "a/1755"
                        ]
                        None
                    expression (src/ppx.ml[130,4187+4]..src/ppx.ml[130,4187+65])
                      Texp_apply
                      expression (src/ppx.ml[130,4187+5]..src/ppx.ml[130,4187+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[130,4187+19]..src/ppx.ml[130,4187+64])
                            Texp_apply
                            expression (src/ppx.ml[130,4187+20]..src/ppx.ml[130,4187+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[130,4187+35]..src/ppx.ml[130,4187+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[130,4187+36]..src/ppx.ml[130,4187+59])
                                      Texp_constant Const_string("DEBUG:Ptyp_extension:",(src/ppx.ml[130,4187+37]..src/ppx.ml[130,4187+58]),None)
                                    expression (src/ppx.ml[130,4187+60]..src/ppx.ml[130,4187+61])
                                      Texp_ident "a/1755"
                                  ]
                            ]
                      ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[132,4257+2]..src/ppx.ml[132,4257+26])
          Tpat_var "process_record_kind_list/1726"
        expression (src/ppx.ml[132,4257+26]..src/ppx.ml[138,4394+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[132,4257+26]..src/ppx.ml[132,4257+29])
                Tpat_var "x/1796"
              expression (src/ppx.ml[133,4289+2]..src/ppx.ml[138,4394+6])
                Texp_match
                expression (src/ppx.ml[133,4289+8]..src/ppx.ml[133,4289+9])
                  Texp_ident "x/1796"
                [
                  <case>
                    pattern (src/ppx.ml[134,4304+4]..src/ppx.ml[134,4304+6])
                      Tpat_value
                      pattern (src/ppx.ml[134,4304+4]..src/ppx.ml[134,4304+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[134,4304+10]..src/ppx.ml[134,4304+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[135,4317+4]..src/ppx.ml[135,4317+10])
                      Tpat_value
                      pattern (src/ppx.ml[135,4317+4]..src/ppx.ml[135,4317+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[135,4317+4]..src/ppx.ml[135,4317+5])
                            Tpat_var "h/1797"
                          pattern (src/ppx.ml[135,4317+9]..src/ppx.ml[135,4317+10])
                            Tpat_var "t/1798"
                        ]
                        None
                    expression (src/ppx.ml[136,4331+4]..src/ppx.ml[138,4394+6])
                      Texp_sequence
                      expression (src/ppx.ml[136,4331+4]..src/ppx.ml[136,4331+27])
                        Texp_apply
                        expression (src/ppx.ml[136,4331+5]..src/ppx.ml[136,4331+24])
                          Texp_ident "process_record_kind/1724"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[136,4331+25]..src/ppx.ml[136,4331+26])
                              Texp_ident "h/1797"
                        ]
                      expression (src/ppx.ml[137,4360+4]..src/ppx.ml[138,4394+6])
                        Texp_sequence
                        expression (src/ppx.ml[137,4360+4]..src/ppx.ml[137,4360+32])
                          Texp_apply
                          expression (src/ppx.ml[137,4360+5]..src/ppx.ml[137,4360+29])
                            Texp_ident "process_record_kind_list/1726"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[137,4360+30]..src/ppx.ml[137,4360+31])
                                Texp_ident "t/1798"
                          ]
                        expression (src/ppx.ml[138,4394+4]..src/ppx.ml[138,4394+6])
                          Texp_construct "()"
                          []
                ]
          ]
      <def>
        pattern (src/ppx.ml[140,4405+0]..src/ppx.ml[140,4405+17])
          Tpat_var "process_core_type/1727"
        expression (src/ppx.ml[140,4405+17]..src/ppx.ml[150,4672+80]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[140,4405+17]..src/ppx.ml[140,4405+20])
                Tpat_var "x/1799"
              expression (src/ppx.ml[141,4428+2]..src/ppx.ml[150,4672+80])
                Texp_match
                expression (src/ppx.ml[141,4428+8]..src/ppx.ml[141,4428+9])
                  Texp_ident "x/1799"
                [
                  <case>
                    pattern (src/ppx.ml[142,4444+4]..src/ppx.ml[147,4605+5])
                      Tpat_value
                      pattern (src/ppx.ml[142,4444+4]..src/ppx.ml[147,4605+5])
                        Tpat_record
                        [
                          "ptyp_desc"
                            pattern (src/ppx.ml[143,4450+6]..src/ppx.ml[143,4450+15])
                              Tpat_var "ptyp_desc/1800"
                          "ptyp_loc"
                            pattern (src/ppx.ml[144,4489+5]..src/ppx.ml[144,4489+13])
                              Tpat_var "ptyp_loc/1801"
                          "ptyp_loc_stack"
                            pattern (src/ppx.ml[145,4522+5]..src/ppx.ml[145,4522+19])
                              Tpat_var "ptyp_loc_stack/1802"
                          "ptyp_attributes"
                            pattern (src/ppx.ml[146,4565+5]..src/ppx.ml[146,4565+20])
                              Tpat_var "ptyp_attributes/1803"
                        ]
                    expression (src/ppx.ml[148,4613+4]..src/ppx.ml[150,4672+80])
                      Texp_sequence
                      expression (src/ppx.ml[148,4613+4]..src/ppx.ml[148,4613+38])
                        Texp_apply
                        expression (src/ppx.ml[148,4613+5]..src/ppx.ml[148,4613+27])
                          Texp_ident "process_core_type_desc/1725"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[148,4613+28]..src/ppx.ml[148,4613+37])
                              Texp_ident "ptyp_desc/1800"
                        ]
                      expression (src/ppx.ml[150,4672+4]..src/ppx.ml[150,4672+80])
                        Texp_apply
                        expression (src/ppx.ml[150,4672+5]..src/ppx.ml[150,4672+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[150,4672+19]..src/ppx.ml[150,4672+79])
                              Texp_apply
                              expression (src/ppx.ml[150,4672+20]..src/ppx.ml[150,4672+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[150,4672+35]..src/ppx.ml[150,4672+78])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[150,4672+36]..src/ppx.ml[150,4672+64])
                                        Texp_constant Const_string("DEBUG:core_type.ptyp_desc:",(src/ppx.ml[150,4672+37]..src/ppx.ml[150,4672+63]),None)
                                      expression (src/ppx.ml[150,4672+68]..src/ppx.ml[150,4672+77])
                                        Texp_ident "ptyp_desc/1800"
                                    ]
                              ]
                        ]
                ]
          ]
      <def>
        pattern (src/ppx.ml[151,4753+4]..src/ppx.ml[151,4753+26])
          Tpat_var "process_core_type_list/1728"
        expression (src/ppx.ml[151,4753+26]..src/ppx.ml[156,4869+29]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[151,4753+27]..src/ppx.ml[151,4753+28])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[151,4753+29]..src/ppx.ml[151,4753+43])
                    Ttyp_constr "list/9!"
                    [
                      core_type (src/ppx.ml[151,4753+29]..src/ppx.ml[151,4753+38])
                        Ttyp_constr "Ppxlib!.core_type"
                        []
                    ]
                Tpat_alias "x/1804"
                pattern (src/ppx.ml[151,4753+27]..src/ppx.ml[151,4753+28])
                  Tpat_any
              expression (src/ppx.ml[152,4800+2]..src/ppx.ml[156,4869+29])
                Texp_match
                expression (src/ppx.ml[152,4800+8]..src/ppx.ml[152,4800+9])
                  Texp_ident "x/1804"
                [
                  <case>
                    pattern (src/ppx.ml[153,4815+4]..src/ppx.ml[153,4815+6])
                      Tpat_value
                      pattern (src/ppx.ml[153,4815+4]..src/ppx.ml[153,4815+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[153,4815+10]..src/ppx.ml[153,4815+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[154,4828+4]..src/ppx.ml[154,4828+10])
                      Tpat_value
                      pattern (src/ppx.ml[154,4828+4]..src/ppx.ml[154,4828+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[154,4828+4]..src/ppx.ml[154,4828+5])
                            Tpat_var "h/1805"
                          pattern (src/ppx.ml[154,4828+9]..src/ppx.ml[154,4828+10])
                            Tpat_var "t/1806"
                        ]
                        None
                    expression (src/ppx.ml[155,4842+4]..src/ppx.ml[156,4869+29])
                      Texp_sequence
                      expression (src/ppx.ml[155,4842+4]..src/ppx.ml[155,4842+25])
                        Texp_apply
                        expression (src/ppx.ml[155,4842+4]..src/ppx.ml[155,4842+21])
                          Texp_ident "process_core_type/1727"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[155,4842+22]..src/ppx.ml[155,4842+25])
                              Texp_ident "h/1805"
                        ]
                      expression (src/ppx.ml[156,4869+4]..src/ppx.ml[156,4869+29])
                        Texp_apply
                        expression (src/ppx.ml[156,4869+4]..src/ppx.ml[156,4869+26])
                          Texp_ident "process_core_type_list/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[156,4869+26]..src/ppx.ml[156,4869+29])
                              Texp_ident "t/1806"
                        ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[163,4913+0]..src/ppx.ml[170,5112+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[163,4913+4]..src/ppx.ml[163,4913+31])
          Tpat_var "print_constructor_arguments/1807"
        expression (src/ppx.ml[163,4913+31]..src/ppx.ml[170,5112+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[163,4913+31]..src/ppx.ml[163,4913+34])
                Tpat_var "x/1809"
              expression (src/ppx.ml[164,4950+2]..src/ppx.ml[170,5112+65])
                Texp_match
                expression (src/ppx.ml[164,4950+8]..src/ppx.ml[164,4950+9])
                  Texp_ident "x/1809"
                [
                  <case>
                    pattern (src/ppx.ml[165,4965+4]..src/ppx.ml[165,4965+17])
                      Tpat_value
                      pattern (src/ppx.ml[165,4965+4]..src/ppx.ml[165,4965+17])
                        Tpat_construct "Pcstr_tuple"
                        [
                          pattern (src/ppx.ml[165,4965+16]..src/ppx.ml[165,4965+17])
                            Tpat_var "a/1810"
                        ]
                        None
                    expression (src/ppx.ml[166,4986+4]..src/ppx.ml[167,5018+64])
                      Texp_sequence
                      expression (src/ppx.ml[166,4986+4]..src/ppx.ml[166,4986+30])
                        Texp_apply
                        expression (src/ppx.ml[166,4986+5]..src/ppx.ml[166,4986+27])
                          Texp_ident "process_core_type_list/1728"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[166,4986+28]..src/ppx.ml[166,4986+29])
                              Texp_ident "a/1810"
                        ]
                      expression (src/ppx.ml[167,5018+4]..src/ppx.ml[167,5018+64])
                        Texp_apply
                        expression (src/ppx.ml[167,5018+5]..src/ppx.ml[167,5018+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[167,5018+19]..src/ppx.ml[167,5018+63])
                              Texp_apply
                              expression (src/ppx.ml[167,5018+20]..src/ppx.ml[167,5018+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[167,5018+35]..src/ppx.ml[167,5018+62])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[167,5018+36]..src/ppx.ml[167,5018+56])
                                        Texp_constant Const_string("DEBUG:Pcstr_tuple:",(src/ppx.ml[167,5018+37]..src/ppx.ml[167,5018+55]),None)
                                      expression (src/ppx.ml[167,5018+60]..src/ppx.ml[167,5018+61])
                                        Texp_ident "a/1810"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[169,5090+4]..src/ppx.ml[169,5090+18])
                      Tpat_value
                      pattern (src/ppx.ml[169,5090+4]..src/ppx.ml[169,5090+18])
                        Tpat_construct "Pcstr_record"
                        [
                          pattern (src/ppx.ml[169,5090+17]..src/ppx.ml[169,5090+18])
                            Tpat_var "a/1811"
                        ]
                        None
                    expression (src/ppx.ml[170,5112+4]..src/ppx.ml[170,5112+65])
                      Texp_apply
                      expression (src/ppx.ml[170,5112+5]..src/ppx.ml[170,5112+18])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[170,5112+19]..src/ppx.ml[170,5112+64])
                            Texp_apply
                            expression (src/ppx.ml[170,5112+20]..src/ppx.ml[170,5112+34])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[170,5112+35]..src/ppx.ml[170,5112+63])
                                  Texp_tuple
                                  [
                                    expression (src/ppx.ml[170,5112+36]..src/ppx.ml[170,5112+57])
                                      Texp_constant Const_string("DEBUG:Pcstr_record:",(src/ppx.ml[170,5112+37]..src/ppx.ml[170,5112+56]),None)
                                    expression (src/ppx.ml[170,5112+61]..src/ppx.ml[170,5112+62])
                                      Texp_ident "a/1811"
                                  ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[172,5179+0]..src/ppx.ml[204,6155+8])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[172,5179+8]..src/ppx.ml[172,5179+57])
          Tpat_var "process_pype_variant_constructor_declaration_list/1812"
        expression (src/ppx.ml[172,5179+57]..src/ppx.ml[204,6155+8]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[172,5179+57]..src/ppx.ml[172,5179+60])
                Tpat_var "x/1813"
              expression (src/ppx.ml[173,5242+2]..src/ppx.ml[204,6155+8])
                Texp_match
                expression (src/ppx.ml[173,5242+8]..src/ppx.ml[173,5242+9])
                  Texp_ident "x/1813"
                [
                  <case>
                    pattern (src/ppx.ml[174,5257+4]..src/ppx.ml[174,5257+6])
                      Tpat_value
                      pattern (src/ppx.ml[174,5257+4]..src/ppx.ml[174,5257+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[174,5257+10]..src/ppx.ml[174,5257+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[175,5270+4]..src/ppx.ml[175,5270+10])
                      Tpat_value
                      pattern (src/ppx.ml[175,5270+4]..src/ppx.ml[175,5270+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[175,5270+4]..src/ppx.ml[175,5270+5])
                            Tpat_var "h/1814"
                          pattern (src/ppx.ml[175,5270+9]..src/ppx.ml[175,5270+10])
                            Tpat_var "t/1815"
                        ]
                        None
                    expression (src/ppx.ml[177,5349+4]..src/ppx.ml[204,6155+8])
                      Texp_match
                      expression (src/ppx.ml[177,5349+10]..src/ppx.ml[177,5349+11])
                        Texp_ident "h/1814"
                      [
                        <case>
                          pattern (src/ppx.ml[178,5366+5]..src/ppx.ml[185,5604+5])
                            Tpat_value
                            pattern (src/ppx.ml[178,5366+5]..src/ppx.ml[185,5604+5])
                              Tpat_record
                              [
                                "pcd_name"
                                  pattern (src/ppx.ml[179,5373+6]..src/ppx.ml[179,5373+14])
                                    Tpat_var "pcd_name/1816"
                                "pcd_vars"
                                  pattern (src/ppx.ml[180,5407+6]..src/ppx.ml[180,5407+14])
                                    Tpat_var "pcd_vars/1817"
                                "pcd_args"
                                  pattern (src/ppx.ml[181,5446+6]..src/ppx.ml[181,5446+14])
                                    Tpat_var "pcd_args/1818"
                                "pcd_res"
                                  pattern (src/ppx.ml[182,5491+6]..src/ppx.ml[182,5491+13])
                                    Tpat_var "pcd_res/1819"
                                "pcd_loc"
                                  pattern (src/ppx.ml[183,5530+6]..src/ppx.ml[183,5530+13])
                                    Tpat_var "pcd_loc/1820"
                                "pcd_attributes"
                                  pattern (src/ppx.ml[184,5563+6]..src/ppx.ml[184,5563+20])
                                    Tpat_var "pcd_attributes/1821"
                              ]
                          expression (src/ppx.ml[188,5686+6]..src/ppx.ml[204,6155+8])
                            Texp_sequence
                            expression (src/ppx.ml[188,5686+6]..src/ppx.ml[188,5686+43])
                              Texp_apply
                              expression (src/ppx.ml[188,5686+6]..src/ppx.ml[188,5686+33])
                                Texp_ident "print_constructor_arguments/1807"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[188,5686+33]..src/ppx.ml[188,5686+43])
                                    Texp_ident "pcd_args/1818"
                              ]
                            expression (src/ppx.ml[189,5731+6]..src/ppx.ml[204,6155+8])
                              Texp_sequence
                              expression (src/ppx.ml[189,5731+6]..src/ppx.ml[202,6076+16])
                                Texp_apply
                                expression (src/ppx.ml[189,5731+7]..src/ppx.ml[189,5731+20])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[189,5731+21]..src/ppx.ml[202,6076+15])
                                      Texp_apply
                                      expression (src/ppx.ml[189,5731+22]..src/ppx.ml[189,5731+36])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[189,5731+37]..src/ppx.ml[202,6076+14])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[190,5770+11]..src/ppx.ml[190,5770+37])
                                                Texp_constant Const_string("constructor_declaration:",(src/ppx.ml[190,5770+12]..src/ppx.ml[190,5770+36]),None)
                                              expression (src/ppx.ml[191,5809+15]..src/ppx.ml[191,5809+23])
                                                Texp_ident "pcd_name/1816"
                                              expression (src/ppx.ml[192,5834+15]..src/ppx.ml[192,5834+21])
                                                Texp_constant Const_string("vars",(src/ppx.ml[192,5834+16]..src/ppx.ml[192,5834+20]),None)
                                              expression (src/ppx.ml[193,5857+15]..src/ppx.ml[193,5857+23])
                                                Texp_ident "pcd_vars/1817"
                                              expression (src/ppx.ml[194,5882+15]..src/ppx.ml[194,5882+21])
                                                Texp_constant Const_string("args",(src/ppx.ml[194,5882+16]..src/ppx.ml[194,5882+20]),None)
                                              expression (src/ppx.ml[195,5905+15]..src/ppx.ml[195,5905+23])
                                                Texp_ident "pcd_args/1818"
                                              expression (src/ppx.ml[196,5930+15]..src/ppx.ml[196,5930+20])
                                                Texp_constant Const_string("res",(src/ppx.ml[196,5930+16]..src/ppx.ml[196,5930+19]),None)
                                              expression (src/ppx.ml[197,5952+15]..src/ppx.ml[197,5952+22])
                                                Texp_ident "pcd_res/1819"
                                              expression (src/ppx.ml[198,5976+15]..src/ppx.ml[198,5976+20])
                                                Texp_constant Const_string("loc",(src/ppx.ml[198,5976+16]..src/ppx.ml[198,5976+19]),None)
                                              expression (src/ppx.ml[199,5998+15]..src/ppx.ml[199,5998+22])
                                                Texp_ident "pcd_loc/1820"
                                              expression (src/ppx.ml[200,6022+15]..src/ppx.ml[200,6022+22])
                                                Texp_constant Const_string("attrs",(src/ppx.ml[200,6022+16]..src/ppx.ml[200,6022+21]),None)
                                              expression (src/ppx.ml[201,6046+15]..src/ppx.ml[201,6046+29])
                                                Texp_ident "pcd_attributes/1821"
                                            ]
                                      ]
                                ]
                              expression (src/ppx.ml[203,6094+6]..src/ppx.ml[204,6155+8])
                                Texp_sequence
                                expression (src/ppx.ml[203,6094+6]..src/ppx.ml[203,6094+59])
                                  Texp_apply
                                  expression (src/ppx.ml[203,6094+7]..src/ppx.ml[203,6094+56])
                                    Texp_ident "process_pype_variant_constructor_declaration_list/1812"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[203,6094+57]..src/ppx.ml[203,6094+58])
                                        Texp_ident "t/1815"
                                  ]
                                expression (src/ppx.ml[204,6155+6]..src/ppx.ml[204,6155+8])
                                  Texp_construct "()"
                                  []
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[206,6167+0]..src/ppx.ml[217,6564+77])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[206,6167+4]..src/ppx.ml[206,6167+16])
          Tpat_var "process_kind/1822"
        expression (src/ppx.ml[206,6167+16]..src/ppx.ml[217,6564+77]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[206,6167+16]..src/ppx.ml[206,6167+19])
                Tpat_var "x/1824"
              expression (src/ppx.ml[207,6189+2]..src/ppx.ml[217,6564+77])
                Texp_match
                expression (src/ppx.ml[207,6189+8]..src/ppx.ml[207,6189+9])
                  Texp_ident "x/1824"
                [
                  <case>
                    pattern (src/ppx.ml[209,6226+4]..src/ppx.ml[209,6226+18])
                      Tpat_value
                      pattern (src/ppx.ml[209,6226+4]..src/ppx.ml[209,6226+18])
                        Tpat_construct "Ptype_abstract"
                        []
                        None
                    expression (src/ppx.ml[209,6226+23]..src/ppx.ml[209,6226+81])
                      Texp_apply
                      expression (src/ppx.ml[209,6226+24]..src/ppx.ml[209,6226+37])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[209,6226+38]..src/ppx.ml[209,6226+80])
                            Texp_apply
                            expression (src/ppx.ml[209,6226+39]..src/ppx.ml[209,6226+53])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[209,6226+54]..src/ppx.ml[209,6226+79])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[209,6226+56]..src/ppx.ml[209,6226+77]),None)
                            ]
                      ]
                  <case>
                    pattern (src/ppx.ml[210,6308+4]..src/ppx.ml[210,6308+19])
                      Tpat_value
                      pattern (src/ppx.ml[210,6308+4]..src/ppx.ml[210,6308+19])
                        Tpat_construct "Ptype_variant"
                        [
                          pattern (src/ppx.ml[210,6308+18]..src/ppx.ml[210,6308+19])
                            Tpat_var "a/1825"
                        ]
                        None
                    expression (src/ppx.ml[211,6331+4]..src/ppx.ml[212,6390+65])
                      Texp_sequence
                      expression (src/ppx.ml[211,6331+4]..src/ppx.ml[211,6331+57])
                        Texp_apply
                        expression (src/ppx.ml[211,6331+5]..src/ppx.ml[211,6331+54])
                          Texp_ident "process_pype_variant_constructor_declaration_list/1812"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[211,6331+55]..src/ppx.ml[211,6331+56])
                              Texp_ident "a/1825"
                        ]
                      expression (src/ppx.ml[212,6390+4]..src/ppx.ml[212,6390+65])
                        Texp_apply
                        expression (src/ppx.ml[212,6390+5]..src/ppx.ml[212,6390+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[212,6390+19]..src/ppx.ml[212,6390+64])
                              Texp_apply
                              expression (src/ppx.ml[212,6390+20]..src/ppx.ml[212,6390+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[212,6390+35]..src/ppx.ml[212,6390+63])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[212,6390+36]..src/ppx.ml[212,6390+58])
                                        Texp_constant Const_string("DEBUG:Ptype_variant:",(src/ppx.ml[212,6390+37]..src/ppx.ml[212,6390+57]),None)
                                      expression (src/ppx.ml[212,6390+61]..src/ppx.ml[212,6390+62])
                                        Texp_ident "a/1825"
                                    ]
                              ]
                        ]
                  <case>
                    pattern (src/ppx.ml[215,6503+5]..src/ppx.ml[215,6503+19])
                      Tpat_value
                      pattern (src/ppx.ml[215,6503+5]..src/ppx.ml[215,6503+19])
                        Tpat_construct "Ptype_record"
                        [
                          pattern (src/ppx.ml[215,6503+18]..src/ppx.ml[215,6503+19])
                            Tpat_var "a/1826"
                        ]
                        None
                    expression (src/ppx.ml[216,6531+5]..src/ppx.ml[216,6531+32])
                      Texp_apply
                      expression (src/ppx.ml[216,6531+5]..src/ppx.ml[216,6531+29])
                        Texp_ident "process_record_kind_list/1726"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[216,6531+29]..src/ppx.ml[216,6531+32])
                            Texp_ident "a/1826"
                      ]
                  <case>
                    pattern (src/ppx.ml[217,6564+5]..src/ppx.ml[217,6564+15])
                      Tpat_value
                      pattern (src/ppx.ml[217,6564+5]..src/ppx.ml[217,6564+15])
                        Tpat_construct "Ptype_open"
                        []
                        None
                    expression (src/ppx.ml[217,6564+19]..src/ppx.ml[217,6564+77])
                      Texp_apply
                      expression (src/ppx.ml[217,6564+20]..src/ppx.ml[217,6564+33])
                        Texp_ident "Stdlib!.print_endline"
                      [
                        <arg>
                          Nolabel
                          expression (src/ppx.ml[217,6564+34]..src/ppx.ml[217,6564+76])
                            Texp_apply
                            expression (src/ppx.ml[217,6564+35]..src/ppx.ml[217,6564+49])
                              Texp_ident "Batteries!.dump"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[217,6564+50]..src/ppx.ml[217,6564+75])
                                  Texp_constant Const_string("DEBUG:Ptype_abstract:",(src/ppx.ml[217,6564+52]..src/ppx.ml[217,6564+73]),None)
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[219,6643+0]..src/ppx.ml[240,7649+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[219,6643+4]..src/ppx.ml[219,6643+19])
          Tpat_var "print_type_decl/1827"
        expression (src/ppx.ml[219,6643+19]..src/ppx.ml[240,7649+38]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[219,6643+19]..src/ppx.ml[219,6643+22])
                Tpat_var "x/1829"
              expression (src/ppx.ml[220,6668+2]..src/ppx.ml[240,7649+38])
                Texp_match
                expression (src/ppx.ml[220,6668+8]..src/ppx.ml[220,6668+9])
                  Texp_ident "x/1829"
                [
                  <case>
                    pattern (src/ppx.ml[221,6683+4]..src/ppx.ml[230,7064+5])
                      Tpat_value
                      pattern (src/ppx.ml[221,6683+4]..src/ppx.ml[230,7064+5])
                        Tpat_record
                        [
                          "ptype_name"
                            pattern (src/ppx.ml[222,6689+6]..src/ppx.ml[222,6689+16])
                              Tpat_var "ptype_name/1830"
                          "ptype_params"
                            pattern (src/ppx.ml[223,6726+6]..src/ppx.ml[223,6726+18])
                              Tpat_var "ptype_params/1831"
                          "ptype_cstrs"
                            pattern (src/ppx.ml[224,6798+6]..src/ppx.ml[224,6798+17])
                              Tpat_var "ptype_cstrs/1832"
                          "ptype_kind"
                            pattern (src/ppx.ml[225,6867+6]..src/ppx.ml[225,6867+16])
                              Tpat_var "ptype_kind/1833"
                          "ptype_private"
                            pattern (src/ppx.ml[226,6904+6]..src/ppx.ml[226,6904+19])
                              Tpat_var "ptype_private/1834"
                          "ptype_manifest"
                            pattern (src/ppx.ml[227,6945+6]..src/ppx.ml[227,6945+20])
                              Tpat_var "ptype_manifest/1835"
                          "ptype_attributes"
                            pattern (src/ppx.ml[228,6992+6]..src/ppx.ml[228,6992+22])
                              Tpat_var "ptype_attributes/1836"
                          "ptype_loc"
                            pattern (src/ppx.ml[229,7033+6]..src/ppx.ml[229,7033+15])
                              Tpat_var "ptype_loc/1837"
                        ]
                    expression (src/ppx.ml[231,7073+4]..src/ppx.ml[240,7649+38])
                      Texp_sequence
                      expression (src/ppx.ml[231,7073+4]..src/ppx.ml[231,7073+69])
                        Texp_apply
                        expression (src/ppx.ml[231,7073+5]..src/ppx.ml[231,7073+18])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[231,7073+19]..src/ppx.ml[231,7073+68])
                              Texp_apply
                              expression (src/ppx.ml[231,7073+20]..src/ppx.ml[231,7073+34])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[231,7073+35]..src/ppx.ml[231,7073+67])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[231,7073+36]..src/ppx.ml[231,7073+54])
                                        Texp_constant Const_string("DEBUG:type_decl:",(src/ppx.ml[231,7073+37]..src/ppx.ml[231,7073+53]),None)
                                      expression (src/ppx.ml[231,7073+56]..src/ppx.ml[231,7073+66])
                                        Texp_ident "ptype_name/1830"
                                    ]
                              ]
                        ]
                      expression (src/ppx.ml[232,7144+4]..src/ppx.ml[240,7649+38])
                        Texp_sequence
                        expression (src/ppx.ml[232,7144+4]..src/ppx.ml[232,7144+72])
                          Texp_apply
                          expression (src/ppx.ml[232,7144+5]..src/ppx.ml[232,7144+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[232,7144+19]..src/ppx.ml[232,7144+71])
                                Texp_apply
                                expression (src/ppx.ml[232,7144+20]..src/ppx.ml[232,7144+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[232,7144+35]..src/ppx.ml[232,7144+70])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[232,7144+36]..src/ppx.ml[232,7144+55])
                                          Texp_constant Const_string("DEBUG:parameters:",(src/ppx.ml[232,7144+37]..src/ppx.ml[232,7144+54]),None)
                                        expression (src/ppx.ml[232,7144+57]..src/ppx.ml[232,7144+69])
                                          Texp_ident "ptype_params/1831"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[233,7218+4]..src/ppx.ml[240,7649+38])
                          Texp_sequence
                          expression (src/ppx.ml[233,7218+4]..src/ppx.ml[233,7218+66])
                            Texp_apply
                            expression (src/ppx.ml[233,7218+5]..src/ppx.ml[233,7218+18])
                              Texp_ident "Stdlib!.print_endline"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[233,7218+19]..src/ppx.ml[233,7218+65])
                                  Texp_apply
                                  expression (src/ppx.ml[233,7218+20]..src/ppx.ml[233,7218+34])
                                    Texp_ident "Batteries!.dump"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/ppx.ml[233,7218+35]..src/ppx.ml[233,7218+64])
                                        Texp_tuple
                                        [
                                          expression (src/ppx.ml[233,7218+36]..src/ppx.ml[233,7218+50])
                                            Texp_constant Const_string("DEBUG:cstrs:",(src/ppx.ml[233,7218+37]..src/ppx.ml[233,7218+49]),None)
                                          expression (src/ppx.ml[233,7218+52]..src/ppx.ml[233,7218+63])
                                            Texp_ident "ptype_cstrs/1832"
                                        ]
                                  ]
                            ]
                          expression (src/ppx.ml[234,7286+4]..src/ppx.ml[240,7649+38])
                            Texp_sequence
                            expression (src/ppx.ml[234,7286+4]..src/ppx.ml[234,7286+63])
                              Texp_apply
                              expression (src/ppx.ml[234,7286+5]..src/ppx.ml[234,7286+18])
                                Texp_ident "Stdlib!.print_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[234,7286+19]..src/ppx.ml[234,7286+62])
                                    Texp_apply
                                    expression (src/ppx.ml[234,7286+20]..src/ppx.ml[234,7286+34])
                                      Texp_ident "Batteries!.dump"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/ppx.ml[234,7286+35]..src/ppx.ml[234,7286+61])
                                          Texp_tuple
                                          [
                                            expression (src/ppx.ml[234,7286+36]..src/ppx.ml[234,7286+49])
                                              Texp_constant Const_string("DEBUG:kind:",(src/ppx.ml[234,7286+37]..src/ppx.ml[234,7286+48]),None)
                                            expression (src/ppx.ml[234,7286+50]..src/ppx.ml[234,7286+60])
                                              Texp_ident "ptype_kind/1833"
                                          ]
                                    ]
                              ]
                            expression (src/ppx.ml[235,7351+4]..src/ppx.ml[240,7649+38])
                              Texp_sequence
                              expression (src/ppx.ml[235,7351+4]..src/ppx.ml[235,7351+29])
                                Texp_apply
                                expression (src/ppx.ml[235,7351+5]..src/ppx.ml[235,7351+17])
                                  Texp_ident "process_kind/1822"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[235,7351+18]..src/ppx.ml[235,7351+28])
                                      Texp_ident "ptype_kind/1833"
                                ]
                              expression (src/ppx.ml[236,7382+4]..src/ppx.ml[240,7649+38])
                                Texp_apply
                                expression (src/ppx.ml[236,7382+5]..src/ppx.ml[236,7382+18])
                                  Texp_ident "Stdlib!.print_endline"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[236,7382+19]..src/ppx.ml[240,7649+37])
                                      Texp_apply
                                      expression (src/ppx.ml[236,7382+20]..src/ppx.ml[236,7382+34])
                                        Texp_ident "Batteries!.dump"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[236,7382+35]..src/ppx.ml[240,7649+36])
                                            Texp_tuple
                                            [
                                              expression (src/ppx.ml[236,7382+36]..src/ppx.ml[236,7382+52])
                                                Texp_constant Const_string("DEBUG:private:",(src/ppx.ml[236,7382+37]..src/ppx.ml[236,7382+51]),None)
                                              expression (src/ppx.ml[236,7382+55]..src/ppx.ml[236,7382+68])
                                                Texp_ident "ptype_private/1834"
                                              expression (src/ppx.ml[237,7452+36]..src/ppx.ml[237,7452+52])
                                                Texp_constant Const_string("DEBUG:manifest",(src/ppx.ml[237,7452+37]..src/ppx.ml[237,7452+51]),None)
                                              expression (src/ppx.ml[237,7452+54]..src/ppx.ml[237,7452+68])
                                                Texp_ident "ptype_manifest/1835"
                                              expression (src/ppx.ml[238,7522+36]..src/ppx.ml[238,7522+48])
                                                Texp_constant Const_string("DEBUG:attr",(src/ppx.ml[238,7522+37]..src/ppx.ml[238,7522+47]),None)
                                              expression (src/ppx.ml[238,7522+50]..src/ppx.ml[238,7522+66])
                                                Texp_ident "ptype_attributes/1836"
                                              expression (src/ppx.ml[239,7590+36]..src/ppx.ml[239,7590+47])
                                                Texp_constant Const_string("DEBUG:loc",(src/ppx.ml[239,7590+37]..src/ppx.ml[239,7590+46]),None)
                                              expression (src/ppx.ml[239,7590+49]..src/ppx.ml[239,7590+58])
                                                Texp_ident "ptype_loc/1837"
                                            ]
                                      ]
                                ]
                ]
          ]
    ]
  structure_item (src/ppx.ml[242,7693+0]..src/ppx.ml[248,7828+6])
    Tstr_value Rec
    [
      <def>
        pattern (src/ppx.ml[242,7693+8]..src/ppx.ml[242,7693+30])
          Tpat_var "process_type_decl_list/1838"
        expression (src/ppx.ml[242,7693+30]..src/ppx.ml[248,7828+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[242,7693+30]..src/ppx.ml[242,7693+33])
                Tpat_var "x/1839"
              expression (src/ppx.ml[243,7729+2]..src/ppx.ml[248,7828+6])
                Texp_match
                expression (src/ppx.ml[243,7729+8]..src/ppx.ml[243,7729+9])
                  Texp_ident "x/1839"
                [
                  <case>
                    pattern (src/ppx.ml[244,7744+4]..src/ppx.ml[244,7744+6])
                      Tpat_value
                      pattern (src/ppx.ml[244,7744+4]..src/ppx.ml[244,7744+6])
                        Tpat_construct "[]"
                        []
                        None
                    expression (src/ppx.ml[244,7744+10]..src/ppx.ml[244,7744+12])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (src/ppx.ml[245,7757+4]..src/ppx.ml[245,7757+10])
                      Tpat_value
                      pattern (src/ppx.ml[245,7757+4]..src/ppx.ml[245,7757+10])
                        Tpat_construct "::"
                        [
                          pattern (src/ppx.ml[245,7757+4]..src/ppx.ml[245,7757+5])
                            Tpat_var "h/1840"
                          pattern (src/ppx.ml[245,7757+9]..src/ppx.ml[245,7757+10])
                            Tpat_var "t/1841"
                        ]
                        None
                    expression (src/ppx.ml[246,7771+4]..src/ppx.ml[248,7828+6])
                      Texp_sequence
                      expression (src/ppx.ml[246,7771+4]..src/ppx.ml[246,7771+23])
                        Texp_apply
                        expression (src/ppx.ml[246,7771+5]..src/ppx.ml[246,7771+20])
                          Texp_ident "print_type_decl/1827"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[246,7771+21]..src/ppx.ml[246,7771+22])
                              Texp_ident "h/1840"
                        ]
                      expression (src/ppx.ml[247,7796+4]..src/ppx.ml[248,7828+6])
                        Texp_sequence
                        expression (src/ppx.ml[247,7796+4]..src/ppx.ml[247,7796+30])
                          Texp_apply
                          expression (src/ppx.ml[247,7796+5]..src/ppx.ml[247,7796+27])
                            Texp_ident "process_type_decl_list/1838"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[247,7796+28]..src/ppx.ml[247,7796+29])
                                Texp_ident "t/1841"
                          ]
                        expression (src/ppx.ml[248,7828+4]..src/ppx.ml[248,7828+6])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[250,7840+0]..src/ppx.ml[276,9804+128])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[250,7840+4]..src/ppx.ml[250,7840+13])
          Tpat_var "printdesc/1842"
        expression (src/ppx.ml[250,7840+13]..src/ppx.ml[276,9804+128]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[250,7840+14]..src/ppx.ml[250,7840+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[250,7840+17]..src/ppx.ml[250,7840+36])
                    Ttyp_constr "Ppxlib!.structure_item_desc"
                    []
                Tpat_alias "x/1844"
                pattern (src/ppx.ml[250,7840+14]..src/ppx.ml[250,7840+15])
                  Tpat_any
              expression (src/ppx.ml[251,7886+2]..src/ppx.ml[276,9804+128])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[250,7840+39]..src/ppx.ml[250,7840+43])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[251,7886+2]..src/ppx.ml[251,7886+68])
                  Texp_apply
                  expression (src/ppx.ml[251,7886+3]..src/ppx.ml[251,7886+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[251,7886+17]..src/ppx.ml[251,7886+67])
                        Texp_apply
                        expression (src/ppx.ml[251,7886+18]..src/ppx.ml[251,7886+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[251,7886+33]..src/ppx.ml[251,7886+66])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[251,7886+34]..src/ppx.ml[251,7886+62])
                                  Texp_constant Const_string("DEBUG:structure_item_desc:",(src/ppx.ml[251,7886+35]..src/ppx.ml[251,7886+61]),None)
                                expression (src/ppx.ml[251,7886+64]..src/ppx.ml[251,7886+65])
                                  Texp_ident "x/1844"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[252,7956+2]..src/ppx.ml[276,9804+128])
                  Texp_match
                  expression (src/ppx.ml[252,7956+8]..src/ppx.ml[252,7956+9])
                    Texp_ident "x/1844"
                  [
                    <case>
                      pattern (src/ppx.ml[253,7971+4]..src/ppx.ml[253,7971+37])
                        Tpat_value
                        pattern (src/ppx.ml[253,7971+4]..src/ppx.ml[253,7971+37])
                          Tpat_construct "Pstr_eval"
                          [
                            pattern (src/ppx.ml[253,7971+15]..src/ppx.ml[253,7971+25])
                              Tpat_var "expression/1845"
                            pattern (src/ppx.ml[253,7971+26]..src/ppx.ml[253,7971+36])
                              Tpat_var "attributes/1846"
                          ]
                          None
                      expression (src/ppx.ml[253,7971+41]..src/ppx.ml[253,7971+117])
                        Texp_apply
                        expression (src/ppx.ml[253,7971+42]..src/ppx.ml[253,7971+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[253,7971+56]..src/ppx.ml[253,7971+116])
                              Texp_apply
                              expression (src/ppx.ml[253,7971+57]..src/ppx.ml[253,7971+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[253,7971+72]..src/ppx.ml[253,7971+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[253,7971+73]..src/ppx.ml[253,7971+91])
                                        Texp_constant Const_string("DEBUG:Pstr_eval:",(src/ppx.ml[253,7971+74]..src/ppx.ml[253,7971+90]),None)
                                      expression (src/ppx.ml[253,7971+93]..src/ppx.ml[253,7971+103])
                                        Texp_ident "expression/1845"
                                      expression (src/ppx.ml[253,7971+104]..src/ppx.ml[253,7971+114])
                                        Texp_ident "attributes/1846"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[255,8109+4]..src/ppx.ml[255,8109+45])
                        Tpat_value
                        pattern (src/ppx.ml[255,8109+4]..src/ppx.ml[255,8109+45])
                          Tpat_construct "Pstr_value"
                          [
                            pattern (src/ppx.ml[255,8109+16]..src/ppx.ml[255,8109+24])
                              Tpat_var "rec_flag/1847"
                            pattern (src/ppx.ml[255,8109+26]..src/ppx.ml[255,8109+44])
                              Tpat_var "value_binding_list/1848"
                          ]
                          None
                      expression (src/ppx.ml[255,8109+48]..src/ppx.ml[256,8243+48])
                        Texp_sequence
                        expression (src/ppx.ml[255,8109+48]..src/ppx.ml[255,8109+132])
                          Texp_apply
                          expression (src/ppx.ml[255,8109+49]..src/ppx.ml[255,8109+62])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[255,8109+63]..src/ppx.ml[255,8109+131])
                                Texp_apply
                                expression (src/ppx.ml[255,8109+64]..src/ppx.ml[255,8109+78])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[255,8109+79]..src/ppx.ml[255,8109+130])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[255,8109+80]..src/ppx.ml[255,8109+99])
                                          Texp_constant Const_string("DEBUG:Pstr_value:",(src/ppx.ml[255,8109+81]..src/ppx.ml[255,8109+98]),None)
                                        expression (src/ppx.ml[255,8109+101]..src/ppx.ml[255,8109+109])
                                          Texp_ident "rec_flag/1847"
                                        expression (src/ppx.ml[255,8109+111]..src/ppx.ml[255,8109+129])
                                          Texp_ident "value_binding_list/1848"
                                      ]
                                ]
                          ]
                        expression (src/ppx.ml[256,8243+4]..src/ppx.ml[256,8243+48])
                          Texp_apply
                          expression (src/ppx.ml[256,8243+4]..src/ppx.ml[256,8243+28])
                            Texp_ident "print_value_binding_list/1298"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[256,8243+28]..src/ppx.ml[256,8243+48])
                                Texp_ident "value_binding_list/1848"
                          ]
                    <case>
                      pattern (src/ppx.ml[257,8292+4]..src/ppx.ml[257,8292+36])
                        Tpat_value
                        pattern (src/ppx.ml[257,8292+4]..src/ppx.ml[257,8292+36])
                          Tpat_construct "Pstr_primitive"
                          [
                            pattern (src/ppx.ml[257,8292+19]..src/ppx.ml[257,8292+36])
                              Tpat_var "value_description/1849"
                          ]
                          None
                      expression (src/ppx.ml[257,8292+39]..src/ppx.ml[257,8292+116])
                        Texp_apply
                        expression (src/ppx.ml[257,8292+40]..src/ppx.ml[257,8292+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[257,8292+54]..src/ppx.ml[257,8292+115])
                              Texp_apply
                              expression (src/ppx.ml[257,8292+55]..src/ppx.ml[257,8292+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[257,8292+70]..src/ppx.ml[257,8292+114])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[257,8292+71]..src/ppx.ml[257,8292+94])
                                        Texp_constant Const_string("DEBUG:Pstr_primitive:",(src/ppx.ml[257,8292+72]..src/ppx.ml[257,8292+93]),None)
                                      expression (src/ppx.ml[257,8292+96]..src/ppx.ml[257,8292+113])
                                        Texp_ident "value_description/1849"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[259,8410+4]..src/ppx.ml[259,8410+47])
                        Tpat_value
                        pattern (src/ppx.ml[259,8410+4]..src/ppx.ml[259,8410+47])
                          Tpat_construct "Pstr_type"
                          [
                            pattern (src/ppx.ml[259,8410+15]..src/ppx.ml[259,8410+23])
                              Tpat_var "rec_flag/1850"
                            pattern (src/ppx.ml[259,8410+25]..src/ppx.ml[259,8410+46])
                              Tpat_var "type_declaration_list/1851"
                          ]
                          None
                      expression (src/ppx.ml[261,8489+4]..src/ppx.ml[262,8540+90])
                        Texp_sequence
                        expression (src/ppx.ml[261,8489+4]..src/ppx.ml[261,8489+49])
                          Texp_apply
                          expression (src/ppx.ml[261,8489+4]..src/ppx.ml[261,8489+26])
                            Texp_ident "process_type_decl_list/1838"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[261,8489+26]..src/ppx.ml[261,8489+49])
                                Texp_ident "type_declaration_list/1851"
                          ]
                        expression (src/ppx.ml[262,8540+4]..src/ppx.ml[262,8540+90])
                          Texp_apply
                          expression (src/ppx.ml[262,8540+5]..src/ppx.ml[262,8540+18])
                            Texp_ident "Stdlib!.print_endline"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[262,8540+19]..src/ppx.ml[262,8540+89])
                                Texp_apply
                                expression (src/ppx.ml[262,8540+20]..src/ppx.ml[262,8540+34])
                                  Texp_ident "Batteries!.dump"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/ppx.ml[262,8540+35]..src/ppx.ml[262,8540+88])
                                      Texp_tuple
                                      [
                                        expression (src/ppx.ml[262,8540+36]..src/ppx.ml[262,8540+54])
                                          Texp_constant Const_string("DEBUG:Pstr_type:",(src/ppx.ml[262,8540+37]..src/ppx.ml[262,8540+53]),None)
                                        expression (src/ppx.ml[262,8540+56]..src/ppx.ml[262,8540+64])
                                          Texp_ident "rec_flag/1850"
                                        expression (src/ppx.ml[262,8540+66]..src/ppx.ml[262,8540+87])
                                          Texp_ident "type_declaration_list/1851"
                                      ]
                                ]
                          ]
                    <case>
                      pattern (src/ppx.ml[265,8633+4]..src/ppx.ml[265,8633+31])
                        Tpat_value
                        pattern (src/ppx.ml[265,8633+4]..src/ppx.ml[265,8633+31])
                          Tpat_construct "Pstr_typext"
                          [
                            pattern (src/ppx.ml[265,8633+17]..src/ppx.ml[265,8633+31])
                              Tpat_var "type_extension/1852"
                          ]
                          None
                      expression (src/ppx.ml[265,8633+34]..src/ppx.ml[265,8633+105])
                        Texp_apply
                        expression (src/ppx.ml[265,8633+35]..src/ppx.ml[265,8633+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[265,8633+49]..src/ppx.ml[265,8633+104])
                              Texp_apply
                              expression (src/ppx.ml[265,8633+50]..src/ppx.ml[265,8633+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[265,8633+65]..src/ppx.ml[265,8633+103])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[265,8633+66]..src/ppx.ml[265,8633+86])
                                        Texp_constant Const_string("DEBUG:Pstr_typext:",(src/ppx.ml[265,8633+67]..src/ppx.ml[265,8633+85]),None)
                                      expression (src/ppx.ml[265,8633+88]..src/ppx.ml[265,8633+102])
                                        Texp_ident "type_extension/1852"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[266,8739+4]..src/ppx.ml[266,8739+40])
                        Tpat_value
                        pattern (src/ppx.ml[266,8739+4]..src/ppx.ml[266,8739+40])
                          Tpat_construct "Pstr_exception"
                          [
                            pattern (src/ppx.ml[266,8739+19]..src/ppx.ml[266,8739+40])
                              Tpat_var "extension_constructor/1853"
                          ]
                          None
                      expression (src/ppx.ml[266,8739+43]..src/ppx.ml[266,8739+124])
                        Texp_apply
                        expression (src/ppx.ml[266,8739+44]..src/ppx.ml[266,8739+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[266,8739+58]..src/ppx.ml[266,8739+123])
                              Texp_apply
                              expression (src/ppx.ml[266,8739+59]..src/ppx.ml[266,8739+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[266,8739+74]..src/ppx.ml[266,8739+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[266,8739+75]..src/ppx.ml[266,8739+98])
                                        Texp_constant Const_string("DEBUG:Pstr_exception:",(src/ppx.ml[266,8739+76]..src/ppx.ml[266,8739+97]),None)
                                      expression (src/ppx.ml[266,8739+100]..src/ppx.ml[266,8739+121])
                                        Texp_ident "extension_constructor/1853"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[267,8864+4]..src/ppx.ml[267,8864+31])
                        Tpat_value
                        pattern (src/ppx.ml[267,8864+4]..src/ppx.ml[267,8864+31])
                          Tpat_construct "Pstr_module"
                          [
                            pattern (src/ppx.ml[267,8864+17]..src/ppx.ml[267,8864+31])
                              Tpat_var "module_binding/1854"
                          ]
                          None
                      expression (src/ppx.ml[267,8864+34]..src/ppx.ml[267,8864+104])
                        Texp_apply
                        expression (src/ppx.ml[267,8864+35]..src/ppx.ml[267,8864+48])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[267,8864+49]..src/ppx.ml[267,8864+103])
                              Texp_apply
                              expression (src/ppx.ml[267,8864+50]..src/ppx.ml[267,8864+64])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[267,8864+65]..src/ppx.ml[267,8864+102])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[267,8864+66]..src/ppx.ml[267,8864+86])
                                        Texp_constant Const_string("DEBUG:Pstr_module:",(src/ppx.ml[267,8864+67]..src/ppx.ml[267,8864+85]),None)
                                      expression (src/ppx.ml[267,8864+87]..src/ppx.ml[267,8864+101])
                                        Texp_ident "module_binding/1854"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[268,8969+4]..src/ppx.ml[268,8969+39])
                        Tpat_value
                        pattern (src/ppx.ml[268,8969+4]..src/ppx.ml[268,8969+39])
                          Tpat_construct "Pstr_recmodule"
                          [
                            pattern (src/ppx.ml[268,8969+20]..src/ppx.ml[268,8969+39])
                              Tpat_var "module_binding_list/1855"
                          ]
                          None
                      expression (src/ppx.ml[268,8969+42]..src/ppx.ml[268,8969+121])
                        Texp_apply
                        expression (src/ppx.ml[268,8969+43]..src/ppx.ml[268,8969+56])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[268,8969+57]..src/ppx.ml[268,8969+120])
                              Texp_apply
                              expression (src/ppx.ml[268,8969+58]..src/ppx.ml[268,8969+72])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[268,8969+73]..src/ppx.ml[268,8969+119])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[268,8969+74]..src/ppx.ml[268,8969+97])
                                        Texp_constant Const_string("DEBUG:Pstr_recmodule:",(src/ppx.ml[268,8969+75]..src/ppx.ml[268,8969+96]),None)
                                      expression (src/ppx.ml[268,8969+99]..src/ppx.ml[268,8969+118])
                                        Texp_ident "module_binding_list/1855"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[269,9091+4]..src/ppx.ml[269,9091+40])
                        Tpat_value
                        pattern (src/ppx.ml[269,9091+4]..src/ppx.ml[269,9091+40])
                          Tpat_construct "Pstr_modtype"
                          [
                            pattern (src/ppx.ml[269,9091+17]..src/ppx.ml[269,9091+40])
                              Tpat_var "module_type_declaration/1856"
                          ]
                          None
                      expression (src/ppx.ml[269,9091+43]..src/ppx.ml[269,9091+124])
                        Texp_apply
                        expression (src/ppx.ml[269,9091+44]..src/ppx.ml[269,9091+57])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[269,9091+58]..src/ppx.ml[269,9091+123])
                              Texp_apply
                              expression (src/ppx.ml[269,9091+59]..src/ppx.ml[269,9091+73])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[269,9091+74]..src/ppx.ml[269,9091+122])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[269,9091+75]..src/ppx.ml[269,9091+96])
                                        Texp_constant Const_string("DEBUG:Pstr_modtype:",(src/ppx.ml[269,9091+76]..src/ppx.ml[269,9091+95]),None)
                                      expression (src/ppx.ml[269,9091+98]..src/ppx.ml[269,9091+121])
                                        Texp_ident "module_type_declaration/1856"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[271,9233+4]..src/ppx.ml[271,9233+30])
                        Tpat_value
                        pattern (src/ppx.ml[271,9233+4]..src/ppx.ml[271,9233+30])
                          Tpat_construct "Pstr_open"
                          [
                            pattern (src/ppx.ml[271,9233+14]..src/ppx.ml[271,9233+30])
                              Tpat_var "open_description/1857"
                          ]
                          None
                      expression (src/ppx.ml[271,9233+33]..src/ppx.ml[271,9233+103])
                        Texp_apply
                        expression (src/ppx.ml[271,9233+34]..src/ppx.ml[271,9233+47])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[271,9233+48]..src/ppx.ml[271,9233+102])
                              Texp_apply
                              expression (src/ppx.ml[271,9233+49]..src/ppx.ml[271,9233+63])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[271,9233+64]..src/ppx.ml[271,9233+101])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[271,9233+65]..src/ppx.ml[271,9233+82])
                                        Texp_constant Const_string("DEBUG:Pstr_open",(src/ppx.ml[271,9233+66]..src/ppx.ml[271,9233+81]),None)
                                      expression (src/ppx.ml[271,9233+84]..src/ppx.ml[271,9233+100])
                                        Texp_ident "open_description/1857"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[272,9337+4]..src/ppx.ml[272,9337+36])
                        Tpat_value
                        pattern (src/ppx.ml[272,9337+4]..src/ppx.ml[272,9337+36])
                          Tpat_construct "Pstr_class"
                          [
                            pattern (src/ppx.ml[272,9337+15]..src/ppx.ml[272,9337+36])
                              Tpat_var "class_declarations/1858"
                          ]
                          None
                      expression (src/ppx.ml[272,9337+39]..src/ppx.ml[272,9337+113])
                        Texp_apply
                        expression (src/ppx.ml[272,9337+40]..src/ppx.ml[272,9337+53])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[272,9337+54]..src/ppx.ml[272,9337+112])
                              Texp_apply
                              expression (src/ppx.ml[272,9337+55]..src/ppx.ml[272,9337+69])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[272,9337+70]..src/ppx.ml[272,9337+111])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[272,9337+71]..src/ppx.ml[272,9337+90])
                                        Texp_constant Const_string("DEBUG:Pstr_class:",(src/ppx.ml[272,9337+72]..src/ppx.ml[272,9337+89]),None)
                                      expression (src/ppx.ml[272,9337+92]..src/ppx.ml[272,9337+110])
                                        Texp_ident "class_declarations/1858"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[273,9451+4]..src/ppx.ml[273,9451+45])
                        Tpat_value
                        pattern (src/ppx.ml[273,9451+4]..src/ppx.ml[273,9451+45])
                          Tpat_construct "Pstr_class_type"
                          [
                            pattern (src/ppx.ml[273,9451+20]..src/ppx.ml[273,9451+45])
                              Tpat_var "class_type_declarations/1859"
                          ]
                          None
                      expression (src/ppx.ml[273,9451+48]..src/ppx.ml[273,9451+132])
                        Texp_apply
                        expression (src/ppx.ml[273,9451+49]..src/ppx.ml[273,9451+62])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[273,9451+63]..src/ppx.ml[273,9451+131])
                              Texp_apply
                              expression (src/ppx.ml[273,9451+64]..src/ppx.ml[273,9451+78])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[273,9451+79]..src/ppx.ml[273,9451+130])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[273,9451+80]..src/ppx.ml[273,9451+104])
                                        Texp_constant Const_string("DEBUG:Pstr_class_type:",(src/ppx.ml[273,9451+81]..src/ppx.ml[273,9451+103]),None)
                                      expression (src/ppx.ml[273,9451+106]..src/ppx.ml[273,9451+129])
                                        Texp_ident "class_type_declarations/1859"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[274,9584+4]..src/ppx.ml[274,9584+39])
                        Tpat_value
                        pattern (src/ppx.ml[274,9584+4]..src/ppx.ml[274,9584+39])
                          Tpat_construct "Pstr_include"
                          [
                            pattern (src/ppx.ml[274,9584+18]..src/ppx.ml[274,9584+39])
                              Tpat_var "include_declaration/1860"
                          ]
                          None
                      expression (src/ppx.ml[274,9584+41]..src/ppx.ml[274,9584+117])
                        Texp_apply
                        expression (src/ppx.ml[274,9584+42]..src/ppx.ml[274,9584+55])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[274,9584+56]..src/ppx.ml[274,9584+116])
                              Texp_apply
                              expression (src/ppx.ml[274,9584+57]..src/ppx.ml[274,9584+71])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[274,9584+72]..src/ppx.ml[274,9584+115])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[274,9584+73]..src/ppx.ml[274,9584+94])
                                        Texp_constant Const_string("DEBUG:Pstr_include:",(src/ppx.ml[274,9584+74]..src/ppx.ml[274,9584+93]),None)
                                      expression (src/ppx.ml[274,9584+95]..src/ppx.ml[274,9584+114])
                                        Texp_ident "include_declaration/1860"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[275,9702+4]..src/ppx.ml[275,9702+30])
                        Tpat_value
                        pattern (src/ppx.ml[275,9702+4]..src/ppx.ml[275,9702+30])
                          Tpat_construct "Pstr_attribute"
                          [
                            pattern (src/ppx.ml[275,9702+19]..src/ppx.ml[275,9702+30])
                              Tpat_var "attribute/1861"
                          ]
                          None
                      expression (src/ppx.ml[275,9702+32]..src/ppx.ml[275,9702+101])
                        Texp_apply
                        expression (src/ppx.ml[275,9702+33]..src/ppx.ml[275,9702+46])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[275,9702+47]..src/ppx.ml[275,9702+100])
                              Texp_apply
                              expression (src/ppx.ml[275,9702+48]..src/ppx.ml[275,9702+62])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[275,9702+63]..src/ppx.ml[275,9702+99])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[275,9702+64]..src/ppx.ml[275,9702+87])
                                        Texp_constant Const_string("DEBUG:Pstr_attribute:",(src/ppx.ml[275,9702+65]..src/ppx.ml[275,9702+86]),None)
                                      expression (src/ppx.ml[275,9702+89]..src/ppx.ml[275,9702+98])
                                        Texp_ident "attribute/1861"
                                    ]
                              ]
                        ]
                    <case>
                      pattern (src/ppx.ml[276,9804+4]..src/ppx.ml[276,9804+44])
                        Tpat_value
                        pattern (src/ppx.ml[276,9804+4]..src/ppx.ml[276,9804+44])
                          Tpat_construct "Pstr_extension"
                          [
                            pattern (src/ppx.ml[276,9804+21]..src/ppx.ml[276,9804+30])
                              Tpat_var "extension/1862"
                            pattern (src/ppx.ml[276,9804+33]..src/ppx.ml[276,9804+43])
                              Tpat_var "attributes/1863"
                          ]
                          None
                      expression (src/ppx.ml[276,9804+46]..src/ppx.ml[276,9804+128])
                        Texp_apply
                        expression (src/ppx.ml[276,9804+47]..src/ppx.ml[276,9804+60])
                          Texp_ident "Stdlib!.print_endline"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[276,9804+61]..src/ppx.ml[276,9804+127])
                              Texp_apply
                              expression (src/ppx.ml[276,9804+62]..src/ppx.ml[276,9804+76])
                                Texp_ident "Batteries!.dump"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/ppx.ml[276,9804+77]..src/ppx.ml[276,9804+126])
                                    Texp_tuple
                                    [
                                      expression (src/ppx.ml[276,9804+78]..src/ppx.ml[276,9804+101])
                                        Texp_constant Const_string("DEBUG:Pstr_extension:",(src/ppx.ml[276,9804+79]..src/ppx.ml[276,9804+100]),None)
                                      expression (src/ppx.ml[276,9804+103]..src/ppx.ml[276,9804+112])
                                        Texp_ident "extension/1862"
                                      expression (src/ppx.ml[276,9804+115]..src/ppx.ml[276,9804+125])
                                        Texp_ident "attributes/1863"
                                    ]
                              ]
                        ]
                  ]
          ]
    ]
  structure_item (src/ppx.ml[278,9934+0]..src/ppx.ml[278,9934+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[278,9934+4]..src/ppx.ml[278,9934+7])
          Tpat_var "foo/1864"
        expression (src/ppx.ml[278,9934+10]..src/ppx.ml[278,9934+11])
          Texp_constant Const_int 1
    ]
  structure_item (src/ppx.ml[280,9949+0]..src/ppx.ml[288,10168+6])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[280,9949+4]..src/ppx.ml[280,9949+12])
          Tpat_var "printone/1865"
        expression (src/ppx.ml[280,9949+13]..src/ppx.ml[288,10168+6]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[280,9949+14]..src/ppx.ml[280,9949+15])
                extra
                  Tpat_extra_constraint
                  core_type (src/ppx.ml[280,9949+18]..src/ppx.ml[280,9949+32])
                    Ttyp_constr "Ppxlib!.structure_item"
                    []
                Tpat_alias "x/1866"
                pattern (src/ppx.ml[280,9949+14]..src/ppx.ml[280,9949+15])
                  Tpat_any
              expression (src/ppx.ml[281,9992+2]..src/ppx.ml[288,10168+6])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[280,9949+36]..src/ppx.ml[280,9949+40])
                    Ttyp_constr "unit/6!"
                    []
                Texp_match
                expression (src/ppx.ml[281,9992+8]..src/ppx.ml[281,9992+9])
                  Texp_ident "x/1866"
                [
                  <case>
                    pattern (src/ppx.ml[282,10007+3]..src/ppx.ml[285,10057+3])
                      Tpat_value
                      pattern (src/ppx.ml[282,10007+3]..src/ppx.ml[285,10057+3])
                        Tpat_record
                        [
                          "pstr_desc"
                            pattern (src/ppx.ml[283,10012+4]..src/ppx.ml[283,10012+13])
                              Tpat_var "pstr_desc/1867"
                        ]
                    expression (src/ppx.ml[287,10141+4]..src/ppx.ml[288,10168+6])
                      Texp_sequence
                      expression (src/ppx.ml[287,10141+4]..src/ppx.ml[287,10141+25])
                        Texp_apply
                        expression (src/ppx.ml[287,10141+5]..src/ppx.ml[287,10141+14])
                          Texp_ident "printdesc/1842"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[287,10141+15]..src/ppx.ml[287,10141+24])
                              Texp_ident "pstr_desc/1867"
                        ]
                      expression (src/ppx.ml[288,10168+4]..src/ppx.ml[288,10168+6])
                        Texp_construct "()"
                        []
                ]
          ]
    ]
  structure_item (src/ppx.ml[294,10288+0]..src/ppx.ml[296,10369+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[294,10288+4]..src/ppx.ml[294,10288+13])
          Tpat_var "printone2/1868"
        expression (src/ppx.ml[294,10288+14]..src/ppx.ml[296,10369+12]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[294,10288+14]..src/ppx.ml[294,10288+15])
                Tpat_var "x/1869"
              expression (src/ppx.ml[295,10312+2]..src/ppx.ml[296,10369+12])
                extra
                  Texp_constraint
                  core_type (src/ppx.ml[294,10288+17]..src/ppx.ml[294,10288+21])
                    Ttyp_constr "unit/6!"
                    []
                Texp_sequence
                expression (src/ppx.ml[295,10312+2]..src/ppx.ml[295,10312+55])
                  Texp_apply
                  expression (src/ppx.ml[295,10312+3]..src/ppx.ml[295,10312+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[295,10312+17]..src/ppx.ml[295,10312+54])
                        Texp_apply
                        expression (src/ppx.ml[295,10312+18]..src/ppx.ml[295,10312+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[295,10312+33]..src/ppx.ml[295,10312+53])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[295,10312+34]..src/ppx.ml[295,10312+50])
                                  Texp_constant Const_string("DEBUG:SECOND::",(src/ppx.ml[295,10312+35]..src/ppx.ml[295,10312+49]),None)
                                expression (src/ppx.ml[295,10312+51]..src/ppx.ml[295,10312+52])
                                  Texp_ident "x/1869"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[296,10369+2]..src/ppx.ml[296,10369+12])
                  Texp_apply
                  expression (src/ppx.ml[296,10369+2]..src/ppx.ml[296,10369+10])
                    Texp_ident "printone/1865"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[296,10369+11]..src/ppx.ml[296,10369+12])
                        Texp_ident "x/1869"
                  ]
          ]
    ]
  structure_item (src/ppx.ml[298,10385+0]..src/ppx.ml[300,10416+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[298,10385+4]..src/ppx.ml[298,10385+9])
          Tpat_var "proc1/1870"
        expression (src/ppx.ml[298,10385+10]..src/ppx.ml[300,10416+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[298,10385+10]..src/ppx.ml[298,10385+11])
                Tpat_var "x/1872"
              expression (src/ppx.ml[299,10401+2]..src/ppx.ml[300,10416+3])
                Texp_sequence
                expression (src/ppx.ml[299,10401+2]..src/ppx.ml[299,10401+13])
                  Texp_apply
                  expression (src/ppx.ml[299,10401+2]..src/ppx.ml[299,10401+11])
                    Texp_ident "printone2/1868"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[299,10401+12]..src/ppx.ml[299,10401+13])
                        Texp_ident "x/1872"
                  ]
                expression (src/ppx.ml[300,10416+2]..src/ppx.ml[300,10416+3])
                  Texp_ident "x/1872"
          ]
    ]
  structure_item (src/ppx.ml[302,10421+0]..src/ppx.ml[305,10570+4])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[302,10421+4]..src/ppx.ml[302,10421+9])
          Tpat_var "debug/1873"
        expression (src/ppx.ml[302,10421+10]..src/ppx.ml[305,10570+4]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[302,10421+10]..src/ppx.ml[302,10421+14])
                Tpat_var "proc/1875"
              expression (src/ppx.ml[302,10421+15]..src/ppx.ml[305,10570+4]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/ppx.ml[302,10421+15]..src/ppx.ml[302,10421+18])
                      Tpat_var "lst/1876"
                    expression (src/ppx.ml[303,10449+2]..src/ppx.ml[305,10570+4])
                      extra
                        Texp_constraint
                        core_type (src/ppx.ml[302,10421+21]..src/ppx.ml[302,10421+25])
                          Ttyp_constr "unit/6!"
                          []
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (src/ppx.ml[303,10449+6]..src/ppx.ml[303,10449+12])
                            Tpat_var "result/1877"
                          expression (src/ppx.ml[303,10449+15]..src/ppx.ml[303,10449+32])
                            Texp_apply
                            expression (src/ppx.ml[303,10449+15]..src/ppx.ml[303,10449+23])
                              Texp_ident "Stdlib!.List.map"
                            [
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[303,10449+24]..src/ppx.ml[303,10449+28])
                                  Texp_ident "proc/1875"
                              <arg>
                                Nolabel
                                expression (src/ppx.ml[303,10449+29]..src/ppx.ml[303,10449+32])
                                  Texp_ident "lst/1876"
                            ]
                      ]
                      expression (src/ppx.ml[304,10485+2]..src/ppx.ml[305,10570+4])
                        Texp_sequence
                        expression (src/ppx.ml[304,10485+2]..src/ppx.ml[304,10485+83])
                          Texp_apply
                          expression (src/ppx.ml[304,10485+2]..src/ppx.ml[304,10485+11])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[304,10485+12]..src/ppx.ml[304,10485+76])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/ppx.ml[304,10485+17]..src/ppx.ml[304,10485+18])
                                      Tpat_var "i/1941"
                                    expression (src/ppx.ml[304,10485+22]..src/ppx.ml[304,10485+75])
                                      Texp_apply
                                      expression (src/ppx.ml[304,10485+22]..src/ppx.ml[304,10485+35])
                                        Texp_ident "Stdlib!.print_endline"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/ppx.ml[304,10485+36]..src/ppx.ml[304,10485+75])
                                            Texp_apply
                                            expression (src/ppx.ml[304,10485+37]..src/ppx.ml[304,10485+51])
                                              Texp_ident "Batteries!.dump"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/ppx.ml[304,10485+52]..src/ppx.ml[304,10485+74])
                                                  Texp_tuple
                                                  [
                                                    expression (src/ppx.ml[304,10485+53]..src/ppx.ml[304,10485+70])
                                                      Texp_constant Const_string("DEBUG:TOPLEVEL:",(src/ppx.ml[304,10485+54]..src/ppx.ml[304,10485+69]),None)
                                                    expression (src/ppx.ml[304,10485+72]..src/ppx.ml[304,10485+73])
                                                      Texp_ident "i/1941"
                                                  ]
                                            ]
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (src/ppx.ml[304,10485+77]..src/ppx.ml[304,10485+83])
                                Texp_ident "result/1877"
                          ]
                        expression (src/ppx.ml[305,10570+2]..src/ppx.ml[305,10570+4])
                          Texp_construct "()"
                          []
                ]
          ]
    ]
  structure_item (src/ppx.ml[307,10592+0]..src/ppx.ml[310,10716+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[307,10592+4]..src/ppx.ml[307,10592+13])
          Tpat_var "transform/1942"
        expression (src/ppx.ml[307,10592+14]..src/ppx.ml[310,10716+3]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/ppx.ml[307,10592+14]..src/ppx.ml[307,10592+15])
                Tpat_var "x/1944"
              expression (src/ppx.ml[308,10647+2]..src/ppx.ml[310,10716+3])
                Texp_sequence
                expression (src/ppx.ml[308,10647+2]..src/ppx.ml[308,10647+48])
                  Texp_apply
                  expression (src/ppx.ml[308,10647+3]..src/ppx.ml[308,10647+16])
                    Texp_ident "Stdlib!.print_endline"
                  [
                    <arg>
                      Nolabel
                      expression (src/ppx.ml[308,10647+17]..src/ppx.ml[308,10647+47])
                        Texp_apply
                        expression (src/ppx.ml[308,10647+18]..src/ppx.ml[308,10647+32])
                          Texp_ident "Batteries!.dump"
                        [
                          <arg>
                            Nolabel
                            expression (src/ppx.ml[308,10647+33]..src/ppx.ml[308,10647+46])
                              Texp_tuple
                              [
                                expression (src/ppx.ml[308,10647+34]..src/ppx.ml[308,10647+43])
                                  Texp_constant Const_string("DEBUG3:",(src/ppx.ml[308,10647+35]..src/ppx.ml[308,10647+42]),None)
                                expression (src/ppx.ml[308,10647+44]..src/ppx.ml[308,10647+45])
                                  Texp_ident "x/1944"
                              ]
                        ]
                  ]
                expression (src/ppx.ml[309,10697+2]..src/ppx.ml[310,10716+3])
                  Texp_sequence
                  expression (src/ppx.ml[309,10697+2]..src/ppx.ml[309,10697+17])
                    Texp_apply
                    expression (src/ppx.ml[309,10697+3]..src/ppx.ml[309,10697+8])
                      Texp_ident "debug/1873"
                    [
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[309,10697+9]..src/ppx.ml[309,10697+14])
                          Texp_ident "proc1/1870"
                      <arg>
                        Nolabel
                        expression (src/ppx.ml[309,10697+15]..src/ppx.ml[309,10697+16])
                          Texp_ident "x/1944"
                    ]
                  expression (src/ppx.ml[310,10716+2]..src/ppx.ml[310,10716+3])
                    Texp_ident "x/1944"
          ]
    ]
  structure_item (src/ppx.ml[312,10723+1]..src/ppx.ml[312,10723+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/ppx.ml[312,10723+5]..src/ppx.ml[312,10723+7])
          Tpat_construct "()"
          []
          None
        expression (src/ppx.ml[312,10723+10]..src/ppx.ml[312,10723+69])
          Texp_apply
          expression (src/ppx.ml[312,10723+10]..src/ppx.ml[312,10723+40])
            Texp_ident "Ppxlib!.Driver.register_transformation"
          [
            <arg>
              Optional "extensions"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "rules"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "enclose_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "impl"
              expression (src/ppx.ml[312,10723+47]..src/ppx.ml[312,10723+56])
                Texp_construct "Some"
                [
                  expression (src/ppx.ml[312,10723+47]..src/ppx.ml[312,10723+56])
                    Texp_ident "transform/1942"
                ]
            <arg>
              Optional "intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "lint_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_impl"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "preprocess_intf"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "instrument"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Optional "aliases"
              expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Texp_construct "None"
                []
            <arg>
              Nolabel
              expression (src/ppx.ml[312,10723+57]..src/ppx.ml[312,10723+69])
                Texp_constant Const_string("simple-ppx",(src/ppx.ml[312,10723+58]..src/ppx.ml[312,10723+68]),None)
          ]
    ]
]

{<Ppx>
 "debug"[value] -> <Ppx.135>;
 "foo"[value] -> <Ppx.127>;
 "print_constructor_arguments"[value] -> <Ppx.74>;
 "print_type_decl"[value] -> <Ppx.92>;
 "print_value_binding_expr"[value] -> <Ppx.11>;
 "print_value_binding_list"[value] -> <Ppx.23>;
 "print_value_binding_list2"[value] -> <Ppx.17>;
 "printdesc"[value] -> <Ppx.106>;
 "printdesc2"[value] -> <Ppx.9>;
 "printone"[value] -> <Ppx.128>;
 "printone2"[value] -> <Ppx.131>;
 "proc1"[value] -> <Ppx.133>;
 "proc2"[value] -> <Ppx.7>;
 "process_core_type"[value] -> <Ppx.33>;
 "process_core_type_desc"[value] -> <Ppx.31>;
 "process_core_type_list"[value] -> <Ppx.34>;
 "process_id"[value] -> <Ppx.27>;
 "process_kind"[value] -> <Ppx.88>;
 "process_pype_variant_constructor_declaration_list"[value] -> <Ppx.78>;
 "process_record_kind"[value] -> <Ppx.30>;
 "process_record_kind_list"[value] -> <Ppx.32>;
 "process_type_decl_list"[value] -> <Ppx.102>;
 "transform"[value] -> <Ppx.140>;
 }

(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (let
           (*match*/5107 =a (field 1 x/1047)
            pstr_desc/1275 =a (field 0 x/1047))
           (seq (apply (field 23 (global Ppx!)) pstr_desc/1275) 0))))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (let
           (pexp_attributes/1290 =a (field 3 x/1286)
            pexp_loc_stack/1289 =a (field 2 x/1286)
            pexp_loc/1288 =a (field 1 x/1286)
            pexp_desc/1287 =a (field 0 x/1286))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_desc/1287)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG66:desc" pexp_attributes/1290)))
             0))))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (let
           (pvb_loc/1297 =a (field 3 x/1293)
            pvb_attributes/1296 =a (field 2 x/1293)
            pvb_expr/1295 =a (field 1 x/1293)
            pvb_pat/1294 =a (field 0 x/1293))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.pat:" pvb_pat/1294)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.expr:" pvb_expr/1295)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.atrr:"
                   pvb_attributes/1296)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:value_binding.loc:" pvb_loc/1297)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (let (t/1301 =a (field 1 x/1299) h/1300 =a (field 0 x/1299))
             (seq (apply (field 3 (global Ppx!)) h/1300)
               (apply print_value_binding_list/1298 t/1301) 0)))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439
         (let (*match*/5108 =a (field 1 x/1439) txt/1723 =a (field 0 x/1439))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:process_id:" txt/1723)))
             txt/1723))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1724
       (function x/1729 : int
         (let
           (pld_attributes/1734 =a (field 4 x/1729)
            pld_loc/1733 =a (field 3 x/1729)
            pld_type/1732 =a (field 2 x/1729)
            pld_mutable/1731 =a (field 1 x/1729)
            pld_name/1730 =a (field 0 x/1729))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
                 pld_name/1730 "mutable" pld_mutable/1731 "type"
                 pld_type/1732)))))
      process_core_type_desc/1725
        (function x/1735 : int
          (switch* x/1735
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (let (name/1739 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_var:" name/1739))))
           case tag 1:
            (let
              (core_type2/1742 =a (field 2 x/1735)
               core_type/1741 =a (field 1 x/1735)
               arg_label/1740 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:")))
           case tag 2:
            (let (a/1738 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:")))
           case tag 3:
            (let
              (b/1737 =a (field 1 x/1735)
               a/1736 =a (field 0 x/1735)
               myid/1756 = (apply (field 5 (global Ppx!)) a/1736))
              (seq (apply process_core_type_list/1728 b/1737)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1736 "types"
                      b/1737 "id2" myid/1756)))))
           case tag 4:
            (let (b/1744 =a (field 1 x/1735) a/1743 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:")))
           case tag 5:
            (let (b/1746 =a (field 1 x/1735) a/1745 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:")))
           case tag 6:
            (let (b/1748 =a (field 1 x/1735) a/1747 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:")))
           case tag 7:
            (let
              (c/1751 =a (field 2 x/1735)
               b/1750 =a (field 1 x/1735)
               a/1749 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:")))
           case tag 8:
            (let (b/1753 =a (field 1 x/1735) a/1752 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:")))
           case tag 9:
            (let (a/1754 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_arrow3:" a/1754))))
           case tag 10:
            (let (a/1755 =a (field 0 x/1735))
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:Ptyp_extension:" a/1755))))))
      process_record_kind_list/1726
        (function x/1796 : int
          (if (isint x/1796) 0
            (let (t/1798 =a (field 1 x/1796) h/1797 =a (field 0 x/1796))
              (seq (apply process_record_kind/1724 h/1797)
                (apply process_record_kind_list/1726 t/1798) 0))))
      process_core_type/1727
        (function x/1799 : int
          (let
            (ptyp_attributes/1803 =a (field 3 x/1799)
             ptyp_loc_stack/1802 =a (field 2 x/1799)
             ptyp_loc/1801 =a (field 1 x/1799)
             ptyp_desc/1800 =a (field 0 x/1799))
            (seq (apply process_core_type_desc/1725 ptyp_desc/1800)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1800))))))
      process_core_type_list/1728
        (function x/1804 : int
          (if (isint x/1804) 0
            (let (t/1806 =a (field 1 x/1804) h/1805 =a (field 0 x/1804))
              (seq (apply process_core_type/1727 h/1805)
                (apply process_core_type_list/1728 t/1806))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1724)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1725)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1726)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1727)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1728)))
  (let
    (print_constructor_arguments/1807 =
       (function x/1809 : int
         (switch* x/1809
          case tag 0:
           (let (a/1810 =a (field 0 x/1809))
             (seq (apply (field 10 (global Ppx!)) a/1810)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1810)))))
          case tag 1:
           (let (a/1811 =a (field 0 x/1809))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pcstr_record:" a/1811)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1807))
  (letrec
    (process_pype_variant_constructor_declaration_list/1812
       (function x/1813 : int
         (if (isint x/1813) 0
           (let
             (h/1814 =a (field 0 x/1813)
              pcd_attributes/1821 =a (field 5 h/1814)
              pcd_loc/1820 =a (field 4 h/1814)
              pcd_res/1819 =a (field 3 h/1814)
              pcd_args/1818 =a (field 2 h/1814)
              pcd_vars/1817 =a (field 1 h/1814)
              pcd_name/1816 =a (field 0 h/1814)
              t/1815 =a (field 1 x/1813))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1818)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" pcd_name/1816
                     "vars" pcd_vars/1817 "args" pcd_args/1818 "res"
                     pcd_res/1819 "loc" pcd_loc/1820 "attrs"
                     pcd_attributes/1821)))
               (apply process_pype_variant_constructor_declaration_list/1812
                 t/1815)
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1812))
  (let
    (process_kind/1822 =
       (function x/1824 : int
         (switch* x/1824
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1825 =a (field 0 x/1824))
             (seq (apply (field 12 (global Ppx!)) a/1825)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1825)))))
          case tag 1:
           (let (a/1826 =a (field 0 x/1824))
             (apply (field 8 (global Ppx!)) a/1826)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1822))
  (let
    (print_type_decl/1827 =
       (function x/1829 : int
         (let
           (ptype_loc/1837 =a (field 7 x/1829)
            ptype_attributes/1836 =a (field 6 x/1829)
            ptype_manifest/1835 =a (field 5 x/1829)
            ptype_private/1834 =a (field 4 x/1829)
            ptype_kind/1833 =a (field 3 x/1829)
            ptype_cstrs/1832 =a (field 2 x/1829)
            ptype_params/1831 =a (field 1 x/1829)
            ptype_name/1830 =a (field 0 x/1829))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" ptype_name/1830)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" ptype_params/1831)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" ptype_cstrs/1832)))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1833)))
             (apply (field 13 (global Ppx!)) ptype_kind/1833)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   ptype_private/1834 "DEBUG:manifest" ptype_manifest/1835
                   "DEBUG:attr" ptype_attributes/1836 "DEBUG:loc"
                   ptype_loc/1837)))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1827))
  (letrec
    (process_type_decl_list/1838
       (function x/1839 : int
         (if (isint x/1839) 0
           (let (t/1841 =a (field 1 x/1839) h/1840 =a (field 0 x/1839))
             (seq (apply (field 14 (global Ppx!)) h/1840)
               (apply process_type_decl_list/1838 t/1841) 0)))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1838))
  (let
    (printdesc/1842 =
       (function x/1844 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1844)))
           (switch* x/1844
            case tag 0:
             (let
               (attributes/1846 =a (field 1 x/1844)
                expression/1845 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_eval:" expression/1845
                     attributes/1846))))
            case tag 1:
             (let
               (value_binding_list/1848 =a (field 1 x/1844)
                rec_flag/1847 =a (field 0 x/1844))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:" rec_flag/1847
                       value_binding_list/1848)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1848)))
            case tag 2:
             (let (value_description/1849 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_primitive:"
                     value_description/1849))))
            case tag 3:
             (let
               (type_declaration_list/1851 =a (field 1 x/1844)
                rec_flag/1850 =a (field 0 x/1844))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1851)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:" rec_flag/1850
                       type_declaration_list/1851)))))
            case tag 4:
             (let (type_extension/1852 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_typext:" type_extension/1852))))
            case tag 5:
             (let (extension_constructor/1853 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_exception:"
                     extension_constructor/1853))))
            case tag 6:
             (let (module_binding/1854 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_module:" module_binding/1854))))
            case tag 7:
             (let (module_binding_list/1855 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_recmodule:"
                     module_binding_list/1855))))
            case tag 8:
             (let (module_type_declaration/1856 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_modtype:"
                     module_type_declaration/1856))))
            case tag 9:
             (let (open_description/1857 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_open" open_description/1857))))
            case tag 10:
             (let (class_declarations/1858 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class:" class_declarations/1858))))
            case tag 11:
             (let (class_type_declarations/1859 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_class_type:"
                     class_type_declarations/1859))))
            case tag 12:
             (let (include_declaration/1860 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_include:"
                     include_declaration/1860))))
            case tag 13:
             (let (attribute/1861 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_attribute:" attribute/1861))))
            case tag 14:
             (let
               (attributes/1863 =a (field 1 x/1844)
                extension/1862 =a (field 0 x/1844))
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pstr_extension:" extension/1862
                     attributes/1863))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1842))
  (let (foo/1864 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1864))
  (let
    (printone/1865 =
       (function x/1866 : int
         (let
           (*match*/5109 =a (field 1 x/1866)
            pstr_desc/1867 =a (field 0 x/1866))
           (seq (apply (field 16 (global Ppx!)) pstr_desc/1867) 0))))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1865))
  (let
    (printone2/1868 =
       (function x/1869 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1869)))
           (apply (field 18 (global Ppx!)) x/1869))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1868))
  (let
    (proc1/1870 =
       (function x/1872 (seq (apply (field 19 (global Ppx!)) x/1872) x/1872)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1870))
  (let
    (debug/1873 =
       (function proc/1875 lst/1876 : int
         (let
           (result/1877 =
              (apply (field 18 (global Stdlib__List!)) proc/1875 lst/1876))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1941 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1941))))
               result/1877)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1873))
  (let
    (transform/1942 =
       (function x/1944
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1944)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1944)
           x/1944)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1942))
  (let
    (*match*/5111 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)
(seq
  (let
    (printdesc2/701 =
       (function x/703 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG21:" x/703)))
           0)))
    (setfield_ptr(root-init) 23 (global Ppx!) printdesc2/701))
  (let
    (printone/1045 =
       (function x/1047 : int
         (seq (apply (field 23 (global Ppx!)) (field 0 x/1047)) 0)))
    (setfield_ptr(root-init) 24 (global Ppx!) printone/1045))
  (let
    (printone2/1276 =
       (function x/1278 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG1:" x/1278)))
           (apply (field 24 (global Ppx!)) x/1278))))
    (setfield_ptr(root-init) 25 (global Ppx!) printone2/1276))
  (let
    (proc2/1279 =
       (function x/1281 : int
         (seq (apply (field 25 (global Ppx!)) x/1281) 0)))
    (setfield_ptr(root-init) 0 (global Ppx!) proc2/1279))
  (let
    (printdesc2/1282 =
       (function x/1283 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 "DEBUG33:" x/1283)))))
    (setfield_ptr(root-init) 1 (global Ppx!) printdesc2/1282))
  (let
    (print_value_binding_expr/1284 =
       (function x/1286 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 0 x/1286))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG66:desc" (field 3 x/1286))))
           0)))
    (setfield_ptr(root-init) 2 (global Ppx!) print_value_binding_expr/1284))
  (let
    (print_value_binding_list2/1291 =
       (function x/1293 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.pat:" (field 0 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.expr:" (field 1 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.atrr:" (field 2 x/1293))))
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:value_binding.loc:" (field 3 x/1293)))))))
    (setfield_ptr(root-init) 3 (global Ppx!) print_value_binding_list2/1291))
  (letrec
    (print_value_binding_list/1298
       (function x/1299 : int
         (if (isint x/1299) 0
           (seq (apply (field 3 (global Ppx!)) (field 0 x/1299))
             (apply print_value_binding_list/1298 (field 1 x/1299)) 0))))
    (setfield_ptr(root-init) 4 (global Ppx!) print_value_binding_list/1298))
  (let
    (process_id/1437 =
       (function x/1439
         (let (txt/1723 =a (field 0 x/1439))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:process_id:" txt/1723)))
             txt/1723))))
    (setfield_ptr(root-init) 5 (global Ppx!) process_id/1437))
  (letrec
    (process_record_kind/1724
       (function x/1729 : int
         (apply (field 45 (global Stdlib!))
           (apply (field 65 (global Batteries!))
             (makeblock 0 (*,*,*,int,*,*) "DEBUG:precord_kind:"
               (field 0 x/1729) "mutable" (field 1 x/1729) "type"
               (field 2 x/1729)))))
      process_core_type_desc/1725
        (function x/1735 : int
          (switch* x/1735
           case int 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_any:"))
           case tag 0:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_var:" (field 0 x/1735))))
           case tag 1:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow10:"))
           case tag 2:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_tuple:"))
           case tag 3:
            (let
              (b/1737 =a (field 1 x/1735)
               a/1736 =a (field 0 x/1735)
               myid/1756 = (apply (field 5 (global Ppx!)) a/1736))
              (seq (apply process_core_type_list/1728 b/1737)
                (apply (field 45 (global Stdlib!))
                  (apply (field 65 (global Batteries!))
                    (makeblock 0 "DEBUG:Ptyp_constr:" "id" a/1736 "types"
                      b/1737 "id2" myid/1756)))))
           case tag 4:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow8:"))
           case tag 5:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow7:"))
           case tag 6:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow6:"))
           case tag 7:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow5:"))
           case tag 8:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!)) "DEBUG:Ptyp_arrow4:"))
           case tag 9:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_arrow3:" (field 0 x/1735))))
           case tag 10:
            (apply (field 45 (global Stdlib!))
              (apply (field 65 (global Batteries!))
                (makeblock 0 "DEBUG:Ptyp_extension:" (field 0 x/1735))))))
      process_record_kind_list/1726
        (function x/1796 : int
          (if (isint x/1796) 0
            (seq (apply process_record_kind/1724 (field 0 x/1796))
              (apply process_record_kind_list/1726 (field 1 x/1796)) 0)))
      process_core_type/1727
        (function x/1799 : int
          (let (ptyp_desc/1800 =a (field 0 x/1799))
            (seq (apply process_core_type_desc/1725 ptyp_desc/1800)
              (apply (field 45 (global Stdlib!))
                (apply (field 65 (global Batteries!))
                  (makeblock 0 "DEBUG:core_type.ptyp_desc:" ptyp_desc/1800))))))
      process_core_type_list/1728
        (function x/1804 : int
          (if (isint x/1804) 0
            (seq (apply process_core_type/1727 (field 0 x/1804))
              (apply process_core_type_list/1728 (field 1 x/1804))))))
    (seq (setfield_ptr(root-init) 6 (global Ppx!) process_record_kind/1724)
      (setfield_ptr(root-init) 7 (global Ppx!) process_core_type_desc/1725)
      (setfield_ptr(root-init) 8 (global Ppx!) process_record_kind_list/1726)
      (setfield_ptr(root-init) 9 (global Ppx!) process_core_type/1727)
      (setfield_ptr(root-init) 10 (global Ppx!) process_core_type_list/1728)))
  (let
    (print_constructor_arguments/1807 =
       (function x/1809 : int
         (switch* x/1809
          case tag 0:
           (let (a/1810 =a (field 0 x/1809))
             (seq (apply (field 10 (global Ppx!)) a/1810)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Pcstr_tuple:" a/1810)))))
          case tag 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:Pcstr_record:" (field 0 x/1809)))))))
    (setfield_ptr(root-init) 11 (global Ppx!)
      print_constructor_arguments/1807))
  (letrec
    (process_pype_variant_constructor_declaration_list/1812
       (function x/1813 : int
         (if (isint x/1813) 0
           (let
             (h/1814 =a (field 0 x/1813) pcd_args/1818 =a (field 2 h/1814))
             (seq (apply (field 11 (global Ppx!)) pcd_args/1818)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "constructor_declaration:" (field 0 h/1814)
                     "vars" (field 1 h/1814) "args" pcd_args/1818 "res"
                     (field 3 h/1814) "loc" (field 4 h/1814) "attrs"
                     (field 5 h/1814))))
               (apply process_pype_variant_constructor_declaration_list/1812
                 (field 1 x/1813))
               0)))))
    (setfield_ptr(root-init) 12 (global Ppx!)
      process_pype_variant_constructor_declaration_list/1812))
  (let
    (process_kind/1822 =
       (function x/1824 : int
         (switch* x/1824
          case int 0:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case int 1:
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!)) "DEBUG:Ptype_abstract:"))
          case tag 0:
           (let (a/1825 =a (field 0 x/1824))
             (seq (apply (field 12 (global Ppx!)) a/1825)
               (apply (field 45 (global Stdlib!))
                 (apply (field 65 (global Batteries!))
                   (makeblock 0 "DEBUG:Ptype_variant:" a/1825)))))
          case tag 1: (apply (field 8 (global Ppx!)) (field 0 x/1824)))))
    (setfield_ptr(root-init) 13 (global Ppx!) process_kind/1822))
  (let
    (print_type_decl/1827 =
       (function x/1829 : int
         (let (ptype_kind/1833 =a (field 3 x/1829))
           (seq
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:type_decl:" (field 0 x/1829))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:parameters:" (field 1 x/1829))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:cstrs:" (field 2 x/1829))))
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:kind:" ptype_kind/1833)))
             (apply (field 13 (global Ppx!)) ptype_kind/1833)
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 (*,int,*,*,*,*,*,*) "DEBUG:private:"
                   (field 4 x/1829) "DEBUG:manifest" (field 5 x/1829)
                   "DEBUG:attr" (field 6 x/1829) "DEBUG:loc"
                   (field 7 x/1829))))))))
    (setfield_ptr(root-init) 14 (global Ppx!) print_type_decl/1827))
  (letrec
    (process_type_decl_list/1838
       (function x/1839 : int
         (if (isint x/1839) 0
           (seq (apply (field 14 (global Ppx!)) (field 0 x/1839))
             (apply process_type_decl_list/1838 (field 1 x/1839)) 0))))
    (setfield_ptr(root-init) 15 (global Ppx!) process_type_decl_list/1838))
  (let
    (printdesc/1842 =
       (function x/1844 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:structure_item_desc:" x/1844)))
           (switch* x/1844
            case tag 0:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_eval:" (field 0 x/1844)
                   (field 1 x/1844))))
            case tag 1:
             (let (value_binding_list/1848 =a (field 1 x/1844))
               (seq
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_value:"
                       (field 0 x/1844) value_binding_list/1848)))
                 (apply (field 4 (global Ppx!)) value_binding_list/1848)))
            case tag 2:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_primitive:" (field 0 x/1844))))
            case tag 3:
             (let (type_declaration_list/1851 =a (field 1 x/1844))
               (seq
                 (apply (field 15 (global Ppx!)) type_declaration_list/1851)
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 (*,int,*) "DEBUG:Pstr_type:"
                       (field 0 x/1844) type_declaration_list/1851)))))
            case tag 4:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_typext:" (field 0 x/1844))))
            case tag 5:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_exception:" (field 0 x/1844))))
            case tag 6:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_module:" (field 0 x/1844))))
            case tag 7:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_recmodule:" (field 0 x/1844))))
            case tag 8:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_modtype:" (field 0 x/1844))))
            case tag 9:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_open" (field 0 x/1844))))
            case tag 10:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class:" (field 0 x/1844))))
            case tag 11:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_class_type:" (field 0 x/1844))))
            case tag 12:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_include:" (field 0 x/1844))))
            case tag 13:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_attribute:" (field 0 x/1844))))
            case tag 14:
             (apply (field 45 (global Stdlib!))
               (apply (field 65 (global Batteries!))
                 (makeblock 0 "DEBUG:Pstr_extension:" (field 0 x/1844)
                   (field 1 x/1844))))))))
    (setfield_ptr(root-init) 16 (global Ppx!) printdesc/1842))
  (let (foo/1864 =[int] 1)
    (setfield_ptr(root-init) 17 (global Ppx!) foo/1864))
  (let
    (printone/1865 =
       (function x/1866 : int
         (seq (apply (field 16 (global Ppx!)) (field 0 x/1866)) 0)))
    (setfield_ptr(root-init) 18 (global Ppx!) printone/1865))
  (let
    (printone2/1868 =
       (function x/1869 : int
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG:SECOND::" x/1869)))
           (apply (field 18 (global Ppx!)) x/1869))))
    (setfield_ptr(root-init) 19 (global Ppx!) printone2/1868))
  (let
    (proc1/1870 =
       (function x/1872 (seq (apply (field 19 (global Ppx!)) x/1872) x/1872)))
    (setfield_ptr(root-init) 20 (global Ppx!) proc1/1870))
  (let
    (debug/1873 =
       (function proc/1875 lst/1876 : int
         (let
           (result/1877 =
              (apply (field 18 (global Stdlib__List!)) proc/1875 lst/1876))
           (seq
             (apply (field 16 (global Stdlib__List!))
               (function i/1941 : int
                 (apply (field 45 (global Stdlib!))
                   (apply (field 65 (global Batteries!))
                     (makeblock 0 "DEBUG:TOPLEVEL:" i/1941))))
               result/1877)
             0))))
    (setfield_ptr(root-init) 21 (global Ppx!) debug/1873))
  (let
    (transform/1942 =
       (function x/1944
         (seq
           (apply (field 45 (global Stdlib!))
             (apply (field 65 (global Batteries!))
               (makeblock 0 "DEBUG3:" x/1944)))
           (apply (field 21 (global Ppx!)) (field 20 (global Ppx!)) x/1944)
           x/1944)))
    (setfield_ptr(root-init) 22 (global Ppx!) transform/1942))
  (let
    (*match*/5111 =
       (apply (field 4 (global Ppxlib__Driver!)) 0 0 0 0
         (makeblock 0 (field 22 (global Ppx!))) 0 0 0 0 0 0 0 "simple-ppx"))
    0)
  0)

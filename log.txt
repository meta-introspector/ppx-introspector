File "src/ppx.ml", line 38, characters 4-12:
38 |     pexp_loc (* : location  *);
         ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc.
File "src/ppx.ml", line 39, characters 4-18:
39 |     pexp_loc_stack (* : location_stack *);
         ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc_stack.
File "src/ppx.ml", line 46, characters 18-21:
46 | let process_types (x):string = ""
                       ^^^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 47, characters 19-28:
47 | let process_option ( alist0):string = ""
                        ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 48, characters 22-31:
48 | let process_core_type ( alist0):string = ""
                           ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 49, characters 27-36:
49 | let process_direction_flag ( alist0):string = ""
                                ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 50, characters 24-35:
50 | let process_arg_label ( aarg_label0:arg_label):string=""
                             ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aarg_label0.
File "src/ppx.ml", line 51, characters 20-27:
51 | let process_cases ( acases0:cases):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable acases0.
File "src/ppx.ml", line 52, characters 30-47:
52 | let process_class_structure ( aclass_structure0:class_structure):string=""
                                   ^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aclass_structure0.
File "src/ppx.ml", line 53, characters 23-33:
53 | let process_constant ( aconstant0:constant):string=""
                            ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aconstant0.
File "src/ppx.ml", line 54, characters 24-35:
54 | let process_extension ( aextension0:extension):string=""
                             ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension0.
File "src/ppx.ml", line 55, characters 36-59:
55 | let process_extension_constructor ( aextension_constructor0:extension_constructor):string=""
                                         ^^^^^^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension_constructor0.
File "src/ppx.ml", line 56, characters 20-27:
56 | let process_label ( alabel0:label):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable alabel0.
File "src/ppx.ml", line 57, characters 20-27:
57 | let process_letop ( aletop0:letop):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable aletop0.
File "src/ppx.ml", line 58, characters 17-26:
58 | let process_list ( alist0):string=""
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 59, characters 16-24:
59 | let process_loc ( aloc0):string=""
                     ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aloc0.
File "src/ppx.ml", line 60, characters 28-43:
60 | let process_longident_loc ( alongident_loc0:longident_loc):string=""
                                 ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alongident_loc0.
File "src/ppx.ml", line 61, characters 26-39:
61 | let process_module_expr ( amodule_expr0:module_expr):string=""
                               ^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable amodule_expr0.
File "src/ppx.ml", line 62, characters 31-49:
62 | let process_open_declaration ( aopen_declaration0:open_declaration):string=""
                                    ^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aopen_declaration0.
File "src/ppx.ml", line 63, characters 23-33:
63 | let process_rec_flag ( arec_flag0:rec_flag):string=""
                            ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arec_flag0.
File "src/ppx.ml", line 105, characters 25-26:
105 | and process_pattern_desc x = ""
                               ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 169, characters 11-14:
169 |     { txt; loc }  ->
                 ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 180, characters 73-74:
180 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                               ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 180, characters 75-76:
180 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                                 ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 182, characters 23-24:
182 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 182, characters 45-46:
182 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                                                   ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 184, characters 23-24:
184 |   process_record_kind3 x s = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 184, characters 25-26:
184 |   process_record_kind3 x s = ""
                               ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 192, characters 5-12:
192 |      pld_loc(* : Location.t *);
           ^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_loc.
File "src/ppx.ml", line 193, characters 5-19:
193 |      pld_attributes(* : attributes *); 
           ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_attributes.
File "src/ppx.ml", line 210, characters 15-18:
210 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 235, characters 16-25:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arg_label.
File "src/ppx.ml", line 235, characters 28-37:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                  ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type.
File "src/ppx.ml", line 235, characters 40-50:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                              ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type2.
File "src/ppx.ml", line 240, characters 17-18:
240 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                       ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 240, characters 19-20:
240 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                         ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 243, characters 18-19:
243 |   | Ptyp_class (a,b) (* of Longident.t loc * core_type list *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 245, characters 8-12:
245 |     let myid = (process_id (a,s)) in
              ^^^^
Warning 26 [unused-var]: unused variable myid.
File "src/ppx.ml", line 248, characters 16-17:
248 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                      ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 248, characters 18-19:
248 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 252, characters 18-19:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                        ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 252, characters 20-21:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                          ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 252, characters 22-23:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                            ^
Warning 27 [unused-var-strict]: unused variable c.
File "src/ppx.ml", line 255, characters 15-16:
255 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                     ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 255, characters 17-18:
255 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                       ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 283, characters 6-14:
283 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 284, characters 6-20:
284 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 285, characters 6-21:
285 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 329, characters 21-22:
329 |     | Ptyp_constr (a,b) (* of Longident.t loc * core_type list *)
                           ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 331, characters 15-18:
331 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 344, characters 16-25:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arg_label.
File "src/ppx.ml", line 344, characters 28-37:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                  ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type.
File "src/ppx.ml", line 344, characters 40-50:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                              ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type2.
File "src/ppx.ml", line 349, characters 17-18:
349 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                       ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 349, characters 19-20:
349 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                         ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 352, characters 18-19:
352 |   | Ptyp_class (a,b) (* of Longident.t loc * core_type list *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 354, characters 8-12:
354 |     let myid = (process_id (a,s)) in
              ^^^^
Warning 26 [unused-var]: unused variable myid.
File "src/ppx.ml", line 357, characters 16-17:
357 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                      ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 357, characters 18-19:
357 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 361, characters 18-19:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                        ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 361, characters 20-21:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                          ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 361, characters 22-23:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                            ^
Warning 27 [unused-var-strict]: unused variable c.
File "src/ppx.ml", line 364, characters 15-16:
364 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                     ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 364, characters 17-18:
364 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                       ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 383, characters 6-14:
383 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 384, characters 6-20:
384 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 385, characters 6-21:
385 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 392, characters 9-10:
392 |   | (x,s,n) ->
               ^
Warning 27 [unused-var-strict]: unused variable n.
File "src/ppx.ml", line 396, characters 8-16:
396 |         ptyp_loc(* : Location.t *);
              ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 397, characters 8-22:
397 |         ptyp_loc_stack(* : location_stack *);
              ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 398, characters 8-23:
398 |         ptyp_attributes(* : attributes; *)
              ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 457, characters 4-9:
457 |   | other  -> "other"
          ^^^^^
Warning 27 [unused-var-strict]: unused variable other.
File "src/ppx.ml", line 459, characters 36-40:
459 | let decl_emit_constructor_arguments(name,x,s):string =
                                          ^^^^
Warning 27 [unused-var-strict]: unused variable name.
File "src/ppx.ml", line 463, characters 4-9:
463 |   | other  -> "other"
          ^^^^^
Warning 27 [unused-var-strict]: unused variable other.
File "src/ppx.ml", line 646, characters 6-9:
646 |   let foo = (debug proc1 x) in
            ^^^
Warning 26 [unused-var]: unused variable foo.
File "src/ppx.ml", line 38, characters 4-12:
38 |     pexp_loc (* : location  *);
         ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc.
File "src/ppx.ml", line 39, characters 4-18:
39 |     pexp_loc_stack (* : location_stack *);
         ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc_stack.
File "src/ppx.ml", line 46, characters 18-21:
46 | let process_types (x):string = ""
                       ^^^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 47, characters 19-28:
47 | let process_option ( alist0):string = ""
                        ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 48, characters 22-31:
48 | let process_core_type ( alist0):string = ""
                           ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 49, characters 27-36:
49 | let process_direction_flag ( alist0):string = ""
                                ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 50, characters 24-35:
50 | let process_arg_label ( aarg_label0:arg_label):string=""
                             ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aarg_label0.
File "src/ppx.ml", line 51, characters 20-27:
51 | let process_cases ( acases0:cases):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable acases0.
File "src/ppx.ml", line 52, characters 30-47:
52 | let process_class_structure ( aclass_structure0:class_structure):string=""
                                   ^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aclass_structure0.
File "src/ppx.ml", line 53, characters 23-33:
53 | let process_constant ( aconstant0:constant):string=""
                            ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aconstant0.
File "src/ppx.ml", line 54, characters 24-35:
54 | let process_extension ( aextension0:extension):string=""
                             ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension0.
File "src/ppx.ml", line 55, characters 36-59:
55 | let process_extension_constructor ( aextension_constructor0:extension_constructor):string=""
                                         ^^^^^^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension_constructor0.
File "src/ppx.ml", line 56, characters 20-27:
56 | let process_label ( alabel0:label):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable alabel0.
File "src/ppx.ml", line 57, characters 20-27:
57 | let process_letop ( aletop0:letop):string=""
                         ^^^^^^^
Warning 27 [unused-var-strict]: unused variable aletop0.
File "src/ppx.ml", line 58, characters 17-26:
58 | let process_list ( alist0):string=""
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "src/ppx.ml", line 59, characters 16-24:
59 | let process_loc ( aloc0):string=""
                     ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aloc0.
File "src/ppx.ml", line 60, characters 28-43:
60 | let process_longident_loc ( alongident_loc0:longident_loc):string=""
                                 ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alongident_loc0.
File "src/ppx.ml", line 61, characters 26-39:
61 | let process_module_expr ( amodule_expr0:module_expr):string=""
                               ^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable amodule_expr0.
File "src/ppx.ml", line 62, characters 31-49:
62 | let process_open_declaration ( aopen_declaration0:open_declaration):string=""
                                    ^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aopen_declaration0.
File "src/ppx.ml", line 63, characters 23-33:
63 | let process_rec_flag ( arec_flag0:rec_flag):string=""
                            ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arec_flag0.
File "src/ppx.ml", line 105, characters 25-26:
105 | and process_pattern_desc x = ""
                               ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 169, characters 11-14:
169 |     { txt; loc }  ->
                 ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 180, characters 73-74:
180 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                               ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 180, characters 75-76:
180 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                                 ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 182, characters 23-24:
182 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 182, characters 45-46:
182 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                                                   ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 184, characters 23-24:
184 |   process_record_kind3 x s = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "src/ppx.ml", line 184, characters 25-26:
184 |   process_record_kind3 x s = ""
                               ^
Warning 27 [unused-var-strict]: unused variable s.
File "src/ppx.ml", line 192, characters 5-12:
192 |      pld_loc(* : Location.t *);
           ^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_loc.
File "src/ppx.ml", line 193, characters 5-19:
193 |      pld_attributes(* : attributes *); 
           ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_attributes.
File "src/ppx.ml", line 210, characters 15-18:
210 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 235, characters 16-25:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arg_label.
File "src/ppx.ml", line 235, characters 28-37:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                  ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type.
File "src/ppx.ml", line 235, characters 40-50:
235 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                              ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type2.
File "src/ppx.ml", line 240, characters 17-18:
240 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                       ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 240, characters 19-20:
240 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                         ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 243, characters 18-19:
243 |   | Ptyp_class (a,b) (* of Longident.t loc * core_type list *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 245, characters 8-12:
245 |     let myid = (process_id (a,s)) in
              ^^^^
Warning 26 [unused-var]: unused variable myid.
File "src/ppx.ml", line 248, characters 16-17:
248 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                      ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 248, characters 18-19:
248 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 252, characters 18-19:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                        ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 252, characters 20-21:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                          ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 252, characters 22-23:
252 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                            ^
Warning 27 [unused-var-strict]: unused variable c.
File "src/ppx.ml", line 255, characters 15-16:
255 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                     ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 255, characters 17-18:
255 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                       ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 283, characters 6-14:
283 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 284, characters 6-20:
284 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 285, characters 6-21:
285 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 329, characters 21-22:
329 |     | Ptyp_constr (a,b) (* of Longident.t loc * core_type list *)
                           ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 331, characters 15-18:
331 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "src/ppx.ml", line 344, characters 16-25:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arg_label.
File "src/ppx.ml", line 344, characters 28-37:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                  ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type.
File "src/ppx.ml", line 344, characters 40-50:
344 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                              ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type2.
File "src/ppx.ml", line 349, characters 17-18:
349 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                       ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 349, characters 19-20:
349 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                         ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 352, characters 18-19:
352 |   | Ptyp_class (a,b) (* of Longident.t loc * core_type list *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 354, characters 8-12:
354 |     let myid = (process_id (a,s)) in
              ^^^^
Warning 26 [unused-var]: unused variable myid.
File "src/ppx.ml", line 357, characters 16-17:
357 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                      ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 357, characters 18-19:
357 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 361, characters 18-19:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                        ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 361, characters 20-21:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                          ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 361, characters 22-23:
361 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                            ^
Warning 27 [unused-var-strict]: unused variable c.
File "src/ppx.ml", line 364, characters 15-16:
364 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                     ^
Warning 27 [unused-var-strict]: unused variable a.
File "src/ppx.ml", line 364, characters 17-18:
364 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                       ^
Warning 27 [unused-var-strict]: unused variable b.
File "src/ppx.ml", line 383, characters 6-14:
383 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 384, characters 6-20:
384 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 385, characters 6-21:
385 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 392, characters 9-10:
392 |   | (x,s,n) ->
               ^
Warning 27 [unused-var-strict]: unused variable n.
File "src/ppx.ml", line 396, characters 8-16:
396 |         ptyp_loc(* : Location.t *);
              ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "src/ppx.ml", line 397, characters 8-22:
397 |         ptyp_loc_stack(* : location_stack *);
              ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "src/ppx.ml", line 398, characters 8-23:
398 |         ptyp_attributes(* : attributes; *)
              ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "src/ppx.ml", line 457, characters 4-9:
457 |   | other  -> "other"
          ^^^^^
Warning 27 [unused-var-strict]: unused variable other.
File "src/ppx.ml", line 459, characters 36-40:
459 | let decl_emit_constructor_arguments(name,x,s):string =
                                          ^^^^
Warning 27 [unused-var-strict]: unused variable name.
File "src/ppx.ml", line 463, characters 4-9:
463 |   | other  -> "other"
          ^^^^^
Warning 27 [unused-var-strict]: unused variable other.
File "src/ppx.ml", line 646, characters 6-9:
646 |   let foo = (debug proc1 x) in
            ^^^
Warning 26 [unused-var]: unused variable foo.
["DEBUG3:"; (Tag9 (((((("Alcotest"), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0))), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0), 0), 1, (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0), 0)), (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0)); (Tag9 (((((("Ppxlib"), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0))), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0), 0), 1, (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0), 0)), (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0)); (Tag1 (0, [(((("loc", (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0))), (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0), 0, 0), (((Tag1 (("Location"), "none"), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0))), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0), 0, 0), 0, (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0))]), (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0)); (Tag6 (((("Ast"), (("test/test.ml", 6, 56, 63), ("test/test.ml", 6, 56, 66), 0)), (((("Ast"), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0), 0), 0, (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0)); (Tag6 (((("Ast_helper"), (("test/test.ml", 7, 73, 80), ("test/test.ml", 7, 73, 90), 0)), (((("Ast_helper"), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0), 0), 0, (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0)); (Tag6 (((("Ast_magic"), (("test/test.ml", 8, 104, 111), ("test/test.ml", 8, 104, 120), 0)), (((Tag1 (Tag1 (("Selected_ast"), "Ast"), "Config"), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0), 0), 0, (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0)); (Tag6 (((("Asttypes"), (("test/test.ml", 9, 147, 154), ("test/test.ml", 9, 147, 162), 0)), (((("Asttypes"), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0), 0), 0, (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0)); (Tag6 (((("Parse"), (("test/test.ml", 10, 174, 181), ("test/test.ml", 10, 174, 186), 0)), (((("Parse"), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0), 0), 0, (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0)); (Tag6 (((("Parsetree"), (("test/test.ml", 11, 195, 202), ("test/test.ml", 11, 195, 211), 0)), (((("Parsetree"), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0), 0), 0, (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0)); (Tag6 (((("Pprintast"), (("test/test.ml", 12, 224, 231), ("test/test.ml", 12, 224, 240), 0)), (((Tag1 (("Astlib"), "Pprintast"), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0), 0), 0, (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0)); (Tag6 (((("Selected_ast"), (("test/test.ml", 13, 260, 267), ("test/test.ml", 13, 260, 279), 0)), (((("Selected_ast"), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0), 0), 0, (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0)); (Tag1 (0, [(((("ast", (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0))), (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0), 0, 0), (Tag2 (0, [(((("pp_ast", (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0))), (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0), 0, 0), (Tag4 (0, 0, ((("fmt", (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0))), (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0), 0, 0), (Tag4 (0, 0, ((("v", (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0))), (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0), 0, 0), (Tag5 ((((Tag1 (("Format"), "fprintf"), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0))), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0), 0, 0), [(0, (((("fmt"), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0))), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0), 0, 0)); (0, (Tag1 (Tag2 ("%S", (("test/test.ml", 17, 327, 351), ("test/test.ml", 17, 327, 353), 0), 0)), (("test/test.ml", 17, 327, 350), ("test/test.ml", 17, 327, 354), 0), 0, 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0))), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0), 0, 0), [(0, (((("v"), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0))), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0), 0, 0))]), (("test/test.ml", 17, 327, 355), ("test/test.ml", 17, 327, 389), 0), [(("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 388), 0)], 0))]), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 389), 0), 0, 0)), (("test/test.ml", 16, 306, 323), ("test/test.ml", 17, 327, 389), 1), 0, 0)), (("test/test.ml", 16, 306, 319), ("test/test.ml", 17, 327, 389), 1), 0, 0), 0, (("test/test.ml", 16, 306, 308), ("test/test.ml", 17, 327, 389), 0))], (Tag2 (0, [(((("compare", (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0))), (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0), 0, 0), (Tag4 (0, 0, ((("expected", (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0))), (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0), 0, 0), (Tag4 (0, 0, ((("actual", (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0))), (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0), 0, 0), (Tag5 ((((Tag1 (("String"), "equal"), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0))), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0))), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0), 0, 0), [(0, (((("expected"), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0))), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0), 0, 0))]), (("test/test.ml", 21, 444, 450), ("test/test.ml", 21, 444, 491), 0), [(("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 490), 0)], 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0))), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0), 0, 0), [(0, (((("actual"), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0))), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0), 0, 0))]), (("test/test.ml", 22, 492, 498), ("test/test.ml", 22, 492, 537), 0), [(("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 536), 0)], 0))]), (("test/test.ml", 20, 427, 431), ("test/test.ml", 22, 492, 537), 0), 0, 0)), (("test/test.ml", 19, 395, 418), ("test/test.ml", 22, 492, 537), 1), 0, 0)), (("test/test.ml", 19, 395, 409), ("test/test.ml", 22, 492, 537), 1), 0, 0), 0, (("test/test.ml", 19, 395, 397), ("test/test.ml", 22, 492, 537), 0))], (Tag5 ((((("testable"), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0))), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0), 0, 0), [(0, (((("pp_ast"), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0))), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0), 0, 0)); (0, (((("compare"), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0))), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0), 0, 0))]), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 19, 395, 397), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 16, 306, 308), ("test/test.ml", 24, 543, 568), 0), 0, 0), 0, (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0))]), (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0)); (Tag3 (1, [(("core_type", (("test/test.ml", 27, 571, 576), ("test/test.ml", 27, 571, 585), 0)), 0, 0, Tag1 ([(("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), 0, (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0), (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 641), 0), 0); (("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0), (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 664), 0), 0); (("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0), (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 699), 0), 0); (("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0), (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 731), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0)), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0, 0)], (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))]), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type"), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0)), 0), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0), 0, 0)), 0, (("test/test.ml", 27, 571, 571), ("test/test.ml", 32, 764, 765), 0)); (("expression", (("test/test.ml", 33, 766, 770), ("test/test.ml", 33, 766, 780), 0)), 0, 0, Tag1 ([(("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), 0, (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0), (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 838), 0), 0); (("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0), (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 861), 0), 0); (("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0), (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 896), 0), 0); (("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0), (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 928), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0)), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0, 0)], (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))]), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression"), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0)), 0), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0), 0, 0)), 0, (("test/test.ml", 33, 766, 766), ("test/test.ml", 38, 961, 962), 0)); (("pattern", (("test/test.ml", 40, 964, 968), ("test/test.ml", 40, 964, 975), 0)), 0, 0, Tag1 ([(("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), 0, (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0), (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1027), 0), 0); (("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0), (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1050), 0), 0); (("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0), (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1085), 0), 0); (("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0), (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1117), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0)), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0, 0)], (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))]), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern"), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0)), 0), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0), 0, 0)), 0, (("test/test.ml", 40, 964, 964), ("test/test.ml", 45, 1150, 1151), 0)); (("pattern_desc", (("test/test.ml", 47, 1153, 1157), ("test/test.ml", 47, 1153, 1169), 0)), 0, 0, ([(("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern_desc"), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0)), 0), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0), 0, 0)), 0, (("test/test.ml", 47, 1153, 1153), ("test/test.ml", 100, 3430, 3470), 0)); (("expression_desc", (("test/test.ml", 102, 3496, 3500), ("test/test.ml", 102, 3496, 3515), 0)), 0, 0, ([(("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression_desc"), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0)), 0), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0), 0, 0)), 0, (("test/test.ml", 102, 3496, 3496), ("test/test.ml", 228, 9219, 9239), 0)); (("core_type_desc", (("test/test.ml", 230, 9253, 9257), ("test/test.ml", 230, 9253, 9271), 0)), 0, 0, ([(("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type_desc"), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0)), 0), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0), 0, 0)), 0, (("test/test.ml", 230, 9253, 9253), ("test/test.ml", 308, 12504, 12535), 0)); (("value_binding", (("test/test.ml", 309, 12555, 12559), ("test/test.ml", 309, 12555, 12572), 0)), 0, 0, Tag1 ([(("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), 0, (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0), (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12623), 0), 0); (("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), 0, (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0), (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12648), 0), 0); (("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0), (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12679), 0), 0); (("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0), (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12701), 0), 0)]), 1, ((Tag3 ((Tag1 (("Parsetree"), "value_binding"), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0)), 0), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0), 0, 0)), 0, (("test/test.ml", 309, 12555, 12555), ("test/test.ml", 314, 12702, 12703), 0))]), (("test/test.ml", 27, 571, 571), ("test/test.ml", 314, 12702, 12703), 0)); (Tag1 (0, [(((("test", (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0))), (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0), 0, 0), (Tag4 (0, 0, (Tag5 ((("()"), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0)), 0), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0), 0, 0), (Tag5 ((((("check"), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0))), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0), 0, 0), [(0, (((("ast"), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0))), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0), 0, 0)); (0, (Tag1 (Tag2 ("case I", (("test/test.ml", 318, 12720, 12733), ("test/test.ml", 318, 12720, 12739), 0), 0)), (("test/test.ml", 318, 12720, 12732), ("test/test.ml", 318, 12720, 12740), 0), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("Pexp_constant"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag9 ((("Pconst_string"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag8 ([(Tag1 (Tag2 ("r3p14ccd 70 r4nd0m 5tr1n9", (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (Tag9 ((("None"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("Pexp_extension"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag8 ([(Tag11 ([((("txt"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag1 (Tag2 ("yay", (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0); (Tag9 ((("PStr"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))]), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12791), 0), 0, 0)), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), 0, (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0))]), (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0)); (Tag1 (0, [((Tag5 ((("()"), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0)), 0), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0), 0, 0), (Tag5 ((((("run"), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0))), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0), 0, 0), [(0, (Tag1 (Tag2 ("Simple ppx test suit", (("test/test.ml", 321, 12802, 12809), ("test/test.ml", 321, 12802, 12829), 0), 0)), (("test/test.ml", 321, 12802, 12808), ("test/test.ml", 321, 12802, 12830), 0), 0, 0)); (0, (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Transform", (("test/test.ml", 321, 12802, 12835), ("test/test.ml", 321, 12802, 12844), 0), 0)), (("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12845), 0), 0, 0); (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Test", (("test/test.ml", 321, 12802, 12851), ("test/test.ml", 321, 12802, 12855), 0), 0)), (("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12856), 0), 0, 0); (Tag10 ("Quick", 0), (("test/test.ml", 321, 12802, 12858), ("test/test.ml", 321, 12802, 12864), 0), 0, 0); (((("test"), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0))), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12871), 0), [(("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12870), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1)), 0), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1), 0, 0))), (("test/test.ml", 321, 12802, 12847), ("test/test.ml", 321, 12802, 12873), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12874), 0), [(("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12873), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1)), 0), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1), 0, 0))), (("test/test.ml", 321, 12802, 12831), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))]), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12876), 0), 0, 0), 0, (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0))]), (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0)); (Tag3 (1, [(("string_list", (("test/test.ml", 362, 14829, 14834), ("test/test.ml", 362, 14829, 14845), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 362, 14829, 14855), ("test/test.ml", 362, 14829, 14859), 0)), [(Tag3 ((("string"), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0)), 0), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0), 0, 0)]), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14859), 0), 0, 0)), 0, (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0))]), (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0)); (Tag3 (1, [(("core_type_list", (("test/test.ml", 363, 14860, 14865), ("test/test.ml", 363, 14860, 14879), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 363, 14860, 14892), ("test/test.ml", 363, 14860, 14896), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0)), 0), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0), 0, 0)]), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14896), 0), 0, 0)), 0, (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0))]), (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0)); (Tag1 (0, [(((("printdesc2", (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0))), (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0))), (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0)), 0), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 367, 15002, 15040), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0))), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0))), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG21:", (("test/test.ml", 368, 15051, 15086), ("test/test.ml", 368, 15051, 15094), 0), 0)), (("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15095), 0), 0, 0); (((("x"), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0))), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0), 0, 0)]), (("test/test.ml", 368, 15051, 15084), ("test/test.ml", 368, 15051, 15099), 0), [(("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15098), 0)], 0))]), (("test/test.ml", 368, 15051, 15068), ("test/test.ml", 368, 15051, 15100), 0), [(("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15099), 0)], 0))]), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 368, 15051, 15101), 0), [(("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15100), 0)], 0), (Tag1 (Tag2 ("descr", (("test/test.ml", 369, 15103, 15106), ("test/test.ml", 369, 15103, 15111), 0), 0)), (("test/test.ml", 369, 15103, 15105), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 369, 15103, 15112), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0)), 0), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0), 0, 0)), (("test/test.ml", 367, 15002, 15041), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 369, 15103, 15112), 1), 0, 0), 0, (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0))]), (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0)); (Tag1 (0, [(((("printone", (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0))), (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0))), (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0)), 0), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 371, 15114, 15148), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0))), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 1)), ((("pstr_desc", (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0))), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0), 0, 0))], 1), (("test/test.ml", 373, 15174, 15177), ("test/test.ml", 376, 15224, 15227), 0), 0, 0), 0, (Tag5 ((((("printdesc2"), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0))), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0), 0, 0), [(0, (((("pstr_desc"), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0))), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0), 0, 0))]), (("test/test.ml", 377, 15231, 15235), ("test/test.ml", 377, 15231, 15257), 0), [(("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15256), 0)], 0))]), (("test/test.ml", 372, 15159, 15161), ("test/test.ml", 377, 15231, 15257), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0)), 0), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0), 0, 0)), (("test/test.ml", 371, 15114, 15149), ("test/test.ml", 377, 15231, 15257), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 377, 15231, 15257), 1), 0, 0), 0, (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0))]), (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0)); (Tag1 (0, [(((("printone2", (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0))), (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0))), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0))), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0))), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG1:", (("test/test.ml", 382, 15297, 15332), ("test/test.ml", 382, 15297, 15339), 0), 0)), (("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15340), 0), 0, 0); (((("x"), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0))), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0), 0, 0)]), (("test/test.ml", 382, 15297, 15330), ("test/test.ml", 382, 15297, 15343), 0), [(("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15342), 0)], 0))]), (("test/test.ml", 382, 15297, 15314), ("test/test.ml", 382, 15297, 15344), 0), [(("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15343), 0)], 0))]), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 382, 15297, 15345), 0), [(("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15344), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0))), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0))), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0), 0, 0))]), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 383, 15347, 15359), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0)), 0), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0), 0, 0)), (("test/test.ml", 381, 15271, 15287), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 383, 15347, 15359), 1), 0, 0), 0, (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0))]), (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0)); (Tag1 (0, [(((("proc2", (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0))), (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0))), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0))), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0))), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0), 0, 0))]), (("test/test.ml", 386, 15385, 15387), ("test/test.ml", 386, 15385, 15400), 0), [(("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15399), 0)], 0), (Tag3 ((("string"), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0)), 0), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0), 0, 0)), (("test/test.ml", 385, 15361, 15374), ("test/test.ml", 386, 15385, 15400), 0), 0, 0)), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 386, 15385, 15400), 1), 0, 0), 0, (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0))]), (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0)); (Tag1 (0, [(((("printdesc2", (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0))), (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0))), (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0)), 0), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 389, 15405, 15443), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0))), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0))), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG33:", (("test/test.ml", 390, 15454, 15489), ("test/test.ml", 390, 15454, 15497), 0), 0)), (("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15498), 0), 0, 0); (((("x"), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0))), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0), 0, 0)]), (("test/test.ml", 390, 15454, 15487), ("test/test.ml", 390, 15454, 15502), 0), [(("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15501), 0)], 0))]), (("test/test.ml", 390, 15454, 15471), ("test/test.ml", 390, 15454, 15503), 0), [(("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15502), 0)], 0))]), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 390, 15454, 15504), 0), [(("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15503), 0)], 0), (Tag1 (Tag2 ("FIXME123", (("test/test.ml", 391, 15506, 15509), ("test/test.ml", 391, 15506, 15517), 0), 0)), (("test/test.ml", 391, 15506, 15508), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 391, 15506, 15518), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0)), 0), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0), 0, 0)), (("test/test.ml", 389, 15405, 15444), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 391, 15506, 15518), 1), 0, 0), 0, (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0))]), (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0)); (Tag1 (0, [(((("print_value_binding_expr", (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0))), (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0))), (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0)), 0), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 393, 15522, 15567), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0))), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0), 0, 0), [((Tag7 ([((("pexp_desc"), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 1)), ((("pexp_desc", (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0))), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0), 0, 0)); ((("pexp_loc"), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 1)), ((("pexp_loc", (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0))), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 1)), ((("pexp_loc_stack", (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0))), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 1)), ((("pexp_attributes", (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0))), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0), 0, 0))], 0), (("test/test.ml", 395, 15593, 15597), ("test/test.ml", 400, 15783, 15786), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0))), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0))), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 401, 15790, 15827), ("test/test.ml", 401, 15790, 15839), 0), 0)), (("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15840), 0), 0, 0); (((("pexp_desc"), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0))), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0), 0, 0)]), (("test/test.ml", 401, 15790, 15825), ("test/test.ml", 401, 15790, 15853), 0), [(("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15851), 0)], 0))]), (("test/test.ml", 401, 15790, 15809), ("test/test.ml", 401, 15790, 15854), 0), [(("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15853), 0)], 0))]), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 401, 15790, 15855), 0), [(("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15854), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0))), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0))), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 402, 15857, 15894), ("test/test.ml", 402, 15857, 15906), 0), 0)), (("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15907), 0), 0, 0); (((("pexp_attributes"), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0))), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0), 0, 0)]), (("test/test.ml", 402, 15857, 15892), ("test/test.ml", 402, 15857, 15926), 0), [(("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15924), 0)], 0))]), (("test/test.ml", 402, 15857, 15876), ("test/test.ml", 402, 15857, 15927), 0), [(("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15926), 0)], 0))]), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 402, 15857, 15928), 0), [(("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15927), 0)], 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 403, 15930, 15933), ("test/test.ml", 403, 15930, 15937), 0), 0)), (("test/test.ml", 403, 15930, 15932), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 403, 15930, 15938), 0), 0, 0))]), (("test/test.ml", 394, 15578, 15580), ("test/test.ml", 403, 15930, 15938), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0)), 0), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0), 0, 0)), (("test/test.ml", 393, 15522, 15568), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 403, 15930, 15938), 1), 0, 0), 0, (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0))]), (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0)); (Tag1 (0, [(((("print_value_binding_list2", (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0))), (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0))), (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0), 0, 0), (Tag3 ((("value_binding"), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0)), 0), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 405, 15942, 15991), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0))), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0), 0, 0), [((Tag7 ([((("pvb_pat"), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 1)), ((("pvb_pat", (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0))), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0), 0, 0)); ((("pvb_expr"), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 1)), ((("pvb_expr", (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0))), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0), 0, 0)); ((("pvb_attributes"), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 1)), ((("pvb_attributes", (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0))), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0), 0, 0)); ((("pvb_loc"), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 1)), ((("pvb_loc", (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0))), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0), 0, 0))], 0), (("test/test.ml", 407, 16018, 16022), ("test/test.ml", 412, 16159, 16162), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0))), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0))), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.pat:", (("test/test.ml", 413, 16166, 16203), ("test/test.ml", 413, 16166, 16227), 0), 0)), (("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16228), 0), 0, 0); (((("pvb_pat"), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0))), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0), 0, 0)]), (("test/test.ml", 413, 16166, 16201), ("test/test.ml", 413, 16166, 16239), 0), [(("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16237), 0)], 0))]), (("test/test.ml", 413, 16166, 16185), ("test/test.ml", 413, 16166, 16240), 0), [(("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16239), 0)], 0))]), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 413, 16166, 16241), 0), [(("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16240), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0))), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0))), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.expr:", (("test/test.ml", 414, 16243, 16280), ("test/test.ml", 414, 16243, 16305), 0), 0)), (("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16306), 0), 0, 0); (((("pvb_expr"), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0))), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0), 0, 0)]), (("test/test.ml", 414, 16243, 16278), ("test/test.ml", 414, 16243, 16318), 0), [(("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16316), 0)], 0))]), (("test/test.ml", 414, 16243, 16262), ("test/test.ml", 414, 16243, 16319), 0), [(("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16318), 0)], 0))]), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 414, 16243, 16320), 0), [(("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16319), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0))), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0))), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.atrr:", (("test/test.ml", 416, 16364, 16401), ("test/test.ml", 416, 16364, 16426), 0), 0)), (("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16427), 0), 0, 0); (((("pvb_attributes"), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0))), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0), 0, 0)]), (("test/test.ml", 416, 16364, 16399), ("test/test.ml", 416, 16364, 16445), 0), [(("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16443), 0)], 0))]), (("test/test.ml", 416, 16364, 16383), ("test/test.ml", 416, 16364, 16446), 0), [(("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16445), 0)], 0))]), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 416, 16364, 16447), 0), [(("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16446), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0))), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0))), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.loc:", (("test/test.ml", 417, 16449, 16486), ("test/test.ml", 417, 16449, 16510), 0), 0)), (("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16511), 0), 0, 0); (((("pvb_loc"), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0))), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0), 0, 0)]), (("test/test.ml", 417, 16449, 16484), ("test/test.ml", 417, 16449, 16522), 0), [(("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16520), 0)], 0))]), (("test/test.ml", 417, 16449, 16468), ("test/test.ml", 417, 16449, 16523), 0), [(("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16522), 0)], 0))]), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 417, 16449, 16524), 0), [(("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16523), 0)], 0), (Tag1 (Tag2 ("yodo", (("test/test.ml", 418, 16526, 16531), ("test/test.ml", 418, 16526, 16535), 0), 0)), (("test/test.ml", 418, 16526, 16530), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 418, 16526, 16536), 0), 0, 0))]), (("test/test.ml", 406, 16003, 16005), ("test/test.ml", 418, 16526, 16536), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0)), 0), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0), 0, 0)), (("test/test.ml", 405, 15942, 15992), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 418, 16526, 16536), 1), 0, 0), 0, (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0))]), (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0)); (Tag1 (1, [(((("print_value_binding_list", (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0))), (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0))), (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0), 0, 0), (Tag3 ((("list"), (("test/test.ml", 420, 16538, 16590), ("test/test.ml", 420, 16538, 16594), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0)), 0), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0), 0, 0)]), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16594), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 420, 16538, 16595), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0))), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0)), 0), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0), 0, 0), 0, (Tag1 (Tag2 ("print_value_binding_list", (("test/test.ml", 422, 16621, 16632), ("test/test.ml", 422, 16621, 16656), 0), 0)), (("test/test.ml", 422, 16621, 16631), ("test/test.ml", 422, 16621, 16657), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 423, 16658, 16664), ("test/test.ml", 423, 16658, 16666), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0), 0, 0); ((("t", (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0))), (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0), 0, 0)]), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 1), 0, 0)))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0))), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list2"), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0))), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0))), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 424, 16672, 16705), 0), [(("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16704), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0))), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0), 0, 0), [(0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16713), ("test/test.ml", 425, 16706, 16715), 0), 0)), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16716), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0))), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0))), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0))), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16746), 0), [(("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16745), 0)], 0)); (0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16750), ("test/test.ml", 425, 16706, 16752), 0), 0)), (("test/test.ml", 425, 16706, 16749), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 421, 16606, 16608), ("test/test.ml", 425, 16706, 16753), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0)), 0), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0), 0, 0)), (("test/test.ml", 420, 16538, 16596), ("test/test.ml", 425, 16706, 16753), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 425, 16706, 16753), 1), 0, 0), 0, (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0))]), (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0)); (Tag1 (1, [(((("process_id1", (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0))), (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0))), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0))), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16819), 0)), ((0, ((("string", (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0))), (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0), 0, 0)))), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16826), 0), 0, 0), 0, (((("string"), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0))), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16846), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0))), (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0), 0, 0); ((("string", (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0))), (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0), 0, 0)]), (("test/test.ml", 430, 16838, 16847), ("test/test.ml", 430, 16838, 16866), 0), [(("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16865), 0)], 0)))), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16866), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0))), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0))), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0))), (("test/test.ml", 431, 16870, 16887), ("test/test.ml", 431, 16870, 16898), 0), [(("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0)], 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16899), 0), [(("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16898), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0))), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 431, 16870, 16903), ("test/test.ml", 431, 16870, 16904), 0), 0)), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16905), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0))), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16914), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16926), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0))), (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0), 0, 0); ((("longident2", (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0))), (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0), 0, 0)]), (("test/test.ml", 432, 16916, 16927), ("test/test.ml", 432, 16916, 16949), 0), [(("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16948), 0)], 0)))), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16949), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0))), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0))), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0))), (("test/test.ml", 433, 16950, 16970), ("test/test.ml", 433, 16950, 16981), 0), [(("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0)], 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 433, 16950, 16982), 0), [(("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16981), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0))), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 433, 16950, 16987), ("test/test.ml", 433, 16950, 16988), 0), 0)), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 433, 16950, 16989), 0), 0, 0)); (0, (Tag5 ((((("process_id1"), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0))), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0))), (("test/test.ml", 434, 16990, 17012), ("test/test.ml", 434, 16990, 17024), 0), [(("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0)], 0))]), (("test/test.ml", 434, 16990, 16999), ("test/test.ml", 434, 16990, 17026), 0), [(("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17024), 0)], 0))]), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 428, 16794, 16796), ("test/test.ml", 434, 16990, 17026), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0)), 0), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0), 0, 0)), (("test/test.ml", 427, 16760, 16782), ("test/test.ml", 434, 16990, 17026), 0), 0, 0)), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 434, 16990, 17026), 1), 0, 0), 0, (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0))]), (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0)); (Tag1 (1, [(((("stringlister", (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0))), (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0))), (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0)), 0), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 436, 17029, 17065), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0))), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0)), 0), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0), 0, 0), 0, (Tag1 (Tag2 ("stringlister", (("test/test.ml", 438, 17092, 17102), ("test/test.ml", 438, 17092, 17114), 0), 0)), (("test/test.ml", 438, 17092, 17101), ("test/test.ml", 438, 17092, 17115), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 439, 17116, 17122), ("test/test.ml", 439, 17116, 17124), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0), 0, 0); ((("t", (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0))), (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0), 0, 0)]), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 1), 0, 0)))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0))), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0))), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0), 0, 0)); (0, (Tag5 ((((("stringlister"), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0))), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0))), (("test/test.ml", 439, 17116, 17146), ("test/test.ml", 439, 17116, 17149), 0), [(("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0)], 0))]), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 437, 17077, 17079), ("test/test.ml", 439, 17116, 17149), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0)), 0), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0), 0, 0)), (("test/test.ml", 436, 17029, 17066), ("test/test.ml", 439, 17116, 17149), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 439, 17116, 17149), 1), 0, 0), 0, (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 439, 17116, 17149), 0)); (((("process_id2", (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0))), (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0))), (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0), 0, 0), (Tag2 ([(Tag3 ((("longident"), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0)), 0), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0)), 0), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)]), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 441, 17154, 17193), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0))), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0))), (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0), 0, 0); ((("b", (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0))), (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0), 0, 0)]), (("test/test.ml", 443, 17218, 17222), ("test/test.ml", 443, 17218, 17227), 0), [(("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17226), 0)], 0), 0, (Tag2 (0, [(((("sc", (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0))), (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0), 0, 0), (Tag5 ((((("stringlister"), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0))), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0), 0, 0), [(0, (((("b"), (("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0))), (("test/test.ml", 444, 17231, 17256), ("test/test.ml", 444, 17231, 17259), 0), [(("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0)], 0))]), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17259), 0), 0, 0), 0, (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 444, 17231, 17259), 0))], (Tag6 ((((("a"), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0))), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17293), 0)), ((0, ((("string", (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0))), (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0), 0, 0)))), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17300), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0))), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0))), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0))), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0), 0, 0))]), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17315), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17326), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0))), (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0), 0, 0); ((("string", (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0))), (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0), 0, 0)]), (("test/test.ml", 447, 17316, 17327), ("test/test.ml", 447, 17316, 17346), 0), [(("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17345), 0)], 0)))), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17346), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0))), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0))), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0))), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0), 0, 0); (((("b"), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0))), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0), 0, 0)]), (("test/test.ml", 448, 17350, 17369), ("test/test.ml", 448, 17350, 17382), 0), [(("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17381), 0)], 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17383), 0), [(("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17382), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0))), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 448, 17350, 17387), ("test/test.ml", 448, 17350, 17388), 0), 0)), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17389), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0))), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0))), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0))), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17403), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17416), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0))), (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0), 0, 0); ((("longident2", (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0))), (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0), 0, 0)]), (("test/test.ml", 449, 17404, 17417), ("test/test.ml", 449, 17404, 17439), 0), [(("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17438), 0)], 0)))), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17439), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0))), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0))), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0))), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0), 0, 0); (((("b"), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0))), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0), 0, 0)]), (("test/test.ml", 450, 17440, 17462), ("test/test.ml", 450, 17440, 17476), 0), [(("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17475), 0)], 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 450, 17440, 17477), 0), [(("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17476), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0))), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 450, 17440, 17482), ("test/test.ml", 450, 17440, 17483), 0), 0)), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 450, 17440, 17484), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0))), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0))), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0), 0, 0), [(0, (Tag8 ([(((("longident2"), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0))), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0), 0, 0); (((("b"), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0))), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0), 0, 0)]), (("test/test.ml", 451, 17485, 17509), ("test/test.ml", 451, 17485, 17523), 0), [(("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17522), 0)], 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17525), 0), [(("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17523), 0)], 0)); (0, (((("sc"), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0))), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 445, 17264, 17268), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 442, 17203, 17205), ("test/test.ml", 451, 17485, 17530), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0)), 0), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0), 0, 0)), (("test/test.ml", 441, 17154, 17193), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 451, 17485, 17530), 1), 0, 0), 0, (("test/test.ml", 440, 17150, 17150), ("test/test.ml", 451, 17485, 17530), 0))]), (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 451, 17485, 17530), 0)); (Tag1 (0, [(((("process_id", (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0))), (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0))), (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0)), 0), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0)), 0), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)]), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 453, 17543, 17587), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0))), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0))), (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0), 0, 0); ((("b", (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0))), (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0), 0, 0)]), (("test/test.ml", 455, 17612, 17616), ("test/test.ml", 455, 17612, 17621), 0), [(("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17620), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0))), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 1)), ((("txt", (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0))), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0), 0, 0))], 1), (("test/test.ml", 457, 17642, 17648), ("test/test.ml", 457, 17642, 17655), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0))), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0))), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0), 0, 0); (((("b"), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0))), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0), 0, 0)]), (("test/test.ml", 457, 17642, 17671), ("test/test.ml", 457, 17642, 17678), 0), [(("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17677), 0)], 0))]), (("test/test.ml", 457, 17642, 17658), ("test/test.ml", 457, 17642, 17679), 0), [(("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17678), 0)], 0))]), (("test/test.ml", 456, 17625, 17629), ("test/test.ml", 457, 17642, 17679), 0), 0, 0))]), (("test/test.ml", 454, 17597, 17599), ("test/test.ml", 457, 17642, 17679), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0)), 0), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0), 0, 0)), (("test/test.ml", 453, 17543, 17587), ("test/test.ml", 457, 17642, 17679), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 457, 17642, 17679), 1), 0, 0), 0, (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0))]), (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0)); (Tag1 (0, [(((("splitloc", (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0))), (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0))), (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0)), 0), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0)), 0), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)]), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 461, 17779, 17822), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("a", (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0))), (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0), 0, 0); ((("b", (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0))), (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0), 0, 0)]), (("test/test.ml", 462, 17833, 17839), ("test/test.ml", 462, 17833, 17845), 0), [(("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17844), 0)], 0), (((("x"), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0))), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0), 0, 0), 0, (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 462, 17833, 17849), 0))], (Tag6 ((((("a"), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0))), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 1)), ((("txt", (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0))), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0), 0, 0)); ((("loc"), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 1)), ((("loc", (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0))), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0), 0, 0))], 0), (("test/test.ml", 464, 17868, 17872), ("test/test.ml", 464, 17868, 17884), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0))), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0))), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0), 0, 0); (((("b"), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0))), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0), 0, 0)]), (("test/test.ml", 465, 17889, 17905), ("test/test.ml", 465, 17889, 17914), 0), [(("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17913), 0)], 0))]), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17914), 0), 0, 0))]), (("test/test.ml", 463, 17853, 17855), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 465, 17889, 17914), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0)), 0), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0), 0, 0)), (("test/test.ml", 461, 17779, 17823), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 465, 17889, 17914), 1), 0, 0), 0, (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0))]), (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0)); (Tag1 (0, [(((("concatlist", (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0))), (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0))), (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0), 0, 0), (Tag2 ([(Tag3 ((("string"), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0)), 0), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0)), 0), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)]), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 469, 17924, 17964), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("str", (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0))), (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0), 0, 0); ((("string_list", (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0))), (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0), 0, 0)]), (("test/test.ml", 470, 17979, 17985), ("test/test.ml", 470, 17979, 18003), 0), [(("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 18002), 0)], 0), (((("a"), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0))), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0), 0, 0), 0, (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 470, 17979, 18007), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0))), (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0), 0, 0), (Tag9 ((("::"), (("test/test.ml", 471, 18011, 18031), ("test/test.ml", 471, 18011, 18033), 0)), ((Tag8 ([(((("str"), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0), 0, 0); (((("string_list"), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0))), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0), 0, 0)]), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 1), 0, 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 0), 0, 0), 0, (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 471, 18011, 18045), 0))], (((("newlist"), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0))), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 472, 18050, 18059), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0)), 0), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0), 0, 0)), (("test/test.ml", 469, 17924, 17964), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 472, 18050, 18059), 1), 0, 0), 0, (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0))]), (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0)); (Tag1 (1, [((Tag10 (((("process_record_kind4", (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0))), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0), 0, 0), (Tag8 (0, (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 1), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18135), 1), 0, 0), (Tag19 ((Tag4 (0, 0, ((("x", (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0))), (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0))), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 475, 18069, 18150), ("test/test.ml", 475, 18069, 18150), 0), 0)), (("test/test.ml", 475, 18069, 18149), ("test/test.ml", 475, 18069, 18151), 0), 0, 0)), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18151), 1), 0, 0)), (("test/test.ml", 475, 18069, 18138), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), 0, (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 475, 18069, 18151), 0)); (((("process_record_kind2", (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0))), (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0))), (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0), 0, 0), (Tag3 ((("label_declaration"), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0)), 0), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18202), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("s", (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0))), (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0)), 0), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18217), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 477, 18158, 18221), ("test/test.ml", 477, 18158, 18221), 0), 0)), (("test/test.ml", 477, 18158, 18220), ("test/test.ml", 477, 18158, 18222), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18222), 1), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18222), 1), 0, 0), 0, (("test/test.ml", 476, 18152, 18154), ("test/test.ml", 477, 18158, 18222), 0)); (((("process_record_kind3", (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0))), (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0))), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0))), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 479, 18229, 18259), ("test/test.ml", 479, 18229, 18259), 0), 0)), (("test/test.ml", 479, 18229, 18258), ("test/test.ml", 479, 18229, 18260), 0), 0, 0)), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18260), 1), 0, 0)), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18260), 1), 0, 0), 0, (("test/test.ml", 478, 18223, 18225), ("test/test.ml", 479, 18229, 18260), 0)); (((("process_record_kind", (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0))), (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("x", (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0))), (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0), 0, 0); ((("s", (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0))), (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18289), ("test/test.ml", 481, 18267, 18294), 0), [(("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18293), 0)], 0), (Tag2 ([(Tag3 ((("label_declaration"), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0)), 0), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0)), 0), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 481, 18267, 18326), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0))), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0), 0, 0), [((Tag7 ([((("pld_name"), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 1)), ((("pld_name", (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0))), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0), 0, 0)); ((("pld_mutable"), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 1)), ((("pld_mutable", (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0))), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0), 0, 0)); ((("pld_type"), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 1)), ((("pld_type", (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0))), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0), 0, 0)); ((("pld_loc"), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 1)), ((("pld_loc", (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0))), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0), 0, 0)); ((("pld_attributes"), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 1)), ((("pld_attributes", (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0))), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0), 0, 0))], 0), (("test/test.ml", 483, 18351, 18355), ("test/test.ml", 489, 18532, 18536), 0), 0, 0), 0, (Tag2 (0, [(((("foo", (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0))), (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0), 0, 0), (Tag5 ((((("my_process_core_type"), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0))), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0), 0, 0), [(0, (Tag8 ([(((("pld_type"), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0))), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0), 0, 0); (((("s"), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0))), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0), 0, 0)]), (("test/test.ml", 490, 18540, 18573), ("test/test.ml", 490, 18540, 18586), 0), [(("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18585), 0)], 0))]), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18586), 0), 0, 0), 0, (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 490, 18540, 18586), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0))), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0))), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:precord_kind:", (("test/test.ml", 491, 18590, 18627), ("test/test.ml", 491, 18590, 18646), 0), 0)), (("test/test.ml", 491, 18590, 18626), ("test/test.ml", 491, 18590, 18647), 0), 0, 0); (((("pld_name"), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0))), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0), 0, 0); (Tag1 (Tag2 ("mutable", (("test/test.ml", 493, 18697, 18734), ("test/test.ml", 493, 18697, 18741), 0), 0)), (("test/test.ml", 493, 18697, 18733), ("test/test.ml", 493, 18697, 18742), 0), 0, 0); (((("pld_mutable"), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0))), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0), 0, 0); (Tag1 (Tag2 ("type", (("test/test.ml", 495, 18793, 18830), ("test/test.ml", 495, 18793, 18834), 0), 0)), (("test/test.ml", 495, 18793, 18829), ("test/test.ml", 495, 18793, 18835), 0), 0, 0); (((("pld_type"), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0))), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0), 0, 0)]), (("test/test.ml", 491, 18590, 18625), ("test/test.ml", 496, 18837, 18882), 0), [(("test/test.ml", 491, 18590, 18626), ("test/test.ml", 496, 18837, 18881), 0)], 0))]), (("test/test.ml", 491, 18590, 18609), ("test/test.ml", 496, 18837, 18883), 0), [(("test/test.ml", 491, 18590, 18610), ("test/test.ml", 496, 18837, 18882), 0)], 0))]), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 496, 18837, 18884), 0), [(("test/test.ml", 491, 18590, 18595), ("test/test.ml", 496, 18837, 18883), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0))), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0), 0, 0), [(0, (Tag1 (Tag2 ("process_record_kind:\"", (("test/test.ml", 497, 18886, 18891), ("test/test.ml", 497, 18886, 18913), 0), 0)), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18914), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0))), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0), 0, 0), [(0, (Tag12 ((((("pld_name"), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0), 0, 0), (("txt"), (("test/test.ml", 497, 18886, 18926), ("test/test.ml", 497, 18886, 18929), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18929), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0))), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" body:", (("test/test.ml", 497, 18886, 18933), ("test/test.ml", 497, 18886, 18941), 0), 0)), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18942), 0), 0, 0)); (0, (((("foo"), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0))), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 482, 18336, 18338), ("test/test.ml", 497, 18886, 18948), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0)), 0), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0), 0, 0)), (("test/test.ml", 481, 18267, 18326), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 497, 18886, 18948), 1), 0, 0), 0, (("test/test.ml", 480, 18261, 18263), ("test/test.ml", 497, 18886, 18948), 0)); (((("my_process_core_type_desc", (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0))), (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0))), (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0)), 0), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0)), 0), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)]), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 499, 18953, 19015), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0))), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0))), (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0), 0, 0); ((("s", (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0))), (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0), 0, 0)]), (("test/test.ml", 501, 19040, 19044), ("test/test.ml", 501, 19040, 19052), 0), [(("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19051), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0))), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19091), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0))), (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0), 0, 0); ((("b", (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0))), (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0), 0, 0)]), (("test/test.ml", 503, 19074, 19092), ("test/test.ml", 503, 19074, 19097), 0), [(("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19096), 0)], 0)))), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19097), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 1)), ((("txt", (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0))), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0), 0, 0)); ((("loc"), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 1)), ((("loc", (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0))), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0), 0, 0))], 0), (("test/test.ml", 505, 19149, 19159), ("test/test.ml", 505, 19149, 19168), 0), 0, 0), (((("a"), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0))), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0), 0, 0), 0, (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 505, 19149, 19172), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0))), (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0), 0, 0), (Tag5 ((((("process_id1"), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0))), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0))), (("test/test.ml", 506, 19176, 19203), ("test/test.ml", 506, 19176, 19208), 0), [(("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0)], 0))]), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19208), 0), 0, 0), 0, (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 506, 19176, 19208), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0))), (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0), 0, 0), (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0))), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0), 0, 0), [(0, (Tag8 ([(((("b"), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0))), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0), 0, 0); (((("s"), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0))), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0), 0, 0)]), (("test/test.ml", 509, 19320, 19367), ("test/test.ml", 509, 19320, 19373), 0), [(("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19372), 0)], 0))]), (("test/test.ml", 509, 19320, 19340), ("test/test.ml", 509, 19320, 19374), 0), [(("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19373), 0)], 0), 0, (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 509, 19320, 19374), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0))), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_constr1 '%s' %s", (("test/test.ml", 510, 19378, 19399), ("test/test.ml", 510, 19378, 19425), 0), 0)), (("test/test.ml", 510, 19378, 19398), ("test/test.ml", 510, 19378, 19426), 0), 0, 0)); (0, (((("id1"), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0))), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0))), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0), 0, 0))]), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19438), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0))), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0))), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_constr:", (("test/test.ml", 514, 19519, 19529), ("test/test.ml", 514, 19519, 19547), 0), 0)), (("test/test.ml", 514, 19519, 19528), ("test/test.ml", 514, 19519, 19548), 0), 0, 0); (Tag1 (Tag2 ("id", (("test/test.ml", 515, 19550, 19560), ("test/test.ml", 515, 19550, 19562), 0), 0)), (("test/test.ml", 515, 19550, 19559), ("test/test.ml", 515, 19550, 19563), 0), 0, 0); (((("a"), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0))), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0), 0, 0); (Tag1 (Tag2 ("types", (("test/test.ml", 516, 19567, 19577), ("test/test.ml", 516, 19567, 19582), 0), 0)), (("test/test.ml", 516, 19567, 19576), ("test/test.ml", 516, 19567, 19583), 0), 0, 0); (((("b"), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0))), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0), 0, 0); (Tag1 (Tag2 ("context", (("test/test.ml", 517, 19587, 19597), ("test/test.ml", 517, 19587, 19604), 0), 0)), (("test/test.ml", 517, 19587, 19596), ("test/test.ml", 517, 19587, 19605), 0), 0, 0); (((("s"), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0))), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0), 0, 0); (Tag1 (Tag2 ("id1", (("test/test.ml", 518, 19609, 19619), ("test/test.ml", 518, 19609, 19622), 0), 0)), (("test/test.ml", 518, 19609, 19618), ("test/test.ml", 518, 19609, 19623), 0), 0, 0); (((("id1"), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0))), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0), 0, 0)]), (("test/test.ml", 513, 19480, 19517), ("test/test.ml", 519, 19629, 19637), 0), [(("test/test.ml", 514, 19519, 19528), ("test/test.ml", 518, 19609, 19628), 0)], 0))]), (("test/test.ml", 513, 19480, 19501), ("test/test.ml", 519, 19629, 19638), 0), [(("test/test.ml", 513, 19480, 19502), ("test/test.ml", 519, 19629, 19637), 0)], 0))]), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 519, 19629, 19639), 0), [(("test/test.ml", 513, 19480, 19487), ("test/test.ml", 519, 19629, 19638), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0))), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_constr:\"", (("test/test.ml", 520, 19646, 19653), ("test/test.ml", 520, 19646, 19667), 0), 0)), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19668), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0))), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0), 0, 0), [(0, (((("id1"), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0))), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0))), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"->", (("test/test.ml", 520, 19646, 19678), ("test/test.ml", 520, 19646, 19682), 0), 0)), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19683), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0))), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19710), 0)), ((0, ((("a", (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0))), (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0), 0, 0)))), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19712), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0))), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0))), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_tuple:", (("test/test.ml", 523, 19746, 19785), ("test/test.ml", 523, 19746, 19802), 0), 0)), (("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19803), 0), 0, 0); (((("a"), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0))), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0), 0, 0)]), (("test/test.ml", 523, 19746, 19783), ("test/test.ml", 523, 19746, 19808), 0), [(("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19806), 0)], 0))]), (("test/test.ml", 523, 19746, 19767), ("test/test.ml", 523, 19746, 19809), 0), [(("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19808), 0)], 0))]), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 523, 19746, 19810), 0), [(("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19809), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0))), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 524, 19812, 19819), ("test/test.ml", 524, 19812, 19829), 0), 0)), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19830), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0))), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0))), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0), 0, 0); (((("s"), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0))), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0), 0, 0)]), (("test/test.ml", 524, 19812, 19858), ("test/test.ml", 524, 19812, 19866), 0), [(("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19864), 0)], 0))]), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19866), 0), 0, 0))]), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)); ((Tag5 ((("Ptyp_any"), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0)), 0), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0))), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0))), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_any:", (("test/test.ml", 528, 19889, 19941), ("test/test.ml", 528, 19889, 19956), 0), 0)), (("test/test.ml", 528, 19889, 19939), ("test/test.ml", 528, 19889, 19958), 0), [(("test/test.ml", 528, 19889, 19940), ("test/test.ml", 528, 19889, 19957), 0)], 0))]), (("test/test.ml", 528, 19889, 19923), ("test/test.ml", 528, 19889, 19959), 0), [(("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19958), 0)], 0))]), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19960), 0), [(("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19959), 0)], 0), (Tag1 (Tag2 ("any", (("test/test.ml", 528, 19889, 19963), ("test/test.ml", 528, 19889, 19966), 0), 0)), (("test/test.ml", 528, 19889, 19962), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)); ((Tag5 ((("Ptyp_var"), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19982), 0)), ((0, ((("name", (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0))), (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0), 0, 0)))), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19987), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0))), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0))), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_var:", (("test/test.ml", 529, 19968, 20023), ("test/test.ml", 529, 19968, 20038), 0), 0)), (("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20039), 0), 0, 0); (((("name"), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0))), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0), 0, 0)]), (("test/test.ml", 529, 19968, 20021), ("test/test.ml", 529, 19968, 20048), 0), [(("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20047), 0)], 0))]), (("test/test.ml", 529, 19968, 20005), ("test/test.ml", 529, 19968, 20049), 0), [(("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20048), 0)], 0))]), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20050), 0), [(("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20049), 0)], 0), (Tag1 (Tag2 ("var-name", (("test/test.ml", 529, 19968, 20053), ("test/test.ml", 529, 19968, 20061), 0), 0)), (("test/test.ml", 529, 19968, 20052), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)); ((Tag5 ((("Ptyp_arrow"), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20077), 0)), ((0, (Tag4 ([((("arg_label", (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0))), (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0), 0, 0); ((("core_type", (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0))), (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0), 0, 0); ((("core_type2", (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0))), (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0), 0, 0)]), (("test/test.ml", 530, 20063, 20078), ("test/test.ml", 530, 20063, 20114), 0), [(("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20113), 0)], 0)))), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20114), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0))), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0))), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow10:", (("test/test.ml", 533, 20233, 20270), ("test/test.ml", 533, 20233, 20289), 0), 0)), (("test/test.ml", 533, 20233, 20268), ("test/test.ml", 533, 20233, 20292), 0), [(("test/test.ml", 533, 20233, 20269), ("test/test.ml", 533, 20233, 20290), 0)], 0))]), (("test/test.ml", 533, 20233, 20252), ("test/test.ml", 533, 20233, 20293), 0), [(("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20292), 0)], 0))]), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20294), 0), [(("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20293), 0)], 0), (Tag1 (Tag2 ("arrow", (("test/test.ml", 533, 20233, 20297), ("test/test.ml", 533, 20233, 20302), 0), 0)), (("test/test.ml", 533, 20233, 20296), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)); ((Tag5 ((("Ptyp_object"), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20320), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0))), (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0), 0, 0); ((("b", (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0))), (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0), 0, 0)]), (("test/test.ml", 535, 20305, 20321), ("test/test.ml", 535, 20305, 20326), 0), [(("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20325), 0)], 0)))), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20326), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0))), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0))), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow8:", (("test/test.ml", 537, 20374, 20411), ("test/test.ml", 537, 20374, 20429), 0), 0)), (("test/test.ml", 537, 20374, 20409), ("test/test.ml", 537, 20374, 20432), 0), [(("test/test.ml", 537, 20374, 20410), ("test/test.ml", 537, 20374, 20430), 0)], 0))]), (("test/test.ml", 537, 20374, 20393), ("test/test.ml", 537, 20374, 20433), 0), [(("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20432), 0)], 0))]), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20434), 0), [(("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20433), 0)], 0), (Tag1 (Tag2 ("obj", (("test/test.ml", 537, 20374, 20437), ("test/test.ml", 537, 20374, 20440), 0), 0)), (("test/test.ml", 537, 20374, 20436), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)); ((Tag5 ((("Ptyp_class"), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20456), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0))), (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0), 0, 0); ((("b", (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0))), (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0), 0, 0)]), (("test/test.ml", 538, 20442, 20457), ("test/test.ml", 538, 20442, 20462), 0), [(("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20461), 0)], 0)))), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20462), 0), 0, 0), 0, (Tag2 (0, [(((("myid", (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0))), (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0), 0, 0), (Tag5 ((((("process_id"), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0))), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0))), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0), 0, 0); (((("s"), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0))), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0), 0, 0)]), (("test/test.ml", 540, 20512, 20539), ("test/test.ml", 540, 20512, 20544), 0), [(("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20543), 0)], 0))]), (("test/test.ml", 540, 20512, 20527), ("test/test.ml", 540, 20512, 20545), 0), [(("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20544), 0)], 0), 0, (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 540, 20512, 20545), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0))), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0))), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow7:", (("test/test.ml", 542, 20600, 20637), ("test/test.ml", 542, 20600, 20655), 0), 0)), (("test/test.ml", 542, 20600, 20635), ("test/test.ml", 542, 20600, 20658), 0), [(("test/test.ml", 542, 20600, 20636), ("test/test.ml", 542, 20600, 20656), 0)], 0))]), (("test/test.ml", 542, 20600, 20619), ("test/test.ml", 542, 20600, 20659), 0), [(("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20658), 0)], 0))]), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20660), 0), [(("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20659), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 542, 20600, 20663), ("test/test.ml", 542, 20600, 20668), 0), 0)), (("test/test.ml", 542, 20600, 20662), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)); ((Tag5 ((("Ptyp_alias"), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20684), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0))), (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0), 0, 0); ((("b", (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0))), (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0), 0, 0)]), (("test/test.ml", 543, 20670, 20685), ("test/test.ml", 543, 20670, 20690), 0), [(("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20689), 0)], 0)))), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20690), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0))), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0))), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow6:", (("test/test.ml", 546, 20769, 20806), ("test/test.ml", 546, 20769, 20824), 0), 0)), (("test/test.ml", 546, 20769, 20804), ("test/test.ml", 546, 20769, 20827), 0), [(("test/test.ml", 546, 20769, 20805), ("test/test.ml", 546, 20769, 20825), 0)], 0))]), (("test/test.ml", 546, 20769, 20788), ("test/test.ml", 546, 20769, 20828), 0), [(("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20827), 0)], 0))]), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20829), 0), [(("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20828), 0)], 0), (Tag1 (Tag2 ("alias", (("test/test.ml", 546, 20769, 20832), ("test/test.ml", 546, 20769, 20837), 0), 0)), (("test/test.ml", 546, 20769, 20831), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)); ((Tag5 ((("Ptyp_variant"), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20855), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0))), (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0), 0, 0); ((("b", (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0))), (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0), 0, 0); ((("c", (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0))), (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0), 0, 0)]), (("test/test.ml", 547, 20839, 20856), ("test/test.ml", 547, 20839, 20863), 0), [(("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20862), 0)], 0)))), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20863), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0))), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0))), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow5:", (("test/test.ml", 549, 20929, 20966), ("test/test.ml", 549, 20929, 20984), 0), 0)), (("test/test.ml", 549, 20929, 20964), ("test/test.ml", 549, 20929, 20987), 0), [(("test/test.ml", 549, 20929, 20965), ("test/test.ml", 549, 20929, 20985), 0)], 0))]), (("test/test.ml", 549, 20929, 20948), ("test/test.ml", 549, 20929, 20988), 0), [(("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20987), 0)], 0))]), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20989), 0), [(("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20988), 0)], 0), (Tag1 (Tag2 ("variant", (("test/test.ml", 549, 20929, 20991), ("test/test.ml", 549, 20929, 20998), 0), 0)), (("test/test.ml", 549, 20929, 20990), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)); ((Tag5 ((("Ptyp_poly"), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21013), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0))), (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0), 0, 0); ((("b", (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0))), (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0), 0, 0)]), (("test/test.ml", 550, 21000, 21014), ("test/test.ml", 550, 21000, 21019), 0), [(("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21018), 0)], 0)))), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21019), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0))), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0))), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow4:", (("test/test.ml", 553, 21102, 21139), ("test/test.ml", 553, 21102, 21157), 0), 0)), (("test/test.ml", 553, 21102, 21137), ("test/test.ml", 553, 21102, 21160), 0), [(("test/test.ml", 553, 21102, 21138), ("test/test.ml", 553, 21102, 21158), 0)], 0))]), (("test/test.ml", 553, 21102, 21121), ("test/test.ml", 553, 21102, 21161), 0), [(("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21160), 0)], 0))]), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21162), 0), [(("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21161), 0)], 0), (Tag1 (Tag2 ("poly", (("test/test.ml", 553, 21102, 21165), ("test/test.ml", 553, 21102, 21169), 0), 0)), (("test/test.ml", 553, 21102, 21164), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)); ((Tag5 ((("Ptyp_package"), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21187), 0)), ((0, ((("a", (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0))), (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0), 0, 0)))), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21189), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0))), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0))), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_arrow3:", (("test/test.ml", 556, 21219, 21256), ("test/test.ml", 556, 21219, 21274), 0), 0)), (("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21275), 0), 0, 0); (((("a"), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0))), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0), 0, 0)]), (("test/test.ml", 556, 21219, 21254), ("test/test.ml", 556, 21219, 21279), 0), [(("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21277), 0)], 0))]), (("test/test.ml", 556, 21219, 21238), ("test/test.ml", 556, 21219, 21280), 0), [(("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21279), 0)], 0))]), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21281), 0), [(("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21280), 0)], 0), (Tag1 (Tag2 ("typ_package", (("test/test.ml", 556, 21219, 21285), ("test/test.ml", 556, 21219, 21296), 0), 0)), (("test/test.ml", 556, 21219, 21284), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)); ((Tag5 ((("Ptyp_extension"), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21457), 0)), ((0, ((("a", (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0))), (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0), 0, 0)))), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21459), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0))), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0))), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_extension:", (("test/test.ml", 560, 21487, 21524), ("test/test.ml", 560, 21487, 21545), 0), 0)), (("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21546), 0), 0, 0); (((("a"), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0))), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0), 0, 0)]), (("test/test.ml", 560, 21487, 21522), ("test/test.ml", 560, 21487, 21550), 0), [(("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21548), 0)], 0))]), (("test/test.ml", 560, 21487, 21506), ("test/test.ml", 560, 21487, 21551), 0), [(("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21550), 0)], 0))]), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21552), 0), [(("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21551), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 560, 21487, 21555), ("test/test.ml", 560, 21487, 21564), 0), 0)), (("test/test.ml", 560, 21487, 21554), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 502, 19055, 19059), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 500, 19025, 19027), ("test/test.ml", 560, 21487, 21565), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0)), 0), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0), 0, 0)), (("test/test.ml", 499, 18953, 19015), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 560, 21487, 21565), 1), 0, 0), 0, (("test/test.ml", 498, 18949, 18949), ("test/test.ml", 560, 21487, 21565), 0)); (((("process_record_kind_list", (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0))), (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0))), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 562, 21570, 21599), 0), [(("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0))), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0))), (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0), 0, 0); ((("s", (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0))), (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0), 0, 0)]), (("test/test.ml", 564, 21626, 21628), ("test/test.ml", 564, 21626, 21634), 0), [(("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21633), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0))), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0)), 0), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0), 0, 0), 0, (Tag1 (Tag2 ("process_record_kind_list", (("test/test.ml", 566, 21652, 21663), ("test/test.ml", 566, 21652, 21687), 0), 0)), (("test/test.ml", 566, 21652, 21662), ("test/test.ml", 566, 21652, 21688), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 567, 21689, 21695), ("test/test.ml", 567, 21689, 21697), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0), 0, 0); ((("t", (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0))), (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0), 0, 0)]), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 1), 0, 0)))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0))), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0), 0, 0), [(0, (Tag5 ((((("process_record_kind"), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0))), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0))), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0))), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21728), ("test/test.ml", 568, 21703, 21736), 0), [(("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21735), 0)], 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21737), 0), [(("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21736), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0))), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0), 0, 0), [(0, (Tag1 (Tag2 ("/", (("test/test.ml", 568, 21703, 21741), ("test/test.ml", 568, 21703, 21742), 0), 0)), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21743), 0), 0, 0)); (0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0))), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0))), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0))), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21772), ("test/test.ml", 568, 21703, 21778), 0), [(("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21777), 0)], 0))]), (("test/test.ml", 568, 21703, 21746), ("test/test.ml", 568, 21703, 21779), 0), [(("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21778), 0)], 0))]), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 565, 21637, 21639), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 563, 21611, 21613), ("test/test.ml", 568, 21703, 21779), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0)), 0), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0), 0, 0)), (("test/test.ml", 562, 21570, 21600), ("test/test.ml", 568, 21703, 21779), 0), 0, 0)), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 568, 21703, 21779), 1), 0, 0), 0, (("test/test.ml", 561, 21566, 21566), ("test/test.ml", 568, 21703, 21779), 0)); (((("my_process_core_type", (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0))), (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0))), (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0)), 0), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0)), 0), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)]), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 572, 21790, 21840), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0))), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0))), (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0), 0, 0); ((("s", (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0))), (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0), 0, 0)]), (("test/test.ml", 574, 21864, 21868), ("test/test.ml", 574, 21864, 21873), 0), [(("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21872), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0))), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 1)), ((("ptyp_desc", (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0))), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 1)), ((("ptyp_loc", (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0))), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 1)), ((("ptyp_loc_stack", (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0))), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 1)), ((("ptyp_attributes", (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0))), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0), 0, 0))], 0), (("test/test.ml", 576, 21897, 21901), ("test/test.ml", 581, 22061, 22066), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0))), (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0), 0, 0), (Tag5 ((((("my_process_core_type_desc"), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0))), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0))), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0), 0, 0); (((("s"), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0))), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0), 0, 0)]), (("test/test.ml", 582, 22069, 22109), ("test/test.ml", 582, 22069, 22122), 0), [(("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22121), 0)], 0))]), (("test/test.ml", 582, 22069, 22082), ("test/test.ml", 582, 22069, 22123), 0), [(("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22122), 0)], 0), 0, (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 582, 22069, 22123), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0))), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0))), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:core_type.ptyp_desc:", (("test/test.ml", 584, 22146, 22183), ("test/test.ml", 584, 22146, 22209), 0), 0)), (("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22210), 0), 0, 0); (((("a"), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0))), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0), 0, 0); (((("td"), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0))), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0), 0, 0)]), (("test/test.ml", 584, 22146, 22181), ("test/test.ml", 584, 22146, 22219), 0), [(("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22218), 0)], 0))]), (("test/test.ml", 584, 22146, 22165), ("test/test.ml", 584, 22146, 22220), 0), [(("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22219), 0)], 0))]), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 584, 22146, 22221), 0), [(("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22220), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0))), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0), 0, 0), [(0, (Tag1 (Tag2 ("ptyp_desc:", (("test/test.ml", 585, 22223, 22228), ("test/test.ml", 585, 22223, 22238), 0), 0)), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22239), 0), 0, 0)); (0, (((("td"), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0))), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 575, 21877, 21882), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 573, 21849, 21851), ("test/test.ml", 585, 22223, 22244), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0)), 0), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0), 0, 0)), (("test/test.ml", 572, 21790, 21840), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 585, 22223, 22244), 1), 0, 0), 0, (("test/test.ml", 570, 21785, 21785), ("test/test.ml", 585, 22223, 22244), 0)); (((("my_process_core_type_list", (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0))), (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0))), (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0)), 0), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0)), 0), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)]), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 586, 22245, 22307), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0))), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0))), (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0), 0, 0); ((("b", (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0))), (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0), 0, 0)]), (("test/test.ml", 588, 22332, 22336), ("test/test.ml", 588, 22332, 22341), 0), [(("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22340), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0))), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0)), 0), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0), 0, 0), 0, (Tag1 (Tag2 ("my_process_core_type_list:", (("test/test.ml", 590, 22362, 22375), ("test/test.ml", 590, 22362, 22401), 0), 0)), (("test/test.ml", 590, 22362, 22374), ("test/test.ml", 590, 22362, 22402), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 591, 22403, 22411), ("test/test.ml", 591, 22403, 22413), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0), 0, 0); ((("t", (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0))), (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0), 0, 0)]), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 1), 0, 0)))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0))), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0), 0, 0), [(0, (Tag5 ((((("my_process_core_type"), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0))), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0))), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0))), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22446), ("test/test.ml", 592, 22419, 22452), 0), [(("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22451), 0)], 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22452), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0))), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 592, 22419, 22456), ("test/test.ml", 592, 22419, 22457), 0), 0)), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22458), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0))), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0))), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0))), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22486), ("test/test.ml", 592, 22419, 22491), 0), [(("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22490), 0)], 0))]), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 589, 22345, 22349), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 587, 22317, 22319), ("test/test.ml", 592, 22419, 22491), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0)), 0), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0), 0, 0)), (("test/test.ml", 586, 22245, 22307), ("test/test.ml", 592, 22419, 22491), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 592, 22419, 22491), 1), 0, 0), 0, (("test/test.ml", 586, 22245, 22245), ("test/test.ml", 592, 22419, 22491), 0))]), (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 592, 22419, 22491), 0)); (Tag1 (1, [(((("emit_id1", (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0))), (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0))), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0))), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22574), 0)), ((0, ((("string", (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0))), (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0), 0, 0)))), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22581), 0), 0, 0), 0, (((("string"), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0))), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22601), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0))), (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0), 0, 0); ((("string", (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0))), (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0), 0, 0)]), (("test/test.ml", 614, 22593, 22602), ("test/test.ml", 614, 22593, 22621), 0), [(("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22620), 0)], 0)))), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22621), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0))), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0))), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0))), (("test/test.ml", 615, 22625, 22639), ("test/test.ml", 615, 22625, 22650), 0), [(("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0)], 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22651), 0), [(("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22650), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0))), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 615, 22625, 22655), ("test/test.ml", 615, 22625, 22656), 0), 0)), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22657), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0))), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22666), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22678), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0))), (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0), 0, 0); ((("longident2", (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0))), (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0), 0, 0)]), (("test/test.ml", 616, 22668, 22679), ("test/test.ml", 616, 22668, 22701), 0), [(("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22700), 0)], 0)))), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22701), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0))), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0))), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0))), (("test/test.ml", 617, 22702, 22719), ("test/test.ml", 617, 22702, 22730), 0), [(("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0)], 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 617, 22702, 22731), 0), [(("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22730), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0))), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 617, 22702, 22736), ("test/test.ml", 617, 22702, 22737), 0), 0)), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 617, 22702, 22738), 0), 0, 0)); (0, (Tag5 ((((("emit_id1"), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0))), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0))), (("test/test.ml", 618, 22739, 22758), ("test/test.ml", 618, 22739, 22770), 0), [(("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0)], 0))]), (("test/test.ml", 618, 22739, 22748), ("test/test.ml", 618, 22739, 22772), 0), [(("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22770), 0)], 0))]), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 612, 22549, 22551), ("test/test.ml", 618, 22739, 22772), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0)), 0), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0), 0, 0)), (("test/test.ml", 611, 22518, 22537), ("test/test.ml", 618, 22739, 22772), 0), 0, 0)), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 618, 22739, 22772), 1), 0, 0), 0, (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0))]), (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0)); (Tag1 (0, [(((("emit_core_type_desc", (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0))), (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0))), (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0)), 0), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0)), 0), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)]), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 620, 22775, 22833), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0))), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0))), (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0), 0, 0); ((("s", (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0))), (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0), 0, 0)]), (("test/test.ml", 622, 22858, 22862), ("test/test.ml", 622, 22858, 22870), 0), [(("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22869), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0))), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22909), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0))), (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0), 0, 0); ((("b", (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0))), (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0), 0, 0)]), (("test/test.ml", 624, 22892, 22910), ("test/test.ml", 624, 22892, 22915), 0), [(("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22914), 0)], 0)))), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22915), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 1)), ((("txt", (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0))), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0), 0, 0)); ((("loc"), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 1)), ((("loc", (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0))), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0), 0, 0))], 0), (("test/test.ml", 626, 22967, 22977), ("test/test.ml", 626, 22967, 22986), 0), 0, 0), (((("a"), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0))), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0), 0, 0), 0, (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 626, 22967, 22990), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0))), (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0), 0, 0), (Tag5 ((((("emit_id1"), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0))), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0))), (("test/test.ml", 627, 22994, 23018), ("test/test.ml", 627, 22994, 23023), 0), [(("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0)], 0))]), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23023), 0), 0, 0), 0, (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 627, 22994, 23023), 0))], (((("id1"), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0))), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23250), 0)), ((0, ((("a", (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0))), (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0), 0, 0)))), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23252), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0))), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 634, 23286, 23293), ("test/test.ml", 634, 23286, 23303), 0), 0)), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23304), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0))), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0))), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0), 0, 0); (((("s"), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0))), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0), 0, 0)]), (("test/test.ml", 634, 23286, 23332), ("test/test.ml", 634, 23286, 23340), 0), [(("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23338), 0)], 0))]), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 623, 22873, 22877), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 621, 22843, 22845), ("test/test.ml", 634, 23286, 23340), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0)), 0), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0), 0, 0)), (("test/test.ml", 620, 22775, 22833), ("test/test.ml", 634, 23286, 23340), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 634, 23286, 23340), 1), 0, 0), 0, (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0))]), (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0)); (Tag1 (0, [(((("emit_core_type", (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0))), (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0))), (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0)), 0), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0)), 0), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0)), 0), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)]), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 637, 23343, 23394), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0))), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0))), (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0), 0, 0); ((("s", (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0))), (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0), 0, 0); ((("n", (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0))), (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0), 0, 0)]), (("test/test.ml", 639, 23418, 23422), ("test/test.ml", 639, 23418, 23429), 0), [(("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23428), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0))), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 1)), ((("ptyp_desc", (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0))), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 1)), ((("ptyp_loc", (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0))), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 1)), ((("ptyp_loc_stack", (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0))), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 1)), ((("ptyp_attributes", (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0))), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0), 0, 0))], 0), (("test/test.ml", 641, 23453, 23457), ("test/test.ml", 646, 23617, 23622), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0))), (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0))), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0))), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0), 0, 0); (((("s"), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0))), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0), 0, 0)]), (("test/test.ml", 647, 23625, 23659), ("test/test.ml", 647, 23625, 23672), 0), [(("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23671), 0)], 0))]), (("test/test.ml", 647, 23625, 23638), ("test/test.ml", 647, 23625, 23673), 0), [(("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23672), 0)], 0), 0, (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 647, 23625, 23673), 0))], (Tag5 ((((("^"), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0))), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0), 0, 0), [(0, (((("td"), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0))), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0), 0, 0)); (0, (Tag5 ((((("string_of_int"), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0))), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0))), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0), 0, 0))]), (("test/test.ml", 648, 23677, 23686), ("test/test.ml", 648, 23677, 23703), 0), [(("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23702), 0)], 0))]), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 640, 23433, 23438), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 638, 23403, 23405), ("test/test.ml", 648, 23677, 23703), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0)), 0), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0), 0, 0)), (("test/test.ml", 637, 23343, 23394), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 648, 23677, 23703), 1), 0, 0), 0, (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0))]), (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0)); (Tag1 (0, [(((("emit_core_type2", (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0))), (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0))), (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0)), 0), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0)), 0), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0)), 0), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)]), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 650, 23705, 23757), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0))), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0))), (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0), 0, 0); ((("s", (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0))), (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0), 0, 0); ((("n", (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0))), (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0), 0, 0)]), (("test/test.ml", 652, 23781, 23785), ("test/test.ml", 652, 23781, 23792), 0), [(("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23791), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0))), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 1)), ((("ptyp_desc", (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0))), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 1)), ((("ptyp_loc", (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0))), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 1)), ((("ptyp_loc_stack", (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0))), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 1)), ((("ptyp_attributes", (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0))), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0), 0, 0))], 0), (("test/test.ml", 654, 23815, 23821), ("test/test.ml", 659, 23989, 23996), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0))), (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0))), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0))), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0), 0, 0); (((("s"), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0))), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0), 0, 0)]), (("test/test.ml", 660, 23999, 24035), ("test/test.ml", 660, 23999, 24048), 0), [(("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24047), 0)], 0))]), (("test/test.ml", 660, 23999, 24014), ("test/test.ml", 660, 23999, 24049), 0), [(("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24048), 0)], 0), 0, (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 660, 23999, 24049), 0))], (((("td"), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0))), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 653, 23796, 23800), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 651, 23766, 23768), ("test/test.ml", 661, 24053, 24061), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0)), 0), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0), 0, 0)), (("test/test.ml", 650, 23705, 23757), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 661, 24053, 24061), 1), 0, 0), 0, (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0))]), (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0)); (Tag1 (1, [(((("emit_core_type_list", (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0))), (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0))), (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0)), 0), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0)), 0), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0)), 0), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)]), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 664, 24081, 24145), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0))), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0))), (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0), 0, 0); ((("b", (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0))), (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0), 0, 0); ((("n", (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0))), (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0), 0, 0)]), (("test/test.ml", 666, 24170, 24174), ("test/test.ml", 666, 24170, 24181), 0), [(("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24180), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0))), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0)), 0), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 668, 24202, 24215), ("test/test.ml", 668, 24202, 24215), 0), 0)), (("test/test.ml", 668, 24202, 24214), ("test/test.ml", 668, 24202, 24216), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 669, 24217, 24225), ("test/test.ml", 669, 24217, 24227), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0), 0, 0); ((("t", (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0))), (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0), 0, 0)]), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 1), 0, 0)))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0))), (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0), 0, 0), (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0))), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0))), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0), 0, 0); (((("b"), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0))), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0))), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0))), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 670, 24233, 24274), ("test/test.ml", 670, 24233, 24275), 0), 0, 0))]), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24275), 0), 0, 0)]), (("test/test.ml", 670, 24233, 24267), ("test/test.ml", 670, 24233, 24276), 0), [(("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24275), 0)], 0))]), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24276), 0), 0, 0), 0, (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 670, 24233, 24276), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0))), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0))), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 671, 24281, 24297), ("test/test.ml", 671, 24281, 24297), 0), 0)), (("test/test.ml", 671, 24281, 24296), ("test/test.ml", 671, 24281, 24298), 0), 0, 0))]), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24298), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0))), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type"), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0))), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0))), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0), 0, 0); (((("b"), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0))), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0), 0, 0); (((("n"), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0))), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0), 0, 0)]), (("test/test.ml", 672, 24304, 24327), ("test/test.ml", 672, 24304, 24335), 0), [(("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24334), 0)], 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24335), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0))), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 672, 24304, 24339), ("test/test.ml", 672, 24304, 24340), 0), 0)), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24341), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0))), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24346), 0), 0, 0), ((Tag5 ((((("emit_core_type"), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0))), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0))), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0), 0, 0); (((("b"), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0))), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0), 0, 0); (((("n"), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0))), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0), 0, 0)]), (("test/test.ml", 674, 24358, 24381), ("test/test.ml", 674, 24358, 24389), 0), [(("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24388), 0)], 0))]), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))), (("test/test.ml", 671, 24281, 24287), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 667, 24185, 24189), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 665, 24155, 24157), ("test/test.ml", 674, 24358, 24389), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0)), 0), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0), 0, 0)), (("test/test.ml", 664, 24081, 24145), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 674, 24358, 24389), 1), 0, 0), 0, (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0))]), (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0)); (Tag1 (0, [(((("imp_core_type", (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0))), (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("a", (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0))), (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0), 0, 0); ((("s", (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0))), (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0), 0, 0); ((("n", (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0))), (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24410), ("test/test.ml", 676, 24391, 24417), 0), [(("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24416), 0)], 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0)), 0), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0)), 0), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0)), 0), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 676, 24391, 24447), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name1", (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0))), (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0))), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0))), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0), 0, 0); (((("s"), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0))), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0), 0, 0); (((("n"), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0))), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0), 0, 0)]), (("test/test.ml", 678, 24457, 24486), ("test/test.ml", 678, 24457, 24493), 0), [(("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24492), 0)], 0))]), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24493), 0), 0, 0), 0, (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 678, 24457, 24493), 0))], (Tag2 (0, [(((("name", (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0))), (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0))), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0))), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0), 0, 0); (((("s"), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0))), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0), 0, 0); (((("n"), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0))), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0), 0, 0)]), (("test/test.ml", 679, 24497, 24524), ("test/test.ml", 679, 24497, 24531), 0), [(("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24530), 0)], 0))]), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24531), 0), 0, 0), 0, (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 679, 24497, 24531), 0))], (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0))), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_", (("test/test.ml", 680, 24535, 24538), ("test/test.ml", 680, 24535, 24547), 0), 0)), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24548), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0))), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0))), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0))), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 680, 24535, 24560), ("test/test.ml", 680, 24535, 24561), 0), 0)), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24562), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0))), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0))), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0), 0, 0)); (0, (Tag1 (Tag2 (")", (("test/test.ml", 680, 24535, 24574), ("test/test.ml", 680, 24535, 24575), 0), 0)), (("test/test.ml", 680, 24535, 24573), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 680, 24535, 24576), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0)), 0), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0), 0, 0)), (("test/test.ml", 676, 24391, 24447), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 680, 24535, 24576), 1), 0, 0), 0, (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0))]), (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0)); (Tag1 (0, [(((("decl_imp_core_type", (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0))), (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0))), (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0)), 0), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0)), 0), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0)), 0), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)]), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 683, 24608, 24663), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name", (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0))), (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0))), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0))), (("test/test.ml", 684, 24672, 24699), ("test/test.ml", 684, 24672, 24702), 0), [(("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0)], 0))]), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24702), 0), 0, 0), 0, (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 684, 24672, 24702), 0))], (Tag2 (0, [(((("name1", (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0))), (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0))), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0))), (("test/test.ml", 685, 24706, 24735), ("test/test.ml", 685, 24706, 24738), 0), [(("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0)], 0))]), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24738), 0), 0, 0), 0, (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 685, 24706, 24738), 0))], (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0))), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0), 0, 0), [(0, (Tag1 (Tag2 ("let process_", (("test/test.ml", 686, 24742, 24745), ("test/test.ml", 686, 24742, 24757), 0), 0)), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24758), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0))), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0))), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0))), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0), 0, 0), [(0, (Tag1 (Tag2 (" ( a", (("test/test.ml", 686, 24742, 24770), ("test/test.ml", 686, 24742, 24774), 0), 0)), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24775), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0))), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0))), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0))), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0), 0, 0), [(0, (Tag1 (Tag2 (":", (("test/test.ml", 686, 24742, 24786), ("test/test.ml", 686, 24742, 24787), 0), 0)), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24788), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0))), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0))), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0), 0, 0)); (0, (Tag1 (Tag2 (")=()\n", (("test/test.ml", 686, 24742, 24800), ("test/test.ml", 686, 24742, 24806), 0), 0)), (("test/test.ml", 686, 24742, 24799), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 686, 24742, 24807), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0)), 0), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0), 0, 0)), (("test/test.ml", 683, 24608, 24663), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 686, 24742, 24807), 1), 0, 0), 0, (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0))]), (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0)); (Tag1 (1, [(((("decl_imp_core_type_list", (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0))), (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0))), (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0)), 0), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0)), 0), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0)), 0), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)]), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 688, 24809, 24877), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0))), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0))), (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0), 0, 0); ((("b", (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0))), (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0), 0, 0); ((("n", (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0))), (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0), 0, 0)]), (("test/test.ml", 690, 24902, 24906), ("test/test.ml", 690, 24902, 24913), 0), [(("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24912), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0))), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0)), 0), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 692, 24934, 24947), ("test/test.ml", 692, 24934, 24947), 0), 0)), (("test/test.ml", 692, 24934, 24946), ("test/test.ml", 692, 24934, 24948), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 693, 24949, 24957), ("test/test.ml", 693, 24949, 24959), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0), 0, 0); ((("t", (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0))), (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0), 0, 0)]), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 1), 0, 0)))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0))), (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0), 0, 0), (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0))), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0))), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0), 0, 0); (((("b"), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0))), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0))), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0))), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 694, 24965, 25010), ("test/test.ml", 694, 24965, 25011), 0), 0, 0))]), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25011), 0), 0, 0)]), (("test/test.ml", 694, 24965, 25003), ("test/test.ml", 694, 24965, 25012), 0), [(("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25011), 0)], 0))]), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25012), 0), 0, 0), 0, (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 694, 24965, 25012), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0))), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0))), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 695, 25017, 25033), ("test/test.ml", 695, 25017, 25033), 0), 0)), (("test/test.ml", 695, 25017, 25032), ("test/test.ml", 695, 25017, 25034), 0), 0, 0))]), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25034), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0))), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0), 0, 0), [(0, (Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0))), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0))), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0), 0, 0); (((("b"), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0))), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0), 0, 0); (((("n"), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0))), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0), 0, 0)]), (("test/test.ml", 696, 25040, 25067), ("test/test.ml", 696, 25040, 25075), 0), [(("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25074), 0)], 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25075), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0))), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 696, 25040, 25079), ("test/test.ml", 696, 25040, 25080), 0), 0)), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25081), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0))), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25086), 0), 0, 0), ((Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0))), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0))), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0), 0, 0); (((("b"), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0))), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0), 0, 0); (((("n"), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0))), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0), 0, 0)]), (("test/test.ml", 698, 25098, 25125), ("test/test.ml", 698, 25098, 25133), 0), [(("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25132), 0)], 0))]), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))), (("test/test.ml", 695, 25017, 25023), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 691, 24917, 24921), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 689, 24887, 24889), ("test/test.ml", 698, 25098, 25133), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0)), 0), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0), 0, 0)), (("test/test.ml", 688, 24809, 24877), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 698, 25098, 25133), 1), 0, 0), 0, (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0))]), (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0)); (Tag1 (1, [(((("imp_core_type_list", (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0))), (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0))), (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0)), 0), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0)), 0), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0)), 0), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)]), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 700, 25135, 25198), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0))), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0))), (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0), 0, 0); ((("b", (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0))), (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0), 0, 0); ((("n", (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0))), (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0), 0, 0)]), (("test/test.ml", 702, 25223, 25227), ("test/test.ml", 702, 25223, 25234), 0), [(("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25233), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0))), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0)), 0), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 704, 25255, 25268), ("test/test.ml", 704, 25255, 25268), 0), 0)), (("test/test.ml", 704, 25255, 25267), ("test/test.ml", 704, 25255, 25269), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 705, 25270, 25278), ("test/test.ml", 705, 25270, 25280), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0), 0, 0); ((("t", (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0))), (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0), 0, 0)]), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 1), 0, 0)))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0))), (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0), 0, 0), (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0))), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0))), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0), 0, 0); (((("b"), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0))), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0))), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0))), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 706, 25286, 25326), ("test/test.ml", 706, 25286, 25327), 0), 0, 0))]), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25327), 0), 0, 0)]), (("test/test.ml", 706, 25286, 25319), ("test/test.ml", 706, 25286, 25328), 0), [(("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25327), 0)], 0))]), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25328), 0), 0, 0), 0, (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 706, 25286, 25328), 0))], (Tag2 (0, [(((("one", (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0))), (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0), 0, 0), (Tag5 ((((("imp_core_type"), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0))), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0))), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0), 0, 0); (((("b"), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0))), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0), 0, 0); (((("n"), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0))), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0), 0, 0)]), (("test/test.ml", 707, 25333, 25363), ("test/test.ml", 707, 25333, 25372), 0), [(("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25370), 0)], 0))]), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25372), 0), 0, 0), 0, (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 707, 25333, 25372), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0))), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0))), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 708, 25376, 25392), ("test/test.ml", 708, 25376, 25392), 0), 0)), (("test/test.ml", 708, 25376, 25391), ("test/test.ml", 708, 25376, 25393), 0), 0, 0))]), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25393), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0))), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0), 0, 0), [(0, (((("one"), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0))), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0))), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 709, 25399, 25414), ("test/test.ml", 709, 25399, 25415), 0), 0)), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25416), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0))), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25421), 0), 0, 0), ((((("one"), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0))), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))), (("test/test.ml", 708, 25376, 25382), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 703, 25238, 25242), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 701, 25208, 25210), ("test/test.ml", 711, 25433, 25444), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0)), 0), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0), 0, 0)), (("test/test.ml", 700, 25135, 25198), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 711, 25433, 25444), 1), 0, 0), 0, (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0))]), (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0)); (Tag1 (0, [(((("emit_constructor_arguments", (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0))), (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0))), (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0), 0, 0); ((("x", (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0))), (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0), 0, 0); ((("s", (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0))), (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0), 0, 0)]), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 713, 25446, 25486), 0), [(("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25485), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0))), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25526), 0)), ((0, ((("a", (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0))), (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0), 0, 0)))), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25528), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0))), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0), 0, 0), [(0, (Tag1 (Tag2 ("| ", (("test/test.ml", 716, 25532, 25537), ("test/test.ml", 716, 25532, 25539), 0), 0)), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25540), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0))), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0))), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0))), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0), 0, 0), [(0, (Tag1 (Tag2 (" (", (("test/test.ml", 716, 25532, 25551), ("test/test.ml", 716, 25532, 25553), 0), 0)), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25554), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0))), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0))), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0))), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0))), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25582), ("test/test.ml", 716, 25532, 25583), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25577), ("test/test.ml", 716, 25532, 25584), 0), [(("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25583), 0)], 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25585), 0), [(("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25584), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0))), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0), 0, 0), [(0, (Tag1 (Tag2 (") -> ", (("test/test.ml", 716, 25532, 25590), ("test/test.ml", 716, 25532, 25595), 0), 0)), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25596), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0))), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_types (", (("test/test.ml", 716, 25532, 25600), ("test/test.ml", 716, 25532, 25616), 0), 0)), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25617), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0))), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0), 0, 0), [(0, (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0))), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0))), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0))), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25644), ("test/test.ml", 716, 25532, 25645), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25639), ("test/test.ml", 716, 25532, 25646), 0), [(("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25645), 0)], 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25646), 0), 0, 0)); (0, (Tag1 (Tag2 ("))", (("test/test.ml", 716, 25532, 25649), ("test/test.ml", 716, 25532, 25651), 0), 0)), (("test/test.ml", 716, 25532, 25648), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 714, 25496, 25498), ("test/test.ml", 716, 25532, 25652), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0)), 0), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0), 0, 0)), (("test/test.ml", 713, 25446, 25486), ("test/test.ml", 716, 25532, 25652), 0), 0, 0)), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 716, 25532, 25652), 1), 0, 0), 0, (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0))]), (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0)); (Tag1 (0, [(((("decl_emit_constructor_arguments", (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0))), (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0))), (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0), 0, 0); ((("x", (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0))), (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0), 0, 0); ((("s", (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0))), (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0), 0, 0)]), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 718, 25658, 25703), 0), [(("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25702), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0))), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25743), 0)), ((0, ((("a", (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0))), (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0), 0, 0)))), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25745), 0), 0, 0), 0, (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0))), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0))), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0), 0, 0); (((("s"), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0))), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 721, 25749, 25782), ("test/test.ml", 721, 25749, 25783), 0), 0, 0)]), (("test/test.ml", 721, 25749, 25777), ("test/test.ml", 721, 25749, 25784), 0), [(("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25783), 0)], 0))]), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25784), 0), 0, 0))]), (("test/test.ml", 719, 25713, 25715), ("test/test.ml", 721, 25749, 25784), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0)), 0), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0), 0, 0)), (("test/test.ml", 718, 25658, 25703), ("test/test.ml", 721, 25749, 25784), 0), 0, 0)), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 721, 25749, 25784), 1), 0, 0), 0, (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0))]), (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0)); (Tag1 (0, [(((("print_constructor_arguments", (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0))), (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0))), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 723, 25787, 25821), 0), [(("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0))), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0))), (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0), 0, 0); ((("s", (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0))), (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0), 0, 0)]), (("test/test.ml", 725, 25839, 25843), ("test/test.ml", 725, 25839, 25848), 0), [(("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25847), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0))), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25886), 0)), ((0, ((("a", (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0))), (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0), 0, 0)))), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25888), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0))), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0))), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_tuple:", (("test/test.ml", 728, 25899, 25938), ("test/test.ml", 728, 25899, 25956), 0), 0)), (("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25957), 0), 0, 0); (((("a"), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0))), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0), 0, 0)]), (("test/test.ml", 728, 25899, 25936), ("test/test.ml", 728, 25899, 25963), 0), [(("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25962), 0)], 0))]), (("test/test.ml", 728, 25899, 25920), ("test/test.ml", 728, 25899, 25964), 0), [(("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25963), 0)], 0))]), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 728, 25899, 25965), 0), [(("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25964), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0))), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pcstr_tuple:", (("test/test.ml", 729, 25967, 25974), ("test/test.ml", 729, 25967, 25986), 0), 0)), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 25987), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0))), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0))), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0), 0, 0); (((("s"), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0))), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0), 0, 0)]), (("test/test.ml", 729, 25967, 26017), ("test/test.ml", 729, 25967, 26022), 0), [(("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26021), 0)], 0))]), (("test/test.ml", 729, 25967, 25990), ("test/test.ml", 729, 25967, 26023), 0), [(("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26022), 0)], 0))]), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)); ((Tag5 ((("Pcstr_record"), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26050), 0)), ((0, ((("a", (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0))), (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0), 0, 0)))), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26052), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0))), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0))), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_record:", (("test/test.ml", 732, 26056, 26095), ("test/test.ml", 732, 26056, 26114), 0), 0)), (("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26115), 0), 0, 0); (((("a"), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0))), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0), 0, 0)]), (("test/test.ml", 732, 26056, 26093), ("test/test.ml", 732, 26056, 26121), 0), [(("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26120), 0)], 0))]), (("test/test.ml", 732, 26056, 26077), ("test/test.ml", 732, 26056, 26122), 0), [(("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26121), 0)], 0))]), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 732, 26056, 26123), 0), [(("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26122), 0)], 0), (Tag1 (Tag2 ("FIXME:Pcstr_record", (("test/test.ml", 733, 26125, 26132), ("test/test.ml", 733, 26125, 26150), 0), 0)), (("test/test.ml", 733, 26125, 26131), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 726, 25852, 25856), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 724, 25824, 25826), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 733, 26125, 26151), 1), 0, 0), 0, (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0))]), (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0)); (Tag1 (1, [(((("process_pype_variant_constructor_declaration_list", (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0))), (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0))), (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0), 0, 0), (Tag2 ([(Tag3 ((("list"), (("test/test.ml", 735, 26153, 26237), ("test/test.ml", 735, 26153, 26241), 0)), [(Tag3 ((("constructor_declaration"), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0)), 0), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26241), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0)), 0), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 735, 26153, 26254), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0))), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0))), (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0), 0, 0); ((("s", (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0))), (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0), 0, 0)]), (("test/test.ml", 737, 26279, 26283), ("test/test.ml", 737, 26279, 26288), 0), [(("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26287), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0))), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0)), 0), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0), 0, 0), 0, (Tag1 (Tag2 ("VARIANT:", (("test/test.ml", 739, 26308, 26321), ("test/test.ml", 739, 26308, 26329), 0), 0)), (("test/test.ml", 739, 26308, 26320), ("test/test.ml", 739, 26308, 26330), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 740, 26332, 26340), ("test/test.ml", 740, 26332, 26342), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0), 0, 0); ((("t", (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0))), (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0), 0, 0)]), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 1), 0, 0)))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 0), 0, 0), 0, (Tag6 ((((("h"), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0))), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0), 0, 0), [((Tag7 ([((("pcd_name"), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 1)), ((("pcd_name", (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0))), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0), 0, 0)); ((("pcd_vars"), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 1)), ((("pcd_vars", (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0))), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0), 0, 0)); ((("pcd_args"), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 1)), ((("pcd_args", (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0))), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0), 0, 0)); ((("pcd_res"), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 1)), ((("pcd_res", (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0))), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0), 0, 0)); ((("pcd_loc"), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 1)), ((("pcd_loc", (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0))), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0), 0, 0)); ((("pcd_attributes"), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 1)), ((("pcd_attributes", (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0))), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0), 0, 0))], 0), (("test/test.ml", 742, 26367, 26374), ("test/test.ml", 749, 26619, 26626), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0))), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0))), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:constructor_declaration:", (("test/test.ml", 753, 26748, 26762), ("test/test.ml", 753, 26748, 26792), 0), 0)), (("test/test.ml", 753, 26748, 26761), ("test/test.ml", 753, 26748, 26793), 0), 0, 0); (((("pcd_name"), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0))), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0), 0, 0); (Tag1 (Tag2 ("vars", (("test/test.ml", 755, 26818, 26832), ("test/test.ml", 755, 26818, 26836), 0), 0)), (("test/test.ml", 755, 26818, 26831), ("test/test.ml", 755, 26818, 26837), 0), 0, 0); (((("pcd_vars"), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0))), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0), 0, 0); (Tag1 (Tag2 ("args", (("test/test.ml", 757, 26862, 26876), ("test/test.ml", 757, 26862, 26880), 0), 0)), (("test/test.ml", 757, 26862, 26875), ("test/test.ml", 757, 26862, 26881), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0))), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0), 0, 0); (Tag1 (Tag2 ("res", (("test/test.ml", 759, 26906, 26920), ("test/test.ml", 759, 26906, 26923), 0), 0)), (("test/test.ml", 759, 26906, 26919), ("test/test.ml", 759, 26906, 26924), 0), 0, 0); (((("pcd_res"), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0))), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0), 0, 0); (Tag1 (Tag2 ("loc", (("test/test.ml", 761, 26948, 26962), ("test/test.ml", 761, 26948, 26965), 0), 0)), (("test/test.ml", 761, 26948, 26961), ("test/test.ml", 761, 26948, 26966), 0), 0, 0); (((("pcd_loc"), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0))), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0), 0, 0); (Tag1 (Tag2 ("attrs", (("test/test.ml", 763, 26990, 27004), ("test/test.ml", 763, 26990, 27009), 0), 0)), (("test/test.ml", 763, 26990, 27003), ("test/test.ml", 763, 26990, 27010), 0), 0, 0); (((("pcd_attributes"), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0))), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0), 0, 0)]), (("test/test.ml", 752, 26707, 26746), ("test/test.ml", 765, 27040, 27052), 0), [(("test/test.ml", 753, 26748, 26761), ("test/test.ml", 764, 27012, 27039), 0)], 0))]), (("test/test.ml", 752, 26707, 26730), ("test/test.ml", 765, 27040, 27053), 0), [(("test/test.ml", 752, 26707, 26731), ("test/test.ml", 765, 27040, 27052), 0)], 0))]), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 765, 27040, 27054), 0), [(("test/test.ml", 752, 26707, 26716), ("test/test.ml", 765, 27040, 27053), 0)], 0), (Tag2 (0, [(((("newtext", (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0))), (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0), 0, 0), (Tag5 ((((("emit_constructor_arguments"), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0))), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0), 0, 0), (("txt"), (("test/test.ml", 766, 27056, 27115), ("test/test.ml", 766, 27056, 27118), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27118), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0))), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0), 0, 0); (((("s"), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0))), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0), 0, 0)]), (("test/test.ml", 766, 27056, 27105), ("test/test.ml", 766, 27056, 27132), 0), [(("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27131), 0)], 0))]), (("test/test.ml", 766, 27056, 27078), ("test/test.ml", 766, 27056, 27133), 0), [(("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27132), 0)], 0), 0, (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 766, 27056, 27133), 0))], (Tag2 (0, [(((("newtext2", (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0))), (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0), 0, 0), (Tag5 ((((("decl_emit_constructor_arguments"), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0))), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0), 0, 0), (("txt"), (("test/test.ml", 767, 27137, 27202), ("test/test.ml", 767, 27137, 27205), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27205), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0))), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0), 0, 0); (((("s"), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0))), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0), 0, 0)]), (("test/test.ml", 767, 27137, 27192), ("test/test.ml", 767, 27137, 27219), 0), [(("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27218), 0)], 0))]), (("test/test.ml", 767, 27137, 27160), ("test/test.ml", 767, 27137, 27220), 0), [(("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27219), 0)], 0), 0, (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 767, 27137, 27220), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0))), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0))), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2A:", (("test/test.ml", 768, 27224, 27249), ("test/test.ml", 768, 27224, 27257), 0), 0)), (("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27258), 0), 0, 0)); (0, (((("newtext2"), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0))), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0), 0, 0))]), (("test/test.ml", 768, 27224, 27247), ("test/test.ml", 768, 27224, 27270), 0), [(("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27269), 0)], 0))]), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 768, 27224, 27271), 0), [(("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27270), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0))), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0))), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2B:", (("test/test.ml", 769, 27273, 27298), ("test/test.ml", 769, 27273, 27306), 0), 0)), (("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27307), 0), 0, 0)); (0, (((("newtext"), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0))), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0), 0, 0))]), (("test/test.ml", 769, 27273, 27296), ("test/test.ml", 769, 27273, 27318), 0), [(("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27317), 0)], 0))]), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 769, 27273, 27319), 0), [(("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27318), 0)], 0), (Tag2 (0, [(((("ret", (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0))), (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0))), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0), 0, 0), [(0, (Tag1 (Tag2 ("constructor:\"", (("test/test.ml", 771, 27322, 27354), ("test/test.ml", 771, 27322, 27368), 0), 0)), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 771, 27322, 27369), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0))), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0), 0, 0), [(0, (Tag12 ((((("pcd_name"), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0), 0, 0), (("txt"), (("test/test.ml", 771, 27322, 27380), ("test/test.ml", 771, 27322, 27383), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27383), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0))), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"", (("test/test.ml", 771, 27322, 27387), ("test/test.ml", 771, 27322, 27389), 0), 0)), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 771, 27322, 27390), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0))), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0), 0, 0), [(0, (Tag1 (Tag2 ("{", (("test/test.ml", 772, 27391, 27425), ("test/test.ml", 772, 27391, 27426), 0), 0)), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 772, 27391, 27427), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0))), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0), 0, 0), [(0, (Tag5 ((((("print_constructor_arguments"), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0))), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0), 0, 0), [(0, (Tag8 ([(((("pcd_args"), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0))), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0), 0, 0); (((("s"), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0))), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0), 0, 0)]), (("test/test.ml", 773, 27430, 27488), ("test/test.ml", 773, 27430, 27500), 0), [(("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27499), 0)], 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27500), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0))), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0), 0, 0), [(0, (Tag1 (Tag2 ("}", (("test/test.ml", 774, 27501, 27535), ("test/test.ml", 774, 27501, 27536), 0), 0)), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 774, 27501, 27537), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0))), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0), 0, 0), [(0, (Tag1 (Tag2 ("\t|", (("test/test.ml", 774, 27501, 27541), ("test/test.ml", 774, 27501, 27544), 0), 0)), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 774, 27501, 27545), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0))), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0))), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0), 0, 0); (((("s"), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0))), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0), 0, 0)]), (("test/test.ml", 775, 27548, 27628), ("test/test.ml", 775, 27548, 27633), 0), [(("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27632), 0)], 0))]), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 775, 27548, 27633), 0), 0, 0), 0, (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 775, 27548, 27633), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0))), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:constructor_declaration_new: %s\n", (("test/test.ml", 777, 27645, 27668), ("test/test.ml", 777, 27645, 27707), 0), 0)), (("test/test.ml", 777, 27645, 27667), ("test/test.ml", 777, 27645, 27708), 0), 0, 0)); (0, (((("ret"), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0))), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0), 0, 0))]), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27712), 0), 0, 0), (((("ret"), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0))), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 741, 26348, 26354), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 738, 26291, 26295), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 736, 26264, 26266), ("test/test.ml", 778, 27714, 27725), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0)), 0), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0), 0, 0)), (("test/test.ml", 735, 26153, 26254), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 778, 27714, 27725), 1), 0, 0), 0, (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0))]), (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0)); (Tag1 (0, [(((("process_kind", (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0))), (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0))), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 781, 27738, 27757), 0), [(("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0))), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0))), (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0), 0, 0); ((("s", (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0))), (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0), 0, 0)]), (("test/test.ml", 783, 27782, 27786), ("test/test.ml", 783, 27782, 27791), 0), [(("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27790), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0))), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0), 0, 0), [((Tag5 ((("Ptype_abstract"), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0)), 0), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0))), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0))), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 786, 27835, 27893), ("test/test.ml", 786, 27835, 27914), 0), 0)), (("test/test.ml", 786, 27835, 27891), ("test/test.ml", 786, 27835, 27916), 0), [(("test/test.ml", 786, 27835, 27892), ("test/test.ml", 786, 27835, 27915), 0)], 0))]), (("test/test.ml", 786, 27835, 27875), ("test/test.ml", 786, 27835, 27917), 0), [(("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27916), 0)], 0))]), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 786, 27835, 27918), 0), [(("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27917), 0)], 0), (Tag1 (Tag2 ("DEBUG:Ptype_abstract", (("test/test.ml", 787, 27920, 27927), ("test/test.ml", 787, 27920, 27947), 0), 0)), (("test/test.ml", 787, 27920, 27926), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)); ((Tag5 ((("Ptype_variant"), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27968), 0)), ((0, ((("a", (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0))), (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0), 0, 0)))), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27970), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0))), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0))), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptype_variant:", (("test/test.ml", 789, 27980, 28019), ("test/test.ml", 789, 27980, 28039), 0), 0)), (("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28040), 0), 0, 0); (((("a"), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0))), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0), 0, 0)]), (("test/test.ml", 789, 27980, 28017), ("test/test.ml", 789, 27980, 28045), 0), [(("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28044), 0)], 0))]), (("test/test.ml", 789, 27980, 28001), ("test/test.ml", 789, 27980, 28046), 0), [(("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28045), 0)], 0))]), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 789, 27980, 28047), 0), [(("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28046), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0))), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0), 0, 0), [(0, (Tag1 (Tag2 ("type variant:", (("test/test.ml", 790, 28049, 28056), ("test/test.ml", 790, 28049, 28069), 0), 0)), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28070), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0))), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0))), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0), 0, 0); (((("s"), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0))), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0), 0, 0)]), (("test/test.ml", 790, 28049, 28124), ("test/test.ml", 790, 28049, 28129), 0), [(("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28128), 0)], 0))]), (("test/test.ml", 790, 28049, 28073), ("test/test.ml", 790, 28049, 28130), 0), [(("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28129), 0)], 0))]), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)); ((Tag5 ((("Ptype_record"), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28201), 0)), ((0, ((("a", (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0))), (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0), 0, 0)))), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28203), 0), 0, 0), 0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0))), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0))), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0), 0, 0); (((("s"), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0))), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0), 0, 0)]), (("test/test.ml", 793, 28212, 28242), ("test/test.ml", 793, 28212, 28247), 0), [(("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28246), 0)], 0))]), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28247), 0), 0, 0)); ((Tag5 ((("Ptype_open"), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0)), 0), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0))), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0))), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 794, 28248, 28301), ("test/test.ml", 794, 28248, 28322), 0), 0)), (("test/test.ml", 794, 28248, 28299), ("test/test.ml", 794, 28248, 28324), 0), [(("test/test.ml", 794, 28248, 28300), ("test/test.ml", 794, 28248, 28323), 0)], 0))]), (("test/test.ml", 794, 28248, 28283), ("test/test.ml", 794, 28248, 28325), 0), [(("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28324), 0)], 0))]), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28326), 0), [(("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28325), 0)], 0), (Tag1 (Tag2 ("Ptype_abstract", (("test/test.ml", 794, 28248, 28329), ("test/test.ml", 794, 28248, 28343), 0), 0)), (("test/test.ml", 794, 28248, 28328), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 784, 27794, 27798), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 782, 27767, 27769), ("test/test.ml", 794, 28248, 28344), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0)), 0), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0), 0, 0)), (("test/test.ml", 781, 27738, 27758), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 794, 28248, 28344), 1), 0, 0), 0, (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0))]), (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0)); (Tag1 (0, [(((("print_type_decl", (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0))), (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0))), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 796, 28346, 28368), 0), [(("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0))), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0))), (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0), 0, 0); ((("s", (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0))), (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0), 0, 0)]), (("test/test.ml", 798, 28386, 28389), ("test/test.ml", 798, 28386, 28394), 0), [(("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28393), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0))), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0), 0, 0), [((Tag7 ([((("ptype_name"), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 1)), ((("ptype_name", (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0))), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0), 0, 0)); ((("ptype_params"), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 1)), ((("ptype_params", (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0))), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0), 0, 0)); ((("ptype_cstrs"), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 1)), ((("ptype_cstrs", (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0))), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0), 0, 0)); ((("ptype_kind"), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 1)), ((("ptype_kind", (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0))), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0), 0, 0)); ((("ptype_private"), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 1)), ((("ptype_private", (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0))), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0), 0, 0)); ((("ptype_manifest"), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 1)), ((("ptype_manifest", (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0))), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0), 0, 0)); ((("ptype_attributes"), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 1)), ((("ptype_attributes", (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0))), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0), 0, 0)); ((("ptype_loc"), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 1)), ((("ptype_loc", (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0))), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0), 0, 0))], 0), (("test/test.ml", 800, 28415, 28421), ("test/test.ml", 809, 28814, 28821), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0))), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0))), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:type_decl:", (("test/test.ml", 810, 28825, 28864), ("test/test.ml", 810, 28825, 28880), 0), 0)), (("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28881), 0), 0, 0); (((("ptype_name"), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0))), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0), 0, 0)]), (("test/test.ml", 810, 28825, 28862), ("test/test.ml", 810, 28825, 28894), 0), [(("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28893), 0)], 0))]), (("test/test.ml", 810, 28825, 28846), ("test/test.ml", 810, 28825, 28895), 0), [(("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28894), 0)], 0))]), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 810, 28825, 28896), 0), [(("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28895), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0))), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0))), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:parameters:", (("test/test.ml", 811, 28898, 28937), ("test/test.ml", 811, 28898, 28954), 0), 0)), (("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28955), 0), 0, 0); (((("ptype_params"), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0))), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0), 0, 0)]), (("test/test.ml", 811, 28898, 28935), ("test/test.ml", 811, 28898, 28970), 0), [(("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28969), 0)], 0))]), (("test/test.ml", 811, 28898, 28919), ("test/test.ml", 811, 28898, 28971), 0), [(("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28970), 0)], 0))]), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 811, 28898, 28972), 0), [(("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28971), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0))), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0))), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:cstrs:", (("test/test.ml", 812, 28974, 29013), ("test/test.ml", 812, 28974, 29025), 0), 0)), (("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29026), 0), 0, 0); (((("ptype_cstrs"), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0))), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0), 0, 0)]), (("test/test.ml", 812, 28974, 29011), ("test/test.ml", 812, 28974, 29040), 0), [(("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29039), 0)], 0))]), (("test/test.ml", 812, 28974, 28995), ("test/test.ml", 812, 28974, 29041), 0), [(("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29040), 0)], 0))]), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 812, 28974, 29042), 0), [(("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 29041), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0))), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0))), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:kind:", (("test/test.ml", 813, 29044, 29083), ("test/test.ml", 813, 29044, 29094), 0), 0)), (("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29095), 0), 0, 0); (((("ptype_kind"), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0))), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0), 0, 0)]), (("test/test.ml", 813, 29044, 29081), ("test/test.ml", 813, 29044, 29107), 0), [(("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29106), 0)], 0))]), (("test/test.ml", 813, 29044, 29065), ("test/test.ml", 813, 29044, 29108), 0), [(("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29107), 0)], 0))]), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 813, 29044, 29109), 0), [(("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29108), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0))), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0))), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:private:", (("test/test.ml", 815, 29118, 29157), ("test/test.ml", 815, 29118, 29171), 0), 0)), (("test/test.ml", 815, 29118, 29156), ("test/test.ml", 815, 29118, 29172), 0), 0, 0); (((("ptype_private"), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0))), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:manifest", (("test/test.ml", 816, 29190, 29229), ("test/test.ml", 816, 29190, 29243), 0), 0)), (("test/test.ml", 816, 29190, 29228), ("test/test.ml", 816, 29190, 29244), 0), 0, 0); (((("ptype_manifest"), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0))), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:attr", (("test/test.ml", 817, 29262, 29301), ("test/test.ml", 817, 29262, 29311), 0), 0)), (("test/test.ml", 817, 29262, 29300), ("test/test.ml", 817, 29262, 29312), 0), 0, 0); (((("ptype_attributes"), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0))), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:loc", (("test/test.ml", 818, 29332, 29371), ("test/test.ml", 818, 29332, 29380), 0), 0)), (("test/test.ml", 818, 29332, 29370), ("test/test.ml", 818, 29332, 29381), 0), 0, 0); (((("ptype_loc"), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0))), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0), 0, 0)]), (("test/test.ml", 815, 29118, 29155), ("test/test.ml", 819, 29393, 29431), 0), [(("test/test.ml", 815, 29118, 29156), ("test/test.ml", 818, 29332, 29392), 0)], 0))]), (("test/test.ml", 815, 29118, 29139), ("test/test.ml", 819, 29393, 29432), 0), [(("test/test.ml", 815, 29118, 29140), ("test/test.ml", 819, 29393, 29431), 0)], 0))]), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 819, 29393, 29433), 0), [(("test/test.ml", 815, 29118, 29125), ("test/test.ml", 819, 29393, 29432), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0))), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0), 0, 0), [(0, (Tag1 (Tag2 ("print_type_decl:\"", (("test/test.ml", 820, 29435, 29442), ("test/test.ml", 820, 29435, 29460), 0), 0)), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29461), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0))), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0), 0, 0), [(0, (Tag12 ((((("ptype_name"), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0), 0, 0), (("txt"), (("test/test.ml", 820, 29435, 29476), ("test/test.ml", 820, 29435, 29479), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29479), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0))), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" = ", (("test/test.ml", 820, 29435, 29483), ("test/test.ml", 820, 29435, 29488), 0), 0)), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29489), 0), 0, 0)); (0, (Tag5 ((((("process_kind"), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0))), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0), 0, 0), [(0, (Tag8 ([(((("ptype_kind"), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0))), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0), 0, 0); (((("s"), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0))), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0), 0, 0)]), (("test/test.ml", 820, 29435, 29506), ("test/test.ml", 820, 29435, 29520), 0), [(("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29519), 0)], 0))]), (("test/test.ml", 820, 29435, 29492), ("test/test.ml", 820, 29435, 29521), 0), [(("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29520), 0)], 0))]), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 799, 28398, 28402), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 797, 28371, 28373), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 820, 29435, 29521), 1), 0, 0), 0, (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0))]), (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0)); (Tag3 (1, [(("type_declaration_list", (("test/test.ml", 822, 29529, 29538), ("test/test.ml", 822, 29529, 29559), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 822, 29529, 29579), ("test/test.ml", 822, 29529, 29583), 0)), [(Tag3 ((("type_declaration"), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0)), 0), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0), 0, 0)]), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29583), 0), 0, 0)), 0, (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0))]), (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0)); (Tag1 (1, [(((("process_type_decl_list", (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0))), (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0))), (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0), 0, 0), (Tag2 ([(Tag3 ((("type_declaration_list"), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0)), 0), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0)), 0), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)]), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 824, 29589, 29656), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0))), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0))), (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0), 0, 0); ((("s", (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0))), (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0), 0, 0)]), (("test/test.ml", 826, 29681, 29684), ("test/test.ml", 826, 29681, 29689), 0), [(("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29688), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0))), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0)), 0), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0), 0, 0), 0, (Tag1 (Tag2 ("process_type_decl_list", (("test/test.ml", 828, 29709, 29722), ("test/test.ml", 828, 29709, 29744), 0), 0)), (("test/test.ml", 828, 29709, 29721), ("test/test.ml", 828, 29709, 29745), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 829, 29746, 29754), ("test/test.ml", 829, 29746, 29756), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0), 0, 0); ((("t", (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0))), (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0), 0, 0)]), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 1), 0, 0)))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0))), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0), 0, 0), [(0, (Tag5 ((((("print_type_decl"), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0))), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0))), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0), 0, 0); (((("s"), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0))), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0), 0, 0)]), (("test/test.ml", 830, 29762, 29785), ("test/test.ml", 830, 29762, 29790), 0), [(("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29789), 0)], 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 830, 29762, 29791), 0), [(("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29790), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0))), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0), 0, 0), [(0, (Tag1 (Tag2 ("[", (("test/test.ml", 831, 29792, 29801), ("test/test.ml", 831, 29792, 29802), 0), 0)), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 831, 29792, 29803), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0))), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0), 0, 0), [(0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0))), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0))), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0), 0, 0); (((("s"), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0))), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0), 0, 0)]), (("test/test.ml", 832, 29806, 29836), ("test/test.ml", 832, 29806, 29841), 0), [(("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29840), 0)], 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 832, 29806, 29842), 0), [(("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29841), 0)], 0)); (0, (Tag1 (Tag2 ("]", (("test/test.ml", 833, 29843, 29852), ("test/test.ml", 833, 29843, 29853), 0), 0)), (("test/test.ml", 833, 29843, 29851), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 827, 29692, 29696), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 825, 29666, 29668), ("test/test.ml", 833, 29843, 29854), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0)), 0), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0), 0, 0)), (("test/test.ml", 824, 29589, 29656), ("test/test.ml", 833, 29843, 29854), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 833, 29843, 29854), 1), 0, 0), 0, (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0))]), (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0)); (Tag1 (0, [(((("printdesc", (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0))), (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0))), (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0), 0, 0), (Tag2 ([(Tag3 ((("structure_item_desc"), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0)), 0), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0)), 0), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)]), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 836, 29867, 29916), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0))), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0))), (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0), 0, 0); ((("s", (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0))), (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0), 0, 0)]), (("test/test.ml", 838, 29942, 29945), ("test/test.ml", 838, 29942, 29950), 0), [(("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29949), 0)], 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0))), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0))), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:structure_item_desc:", (("test/test.ml", 839, 29953, 29990), ("test/test.ml", 839, 29953, 30016), 0), 0)), (("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30017), 0), 0, 0); (((("x"), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0))), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0), 0, 0)]), (("test/test.ml", 839, 29953, 29988), ("test/test.ml", 839, 29953, 30021), 0), [(("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30020), 0)], 0))]), (("test/test.ml", 839, 29953, 29972), ("test/test.ml", 839, 29953, 30022), 0), [(("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 30021), 0)], 0))]), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 839, 29953, 30023), 0), [(("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 30022), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0))), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0), 0, 0), [((Tag5 ((("Pstr_eval"), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30057), 0)), ((0, (Tag4 ([((("expression", (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0))), (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0), 0, 0); ((("attributes", (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0))), (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0), 0, 0)]), (("test/test.ml", 841, 30042, 30058), ("test/test.ml", 841, 30042, 30081), 0), [(("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30080), 0)], 0)))), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30081), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0))), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0))), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_eval:", (("test/test.ml", 842, 30085, 30124), ("test/test.ml", 842, 30085, 30140), 0), 0)), (("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30141), 0), 0, 0); (((("expression"), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0))), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0), 0, 0); (((("attributes"), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0))), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0), 0, 0)]), (("test/test.ml", 842, 30085, 30122), ("test/test.ml", 842, 30085, 30165), 0), [(("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30164), 0)], 0))]), (("test/test.ml", 842, 30085, 30106), ("test/test.ml", 842, 30085, 30166), 0), [(("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30165), 0)], 0))]), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 842, 30085, 30167), 0), [(("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30166), 0)], 0), (Tag1 (Tag2 ("Pstr_eval", (("test/test.ml", 843, 30169, 30176), ("test/test.ml", 843, 30169, 30185), 0), 0)), (("test/test.ml", 843, 30169, 30175), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)); ((Tag5 ((("Pstr_value"), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30225), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0))), (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0), 0, 0); ((("value_binding_list", (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0))), (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0), 0, 0)]), (("test/test.ml", 845, 30209, 30226), ("test/test.ml", 845, 30209, 30256), 0), [(("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30255), 0)], 0)))), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30256), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0))), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0))), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_value:", (("test/test.ml", 846, 30260, 30299), ("test/test.ml", 846, 30260, 30316), 0), 0)), (("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30317), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0))), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0), 0, 0); (((("value_binding_list"), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0))), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0), 0, 0)]), (("test/test.ml", 846, 30260, 30297), ("test/test.ml", 846, 30260, 30348), 0), [(("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30347), 0)], 0))]), (("test/test.ml", 846, 30260, 30281), ("test/test.ml", 846, 30260, 30349), 0), [(("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30348), 0)], 0))]), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 846, 30260, 30350), 0), [(("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30349), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0))), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_value:", (("test/test.ml", 847, 30352, 30359), ("test/test.ml", 847, 30352, 30370), 0), 0)), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30371), 0), 0, 0)); (0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0))), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0), 0, 0), [(0, (((("value_binding_list"), (("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0))), (("test/test.ml", 847, 30352, 30403), ("test/test.ml", 847, 30352, 30423), 0), [(("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0)], 0))]), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30423), 0), 0, 0))]), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)); ((Tag5 ((("Pstr_primitive"), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30444), 0)), ((0, ((("value_description", (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0))), (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0), 0, 0)))), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30462), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0))), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0))), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_primitive:", (("test/test.ml", 848, 30424, 30498), ("test/test.ml", 848, 30424, 30519), 0), 0)), (("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30520), 0), 0, 0); (((("value_description"), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0))), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0), 0, 0)]), (("test/test.ml", 848, 30424, 30496), ("test/test.ml", 848, 30424, 30540), 0), [(("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30539), 0)], 0))]), (("test/test.ml", 848, 30424, 30480), ("test/test.ml", 848, 30424, 30541), 0), [(("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30540), 0)], 0))]), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30542), 0), [(("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30541), 0)], 0), (Tag1 (Tag2 ("primitive", (("test/test.ml", 848, 30424, 30546), ("test/test.ml", 848, 30424, 30555), 0), 0)), (("test/test.ml", 848, 30424, 30545), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)); ((Tag5 ((("Pstr_type"), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30614), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0))), (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0), 0, 0); ((("type_declaration_list", (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0))), (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0), 0, 0)]), (("test/test.ml", 850, 30599, 30615), ("test/test.ml", 850, 30599, 30648), 0), [(("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30647), 0)], 0)))), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30648), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0))), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0))), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_type:", (("test/test.ml", 853, 30689, 30728), ("test/test.ml", 853, 30689, 30744), 0), 0)), (("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30745), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0))), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0), 0, 0); (((("type_declaration_list"), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0))), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0), 0, 0)]), (("test/test.ml", 853, 30689, 30726), ("test/test.ml", 853, 30689, 30779), 0), [(("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30778), 0)], 0))]), (("test/test.ml", 853, 30689, 30710), ("test/test.ml", 853, 30689, 30780), 0), [(("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30779), 0)], 0))]), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 853, 30689, 30781), 0), [(("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30780), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0))), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_type:", (("test/test.ml", 854, 30783, 30790), ("test/test.ml", 854, 30783, 30800), 0), 0)), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 854, 30783, 30801), 0), 0, 0)); (0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0))), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0), 0, 0), [(0, (Tag8 ([(((("type_declaration_list"), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0))), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0), 0, 0); (((("s"), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0))), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0), 0, 0)]), (("test/test.ml", 855, 30803, 30831), ("test/test.ml", 855, 30803, 30858), 0), [(("test/test.ml", 855, 30803, 30832), ("test/test.ml", 855, 30803, 30857), 0); (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30856), 0)], 0))]), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30858), 0), 0, 0))]), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)); ((Tag5 ((("Pstr_typext"), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30876), 0)), ((0, ((("type_extension", (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0))), (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0), 0, 0)))), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30892), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0))), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0))), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_typext:", (("test/test.ml", 856, 30859, 30928), ("test/test.ml", 856, 30859, 30946), 0), 0)), (("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30947), 0), 0, 0); (((("type_extension"), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0))), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0), 0, 0)]), (("test/test.ml", 856, 30859, 30926), ("test/test.ml", 856, 30859, 30964), 0), [(("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30963), 0)], 0))]), (("test/test.ml", 856, 30859, 30910), ("test/test.ml", 856, 30859, 30965), 0), [(("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30964), 0)], 0))]), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30966), 0), [(("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30965), 0)], 0), (Tag1 (Tag2 ("typeext", (("test/test.ml", 856, 30859, 30969), ("test/test.ml", 856, 30859, 30976), 0), 0)), (("test/test.ml", 856, 30859, 30968), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)); ((Tag5 ((("Pstr_exception"), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 30998), 0)), ((0, ((("extension_constructor", (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0))), (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0), 0, 0)))), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 31020), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0))), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0))), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_exception:", (("test/test.ml", 857, 30978, 31056), ("test/test.ml", 857, 30978, 31077), 0), 0)), (("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31078), 0), 0, 0); (((("extension_constructor"), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0))), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0), 0, 0)]), (("test/test.ml", 857, 30978, 31054), ("test/test.ml", 857, 30978, 31102), 0), [(("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31101), 0)], 0))]), (("test/test.ml", 857, 30978, 31038), ("test/test.ml", 857, 30978, 31103), 0), [(("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31102), 0)], 0))]), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31104), 0), [(("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31103), 0)], 0), (Tag1 (Tag2 ("exception", (("test/test.ml", 857, 30978, 31107), ("test/test.ml", 857, 30978, 31116), 0), 0)), (("test/test.ml", 857, 30978, 31106), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)); ((Tag5 ((("Pstr_module"), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31135), 0)), ((0, ((("module_binding", (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0))), (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0), 0, 0)))), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31151), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0))), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0))), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_module:", (("test/test.ml", 858, 31118, 31187), ("test/test.ml", 858, 31118, 31205), 0), 0)), (("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31206), 0), 0, 0); (((("module_binding"), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0))), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0), 0, 0)]), (("test/test.ml", 858, 31118, 31185), ("test/test.ml", 858, 31118, 31222), 0), [(("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31221), 0)], 0))]), (("test/test.ml", 858, 31118, 31169), ("test/test.ml", 858, 31118, 31223), 0), [(("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31222), 0)], 0))]), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31224), 0), [(("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31223), 0)], 0), (Tag1 (Tag2 ("binding", (("test/test.ml", 858, 31118, 31227), ("test/test.ml", 858, 31118, 31234), 0), 0)), (("test/test.ml", 858, 31118, 31226), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)); ((Tag5 ((("Pstr_recmodule"), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31256), 0)), ((0, ((("module_binding_list", (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0))), (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0), 0, 0)))), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31277), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0))), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0))), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_recmodule:", (("test/test.ml", 859, 31236, 31313), ("test/test.ml", 859, 31236, 31334), 0), 0)), (("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31335), 0), 0, 0); (((("module_binding_list"), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0))), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0), 0, 0)]), (("test/test.ml", 859, 31236, 31311), ("test/test.ml", 859, 31236, 31357), 0), [(("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31356), 0)], 0))]), (("test/test.ml", 859, 31236, 31295), ("test/test.ml", 859, 31236, 31358), 0), [(("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31357), 0)], 0))]), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31359), 0), [(("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31358), 0)], 0), (Tag1 (Tag2 ("recmodule", (("test/test.ml", 859, 31236, 31363), ("test/test.ml", 859, 31236, 31372), 0), 0)), (("test/test.ml", 859, 31236, 31362), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)); ((Tag5 ((("Pstr_modtype"), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31392), 0)), ((0, ((("module_type_declaration", (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0))), (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0), 0, 0)))), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31416), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0))), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0))), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_modtype:", (("test/test.ml", 860, 31374, 31452), ("test/test.ml", 860, 31374, 31471), 0), 0)), (("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31472), 0), 0, 0); (((("module_type_declaration"), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0))), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0), 0, 0)]), (("test/test.ml", 860, 31374, 31450), ("test/test.ml", 860, 31374, 31498), 0), [(("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31497), 0)], 0))]), (("test/test.ml", 860, 31374, 31434), ("test/test.ml", 860, 31374, 31499), 0), [(("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31498), 0)], 0))]), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31500), 0), [(("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31499), 0)], 0), (Tag1 (Tag2 ("modtype", (("test/test.ml", 860, 31374, 31503), ("test/test.ml", 860, 31374, 31510), 0), 0)), (("test/test.ml", 860, 31374, 31502), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)); ((Tag5 ((("Pstr_open"), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31546), 0)), ((0, ((("open_description", (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0))), (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0), 0, 0)))), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31563), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0))), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0))), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_open", (("test/test.ml", 862, 31531, 31599), ("test/test.ml", 862, 31531, 31614), 0), 0)), (("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31615), 0), 0, 0); (((("open_description"), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0))), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0), 0, 0)]), (("test/test.ml", 862, 31531, 31597), ("test/test.ml", 862, 31531, 31634), 0), [(("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31633), 0)], 0))]), (("test/test.ml", 862, 31531, 31581), ("test/test.ml", 862, 31531, 31635), 0), [(("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31634), 0)], 0))]), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31636), 0), [(("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31635), 0)], 0), (Tag1 (Tag2 ("open", (("test/test.ml", 862, 31531, 31639), ("test/test.ml", 862, 31531, 31643), 0), 0)), (("test/test.ml", 862, 31531, 31638), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)); ((Tag5 ((("Pstr_class"), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31661), 0)), ((0, ((("class_declarations", (("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0))), (("test/test.ml", 863, 31645, 31662), ("test/test.ml", 863, 31645, 31683), 0), [(("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0)], 0)))), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31683), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0))), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0))), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class:", (("test/test.ml", 863, 31645, 31719), ("test/test.ml", 863, 31645, 31736), 0), 0)), (("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31737), 0), 0, 0); (((("class_declarations"), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0))), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0), 0, 0)]), (("test/test.ml", 863, 31645, 31717), ("test/test.ml", 863, 31645, 31758), 0), [(("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31757), 0)], 0))]), (("test/test.ml", 863, 31645, 31701), ("test/test.ml", 863, 31645, 31759), 0), [(("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31758), 0)], 0))]), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31760), 0), [(("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31759), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 863, 31645, 31763), ("test/test.ml", 863, 31645, 31768), 0), 0)), (("test/test.ml", 863, 31645, 31762), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)); ((Tag5 ((("Pstr_class_type"), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31791), 0)), ((0, ((("class_type_declarations", (("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0))), (("test/test.ml", 864, 31770, 31792), ("test/test.ml", 864, 31770, 31817), 0), [(("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0)], 0)))), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31817), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0))), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0))), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class_type:", (("test/test.ml", 864, 31770, 31853), ("test/test.ml", 864, 31770, 31875), 0), 0)), (("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31876), 0), 0, 0); (((("class_type_declarations"), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0))), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0), 0, 0)]), (("test/test.ml", 864, 31770, 31851), ("test/test.ml", 864, 31770, 31902), 0), [(("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31901), 0)], 0))]), (("test/test.ml", 864, 31770, 31835), ("test/test.ml", 864, 31770, 31903), 0), [(("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31902), 0)], 0))]), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31904), 0), [(("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31903), 0)], 0), (Tag1 (Tag2 ("class_Type", (("test/test.ml", 864, 31770, 31908), ("test/test.ml", 864, 31770, 31918), 0), 0)), (("test/test.ml", 864, 31770, 31907), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)); ((Tag5 ((("Pstr_include"), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31938), 0)), ((0, ((("include_declaration", (("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0))), (("test/test.ml", 865, 31920, 31940), ("test/test.ml", 865, 31920, 31961), 0), [(("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0)], 0)))), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31961), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0))), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0))), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_include:", (("test/test.ml", 865, 31920, 31996), ("test/test.ml", 865, 31920, 32015), 0), 0)), (("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32016), 0), 0, 0); (((("include_declaration"), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0))), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0), 0, 0)]), (("test/test.ml", 865, 31920, 31994), ("test/test.ml", 865, 31920, 32037), 0), [(("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32036), 0)], 0))]), (("test/test.ml", 865, 31920, 31978), ("test/test.ml", 865, 31920, 32038), 0), [(("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 32037), 0)], 0))]), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32039), 0), [(("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 32038), 0)], 0), (Tag1 (Tag2 ("include", (("test/test.ml", 865, 31920, 32042), ("test/test.ml", 865, 31920, 32049), 0), 0)), (("test/test.ml", 865, 31920, 32041), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)); ((Tag5 ((("Pstr_attribute"), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32071), 0)), ((0, ((("attribute", (("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0))), (("test/test.ml", 866, 32051, 32072), ("test/test.ml", 866, 32051, 32083), 0), [(("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0)], 0)))), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32083), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0))), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0))), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_attribute:", (("test/test.ml", 866, 32051, 32118), ("test/test.ml", 866, 32051, 32139), 0), 0)), (("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32140), 0), 0, 0); (((("attribute"), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0))), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0), 0, 0)]), (("test/test.ml", 866, 32051, 32116), ("test/test.ml", 866, 32051, 32152), 0), [(("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32151), 0)], 0))]), (("test/test.ml", 866, 32051, 32100), ("test/test.ml", 866, 32051, 32153), 0), [(("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32152), 0)], 0))]), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32154), 0), [(("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32153), 0)], 0), (Tag1 (Tag2 ("attribte", (("test/test.ml", 866, 32051, 32157), ("test/test.ml", 866, 32051, 32165), 0), 0)), (("test/test.ml", 866, 32051, 32156), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)); ((Tag5 ((("Pstr_extension"), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32187), 0)), ((0, (Tag4 ([((("extension", (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0))), (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0), 0, 0); ((("attributes", (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0))), (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32188), ("test/test.ml", 867, 32167, 32213), 0), [(("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32212), 0)], 0)))), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32213), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0))), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0))), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_extension:", (("test/test.ml", 867, 32167, 32248), ("test/test.ml", 867, 32167, 32269), 0), 0)), (("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32270), 0), 0, 0); (((("extension"), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0))), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0), 0, 0); (((("attributes"), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0))), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32246), ("test/test.ml", 867, 32167, 32295), 0), [(("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32294), 0)], 0))]), (("test/test.ml", 867, 32167, 32230), ("test/test.ml", 867, 32167, 32296), 0), [(("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32295), 0)], 0))]), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32297), 0), [(("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32296), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 867, 32167, 32301), ("test/test.ml", 867, 32167, 32310), 0), 0)), (("test/test.ml", 867, 32167, 32300), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 840, 30025, 30029), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 837, 29927, 29929), ("test/test.ml", 867, 32167, 32311), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0)), 0), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0), 0, 0)), (("test/test.ml", 836, 29867, 29917), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 867, 32167, 32311), 1), 0, 0), 0, (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0))]), (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0)); (Tag1 (0, [(((("process_types", (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0))), (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0))), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32365), 0), [(("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0)), 0), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0), 0, 0)), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32370), 1), 0, 0), 0, (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0))]), (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0)); (Tag1 (0, [(((("process_option", (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0))), (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0))), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32399), 0), [(("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0)), 0), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0), 0, 0)), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32402), 1), 0, 0), 0, (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0))]), (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0)); (Tag1 (0, [(((("process_core_type", (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0))), (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0))), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32434), 0), [(("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0)), 0), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0), 0, 0)), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32437), 1), 0, 0), 0, (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0))]), (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0)); (Tag1 (0, [(((("process_direction_flag", (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0))), (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0))), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32474), 0), [(("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0)), 0), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0), 0, 0)), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32477), 1), 0, 0), 0, (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0))]), (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0)); (Tag1 (0, [(((("process_arg_label", (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0))), (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aarg_label0", (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0))), (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0), 0, 0), (Tag3 ((("arg_label"), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0)), 0), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32532), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0)), 0), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32535), 1), 0, 0), 0, (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0))]), (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0)); (Tag1 (0, [(((("process_cases", (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0))), (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("acases0", (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0))), (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0), 0, 0), (Tag3 ((("cases"), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0)), 0), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32570), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0)), 0), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32573), 1), 0, 0), 0, (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0))]), (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0)); (Tag1 (0, [(((("process_class_structure", (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0))), (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aclass_structure0", (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0))), (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0), 0, 0), (Tag3 ((("class_structure"), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0)), 0), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32638), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0)), 0), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32641), 1), 0, 0), 0, (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0))]), (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0)); (Tag1 (0, [(((("process_constant", (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0))), (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aconstant0", (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0))), (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0), 0, 0), (Tag3 ((("constant"), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0)), 0), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32685), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0)), 0), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32688), 1), 0, 0), 0, (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0))]), (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0)); (Tag1 (0, [(((("process_expression", (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0))), (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aexpression0", (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0))), (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0)), 0), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32738), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0)), 0), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32741), 1), 0, 0), 0, (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0))]), (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0)); (Tag1 (0, [(((("process_extension", (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0))), (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension0", (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0))), (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0), 0, 0), (Tag3 ((("extension"), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0)), 0), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32788), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0)), 0), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32791), 1), 0, 0), 0, (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0))]), (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0)); (Tag1 (0, [(((("process_extension_constructor", (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0))), (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension_constructor0", (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0))), (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0), 0, 0), (Tag3 ((("extension_constructor"), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0)), 0), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32874), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0)), 0), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32877), 1), 0, 0), 0, (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0))]), (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0)); (Tag1 (0, [(((("process_label", (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0))), (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alabel0", (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0))), (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0), 0, 0), (Tag3 ((("label"), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0)), 0), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32912), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0)), 0), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32915), 1), 0, 0), 0, (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0))]), (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0)); (Tag1 (0, [(((("process_letop", (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0))), (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aletop0", (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0))), (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0), 0, 0), (Tag3 ((("letop"), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0)), 0), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32950), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0)), 0), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32953), 1), 0, 0), 0, (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0))]), (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0)); (Tag1 (0, [(((("process_list", (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0))), (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0))), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32980), 0), [(("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0)), 0), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0), 0, 0)), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32983), 1), 0, 0), 0, (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0))]), (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0)); (Tag1 (0, [(((("process_loc", (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0))), (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0), 0, 0), (Tag4 (0, 0, ((("aloc0", (("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0))), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33008), 0), [(("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0)), 0), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0), 0, 0)), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33011), 1), 0, 0), 0, (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0))]), (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0)); (Tag1 (0, [(((("process_longident_loc", (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0))), (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alongident_loc0", (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0))), (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0), 0, 0), (Tag3 ((("longident_loc"), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0)), 0), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33070), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0)), 0), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33073), 1), 0, 0), 0, (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0))]), (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0)); (Tag1 (0, [(((("process_module_expr", (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0))), (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("amodule_expr0", (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0))), (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0), 0, 0), (Tag3 ((("module_expr"), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0)), 0), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33126), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0)), 0), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33129), 1), 0, 0), 0, (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0))]), (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0)); (Tag1 (0, [(((("process_open_declaration", (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0))), (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aopen_declaration0", (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0))), (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0), 0, 0), (Tag3 ((("open_declaration"), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0)), 0), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33197), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0)), 0), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33200), 1), 0, 0), 0, (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0))]), (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0)); (Tag1 (0, [(((("process_pattern", (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0))), (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("apattern0", (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0))), (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0), 0, 0), (Tag3 ((("pattern"), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0)), 0), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33241), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0)), 0), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33244), 1), 0, 0), 0, (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0))]), (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0)); (Tag1 (0, [(((("process_rec_flag", (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0))), (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("arec_flag0", (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0))), (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0), 0, 0), (Tag3 ((("rec_flag"), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0)), 0), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33288), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0)), 0), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33291), 1), 0, 0), 0, (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0))]), (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0)); (Tag1 (0, [(((("foo", (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0))), (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0))), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 894, 33292, 33302), 0), [(("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0))), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0), 0, 0), [((Tag5 ((("Pexp_apply"), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33334), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0))), (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0), 0, 0); ((("listA1", (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0))), (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0), 0, 0)]), (("test/test.ml", 896, 33320, 33335), ("test/test.ml", 896, 33320, 33356), 0), [(("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33355), 0)], 0)))), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33356), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0))), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0))), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0))), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33409), 0), [(("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33408), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0))), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0))), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33410), ("test/test.ml", 896, 33320, 33431), 0), [(("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33430), 0)], 0)]), (("test/test.ml", 896, 33320, 33375), ("test/test.ml", 896, 33320, 33432), 0), [(("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33431), 0)], 0))]), (("test/test.ml", 896, 33320, 33360), ("test/test.ml", 896, 33320, 33433), 0), [(("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33432), 0)], 0)); ((Tag5 ((("Pexp_array"), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33446), 0)), ((0, ((("listA0", (("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0))), (("test/test.ml", 897, 33434, 33447), ("test/test.ml", 897, 33434, 33455), 0), [(("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0)], 0)))), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33455), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0))), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0))), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0))), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0), 0, 0))]), (("test/test.ml", 897, 33434, 33474), ("test/test.ml", 897, 33434, 33497), 0), [(("test/test.ml", 897, 33434, 33475), ("test/test.ml", 897, 33434, 33496), 0); (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33495), 0)], 0))]), (("test/test.ml", 897, 33434, 33459), ("test/test.ml", 897, 33434, 33498), 0), [(("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33497), 0)], 0)); ((Tag5 ((("Pexp_assert"), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33512), 0)), ((0, ((("expressionA0", (("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0))), (("test/test.ml", 898, 33499, 33513), ("test/test.ml", 898, 33499, 33527), 0), [(("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0)], 0)))), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33527), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0))), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0))), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0))), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0), 0, 0))]), (("test/test.ml", 898, 33499, 33546), ("test/test.ml", 898, 33499, 33581), 0), [(("test/test.ml", 898, 33499, 33547), ("test/test.ml", 898, 33499, 33580), 0); (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33579), 0)], 0))]), (("test/test.ml", 898, 33499, 33531), ("test/test.ml", 898, 33499, 33582), 0), [(("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33581), 0)], 0)); ((Tag5 ((("Pexp_coerce"), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33596), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0))), (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0), 0, 0); ((("optionA1", (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0))), (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0), 0, 0); ((("core_typeA2", (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0))), (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0), 0, 0)]), (("test/test.ml", 899, 33583, 33597), ("test/test.ml", 899, 33583, 33632), 0), [(("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33631), 0)], 0)))), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33632), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0))), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0))), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0))), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33685), 0), [(("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33684), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0))), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0))), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33686), ("test/test.ml", 899, 33583, 33711), 0), [(("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33710), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0))), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0), 0, 0), [(0, (((("core_typeA2"), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0))), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33712), ("test/test.ml", 899, 33583, 33743), 0), [(("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33742), 0)], 0)]), (("test/test.ml", 899, 33583, 33651), ("test/test.ml", 899, 33583, 33744), 0), [(("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33743), 0)], 0))]), (("test/test.ml", 899, 33583, 33636), ("test/test.ml", 899, 33583, 33745), 0), [(("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33744), 0)], 0)); ((Tag5 ((("Pexp_constant"), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33761), 0)), ((0, ((("constantA0", (("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0))), (("test/test.ml", 900, 33746, 33762), ("test/test.ml", 900, 33746, 33774), 0), [(("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0)], 0)))), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33774), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0))), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0), 0, 0), [(0, (Tag5 ((((("process_constant"), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0))), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0), 0, 0), [(0, (((("constantA0"), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0))), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0), 0, 0))]), (("test/test.ml", 900, 33746, 33793), ("test/test.ml", 900, 33746, 33824), 0), [(("test/test.ml", 900, 33746, 33794), ("test/test.ml", 900, 33746, 33823), 0); (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33822), 0)], 0))]), (("test/test.ml", 900, 33746, 33778), ("test/test.ml", 900, 33746, 33825), 0), [(("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33824), 0)], 0)); ((Tag5 ((("Pexp_constraint"), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33843), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0))), (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0), 0, 0); ((("core_typeA1", (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0))), (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0), 0, 0)]), (("test/test.ml", 901, 33826, 33844), ("test/test.ml", 901, 33826, 33870), 0), [(("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33869), 0)], 0)))), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33870), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0))), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0))), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0))), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33923), 0), [(("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33922), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0))), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0), 0, 0), [(0, (((("core_typeA1"), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0))), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33924), ("test/test.ml", 901, 33826, 33955), 0), [(("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33954), 0)], 0)]), (("test/test.ml", 901, 33826, 33889), ("test/test.ml", 901, 33826, 33956), 0), [(("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33955), 0)], 0))]), (("test/test.ml", 901, 33826, 33874), ("test/test.ml", 901, 33826, 33957), 0), [(("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33956), 0)], 0)); ((Tag5 ((("Pexp_construct"), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 33974), 0)), ((0, (Tag4 ([((("longident_locA0", (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0))), (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0), 0, 0); ((("optionA1", (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0))), (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0), 0, 0)]), (("test/test.ml", 902, 33958, 33975), ("test/test.ml", 902, 33958, 34001), 0), [(("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 34000), 0)], 0)))), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 34001), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0))), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_longident_loc"), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0))), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0))), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34060), 0), [(("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34059), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0))), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0))), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34061), ("test/test.ml", 902, 33958, 34086), 0), [(("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34085), 0)], 0)]), (("test/test.ml", 902, 33958, 34020), ("test/test.ml", 902, 33958, 34087), 0), [(("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34086), 0)], 0))]), (("test/test.ml", 902, 33958, 34005), ("test/test.ml", 902, 33958, 34088), 0), [(("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34087), 0)], 0)); ((Tag5 ((("Pexp_extension"), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34105), 0)), ((0, ((("extensionA0", (("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0))), (("test/test.ml", 903, 34089, 34106), ("test/test.ml", 903, 34089, 34119), 0), [(("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0)], 0)))), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34119), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0))), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0), 0, 0), [(0, (Tag5 ((((("process_extension"), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0))), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0), 0, 0), [(0, (((("extensionA0"), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0))), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0), 0, 0))]), (("test/test.ml", 903, 34089, 34138), ("test/test.ml", 903, 34089, 34171), 0), [(("test/test.ml", 903, 34089, 34139), ("test/test.ml", 903, 34089, 34170), 0); (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34169), 0)], 0))]), (("test/test.ml", 903, 34089, 34123), ("test/test.ml", 903, 34089, 34172), 0), [(("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34171), 0)], 0)); ((Tag5 ((("Pexp_field"), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34185), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0))), (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0))), (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0), 0, 0)]), (("test/test.ml", 904, 34173, 34186), ("test/test.ml", 904, 34173, 34216), 0), [(("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34215), 0)], 0)))), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34216), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0))), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0))), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0))), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34269), 0), [(("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34268), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0))), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0))), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34270), ("test/test.ml", 904, 34173, 34309), 0), [(("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34308), 0)], 0)]), (("test/test.ml", 904, 34173, 34235), ("test/test.ml", 904, 34173, 34310), 0), [(("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34309), 0)], 0))]), (("test/test.ml", 904, 34173, 34220), ("test/test.ml", 904, 34173, 34311), 0), [(("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34310), 0)], 0)); ((Tag5 ((("Pexp_for"), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34322), 0)), ((0, (Tag4 ([((("patternA0", (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0))), (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0), 0, 0); ((("expressionA1", (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0))), (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0), 0, 0); ((("expressionA2", (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0))), (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0), 0, 0); ((("direction_flagA3", (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0))), (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0), 0, 0); ((("expressionA4", (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0))), (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0), 0, 0)]), (("test/test.ml", 905, 34312, 34323), ("test/test.ml", 905, 34312, 34390), 0), [(("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34389), 0)], 0)))), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34390), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0))), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_pattern"), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0))), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0), 0, 0), [(0, (((("patternA0"), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0))), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34437), 0), [(("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34436), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0))), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0))), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34438), ("test/test.ml", 905, 34312, 34471), 0), [(("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34470), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0))), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0))), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34472), ("test/test.ml", 905, 34312, 34505), 0), [(("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34504), 0)], 0); (Tag5 ((((("process_direction_flag"), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0))), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0), 0, 0), [(0, (((("direction_flagA3"), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0))), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34506), ("test/test.ml", 905, 34312, 34547), 0), [(("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34546), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0))), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0), 0, 0), [(0, (((("expressionA4"), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0))), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34548), ("test/test.ml", 905, 34312, 34581), 0), [(("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34580), 0)], 0)]), (("test/test.ml", 905, 34312, 34409), ("test/test.ml", 905, 34312, 34582), 0), [(("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34581), 0)], 0))]), (("test/test.ml", 905, 34312, 34394), ("test/test.ml", 905, 34312, 34583), 0), [(("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34582), 0)], 0)); ((Tag5 ((("Pexp_fun"), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34594), 0)), ((0, (Tag4 ([((("arg_labelA0", (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0))), (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0), 0, 0); ((("optionA1", (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0))), (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0), 0, 0); ((("patternA2", (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0))), (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0), 0, 0); ((("expressionA3", (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0))), (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0), 0, 0)]), (("test/test.ml", 906, 34584, 34595), ("test/test.ml", 906, 34584, 34640), 0), [(("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34639), 0)], 0)))), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34640), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0))), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_arg_label"), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0))), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0), 0, 0), [(0, (((("arg_labelA0"), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0))), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34691), 0), [(("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34690), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0))), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0))), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34692), ("test/test.ml", 906, 34584, 34717), 0), [(("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34716), 0)], 0); (Tag5 ((((("process_pattern"), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0))), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0), 0, 0), [(0, (((("patternA2"), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0))), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34718), ("test/test.ml", 906, 34584, 34745), 0), [(("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34744), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0))), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0), 0, 0), [(0, (((("expressionA3"), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0))), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34746), ("test/test.ml", 906, 34584, 34779), 0), [(("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34778), 0)], 0)]), (("test/test.ml", 906, 34584, 34659), ("test/test.ml", 906, 34584, 34780), 0), [(("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34779), 0)], 0))]), (("test/test.ml", 906, 34584, 34644), ("test/test.ml", 906, 34584, 34781), 0), [(("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34780), 0)], 0)); ((Tag5 ((("Pexp_function"), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34797), 0)), ((0, ((("casesA0", (("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0))), (("test/test.ml", 907, 34782, 34798), ("test/test.ml", 907, 34782, 34807), 0), [(("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0)], 0)))), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34807), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0))), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0), 0, 0), [(0, (Tag5 ((((("process_cases"), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0))), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0), 0, 0), [(0, (((("casesA0"), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0))), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0), 0, 0))]), (("test/test.ml", 907, 34782, 34826), ("test/test.ml", 907, 34782, 34851), 0), [(("test/test.ml", 907, 34782, 34827), ("test/test.ml", 907, 34782, 34850), 0); (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34849), 0)], 0))]), (("test/test.ml", 907, 34782, 34811), ("test/test.ml", 907, 34782, 34852), 0), [(("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34851), 0)], 0)); ((Tag5 ((("Pexp_ident"), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34865), 0)), ((0, ((("longident_locA0", (("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0))), (("test/test.ml", 908, 34853, 34866), ("test/test.ml", 908, 34853, 34883), 0), [(("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0)], 0)))), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34883), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0))), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0))), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0))), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0), 0, 0))]), (("test/test.ml", 908, 34853, 34902), ("test/test.ml", 908, 34853, 34943), 0), [(("test/test.ml", 908, 34853, 34903), ("test/test.ml", 908, 34853, 34942), 0); (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34941), 0)], 0))]), (("test/test.ml", 908, 34853, 34887), ("test/test.ml", 908, 34853, 34944), 0), [(("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34943), 0)], 0)); ((Tag5 ((("Pexp_ifthenelse"), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34962), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0))), (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0), 0, 0); ((("expressionA1", (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0))), (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0), 0, 0); ((("optionA2", (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0))), (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0), 0, 0)]), (("test/test.ml", 909, 34945, 34963), ("test/test.ml", 909, 34945, 34999), 0), [(("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34998), 0)], 0)))), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34999), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0))), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0))), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0))), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35052), 0), [(("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35051), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0))), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0))), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35053), ("test/test.ml", 909, 34945, 35086), 0), [(("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35085), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0))), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0), 0, 0), [(0, (((("optionA2"), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0))), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35087), ("test/test.ml", 909, 34945, 35112), 0), [(("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35111), 0)], 0)]), (("test/test.ml", 909, 34945, 35018), ("test/test.ml", 909, 34945, 35113), 0), [(("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35112), 0)], 0))]), (("test/test.ml", 909, 34945, 35003), ("test/test.ml", 909, 34945, 35114), 0), [(("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35113), 0)], 0)); ((Tag5 ((("Pexp_lazy"), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35126), 0)), ((0, ((("expressionA0", (("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0))), (("test/test.ml", 910, 35115, 35127), ("test/test.ml", 910, 35115, 35141), 0), [(("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0)], 0)))), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35141), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0))), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0))), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0))), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0), 0, 0))]), (("test/test.ml", 910, 35115, 35160), ("test/test.ml", 910, 35115, 35195), 0), [(("test/test.ml", 910, 35115, 35161), ("test/test.ml", 910, 35115, 35194), 0); (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35193), 0)], 0))]), (("test/test.ml", 910, 35115, 35145), ("test/test.ml", 910, 35115, 35196), 0), [(("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35195), 0)], 0)); ((Tag5 ((("Pexp_letexception"), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35216), 0)), ((0, (Tag4 ([((("extension_constructorA0", (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0))), (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0), 0, 0); ((("expressionA1", (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0))), (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0), 0, 0)]), (("test/test.ml", 911, 35197, 35217), ("test/test.ml", 911, 35197, 35255), 0), [(("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35254), 0)], 0)))), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35255), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0))), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_extension_constructor"), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0))), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0), 0, 0), [(0, (((("extension_constructorA0"), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0))), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35330), 0), [(("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35329), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0))), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0))), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35331), ("test/test.ml", 911, 35197, 35364), 0), [(("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35363), 0)], 0)]), (("test/test.ml", 911, 35197, 35274), ("test/test.ml", 911, 35197, 35365), 0), [(("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35364), 0)], 0))]), (("test/test.ml", 911, 35197, 35259), ("test/test.ml", 911, 35197, 35366), 0), [(("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35365), 0)], 0)); ((Tag5 ((("Pexp_letmodule"), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35383), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0))), (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0), 0, 0); ((("module_exprA1", (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0))), (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0), 0, 0); ((("expressionA2", (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0))), (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0), 0, 0)]), (("test/test.ml", 912, 35367, 35384), ("test/test.ml", 912, 35367, 35418), 0), [(("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35417), 0)], 0)))), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35418), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0))), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0))), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0))), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35457), 0), [(("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35456), 0)], 0); (Tag5 ((((("process_module_expr"), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0))), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0), 0, 0), [(0, (((("module_exprA1"), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0))), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35458), ("test/test.ml", 912, 35367, 35493), 0), [(("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35492), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0))), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0))), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35494), ("test/test.ml", 912, 35367, 35527), 0), [(("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35526), 0)], 0)]), (("test/test.ml", 912, 35367, 35437), ("test/test.ml", 912, 35367, 35528), 0), [(("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35527), 0)], 0))]), (("test/test.ml", 912, 35367, 35422), ("test/test.ml", 912, 35367, 35529), 0), [(("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35528), 0)], 0)); ((Tag5 ((("Pexp_letop"), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35542), 0)), ((0, ((("letopA0", (("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0))), (("test/test.ml", 913, 35530, 35543), ("test/test.ml", 913, 35530, 35552), 0), [(("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0)], 0)))), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35552), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0))), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0), 0, 0), [(0, (Tag5 ((((("process_letop"), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0))), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0), 0, 0), [(0, (((("letopA0"), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0))), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0), 0, 0))]), (("test/test.ml", 913, 35530, 35571), ("test/test.ml", 913, 35530, 35596), 0), [(("test/test.ml", 913, 35530, 35572), ("test/test.ml", 913, 35530, 35595), 0); (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35594), 0)], 0))]), (("test/test.ml", 913, 35530, 35556), ("test/test.ml", 913, 35530, 35597), 0), [(("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35596), 0)], 0)); ((Tag5 ((("Pexp_let"), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35608), 0)), ((0, (Tag4 ([((("rec_flagA0", (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0))), (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0), 0, 0); ((("listA1", (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0))), (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0), 0, 0); ((("expressionA2", (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0))), (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0), 0, 0)]), (("test/test.ml", 914, 35598, 35609), ("test/test.ml", 914, 35598, 35641), 0), [(("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35640), 0)], 0)))), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35641), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0))), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_rec_flag"), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0))), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0), 0, 0), [(0, (((("rec_flagA0"), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0))), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35690), 0), [(("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35689), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0))), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0))), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35691), ("test/test.ml", 914, 35598, 35712), 0), [(("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35711), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0))), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0))), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35713), ("test/test.ml", 914, 35598, 35746), 0), [(("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35745), 0)], 0)]), (("test/test.ml", 914, 35598, 35660), ("test/test.ml", 914, 35598, 35747), 0), [(("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35746), 0)], 0))]), (("test/test.ml", 914, 35598, 35645), ("test/test.ml", 914, 35598, 35748), 0), [(("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35747), 0)], 0)); ((Tag5 ((("Pexp_match"), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35761), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0))), (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0), 0, 0); ((("casesA1", (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0))), (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0), 0, 0)]), (("test/test.ml", 915, 35749, 35762), ("test/test.ml", 915, 35749, 35784), 0), [(("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35783), 0)], 0)))), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35784), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0))), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0))), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0))), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35837), 0), [(("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35836), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0))), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0))), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35838), ("test/test.ml", 915, 35749, 35861), 0), [(("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35860), 0)], 0)]), (("test/test.ml", 915, 35749, 35803), ("test/test.ml", 915, 35749, 35862), 0), [(("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35861), 0)], 0))]), (("test/test.ml", 915, 35749, 35788), ("test/test.ml", 915, 35749, 35863), 0), [(("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35862), 0)], 0)); ((Tag5 ((("Pexp_new"), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35874), 0)), ((0, ((("longident_locA0", (("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0))), (("test/test.ml", 916, 35864, 35875), ("test/test.ml", 916, 35864, 35892), 0), [(("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0)], 0)))), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35892), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0))), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0))), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0))), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0), 0, 0))]), (("test/test.ml", 916, 35864, 35911), ("test/test.ml", 916, 35864, 35952), 0), [(("test/test.ml", 916, 35864, 35912), ("test/test.ml", 916, 35864, 35951), 0); (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35950), 0)], 0))]), (("test/test.ml", 916, 35864, 35896), ("test/test.ml", 916, 35864, 35953), 0), [(("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35952), 0)], 0)); ((Tag5 ((("Pexp_newtype"), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35968), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0))), (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0), 0, 0); ((("expressionA1", (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0))), (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0), 0, 0)]), (("test/test.ml", 917, 35954, 35969), ("test/test.ml", 917, 35954, 35989), 0), [(("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35988), 0)], 0)))), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35989), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0))), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0))), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0))), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36028), 0), [(("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36027), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0))), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0))), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36029), ("test/test.ml", 917, 35954, 36062), 0), [(("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36061), 0)], 0)]), (("test/test.ml", 917, 35954, 36008), ("test/test.ml", 917, 35954, 36063), 0), [(("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36062), 0)], 0))]), (("test/test.ml", 917, 35954, 35993), ("test/test.ml", 917, 35954, 36064), 0), [(("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36063), 0)], 0)); ((Tag5 ((("Pexp_object"), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36078), 0)), ((0, ((("class_structureA0", (("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0))), (("test/test.ml", 918, 36065, 36079), ("test/test.ml", 918, 36065, 36098), 0), [(("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0)], 0)))), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36098), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0))), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0), 0, 0), [(0, (Tag5 ((((("process_class_structure"), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0))), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0), 0, 0), [(0, (((("class_structureA0"), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0))), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0), 0, 0))]), (("test/test.ml", 918, 36065, 36117), ("test/test.ml", 918, 36065, 36162), 0), [(("test/test.ml", 918, 36065, 36118), ("test/test.ml", 918, 36065, 36161), 0); (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36160), 0)], 0))]), (("test/test.ml", 918, 36065, 36102), ("test/test.ml", 918, 36065, 36163), 0), [(("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36162), 0)], 0)); ((Tag5 ((("Pexp_open"), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36175), 0)), ((0, (Tag4 ([((("open_declarationA0", (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0))), (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0), 0, 0); ((("expressionA1", (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0))), (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0), 0, 0)]), (("test/test.ml", 919, 36164, 36176), ("test/test.ml", 919, 36164, 36209), 0), [(("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36208), 0)], 0)))), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36209), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0))), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_open_declaration"), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0))), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0), 0, 0), [(0, (((("open_declarationA0"), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0))), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36274), 0), [(("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36273), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0))), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0))), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36275), ("test/test.ml", 919, 36164, 36308), 0), [(("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36307), 0)], 0)]), (("test/test.ml", 919, 36164, 36228), ("test/test.ml", 919, 36164, 36309), 0), [(("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36308), 0)], 0))]), (("test/test.ml", 919, 36164, 36213), ("test/test.ml", 919, 36164, 36310), 0), [(("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36309), 0)], 0)); ((Tag5 ((("Pexp_override"), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36326), 0)), ((0, ((("listA0", (("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0))), (("test/test.ml", 920, 36311, 36327), ("test/test.ml", 920, 36311, 36335), 0), [(("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0)], 0)))), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36335), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0))), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0))), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0))), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0), 0, 0))]), (("test/test.ml", 920, 36311, 36354), ("test/test.ml", 920, 36311, 36377), 0), [(("test/test.ml", 920, 36311, 36355), ("test/test.ml", 920, 36311, 36376), 0); (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36375), 0)], 0))]), (("test/test.ml", 920, 36311, 36339), ("test/test.ml", 920, 36311, 36378), 0), [(("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36377), 0)], 0)); ((Tag5 ((("Pexp_pack"), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36390), 0)), ((0, ((("module_exprA0", (("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0))), (("test/test.ml", 921, 36379, 36391), ("test/test.ml", 921, 36379, 36406), 0), [(("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0)], 0)))), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36406), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0))), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0), 0, 0), [(0, (Tag5 ((((("process_module_expr"), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0))), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0), 0, 0), [(0, (((("module_exprA0"), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0))), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0), 0, 0))]), (("test/test.ml", 921, 36379, 36425), ("test/test.ml", 921, 36379, 36462), 0), [(("test/test.ml", 921, 36379, 36426), ("test/test.ml", 921, 36379, 36461), 0); (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36460), 0)], 0))]), (("test/test.ml", 921, 36379, 36410), ("test/test.ml", 921, 36379, 36463), 0), [(("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36462), 0)], 0)); ((Tag5 ((("Pexp_poly"), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36475), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0))), (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0), 0, 0); ((("optionA1", (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0))), (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0), 0, 0)]), (("test/test.ml", 922, 36464, 36476), ("test/test.ml", 922, 36464, 36499), 0), [(("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36498), 0)], 0)))), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36499), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0))), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0))), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0))), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36552), 0), [(("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36551), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0))), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0))), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36553), ("test/test.ml", 922, 36464, 36578), 0), [(("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36577), 0)], 0)]), (("test/test.ml", 922, 36464, 36518), ("test/test.ml", 922, 36464, 36579), 0), [(("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36578), 0)], 0))]), (("test/test.ml", 922, 36464, 36503), ("test/test.ml", 922, 36464, 36580), 0), [(("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36579), 0)], 0)); ((Tag5 ((("Pexp_record"), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36594), 0)), ((0, (Tag4 ([((("listA0", (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0))), (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0), 0, 0); ((("optionA1", (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0))), (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0), 0, 0)]), (("test/test.ml", 923, 36581, 36595), ("test/test.ml", 923, 36581, 36612), 0), [(("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36611), 0)], 0)))), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36612), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0))), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_list"), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0))), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0))), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36653), 0), [(("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36652), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0))), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0))), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36654), ("test/test.ml", 923, 36581, 36679), 0), [(("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36678), 0)], 0)]), (("test/test.ml", 923, 36581, 36631), ("test/test.ml", 923, 36581, 36680), 0), [(("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36679), 0)], 0))]), (("test/test.ml", 923, 36581, 36616), ("test/test.ml", 923, 36581, 36681), 0), [(("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36680), 0)], 0)); ((Tag5 ((("Pexp_send"), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36693), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0))), (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0), 0, 0); ((("locA1", (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0))), (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0), 0, 0)]), (("test/test.ml", 924, 36682, 36694), ("test/test.ml", 924, 36682, 36714), 0), [(("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36713), 0)], 0)))), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36714), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0))), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0))), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0))), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36767), 0), [(("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36766), 0)], 0); (Tag5 ((((("process_loc"), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0))), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0), 0, 0), [(0, (((("locA1"), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0))), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36768), ("test/test.ml", 924, 36682, 36787), 0), [(("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36786), 0)], 0)]), (("test/test.ml", 924, 36682, 36733), ("test/test.ml", 924, 36682, 36788), 0), [(("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36787), 0)], 0))]), (("test/test.ml", 924, 36682, 36718), ("test/test.ml", 924, 36682, 36789), 0), [(("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36788), 0)], 0)); ((Tag5 ((("Pexp_sequence"), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36805), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0))), (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0), 0, 0); ((("expressionA1", (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0))), (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0), 0, 0)]), (("test/test.ml", 925, 36790, 36806), ("test/test.ml", 925, 36790, 36833), 0), [(("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36832), 0)], 0)))), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36833), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0))), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0))), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0))), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36886), 0), [(("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36885), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0))), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0))), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36887), ("test/test.ml", 925, 36790, 36920), 0), [(("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36919), 0)], 0)]), (("test/test.ml", 925, 36790, 36852), ("test/test.ml", 925, 36790, 36921), 0), [(("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36920), 0)], 0))]), (("test/test.ml", 925, 36790, 36837), ("test/test.ml", 925, 36790, 36922), 0), [(("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36921), 0)], 0)); ((Tag5 ((("Pexp_setfield"), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36938), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0))), (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0))), (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0), 0, 0); ((("expressionA2", (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0))), (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0), 0, 0)]), (("test/test.ml", 926, 36923, 36939), ("test/test.ml", 926, 36923, 36982), 0), [(("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36981), 0)], 0)))), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36982), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0))), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0))), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0))), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37035), 0), [(("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37034), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0))), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0))), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37036), ("test/test.ml", 926, 36923, 37075), 0), [(("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37074), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0))), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0))), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37076), ("test/test.ml", 926, 36923, 37109), 0), [(("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37108), 0)], 0)]), (("test/test.ml", 926, 36923, 37001), ("test/test.ml", 926, 36923, 37110), 0), [(("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37109), 0)], 0))]), (("test/test.ml", 926, 36923, 36986), ("test/test.ml", 926, 36923, 37111), 0), [(("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37110), 0)], 0)); ((Tag5 ((("Pexp_setinstvar"), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37129), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0))), (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0), 0, 0); ((("expressionA1", (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0))), (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0), 0, 0)]), (("test/test.ml", 927, 37112, 37130), ("test/test.ml", 927, 37112, 37150), 0), [(("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37149), 0)], 0)))), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37150), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0))), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0))), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0))), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37189), 0), [(("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37188), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0))), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0))), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37190), ("test/test.ml", 927, 37112, 37223), 0), [(("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37222), 0)], 0)]), (("test/test.ml", 927, 37112, 37169), ("test/test.ml", 927, 37112, 37224), 0), [(("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37223), 0)], 0))]), (("test/test.ml", 927, 37112, 37154), ("test/test.ml", 927, 37112, 37225), 0), [(("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37224), 0)], 0)); ((Tag5 ((("Pexp_try"), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37236), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0))), (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0), 0, 0); ((("casesA1", (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0))), (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0), 0, 0)]), (("test/test.ml", 928, 37226, 37237), ("test/test.ml", 928, 37226, 37259), 0), [(("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37258), 0)], 0)))), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37259), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0))), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0))), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0))), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37312), 0), [(("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37311), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0))), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0))), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37313), ("test/test.ml", 928, 37226, 37336), 0), [(("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37335), 0)], 0)]), (("test/test.ml", 928, 37226, 37278), ("test/test.ml", 928, 37226, 37337), 0), [(("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37336), 0)], 0))]), (("test/test.ml", 928, 37226, 37263), ("test/test.ml", 928, 37226, 37338), 0), [(("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37337), 0)], 0)); ((Tag5 ((("Pexp_tuple"), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37351), 0)), ((0, ((("listA0", (("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0))), (("test/test.ml", 929, 37339, 37352), ("test/test.ml", 929, 37339, 37360), 0), [(("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0)], 0)))), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37360), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0))), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0))), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0))), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0), 0, 0))]), (("test/test.ml", 929, 37339, 37379), ("test/test.ml", 929, 37339, 37402), 0), [(("test/test.ml", 929, 37339, 37380), ("test/test.ml", 929, 37339, 37401), 0); (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37400), 0)], 0))]), (("test/test.ml", 929, 37339, 37364), ("test/test.ml", 929, 37339, 37403), 0), [(("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37402), 0)], 0)); ((Tag5 ((("Pexp_unreachable"), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0)), 0), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0))), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0), 0, 0), [(0, (Tag9 ((("()"), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0)), 0), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0), 0, 0))]), (("test/test.ml", 930, 37404, 37426), ("test/test.ml", 930, 37404, 37444), 0), [(("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37443), 0)], 0)); ((Tag5 ((("Pexp_variant"), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37459), 0)), ((0, (Tag4 ([((("labelA0", (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0))), (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0), 0, 0); ((("optionA1", (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0))), (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0), 0, 0)]), (("test/test.ml", 931, 37445, 37460), ("test/test.ml", 931, 37445, 37478), 0), [(("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37477), 0)], 0)))), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37478), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0))), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_label"), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0))), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0), 0, 0), [(0, (((("labelA0"), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0))), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37521), 0), [(("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37520), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0))), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0))), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37522), ("test/test.ml", 931, 37445, 37547), 0), [(("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37546), 0)], 0)]), (("test/test.ml", 931, 37445, 37497), ("test/test.ml", 931, 37445, 37548), 0), [(("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37547), 0)], 0))]), (("test/test.ml", 931, 37445, 37482), ("test/test.ml", 931, 37445, 37549), 0), [(("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37548), 0)], 0)); ((Tag5 ((("Pexp_while"), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37562), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0))), (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0), 0, 0); ((("expressionA1", (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0))), (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0), 0, 0)]), (("test/test.ml", 932, 37550, 37563), ("test/test.ml", 932, 37550, 37590), 0), [(("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37589), 0)], 0)))), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37590), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0))), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0))), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0))), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37643), 0), [(("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37642), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0))), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0))), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37644), ("test/test.ml", 932, 37550, 37677), 0), [(("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37676), 0)], 0)]), (("test/test.ml", 932, 37550, 37609), ("test/test.ml", 932, 37550, 37678), 0), [(("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37677), 0)], 0))]), (("test/test.ml", 932, 37550, 37594), ("test/test.ml", 932, 37550, 37679), 0), [(("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37678), 0)], 0))]), (("test/test.ml", 895, 33305, 33307), ("test/test.ml", 932, 37550, 37679), 0), 0, 0)), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 932, 37550, 37679), 1), 0, 0), 0, (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0))]), (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0)); (Tag1 (0, [(((("foo", (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0))), (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0), 0, 0), (Tag1 (["1"]), (("test/test.ml", 935, 37726, 37736), ("test/test.ml", 935, 37726, 37737), 0), 0, 0), 0, (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0))]), (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0)); (Tag1 (0, [(((("printone", (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0))), (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0))), (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0)), 0), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 937, 37741, 37774), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0))), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 1)), ((("pstr_desc", (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0))), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0), 0, 0))], 1), (("test/test.ml", 940, 37803, 37806), ("test/test.ml", 943, 37853, 37856), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0))), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0))), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0), 0, 0), [(0, (Tag1 (Tag2 ("TOP structure_item_desc", (("test/test.ml", 944, 37860, 37881), ("test/test.ml", 944, 37860, 37904), 0), 0)), (("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37905), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0))), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0), 0, 0), [(0, (Tag1 (Tag2 ("|", (("test/test.ml", 944, 37860, 37913), ("test/test.ml", 944, 37860, 37914), 0), 0)), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37915), 0), 0, 0)); (0, (Tag5 ((((("printdesc"), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0))), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0), 0, 0), [(0, (Tag8 ([(((("pstr_desc"), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0))), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0), 0, 0); (Tag9 ((("[]"), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0)), 0), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0), 0, 0)]), (("test/test.ml", 944, 37860, 37929), ("test/test.ml", 944, 37860, 37943), 0), [(("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37942), 0)], 0))]), (("test/test.ml", 944, 37860, 37918), ("test/test.ml", 944, 37860, 37944), 0), [(("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37943), 0)], 0))]), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37944), 0), 0, 0))]), (("test/test.ml", 944, 37860, 37879), ("test/test.ml", 944, 37860, 37945), 0), [(("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37944), 0)], 0))]), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 944, 37860, 37946), 0), [(("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37945), 0)], 0), (Tag1 (Tag2 ("fixme", (("test/test.ml", 945, 37948, 37953), ("test/test.ml", 945, 37948, 37958), 0), 0)), (("test/test.ml", 945, 37948, 37952), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 945, 37948, 37959), 0), 0, 0))]), (("test/test.ml", 939, 37788, 37790), ("test/test.ml", 945, 37948, 37959), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0)), 0), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0), 0, 0)), (("test/test.ml", 937, 37741, 37775), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 945, 37948, 37959), 1), 0, 0), 0, (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0))]), (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0)); (Tag1 (0, [(((("printone2", (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0))), (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0))), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0))), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0))), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:SECOND::", (("test/test.ml", 953, 38098, 38133), ("test/test.ml", 953, 38098, 38147), 0), 0)), (("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38148), 0), 0, 0); (((("x"), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0))), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0), 0, 0)]), (("test/test.ml", 953, 38098, 38131), ("test/test.ml", 953, 38098, 38151), 0), [(("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38150), 0)], 0))]), (("test/test.ml", 953, 38098, 38115), ("test/test.ml", 953, 38098, 38152), 0), [(("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38151), 0)], 0))]), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 953, 38098, 38153), 0), [(("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38152), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0))), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0))), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0), 0, 0))]), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 954, 38155, 38167), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0)), 0), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0), 0, 0)), (("test/test.ml", 952, 38072, 38088), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 954, 38155, 38167), 1), 0, 0), 0, (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0))]), (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0)); (Tag1 (0, [(((("proc1", (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0))), (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0))), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0))), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0))), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0), 0, 0))]), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38207), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0)), 0), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0), 0, 0)), (("test/test.ml", 956, 38171, 38183), ("test/test.ml", 957, 38194, 38207), 0), 0, 0)), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 957, 38194, 38207), 1), 0, 0), 0, (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0))]), (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0)); (Tag1 (0, [(((("debug", (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0))), (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0), 0, 0), (Tag4 (0, 0, ((("proc", (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0))), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0), 0, 0), (Tag4 (0, 0, ((("lst", (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0))), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("result", (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0))), (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0), 0, 0), (Tag5 ((((Tag1 (("List"), "map"), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0))), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0), 0, 0), [(0, (((("proc"), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0))), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0), 0, 0)); (0, (((("lst"), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0))), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0), 0, 0))]), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38273), 0), 0, 0), 0, (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 961, 38241, 38273), 0))], (Tag16 ((Tag5 ((((Tag1 (("List"), "iter"), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0))), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0), 0, 0), [(0, (Tag4 (0, 0, ((("i", (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0))), (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0), 0, 0), (Tag5 ((((("print_endline"), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0))), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0))), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:TOPLEVEL:", (("test/test.ml", 962, 38277, 38331), ("test/test.ml", 962, 38277, 38346), 0), 0)), (("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38347), 0), 0, 0); (((("i"), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0))), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0), 0, 0)]), (("test/test.ml", 962, 38277, 38329), ("test/test.ml", 962, 38277, 38351), 0), [(("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38350), 0)], 0))]), (("test/test.ml", 962, 38277, 38313), ("test/test.ml", 962, 38277, 38352), 0), [(("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38351), 0)], 0))]), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38352), 0), 0, 0)), (("test/test.ml", 962, 38277, 38289), ("test/test.ml", 962, 38277, 38353), 0), [(("test/test.ml", 962, 38277, 38290), ("test/test.ml", 962, 38277, 38352), 0)], 0)); (0, (((("result"), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0))), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0), 0, 0))]), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38360), 0), 0, 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 963, 38362, 38367), ("test/test.ml", 963, 38362, 38371), 0), 0)), (("test/test.ml", 963, 38362, 38366), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 963, 38362, 38372), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0)), 0), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0), 0, 0)), (("test/test.ml", 960, 38211, 38230), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 963, 38362, 38372), 1), 0, 0)), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 963, 38362, 38372), 1), 0, 0), 0, (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0))]), (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0)); (Tag1 (0, [(((("transform", (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0))), (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0))), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0))), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0))), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG3:", (("test/test.ml", 966, 38445, 38480), ("test/test.ml", 966, 38445, 38487), 0), 0)), (("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38488), 0), 0, 0); (((("x"), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0))), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0), 0, 0)]), (("test/test.ml", 966, 38445, 38478), ("test/test.ml", 966, 38445, 38491), 0), [(("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38490), 0)], 0))]), (("test/test.ml", 966, 38445, 38462), ("test/test.ml", 966, 38445, 38492), 0), [(("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38491), 0)], 0))]), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 966, 38445, 38493), 0), [(("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38492), 0)], 0), (Tag2 (0, [(((("foo", (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0))), (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0), 0, 0), (Tag5 ((((("debug"), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0))), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0), 0, 0), [(0, (((("proc1"), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0))), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0), 0, 0)); (0, (((("x"), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0))), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0), 0, 0))]), (("test/test.ml", 967, 38495, 38507), ("test/test.ml", 967, 38495, 38522), 0), [(("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38521), 0)], 0), 0, (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 967, 38495, 38522), 0))], (((("x"), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0))), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 968, 38526, 38529), 1), 0, 0), 0, (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))]), (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))]
("DEBUG:SECOND::", (Tag9 (((((("Alcotest"), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0))), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0), 0), 1, (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0), 0)), (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0)))
("DEBUG:structure_item_desc:", Tag9 (((((("Alcotest"), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0))), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0), 0), 1, (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0), 0)))
("DEBUG:Pstr_open", ((((("Alcotest"), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0))), (("test/test.ml", 1, 0, 5), ("test/test.ml", 1, 0, 13), 0), 0), 1, (("test/test.ml", 1, 0, 0), ("test/test.ml", 1, 0, 13), 0), 0))
TOP structure_item_desc|open
("DEBUG:SECOND::", (Tag9 (((((("Ppxlib"), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0))), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0), 0), 1, (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0), 0)), (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0)))
("DEBUG:structure_item_desc:", Tag9 (((((("Ppxlib"), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0))), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0), 0), 1, (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0), 0)))
("DEBUG:Pstr_open", ((((("Ppxlib"), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0))), (("test/test.ml", 2, 14, 19), ("test/test.ml", 2, 14, 25), 0), 0), 1, (("test/test.ml", 2, 14, 14), ("test/test.ml", 2, 14, 25), 0), 0))
TOP structure_item_desc|open
("DEBUG:SECOND::", (Tag1 (0, [(((("loc", (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0))), (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0), 0, 0), (((Tag1 (("Location"), "none"), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0))), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0), 0, 0), 0, (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0))]), (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("loc", (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0))), (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0), 0, 0), (((Tag1 (("Location"), "none"), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0))), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0), 0, 0), 0, (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0))]))
("DEBUG:Pstr_value:", 0, [(((("loc", (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0))), (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0), 0, 0), (((Tag1 (("Location"), "none"), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0))), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0), 0, 0), 0, (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0))])
("DEBUG:value_binding.pat:", ((("loc", (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0))), (("test/test.ml", 4, 31, 35), ("test/test.ml", 4, 31, 38), 0), 0, 0))
("DEBUG:value_binding.expr:", (((Tag1 (("Location"), "none"), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0))), (("test/test.ml", 4, 31, 41), ("test/test.ml", 4, 31, 54), 0), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 4, 31, 31), ("test/test.ml", 4, 31, 54), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag6 (((("Ast"), (("test/test.ml", 6, 56, 63), ("test/test.ml", 6, 56, 66), 0)), (((("Ast"), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0), 0), 0, (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Ast"), (("test/test.ml", 6, 56, 63), ("test/test.ml", 6, 56, 66), 0)), (((("Ast"), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0), 0), 0, (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0))))
("DEBUG:Pstr_module:", ((("Ast"), (("test/test.ml", 6, 56, 63), ("test/test.ml", 6, 56, 66), 0)), (((("Ast"), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0))), (("test/test.ml", 6, 56, 69), ("test/test.ml", 6, 56, 72), 0), 0), 0, (("test/test.ml", 6, 56, 56), ("test/test.ml", 6, 56, 72), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Ast_helper"), (("test/test.ml", 7, 73, 80), ("test/test.ml", 7, 73, 90), 0)), (((("Ast_helper"), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0), 0), 0, (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Ast_helper"), (("test/test.ml", 7, 73, 80), ("test/test.ml", 7, 73, 90), 0)), (((("Ast_helper"), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0), 0), 0, (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0))))
("DEBUG:Pstr_module:", ((("Ast_helper"), (("test/test.ml", 7, 73, 80), ("test/test.ml", 7, 73, 90), 0)), (((("Ast_helper"), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0))), (("test/test.ml", 7, 73, 93), ("test/test.ml", 7, 73, 103), 0), 0), 0, (("test/test.ml", 7, 73, 73), ("test/test.ml", 7, 73, 103), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Ast_magic"), (("test/test.ml", 8, 104, 111), ("test/test.ml", 8, 104, 120), 0)), (((Tag1 (Tag1 (("Selected_ast"), "Ast"), "Config"), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0), 0), 0, (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Ast_magic"), (("test/test.ml", 8, 104, 111), ("test/test.ml", 8, 104, 120), 0)), (((Tag1 (Tag1 (("Selected_ast"), "Ast"), "Config"), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0), 0), 0, (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0))))
("DEBUG:Pstr_module:", ((("Ast_magic"), (("test/test.ml", 8, 104, 111), ("test/test.ml", 8, 104, 120), 0)), (((Tag1 (Tag1 (("Selected_ast"), "Ast"), "Config"), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0))), (("test/test.ml", 8, 104, 123), ("test/test.ml", 8, 104, 146), 0), 0), 0, (("test/test.ml", 8, 104, 104), ("test/test.ml", 8, 104, 146), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Asttypes"), (("test/test.ml", 9, 147, 154), ("test/test.ml", 9, 147, 162), 0)), (((("Asttypes"), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0), 0), 0, (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Asttypes"), (("test/test.ml", 9, 147, 154), ("test/test.ml", 9, 147, 162), 0)), (((("Asttypes"), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0), 0), 0, (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0))))
("DEBUG:Pstr_module:", ((("Asttypes"), (("test/test.ml", 9, 147, 154), ("test/test.ml", 9, 147, 162), 0)), (((("Asttypes"), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0))), (("test/test.ml", 9, 147, 165), ("test/test.ml", 9, 147, 173), 0), 0), 0, (("test/test.ml", 9, 147, 147), ("test/test.ml", 9, 147, 173), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Parse"), (("test/test.ml", 10, 174, 181), ("test/test.ml", 10, 174, 186), 0)), (((("Parse"), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0), 0), 0, (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Parse"), (("test/test.ml", 10, 174, 181), ("test/test.ml", 10, 174, 186), 0)), (((("Parse"), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0), 0), 0, (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0))))
("DEBUG:Pstr_module:", ((("Parse"), (("test/test.ml", 10, 174, 181), ("test/test.ml", 10, 174, 186), 0)), (((("Parse"), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0))), (("test/test.ml", 10, 174, 189), ("test/test.ml", 10, 174, 194), 0), 0), 0, (("test/test.ml", 10, 174, 174), ("test/test.ml", 10, 174, 194), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Parsetree"), (("test/test.ml", 11, 195, 202), ("test/test.ml", 11, 195, 211), 0)), (((("Parsetree"), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0), 0), 0, (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Parsetree"), (("test/test.ml", 11, 195, 202), ("test/test.ml", 11, 195, 211), 0)), (((("Parsetree"), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0), 0), 0, (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0))))
("DEBUG:Pstr_module:", ((("Parsetree"), (("test/test.ml", 11, 195, 202), ("test/test.ml", 11, 195, 211), 0)), (((("Parsetree"), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0))), (("test/test.ml", 11, 195, 214), ("test/test.ml", 11, 195, 223), 0), 0), 0, (("test/test.ml", 11, 195, 195), ("test/test.ml", 11, 195, 223), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Pprintast"), (("test/test.ml", 12, 224, 231), ("test/test.ml", 12, 224, 240), 0)), (((Tag1 (("Astlib"), "Pprintast"), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0), 0), 0, (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Pprintast"), (("test/test.ml", 12, 224, 231), ("test/test.ml", 12, 224, 240), 0)), (((Tag1 (("Astlib"), "Pprintast"), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0), 0), 0, (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0))))
("DEBUG:Pstr_module:", ((("Pprintast"), (("test/test.ml", 12, 224, 231), ("test/test.ml", 12, 224, 240), 0)), (((Tag1 (("Astlib"), "Pprintast"), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0))), (("test/test.ml", 12, 224, 243), ("test/test.ml", 12, 224, 259), 0), 0), 0, (("test/test.ml", 12, 224, 224), ("test/test.ml", 12, 224, 259), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag6 (((("Selected_ast"), (("test/test.ml", 13, 260, 267), ("test/test.ml", 13, 260, 279), 0)), (((("Selected_ast"), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0), 0), 0, (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0)))
("DEBUG:structure_item_desc:", Tag6 (((("Selected_ast"), (("test/test.ml", 13, 260, 267), ("test/test.ml", 13, 260, 279), 0)), (((("Selected_ast"), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0), 0), 0, (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0))))
("DEBUG:Pstr_module:", ((("Selected_ast"), (("test/test.ml", 13, 260, 267), ("test/test.ml", 13, 260, 279), 0)), (((("Selected_ast"), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0))), (("test/test.ml", 13, 260, 282), ("test/test.ml", 13, 260, 294), 0), 0), 0, (("test/test.ml", 13, 260, 260), ("test/test.ml", 13, 260, 294), 0)))
TOP structure_item_desc|binding
("DEBUG:SECOND::", (Tag1 (0, [(((("ast", (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0))), (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0), 0, 0), (Tag2 (0, [(((("pp_ast", (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0))), (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0), 0, 0), (Tag4 (0, 0, ((("fmt", (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0))), (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0), 0, 0), (Tag4 (0, 0, ((("v", (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0))), (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0), 0, 0), (Tag5 ((((Tag1 (("Format"), "fprintf"), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0))), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0), 0, 0), [(0, (((("fmt"), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0))), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0), 0, 0)); (0, (Tag1 (Tag2 ("%S", (("test/test.ml", 17, 327, 351), ("test/test.ml", 17, 327, 353), 0), 0)), (("test/test.ml", 17, 327, 350), ("test/test.ml", 17, 327, 354), 0), 0, 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0))), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0), 0, 0), [(0, (((("v"), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0))), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0), 0, 0))]), (("test/test.ml", 17, 327, 355), ("test/test.ml", 17, 327, 389), 0), [(("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 388), 0)], 0))]), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 389), 0), 0, 0)), (("test/test.ml", 16, 306, 323), ("test/test.ml", 17, 327, 389), 1), 0, 0)), (("test/test.ml", 16, 306, 319), ("test/test.ml", 17, 327, 389), 1), 0, 0), 0, (("test/test.ml", 16, 306, 308), ("test/test.ml", 17, 327, 389), 0))], (Tag2 (0, [(((("compare", (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0))), (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0), 0, 0), (Tag4 (0, 0, ((("expected", (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0))), (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0), 0, 0), (Tag4 (0, 0, ((("actual", (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0))), (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0), 0, 0), (Tag5 ((((Tag1 (("String"), "equal"), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0))), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0))), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0), 0, 0), [(0, (((("expected"), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0))), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0), 0, 0))]), (("test/test.ml", 21, 444, 450), ("test/test.ml", 21, 444, 491), 0), [(("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 490), 0)], 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0))), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0), 0, 0), [(0, (((("actual"), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0))), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0), 0, 0))]), (("test/test.ml", 22, 492, 498), ("test/test.ml", 22, 492, 537), 0), [(("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 536), 0)], 0))]), (("test/test.ml", 20, 427, 431), ("test/test.ml", 22, 492, 537), 0), 0, 0)), (("test/test.ml", 19, 395, 418), ("test/test.ml", 22, 492, 537), 1), 0, 0)), (("test/test.ml", 19, 395, 409), ("test/test.ml", 22, 492, 537), 1), 0, 0), 0, (("test/test.ml", 19, 395, 397), ("test/test.ml", 22, 492, 537), 0))], (Tag5 ((((("testable"), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0))), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0), 0, 0), [(0, (((("pp_ast"), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0))), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0), 0, 0)); (0, (((("compare"), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0))), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0), 0, 0))]), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 19, 395, 397), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 16, 306, 308), ("test/test.ml", 24, 543, 568), 0), 0, 0), 0, (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0))]), (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("ast", (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0))), (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0), 0, 0), (Tag2 (0, [(((("pp_ast", (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0))), (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0), 0, 0), (Tag4 (0, 0, ((("fmt", (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0))), (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0), 0, 0), (Tag4 (0, 0, ((("v", (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0))), (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0), 0, 0), (Tag5 ((((Tag1 (("Format"), "fprintf"), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0))), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0), 0, 0), [(0, (((("fmt"), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0))), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0), 0, 0)); (0, (Tag1 (Tag2 ("%S", (("test/test.ml", 17, 327, 351), ("test/test.ml", 17, 327, 353), 0), 0)), (("test/test.ml", 17, 327, 350), ("test/test.ml", 17, 327, 354), 0), 0, 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0))), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0), 0, 0), [(0, (((("v"), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0))), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0), 0, 0))]), (("test/test.ml", 17, 327, 355), ("test/test.ml", 17, 327, 389), 0), [(("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 388), 0)], 0))]), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 389), 0), 0, 0)), (("test/test.ml", 16, 306, 323), ("test/test.ml", 17, 327, 389), 1), 0, 0)), (("test/test.ml", 16, 306, 319), ("test/test.ml", 17, 327, 389), 1), 0, 0), 0, (("test/test.ml", 16, 306, 308), ("test/test.ml", 17, 327, 389), 0))], (Tag2 (0, [(((("compare", (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0))), (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0), 0, 0), (Tag4 (0, 0, ((("expected", (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0))), (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0), 0, 0), (Tag4 (0, 0, ((("actual", (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0))), (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0), 0, 0), (Tag5 ((((Tag1 (("String"), "equal"), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0))), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0))), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0), 0, 0), [(0, (((("expected"), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0))), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0), 0, 0))]), (("test/test.ml", 21, 444, 450), ("test/test.ml", 21, 444, 491), 0), [(("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 490), 0)], 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0))), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0), 0, 0), [(0, (((("actual"), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0))), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0), 0, 0))]), (("test/test.ml", 22, 492, 498), ("test/test.ml", 22, 492, 537), 0), [(("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 536), 0)], 0))]), (("test/test.ml", 20, 427, 431), ("test/test.ml", 22, 492, 537), 0), 0, 0)), (("test/test.ml", 19, 395, 418), ("test/test.ml", 22, 492, 537), 1), 0, 0)), (("test/test.ml", 19, 395, 409), ("test/test.ml", 22, 492, 537), 1), 0, 0), 0, (("test/test.ml", 19, 395, 397), ("test/test.ml", 22, 492, 537), 0))], (Tag5 ((((("testable"), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0))), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0), 0, 0), [(0, (((("pp_ast"), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0))), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0), 0, 0)); (0, (((("compare"), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0))), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0), 0, 0))]), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 19, 395, 397), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 16, 306, 308), ("test/test.ml", 24, 543, 568), 0), 0, 0), 0, (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0))]))
("DEBUG:Pstr_value:", 0, [(((("ast", (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0))), (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0), 0, 0), (Tag2 (0, [(((("pp_ast", (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0))), (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0), 0, 0), (Tag4 (0, 0, ((("fmt", (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0))), (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0), 0, 0), (Tag4 (0, 0, ((("v", (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0))), (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0), 0, 0), (Tag5 ((((Tag1 (("Format"), "fprintf"), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0))), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0), 0, 0), [(0, (((("fmt"), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0))), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0), 0, 0)); (0, (Tag1 (Tag2 ("%S", (("test/test.ml", 17, 327, 351), ("test/test.ml", 17, 327, 353), 0), 0)), (("test/test.ml", 17, 327, 350), ("test/test.ml", 17, 327, 354), 0), 0, 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0))), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0), 0, 0), [(0, (((("v"), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0))), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0), 0, 0))]), (("test/test.ml", 17, 327, 355), ("test/test.ml", 17, 327, 389), 0), [(("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 388), 0)], 0))]), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 389), 0), 0, 0)), (("test/test.ml", 16, 306, 323), ("test/test.ml", 17, 327, 389), 1), 0, 0)), (("test/test.ml", 16, 306, 319), ("test/test.ml", 17, 327, 389), 1), 0, 0), 0, (("test/test.ml", 16, 306, 308), ("test/test.ml", 17, 327, 389), 0))], (Tag2 (0, [(((("compare", (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0))), (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0), 0, 0), (Tag4 (0, 0, ((("expected", (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0))), (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0), 0, 0), (Tag4 (0, 0, ((("actual", (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0))), (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0), 0, 0), (Tag5 ((((Tag1 (("String"), "equal"), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0))), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0))), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0), 0, 0), [(0, (((("expected"), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0))), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0), 0, 0))]), (("test/test.ml", 21, 444, 450), ("test/test.ml", 21, 444, 491), 0), [(("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 490), 0)], 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0))), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0), 0, 0), [(0, (((("actual"), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0))), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0), 0, 0))]), (("test/test.ml", 22, 492, 498), ("test/test.ml", 22, 492, 537), 0), [(("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 536), 0)], 0))]), (("test/test.ml", 20, 427, 431), ("test/test.ml", 22, 492, 537), 0), 0, 0)), (("test/test.ml", 19, 395, 418), ("test/test.ml", 22, 492, 537), 1), 0, 0)), (("test/test.ml", 19, 395, 409), ("test/test.ml", 22, 492, 537), 1), 0, 0), 0, (("test/test.ml", 19, 395, 397), ("test/test.ml", 22, 492, 537), 0))], (Tag5 ((((("testable"), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0))), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0), 0, 0), [(0, (((("pp_ast"), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0))), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0), 0, 0)); (0, (((("compare"), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0))), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0), 0, 0))]), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 19, 395, 397), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 16, 306, 308), ("test/test.ml", 24, 543, 568), 0), 0, 0), 0, (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0))])
("DEBUG:value_binding.pat:", ((("ast", (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0))), (("test/test.ml", 15, 296, 300), ("test/test.ml", 15, 296, 303), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag2 (0, [(((("pp_ast", (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0))), (("test/test.ml", 16, 306, 312), ("test/test.ml", 16, 306, 318), 0), 0, 0), (Tag4 (0, 0, ((("fmt", (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0))), (("test/test.ml", 16, 306, 319), ("test/test.ml", 16, 306, 322), 0), 0, 0), (Tag4 (0, 0, ((("v", (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0))), (("test/test.ml", 16, 306, 323), ("test/test.ml", 16, 306, 324), 0), 0, 0), (Tag5 ((((Tag1 (("Format"), "fprintf"), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0))), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 345), 0), 0, 0), [(0, (((("fmt"), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0))), (("test/test.ml", 17, 327, 346), ("test/test.ml", 17, 327, 349), 0), 0, 0)); (0, (Tag1 (Tag2 ("%S", (("test/test.ml", 17, 327, 351), ("test/test.ml", 17, 327, 353), 0), 0)), (("test/test.ml", 17, 327, 350), ("test/test.ml", 17, 327, 354), 0), 0, 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0))), (("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 386), 0), 0, 0), [(0, (((("v"), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0))), (("test/test.ml", 17, 327, 387), ("test/test.ml", 17, 327, 388), 0), 0, 0))]), (("test/test.ml", 17, 327, 355), ("test/test.ml", 17, 327, 389), 0), [(("test/test.ml", 17, 327, 356), ("test/test.ml", 17, 327, 388), 0)], 0))]), (("test/test.ml", 17, 327, 331), ("test/test.ml", 17, 327, 389), 0), 0, 0)), (("test/test.ml", 16, 306, 323), ("test/test.ml", 17, 327, 389), 1), 0, 0)), (("test/test.ml", 16, 306, 319), ("test/test.ml", 17, 327, 389), 1), 0, 0), 0, (("test/test.ml", 16, 306, 308), ("test/test.ml", 17, 327, 389), 0))], (Tag2 (0, [(((("compare", (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0))), (("test/test.ml", 19, 395, 401), ("test/test.ml", 19, 395, 408), 0), 0, 0), (Tag4 (0, 0, ((("expected", (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0))), (("test/test.ml", 19, 395, 409), ("test/test.ml", 19, 395, 417), 0), 0, 0), (Tag4 (0, 0, ((("actual", (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0))), (("test/test.ml", 19, 395, 418), ("test/test.ml", 19, 395, 424), 0), 0, 0), (Tag5 ((((Tag1 (("String"), "equal"), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0))), (("test/test.ml", 20, 427, 431), ("test/test.ml", 20, 427, 443), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0))), (("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 481), 0), 0, 0), [(0, (((("expected"), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0))), (("test/test.ml", 21, 444, 482), ("test/test.ml", 21, 444, 490), 0), 0, 0))]), (("test/test.ml", 21, 444, 450), ("test/test.ml", 21, 444, 491), 0), [(("test/test.ml", 21, 444, 451), ("test/test.ml", 21, 444, 490), 0)], 0)); (0, (Tag5 ((((Tag1 (("Pprintast"), "string_of_expression"), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0))), (("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 529), 0), 0, 0), [(0, (((("actual"), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0))), (("test/test.ml", 22, 492, 530), ("test/test.ml", 22, 492, 536), 0), 0, 0))]), (("test/test.ml", 22, 492, 498), ("test/test.ml", 22, 492, 537), 0), [(("test/test.ml", 22, 492, 499), ("test/test.ml", 22, 492, 536), 0)], 0))]), (("test/test.ml", 20, 427, 431), ("test/test.ml", 22, 492, 537), 0), 0, 0)), (("test/test.ml", 19, 395, 418), ("test/test.ml", 22, 492, 537), 1), 0, 0)), (("test/test.ml", 19, 395, 409), ("test/test.ml", 22, 492, 537), 1), 0, 0), 0, (("test/test.ml", 19, 395, 397), ("test/test.ml", 22, 492, 537), 0))], (Tag5 ((((("testable"), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0))), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 553), 0), 0, 0), [(0, (((("pp_ast"), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0))), (("test/test.ml", 24, 543, 554), ("test/test.ml", 24, 543, 560), 0), 0, 0)); (0, (((("compare"), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0))), (("test/test.ml", 24, 543, 561), ("test/test.ml", 24, 543, 568), 0), 0, 0))]), (("test/test.ml", 24, 543, 545), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 19, 395, 397), ("test/test.ml", 24, 543, 568), 0), 0, 0)), (("test/test.ml", 16, 306, 308), ("test/test.ml", 24, 543, 568), 0), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 15, 296, 296), ("test/test.ml", 24, 543, 568), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag3 (1, [(("core_type", (("test/test.ml", 27, 571, 576), ("test/test.ml", 27, 571, 585), 0)), 0, 0, Tag1 ([(("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), 0, (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0), (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 641), 0), 0); (("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0), (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 664), 0), 0); (("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0), (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 699), 0), 0); (("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0), (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 731), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0)), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0, 0)], (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))]), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type"), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0)), 0), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0), 0, 0)), 0, (("test/test.ml", 27, 571, 571), ("test/test.ml", 32, 764, 765), 0)); (("expression", (("test/test.ml", 33, 766, 770), ("test/test.ml", 33, 766, 780), 0)), 0, 0, Tag1 ([(("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), 0, (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0), (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 838), 0), 0); (("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0), (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 861), 0), 0); (("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0), (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 896), 0), 0); (("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0), (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 928), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0)), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0, 0)], (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))]), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression"), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0)), 0), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0), 0, 0)), 0, (("test/test.ml", 33, 766, 766), ("test/test.ml", 38, 961, 962), 0)); (("pattern", (("test/test.ml", 40, 964, 968), ("test/test.ml", 40, 964, 975), 0)), 0, 0, Tag1 ([(("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), 0, (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0), (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1027), 0), 0); (("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0), (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1050), 0), 0); (("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0), (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1085), 0), 0); (("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0), (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1117), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0)), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0, 0)], (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))]), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern"), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0)), 0), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0), 0, 0)), 0, (("test/test.ml", 40, 964, 964), ("test/test.ml", 45, 1150, 1151), 0)); (("pattern_desc", (("test/test.ml", 47, 1153, 1157), ("test/test.ml", 47, 1153, 1169), 0)), 0, 0, ([(("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern_desc"), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0)), 0), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0), 0, 0)), 0, (("test/test.ml", 47, 1153, 1153), ("test/test.ml", 100, 3430, 3470), 0)); (("expression_desc", (("test/test.ml", 102, 3496, 3500), ("test/test.ml", 102, 3496, 3515), 0)), 0, 0, ([(("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression_desc"), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0)), 0), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0), 0, 0)), 0, (("test/test.ml", 102, 3496, 3496), ("test/test.ml", 228, 9219, 9239), 0)); (("core_type_desc", (("test/test.ml", 230, 9253, 9257), ("test/test.ml", 230, 9253, 9271), 0)), 0, 0, ([(("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type_desc"), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0)), 0), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0), 0, 0)), 0, (("test/test.ml", 230, 9253, 9253), ("test/test.ml", 308, 12504, 12535), 0)); (("value_binding", (("test/test.ml", 309, 12555, 12559), ("test/test.ml", 309, 12555, 12572), 0)), 0, 0, Tag1 ([(("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), 0, (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0), (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12623), 0), 0); (("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), 0, (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0), (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12648), 0), 0); (("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0), (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12679), 0), 0); (("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0), (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12701), 0), 0)]), 1, ((Tag3 ((Tag1 (("Parsetree"), "value_binding"), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0)), 0), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0), 0, 0)), 0, (("test/test.ml", 309, 12555, 12555), ("test/test.ml", 314, 12702, 12703), 0))]), (("test/test.ml", 27, 571, 571), ("test/test.ml", 314, 12702, 12703), 0)))
("DEBUG:structure_item_desc:", Tag3 (1, [(("core_type", (("test/test.ml", 27, 571, 576), ("test/test.ml", 27, 571, 585), 0)), 0, 0, Tag1 ([(("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), 0, (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0), (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 641), 0), 0); (("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0), (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 664), 0), 0); (("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0), (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 699), 0), 0); (("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0), (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 731), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0)), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0, 0)], (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))]), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type"), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0)), 0), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0), 0, 0)), 0, (("test/test.ml", 27, 571, 571), ("test/test.ml", 32, 764, 765), 0)); (("expression", (("test/test.ml", 33, 766, 770), ("test/test.ml", 33, 766, 780), 0)), 0, 0, Tag1 ([(("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), 0, (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0), (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 838), 0), 0); (("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0), (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 861), 0), 0); (("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0), (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 896), 0), 0); (("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0), (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 928), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0)), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0, 0)], (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))]), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression"), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0)), 0), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0), 0, 0)), 0, (("test/test.ml", 33, 766, 766), ("test/test.ml", 38, 961, 962), 0)); (("pattern", (("test/test.ml", 40, 964, 968), ("test/test.ml", 40, 964, 975), 0)), 0, 0, Tag1 ([(("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), 0, (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0), (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1027), 0), 0); (("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0), (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1050), 0), 0); (("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0), (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1085), 0), 0); (("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0), (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1117), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0)), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0, 0)], (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))]), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern"), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0)), 0), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0), 0, 0)), 0, (("test/test.ml", 40, 964, 964), ("test/test.ml", 45, 1150, 1151), 0)); (("pattern_desc", (("test/test.ml", 47, 1153, 1157), ("test/test.ml", 47, 1153, 1169), 0)), 0, 0, ([(("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern_desc"), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0)), 0), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0), 0, 0)), 0, (("test/test.ml", 47, 1153, 1153), ("test/test.ml", 100, 3430, 3470), 0)); (("expression_desc", (("test/test.ml", 102, 3496, 3500), ("test/test.ml", 102, 3496, 3515), 0)), 0, 0, ([(("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression_desc"), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0)), 0), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0), 0, 0)), 0, (("test/test.ml", 102, 3496, 3496), ("test/test.ml", 228, 9219, 9239), 0)); (("core_type_desc", (("test/test.ml", 230, 9253, 9257), ("test/test.ml", 230, 9253, 9271), 0)), 0, 0, ([(("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type_desc"), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0)), 0), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0), 0, 0)), 0, (("test/test.ml", 230, 9253, 9253), ("test/test.ml", 308, 12504, 12535), 0)); (("value_binding", (("test/test.ml", 309, 12555, 12559), ("test/test.ml", 309, 12555, 12572), 0)), 0, 0, Tag1 ([(("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), 0, (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0), (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12623), 0), 0); (("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), 0, (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0), (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12648), 0), 0); (("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0), (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12679), 0), 0); (("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0), (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12701), 0), 0)]), 1, ((Tag3 ((Tag1 (("Parsetree"), "value_binding"), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0)), 0), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0), 0, 0)), 0, (("test/test.ml", 309, 12555, 12555), ("test/test.ml", 314, 12702, 12703), 0))]))
("DEBUG:Pstr_type:", 1, [(("core_type", (("test/test.ml", 27, 571, 576), ("test/test.ml", 27, 571, 585), 0)), 0, 0, Tag1 ([(("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), 0, (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0), (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 641), 0), 0); (("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0), (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 664), 0), 0); (("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0), (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 699), 0), 0); (("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0), (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 731), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0)), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0, 0)], (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))]), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type"), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0)), 0), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0), 0, 0)), 0, (("test/test.ml", 27, 571, 571), ("test/test.ml", 32, 764, 765), 0)); (("expression", (("test/test.ml", 33, 766, 770), ("test/test.ml", 33, 766, 780), 0)), 0, 0, Tag1 ([(("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), 0, (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0), (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 838), 0), 0); (("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0), (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 861), 0), 0); (("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0), (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 896), 0), 0); (("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0), (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 928), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0)), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0, 0)], (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))]), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression"), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0)), 0), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0), 0, 0)), 0, (("test/test.ml", 33, 766, 766), ("test/test.ml", 38, 961, 962), 0)); (("pattern", (("test/test.ml", 40, 964, 968), ("test/test.ml", 40, 964, 975), 0)), 0, 0, Tag1 ([(("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), 0, (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0), (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1027), 0), 0); (("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0), (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1050), 0), 0); (("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0), (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1085), 0), 0); (("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0), (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1117), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0)), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0, 0)], (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))]), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern"), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0)), 0), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0), 0, 0)), 0, (("test/test.ml", 40, 964, 964), ("test/test.ml", 45, 1150, 1151), 0)); (("pattern_desc", (("test/test.ml", 47, 1153, 1157), ("test/test.ml", 47, 1153, 1169), 0)), 0, 0, ([(("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "pattern_desc"), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0)), 0), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0), 0, 0)), 0, (("test/test.ml", 47, 1153, 1153), ("test/test.ml", 100, 3430, 3470), 0)); (("expression_desc", (("test/test.ml", 102, 3496, 3500), ("test/test.ml", 102, 3496, 3515), 0)), 0, 0, ([(("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "expression_desc"), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0)), 0), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0), 0, 0)), 0, (("test/test.ml", 102, 3496, 3496), ("test/test.ml", 228, 9219, 9239), 0)); (("core_type_desc", (("test/test.ml", 230, 9253, 9257), ("test/test.ml", 230, 9253, 9271), 0)), 0, 0, ([(("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]), 1, ((Tag3 ((Tag1 (("Parsetree"), "core_type_desc"), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0)), 0), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0), 0, 0)), 0, (("test/test.ml", 230, 9253, 9253), ("test/test.ml", 308, 12504, 12535), 0)); (("value_binding", (("test/test.ml", 309, 12555, 12559), ("test/test.ml", 309, 12555, 12572), 0)), 0, 0, Tag1 ([(("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), 0, (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0), (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12623), 0), 0); (("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), 0, (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0), (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12648), 0), 0); (("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0), (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12679), 0), 0); (("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0), (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12701), 0), 0)]), 1, ((Tag3 ((Tag1 (("Parsetree"), "value_binding"), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0)), 0), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0), 0, 0)), 0, (("test/test.ml", 309, 12555, 12555), ("test/test.ml", 314, 12702, 12703), 0))])
("DEBUG:type_decl:", ("value_binding", (("test/test.ml", 309, 12555, 12559), ("test/test.ml", 309, 12555, 12572), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", Tag1 ([(("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), 0, (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0), (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12623), 0), 0); (("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), 0, (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0), (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12648), 0), 0); (("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0), (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12679), 0), 0); (("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0), (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12701), 0), 0)]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "value_binding"), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0)), 0), (("test/test.ml", 309, 12555, 12575), ("test/test.ml", 309, 12555, 12598), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 309, 12555, 12555), ("test/test.ml", 314, 12702, 12703), 0))
DEBUG:Ptyp_constr1 'location' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), "types", 0, "context", 0, "id1", "location")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0)], "Ptyp_constr:\"location\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pvb_loc", (("test/test.ml", 313, 12680, 12682), ("test/test.ml", 313, 12680, 12689), 0)), "mutable", 0, "type", (Tag3 ((("location"), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0)), 0), (("test/test.ml", 313, 12680, 12692), ("test/test.ml", 313, 12680, 12700), 0), 0, 0))
DEBUG:Ptyp_constr1 'attributes' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), "types", 0, "context", 0, "id1", "attributes")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0)], "Ptyp_constr:\"attributes\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pvb_attributes", (("test/test.ml", 312, 12649, 12651), ("test/test.ml", 312, 12649, 12665), 0)), "mutable", 0, "type", (Tag3 ((("attributes"), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0)), 0), (("test/test.ml", 312, 12649, 12668), ("test/test.ml", 312, 12649, 12678), 0), 0, 0))
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pvb_expr", (("test/test.ml", 311, 12624, 12626), ("test/test.ml", 311, 12624, 12634), 0)), "mutable", 0, "type", (Tag3 ((("expression"), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0)), 0), (("test/test.ml", 311, 12624, 12637), ("test/test.ml", 311, 12624, 12647), 0), 0, 0))
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pvb_pat", (("test/test.ml", 310, 12603, 12605), ("test/test.ml", 310, 12603, 12612), 0)), "mutable", 0, "type", (Tag3 ((("pattern"), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0)), 0), (("test/test.ml", 310, 12603, 12615), ("test/test.ml", 310, 12603, 12622), 0), 0, 0))
("DEBUG:type_decl:", ("core_type_desc", (("test/test.ml", 230, 9253, 9257), ("test/test.ml", 230, 9253, 9271), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", ([(("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "core_type_desc"), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0)), 0), (("test/test.ml", 230, 9253, 9274), ("test/test.ml", 230, 9253, 9298), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 230, 9253, 9253), ("test/test.ml", 308, 12504, 12535), 0))
["DEBUG:Ptype_variant:"; (("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), 0, (0), 0, (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]); (("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), 0, ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), 0, (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]); (("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), 0, (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]); (("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), 0, (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]); (("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), 0, (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]); (("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), 0, (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]); (("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), 0, (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]); (("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), 0, ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), 0, (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]); (("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), 0, (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]); (("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), 0, (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]); (("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), 0, ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), 0, (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]); (("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), 0, (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])]
("DEBUG:constructor_declaration:", ("Ptyp_any", (("test/test.ml", 231, 9301, 9305), ("test/test.ml", 231, 9301, 9313), 0)), "vars", 0, "args", (0), "res", 0, "loc", (("test/test.ml", 231, 9301, 9303), ("test/test.ml", 231, 9301, 9313), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [_] ", (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0)), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0), 0, 0)], (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))]), (("test/test.ml", 231, 9301, 9315), ("test/test.ml", 231, 9301, 9325), 0))])
DEBUG2A:
DEBUG2B:| Ptyp_any () -> (process_types ())
("DEBUG:constructor_declaration:", ("Ptyp_var", (("test/test.ml", 232, 9326, 9330), ("test/test.ml", 232, 9326, 9338), 0)), "vars", 0, "args", ([(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 232, 9326, 9328), ("test/test.ml", 232, 9326, 9348), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A type variable such as ['a] ", (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0)), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0), 0, 0)], (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))]), (("test/test.ml", 232, 9326, 9350), ("test/test.ml", 232, 9326, 9385), 0))])
DEBUG2A:let process_string ( astring0:string)=()

DEBUG2B:| Ptyp_var (string0) -> (process_types ((process_string string0)))
("DEBUG:constructor_declaration:", ("Ptyp_arrow", (("test/test.ml", 233, 9386, 9390), ("test/test.ml", 233, 9386, 9400), 0)), "vars", 0, "args", ([(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 233, 9386, 9388), ("test/test.ml", 233, 9386, 9437), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_arrow(lbl, T1, T2)] represents:\n\n          - [T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Nolabel} [Nolabel]},\n          - [~l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled]},\n          - [?l:T1 -> T2] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional]}. ", (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0)), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0), 0, 0)], (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))]), (("test/test.ml", 234, 9438, 9444), ("test/test.ml", 240, 9736, 9763), 0))])
DEBUG2A:let process_arg_label ( aarg_label0:arg_label)=()
 let process_core_type ( acore_type1:core_type)=()
 let process_core_type ( acore_type2:core_type)=()

DEBUG2B:| Ptyp_arrow (arg_label0,core_type1,core_type2) -> (process_types ((process_arg_label arg_label0),(process_core_type core_type1),(process_core_type core_type2)))
("DEBUG:constructor_declaration:", ("Ptyp_tuple", (("test/test.ml", 241, 9764, 9768), ("test/test.ml", 241, 9764, 9778), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 241, 9764, 9766), ("test/test.ml", 241, 9764, 9796), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_tuple(\\[T1 ; ... ; Tn\\])] represents a product type\n          [T1 * ... * Tn].\n\n          Invariant: [n >= 2]. ", (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0)), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0), 0, 0)], (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))]), (("test/test.ml", 242, 9797, 9803), ("test/test.ml", 245, 9893, 9926), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Ptyp_tuple (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Ptyp_constr", (("test/test.ml", 246, 9927, 9931), ("test/test.ml", 246, 9927, 9942), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 246, 9927, 9929), ("test/test.ml", 246, 9927, 9976), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_constr(lident, l)] represents:\n\n          - [tconstr] when [l=\\[\\]],\n          - [T tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0)), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0), 0, 0)], (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))]), (("test/test.ml", 247, 9977, 9983), ("test/test.ml", 251, 10102, 10168), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()
 let process_list ( alist1:list)=()

DEBUG2B:| Ptyp_constr (longident_loc0,list1) -> (process_types ((process_longident_loc longident_loc0),(process_list list1)))
("DEBUG:constructor_declaration:", ("Ptyp_object", (("test/test.ml", 252, 10169, 10173), ("test/test.ml", 252, 10169, 10184), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 252, 10169, 10171), ("test/test.ml", 252, 10169, 10219), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_object(\\[ l1:T1; ...; ln:Tn \\], flag)] represents:\n\n          - [< l1:T1; ...; ln:Tn >] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]},\n          - [< l1:T1; ...; ln:Tn; .. >] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}. ", (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0)), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0), 0, 0)], (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))]), (("test/test.ml", 253, 10220, 10226), ("test/test.ml", 258, 10449, 10502), 0))])
DEBUG2A:let process_list ( alist0:list)=()
 let process_closed_flag ( aclosed_flag1:closed_flag)=()

DEBUG2B:| Ptyp_object (list0,closed_flag1) -> (process_types ((process_list list0),(process_closed_flag closed_flag1)))
("DEBUG:constructor_declaration:", ("Ptyp_class", (("test/test.ml", 259, 10503, 10507), ("test/test.ml", 259, 10503, 10517), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 259, 10503, 10505), ("test/test.ml", 259, 10503, 10551), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_class(tconstr, l)] represents:\n\n          - [#tconstr] when [l=\\[\\]],\n          - [T #tconstr] when [l=\\[T\\]],\n          - [(T1, ..., Tn) #tconstr] when [l=\\[T1 ; ... ; Tn\\]]. ", (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0)), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0), 0, 0)], (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))]), (("test/test.ml", 260, 10552, 10558), ("test/test.ml", 264, 10679, 10746), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()
 let process_list ( alist1:list)=()

DEBUG2B:| Ptyp_class (longident_loc0,list1) -> (process_types ((process_longident_loc longident_loc0),(process_list list1)))
("DEBUG:constructor_declaration:", ("Ptyp_alias", (("test/test.ml", 265, 10747, 10751), ("test/test.ml", 265, 10747, 10761), 0)), "vars", 0, "args", ([(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 265, 10747, 10749), ("test/test.ml", 265, 10747, 10783), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [T as 'a]. ", (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0)), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0), 0, 0)], (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))]), (("test/test.ml", 265, 10747, 10785), ("test/test.ml", 265, 10747, 10802), 0))])
DEBUG2A:let process_core_type ( acore_type0:core_type)=()
 let process_string ( astring1:string)=()

DEBUG2B:| Ptyp_alias (core_type0,string1) -> (process_types ((process_core_type core_type0),(process_string string1)))
("DEBUG:constructor_declaration:", ("Ptyp_variant", (("test/test.ml", 266, 10803, 10807), ("test/test.ml", 266, 10803, 10819), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 266, 10803, 10805), ("test/test.ml", 266, 10803, 10871), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ptyp_variant(\\[`A;`B\\], flag, labels)] represents:\n\n          - [\\[ `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [None],\n          - [\\[> `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Open} [Open]},\n            and [labels] is [None],\n          - [\\[< `A|`B \\]] when [flag] is {{!Asttypes.closed_flag.Closed}\n            [Closed]}, and [labels] is [Some \\[\\]],\n          - [\\[< `A|`B > `X `Y \\]] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}, and [labels] is\n            [Some \\[\"X\";\"Y\"\\]]. ", (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0)), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0), 0, 0)], (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))]), (("test/test.ml", 267, 10872, 10878), ("test/test.ml", 277, 11419, 11453), 0))])
DEBUG2A:let process_list ( alist0:list)=()
 let process_closed_flag ( aclosed_flag1:closed_flag)=()
 let process_option ( aoption2:option)=()

DEBUG2B:| Ptyp_variant (list0,closed_flag1,option2) -> (process_types ((process_list list0),(process_closed_flag closed_flag1),(process_option option2)))
("DEBUG:constructor_declaration:", ("Ptyp_poly", (("test/test.ml", 278, 11454, 11458), ("test/test.ml", 278, 11454, 11467), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 278, 11454, 11456), ("test/test.ml", 278, 11454, 11498), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" ['a1 ... 'an. T]\n\n          Can only appear in the following context:\n\n          - As the {!core_type} of a {{!pattern_desc.Ppat_constraint}\n            [Ppat_constraint]} node corresponding to a constraint on a\n            let-binding:\n\n          {[\n            let x : 'a1 ... 'an. T = e ...\n          ]}\n          - Under {{!class_field_kind.Cfk_virtual} [Cfk_virtual]} for methods\n            (not values).\n\n          - As the {!core_type} of a {{!class_type_field_desc.Pctf_method}\n            [Pctf_method]} node.\n\n          - As the {!core_type} of a {{!expression_desc.Pexp_poly} [Pexp_poly]}\n            node.\n\n          - As the {{!label_declaration.pld_type} [pld_type]} field of a\n            {!label_declaration}.\n\n          - As a {!core_type} of a {{!core_type_desc.Ptyp_object} [Ptyp_object]}\n            node.\n\n          - As the {{!value_description.pval_type} [pval_type]} field of a\n            {!value_description}. ", (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0)), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0), 0, 0)], (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))]), (("test/test.ml", 279, 11499, 11505), ("test/test.ml", 306, 12412, 12448), 0))])
DEBUG2A:let process_list ( alist0:list)=()
 let process_core_type ( acore_type1:core_type)=()

DEBUG2B:| Ptyp_poly (list0,core_type1) -> (process_types ((process_list list0),(process_core_type core_type1)))
("DEBUG:constructor_declaration:", ("Ptyp_package", (("test/test.ml", 307, 12449, 12453), ("test/test.ml", 307, 12449, 12465), 0)), "vars", 0, "args", ([(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 307, 12449, 12451), ("test/test.ml", 307, 12449, 12481), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module S)]. ", (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0)), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0), 0, 0)], (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))]), (("test/test.ml", 307, 12449, 12483), ("test/test.ml", 307, 12449, 12503), 0))])
DEBUG2A:let process_package_type ( apackage_type0:package_type)=()

DEBUG2B:| Ptyp_package (package_type0) -> (process_types ((process_package_type package_type0)))
("DEBUG:constructor_declaration:", ("Ptyp_extension", (("test/test.ml", 308, 12504, 12508), ("test/test.ml", 308, 12504, 12522), 0)), "vars", 0, "args", ([(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 308, 12504, 12506), ("test/test.ml", 308, 12504, 12535), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]]. ", (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0)), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0), 0, 0)], (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))]), (("test/test.ml", 308, 12504, 12537), ("test/test.ml", 308, 12504, 12554), 0))])
DEBUG2A:let process_extension ( aextension0:extension)=()

DEBUG2B:| Ptyp_extension (extension0) -> (process_types ((process_extension extension0)))
["DEBUG:Pcstr_tuple:"; (Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)]
DEBUG:Ptyp_constr1 'extension' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), "types", 0, "context", 0, "id1", "extension")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("extension"), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0)), 0), (("test/test.ml", 308, 12504, 12526), ("test/test.ml", 308, 12504, 12535), 0), 0, 0)], "Ptyp_constr:\"extension\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)]
DEBUG:Ptyp_constr1 'package_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), "types", 0, "context", 0, "id1", "package_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("package_type"), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0)), 0), (("test/test.ml", 307, 12449, 12469), ("test/test.ml", 307, 12449, 12481), 0), 0, 0)], "Ptyp_constr:\"package_type\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0)), 0), (("test/test.ml", 278, 11454, 11489), ("test/test.ml", 278, 11454, 11498), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), "types", [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 278, 11454, 11482), ("test/test.ml", 278, 11454, 11486), 0)), [(Tag3 ((("loc"), (("test/test.ml", 278, 11454, 11478), ("test/test.ml", 278, 11454, 11481), 0)), [(Tag3 ((("string"), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0)), 0), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11477), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11481), 0), 0, 0)]), (("test/test.ml", 278, 11454, 11471), ("test/test.ml", 278, 11454, 11486), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)]
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), "types", [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), "types", [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 266, 10803, 10865), ("test/test.ml", 266, 10803, 10871), 0)), [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10860), ("test/test.ml", 266, 10803, 10864), 0)), [(Tag3 ((("label"), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0)), 0), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10859), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10864), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10854), ("test/test.ml", 266, 10803, 10871), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'closed_flag' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), "types", 0, "context", 0, "id1", "closed_flag")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("closed_flag"), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0)), 0), (("test/test.ml", 266, 10803, 10840), ("test/test.ml", 266, 10803, 10851), 0), 0, 0)], "Ptyp_constr:\"closed_flag\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'row_field' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), "types", 0, "context", 0, "id1", "row_field")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)], "Ptyp_constr:\"row_field\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), "types", [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 266, 10803, 10833), ("test/test.ml", 266, 10803, 10837), 0)), [(Tag3 ((("row_field"), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0)), 0), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10832), 0), 0, 0)]), (("test/test.ml", 266, 10803, 10823), ("test/test.ml", 266, 10803, 10837), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"row_field\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0); (Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)]
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0)), 0), (("test/test.ml", 265, 10747, 10777), ("test/test.ml", 265, 10747, 10783), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0)), 0), (("test/test.ml", 265, 10747, 10765), ("test/test.ml", 265, 10747, 10774), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), "types", [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 259, 10503, 10547), ("test/test.ml", 259, 10503, 10551), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0)), 0), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10546), 0), 0, 0)]), (("test/test.ml", 259, 10503, 10537), ("test/test.ml", 259, 10503, 10551), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"core_type\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0)), 0), (("test/test.ml", 259, 10503, 10521), ("test/test.ml", 259, 10503, 10534), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)]
DEBUG:Ptyp_constr1 'closed_flag' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), "types", 0, "context", 0, "id1", "closed_flag")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("closed_flag"), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0)), 0), (("test/test.ml", 252, 10169, 10208), ("test/test.ml", 252, 10169, 10219), 0), 0, 0)], "Ptyp_constr:\"closed_flag\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'object_field' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), "types", 0, "context", 0, "id1", "object_field")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)], "Ptyp_constr:\"object_field\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), "types", [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 252, 10169, 10201), ("test/test.ml", 252, 10169, 10205), 0)), [(Tag3 ((("object_field"), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0)), 0), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10200), 0), 0, 0)]), (("test/test.ml", 252, 10169, 10188), ("test/test.ml", 252, 10169, 10205), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"object_field\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), "types", [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 246, 9927, 9972), ("test/test.ml", 246, 9927, 9976), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0)), 0), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9971), 0), 0, 0)]), (("test/test.ml", 246, 9927, 9962), ("test/test.ml", 246, 9927, 9976), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"core_type\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0)), 0), (("test/test.ml", 246, 9927, 9946), ("test/test.ml", 246, 9927, 9959), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), "types", [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 241, 9764, 9792), ("test/test.ml", 241, 9764, 9796), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0)), 0), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9791), 0), 0, 0)]), (("test/test.ml", 241, 9764, 9782), ("test/test.ml", 241, 9764, 9796), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"core_type\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0)), 0), (("test/test.ml", 233, 9386, 9428), ("test/test.ml", 233, 9386, 9437), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0)), 0), (("test/test.ml", 233, 9386, 9416), ("test/test.ml", 233, 9386, 9425), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'arg_label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), "types", 0, "context", 0, "id1", "arg_label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("arg_label"), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0)), 0), (("test/test.ml", 233, 9386, 9404), ("test/test.ml", 233, 9386, 9413), 0), 0, 0)], "Ptyp_constr:\"arg_label\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_arrow"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)]
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0)), 0), (("test/test.ml", 232, 9326, 9342), ("test/test.ml", 232, 9326, 9348), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ptyp_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_arrow"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"]
DEBUG:constructor_declaration_new: constructor:"Ptyp_any"{Pcstr_tuple:my_process_core_type_list:}	|constructor:"Ptyp_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_arrow"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
("DEBUG:type_decl:", ("expression_desc", (("test/test.ml", 102, 3496, 3500), ("test/test.ml", 102, 3496, 3515), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", ([(("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "expression_desc"), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0)), 0), (("test/test.ml", 102, 3496, 3518), ("test/test.ml", 102, 3496, 3543), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 102, 3496, 3496), ("test/test.ml", 228, 9219, 9239), 0))
["DEBUG:Ptype_variant:"; (("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), 0, (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]); (("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), 0, (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]); (("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), 0, ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), 0, (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]); (("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), 0, ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), 0, (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]); (("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), 0, ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), 0, (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]); (("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), 0, (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]); (("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), 0, (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]); (("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), 0, (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]); (("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), 0, (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]); (("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), 0, (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]); (("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), 0, (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]); (("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), 0, (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]); (("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), 0, (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]); (("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), 0, (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]); (("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), 0, (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]); (("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), 0, (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]); (("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), 0, (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]); (("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), 0, (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]); (("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), 0, (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]); (("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), 0, (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]); (("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), 0, (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]); (("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), 0, (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]); (("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), 0, (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]); (("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), 0, (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]); (("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), 0, (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]); (("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), 0, (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]); (("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), 0, ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), 0, (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]); (("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), 0, (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]); (("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), 0, (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]); (("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), 0, ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), 0, (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]); (("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), 0, ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), 0, (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]); (("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), 0, (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]); (("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), 0, ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), 0, (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]); (("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), 0, ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), 0, (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]); (("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), 0, ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), 0, (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]); (("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), 0, (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]); (("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), 0, (0), 0, (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])]
("DEBUG:constructor_declaration:", ("Pexp_ident", (("test/test.ml", 103, 3546, 3550), ("test/test.ml", 103, 3546, 3560), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 103, 3546, 3548), ("test/test.ml", 103, 3546, 3577), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Identifiers such as [x] and [M.x] ", (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0)), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0), 0, 0)], (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))]), (("test/test.ml", 103, 3546, 3579), ("test/test.ml", 103, 3546, 3619), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()

DEBUG2B:| Pexp_ident (longident_loc0) -> (process_types ((process_longident_loc longident_loc0)))
("DEBUG:constructor_declaration:", ("Pexp_constant", (("test/test.ml", 104, 3620, 3624), ("test/test.ml", 104, 3620, 3637), 0)), "vars", 0, "args", ([(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 104, 3620, 3622), ("test/test.ml", 104, 3620, 3649), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions constant such as [1], ['a'], [\"true\"], [1.0], [1l], [1L],\n          [1n] ", (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0)), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0), 0, 0)], (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))]), (("test/test.ml", 105, 3650, 3656), ("test/test.ml", 106, 3730, 3747), 0))])
DEBUG2A:let process_constant ( aconstant0:constant)=()

DEBUG2B:| Pexp_constant (constant0) -> (process_types ((process_constant constant0)))
("DEBUG:constructor_declaration:", ("Pexp_let", (("test/test.ml", 107, 3748, 3752), ("test/test.ml", 107, 3748, 3760), 0)), "vars", 0, "args", ([(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 107, 3748, 3750), ("test/test.ml", 107, 3748, 3806), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_let(flag, \\[(P1,E1) ; ... ; (Pn,En)\\], E)] represents:\n\n          - [let P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Nonrecursive} [Nonrecursive]},\n          - [let rec P1 = E1 and ... and Pn = EN in E] when [flag] is\n            {{!Asttypes.rec_flag.Recursive} [Recursive]}. ", (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0)), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0), 0, 0)], (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))]), (("test/test.ml", 108, 3807, 3813), ("test/test.ml", 113, 4079, 4139), 0))])
DEBUG2A:let process_rec_flag ( arec_flag0:rec_flag)=()
 let process_list ( alist1:list)=()
 let process_expression ( aexpression2:expression)=()

DEBUG2B:| Pexp_let (rec_flag0,list1,expression2) -> (process_types ((process_rec_flag rec_flag0),(process_list list1),(process_expression expression2)))
("DEBUG:constructor_declaration:", ("Pexp_function", (("test/test.ml", 114, 4140, 4144), ("test/test.ml", 114, 4140, 4157), 0)), "vars", 0, "args", ([(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 114, 4140, 4142), ("test/test.ml", 114, 4140, 4166), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [function P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0)), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0), 0, 0)], (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))]), (("test/test.ml", 114, 4140, 4168), ("test/test.ml", 114, 4140, 4211), 0))])
DEBUG2A:let process_cases ( acases0:cases)=()

DEBUG2B:| Pexp_function (cases0) -> (process_types ((process_cases cases0)))
("DEBUG:constructor_declaration:", ("Pexp_fun", (("test/test.ml", 115, 4212, 4216), ("test/test.ml", 115, 4212, 4224), 0)), "vars", 0, "args", ([(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 115, 4212, 4214), ("test/test.ml", 115, 4212, 4280), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_fun(lbl, exp0, P, E1)] represents:\n\n          - [fun P -> E1] when [lbl] is {{!Asttypes.arg_label.Nolabel}\n            [Nolabel]} and [exp0] is [None]\n          - [fun ~l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Labelled}\n            [Labelled l]} and [exp0] is [None]\n          - [fun ?l:P -> E1] when [lbl] is {{!Asttypes.arg_label.Optional}\n            [Optional l]} and [exp0] is [None]\n          - [fun ?l:(P = E0) -> E1] when [lbl] is\n            {{!Asttypes.arg_label.Optional} [Optional l]} and [exp0] is\n            [Some E0]\n\n          Notes:\n\n          - If [E0] is provided, only {{!Asttypes.arg_label.Optional}\n            [Optional]} is allowed.\n          - [fun P1 P2 .. Pn -> E1] is represented as nested\n            {{!expression_desc.Pexp_fun} [Pexp_fun]}.\n          - [let f P = E] is represented using {{!expression_desc.Pexp_fun}\n            [Pexp_fun]}. ", (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0)), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0), 0, 0)], (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))]), (("test/test.ml", 116, 4281, 4287), ("test/test.ml", 135, 5152, 5179), 0))])
DEBUG2A:let process_arg_label ( aarg_label0:arg_label)=()
 let process_option ( aoption1:option)=()
 let process_pattern ( apattern2:pattern)=()
 let process_expression ( aexpression3:expression)=()

DEBUG2B:| Pexp_fun (arg_label0,option1,pattern2,expression3) -> (process_types ((process_arg_label arg_label0),(process_option option1),(process_pattern pattern2),(process_expression expression3)))
("DEBUG:constructor_declaration:", ("Pexp_apply", (("test/test.ml", 136, 5180, 5184), ("test/test.ml", 136, 5180, 5194), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 136, 5180, 5182), ("test/test.ml", 136, 5180, 5240), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_apply(E0, \\[(l1, E1) ; ... ; (ln, En)\\])] represents\n          [E0 ~l1:E1 ... ~ln:En]\n\n          [li] can be {{!Asttypes.arg_label.Nolabel} [Nolabel]} (non labeled\n          argument), {{!Asttypes.arg_label.Labelled} [Labelled]} (labelled\n          arguments) or {{!Asttypes.arg_label.Optional} [Optional]} (optional\n          argument).\n\n          Invariant: [n > 0] ", (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0)), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0), 0, 0)], (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))]), (("test/test.ml", 137, 5241, 5247), ("test/test.ml", 145, 5596, 5627), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_list ( alist1:list)=()

DEBUG2B:| Pexp_apply (expression0,list1) -> (process_types ((process_expression expression0),(process_list list1)))
("DEBUG:constructor_declaration:", ("Pexp_match", (("test/test.ml", 146, 5628, 5632), ("test/test.ml", 146, 5628, 5642), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 146, 5628, 5630), ("test/test.ml", 146, 5628, 5664), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [match E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0)), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0), 0, 0)], (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))]), (("test/test.ml", 147, 5665, 5671), ("test/test.ml", 147, 5665, 5719), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_cases ( acases1:cases)=()

DEBUG2B:| Pexp_match (expression0,cases1) -> (process_types ((process_expression expression0),(process_cases cases1)))
("DEBUG:constructor_declaration:", ("Pexp_try", (("test/test.ml", 148, 5720, 5724), ("test/test.ml", 148, 5720, 5732), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 148, 5720, 5722), ("test/test.ml", 148, 5720, 5754), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [try E0 with P1 -> E1 | ... | Pn -> En] ", (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0)), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0), 0, 0)], (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))]), (("test/test.ml", 149, 5755, 5761), ("test/test.ml", 149, 5755, 5807), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_cases ( acases1:cases)=()

DEBUG2B:| Pexp_try (expression0,cases1) -> (process_types ((process_expression expression0),(process_cases cases1)))
("DEBUG:constructor_declaration:", ("Pexp_tuple", (("test/test.ml", 150, 5808, 5812), ("test/test.ml", 150, 5808, 5822), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 150, 5808, 5810), ("test/test.ml", 150, 5808, 5841), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Expressions [(E1, ..., En)]\n\n          Invariant: [n >= 2] ", (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0)), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0), 0, 0)], (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))]), (("test/test.ml", 151, 5842, 5848), ("test/test.ml", 153, 5881, 5913), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Pexp_tuple (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Pexp_construct", (("test/test.ml", 154, 5914, 5918), ("test/test.ml", 154, 5914, 5932), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 154, 5914, 5916), ("test/test.ml", 154, 5914, 5969), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_construct(C, exp)] represents:\n\n          - [C] when [exp] is [None],\n          - [C E] when [exp] is [Some E],\n          - [C (E1, ..., En)] when [exp] is [Some (Pexp_tuple\\[E1;...;En\\])] ", (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0)), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0), 0, 0)], (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))]), (("test/test.ml", 155, 5970, 5976), ("test/test.ml", 159, 6098, 6177), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Pexp_construct (longident_loc0,option1) -> (process_types ((process_longident_loc longident_loc0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Pexp_variant", (("test/test.ml", 160, 6178, 6182), ("test/test.ml", 160, 6178, 6194), 0)), "vars", 0, "args", ([(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 160, 6178, 6180), ("test/test.ml", 160, 6178, 6223), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_variant(`A, exp)] represents\n\n          - [`A] when [exp] is [None]\n          - [`A E] when [exp] is [Some E] ", (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0)), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0), 0, 0)], (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))]), (("test/test.ml", 161, 6224, 6230), ("test/test.ml", 164, 6308, 6352), 0))])
DEBUG2A:let process_label ( alabel0:label)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Pexp_variant (label0,option1) -> (process_types ((process_label label0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Pexp_record", (("test/test.ml", 165, 6353, 6357), ("test/test.ml", 165, 6353, 6368), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 165, 6353, 6355), ("test/test.ml", 165, 6353, 6425), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_record(\\[(l1,P1) ; ... ; (ln,Pn)\\], exp0)] represents\n\n          - [{ l1=P1; ...; ln=Pn }] when [exp0] is [None]\n          - [{ E0 with l1=P1; ...; ln=Pn }] when [exp0] is [Some E0]\n\n          Invariant: [n > 0] ", (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0)), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0), 0, 0)], (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))]), (("test/test.ml", 166, 6426, 6432), ("test/test.ml", 171, 6625, 6656), 0))])
DEBUG2A:let process_list ( alist0:list)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Pexp_record (list0,option1) -> (process_types ((process_list list0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Pexp_field", (("test/test.ml", 172, 6657, 6661), ("test/test.ml", 172, 6657, 6671), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 172, 6657, 6659), ("test/test.ml", 172, 6657, 6701), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E.l] ", (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0)), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0), 0, 0)], (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))]), (("test/test.ml", 172, 6657, 6703), ("test/test.ml", 172, 6657, 6715), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_longident_loc ( alongident_loc1:longident_loc)=()

DEBUG2B:| Pexp_field (expression0,longident_loc1) -> (process_types ((process_expression expression0),(process_longident_loc longident_loc1)))
("DEBUG:constructor_declaration:", ("Pexp_setfield", (("test/test.ml", 173, 6716, 6720), ("test/test.ml", 173, 6716, 6733), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 173, 6716, 6718), ("test/test.ml", 173, 6716, 6776), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1.l <- E2] ", (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0)), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0), 0, 0)], (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))]), (("test/test.ml", 174, 6777, 6783), ("test/test.ml", 174, 6777, 6802), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_longident_loc ( alongident_loc1:longident_loc)=()
 let process_expression ( aexpression2:expression)=()

DEBUG2B:| Pexp_setfield (expression0,longident_loc1,expression2) -> (process_types ((process_expression expression0),(process_longident_loc longident_loc1),(process_expression expression2)))
("DEBUG:constructor_declaration:", ("Pexp_array", (("test/test.ml", 175, 6803, 6807), ("test/test.ml", 175, 6803, 6817), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 175, 6803, 6805), ("test/test.ml", 175, 6803, 6836), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[| E1; ...; En |\\]] ", (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0)), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0), 0, 0)], (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))]), (("test/test.ml", 175, 6803, 6838), ("test/test.ml", 175, 6803, 6866), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Pexp_array (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Pexp_ifthenelse", (("test/test.ml", 176, 6867, 6871), ("test/test.ml", 176, 6867, 6886), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 176, 6867, 6869), ("test/test.ml", 176, 6867, 6933), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [if E1 then E2 else E3] ", (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0)), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0), 0, 0)], (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))]), (("test/test.ml", 177, 6934, 6940), ("test/test.ml", 177, 6934, 6970), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_expression ( aexpression1:expression)=()
 let process_option ( aoption2:option)=()

DEBUG2B:| Pexp_ifthenelse (expression0,expression1,option2) -> (process_types ((process_expression expression0),(process_expression expression1),(process_option option2)))
("DEBUG:constructor_declaration:", ("Pexp_sequence", (("test/test.ml", 178, 6971, 6975), ("test/test.ml", 178, 6971, 6988), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 178, 6971, 6973), ("test/test.ml", 178, 6971, 7015), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E1; E2] ", (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0)), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0), 0, 0)], (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))]), (("test/test.ml", 178, 6971, 7017), ("test/test.ml", 178, 6971, 7032), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_sequence (expression0,expression1) -> (process_types ((process_expression expression0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_while", (("test/test.ml", 179, 7033, 7037), ("test/test.ml", 179, 7033, 7047), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 179, 7033, 7035), ("test/test.ml", 179, 7033, 7074), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [while E1 do E2 done] ", (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0)), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0), 0, 0)], (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))]), (("test/test.ml", 179, 7033, 7076), ("test/test.ml", 179, 7033, 7104), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_while (expression0,expression1) -> (process_types ((process_expression expression0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_for", (("test/test.ml", 180, 7105, 7109), ("test/test.ml", 180, 7105, 7117), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 180, 7105, 7107), ("test/test.ml", 180, 7105, 7184), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_for(i, E1, E2, direction, E3)] represents:\n\n          - [for i = E1 to E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Upto} [Upto]}\n          - [for i = E1 downto E2 do E3 done] when [direction] is\n            {{!Asttypes.direction_flag.Downto} [Downto]} ", (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0)), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0), 0, 0)], (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))]), (("test/test.ml", 181, 7185, 7191), ("test/test.ml", 186, 7426, 7485), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()
 let process_expression ( aexpression1:expression)=()
 let process_expression ( aexpression2:expression)=()
 let process_direction_flag ( adirection_flag3:direction_flag)=()
 let process_expression ( aexpression4:expression)=()

DEBUG2B:| Pexp_for (pattern0,expression1,expression2,direction_flag3,expression4) -> (process_types ((process_pattern pattern0),(process_expression expression1),(process_expression expression2),(process_direction_flag direction_flag3),(process_expression expression4)))
("DEBUG:constructor_declaration:", ("Pexp_constraint", (("test/test.ml", 187, 7486, 7490), ("test/test.ml", 187, 7486, 7505), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 187, 7486, 7488), ("test/test.ml", 187, 7486, 7531), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(E : T)] ", (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0)), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0), 0, 0)], (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))]), (("test/test.ml", 187, 7486, 7533), ("test/test.ml", 187, 7486, 7549), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_core_type ( acore_type1:core_type)=()

DEBUG2B:| Pexp_constraint (expression0,core_type1) -> (process_types ((process_expression expression0),(process_core_type core_type1)))
("DEBUG:constructor_declaration:", ("Pexp_coerce", (("test/test.ml", 188, 7550, 7554), ("test/test.ml", 188, 7550, 7565), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 188, 7550, 7552), ("test/test.ml", 188, 7550, 7610), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Pexp_coerce(E, from, T)] represents\n\n          - [(E :> T)] when [from] is [None],\n          - [(E : T0 :> T)] when [from] is [Some T0]. ", (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0)), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0), 0, 0)], (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))]), (("test/test.ml", 189, 7611, 7617), ("test/test.ml", 192, 7705, 7761), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_option ( aoption1:option)=()
 let process_core_type ( acore_type2:core_type)=()

DEBUG2B:| Pexp_coerce (expression0,option1,core_type2) -> (process_types ((process_expression expression0),(process_option option1),(process_core_type core_type2)))
("DEBUG:constructor_declaration:", ("Pexp_send", (("test/test.ml", 193, 7762, 7766), ("test/test.ml", 193, 7762, 7775), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 193, 7762, 7764), ("test/test.ml", 193, 7762, 7801), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [E # m] ", (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0)), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0), 0, 0)], (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))]), (("test/test.ml", 193, 7762, 7803), ("test/test.ml", 193, 7762, 7817), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_loc ( aloc1:loc)=()

DEBUG2B:| Pexp_send (expression0,loc1) -> (process_types ((process_expression expression0),(process_loc loc1)))
("DEBUG:constructor_declaration:", ("Pexp_new", (("test/test.ml", 194, 7818, 7822), ("test/test.ml", 194, 7818, 7830), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 194, 7818, 7820), ("test/test.ml", 194, 7818, 7847), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [new M.c] ", (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0)), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0), 0, 0)], (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))]), (("test/test.ml", 194, 7818, 7849), ("test/test.ml", 194, 7818, 7865), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()

DEBUG2B:| Pexp_new (longident_loc0) -> (process_types ((process_longident_loc longident_loc0)))
("DEBUG:constructor_declaration:", ("Pexp_setinstvar", (("test/test.ml", 195, 7866, 7870), ("test/test.ml", 195, 7866, 7885), 0)), "vars", 0, "args", ([(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 195, 7866, 7868), ("test/test.ml", 195, 7866, 7911), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [x <- 2] ", (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0)), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0), 0, 0)], (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))]), (("test/test.ml", 195, 7866, 7913), ("test/test.ml", 195, 7866, 7928), 0))])
DEBUG2A:let process_loc ( aloc0:loc)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_setinstvar (loc0,expression1) -> (process_types ((process_loc loc0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_override", (("test/test.ml", 196, 7929, 7933), ("test/test.ml", 196, 7929, 7946), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 196, 7929, 7931), ("test/test.ml", 196, 7929, 7979), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [{< x1 = E1; ...; xn = En >}] ", (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0)), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0), 0, 0)], (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))]), (("test/test.ml", 197, 7980, 7986), ("test/test.ml", 197, 7980, 8022), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Pexp_override (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Pexp_letmodule", (("test/test.ml", 198, 8023, 8027), ("test/test.ml", 198, 8023, 8041), 0)), "vars", 0, "args", ([(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 198, 8023, 8025), ("test/test.ml", 198, 8023, 8089), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let module M = ME in E] ", (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0)), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0), 0, 0)], (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))]), (("test/test.ml", 199, 8090, 8096), ("test/test.ml", 199, 8090, 8127), 0))])
DEBUG2A:let process_loc ( aloc0:loc)=()
 let process_module_expr ( amodule_expr1:module_expr)=()
 let process_expression ( aexpression2:expression)=()

DEBUG2B:| Pexp_letmodule (loc0,module_expr1,expression2) -> (process_types ((process_loc loc0),(process_module_expr module_expr1),(process_expression expression2)))
("DEBUG:constructor_declaration:", ("Pexp_letexception", (("test/test.ml", 200, 8128, 8132), ("test/test.ml", 200, 8128, 8149), 0)), "vars", 0, "args", ([(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 200, 8128, 8130), ("test/test.ml", 200, 8128, 8187), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [let exception C in E] ", (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0)), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0), 0, 0)], (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))]), (("test/test.ml", 201, 8188, 8194), ("test/test.ml", 201, 8188, 8223), 0))])
DEBUG2A:let process_extension_constructor ( aextension_constructor0:extension_constructor)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_letexception (extension_constructor0,expression1) -> (process_types ((process_extension_constructor extension_constructor0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_assert", (("test/test.ml", 202, 8224, 8228), ("test/test.ml", 202, 8224, 8239), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 202, 8224, 8226), ("test/test.ml", 202, 8224, 8253), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [assert E].\n\n          Note: [assert false] is treated in a special way by the type-checker. ", (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0)), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0), 0, 0)], (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))]), (("test/test.ml", 203, 8254, 8260), ("test/test.ml", 205, 8277, 8359), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()

DEBUG2B:| Pexp_assert (expression0) -> (process_types ((process_expression expression0)))
("DEBUG:constructor_declaration:", ("Pexp_lazy", (("test/test.ml", 206, 8360, 8364), ("test/test.ml", 206, 8360, 8373), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 206, 8360, 8362), ("test/test.ml", 206, 8360, 8387), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [lazy E] ", (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0)), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0), 0, 0)], (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))]), (("test/test.ml", 206, 8360, 8389), ("test/test.ml", 206, 8360, 8404), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()

DEBUG2B:| Pexp_lazy (expression0) -> (process_types ((process_expression expression0)))
("DEBUG:constructor_declaration:", ("Pexp_poly", (("test/test.ml", 207, 8405, 8409), ("test/test.ml", 207, 8405, 8418), 0)), "vars", 0, "args", ([(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 207, 8405, 8407), ("test/test.ml", 207, 8405, 8451), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Used for method bodies.\n\n          Can only be used as the expression under\n          {{!class_field_kind.Cfk_concrete} [Cfk_concrete]} for methods (not\n          values). ", (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0)), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0), 0, 0)], (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))]), (("test/test.ml", 208, 8452, 8458), ("test/test.ml", 212, 8615, 8636), 0))])
DEBUG2A:let process_expression ( aexpression0:expression)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Pexp_poly (expression0,option1) -> (process_types ((process_expression expression0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Pexp_object", (("test/test.ml", 213, 8637, 8641), ("test/test.ml", 213, 8637, 8652), 0)), "vars", 0, "args", ([(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 213, 8637, 8639), ("test/test.ml", 213, 8637, 8671), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [object ... end] ", (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0)), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0), 0, 0)], (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))]), (("test/test.ml", 213, 8637, 8673), ("test/test.ml", 213, 8637, 8696), 0))])
DEBUG2A:let process_class_structure ( aclass_structure0:class_structure)=()

DEBUG2B:| Pexp_object (class_structure0) -> (process_types ((process_class_structure class_structure0)))
("DEBUG:constructor_declaration:", ("Pexp_newtype", (("test/test.ml", 214, 8697, 8701), ("test/test.ml", 214, 8697, 8713), 0)), "vars", 0, "args", ([(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 214, 8697, 8699), ("test/test.ml", 214, 8697, 8740), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [fun (type t) -> E] ", (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0)), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0), 0, 0)], (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))]), (("test/test.ml", 214, 8697, 8742), ("test/test.ml", 214, 8697, 8768), 0))])
DEBUG2A:let process_loc ( aloc0:loc)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_newtype (loc0,expression1) -> (process_types ((process_loc loc0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_pack", (("test/test.ml", 215, 8769, 8773), ("test/test.ml", 215, 8769, 8782), 0)), "vars", 0, "args", ([(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 215, 8769, 8771), ("test/test.ml", 215, 8769, 8797), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [(module ME)].\n\n          [(module ME : S)] is represented as\n          [Pexp_constraint(Pexp_pack ME, Ptyp_package S)] ", (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0)), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0), 0, 0)], (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))]), (("test/test.ml", 216, 8798, 8804), ("test/test.ml", 219, 8870, 8930), 0))])
DEBUG2A:let process_module_expr ( amodule_expr0:module_expr)=()

DEBUG2B:| Pexp_pack (module_expr0) -> (process_types ((process_module_expr module_expr0)))
("DEBUG:constructor_declaration:", ("Pexp_open", (("test/test.ml", 220, 8931, 8935), ("test/test.ml", 220, 8931, 8944), 0)), "vars", 0, "args", ([(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 220, 8931, 8933), ("test/test.ml", 220, 8931, 8977), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [M.(E)]\n          - [let open M in E]\n          - [let open! M in E] ", (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0)), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0), 0, 0)], (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))]), (("test/test.ml", 221, 8978, 8984), ("test/test.ml", 223, 9028, 9061), 0))])
DEBUG2A:let process_open_declaration ( aopen_declaration0:open_declaration)=()
 let process_expression ( aexpression1:expression)=()

DEBUG2B:| Pexp_open (open_declaration0,expression1) -> (process_types ((process_open_declaration open_declaration0),(process_expression expression1)))
("DEBUG:constructor_declaration:", ("Pexp_letop", (("test/test.ml", 224, 9062, 9066), ("test/test.ml", 224, 9062, 9076), 0)), "vars", 0, "args", ([(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 224, 9062, 9064), ("test/test.ml", 224, 9062, 9085), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" - [let* P = E0 in E1]\n          - [let* P0 = E00 and* P1 = E01 in E1] ", (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0)), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0), 0, 0)], (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))]), (("test/test.ml", 225, 9086, 9092), ("test/test.ml", 226, 9118, 9168), 0))])
DEBUG2A:let process_letop ( aletop0:letop)=()

DEBUG2B:| Pexp_letop (letop0) -> (process_types ((process_letop letop0)))
("DEBUG:constructor_declaration:", ("Pexp_extension", (("test/test.ml", 227, 9169, 9173), ("test/test.ml", 227, 9169, 9187), 0)), "vars", 0, "args", ([(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 227, 9169, 9171), ("test/test.ml", 227, 9169, 9200), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [\\[%id\\]] ", (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0)), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0), 0, 0)], (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))]), (("test/test.ml", 227, 9169, 9202), ("test/test.ml", 227, 9169, 9218), 0))])
DEBUG2A:let process_extension ( aextension0:extension)=()

DEBUG2B:| Pexp_extension (extension0) -> (process_types ((process_extension extension0)))
("DEBUG:constructor_declaration:", ("Pexp_unreachable", (("test/test.ml", 228, 9219, 9223), ("test/test.ml", 228, 9219, 9239), 0)), "vars", 0, "args", (0), "res", 0, "loc", (("test/test.ml", 228, 9219, 9221), ("test/test.ml", 228, 9219, 9239), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [.] ", (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0)), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0), 0, 0)], (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))]), (("test/test.ml", 228, 9219, 9241), ("test/test.ml", 228, 9219, 9251), 0))])
DEBUG2A:
DEBUG2B:| Pexp_unreachable () -> (process_types ())
["DEBUG:Pcstr_tuple:"]
DEBUG:constructor_declaration_new: constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)]
DEBUG:Ptyp_constr1 'extension' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), "types", 0, "context", 0, "id1", "extension")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("extension"), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0)), 0), (("test/test.ml", 227, 9169, 9191), ("test/test.ml", 227, 9169, 9200), 0), 0, 0)], "Ptyp_constr:\"extension\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)]
DEBUG:Ptyp_constr1 'letop' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), "types", 0, "context", 0, "id1", "letop")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("letop"), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0)), 0), (("test/test.ml", 224, 9062, 9080), ("test/test.ml", 224, 9062, 9085), 0), 0, 0)], "Ptyp_constr:\"letop\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0)), 0), (("test/test.ml", 220, 8931, 8967), ("test/test.ml", 220, 8931, 8977), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'open_declaration' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), "types", 0, "context", 0, "id1", "open_declaration")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("open_declaration"), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0)), 0), (("test/test.ml", 220, 8931, 8948), ("test/test.ml", 220, 8931, 8964), 0), 0, 0)], "Ptyp_constr:\"open_declaration\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)]
DEBUG:Ptyp_constr1 'module_expr' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), "types", 0, "context", 0, "id1", "module_expr")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("module_expr"), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0)), 0), (("test/test.ml", 215, 8769, 8786), ("test/test.ml", 215, 8769, 8797), 0), 0, 0)], "Ptyp_constr:\"module_expr\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0)), 0), (("test/test.ml", 214, 8697, 8730), ("test/test.ml", 214, 8697, 8740), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 214, 8697, 8724), ("test/test.ml", 214, 8697, 8727), 0)), [(Tag3 ((("string"), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0)), 0), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8723), 0), 0, 0)]), (("test/test.ml", 214, 8697, 8717), ("test/test.ml", 214, 8697, 8727), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)]
DEBUG:Ptyp_constr1 'class_structure' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), "types", 0, "context", 0, "id1", "class_structure")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("class_structure"), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0)), 0), (("test/test.ml", 213, 8637, 8656), ("test/test.ml", 213, 8637, 8671), 0), 0, 0)], "Ptyp_constr:\"class_structure\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), "types", [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 207, 8405, 8445), ("test/test.ml", 207, 8405, 8451), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0)), 0), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8444), 0), 0, 0)]), (("test/test.ml", 207, 8405, 8435), ("test/test.ml", 207, 8405, 8451), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"core_type\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0)), 0), (("test/test.ml", 207, 8405, 8422), ("test/test.ml", 207, 8405, 8432), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0)), 0), (("test/test.ml", 206, 8360, 8377), ("test/test.ml", 206, 8360, 8387), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0)), 0), (("test/test.ml", 202, 8224, 8243), ("test/test.ml", 202, 8224, 8253), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0)), 0), (("test/test.ml", 200, 8128, 8177), ("test/test.ml", 200, 8128, 8187), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'extension_constructor' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), "types", 0, "context", 0, "id1", "extension_constructor")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("extension_constructor"), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0)), 0), (("test/test.ml", 200, 8128, 8153), ("test/test.ml", 200, 8128, 8174), 0), 0, 0)], "Ptyp_constr:\"extension_constructor\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0); (Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0)), 0), (("test/test.ml", 198, 8023, 8079), ("test/test.ml", 198, 8023, 8089), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'module_expr' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), "types", 0, "context", 0, "id1", "module_expr")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("module_expr"), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0)), 0), (("test/test.ml", 198, 8023, 8065), ("test/test.ml", 198, 8023, 8076), 0), 0, 0)], "Ptyp_constr:\"module_expr\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), "types", [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 198, 8023, 8059), ("test/test.ml", 198, 8023, 8062), 0)), [(Tag3 ((("option"), (("test/test.ml", 198, 8023, 8052), ("test/test.ml", 198, 8023, 8058), 0)), [(Tag3 ((("string"), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0)), 0), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8051), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8058), 0), 0, 0)]), (("test/test.ml", 198, 8023, 8045), ("test/test.ml", 198, 8023, 8062), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)]
["DEBUG:Ptyp_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), "types", [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:")
("DEBUG:core_type.ptyp_desc:", [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)], "Ptyp_tupleptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), "types", [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 196, 7929, 7975), ("test/test.ml", 196, 7929, 7979), 0)), [(Tag2 ([(Tag3 ((("loc"), (("test/test.ml", 196, 7929, 7957), ("test/test.ml", 196, 7929, 7960), 0)), [(Tag3 ((("label"), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0)), 0), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7956), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7960), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0)), 0), (("test/test.ml", 196, 7929, 7963), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7951), ("test/test.ml", 196, 7929, 7973), 0), 0, 0)]), (("test/test.ml", 196, 7929, 7950), ("test/test.ml", 196, 7929, 7979), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0)), 0), (("test/test.ml", 195, 7866, 7901), ("test/test.ml", 195, 7866, 7911), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), "types", [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 195, 7866, 7895), ("test/test.ml", 195, 7866, 7898), 0)), [(Tag3 ((("label"), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0)), 0), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7894), 0), 0, 0)]), (("test/test.ml", 195, 7866, 7889), ("test/test.ml", 195, 7866, 7898), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)]
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0)), 0), (("test/test.ml", 194, 7818, 7834), ("test/test.ml", 194, 7818, 7847), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)]
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), "types", [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 193, 7762, 7798), ("test/test.ml", 193, 7762, 7801), 0)), [(Tag3 ((("label"), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0)), 0), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7797), 0), 0, 0)]), (("test/test.ml", 193, 7762, 7792), ("test/test.ml", 193, 7762, 7801), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"label\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0)), 0), (("test/test.ml", 193, 7762, 7779), ("test/test.ml", 193, 7762, 7789), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0)), 0), (("test/test.ml", 188, 7550, 7601), ("test/test.ml", 188, 7550, 7610), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), "types", [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 188, 7550, 7592), ("test/test.ml", 188, 7550, 7598), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0)), 0), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7591), 0), 0, 0)]), (("test/test.ml", 188, 7550, 7582), ("test/test.ml", 188, 7550, 7598), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"core_type\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0)), 0), (("test/test.ml", 188, 7550, 7569), ("test/test.ml", 188, 7550, 7579), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0)), 0), (("test/test.ml", 187, 7486, 7522), ("test/test.ml", 187, 7486, 7531), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0)), 0), (("test/test.ml", 187, 7486, 7509), ("test/test.ml", 187, 7486, 7519), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0); (Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0)), 0), (("test/test.ml", 180, 7105, 7174), ("test/test.ml", 180, 7105, 7184), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'direction_flag' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), "types", 0, "context", 0, "id1", "direction_flag")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("direction_flag"), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0)), 0), (("test/test.ml", 180, 7105, 7157), ("test/test.ml", 180, 7105, 7171), 0), 0, 0)], "Ptyp_constr:\"direction_flag\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0)), 0), (("test/test.ml", 180, 7105, 7144), ("test/test.ml", 180, 7105, 7154), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0)), 0), (("test/test.ml", 180, 7105, 7131), ("test/test.ml", 180, 7105, 7141), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0)), 0), (("test/test.ml", 180, 7105, 7121), ("test/test.ml", 180, 7105, 7128), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0)), 0), (("test/test.ml", 179, 7033, 7064), ("test/test.ml", 179, 7033, 7074), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0)), 0), (("test/test.ml", 179, 7033, 7051), ("test/test.ml", 179, 7033, 7061), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0)), 0), (("test/test.ml", 178, 6971, 7005), ("test/test.ml", 178, 6971, 7015), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0)), 0), (("test/test.ml", 178, 6971, 6992), ("test/test.ml", 178, 6971, 7002), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 176, 6867, 6927), ("test/test.ml", 176, 6867, 6933), 0)), [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0)), 0), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6926), 0), 0, 0)]), (("test/test.ml", 176, 6867, 6916), ("test/test.ml", 176, 6867, 6933), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0)), 0), (("test/test.ml", 176, 6867, 6903), ("test/test.ml", 176, 6867, 6913), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0)), 0), (("test/test.ml", 176, 6867, 6890), ("test/test.ml", 176, 6867, 6900), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 175, 6803, 6832), ("test/test.ml", 175, 6803, 6836), 0)), [(Tag3 ((("expression"), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0)), 0), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6831), 0), 0, 0)]), (("test/test.ml", 175, 6803, 6821), ("test/test.ml", 175, 6803, 6836), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0)), 0), (("test/test.ml", 173, 6716, 6766), ("test/test.ml", 173, 6716, 6776), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0)), 0), (("test/test.ml", 173, 6716, 6750), ("test/test.ml", 173, 6716, 6763), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0)), 0), (("test/test.ml", 173, 6716, 6737), ("test/test.ml", 173, 6716, 6747), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0); (Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)]
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0)), 0), (("test/test.ml", 172, 6657, 6688), ("test/test.ml", 172, 6657, 6701), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0)), 0), (("test/test.ml", 172, 6657, 6675), ("test/test.ml", 172, 6657, 6685), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 165, 6353, 6419), ("test/test.ml", 165, 6353, 6425), 0)), [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0)), 0), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6418), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6408), ("test/test.ml", 165, 6353, 6425), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
["DEBUG:Ptyp_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
("DEBUG:core_type.ptyp_desc:", [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)], "Ptyp_tupleptyp_desc:Ptyp_constr:\"longident_loc\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), "types", [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 165, 6353, 6401), ("test/test.ml", 165, 6353, 6405), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0)), 0), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6386), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0)), 0), (("test/test.ml", 165, 6353, 6389), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6373), ("test/test.ml", 165, 6353, 6399), 0), 0, 0)]), (("test/test.ml", 165, 6353, 6372), ("test/test.ml", 165, 6353, 6405), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:\"longident_loc\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 160, 6178, 6217), ("test/test.ml", 160, 6178, 6223), 0)), [(Tag3 ((("expression"), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0)), 0), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6216), 0), 0, 0)]), (("test/test.ml", 160, 6178, 6206), ("test/test.ml", 160, 6178, 6223), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0)), 0), (("test/test.ml", 160, 6178, 6198), ("test/test.ml", 160, 6178, 6203), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 154, 5914, 5963), ("test/test.ml", 154, 5914, 5969), 0)), [(Tag3 ((("expression"), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0)), 0), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5962), 0), 0, 0)]), (("test/test.ml", 154, 5914, 5952), ("test/test.ml", 154, 5914, 5969), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0)), 0), (("test/test.ml", 154, 5914, 5936), ("test/test.ml", 154, 5914, 5949), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 150, 5808, 5837), ("test/test.ml", 150, 5808, 5841), 0)), [(Tag3 ((("expression"), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0)), 0), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5836), 0), 0, 0)]), (("test/test.ml", 150, 5808, 5826), ("test/test.ml", 150, 5808, 5841), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)]
DEBUG:Ptyp_constr1 'cases' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), "types", 0, "context", 0, "id1", "cases")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("cases"), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0)), 0), (("test/test.ml", 148, 5720, 5749), ("test/test.ml", 148, 5720, 5754), 0), 0, 0)], "Ptyp_constr:\"cases\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0)), 0), (("test/test.ml", 148, 5720, 5736), ("test/test.ml", 148, 5720, 5746), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0); (Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)]
DEBUG:Ptyp_constr1 'cases' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), "types", 0, "context", 0, "id1", "cases")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("cases"), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0)), 0), (("test/test.ml", 146, 5628, 5659), ("test/test.ml", 146, 5628, 5664), 0), 0, 0)], "Ptyp_constr:\"cases\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0)), 0), (("test/test.ml", 146, 5628, 5646), ("test/test.ml", 146, 5628, 5656), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)]
["DEBUG:Ptyp_tuple:"; (Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'arg_label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), "types", 0, "context", 0, "id1", "arg_label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0)], "Ptyp_constr:\"arg_label\"->my_process_core_type_list:")
("DEBUG:core_type.ptyp_desc:", [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)], "Ptyp_tupleptyp_desc:Ptyp_constr:\"arg_label\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), "types", [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 136, 5180, 5236), ("test/test.ml", 136, 5180, 5240), 0)), [(Tag2 ([(Tag3 ((("arg_label"), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0)), 0), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5221), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0)), 0), (("test/test.ml", 136, 5180, 5224), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5212), ("test/test.ml", 136, 5180, 5234), 0), 0, 0)]), (("test/test.ml", 136, 5180, 5211), ("test/test.ml", 136, 5180, 5240), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:\"arg_label\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0)), 0), (("test/test.ml", 136, 5180, 5198), ("test/test.ml", 136, 5180, 5208), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0)), 0), (("test/test.ml", 115, 4212, 4270), ("test/test.ml", 115, 4212, 4280), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0)), 0), (("test/test.ml", 115, 4212, 4260), ("test/test.ml", 115, 4212, 4267), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), "types", [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 115, 4212, 4251), ("test/test.ml", 115, 4212, 4257), 0)), [(Tag3 ((("expression"), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0)), 0), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4250), 0), 0, 0)]), (("test/test.ml", 115, 4212, 4240), ("test/test.ml", 115, 4212, 4257), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"expression\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'arg_label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), "types", 0, "context", 0, "id1", "arg_label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("arg_label"), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0)), 0), (("test/test.ml", 115, 4212, 4228), ("test/test.ml", 115, 4212, 4237), 0), 0, 0)], "Ptyp_constr:\"arg_label\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)]
DEBUG:Ptyp_constr1 'cases' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), "types", 0, "context", 0, "id1", "cases")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("cases"), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0)), 0), (("test/test.ml", 114, 4140, 4161), ("test/test.ml", 114, 4140, 4166), 0), 0, 0)], "Ptyp_constr:\"cases\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_function"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0); (Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0); (Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)]
DEBUG:Ptyp_constr1 'expression' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), "types", 0, "context", 0, "id1", "expression")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression"), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0)), 0), (("test/test.ml", 107, 3748, 3796), ("test/test.ml", 107, 3748, 3806), 0), 0, 0)], "Ptyp_constr:\"expression\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'value_binding' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), "types", 0, "context", 0, "id1", "value_binding")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)], "Ptyp_constr:\"value_binding\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"value_binding"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), "types", [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 107, 3748, 3789), ("test/test.ml", 107, 3748, 3793), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0)), 0), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3788), 0), 0, 0)]), (("test/test.ml", 107, 3748, 3775), ("test/test.ml", 107, 3748, 3793), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"value_binding\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'rec_flag' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), "types", 0, "context", 0, "id1", "rec_flag")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("rec_flag"), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0)), 0), (("test/test.ml", 107, 3748, 3764), ("test/test.ml", 107, 3748, 3772), 0), 0, 0)], "Ptyp_constr:\"rec_flag\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_let"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"rec_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"value_binding"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_function"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)]
DEBUG:Ptyp_constr1 'constant' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), "types", 0, "context", 0, "id1", "constant")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("constant"), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0)), 0), (("test/test.ml", 104, 3620, 3641), ("test/test.ml", 104, 3620, 3649), 0), 0, 0)], "Ptyp_constr:\"constant\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_let"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"rec_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"value_binding"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_function"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)]
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0)), 0), (("test/test.ml", 103, 3546, 3564), ("test/test.ml", 103, 3546, 3577), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Pexp_ident"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_let"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"rec_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"value_binding"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_function"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:
("DEBUG:type_decl:", ("pattern_desc", (("test/test.ml", 47, 1153, 1157), ("test/test.ml", 47, 1153, 1169), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", ([(("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "pattern_desc"), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0)), 0), (("test/test.ml", 47, 1153, 1172), ("test/test.ml", 47, 1153, 1194), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 47, 1153, 1153), ("test/test.ml", 100, 3430, 3470), 0))
["DEBUG:Ptype_variant:"; (("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), 0, (0), 0, (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]); (("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), 0, (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]); (("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), 0, (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]); (("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), 0, (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]); (("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), 0, ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), 0, (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]); (("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), 0, (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]); (("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), 0, (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]); (("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), 0, ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), 0, (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]); (("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), 0, (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]); (("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), 0, ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), 0, (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]); (("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), 0, (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]); (("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), 0, (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]); (("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), 0, (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]); (("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), 0, (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]); (("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), 0, ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), 0, (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]); (("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), 0, ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), 0, (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]); (("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), 0, ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), 0, (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]); (("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), 0, ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), 0, (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])]
("DEBUG:constructor_declaration:", ("Ppat_any", (("test/test.ml", 48, 1197, 1201), ("test/test.ml", 48, 1197, 1209), 0)), "vars", 0, "args", (0), "res", 0, "loc", (("test/test.ml", 48, 1197, 1199), ("test/test.ml", 48, 1197, 1209), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" The pattern [_]. ", (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0)), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0), 0, 0)], (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))]), (("test/test.ml", 48, 1197, 1211), ("test/test.ml", 48, 1197, 1234), 0))])
DEBUG2A:
DEBUG2B:| Ppat_any () -> (process_types ())
("DEBUG:constructor_declaration:", ("Ppat_var", (("test/test.ml", 49, 1235, 1239), ("test/test.ml", 49, 1235, 1247), 0)), "vars", 0, "args", ([(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 49, 1235, 1237), ("test/test.ml", 49, 1235, 1261), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" A variable pattern such as [x] ", (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0)), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0), 0, 0)], (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))]), (("test/test.ml", 49, 1235, 1263), ("test/test.ml", 49, 1235, 1300), 0))])
DEBUG2A:let process_loc ( aloc0:loc)=()

DEBUG2B:| Ppat_var (loc0) -> (process_types ((process_loc loc0)))
("DEBUG:constructor_declaration:", ("Ppat_alias", (("test/test.ml", 50, 1301, 1305), ("test/test.ml", 50, 1301, 1315), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 50, 1301, 1303), ("test/test.ml", 50, 1301, 1339), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" An alias pattern such as [P as 'a] ", (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0)), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0), 0, 0)], (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))]), (("test/test.ml", 51, 1340, 1346), ("test/test.ml", 51, 1340, 1387), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()
 let process_loc ( aloc1:loc)=()

DEBUG2B:| Ppat_alias (pattern0,loc1) -> (process_types ((process_pattern pattern0),(process_loc loc1)))
("DEBUG:constructor_declaration:", ("Ppat_constant", (("test/test.ml", 52, 1388, 1392), ("test/test.ml", 52, 1388, 1405), 0)), "vars", 0, "args", ([(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 52, 1388, 1390), ("test/test.ml", 52, 1388, 1417), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as [1], ['a'], [\"true\"], [1.0], [1l], [1L], [1n] ", (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0)), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0), 0, 0)], (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))]), (("test/test.ml", 53, 1418, 1424), ("test/test.ml", 53, 1418, 1493), 0))])
DEBUG2A:let process_constant ( aconstant0:constant)=()

DEBUG2B:| Ppat_constant (constant0) -> (process_types ((process_constant constant0)))
("DEBUG:constructor_declaration:", ("Ppat_interval", (("test/test.ml", 54, 1494, 1498), ("test/test.ml", 54, 1494, 1511), 0)), "vars", 0, "args", ([(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 54, 1494, 1496), ("test/test.ml", 54, 1494, 1534), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns such as ['a'..'z'].\n\n          Other forms of interval are recognized by the parser but rejected by\n          the type-checker. ", (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0)), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0), 0, 0)], (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))]), (("test/test.ml", 55, 1535, 1541), ("test/test.ml", 58, 1654, 1684), 0))])
DEBUG2A:let process_constant ( aconstant0:constant)=()
 let process_constant ( aconstant1:constant)=()

DEBUG2B:| Ppat_interval (constant0,constant1) -> (process_types ((process_constant constant0),(process_constant constant1)))
("DEBUG:constructor_declaration:", ("Ppat_tuple", (("test/test.ml", 59, 1685, 1689), ("test/test.ml", 59, 1685, 1699), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 59, 1685, 1687), ("test/test.ml", 59, 1685, 1715), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Patterns [(P1, ..., Pn)].\n\n          Invariant: [n >= 2] ", (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0)), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0), 0, 0)], (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))]), (("test/test.ml", 60, 1716, 1722), ("test/test.ml", 62, 1753, 1785), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Ppat_tuple (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Ppat_construct", (("test/test.ml", 63, 1786, 1790), ("test/test.ml", 63, 1786, 1804), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 63, 1786, 1788), ("test/test.ml", 63, 1786, 1858), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_construct(C, args)] represents:\n\n          - [C] when [args] is [None],\n          - [C P] when [args] is [Some (\\[\\], P)]\n          - [C (P1, ..., Pn)] when [args] is\n            [Some (\\[\\], Ppat_tuple \\[P1; ...; Pn\\])]\n          - [C (type a b) P] when [args] is [Some (\\[a; b\\], P)] ", (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0)), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0), 0, 0)], (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))]), (("test/test.ml", 64, 1859, 1865), ("test/test.ml", 70, 2096, 2163), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Ppat_construct (longident_loc0,option1) -> (process_types ((process_longident_loc longident_loc0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Ppat_variant", (("test/test.ml", 71, 2164, 2168), ("test/test.ml", 71, 2164, 2180), 0)), "vars", 0, "args", ([(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 71, 2164, 2166), ("test/test.ml", 71, 2164, 2206), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_variant(`A, pat)] represents:\n\n          - [`A] when [pat] is [None],\n          - [`A P] when [pat] is [Some P] ", (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0)), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0), 0, 0)], (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))]), (("test/test.ml", 72, 2207, 2213), ("test/test.ml", 75, 2293, 2337), 0))])
DEBUG2A:let process_label ( alabel0:label)=()
 let process_option ( aoption1:option)=()

DEBUG2B:| Ppat_variant (label0,option1) -> (process_types ((process_label label0),(process_option option1)))
("DEBUG:constructor_declaration:", ("Ppat_record", (("test/test.ml", 76, 2338, 2342), ("test/test.ml", 76, 2338, 2353), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 76, 2338, 2340), ("test/test.ml", 76, 2338, 2401), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_record(\\[(l1, P1) ; ... ; (ln, Pn)\\], flag)] represents:\n\n          - [{ l1=P1; ...; ln=Pn }] when [flag] is\n            {{!Asttypes.closed_flag.Closed} [Closed]}\n          - [{ l1=P1; ...; ln=Pn; _}] when [flag] is\n            {{!Asttypes.closed_flag.Open} [Open]}\n\n          Invariant: [n > 0] ", (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0)), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0), 0, 0)], (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))]), (("test/test.ml", 77, 2402, 2408), ("test/test.ml", 84, 2685, 2716), 0))])
DEBUG2A:let process_list ( alist0:list)=()
 let process_closed_flag ( aclosed_flag1:closed_flag)=()

DEBUG2B:| Ppat_record (list0,closed_flag1) -> (process_types ((process_list list0),(process_closed_flag closed_flag1)))
("DEBUG:constructor_declaration:", ("Ppat_array", (("test/test.ml", 85, 2717, 2721), ("test/test.ml", 85, 2717, 2731), 0)), "vars", 0, "args", ([(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 85, 2717, 2719), ("test/test.ml", 85, 2717, 2747), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[| P1; ...; Pn |\\]] ", (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0)), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0), 0, 0)], (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))]), (("test/test.ml", 85, 2717, 2749), ("test/test.ml", 85, 2717, 2785), 0))])
DEBUG2A:let process_list ( alist0:list)=()

DEBUG2B:| Ppat_array (list0) -> (process_types ((process_list list0)))
("DEBUG:constructor_declaration:", ("Ppat_or", (("test/test.ml", 86, 2786, 2790), ("test/test.ml", 86, 2786, 2797), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 86, 2786, 2788), ("test/test.ml", 86, 2786, 2818), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [P1 | P2] ", (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0)), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0), 0, 0)], (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))]), (("test/test.ml", 86, 2786, 2820), ("test/test.ml", 86, 2786, 2844), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()
 let process_pattern ( apattern1:pattern)=()

DEBUG2B:| Ppat_or (pattern0,pattern1) -> (process_types ((process_pattern pattern0),(process_pattern pattern1)))
("DEBUG:constructor_declaration:", ("Ppat_constraint", (("test/test.ml", 87, 2845, 2849), ("test/test.ml", 87, 2845, 2864), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 87, 2845, 2847), ("test/test.ml", 87, 2845, 2887), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [(P : T)] ", (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0)), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0), 0, 0)], (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))]), (("test/test.ml", 87, 2845, 2889), ("test/test.ml", 87, 2845, 2913), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()
 let process_core_type ( acore_type1:core_type)=()

DEBUG2B:| Ppat_constraint (pattern0,core_type1) -> (process_types ((process_pattern pattern0),(process_core_type core_type1)))
("DEBUG:constructor_declaration:", ("Ppat_type", (("test/test.ml", 88, 2914, 2918), ("test/test.ml", 88, 2914, 2927), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 88, 2914, 2916), ("test/test.ml", 88, 2914, 2944), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [#tconst] ", (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0)), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0), 0, 0)], (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))]), (("test/test.ml", 88, 2914, 2946), ("test/test.ml", 88, 2914, 2970), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()

DEBUG2B:| Ppat_type (longident_loc0) -> (process_types ((process_longident_loc longident_loc0)))
("DEBUG:constructor_declaration:", ("Ppat_lazy", (("test/test.ml", 89, 2971, 2975), ("test/test.ml", 89, 2971, 2984), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 89, 2971, 2973), ("test/test.ml", 89, 2971, 2995), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [lazy P] ", (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0)), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0), 0, 0)], (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))]), (("test/test.ml", 89, 2971, 2997), ("test/test.ml", 89, 2971, 3020), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()

DEBUG2B:| Ppat_lazy (pattern0) -> (process_types ((process_pattern pattern0)))
("DEBUG:constructor_declaration:", ("Ppat_unpack", (("test/test.ml", 90, 3021, 3025), ("test/test.ml", 90, 3021, 3036), 0)), "vars", 0, "args", ([(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 90, 3021, 3023), ("test/test.ml", 90, 3021, 3057), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [Ppat_unpack(s)] represents:\n\n          - [(module P)] when [s] is [Some \"P\"]\n          - [(module _)] when [s] is [None]\n\n          Note: [(module P : S)] is represented as\n          [Ppat_constraint(Ppat_unpack(Some \"P\"), Ptyp_package S)] ", (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0)), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0), 0, 0)], (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))]), (("test/test.ml", 91, 3058, 3064), ("test/test.ml", 97, 3242, 3311), 0))])
DEBUG2A:let process_loc ( aloc0:loc)=()

DEBUG2B:| Ppat_unpack (loc0) -> (process_types ((process_loc loc0)))
("DEBUG:constructor_declaration:", ("Ppat_exception", (("test/test.ml", 98, 3312, 3316), ("test/test.ml", 98, 3312, 3330), 0)), "vars", 0, "args", ([(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 98, 3312, 3314), ("test/test.ml", 98, 3312, 3341), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [exception P] ", (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0)), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0), 0, 0)], (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))]), (("test/test.ml", 98, 3312, 3343), ("test/test.ml", 98, 3312, 3371), 0))])
DEBUG2A:let process_pattern ( apattern0:pattern)=()

DEBUG2B:| Ppat_exception (pattern0) -> (process_types ((process_pattern pattern0)))
("DEBUG:constructor_declaration:", ("Ppat_extension", (("test/test.ml", 99, 3372, 3376), ("test/test.ml", 99, 3372, 3390), 0)), "vars", 0, "args", ([(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 99, 3372, 3374), ("test/test.ml", 99, 3372, 3403), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [\\[%id\\]] ", (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0)), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0), 0, 0)], (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))]), (("test/test.ml", 99, 3372, 3405), ("test/test.ml", 99, 3372, 3429), 0))])
DEBUG2A:let process_extension ( aextension0:extension)=()

DEBUG2B:| Ppat_extension (extension0) -> (process_types ((process_extension extension0)))
("DEBUG:constructor_declaration:", ("Ppat_open", (("test/test.ml", 100, 3430, 3434), ("test/test.ml", 100, 3430, 3443), 0)), "vars", 0, "args", ([(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]), "res", 0, "loc", (("test/test.ml", 100, 3430, 3432), ("test/test.ml", 100, 3430, 3470), 0), "attrs", [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" Pattern [M.(P)] ", (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0)), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0), 0, 0)], (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))]), (("test/test.ml", 100, 3430, 3472), ("test/test.ml", 100, 3430, 3494), 0))])
DEBUG2A:let process_longident_loc ( alongident_loc0:longident_loc)=()
 let process_pattern ( apattern1:pattern)=()

DEBUG2B:| Ppat_open (longident_loc0,pattern1) -> (process_types ((process_longident_loc longident_loc0),(process_pattern pattern1)))
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0)), 0), (("test/test.ml", 100, 3430, 3463), ("test/test.ml", 100, 3430, 3470), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0)), 0), (("test/test.ml", 100, 3430, 3447), ("test/test.ml", 100, 3430, 3460), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)]
DEBUG:Ptyp_constr1 'extension' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), "types", 0, "context", 0, "id1", "extension")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("extension"), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0)), 0), (("test/test.ml", 99, 3372, 3394), ("test/test.ml", 99, 3372, 3403), 0), 0, 0)], "Ptyp_constr:\"extension\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0)), 0), (("test/test.ml", 98, 3312, 3334), ("test/test.ml", 98, 3312, 3341), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)]
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), "types", [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 90, 3021, 3054), ("test/test.ml", 90, 3021, 3057), 0)), [(Tag3 ((("option"), (("test/test.ml", 90, 3021, 3047), ("test/test.ml", 90, 3021, 3053), 0)), [(Tag3 ((("string"), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0)), 0), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3046), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3053), 0), 0, 0)]), (("test/test.ml", 90, 3021, 3040), ("test/test.ml", 90, 3021, 3057), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0)), 0), (("test/test.ml", 89, 2971, 2988), ("test/test.ml", 89, 2971, 2995), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)]
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0)), 0), (("test/test.ml", 88, 2914, 2931), ("test/test.ml", 88, 2914, 2944), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0); (Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)]
DEBUG:Ptyp_constr1 'core_type' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), "types", 0, "context", 0, "id1", "core_type")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type"), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0)), 0), (("test/test.ml", 87, 2845, 2878), ("test/test.ml", 87, 2845, 2887), 0), 0, 0)], "Ptyp_constr:\"core_type\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0)), 0), (("test/test.ml", 87, 2845, 2868), ("test/test.ml", 87, 2845, 2875), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0)), 0), (("test/test.ml", 86, 2786, 2811), ("test/test.ml", 86, 2786, 2818), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0)), 0), (("test/test.ml", 86, 2786, 2801), ("test/test.ml", 86, 2786, 2808), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), "types", [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 85, 2717, 2743), ("test/test.ml", 85, 2717, 2747), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0)), 0), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2742), 0), 0, 0)]), (("test/test.ml", 85, 2717, 2735), ("test/test.ml", 85, 2717, 2747), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0); (Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)]
DEBUG:Ptyp_constr1 'closed_flag' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), "types", 0, "context", 0, "id1", "closed_flag")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("closed_flag"), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0)), 0), (("test/test.ml", 76, 2338, 2390), ("test/test.ml", 76, 2338, 2401), 0), 0, 0)], "Ptyp_constr:\"closed_flag\"->my_process_core_type_list:")
["DEBUG:Ptyp_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
("DEBUG:core_type.ptyp_desc:", [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)], "Ptyp_tupleptyp_desc:Ptyp_constr:\"longident_loc\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), "types", [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 76, 2338, 2383), ("test/test.ml", 76, 2338, 2387), 0)), [(Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0)), 0), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2371), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0)), 0), (("test/test.ml", 76, 2338, 2374), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2358), ("test/test.ml", 76, 2338, 2381), 0), 0, 0)]), (("test/test.ml", 76, 2338, 2357), ("test/test.ml", 76, 2338, 2387), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:\"longident_loc\"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), "types", [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 71, 2164, 2200), ("test/test.ml", 71, 2164, 2206), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0)), 0), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2199), 0), 0, 0)]), (("test/test.ml", 71, 2164, 2192), ("test/test.ml", 71, 2164, 2206), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'label' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), "types", 0, "context", 0, "id1", "label")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("label"), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0)), 0), (("test/test.ml", 71, 2164, 2184), ("test/test.ml", 71, 2164, 2189), 0), 0, 0)], "Ptyp_constr:\"label\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0); (Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)]
["DEBUG:Ptyp_tuple:"; (Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), "types", [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
("DEBUG:core_type.ptyp_desc:", [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)], "Ptyp_tupleptyp_desc:Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'option' ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), "types", [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)], "context", 0, "id1", "option")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("option"), (("test/test.ml", 63, 1786, 1852), ("test/test.ml", 63, 1786, 1858), 0)), [(Tag2 ([(Tag3 ((("list"), (("test/test.ml", 63, 1786, 1836), ("test/test.ml", 63, 1786, 1840), 0)), [(Tag3 ((("loc"), (("test/test.ml", 63, 1786, 1832), ("test/test.ml", 63, 1786, 1835), 0)), [(Tag3 ((("string"), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0)), 0), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1831), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1835), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1840), 0), 0, 0); (Tag3 ((("pattern"), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0)), 0), (("test/test.ml", 63, 1786, 1843), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1825), ("test/test.ml", 63, 1786, 1850), 0), 0, 0)]), (("test/test.ml", 63, 1786, 1824), ("test/test.ml", 63, 1786, 1858), 0), 0, 0)], "Ptyp_constr:\"option\"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'longident_loc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), "types", 0, "context", 0, "id1", "longident_loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("longident_loc"), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0)), 0), (("test/test.ml", 63, 1786, 1808), ("test/test.ml", 63, 1786, 1821), 0), 0, 0)], "Ptyp_constr:\"longident_loc\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)]
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'list' ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), "types", [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)], "context", 0, "id1", "list")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("list"), (("test/test.ml", 59, 1685, 1711), ("test/test.ml", 59, 1685, 1715), 0)), [(Tag3 ((("pattern"), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0)), 0), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1710), 0), 0, 0)]), (("test/test.ml", 59, 1685, 1703), ("test/test.ml", 59, 1685, 1715), 0), 0, 0)], "Ptyp_constr:\"list\"->ptyp_desc:Ptyp_constr:\"pattern\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0); (Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)]
DEBUG:Ptyp_constr1 'constant' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), "types", 0, "context", 0, "id1", "constant")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0)), 0), (("test/test.ml", 54, 1494, 1526), ("test/test.ml", 54, 1494, 1534), 0), 0, 0)], "Ptyp_constr:\"constant\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'constant' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), "types", 0, "context", 0, "id1", "constant")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("constant"), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0)), 0), (("test/test.ml", 54, 1494, 1515), ("test/test.ml", 54, 1494, 1523), 0), 0, 0)], "Ptyp_constr:\"constant\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)]
DEBUG:Ptyp_constr1 'constant' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), "types", 0, "context", 0, "id1", "constant")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("constant"), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0)), 0), (("test/test.ml", 52, 1388, 1409), ("test/test.ml", 52, 1388, 1417), 0), 0, 0)], "Ptyp_constr:\"constant\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0); (Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)]
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 50, 1301, 1336), ("test/test.ml", 50, 1301, 1339), 0)), [(Tag3 ((("string"), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0)), 0), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1335), 0), 0, 0)]), (("test/test.ml", 50, 1301, 1329), ("test/test.ml", 50, 1301, 1339), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:Ptyp_constr1 'pattern' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), "types", 0, "context", 0, "id1", "pattern")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern"), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0)), 0), (("test/test.ml", 50, 1301, 1319), ("test/test.ml", 50, 1301, 1326), 0), 0, 0)], "Ptyp_constr:\"pattern\"->my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"; (Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)]
DEBUG:Ptyp_constr1 'string' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), "types", 0, "context", 0, "id1", "string")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)], "Ptyp_constr:\"string\"->my_process_core_type_list:")
DEBUG:Ptyp_constr1 'loc' ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), "types", [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)], "context", 0, "id1", "loc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("loc"), (("test/test.ml", 49, 1235, 1258), ("test/test.ml", 49, 1235, 1261), 0)), [(Tag3 ((("string"), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0)), 0), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1257), 0), 0, 0)]), (("test/test.ml", 49, 1235, 1251), ("test/test.ml", 49, 1235, 1261), 0), 0, 0)], "Ptyp_constr:\"loc\"->ptyp_desc:Ptyp_constr:\"string\"->my_process_core_type_list:,my_process_core_type_list:")
DEBUG:constructor_declaration_new: constructor:"Ppat_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
["DEBUG:Pcstr_tuple:"]
DEBUG:constructor_declaration_new: constructor:"Ppat_any"{Pcstr_tuple:my_process_core_type_list:}	|constructor:"Ppat_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:
("DEBUG:type_decl:", ("pattern", (("test/test.ml", 40, 964, 968), ("test/test.ml", 40, 964, 975), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", Tag1 ([(("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), 0, (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0), (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1027), 0), 0); (("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0), (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1050), 0), 0); (("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0), (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1085), 0), 0); (("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0), (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1117), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0)), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0), 0, 0)], (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))]), (("test/test.ml", 44, 1086, 1119), ("test/test.ml", 44, 1086, 1149), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "pattern"), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0)), 0), (("test/test.ml", 40, 964, 978), ("test/test.ml", 40, 964, 995), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 40, 964, 964), ("test/test.ml", 45, 1150, 1151), 0))
DEBUG:Ptyp_constr1 'attributes' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), "types", 0, "context", 0, "id1", "attributes")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0)], "Ptyp_constr:\"attributes\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ppat_attributes", (("test/test.ml", 44, 1086, 1088), ("test/test.ml", 44, 1086, 1103), 0)), "mutable", 0, "type", (Tag3 ((("attributes"), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0)), 0), (("test/test.ml", 44, 1086, 1106), ("test/test.ml", 44, 1086, 1116), 0), 0, 0))
DEBUG:Ptyp_constr1 'location_stack' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), "types", 0, "context", 0, "id1", "location_stack")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0)], "Ptyp_constr:\"location_stack\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ppat_loc_stack", (("test/test.ml", 43, 1051, 1053), ("test/test.ml", 43, 1051, 1067), 0)), "mutable", 0, "type", (Tag3 ((("location_stack"), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0)), 0), (("test/test.ml", 43, 1051, 1070), ("test/test.ml", 43, 1051, 1084), 0), 0, 0))
DEBUG:Ptyp_constr1 'location' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), "types", 0, "context", 0, "id1", "location")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0)], "Ptyp_constr:\"location\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ppat_loc", (("test/test.ml", 42, 1028, 1030), ("test/test.ml", 42, 1028, 1038), 0)), "mutable", 0, "type", (Tag3 ((("location"), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0)), 0), (("test/test.ml", 42, 1028, 1041), ("test/test.ml", 42, 1028, 1049), 0), 0, 0))
DEBUG:Ptyp_constr1 'pattern_desc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), "types", 0, "context", 0, "id1", "pattern_desc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0)], "Ptyp_constr:\"pattern_desc\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ppat_desc", (("test/test.ml", 41, 1000, 1002), ("test/test.ml", 41, 1000, 1011), 0)), "mutable", 0, "type", (Tag3 ((("pattern_desc"), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0)), 0), (("test/test.ml", 41, 1000, 1014), ("test/test.ml", 41, 1000, 1026), 0), 0, 0))
("DEBUG:type_decl:", ("expression", (("test/test.ml", 33, 766, 770), ("test/test.ml", 33, 766, 780), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", Tag1 ([(("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), 0, (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0), (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 838), 0), 0); (("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0), (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 861), 0), 0); (("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0), (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 896), 0), 0); (("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0), (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 928), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0)), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0), 0, 0)], (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))]), (("test/test.ml", 37, 897, 930), ("test/test.ml", 37, 897, 960), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "expression"), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0)), 0), (("test/test.ml", 33, 766, 783), ("test/test.ml", 33, 766, 803), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 33, 766, 766), ("test/test.ml", 38, 961, 962), 0))
DEBUG:Ptyp_constr1 'attributes' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), "types", 0, "context", 0, "id1", "attributes")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0)], "Ptyp_constr:\"attributes\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pexp_attributes", (("test/test.ml", 37, 897, 899), ("test/test.ml", 37, 897, 914), 0)), "mutable", 0, "type", (Tag3 ((("attributes"), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0)), 0), (("test/test.ml", 37, 897, 917), ("test/test.ml", 37, 897, 927), 0), 0, 0))
DEBUG:Ptyp_constr1 'location_stack' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), "types", 0, "context", 0, "id1", "location_stack")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0)], "Ptyp_constr:\"location_stack\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pexp_loc_stack", (("test/test.ml", 36, 862, 864), ("test/test.ml", 36, 862, 878), 0)), "mutable", 0, "type", (Tag3 ((("location_stack"), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0)), 0), (("test/test.ml", 36, 862, 881), ("test/test.ml", 36, 862, 895), 0), 0, 0))
DEBUG:Ptyp_constr1 'location' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), "types", 0, "context", 0, "id1", "location")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0)], "Ptyp_constr:\"location\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pexp_loc", (("test/test.ml", 35, 839, 841), ("test/test.ml", 35, 839, 849), 0)), "mutable", 0, "type", (Tag3 ((("location"), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0)), 0), (("test/test.ml", 35, 839, 852), ("test/test.ml", 35, 839, 860), 0), 0, 0))
DEBUG:Ptyp_constr1 'expression_desc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), "types", 0, "context", 0, "id1", "expression_desc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0)], "Ptyp_constr:\"expression_desc\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("pexp_desc", (("test/test.ml", 34, 808, 810), ("test/test.ml", 34, 808, 819), 0)), "mutable", 0, "type", (Tag3 ((("expression_desc"), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0)), 0), (("test/test.ml", 34, 808, 822), ("test/test.ml", 34, 808, 837), 0), 0, 0))
("DEBUG:type_decl:", ("core_type", (("test/test.ml", 27, 571, 576), ("test/test.ml", 27, 571, 585), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
("DEBUG:kind:", Tag1 ([(("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), 0, (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0), (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 641), 0), 0); (("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), 0, (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0), (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 664), 0), 0); (("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), 0, (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0), (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 699), 0), 0); (("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), 0, (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0), (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 731), 0), [(("ocaml.doc", (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1)), ([([(Tag1 (Tag2 (" [... \\[@id1\\] \\[@id2\\]] ", (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0)), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0), 0, 0)], (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))]), (("test/test.ml", 31, 700, 733), ("test/test.ml", 31, 700, 763), 0))])]))
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((Tag1 (("Parsetree"), "core_type"), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0)), 0), (("test/test.ml", 27, 571, 588), ("test/test.ml", 27, 571, 607), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 27, 571, 571), ("test/test.ml", 32, 764, 765), 0))
DEBUG:Ptyp_constr1 'attributes' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), "types", 0, "context", 0, "id1", "attributes")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0)], "Ptyp_constr:\"attributes\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ptyp_attributes", (("test/test.ml", 31, 700, 702), ("test/test.ml", 31, 700, 717), 0)), "mutable", 0, "type", (Tag3 ((("attributes"), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0)), 0), (("test/test.ml", 31, 700, 720), ("test/test.ml", 31, 700, 730), 0), 0, 0))
DEBUG:Ptyp_constr1 'location_stack' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), "types", 0, "context", 0, "id1", "location_stack")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0)], "Ptyp_constr:\"location_stack\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ptyp_loc_stack", (("test/test.ml", 30, 665, 667), ("test/test.ml", 30, 665, 681), 0)), "mutable", 0, "type", (Tag3 ((("location_stack"), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0)), 0), (("test/test.ml", 30, 665, 684), ("test/test.ml", 30, 665, 698), 0), 0, 0))
DEBUG:Ptyp_constr1 'location' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), "types", 0, "context", 0, "id1", "location")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0)], "Ptyp_constr:\"location\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ptyp_loc", (("test/test.ml", 29, 642, 644), ("test/test.ml", 29, 642, 652), 0)), "mutable", 0, "type", (Tag3 ((("location"), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0)), 0), (("test/test.ml", 29, 642, 655), ("test/test.ml", 29, 642, 663), 0), 0, 0))
DEBUG:Ptyp_constr1 'core_type_desc' my_process_core_type_list:("DEBUG:Ptyp_constr:", "id", (("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), "types", 0, "context", 0, "id1", "core_type_desc")
("DEBUG:core_type.ptyp_desc:", [(Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0)], "Ptyp_constr:\"core_type_desc\"->my_process_core_type_list:")
("DEBUG:precord_kind:", ("ptyp_desc", (("test/test.ml", 28, 612, 614), ("test/test.ml", 28, 612, 623), 0)), "mutable", 0, "type", (Tag3 ((("core_type_desc"), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0)), 0), (("test/test.ml", 28, 612, 626), ("test/test.ml", 28, 612, 640), 0), 0, 0))
TOP structure_item_desc|Pstr_type:print_type_decl:"core_type" = process_record_kind:"ptyp_desc" body:ptyp_desc:Ptyp_constr:"core_type_desc"->my_process_core_type_list:/process_record_kind:"ptyp_loc" body:ptyp_desc:Ptyp_constr:"location"->my_process_core_type_list:/process_record_kind:"ptyp_loc_stack" body:ptyp_desc:Ptyp_constr:"location_stack"->my_process_core_type_list:/process_record_kind:"ptyp_attributes" body:ptyp_desc:Ptyp_constr:"attributes"->my_process_core_type_list:/process_record_kind_list[print_type_decl:"expression" = process_record_kind:"pexp_desc" body:ptyp_desc:Ptyp_constr:"expression_desc"->my_process_core_type_list:/process_record_kind:"pexp_loc" body:ptyp_desc:Ptyp_constr:"location"->my_process_core_type_list:/process_record_kind:"pexp_loc_stack" body:ptyp_desc:Ptyp_constr:"location_stack"->my_process_core_type_list:/process_record_kind:"pexp_attributes" body:ptyp_desc:Ptyp_constr:"attributes"->my_process_core_type_list:/process_record_kind_list[print_type_decl:"pattern" = process_record_kind:"ppat_desc" body:ptyp_desc:Ptyp_constr:"pattern_desc"->my_process_core_type_list:/process_record_kind:"ppat_loc" body:ptyp_desc:Ptyp_constr:"location"->my_process_core_type_list:/process_record_kind:"ppat_loc_stack" body:ptyp_desc:Ptyp_constr:"location_stack"->my_process_core_type_list:/process_record_kind:"ppat_attributes" body:ptyp_desc:Ptyp_constr:"attributes"->my_process_core_type_list:/process_record_kind_list[print_type_decl:"pattern_desc" = type variant:constructor:"Ppat_any"{Pcstr_tuple:my_process_core_type_list:}	|constructor:"Ppat_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_interval"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_or"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_type"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_unpack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_exception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ppat_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:[print_type_decl:"expression_desc" = type variant:constructor:"Pexp_ident"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"constant"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_let"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"rec_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"value_binding"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_function"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_fun"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_apply"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_match"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_try"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"cases"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_construct"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_record"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_field"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setfield"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_array"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_ifthenelse"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_sequence"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_while"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_for"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"direction_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_constraint"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_coerce"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_send"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_new"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_setinstvar"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_override"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_tupleptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letmodule"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letexception"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension_constructor"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_assert"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_lazy"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"class_structure"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_newtype"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_pack"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"module_expr"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_open"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"open_declaration"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_letop"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"letop"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Pexp_unreachable"{Pcstr_tuple:my_process_core_type_list:}	|VARIANT:[print_type_decl:"core_type_desc" = type variant:constructor:"Ptyp_any"{Pcstr_tuple:my_process_core_type_list:}	|constructor:"Ptyp_var"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_arrow"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"arg_label"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_tuple"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_constr"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_object"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"object_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_class"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"longident_loc"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_alias"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_variant"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"row_field"->my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"closed_flag"->my_process_core_type_list:,ptyp_desc:Ptyp_constr:"option"->ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"label"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_poly"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"list"->ptyp_desc:Ptyp_constr:"loc"->ptyp_desc:Ptyp_constr:"string"->my_process_core_type_list:,my_process_core_type_list:,my_process_core_type_list:,ptyp_desc:Ptyp_constr:"core_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_package"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"package_type"->my_process_core_type_list:,my_process_core_type_list:}	|constructor:"Ptyp_extension"{Pcstr_tuple:ptyp_desc:Ptyp_constr:"extension"->my_process_core_type_list:,my_process_core_type_list:}	|VARIANT:[print_type_decl:"value_binding" = process_record_kind:"pvb_pat" body:ptyp_desc:Ptyp_constr:"pattern"->my_process_core_type_list:/process_record_kind:"pvb_expr" body:ptyp_desc:Ptyp_constr:"expression"->my_process_core_type_list:/process_record_kind:"pvb_attributes" body:ptyp_desc:Ptyp_constr:"attributes"->my_process_core_type_list:/process_record_kind:"pvb_loc" body:ptyp_desc:Ptyp_constr:"location"->my_process_core_type_list:/process_record_kind_list[process_type_decl_list]]]]]]]
("DEBUG:SECOND::", (Tag1 (0, [(((("test", (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0))), (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0), 0, 0), (Tag4 (0, 0, (Tag5 ((("()"), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0)), 0), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0), 0, 0), (Tag5 ((((("check"), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0))), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0), 0, 0), [(0, (((("ast"), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0))), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0), 0, 0)); (0, (Tag1 (Tag2 ("case I", (("test/test.ml", 318, 12720, 12733), ("test/test.ml", 318, 12720, 12739), 0), 0)), (("test/test.ml", 318, 12720, 12732), ("test/test.ml", 318, 12720, 12740), 0), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("Pexp_constant"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag9 ((("Pconst_string"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag8 ([(Tag1 (Tag2 ("r3p14ccd 70 r4nd0m 5tr1n9", (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (Tag9 ((("None"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("Pexp_extension"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag8 ([(Tag11 ([((("txt"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag1 (Tag2 ("yay", (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0); (Tag9 ((("PStr"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))]), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12791), 0), 0, 0)), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), 0, (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0))]), (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("test", (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0))), (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0), 0, 0), (Tag4 (0, 0, (Tag5 ((("()"), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0)), 0), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0), 0, 0), (Tag5 ((((("check"), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0))), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0), 0, 0), [(0, (((("ast"), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0))), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0), 0, 0)); (0, (Tag1 (Tag2 ("case I", (("test/test.ml", 318, 12720, 12733), ("test/test.ml", 318, 12720, 12739), 0), 0)), (("test/test.ml", 318, 12720, 12732), ("test/test.ml", 318, 12720, 12740), 0), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("Pexp_constant"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag9 ((("Pconst_string"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag8 ([(Tag1 (Tag2 ("r3p14ccd 70 r4nd0m 5tr1n9", (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (Tag9 ((("None"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("Pexp_extension"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag8 ([(Tag11 ([((("txt"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag1 (Tag2 ("yay", (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0); (Tag9 ((("PStr"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))]), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12791), 0), 0, 0)), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), 0, (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0))]))
("DEBUG:Pstr_value:", 0, [(((("test", (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0))), (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0), 0, 0), (Tag4 (0, 0, (Tag5 ((("()"), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0)), 0), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0), 0, 0), (Tag5 ((((("check"), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0))), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0), 0, 0), [(0, (((("ast"), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0))), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0), 0, 0)); (0, (Tag1 (Tag2 ("case I", (("test/test.ml", 318, 12720, 12733), ("test/test.ml", 318, 12720, 12739), 0), 0)), (("test/test.ml", 318, 12720, 12732), ("test/test.ml", 318, 12720, 12740), 0), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("Pexp_constant"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag9 ((("Pconst_string"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag8 ([(Tag1 (Tag2 ("r3p14ccd 70 r4nd0m 5tr1n9", (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (Tag9 ((("None"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("Pexp_extension"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag8 ([(Tag11 ([((("txt"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag1 (Tag2 ("yay", (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0); (Tag9 ((("PStr"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))]), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12791), 0), 0, 0)), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), 0, (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0))])
("DEBUG:value_binding.pat:", ((("test", (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0))), (("test/test.ml", 317, 12706, 12710), ("test/test.ml", 317, 12706, 12714), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag5 ((("()"), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0)), 0), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 317, 12706, 12717), 0), 0, 0), (Tag5 ((((("check"), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0))), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12727), 0), 0, 0), [(0, (((("ast"), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0))), (("test/test.ml", 318, 12720, 12728), ("test/test.ml", 318, 12720, 12731), 0), 0, 0)); (0, (Tag1 (Tag2 ("case I", (("test/test.ml", 318, 12720, 12733), ("test/test.ml", 318, 12720, 12739), 0), 0)), (("test/test.ml", 318, 12720, 12732), ("test/test.ml", 318, 12720, 12740), 0), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("Pexp_constant"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag9 ((("Pconst_string"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), ((Tag8 ([(Tag1 (Tag2 ("r3p14ccd 70 r4nd0m 5tr1n9", (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0); (Tag9 ((("None"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1))), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1)), 0), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)), (("test/test.ml", 318, 12720, 12741), ("test/test.ml", 318, 12720, 12776), 1), 0, 0)); (0, (Tag19 ((Tag11 ([((("pexp_desc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("Pexp_extension"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag8 ([(Tag11 ([((("txt"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag1 (Tag2 ("yay", (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0); (Tag9 ((("PStr"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), ((Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)]), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (((("loc"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1))), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), (Tag9 ((("[]"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))], 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0), (Tag3 ((Tag1 (Tag1 (("Ppxlib_ast"), "Ast"), "expression"), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1)), 0), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0)), (("test/test.ml", 318, 12720, 12777), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))]), (("test/test.ml", 318, 12720, 12722), ("test/test.ml", 318, 12720, 12791), 0), 0, 0)), (("test/test.ml", 317, 12706, 12715), ("test/test.ml", 318, 12720, 12791), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 317, 12706, 12706), ("test/test.ml", 318, 12720, 12791), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [((Tag5 ((("()"), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0)), 0), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0), 0, 0), (Tag5 ((((("run"), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0))), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0), 0, 0), [(0, (Tag1 (Tag2 ("Simple ppx test suit", (("test/test.ml", 321, 12802, 12809), ("test/test.ml", 321, 12802, 12829), 0), 0)), (("test/test.ml", 321, 12802, 12808), ("test/test.ml", 321, 12802, 12830), 0), 0, 0)); (0, (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Transform", (("test/test.ml", 321, 12802, 12835), ("test/test.ml", 321, 12802, 12844), 0), 0)), (("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12845), 0), 0, 0); (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Test", (("test/test.ml", 321, 12802, 12851), ("test/test.ml", 321, 12802, 12855), 0), 0)), (("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12856), 0), 0, 0); (Tag10 ("Quick", 0), (("test/test.ml", 321, 12802, 12858), ("test/test.ml", 321, 12802, 12864), 0), 0, 0); (((("test"), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0))), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12871), 0), [(("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12870), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1)), 0), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1), 0, 0))), (("test/test.ml", 321, 12802, 12847), ("test/test.ml", 321, 12802, 12873), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12874), 0), [(("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12873), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1)), 0), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1), 0, 0))), (("test/test.ml", 321, 12802, 12831), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))]), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12876), 0), 0, 0), 0, (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0))]), (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [((Tag5 ((("()"), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0)), 0), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0), 0, 0), (Tag5 ((((("run"), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0))), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0), 0, 0), [(0, (Tag1 (Tag2 ("Simple ppx test suit", (("test/test.ml", 321, 12802, 12809), ("test/test.ml", 321, 12802, 12829), 0), 0)), (("test/test.ml", 321, 12802, 12808), ("test/test.ml", 321, 12802, 12830), 0), 0, 0)); (0, (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Transform", (("test/test.ml", 321, 12802, 12835), ("test/test.ml", 321, 12802, 12844), 0), 0)), (("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12845), 0), 0, 0); (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Test", (("test/test.ml", 321, 12802, 12851), ("test/test.ml", 321, 12802, 12855), 0), 0)), (("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12856), 0), 0, 0); (Tag10 ("Quick", 0), (("test/test.ml", 321, 12802, 12858), ("test/test.ml", 321, 12802, 12864), 0), 0, 0); (((("test"), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0))), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12871), 0), [(("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12870), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1)), 0), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1), 0, 0))), (("test/test.ml", 321, 12802, 12847), ("test/test.ml", 321, 12802, 12873), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12874), 0), [(("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12873), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1)), 0), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1), 0, 0))), (("test/test.ml", 321, 12802, 12831), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))]), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12876), 0), 0, 0), 0, (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0))]))
("DEBUG:Pstr_value:", 0, [((Tag5 ((("()"), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0)), 0), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0), 0, 0), (Tag5 ((((("run"), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0))), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0), 0, 0), [(0, (Tag1 (Tag2 ("Simple ppx test suit", (("test/test.ml", 321, 12802, 12809), ("test/test.ml", 321, 12802, 12829), 0), 0)), (("test/test.ml", 321, 12802, 12808), ("test/test.ml", 321, 12802, 12830), 0), 0, 0)); (0, (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Transform", (("test/test.ml", 321, 12802, 12835), ("test/test.ml", 321, 12802, 12844), 0), 0)), (("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12845), 0), 0, 0); (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Test", (("test/test.ml", 321, 12802, 12851), ("test/test.ml", 321, 12802, 12855), 0), 0)), (("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12856), 0), 0, 0); (Tag10 ("Quick", 0), (("test/test.ml", 321, 12802, 12858), ("test/test.ml", 321, 12802, 12864), 0), 0, 0); (((("test"), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0))), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12871), 0), [(("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12870), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1)), 0), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1), 0, 0))), (("test/test.ml", 321, 12802, 12847), ("test/test.ml", 321, 12802, 12873), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12874), 0), [(("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12873), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1)), 0), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1), 0, 0))), (("test/test.ml", 321, 12802, 12831), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))]), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12876), 0), 0, 0), 0, (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0))])
("DEBUG:value_binding.pat:", (Tag5 ((("()"), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0)), 0), (("test/test.ml", 320, 12793, 12797), ("test/test.ml", 320, 12793, 12799), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag5 ((((("run"), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0))), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12807), 0), 0, 0), [(0, (Tag1 (Tag2 ("Simple ppx test suit", (("test/test.ml", 321, 12802, 12809), ("test/test.ml", 321, 12802, 12829), 0), 0)), (("test/test.ml", 321, 12802, 12808), ("test/test.ml", 321, 12802, 12830), 0), 0, 0)); (0, (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Transform", (("test/test.ml", 321, 12802, 12835), ("test/test.ml", 321, 12802, 12844), 0), 0)), (("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12845), 0), 0, 0); (Tag9 ((("::"), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1)), ((Tag8 ([(Tag8 ([(Tag1 (Tag2 ("Test", (("test/test.ml", 321, 12802, 12851), ("test/test.ml", 321, 12802, 12855), 0), 0)), (("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12856), 0), 0, 0); (Tag10 ("Quick", 0), (("test/test.ml", 321, 12802, 12858), ("test/test.ml", 321, 12802, 12864), 0), 0, 0); (((("test"), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0))), (("test/test.ml", 321, 12802, 12866), ("test/test.ml", 321, 12802, 12870), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12871), 0), [(("test/test.ml", 321, 12802, 12850), ("test/test.ml", 321, 12802, 12870), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1)), 0), (("test/test.ml", 321, 12802, 12872), ("test/test.ml", 321, 12802, 12873), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12849), ("test/test.ml", 321, 12802, 12873), 1), 0, 0))), (("test/test.ml", 321, 12802, 12847), ("test/test.ml", 321, 12802, 12873), 0), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12874), 0), [(("test/test.ml", 321, 12802, 12834), ("test/test.ml", 321, 12802, 12873), 0)], 0); (Tag9 ((("[]"), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1)), 0), (("test/test.ml", 321, 12802, 12875), ("test/test.ml", 321, 12802, 12876), 1), 0, 0)]), (("test/test.ml", 321, 12802, 12833), ("test/test.ml", 321, 12802, 12876), 1), 0, 0))), (("test/test.ml", 321, 12802, 12831), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))]), (("test/test.ml", 321, 12802, 12804), ("test/test.ml", 321, 12802, 12876), 0), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 320, 12793, 12793), ("test/test.ml", 321, 12802, 12876), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag3 (1, [(("string_list", (("test/test.ml", 362, 14829, 14834), ("test/test.ml", 362, 14829, 14845), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 362, 14829, 14855), ("test/test.ml", 362, 14829, 14859), 0)), [(Tag3 ((("string"), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0)), 0), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0), 0, 0)]), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14859), 0), 0, 0)), 0, (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0))]), (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0)))
("DEBUG:structure_item_desc:", Tag3 (1, [(("string_list", (("test/test.ml", 362, 14829, 14834), ("test/test.ml", 362, 14829, 14845), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 362, 14829, 14855), ("test/test.ml", 362, 14829, 14859), 0)), [(Tag3 ((("string"), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0)), 0), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0), 0, 0)]), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14859), 0), 0, 0)), 0, (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0))]))
("DEBUG:Pstr_type:", 1, [(("string_list", (("test/test.ml", 362, 14829, 14834), ("test/test.ml", 362, 14829, 14845), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 362, 14829, 14855), ("test/test.ml", 362, 14829, 14859), 0)), [(Tag3 ((("string"), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0)), 0), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0), 0, 0)]), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14859), 0), 0, 0)), 0, (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0))])
("DEBUG:type_decl:", ("string_list", (("test/test.ml", 362, 14829, 14834), ("test/test.ml", 362, 14829, 14845), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
["DEBUG:kind:"]
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((("list"), (("test/test.ml", 362, 14829, 14855), ("test/test.ml", 362, 14829, 14859), 0)), [(Tag3 ((("string"), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0)), 0), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14854), 0), 0, 0)]), (("test/test.ml", 362, 14829, 14848), ("test/test.ml", 362, 14829, 14859), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 362, 14829, 14829), ("test/test.ml", 362, 14829, 14859), 0))
"DEBUG:Ptype_abstract:"
TOP structure_item_desc|Pstr_type:print_type_decl:"string_list" = DEBUG:Ptype_abstract[process_type_decl_list]
("DEBUG:SECOND::", (Tag3 (1, [(("core_type_list", (("test/test.ml", 363, 14860, 14865), ("test/test.ml", 363, 14860, 14879), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 363, 14860, 14892), ("test/test.ml", 363, 14860, 14896), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0)), 0), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0), 0, 0)]), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14896), 0), 0, 0)), 0, (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0))]), (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0)))
("DEBUG:structure_item_desc:", Tag3 (1, [(("core_type_list", (("test/test.ml", 363, 14860, 14865), ("test/test.ml", 363, 14860, 14879), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 363, 14860, 14892), ("test/test.ml", 363, 14860, 14896), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0)), 0), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0), 0, 0)]), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14896), 0), 0, 0)), 0, (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0))]))
("DEBUG:Pstr_type:", 1, [(("core_type_list", (("test/test.ml", 363, 14860, 14865), ("test/test.ml", 363, 14860, 14879), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 363, 14860, 14892), ("test/test.ml", 363, 14860, 14896), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0)), 0), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0), 0, 0)]), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14896), 0), 0, 0)), 0, (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0))])
("DEBUG:type_decl:", ("core_type_list", (("test/test.ml", 363, 14860, 14865), ("test/test.ml", 363, 14860, 14879), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
["DEBUG:kind:"]
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((("list"), (("test/test.ml", 363, 14860, 14892), ("test/test.ml", 363, 14860, 14896), 0)), [(Tag3 ((("core_type"), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0)), 0), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14891), 0), 0, 0)]), (("test/test.ml", 363, 14860, 14882), ("test/test.ml", 363, 14860, 14896), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 363, 14860, 14860), ("test/test.ml", 363, 14860, 14896), 0))
"DEBUG:Ptype_abstract:"
TOP structure_item_desc|Pstr_type:print_type_decl:"core_type_list" = DEBUG:Ptype_abstract[process_type_decl_list]
("DEBUG:SECOND::", (Tag1 (0, [(((("printdesc2", (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0))), (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0))), (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0)), 0), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 367, 15002, 15040), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0))), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0))), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG21:", (("test/test.ml", 368, 15051, 15086), ("test/test.ml", 368, 15051, 15094), 0), 0)), (("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15095), 0), 0, 0); (((("x"), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0))), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0), 0, 0)]), (("test/test.ml", 368, 15051, 15084), ("test/test.ml", 368, 15051, 15099), 0), [(("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15098), 0)], 0))]), (("test/test.ml", 368, 15051, 15068), ("test/test.ml", 368, 15051, 15100), 0), [(("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15099), 0)], 0))]), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 368, 15051, 15101), 0), [(("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15100), 0)], 0), (Tag1 (Tag2 ("descr", (("test/test.ml", 369, 15103, 15106), ("test/test.ml", 369, 15103, 15111), 0), 0)), (("test/test.ml", 369, 15103, 15105), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 369, 15103, 15112), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0)), 0), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0), 0, 0)), (("test/test.ml", 367, 15002, 15041), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 369, 15103, 15112), 1), 0, 0), 0, (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0))]), (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printdesc2", (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0))), (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0))), (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0)), 0), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 367, 15002, 15040), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0))), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0))), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG21:", (("test/test.ml", 368, 15051, 15086), ("test/test.ml", 368, 15051, 15094), 0), 0)), (("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15095), 0), 0, 0); (((("x"), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0))), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0), 0, 0)]), (("test/test.ml", 368, 15051, 15084), ("test/test.ml", 368, 15051, 15099), 0), [(("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15098), 0)], 0))]), (("test/test.ml", 368, 15051, 15068), ("test/test.ml", 368, 15051, 15100), 0), [(("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15099), 0)], 0))]), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 368, 15051, 15101), 0), [(("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15100), 0)], 0), (Tag1 (Tag2 ("descr", (("test/test.ml", 369, 15103, 15106), ("test/test.ml", 369, 15103, 15111), 0), 0)), (("test/test.ml", 369, 15103, 15105), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 369, 15103, 15112), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0)), 0), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0), 0, 0)), (("test/test.ml", 367, 15002, 15041), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 369, 15103, 15112), 1), 0, 0), 0, (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printdesc2", (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0))), (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0))), (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0)), 0), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 367, 15002, 15040), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0))), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0))), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG21:", (("test/test.ml", 368, 15051, 15086), ("test/test.ml", 368, 15051, 15094), 0), 0)), (("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15095), 0), 0, 0); (((("x"), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0))), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0), 0, 0)]), (("test/test.ml", 368, 15051, 15084), ("test/test.ml", 368, 15051, 15099), 0), [(("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15098), 0)], 0))]), (("test/test.ml", 368, 15051, 15068), ("test/test.ml", 368, 15051, 15100), 0), [(("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15099), 0)], 0))]), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 368, 15051, 15101), 0), [(("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15100), 0)], 0), (Tag1 (Tag2 ("descr", (("test/test.ml", 369, 15103, 15106), ("test/test.ml", 369, 15103, 15111), 0), 0)), (("test/test.ml", 369, 15103, 15105), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 369, 15103, 15112), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0)), 0), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0), 0, 0)), (("test/test.ml", 367, 15002, 15041), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 369, 15103, 15112), 1), 0, 0), 0, (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0))])
("DEBUG:value_binding.pat:", ((("printdesc2", (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0))), (("test/test.ml", 367, 15002, 15006), ("test/test.ml", 367, 15002, 15016), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0))), (("test/test.ml", 367, 15002, 15017), ("test/test.ml", 367, 15002, 15018), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0)), 0), (("test/test.ml", 367, 15002, 15020), ("test/test.ml", 367, 15002, 15039), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 367, 15002, 15040), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0))), (("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15067), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0))), (("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15083), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG21:", (("test/test.ml", 368, 15051, 15086), ("test/test.ml", 368, 15051, 15094), 0), 0)), (("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15095), 0), 0, 0); (((("x"), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0))), (("test/test.ml", 368, 15051, 15097), ("test/test.ml", 368, 15051, 15098), 0), 0, 0)]), (("test/test.ml", 368, 15051, 15084), ("test/test.ml", 368, 15051, 15099), 0), [(("test/test.ml", 368, 15051, 15085), ("test/test.ml", 368, 15051, 15098), 0)], 0))]), (("test/test.ml", 368, 15051, 15068), ("test/test.ml", 368, 15051, 15100), 0), [(("test/test.ml", 368, 15051, 15069), ("test/test.ml", 368, 15051, 15099), 0)], 0))]), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 368, 15051, 15101), 0), [(("test/test.ml", 368, 15051, 15054), ("test/test.ml", 368, 15051, 15100), 0)], 0), (Tag1 (Tag2 ("descr", (("test/test.ml", 369, 15103, 15106), ("test/test.ml", 369, 15103, 15111), 0), 0)), (("test/test.ml", 369, 15103, 15105), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 368, 15051, 15053), ("test/test.ml", 369, 15103, 15112), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0)), 0), (("test/test.ml", 367, 15002, 15042), ("test/test.ml", 367, 15002, 15048), 0), 0, 0)), (("test/test.ml", 367, 15002, 15041), ("test/test.ml", 369, 15103, 15112), 0), 0, 0)), (("test/test.ml", 367, 15002, 15016), ("test/test.ml", 369, 15103, 15112), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 367, 15002, 15002), ("test/test.ml", 369, 15103, 15112), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printone", (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0))), (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0))), (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0)), 0), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 371, 15114, 15148), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0))), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 1)), ((("pstr_desc", (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0))), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0), 0, 0))], 1), (("test/test.ml", 373, 15174, 15177), ("test/test.ml", 376, 15224, 15227), 0), 0, 0), 0, (Tag5 ((((("printdesc2"), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0))), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0), 0, 0), [(0, (((("pstr_desc"), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0))), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0), 0, 0))]), (("test/test.ml", 377, 15231, 15235), ("test/test.ml", 377, 15231, 15257), 0), [(("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15256), 0)], 0))]), (("test/test.ml", 372, 15159, 15161), ("test/test.ml", 377, 15231, 15257), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0)), 0), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0), 0, 0)), (("test/test.ml", 371, 15114, 15149), ("test/test.ml", 377, 15231, 15257), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 377, 15231, 15257), 1), 0, 0), 0, (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0))]), (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printone", (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0))), (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0))), (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0)), 0), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 371, 15114, 15148), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0))), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 1)), ((("pstr_desc", (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0))), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0), 0, 0))], 1), (("test/test.ml", 373, 15174, 15177), ("test/test.ml", 376, 15224, 15227), 0), 0, 0), 0, (Tag5 ((((("printdesc2"), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0))), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0), 0, 0), [(0, (((("pstr_desc"), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0))), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0), 0, 0))]), (("test/test.ml", 377, 15231, 15235), ("test/test.ml", 377, 15231, 15257), 0), [(("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15256), 0)], 0))]), (("test/test.ml", 372, 15159, 15161), ("test/test.ml", 377, 15231, 15257), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0)), 0), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0), 0, 0)), (("test/test.ml", 371, 15114, 15149), ("test/test.ml", 377, 15231, 15257), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 377, 15231, 15257), 1), 0, 0), 0, (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printone", (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0))), (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0))), (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0)), 0), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 371, 15114, 15148), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0))), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 1)), ((("pstr_desc", (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0))), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0), 0, 0))], 1), (("test/test.ml", 373, 15174, 15177), ("test/test.ml", 376, 15224, 15227), 0), 0, 0), 0, (Tag5 ((((("printdesc2"), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0))), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0), 0, 0), [(0, (((("pstr_desc"), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0))), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0), 0, 0))]), (("test/test.ml", 377, 15231, 15235), ("test/test.ml", 377, 15231, 15257), 0), [(("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15256), 0)], 0))]), (("test/test.ml", 372, 15159, 15161), ("test/test.ml", 377, 15231, 15257), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0)), 0), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0), 0, 0)), (("test/test.ml", 371, 15114, 15149), ("test/test.ml", 377, 15231, 15257), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 377, 15231, 15257), 1), 0, 0), 0, (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0))])
("DEBUG:value_binding.pat:", ((("printone", (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0))), (("test/test.ml", 371, 15114, 15118), ("test/test.ml", 371, 15114, 15126), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0))), (("test/test.ml", 371, 15114, 15128), ("test/test.ml", 371, 15114, 15129), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0)), 0), (("test/test.ml", 371, 15114, 15132), ("test/test.ml", 371, 15114, 15146), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 371, 15114, 15148), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0))), (("test/test.ml", 372, 15159, 15167), ("test/test.ml", 372, 15159, 15168), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 1)), ((("pstr_desc", (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0))), (("test/test.ml", 374, 15179, 15183), ("test/test.ml", 374, 15179, 15192), 0), 0, 0))], 1), (("test/test.ml", 373, 15174, 15177), ("test/test.ml", 376, 15224, 15227), 0), 0, 0), 0, (Tag5 ((((("printdesc2"), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0))), (("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15246), 0), 0, 0), [(0, (((("pstr_desc"), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0))), (("test/test.ml", 377, 15231, 15247), ("test/test.ml", 377, 15231, 15256), 0), 0, 0))]), (("test/test.ml", 377, 15231, 15235), ("test/test.ml", 377, 15231, 15257), 0), [(("test/test.ml", 377, 15231, 15236), ("test/test.ml", 377, 15231, 15256), 0)], 0))]), (("test/test.ml", 372, 15159, 15161), ("test/test.ml", 377, 15231, 15257), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0)), 0), (("test/test.ml", 371, 15114, 15150), ("test/test.ml", 371, 15114, 15156), 0), 0, 0)), (("test/test.ml", 371, 15114, 15149), ("test/test.ml", 377, 15231, 15257), 0), 0, 0)), (("test/test.ml", 371, 15114, 15127), ("test/test.ml", 377, 15231, 15257), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 371, 15114, 15114), ("test/test.ml", 377, 15231, 15257), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printone2", (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0))), (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0))), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0))), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0))), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG1:", (("test/test.ml", 382, 15297, 15332), ("test/test.ml", 382, 15297, 15339), 0), 0)), (("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15340), 0), 0, 0); (((("x"), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0))), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0), 0, 0)]), (("test/test.ml", 382, 15297, 15330), ("test/test.ml", 382, 15297, 15343), 0), [(("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15342), 0)], 0))]), (("test/test.ml", 382, 15297, 15314), ("test/test.ml", 382, 15297, 15344), 0), [(("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15343), 0)], 0))]), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 382, 15297, 15345), 0), [(("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15344), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0))), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0))), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0), 0, 0))]), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 383, 15347, 15359), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0)), 0), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0), 0, 0)), (("test/test.ml", 381, 15271, 15287), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 383, 15347, 15359), 1), 0, 0), 0, (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0))]), (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printone2", (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0))), (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0))), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0))), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0))), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG1:", (("test/test.ml", 382, 15297, 15332), ("test/test.ml", 382, 15297, 15339), 0), 0)), (("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15340), 0), 0, 0); (((("x"), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0))), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0), 0, 0)]), (("test/test.ml", 382, 15297, 15330), ("test/test.ml", 382, 15297, 15343), 0), [(("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15342), 0)], 0))]), (("test/test.ml", 382, 15297, 15314), ("test/test.ml", 382, 15297, 15344), 0), [(("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15343), 0)], 0))]), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 382, 15297, 15345), 0), [(("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15344), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0))), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0))), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0), 0, 0))]), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 383, 15347, 15359), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0)), 0), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0), 0, 0)), (("test/test.ml", 381, 15271, 15287), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 383, 15347, 15359), 1), 0, 0), 0, (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printone2", (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0))), (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0))), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0))), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0))), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG1:", (("test/test.ml", 382, 15297, 15332), ("test/test.ml", 382, 15297, 15339), 0), 0)), (("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15340), 0), 0, 0); (((("x"), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0))), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0), 0, 0)]), (("test/test.ml", 382, 15297, 15330), ("test/test.ml", 382, 15297, 15343), 0), [(("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15342), 0)], 0))]), (("test/test.ml", 382, 15297, 15314), ("test/test.ml", 382, 15297, 15344), 0), [(("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15343), 0)], 0))]), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 382, 15297, 15345), 0), [(("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15344), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0))), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0))), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0), 0, 0))]), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 383, 15347, 15359), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0)), 0), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0), 0, 0)), (("test/test.ml", 381, 15271, 15287), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 383, 15347, 15359), 1), 0, 0), 0, (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0))])
("DEBUG:value_binding.pat:", ((("printone2", (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0))), (("test/test.ml", 381, 15271, 15275), ("test/test.ml", 381, 15271, 15284), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0))), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 381, 15271, 15286), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0))), (("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15313), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0))), (("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15329), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG1:", (("test/test.ml", 382, 15297, 15332), ("test/test.ml", 382, 15297, 15339), 0), 0)), (("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15340), 0), 0, 0); (((("x"), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0))), (("test/test.ml", 382, 15297, 15341), ("test/test.ml", 382, 15297, 15342), 0), 0, 0)]), (("test/test.ml", 382, 15297, 15330), ("test/test.ml", 382, 15297, 15343), 0), [(("test/test.ml", 382, 15297, 15331), ("test/test.ml", 382, 15297, 15342), 0)], 0))]), (("test/test.ml", 382, 15297, 15314), ("test/test.ml", 382, 15297, 15344), 0), [(("test/test.ml", 382, 15297, 15315), ("test/test.ml", 382, 15297, 15343), 0)], 0))]), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 382, 15297, 15345), 0), [(("test/test.ml", 382, 15297, 15300), ("test/test.ml", 382, 15297, 15344), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0))), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15357), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0))), (("test/test.ml", 383, 15347, 15358), ("test/test.ml", 383, 15347, 15359), 0), 0, 0))]), (("test/test.ml", 383, 15347, 15349), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 382, 15297, 15299), ("test/test.ml", 383, 15347, 15359), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0)), 0), (("test/test.ml", 381, 15271, 15288), ("test/test.ml", 381, 15271, 15294), 0), 0, 0)), (("test/test.ml", 381, 15271, 15287), ("test/test.ml", 383, 15347, 15359), 0), 0, 0)), (("test/test.ml", 381, 15271, 15285), ("test/test.ml", 383, 15347, 15359), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 381, 15271, 15271), ("test/test.ml", 383, 15347, 15359), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("proc2", (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0))), (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0))), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0))), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0))), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0), 0, 0))]), (("test/test.ml", 386, 15385, 15387), ("test/test.ml", 386, 15385, 15400), 0), [(("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15399), 0)], 0), (Tag3 ((("string"), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0)), 0), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0), 0, 0)), (("test/test.ml", 385, 15361, 15374), ("test/test.ml", 386, 15385, 15400), 0), 0, 0)), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 386, 15385, 15400), 1), 0, 0), 0, (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0))]), (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("proc2", (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0))), (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0))), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0))), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0))), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0), 0, 0))]), (("test/test.ml", 386, 15385, 15387), ("test/test.ml", 386, 15385, 15400), 0), [(("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15399), 0)], 0), (Tag3 ((("string"), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0)), 0), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0), 0, 0)), (("test/test.ml", 385, 15361, 15374), ("test/test.ml", 386, 15385, 15400), 0), 0, 0)), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 386, 15385, 15400), 1), 0, 0), 0, (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0))]))
("DEBUG:Pstr_value:", 0, [(((("proc2", (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0))), (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0))), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0))), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0))), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0), 0, 0))]), (("test/test.ml", 386, 15385, 15387), ("test/test.ml", 386, 15385, 15400), 0), [(("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15399), 0)], 0), (Tag3 ((("string"), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0)), 0), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0), 0, 0)), (("test/test.ml", 385, 15361, 15374), ("test/test.ml", 386, 15385, 15400), 0), 0, 0)), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 386, 15385, 15400), 1), 0, 0), 0, (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0))])
("DEBUG:value_binding.pat:", ((("proc2", (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0))), (("test/test.ml", 385, 15361, 15365), ("test/test.ml", 385, 15361, 15370), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0))), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 385, 15361, 15372), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0))), (("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15397), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0))), (("test/test.ml", 386, 15385, 15398), ("test/test.ml", 386, 15385, 15399), 0), 0, 0))]), (("test/test.ml", 386, 15385, 15387), ("test/test.ml", 386, 15385, 15400), 0), [(("test/test.ml", 386, 15385, 15388), ("test/test.ml", 386, 15385, 15399), 0)], 0), (Tag3 ((("string"), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0)), 0), (("test/test.ml", 385, 15361, 15376), ("test/test.ml", 385, 15361, 15382), 0), 0, 0)), (("test/test.ml", 385, 15361, 15374), ("test/test.ml", 386, 15385, 15400), 0), 0, 0)), (("test/test.ml", 385, 15361, 15371), ("test/test.ml", 386, 15385, 15400), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 385, 15361, 15361), ("test/test.ml", 386, 15385, 15400), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printdesc2", (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0))), (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0))), (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0)), 0), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 389, 15405, 15443), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0))), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0))), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG33:", (("test/test.ml", 390, 15454, 15489), ("test/test.ml", 390, 15454, 15497), 0), 0)), (("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15498), 0), 0, 0); (((("x"), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0))), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0), 0, 0)]), (("test/test.ml", 390, 15454, 15487), ("test/test.ml", 390, 15454, 15502), 0), [(("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15501), 0)], 0))]), (("test/test.ml", 390, 15454, 15471), ("test/test.ml", 390, 15454, 15503), 0), [(("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15502), 0)], 0))]), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 390, 15454, 15504), 0), [(("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15503), 0)], 0), (Tag1 (Tag2 ("FIXME123", (("test/test.ml", 391, 15506, 15509), ("test/test.ml", 391, 15506, 15517), 0), 0)), (("test/test.ml", 391, 15506, 15508), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 391, 15506, 15518), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0)), 0), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0), 0, 0)), (("test/test.ml", 389, 15405, 15444), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 391, 15506, 15518), 1), 0, 0), 0, (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0))]), (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printdesc2", (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0))), (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0))), (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0)), 0), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 389, 15405, 15443), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0))), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0))), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG33:", (("test/test.ml", 390, 15454, 15489), ("test/test.ml", 390, 15454, 15497), 0), 0)), (("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15498), 0), 0, 0); (((("x"), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0))), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0), 0, 0)]), (("test/test.ml", 390, 15454, 15487), ("test/test.ml", 390, 15454, 15502), 0), [(("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15501), 0)], 0))]), (("test/test.ml", 390, 15454, 15471), ("test/test.ml", 390, 15454, 15503), 0), [(("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15502), 0)], 0))]), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 390, 15454, 15504), 0), [(("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15503), 0)], 0), (Tag1 (Tag2 ("FIXME123", (("test/test.ml", 391, 15506, 15509), ("test/test.ml", 391, 15506, 15517), 0), 0)), (("test/test.ml", 391, 15506, 15508), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 391, 15506, 15518), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0)), 0), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0), 0, 0)), (("test/test.ml", 389, 15405, 15444), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 391, 15506, 15518), 1), 0, 0), 0, (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printdesc2", (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0))), (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0))), (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0)), 0), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 389, 15405, 15443), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0))), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0))), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG33:", (("test/test.ml", 390, 15454, 15489), ("test/test.ml", 390, 15454, 15497), 0), 0)), (("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15498), 0), 0, 0); (((("x"), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0))), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0), 0, 0)]), (("test/test.ml", 390, 15454, 15487), ("test/test.ml", 390, 15454, 15502), 0), [(("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15501), 0)], 0))]), (("test/test.ml", 390, 15454, 15471), ("test/test.ml", 390, 15454, 15503), 0), [(("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15502), 0)], 0))]), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 390, 15454, 15504), 0), [(("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15503), 0)], 0), (Tag1 (Tag2 ("FIXME123", (("test/test.ml", 391, 15506, 15509), ("test/test.ml", 391, 15506, 15517), 0), 0)), (("test/test.ml", 391, 15506, 15508), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 391, 15506, 15518), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0)), 0), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0), 0, 0)), (("test/test.ml", 389, 15405, 15444), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 391, 15506, 15518), 1), 0, 0), 0, (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0))])
("DEBUG:value_binding.pat:", ((("printdesc2", (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0))), (("test/test.ml", 389, 15405, 15409), ("test/test.ml", 389, 15405, 15419), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0))), (("test/test.ml", 389, 15405, 15420), ("test/test.ml", 389, 15405, 15421), 0), 0, 0), (Tag3 ((("structure_item_desc"), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0)), 0), (("test/test.ml", 389, 15405, 15423), ("test/test.ml", 389, 15405, 15442), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 389, 15405, 15443), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0))), (("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15470), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0))), (("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15486), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG33:", (("test/test.ml", 390, 15454, 15489), ("test/test.ml", 390, 15454, 15497), 0), 0)), (("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15498), 0), 0, 0); (((("x"), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0))), (("test/test.ml", 390, 15454, 15500), ("test/test.ml", 390, 15454, 15501), 0), 0, 0)]), (("test/test.ml", 390, 15454, 15487), ("test/test.ml", 390, 15454, 15502), 0), [(("test/test.ml", 390, 15454, 15488), ("test/test.ml", 390, 15454, 15501), 0)], 0))]), (("test/test.ml", 390, 15454, 15471), ("test/test.ml", 390, 15454, 15503), 0), [(("test/test.ml", 390, 15454, 15472), ("test/test.ml", 390, 15454, 15502), 0)], 0))]), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 390, 15454, 15504), 0), [(("test/test.ml", 390, 15454, 15457), ("test/test.ml", 390, 15454, 15503), 0)], 0), (Tag1 (Tag2 ("FIXME123", (("test/test.ml", 391, 15506, 15509), ("test/test.ml", 391, 15506, 15517), 0), 0)), (("test/test.ml", 391, 15506, 15508), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 390, 15454, 15456), ("test/test.ml", 391, 15506, 15518), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0)), 0), (("test/test.ml", 389, 15405, 15445), ("test/test.ml", 389, 15405, 15451), 0), 0, 0)), (("test/test.ml", 389, 15405, 15444), ("test/test.ml", 391, 15506, 15518), 0), 0, 0)), (("test/test.ml", 389, 15405, 15419), ("test/test.ml", 391, 15506, 15518), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 389, 15405, 15405), ("test/test.ml", 391, 15506, 15518), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("print_value_binding_expr", (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0))), (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0))), (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0)), 0), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 393, 15522, 15567), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0))), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0), 0, 0), [((Tag7 ([((("pexp_desc"), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 1)), ((("pexp_desc", (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0))), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0), 0, 0)); ((("pexp_loc"), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 1)), ((("pexp_loc", (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0))), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 1)), ((("pexp_loc_stack", (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0))), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 1)), ((("pexp_attributes", (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0))), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0), 0, 0))], 0), (("test/test.ml", 395, 15593, 15597), ("test/test.ml", 400, 15783, 15786), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0))), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0))), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 401, 15790, 15827), ("test/test.ml", 401, 15790, 15839), 0), 0)), (("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15840), 0), 0, 0); (((("pexp_desc"), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0))), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0), 0, 0)]), (("test/test.ml", 401, 15790, 15825), ("test/test.ml", 401, 15790, 15853), 0), [(("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15851), 0)], 0))]), (("test/test.ml", 401, 15790, 15809), ("test/test.ml", 401, 15790, 15854), 0), [(("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15853), 0)], 0))]), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 401, 15790, 15855), 0), [(("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15854), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0))), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0))), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 402, 15857, 15894), ("test/test.ml", 402, 15857, 15906), 0), 0)), (("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15907), 0), 0, 0); (((("pexp_attributes"), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0))), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0), 0, 0)]), (("test/test.ml", 402, 15857, 15892), ("test/test.ml", 402, 15857, 15926), 0), [(("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15924), 0)], 0))]), (("test/test.ml", 402, 15857, 15876), ("test/test.ml", 402, 15857, 15927), 0), [(("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15926), 0)], 0))]), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 402, 15857, 15928), 0), [(("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15927), 0)], 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 403, 15930, 15933), ("test/test.ml", 403, 15930, 15937), 0), 0)), (("test/test.ml", 403, 15930, 15932), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 403, 15930, 15938), 0), 0, 0))]), (("test/test.ml", 394, 15578, 15580), ("test/test.ml", 403, 15930, 15938), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0)), 0), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0), 0, 0)), (("test/test.ml", 393, 15522, 15568), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 403, 15930, 15938), 1), 0, 0), 0, (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0))]), (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("print_value_binding_expr", (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0))), (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0))), (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0)), 0), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 393, 15522, 15567), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0))), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0), 0, 0), [((Tag7 ([((("pexp_desc"), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 1)), ((("pexp_desc", (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0))), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0), 0, 0)); ((("pexp_loc"), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 1)), ((("pexp_loc", (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0))), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 1)), ((("pexp_loc_stack", (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0))), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 1)), ((("pexp_attributes", (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0))), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0), 0, 0))], 0), (("test/test.ml", 395, 15593, 15597), ("test/test.ml", 400, 15783, 15786), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0))), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0))), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 401, 15790, 15827), ("test/test.ml", 401, 15790, 15839), 0), 0)), (("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15840), 0), 0, 0); (((("pexp_desc"), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0))), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0), 0, 0)]), (("test/test.ml", 401, 15790, 15825), ("test/test.ml", 401, 15790, 15853), 0), [(("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15851), 0)], 0))]), (("test/test.ml", 401, 15790, 15809), ("test/test.ml", 401, 15790, 15854), 0), [(("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15853), 0)], 0))]), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 401, 15790, 15855), 0), [(("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15854), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0))), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0))), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 402, 15857, 15894), ("test/test.ml", 402, 15857, 15906), 0), 0)), (("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15907), 0), 0, 0); (((("pexp_attributes"), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0))), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0), 0, 0)]), (("test/test.ml", 402, 15857, 15892), ("test/test.ml", 402, 15857, 15926), 0), [(("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15924), 0)], 0))]), (("test/test.ml", 402, 15857, 15876), ("test/test.ml", 402, 15857, 15927), 0), [(("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15926), 0)], 0))]), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 402, 15857, 15928), 0), [(("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15927), 0)], 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 403, 15930, 15933), ("test/test.ml", 403, 15930, 15937), 0), 0)), (("test/test.ml", 403, 15930, 15932), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 403, 15930, 15938), 0), 0, 0))]), (("test/test.ml", 394, 15578, 15580), ("test/test.ml", 403, 15930, 15938), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0)), 0), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0), 0, 0)), (("test/test.ml", 393, 15522, 15568), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 403, 15930, 15938), 1), 0, 0), 0, (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0))]))
("DEBUG:Pstr_value:", 0, [(((("print_value_binding_expr", (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0))), (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0))), (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0)), 0), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 393, 15522, 15567), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0))), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0), 0, 0), [((Tag7 ([((("pexp_desc"), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 1)), ((("pexp_desc", (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0))), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0), 0, 0)); ((("pexp_loc"), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 1)), ((("pexp_loc", (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0))), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 1)), ((("pexp_loc_stack", (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0))), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 1)), ((("pexp_attributes", (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0))), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0), 0, 0))], 0), (("test/test.ml", 395, 15593, 15597), ("test/test.ml", 400, 15783, 15786), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0))), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0))), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 401, 15790, 15827), ("test/test.ml", 401, 15790, 15839), 0), 0)), (("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15840), 0), 0, 0); (((("pexp_desc"), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0))), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0), 0, 0)]), (("test/test.ml", 401, 15790, 15825), ("test/test.ml", 401, 15790, 15853), 0), [(("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15851), 0)], 0))]), (("test/test.ml", 401, 15790, 15809), ("test/test.ml", 401, 15790, 15854), 0), [(("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15853), 0)], 0))]), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 401, 15790, 15855), 0), [(("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15854), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0))), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0))), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 402, 15857, 15894), ("test/test.ml", 402, 15857, 15906), 0), 0)), (("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15907), 0), 0, 0); (((("pexp_attributes"), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0))), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0), 0, 0)]), (("test/test.ml", 402, 15857, 15892), ("test/test.ml", 402, 15857, 15926), 0), [(("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15924), 0)], 0))]), (("test/test.ml", 402, 15857, 15876), ("test/test.ml", 402, 15857, 15927), 0), [(("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15926), 0)], 0))]), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 402, 15857, 15928), 0), [(("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15927), 0)], 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 403, 15930, 15933), ("test/test.ml", 403, 15930, 15937), 0), 0)), (("test/test.ml", 403, 15930, 15932), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 403, 15930, 15938), 0), 0, 0))]), (("test/test.ml", 394, 15578, 15580), ("test/test.ml", 403, 15930, 15938), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0)), 0), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0), 0, 0)), (("test/test.ml", 393, 15522, 15568), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 403, 15930, 15938), 1), 0, 0), 0, (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0))])
("DEBUG:value_binding.pat:", ((("print_value_binding_expr", (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0))), (("test/test.ml", 393, 15522, 15526), ("test/test.ml", 393, 15522, 15550), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0))), (("test/test.ml", 393, 15522, 15552), ("test/test.ml", 393, 15522, 15553), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0)), 0), (("test/test.ml", 393, 15522, 15556), ("test/test.ml", 393, 15522, 15566), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 393, 15522, 15567), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0))), (("test/test.ml", 394, 15578, 15586), ("test/test.ml", 394, 15578, 15587), 0), 0, 0), [((Tag7 ([((("pexp_desc"), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 1)), ((("pexp_desc", (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0))), (("test/test.ml", 396, 15599, 15603), ("test/test.ml", 396, 15599, 15612), 0), 0, 0)); ((("pexp_loc"), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 1)), ((("pexp_loc", (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0))), (("test/test.ml", 397, 15638, 15642), ("test/test.ml", 397, 15638, 15650), 0), 0, 0)); ((("pexp_loc_stack"), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 1)), ((("pexp_loc_stack", (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0))), (("test/test.ml", 398, 15670, 15674), ("test/test.ml", 398, 15670, 15688), 0), 0, 0)); ((("pexp_attributes"), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 1)), ((("pexp_attributes", (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0))), (("test/test.ml", 399, 15713, 15717), ("test/test.ml", 399, 15713, 15732), 0), 0, 0))], 0), (("test/test.ml", 395, 15593, 15597), ("test/test.ml", 400, 15783, 15786), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0))), (("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15808), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0))), (("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15824), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 401, 15790, 15827), ("test/test.ml", 401, 15790, 15839), 0), 0)), (("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15840), 0), 0, 0); (((("pexp_desc"), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0))), (("test/test.ml", 401, 15790, 15842), ("test/test.ml", 401, 15790, 15851), 0), 0, 0)]), (("test/test.ml", 401, 15790, 15825), ("test/test.ml", 401, 15790, 15853), 0), [(("test/test.ml", 401, 15790, 15826), ("test/test.ml", 401, 15790, 15851), 0)], 0))]), (("test/test.ml", 401, 15790, 15809), ("test/test.ml", 401, 15790, 15854), 0), [(("test/test.ml", 401, 15790, 15810), ("test/test.ml", 401, 15790, 15853), 0)], 0))]), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 401, 15790, 15855), 0), [(("test/test.ml", 401, 15790, 15795), ("test/test.ml", 401, 15790, 15854), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0))), (("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15875), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0))), (("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15891), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG66:desc", (("test/test.ml", 402, 15857, 15894), ("test/test.ml", 402, 15857, 15906), 0), 0)), (("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15907), 0), 0, 0); (((("pexp_attributes"), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0))), (("test/test.ml", 402, 15857, 15909), ("test/test.ml", 402, 15857, 15924), 0), 0, 0)]), (("test/test.ml", 402, 15857, 15892), ("test/test.ml", 402, 15857, 15926), 0), [(("test/test.ml", 402, 15857, 15893), ("test/test.ml", 402, 15857, 15924), 0)], 0))]), (("test/test.ml", 402, 15857, 15876), ("test/test.ml", 402, 15857, 15927), 0), [(("test/test.ml", 402, 15857, 15877), ("test/test.ml", 402, 15857, 15926), 0)], 0))]), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 402, 15857, 15928), 0), [(("test/test.ml", 402, 15857, 15862), ("test/test.ml", 402, 15857, 15927), 0)], 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 403, 15930, 15933), ("test/test.ml", 403, 15930, 15937), 0), 0)), (("test/test.ml", 403, 15930, 15932), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 402, 15857, 15861), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 401, 15790, 15794), ("test/test.ml", 403, 15930, 15938), 0), 0, 0))]), (("test/test.ml", 394, 15578, 15580), ("test/test.ml", 403, 15930, 15938), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0)), 0), (("test/test.ml", 393, 15522, 15570), ("test/test.ml", 393, 15522, 15576), 0), 0, 0)), (("test/test.ml", 393, 15522, 15568), ("test/test.ml", 403, 15930, 15938), 0), 0, 0)), (("test/test.ml", 393, 15522, 15551), ("test/test.ml", 403, 15930, 15938), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 393, 15522, 15522), ("test/test.ml", 403, 15930, 15938), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("print_value_binding_list2", (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0))), (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0))), (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0), 0, 0), (Tag3 ((("value_binding"), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0)), 0), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 405, 15942, 15991), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0))), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0), 0, 0), [((Tag7 ([((("pvb_pat"), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 1)), ((("pvb_pat", (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0))), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0), 0, 0)); ((("pvb_expr"), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 1)), ((("pvb_expr", (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0))), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0), 0, 0)); ((("pvb_attributes"), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 1)), ((("pvb_attributes", (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0))), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0), 0, 0)); ((("pvb_loc"), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 1)), ((("pvb_loc", (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0))), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0), 0, 0))], 0), (("test/test.ml", 407, 16018, 16022), ("test/test.ml", 412, 16159, 16162), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0))), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0))), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.pat:", (("test/test.ml", 413, 16166, 16203), ("test/test.ml", 413, 16166, 16227), 0), 0)), (("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16228), 0), 0, 0); (((("pvb_pat"), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0))), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0), 0, 0)]), (("test/test.ml", 413, 16166, 16201), ("test/test.ml", 413, 16166, 16239), 0), [(("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16237), 0)], 0))]), (("test/test.ml", 413, 16166, 16185), ("test/test.ml", 413, 16166, 16240), 0), [(("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16239), 0)], 0))]), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 413, 16166, 16241), 0), [(("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16240), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0))), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0))), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.expr:", (("test/test.ml", 414, 16243, 16280), ("test/test.ml", 414, 16243, 16305), 0), 0)), (("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16306), 0), 0, 0); (((("pvb_expr"), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0))), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0), 0, 0)]), (("test/test.ml", 414, 16243, 16278), ("test/test.ml", 414, 16243, 16318), 0), [(("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16316), 0)], 0))]), (("test/test.ml", 414, 16243, 16262), ("test/test.ml", 414, 16243, 16319), 0), [(("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16318), 0)], 0))]), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 414, 16243, 16320), 0), [(("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16319), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0))), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0))), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.atrr:", (("test/test.ml", 416, 16364, 16401), ("test/test.ml", 416, 16364, 16426), 0), 0)), (("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16427), 0), 0, 0); (((("pvb_attributes"), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0))), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0), 0, 0)]), (("test/test.ml", 416, 16364, 16399), ("test/test.ml", 416, 16364, 16445), 0), [(("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16443), 0)], 0))]), (("test/test.ml", 416, 16364, 16383), ("test/test.ml", 416, 16364, 16446), 0), [(("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16445), 0)], 0))]), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 416, 16364, 16447), 0), [(("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16446), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0))), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0))), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.loc:", (("test/test.ml", 417, 16449, 16486), ("test/test.ml", 417, 16449, 16510), 0), 0)), (("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16511), 0), 0, 0); (((("pvb_loc"), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0))), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0), 0, 0)]), (("test/test.ml", 417, 16449, 16484), ("test/test.ml", 417, 16449, 16522), 0), [(("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16520), 0)], 0))]), (("test/test.ml", 417, 16449, 16468), ("test/test.ml", 417, 16449, 16523), 0), [(("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16522), 0)], 0))]), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 417, 16449, 16524), 0), [(("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16523), 0)], 0), (Tag1 (Tag2 ("yodo", (("test/test.ml", 418, 16526, 16531), ("test/test.ml", 418, 16526, 16535), 0), 0)), (("test/test.ml", 418, 16526, 16530), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 418, 16526, 16536), 0), 0, 0))]), (("test/test.ml", 406, 16003, 16005), ("test/test.ml", 418, 16526, 16536), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0)), 0), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0), 0, 0)), (("test/test.ml", 405, 15942, 15992), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 418, 16526, 16536), 1), 0, 0), 0, (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0))]), (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("print_value_binding_list2", (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0))), (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0))), (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0), 0, 0), (Tag3 ((("value_binding"), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0)), 0), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 405, 15942, 15991), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0))), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0), 0, 0), [((Tag7 ([((("pvb_pat"), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 1)), ((("pvb_pat", (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0))), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0), 0, 0)); ((("pvb_expr"), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 1)), ((("pvb_expr", (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0))), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0), 0, 0)); ((("pvb_attributes"), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 1)), ((("pvb_attributes", (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0))), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0), 0, 0)); ((("pvb_loc"), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 1)), ((("pvb_loc", (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0))), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0), 0, 0))], 0), (("test/test.ml", 407, 16018, 16022), ("test/test.ml", 412, 16159, 16162), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0))), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0))), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.pat:", (("test/test.ml", 413, 16166, 16203), ("test/test.ml", 413, 16166, 16227), 0), 0)), (("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16228), 0), 0, 0); (((("pvb_pat"), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0))), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0), 0, 0)]), (("test/test.ml", 413, 16166, 16201), ("test/test.ml", 413, 16166, 16239), 0), [(("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16237), 0)], 0))]), (("test/test.ml", 413, 16166, 16185), ("test/test.ml", 413, 16166, 16240), 0), [(("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16239), 0)], 0))]), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 413, 16166, 16241), 0), [(("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16240), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0))), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0))), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.expr:", (("test/test.ml", 414, 16243, 16280), ("test/test.ml", 414, 16243, 16305), 0), 0)), (("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16306), 0), 0, 0); (((("pvb_expr"), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0))), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0), 0, 0)]), (("test/test.ml", 414, 16243, 16278), ("test/test.ml", 414, 16243, 16318), 0), [(("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16316), 0)], 0))]), (("test/test.ml", 414, 16243, 16262), ("test/test.ml", 414, 16243, 16319), 0), [(("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16318), 0)], 0))]), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 414, 16243, 16320), 0), [(("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16319), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0))), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0))), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.atrr:", (("test/test.ml", 416, 16364, 16401), ("test/test.ml", 416, 16364, 16426), 0), 0)), (("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16427), 0), 0, 0); (((("pvb_attributes"), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0))), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0), 0, 0)]), (("test/test.ml", 416, 16364, 16399), ("test/test.ml", 416, 16364, 16445), 0), [(("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16443), 0)], 0))]), (("test/test.ml", 416, 16364, 16383), ("test/test.ml", 416, 16364, 16446), 0), [(("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16445), 0)], 0))]), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 416, 16364, 16447), 0), [(("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16446), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0))), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0))), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.loc:", (("test/test.ml", 417, 16449, 16486), ("test/test.ml", 417, 16449, 16510), 0), 0)), (("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16511), 0), 0, 0); (((("pvb_loc"), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0))), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0), 0, 0)]), (("test/test.ml", 417, 16449, 16484), ("test/test.ml", 417, 16449, 16522), 0), [(("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16520), 0)], 0))]), (("test/test.ml", 417, 16449, 16468), ("test/test.ml", 417, 16449, 16523), 0), [(("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16522), 0)], 0))]), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 417, 16449, 16524), 0), [(("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16523), 0)], 0), (Tag1 (Tag2 ("yodo", (("test/test.ml", 418, 16526, 16531), ("test/test.ml", 418, 16526, 16535), 0), 0)), (("test/test.ml", 418, 16526, 16530), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 418, 16526, 16536), 0), 0, 0))]), (("test/test.ml", 406, 16003, 16005), ("test/test.ml", 418, 16526, 16536), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0)), 0), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0), 0, 0)), (("test/test.ml", 405, 15942, 15992), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 418, 16526, 16536), 1), 0, 0), 0, (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0))]))
("DEBUG:Pstr_value:", 0, [(((("print_value_binding_list2", (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0))), (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0))), (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0), 0, 0), (Tag3 ((("value_binding"), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0)), 0), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 405, 15942, 15991), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0))), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0), 0, 0), [((Tag7 ([((("pvb_pat"), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 1)), ((("pvb_pat", (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0))), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0), 0, 0)); ((("pvb_expr"), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 1)), ((("pvb_expr", (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0))), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0), 0, 0)); ((("pvb_attributes"), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 1)), ((("pvb_attributes", (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0))), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0), 0, 0)); ((("pvb_loc"), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 1)), ((("pvb_loc", (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0))), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0), 0, 0))], 0), (("test/test.ml", 407, 16018, 16022), ("test/test.ml", 412, 16159, 16162), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0))), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0))), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.pat:", (("test/test.ml", 413, 16166, 16203), ("test/test.ml", 413, 16166, 16227), 0), 0)), (("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16228), 0), 0, 0); (((("pvb_pat"), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0))), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0), 0, 0)]), (("test/test.ml", 413, 16166, 16201), ("test/test.ml", 413, 16166, 16239), 0), [(("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16237), 0)], 0))]), (("test/test.ml", 413, 16166, 16185), ("test/test.ml", 413, 16166, 16240), 0), [(("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16239), 0)], 0))]), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 413, 16166, 16241), 0), [(("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16240), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0))), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0))), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.expr:", (("test/test.ml", 414, 16243, 16280), ("test/test.ml", 414, 16243, 16305), 0), 0)), (("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16306), 0), 0, 0); (((("pvb_expr"), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0))), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0), 0, 0)]), (("test/test.ml", 414, 16243, 16278), ("test/test.ml", 414, 16243, 16318), 0), [(("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16316), 0)], 0))]), (("test/test.ml", 414, 16243, 16262), ("test/test.ml", 414, 16243, 16319), 0), [(("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16318), 0)], 0))]), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 414, 16243, 16320), 0), [(("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16319), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0))), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0))), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.atrr:", (("test/test.ml", 416, 16364, 16401), ("test/test.ml", 416, 16364, 16426), 0), 0)), (("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16427), 0), 0, 0); (((("pvb_attributes"), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0))), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0), 0, 0)]), (("test/test.ml", 416, 16364, 16399), ("test/test.ml", 416, 16364, 16445), 0), [(("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16443), 0)], 0))]), (("test/test.ml", 416, 16364, 16383), ("test/test.ml", 416, 16364, 16446), 0), [(("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16445), 0)], 0))]), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 416, 16364, 16447), 0), [(("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16446), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0))), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0))), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.loc:", (("test/test.ml", 417, 16449, 16486), ("test/test.ml", 417, 16449, 16510), 0), 0)), (("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16511), 0), 0, 0); (((("pvb_loc"), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0))), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0), 0, 0)]), (("test/test.ml", 417, 16449, 16484), ("test/test.ml", 417, 16449, 16522), 0), [(("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16520), 0)], 0))]), (("test/test.ml", 417, 16449, 16468), ("test/test.ml", 417, 16449, 16523), 0), [(("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16522), 0)], 0))]), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 417, 16449, 16524), 0), [(("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16523), 0)], 0), (Tag1 (Tag2 ("yodo", (("test/test.ml", 418, 16526, 16531), ("test/test.ml", 418, 16526, 16535), 0), 0)), (("test/test.ml", 418, 16526, 16530), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 418, 16526, 16536), 0), 0, 0))]), (("test/test.ml", 406, 16003, 16005), ("test/test.ml", 418, 16526, 16536), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0)), 0), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0), 0, 0)), (("test/test.ml", 405, 15942, 15992), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 418, 16526, 16536), 1), 0, 0), 0, (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0))])
("DEBUG:value_binding.pat:", ((("print_value_binding_list2", (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0))), (("test/test.ml", 405, 15942, 15946), ("test/test.ml", 405, 15942, 15971), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0))), (("test/test.ml", 405, 15942, 15973), ("test/test.ml", 405, 15942, 15974), 0), 0, 0), (Tag3 ((("value_binding"), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0)), 0), (("test/test.ml", 405, 15942, 15977), ("test/test.ml", 405, 15942, 15990), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 405, 15942, 15991), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0))), (("test/test.ml", 406, 16003, 16011), ("test/test.ml", 406, 16003, 16012), 0), 0, 0), [((Tag7 ([((("pvb_pat"), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 1)), ((("pvb_pat", (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0))), (("test/test.ml", 408, 16024, 16028), ("test/test.ml", 408, 16024, 16035), 0), 0, 0)); ((("pvb_expr"), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 1)), ((("pvb_expr", (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0))), (("test/test.ml", 409, 16054, 16058), ("test/test.ml", 409, 16054, 16066), 0), 0, 0)); ((("pvb_attributes"), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 1)), ((("pvb_attributes", (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0))), (("test/test.ml", 410, 16088, 16092), ("test/test.ml", 410, 16088, 16106), 0), 0, 0)); ((("pvb_loc"), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 1)), ((("pvb_loc", (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0))), (("test/test.ml", 411, 16128, 16132), ("test/test.ml", 411, 16128, 16139), 0), 0, 0))], 0), (("test/test.ml", 407, 16018, 16022), ("test/test.ml", 412, 16159, 16162), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0))), (("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16184), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0))), (("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16200), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.pat:", (("test/test.ml", 413, 16166, 16203), ("test/test.ml", 413, 16166, 16227), 0), 0)), (("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16228), 0), 0, 0); (((("pvb_pat"), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0))), (("test/test.ml", 413, 16166, 16230), ("test/test.ml", 413, 16166, 16237), 0), 0, 0)]), (("test/test.ml", 413, 16166, 16201), ("test/test.ml", 413, 16166, 16239), 0), [(("test/test.ml", 413, 16166, 16202), ("test/test.ml", 413, 16166, 16237), 0)], 0))]), (("test/test.ml", 413, 16166, 16185), ("test/test.ml", 413, 16166, 16240), 0), [(("test/test.ml", 413, 16166, 16186), ("test/test.ml", 413, 16166, 16239), 0)], 0))]), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 413, 16166, 16241), 0), [(("test/test.ml", 413, 16166, 16171), ("test/test.ml", 413, 16166, 16240), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0))), (("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16261), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0))), (("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16277), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.expr:", (("test/test.ml", 414, 16243, 16280), ("test/test.ml", 414, 16243, 16305), 0), 0)), (("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16306), 0), 0, 0); (((("pvb_expr"), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0))), (("test/test.ml", 414, 16243, 16308), ("test/test.ml", 414, 16243, 16316), 0), 0, 0)]), (("test/test.ml", 414, 16243, 16278), ("test/test.ml", 414, 16243, 16318), 0), [(("test/test.ml", 414, 16243, 16279), ("test/test.ml", 414, 16243, 16316), 0)], 0))]), (("test/test.ml", 414, 16243, 16262), ("test/test.ml", 414, 16243, 16319), 0), [(("test/test.ml", 414, 16243, 16263), ("test/test.ml", 414, 16243, 16318), 0)], 0))]), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 414, 16243, 16320), 0), [(("test/test.ml", 414, 16243, 16248), ("test/test.ml", 414, 16243, 16319), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0))), (("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16382), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0))), (("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16398), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.atrr:", (("test/test.ml", 416, 16364, 16401), ("test/test.ml", 416, 16364, 16426), 0), 0)), (("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16427), 0), 0, 0); (((("pvb_attributes"), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0))), (("test/test.ml", 416, 16364, 16429), ("test/test.ml", 416, 16364, 16443), 0), 0, 0)]), (("test/test.ml", 416, 16364, 16399), ("test/test.ml", 416, 16364, 16445), 0), [(("test/test.ml", 416, 16364, 16400), ("test/test.ml", 416, 16364, 16443), 0)], 0))]), (("test/test.ml", 416, 16364, 16383), ("test/test.ml", 416, 16364, 16446), 0), [(("test/test.ml", 416, 16364, 16384), ("test/test.ml", 416, 16364, 16445), 0)], 0))]), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 416, 16364, 16447), 0), [(("test/test.ml", 416, 16364, 16369), ("test/test.ml", 416, 16364, 16446), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0))), (("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16467), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0))), (("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16483), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:value_binding.loc:", (("test/test.ml", 417, 16449, 16486), ("test/test.ml", 417, 16449, 16510), 0), 0)), (("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16511), 0), 0, 0); (((("pvb_loc"), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0))), (("test/test.ml", 417, 16449, 16513), ("test/test.ml", 417, 16449, 16520), 0), 0, 0)]), (("test/test.ml", 417, 16449, 16484), ("test/test.ml", 417, 16449, 16522), 0), [(("test/test.ml", 417, 16449, 16485), ("test/test.ml", 417, 16449, 16520), 0)], 0))]), (("test/test.ml", 417, 16449, 16468), ("test/test.ml", 417, 16449, 16523), 0), [(("test/test.ml", 417, 16449, 16469), ("test/test.ml", 417, 16449, 16522), 0)], 0))]), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 417, 16449, 16524), 0), [(("test/test.ml", 417, 16449, 16454), ("test/test.ml", 417, 16449, 16523), 0)], 0), (Tag1 (Tag2 ("yodo", (("test/test.ml", 418, 16526, 16531), ("test/test.ml", 418, 16526, 16535), 0), 0)), (("test/test.ml", 418, 16526, 16530), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 417, 16449, 16453), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 416, 16364, 16368), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 414, 16243, 16247), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 413, 16166, 16170), ("test/test.ml", 418, 16526, 16536), 0), 0, 0))]), (("test/test.ml", 406, 16003, 16005), ("test/test.ml", 418, 16526, 16536), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0)), 0), (("test/test.ml", 405, 15942, 15994), ("test/test.ml", 405, 15942, 16000), 0), 0, 0)), (("test/test.ml", 405, 15942, 15992), ("test/test.ml", 418, 16526, 16536), 0), 0, 0)), (("test/test.ml", 405, 15942, 15972), ("test/test.ml", 418, 16526, 16536), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 405, 15942, 15942), ("test/test.ml", 418, 16526, 16536), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("print_value_binding_list", (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0))), (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0))), (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0), 0, 0), (Tag3 ((("list"), (("test/test.ml", 420, 16538, 16590), ("test/test.ml", 420, 16538, 16594), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0)), 0), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0), 0, 0)]), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16594), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 420, 16538, 16595), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0))), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0)), 0), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0), 0, 0), 0, (Tag1 (Tag2 ("print_value_binding_list", (("test/test.ml", 422, 16621, 16632), ("test/test.ml", 422, 16621, 16656), 0), 0)), (("test/test.ml", 422, 16621, 16631), ("test/test.ml", 422, 16621, 16657), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 423, 16658, 16664), ("test/test.ml", 423, 16658, 16666), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0), 0, 0); ((("t", (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0))), (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0), 0, 0)]), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 1), 0, 0)))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0))), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list2"), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0))), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0))), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 424, 16672, 16705), 0), [(("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16704), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0))), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0), 0, 0), [(0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16713), ("test/test.ml", 425, 16706, 16715), 0), 0)), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16716), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0))), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0))), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0))), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16746), 0), [(("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16745), 0)], 0)); (0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16750), ("test/test.ml", 425, 16706, 16752), 0), 0)), (("test/test.ml", 425, 16706, 16749), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 421, 16606, 16608), ("test/test.ml", 425, 16706, 16753), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0)), 0), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0), 0, 0)), (("test/test.ml", 420, 16538, 16596), ("test/test.ml", 425, 16706, 16753), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 425, 16706, 16753), 1), 0, 0), 0, (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0))]), (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("print_value_binding_list", (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0))), (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0))), (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0), 0, 0), (Tag3 ((("list"), (("test/test.ml", 420, 16538, 16590), ("test/test.ml", 420, 16538, 16594), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0)), 0), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0), 0, 0)]), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16594), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 420, 16538, 16595), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0))), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0)), 0), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0), 0, 0), 0, (Tag1 (Tag2 ("print_value_binding_list", (("test/test.ml", 422, 16621, 16632), ("test/test.ml", 422, 16621, 16656), 0), 0)), (("test/test.ml", 422, 16621, 16631), ("test/test.ml", 422, 16621, 16657), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 423, 16658, 16664), ("test/test.ml", 423, 16658, 16666), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0), 0, 0); ((("t", (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0))), (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0), 0, 0)]), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 1), 0, 0)))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0))), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list2"), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0))), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0))), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 424, 16672, 16705), 0), [(("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16704), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0))), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0), 0, 0), [(0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16713), ("test/test.ml", 425, 16706, 16715), 0), 0)), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16716), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0))), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0))), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0))), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16746), 0), [(("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16745), 0)], 0)); (0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16750), ("test/test.ml", 425, 16706, 16752), 0), 0)), (("test/test.ml", 425, 16706, 16749), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 421, 16606, 16608), ("test/test.ml", 425, 16706, 16753), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0)), 0), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0), 0, 0)), (("test/test.ml", 420, 16538, 16596), ("test/test.ml", 425, 16706, 16753), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 425, 16706, 16753), 1), 0, 0), 0, (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0))]))
("DEBUG:Pstr_value:", 1, [(((("print_value_binding_list", (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0))), (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0))), (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0), 0, 0), (Tag3 ((("list"), (("test/test.ml", 420, 16538, 16590), ("test/test.ml", 420, 16538, 16594), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0)), 0), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0), 0, 0)]), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16594), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 420, 16538, 16595), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0))), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0)), 0), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0), 0, 0), 0, (Tag1 (Tag2 ("print_value_binding_list", (("test/test.ml", 422, 16621, 16632), ("test/test.ml", 422, 16621, 16656), 0), 0)), (("test/test.ml", 422, 16621, 16631), ("test/test.ml", 422, 16621, 16657), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 423, 16658, 16664), ("test/test.ml", 423, 16658, 16666), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0), 0, 0); ((("t", (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0))), (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0), 0, 0)]), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 1), 0, 0)))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0))), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list2"), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0))), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0))), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 424, 16672, 16705), 0), [(("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16704), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0))), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0), 0, 0), [(0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16713), ("test/test.ml", 425, 16706, 16715), 0), 0)), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16716), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0))), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0))), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0))), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16746), 0), [(("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16745), 0)], 0)); (0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16750), ("test/test.ml", 425, 16706, 16752), 0), 0)), (("test/test.ml", 425, 16706, 16749), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 421, 16606, 16608), ("test/test.ml", 425, 16706, 16753), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0)), 0), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0), 0, 0)), (("test/test.ml", 420, 16538, 16596), ("test/test.ml", 425, 16706, 16753), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 425, 16706, 16753), 1), 0, 0), 0, (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0))])
("DEBUG:value_binding.pat:", ((("print_value_binding_list", (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0))), (("test/test.ml", 420, 16538, 16546), ("test/test.ml", 420, 16538, 16570), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0))), (("test/test.ml", 420, 16538, 16572), ("test/test.ml", 420, 16538, 16573), 0), 0, 0), (Tag3 ((("list"), (("test/test.ml", 420, 16538, 16590), ("test/test.ml", 420, 16538, 16594), 0)), [(Tag3 ((("value_binding"), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0)), 0), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16589), 0), 0, 0)]), (("test/test.ml", 420, 16538, 16576), ("test/test.ml", 420, 16538, 16594), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 420, 16538, 16595), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0))), (("test/test.ml", 421, 16606, 16614), ("test/test.ml", 421, 16606, 16615), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0)), 0), (("test/test.ml", 422, 16621, 16625), ("test/test.ml", 422, 16621, 16627), 0), 0, 0), 0, (Tag1 (Tag2 ("print_value_binding_list", (("test/test.ml", 422, 16621, 16632), ("test/test.ml", 422, 16621, 16656), 0), 0)), (("test/test.ml", 422, 16621, 16631), ("test/test.ml", 422, 16621, 16657), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 423, 16658, 16664), ("test/test.ml", 423, 16658, 16666), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16663), 0), 0, 0); ((("t", (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0))), (("test/test.ml", 423, 16658, 16667), ("test/test.ml", 423, 16658, 16668), 0), 0, 0)]), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 1), 0, 0)))), (("test/test.ml", 423, 16658, 16662), ("test/test.ml", 423, 16658, 16668), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0))), (("test/test.ml", 425, 16706, 16710), ("test/test.ml", 425, 16706, 16711), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list2"), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0))), (("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16702), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0))), (("test/test.ml", 424, 16672, 16703), ("test/test.ml", 424, 16672, 16704), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 424, 16672, 16705), 0), [(("test/test.ml", 424, 16672, 16677), ("test/test.ml", 424, 16672, 16704), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0))), (("test/test.ml", 425, 16706, 16717), ("test/test.ml", 425, 16706, 16718), 0), 0, 0), [(0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16713), ("test/test.ml", 425, 16706, 16715), 0), 0)), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16716), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0))), (("test/test.ml", 425, 16706, 16747), ("test/test.ml", 425, 16706, 16748), 0), 0, 0), [(0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0))), (("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16743), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0))), (("test/test.ml", 425, 16706, 16744), ("test/test.ml", 425, 16706, 16745), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16746), 0), [(("test/test.ml", 425, 16706, 16719), ("test/test.ml", 425, 16706, 16745), 0)], 0)); (0, (Tag1 (Tag2 (";;", (("test/test.ml", 425, 16706, 16750), ("test/test.ml", 425, 16706, 16752), 0), 0)), (("test/test.ml", 425, 16706, 16749), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16718), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 425, 16706, 16712), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 424, 16672, 16676), ("test/test.ml", 425, 16706, 16753), 0), 0, 0))]), (("test/test.ml", 421, 16606, 16608), ("test/test.ml", 425, 16706, 16753), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0)), 0), (("test/test.ml", 420, 16538, 16598), ("test/test.ml", 420, 16538, 16604), 0), 0, 0)), (("test/test.ml", 420, 16538, 16596), ("test/test.ml", 425, 16706, 16753), 0), 0, 0)), (("test/test.ml", 420, 16538, 16571), ("test/test.ml", 425, 16706, 16753), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 420, 16538, 16538), ("test/test.ml", 425, 16706, 16753), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("process_id1", (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0))), (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0))), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0))), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16819), 0)), ((0, ((("string", (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0))), (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0), 0, 0)))), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16826), 0), 0, 0), 0, (((("string"), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0))), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16846), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0))), (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0), 0, 0); ((("string", (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0))), (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0), 0, 0)]), (("test/test.ml", 430, 16838, 16847), ("test/test.ml", 430, 16838, 16866), 0), [(("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16865), 0)], 0)))), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16866), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0))), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0))), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0))), (("test/test.ml", 431, 16870, 16887), ("test/test.ml", 431, 16870, 16898), 0), [(("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0)], 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16899), 0), [(("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16898), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0))), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 431, 16870, 16903), ("test/test.ml", 431, 16870, 16904), 0), 0)), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16905), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0))), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16914), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16926), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0))), (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0), 0, 0); ((("longident2", (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0))), (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0), 0, 0)]), (("test/test.ml", 432, 16916, 16927), ("test/test.ml", 432, 16916, 16949), 0), [(("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16948), 0)], 0)))), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16949), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0))), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0))), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0))), (("test/test.ml", 433, 16950, 16970), ("test/test.ml", 433, 16950, 16981), 0), [(("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0)], 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 433, 16950, 16982), 0), [(("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16981), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0))), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 433, 16950, 16987), ("test/test.ml", 433, 16950, 16988), 0), 0)), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 433, 16950, 16989), 0), 0, 0)); (0, (Tag5 ((((("process_id1"), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0))), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0))), (("test/test.ml", 434, 16990, 17012), ("test/test.ml", 434, 16990, 17024), 0), [(("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0)], 0))]), (("test/test.ml", 434, 16990, 16999), ("test/test.ml", 434, 16990, 17026), 0), [(("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17024), 0)], 0))]), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 428, 16794, 16796), ("test/test.ml", 434, 16990, 17026), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0)), 0), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0), 0, 0)), (("test/test.ml", 427, 16760, 16782), ("test/test.ml", 434, 16990, 17026), 0), 0, 0)), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 434, 16990, 17026), 1), 0, 0), 0, (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0))]), (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("process_id1", (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0))), (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0))), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0))), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16819), 0)), ((0, ((("string", (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0))), (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0), 0, 0)))), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16826), 0), 0, 0), 0, (((("string"), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0))), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16846), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0))), (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0), 0, 0); ((("string", (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0))), (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0), 0, 0)]), (("test/test.ml", 430, 16838, 16847), ("test/test.ml", 430, 16838, 16866), 0), [(("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16865), 0)], 0)))), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16866), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0))), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0))), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0))), (("test/test.ml", 431, 16870, 16887), ("test/test.ml", 431, 16870, 16898), 0), [(("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0)], 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16899), 0), [(("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16898), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0))), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 431, 16870, 16903), ("test/test.ml", 431, 16870, 16904), 0), 0)), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16905), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0))), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16914), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16926), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0))), (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0), 0, 0); ((("longident2", (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0))), (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0), 0, 0)]), (("test/test.ml", 432, 16916, 16927), ("test/test.ml", 432, 16916, 16949), 0), [(("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16948), 0)], 0)))), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16949), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0))), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0))), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0))), (("test/test.ml", 433, 16950, 16970), ("test/test.ml", 433, 16950, 16981), 0), [(("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0)], 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 433, 16950, 16982), 0), [(("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16981), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0))), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 433, 16950, 16987), ("test/test.ml", 433, 16950, 16988), 0), 0)), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 433, 16950, 16989), 0), 0, 0)); (0, (Tag5 ((((("process_id1"), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0))), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0))), (("test/test.ml", 434, 16990, 17012), ("test/test.ml", 434, 16990, 17024), 0), [(("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0)], 0))]), (("test/test.ml", 434, 16990, 16999), ("test/test.ml", 434, 16990, 17026), 0), [(("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17024), 0)], 0))]), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 428, 16794, 16796), ("test/test.ml", 434, 16990, 17026), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0)), 0), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0), 0, 0)), (("test/test.ml", 427, 16760, 16782), ("test/test.ml", 434, 16990, 17026), 0), 0, 0)), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 434, 16990, 17026), 1), 0, 0), 0, (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0))]))
("DEBUG:Pstr_value:", 1, [(((("process_id1", (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0))), (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0))), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0))), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16819), 0)), ((0, ((("string", (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0))), (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0), 0, 0)))), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16826), 0), 0, 0), 0, (((("string"), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0))), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16846), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0))), (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0), 0, 0); ((("string", (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0))), (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0), 0, 0)]), (("test/test.ml", 430, 16838, 16847), ("test/test.ml", 430, 16838, 16866), 0), [(("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16865), 0)], 0)))), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16866), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0))), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0))), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0))), (("test/test.ml", 431, 16870, 16887), ("test/test.ml", 431, 16870, 16898), 0), [(("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0)], 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16899), 0), [(("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16898), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0))), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 431, 16870, 16903), ("test/test.ml", 431, 16870, 16904), 0), 0)), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16905), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0))), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16914), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16926), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0))), (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0), 0, 0); ((("longident2", (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0))), (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0), 0, 0)]), (("test/test.ml", 432, 16916, 16927), ("test/test.ml", 432, 16916, 16949), 0), [(("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16948), 0)], 0)))), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16949), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0))), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0))), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0))), (("test/test.ml", 433, 16950, 16970), ("test/test.ml", 433, 16950, 16981), 0), [(("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0)], 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 433, 16950, 16982), 0), [(("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16981), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0))), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 433, 16950, 16987), ("test/test.ml", 433, 16950, 16988), 0), 0)), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 433, 16950, 16989), 0), 0, 0)); (0, (Tag5 ((((("process_id1"), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0))), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0))), (("test/test.ml", 434, 16990, 17012), ("test/test.ml", 434, 16990, 17024), 0), [(("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0)], 0))]), (("test/test.ml", 434, 16990, 16999), ("test/test.ml", 434, 16990, 17026), 0), [(("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17024), 0)], 0))]), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 428, 16794, 16796), ("test/test.ml", 434, 16990, 17026), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0)), 0), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0), 0, 0)), (("test/test.ml", 427, 16760, 16782), ("test/test.ml", 434, 16990, 17026), 0), 0, 0)), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 434, 16990, 17026), 1), 0, 0), 0, (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0))])
("DEBUG:value_binding.pat:", ((("process_id1", (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0))), (("test/test.ml", 427, 16760, 16768), ("test/test.ml", 427, 16760, 16779), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0))), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 427, 16760, 16781), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0))), (("test/test.ml", 428, 16794, 16802), ("test/test.ml", 428, 16794, 16803), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16819), 0)), ((0, ((("string", (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0))), (("test/test.ml", 429, 16809, 16820), ("test/test.ml", 429, 16809, 16826), 0), 0, 0)))), (("test/test.ml", 429, 16809, 16813), ("test/test.ml", 429, 16809, 16826), 0), 0, 0), 0, (((("string"), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0))), (("test/test.ml", 429, 16809, 16830), ("test/test.ml", 429, 16809, 16836), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16846), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0))), (("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16857), 0), 0, 0); ((("string", (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0))), (("test/test.ml", 430, 16838, 16859), ("test/test.ml", 430, 16838, 16865), 0), 0, 0)]), (("test/test.ml", 430, 16838, 16847), ("test/test.ml", 430, 16838, 16866), 0), [(("test/test.ml", 430, 16838, 16848), ("test/test.ml", 430, 16838, 16865), 0)], 0)))), (("test/test.ml", 430, 16838, 16842), ("test/test.ml", 430, 16838, 16866), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0))), (("test/test.ml", 431, 16870, 16900), ("test/test.ml", 431, 16870, 16901), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0))), (("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16886), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0))), (("test/test.ml", 431, 16870, 16887), ("test/test.ml", 431, 16870, 16898), 0), [(("test/test.ml", 431, 16870, 16888), ("test/test.ml", 431, 16870, 16897), 0)], 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16899), 0), [(("test/test.ml", 431, 16870, 16875), ("test/test.ml", 431, 16870, 16898), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0))), (("test/test.ml", 431, 16870, 16906), ("test/test.ml", 431, 16870, 16907), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 431, 16870, 16903), ("test/test.ml", 431, 16870, 16904), 0), 0)), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16905), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0))), (("test/test.ml", 431, 16870, 16908), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16902), ("test/test.ml", 431, 16870, 16914), 0), 0, 0))]), (("test/test.ml", 431, 16870, 16874), ("test/test.ml", 431, 16870, 16914), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16926), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0))), (("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16937), 0), 0, 0); ((("longident2", (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0))), (("test/test.ml", 432, 16916, 16938), ("test/test.ml", 432, 16916, 16948), 0), 0, 0)]), (("test/test.ml", 432, 16916, 16927), ("test/test.ml", 432, 16916, 16949), 0), [(("test/test.ml", 432, 16916, 16928), ("test/test.ml", 432, 16916, 16948), 0)], 0)))), (("test/test.ml", 432, 16916, 16920), ("test/test.ml", 432, 16916, 16949), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0))), (("test/test.ml", 433, 16950, 16984), ("test/test.ml", 433, 16950, 16985), 0), 0, 0), [(0, (Tag5 ((((("process_id1"), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0))), (("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16969), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0))), (("test/test.ml", 433, 16950, 16970), ("test/test.ml", 433, 16950, 16981), 0), [(("test/test.ml", 433, 16950, 16971), ("test/test.ml", 433, 16950, 16980), 0)], 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 433, 16950, 16982), 0), [(("test/test.ml", 433, 16950, 16958), ("test/test.ml", 433, 16950, 16981), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0))), (("test/test.ml", 434, 16990, 16997), ("test/test.ml", 434, 16990, 16998), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 433, 16950, 16987), ("test/test.ml", 433, 16950, 16988), 0), 0)), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 433, 16950, 16989), 0), 0, 0)); (0, (Tag5 ((((("process_id1"), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0))), (("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17011), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0))), (("test/test.ml", 434, 16990, 17012), ("test/test.ml", 434, 16990, 17024), 0), [(("test/test.ml", 434, 16990, 17013), ("test/test.ml", 434, 16990, 17023), 0)], 0))]), (("test/test.ml", 434, 16990, 16999), ("test/test.ml", 434, 16990, 17026), 0), [(("test/test.ml", 434, 16990, 17000), ("test/test.ml", 434, 16990, 17024), 0)], 0))]), (("test/test.ml", 433, 16950, 16986), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 433, 16950, 16957), ("test/test.ml", 434, 16990, 17026), 0), 0, 0))]), (("test/test.ml", 428, 16794, 16796), ("test/test.ml", 434, 16990, 17026), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0)), 0), (("test/test.ml", 427, 16760, 16784), ("test/test.ml", 427, 16760, 16790), 0), 0, 0)), (("test/test.ml", 427, 16760, 16782), ("test/test.ml", 434, 16990, 17026), 0), 0, 0)), (("test/test.ml", 427, 16760, 16780), ("test/test.ml", 434, 16990, 17026), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 427, 16760, 16760), ("test/test.ml", 434, 16990, 17026), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("stringlister", (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0))), (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0))), (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0)), 0), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 436, 17029, 17065), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0))), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0)), 0), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0), 0, 0), 0, (Tag1 (Tag2 ("stringlister", (("test/test.ml", 438, 17092, 17102), ("test/test.ml", 438, 17092, 17114), 0), 0)), (("test/test.ml", 438, 17092, 17101), ("test/test.ml", 438, 17092, 17115), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 439, 17116, 17122), ("test/test.ml", 439, 17116, 17124), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0), 0, 0); ((("t", (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0))), (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0), 0, 0)]), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 1), 0, 0)))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0))), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0))), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0), 0, 0)); (0, (Tag5 ((((("stringlister"), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0))), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0))), (("test/test.ml", 439, 17116, 17146), ("test/test.ml", 439, 17116, 17149), 0), [(("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0)], 0))]), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 437, 17077, 17079), ("test/test.ml", 439, 17116, 17149), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0)), 0), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0), 0, 0)), (("test/test.ml", 436, 17029, 17066), ("test/test.ml", 439, 17116, 17149), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 439, 17116, 17149), 1), 0, 0), 0, (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 439, 17116, 17149), 0)); (((("process_id2", (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0))), (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0))), (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0), 0, 0), (Tag2 ([(Tag3 ((("longident"), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0)), 0), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0)), 0), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)]), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 441, 17154, 17193), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0))), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0))), (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0), 0, 0); ((("b", (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0))), (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0), 0, 0)]), (("test/test.ml", 443, 17218, 17222), ("test/test.ml", 443, 17218, 17227), 0), [(("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17226), 0)], 0), 0, (Tag2 (0, [(((("sc", (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0))), (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0), 0, 0), (Tag5 ((((("stringlister"), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0))), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0), 0, 0), [(0, (((("b"), (("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0))), (("test/test.ml", 444, 17231, 17256), ("test/test.ml", 444, 17231, 17259), 0), [(("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0)], 0))]), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17259), 0), 0, 0), 0, (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 444, 17231, 17259), 0))], (Tag6 ((((("a"), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0))), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17293), 0)), ((0, ((("string", (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0))), (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0), 0, 0)))), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17300), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0))), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0))), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0))), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0), 0, 0))]), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17315), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17326), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0))), (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0), 0, 0); ((("string", (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0))), (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0), 0, 0)]), (("test/test.ml", 447, 17316, 17327), ("test/test.ml", 447, 17316, 17346), 0), [(("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17345), 0)], 0)))), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17346), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0))), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0))), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0))), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0), 0, 0); (((("b"), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0))), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0), 0, 0)]), (("test/test.ml", 448, 17350, 17369), ("test/test.ml", 448, 17350, 17382), 0), [(("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17381), 0)], 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17383), 0), [(("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17382), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0))), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 448, 17350, 17387), ("test/test.ml", 448, 17350, 17388), 0), 0)), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17389), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0))), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0))), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0))), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17403), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17416), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0))), (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0), 0, 0); ((("longident2", (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0))), (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0), 0, 0)]), (("test/test.ml", 449, 17404, 17417), ("test/test.ml", 449, 17404, 17439), 0), [(("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17438), 0)], 0)))), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17439), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0))), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0))), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0))), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0), 0, 0); (((("b"), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0))), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0), 0, 0)]), (("test/test.ml", 450, 17440, 17462), ("test/test.ml", 450, 17440, 17476), 0), [(("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17475), 0)], 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 450, 17440, 17477), 0), [(("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17476), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0))), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 450, 17440, 17482), ("test/test.ml", 450, 17440, 17483), 0), 0)), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 450, 17440, 17484), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0))), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0))), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0), 0, 0), [(0, (Tag8 ([(((("longident2"), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0))), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0), 0, 0); (((("b"), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0))), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0), 0, 0)]), (("test/test.ml", 451, 17485, 17509), ("test/test.ml", 451, 17485, 17523), 0), [(("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17522), 0)], 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17525), 0), [(("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17523), 0)], 0)); (0, (((("sc"), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0))), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 445, 17264, 17268), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 442, 17203, 17205), ("test/test.ml", 451, 17485, 17530), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0)), 0), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0), 0, 0)), (("test/test.ml", 441, 17154, 17193), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 451, 17485, 17530), 1), 0, 0), 0, (("test/test.ml", 440, 17150, 17150), ("test/test.ml", 451, 17485, 17530), 0))]), (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 451, 17485, 17530), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("stringlister", (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0))), (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0))), (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0)), 0), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 436, 17029, 17065), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0))), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0)), 0), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0), 0, 0), 0, (Tag1 (Tag2 ("stringlister", (("test/test.ml", 438, 17092, 17102), ("test/test.ml", 438, 17092, 17114), 0), 0)), (("test/test.ml", 438, 17092, 17101), ("test/test.ml", 438, 17092, 17115), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 439, 17116, 17122), ("test/test.ml", 439, 17116, 17124), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0), 0, 0); ((("t", (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0))), (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0), 0, 0)]), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 1), 0, 0)))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0))), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0))), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0), 0, 0)); (0, (Tag5 ((((("stringlister"), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0))), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0))), (("test/test.ml", 439, 17116, 17146), ("test/test.ml", 439, 17116, 17149), 0), [(("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0)], 0))]), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 437, 17077, 17079), ("test/test.ml", 439, 17116, 17149), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0)), 0), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0), 0, 0)), (("test/test.ml", 436, 17029, 17066), ("test/test.ml", 439, 17116, 17149), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 439, 17116, 17149), 1), 0, 0), 0, (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 439, 17116, 17149), 0)); (((("process_id2", (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0))), (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0))), (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0), 0, 0), (Tag2 ([(Tag3 ((("longident"), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0)), 0), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0)), 0), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)]), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 441, 17154, 17193), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0))), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0))), (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0), 0, 0); ((("b", (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0))), (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0), 0, 0)]), (("test/test.ml", 443, 17218, 17222), ("test/test.ml", 443, 17218, 17227), 0), [(("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17226), 0)], 0), 0, (Tag2 (0, [(((("sc", (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0))), (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0), 0, 0), (Tag5 ((((("stringlister"), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0))), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0), 0, 0), [(0, (((("b"), (("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0))), (("test/test.ml", 444, 17231, 17256), ("test/test.ml", 444, 17231, 17259), 0), [(("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0)], 0))]), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17259), 0), 0, 0), 0, (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 444, 17231, 17259), 0))], (Tag6 ((((("a"), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0))), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17293), 0)), ((0, ((("string", (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0))), (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0), 0, 0)))), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17300), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0))), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0))), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0))), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0), 0, 0))]), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17315), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17326), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0))), (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0), 0, 0); ((("string", (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0))), (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0), 0, 0)]), (("test/test.ml", 447, 17316, 17327), ("test/test.ml", 447, 17316, 17346), 0), [(("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17345), 0)], 0)))), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17346), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0))), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0))), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0))), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0), 0, 0); (((("b"), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0))), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0), 0, 0)]), (("test/test.ml", 448, 17350, 17369), ("test/test.ml", 448, 17350, 17382), 0), [(("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17381), 0)], 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17383), 0), [(("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17382), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0))), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 448, 17350, 17387), ("test/test.ml", 448, 17350, 17388), 0), 0)), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17389), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0))), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0))), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0))), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17403), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17416), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0))), (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0), 0, 0); ((("longident2", (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0))), (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0), 0, 0)]), (("test/test.ml", 449, 17404, 17417), ("test/test.ml", 449, 17404, 17439), 0), [(("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17438), 0)], 0)))), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17439), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0))), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0))), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0))), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0), 0, 0); (((("b"), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0))), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0), 0, 0)]), (("test/test.ml", 450, 17440, 17462), ("test/test.ml", 450, 17440, 17476), 0), [(("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17475), 0)], 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 450, 17440, 17477), 0), [(("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17476), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0))), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 450, 17440, 17482), ("test/test.ml", 450, 17440, 17483), 0), 0)), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 450, 17440, 17484), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0))), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0))), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0), 0, 0), [(0, (Tag8 ([(((("longident2"), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0))), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0), 0, 0); (((("b"), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0))), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0), 0, 0)]), (("test/test.ml", 451, 17485, 17509), ("test/test.ml", 451, 17485, 17523), 0), [(("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17522), 0)], 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17525), 0), [(("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17523), 0)], 0)); (0, (((("sc"), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0))), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 445, 17264, 17268), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 442, 17203, 17205), ("test/test.ml", 451, 17485, 17530), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0)), 0), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0), 0, 0)), (("test/test.ml", 441, 17154, 17193), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 451, 17485, 17530), 1), 0, 0), 0, (("test/test.ml", 440, 17150, 17150), ("test/test.ml", 451, 17485, 17530), 0))]))
("DEBUG:Pstr_value:", 1, [(((("stringlister", (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0))), (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0))), (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0)), 0), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 436, 17029, 17065), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0))), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0)), 0), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0), 0, 0), 0, (Tag1 (Tag2 ("stringlister", (("test/test.ml", 438, 17092, 17102), ("test/test.ml", 438, 17092, 17114), 0), 0)), (("test/test.ml", 438, 17092, 17101), ("test/test.ml", 438, 17092, 17115), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 439, 17116, 17122), ("test/test.ml", 439, 17116, 17124), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0), 0, 0); ((("t", (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0))), (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0), 0, 0)]), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 1), 0, 0)))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0))), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0))), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0), 0, 0)); (0, (Tag5 ((((("stringlister"), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0))), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0))), (("test/test.ml", 439, 17116, 17146), ("test/test.ml", 439, 17116, 17149), 0), [(("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0)], 0))]), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 437, 17077, 17079), ("test/test.ml", 439, 17116, 17149), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0)), 0), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0), 0, 0)), (("test/test.ml", 436, 17029, 17066), ("test/test.ml", 439, 17116, 17149), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 439, 17116, 17149), 1), 0, 0), 0, (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 439, 17116, 17149), 0)); (((("process_id2", (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0))), (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0))), (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0), 0, 0), (Tag2 ([(Tag3 ((("longident"), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0)), 0), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0)), 0), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)]), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 441, 17154, 17193), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0))), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0))), (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0), 0, 0); ((("b", (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0))), (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0), 0, 0)]), (("test/test.ml", 443, 17218, 17222), ("test/test.ml", 443, 17218, 17227), 0), [(("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17226), 0)], 0), 0, (Tag2 (0, [(((("sc", (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0))), (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0), 0, 0), (Tag5 ((((("stringlister"), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0))), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0), 0, 0), [(0, (((("b"), (("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0))), (("test/test.ml", 444, 17231, 17256), ("test/test.ml", 444, 17231, 17259), 0), [(("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0)], 0))]), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17259), 0), 0, 0), 0, (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 444, 17231, 17259), 0))], (Tag6 ((((("a"), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0))), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17293), 0)), ((0, ((("string", (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0))), (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0), 0, 0)))), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17300), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0))), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0))), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0))), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0), 0, 0))]), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17315), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17326), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0))), (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0), 0, 0); ((("string", (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0))), (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0), 0, 0)]), (("test/test.ml", 447, 17316, 17327), ("test/test.ml", 447, 17316, 17346), 0), [(("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17345), 0)], 0)))), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17346), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0))), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0))), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0))), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0), 0, 0); (((("b"), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0))), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0), 0, 0)]), (("test/test.ml", 448, 17350, 17369), ("test/test.ml", 448, 17350, 17382), 0), [(("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17381), 0)], 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17383), 0), [(("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17382), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0))), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 448, 17350, 17387), ("test/test.ml", 448, 17350, 17388), 0), 0)), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17389), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0))), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0))), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0))), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17403), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17416), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0))), (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0), 0, 0); ((("longident2", (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0))), (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0), 0, 0)]), (("test/test.ml", 449, 17404, 17417), ("test/test.ml", 449, 17404, 17439), 0), [(("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17438), 0)], 0)))), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17439), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0))), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0))), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0))), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0), 0, 0); (((("b"), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0))), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0), 0, 0)]), (("test/test.ml", 450, 17440, 17462), ("test/test.ml", 450, 17440, 17476), 0), [(("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17475), 0)], 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 450, 17440, 17477), 0), [(("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17476), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0))), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 450, 17440, 17482), ("test/test.ml", 450, 17440, 17483), 0), 0)), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 450, 17440, 17484), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0))), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0))), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0), 0, 0), [(0, (Tag8 ([(((("longident2"), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0))), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0), 0, 0); (((("b"), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0))), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0), 0, 0)]), (("test/test.ml", 451, 17485, 17509), ("test/test.ml", 451, 17485, 17523), 0), [(("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17522), 0)], 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17525), 0), [(("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17523), 0)], 0)); (0, (((("sc"), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0))), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 445, 17264, 17268), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 442, 17203, 17205), ("test/test.ml", 451, 17485, 17530), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0)), 0), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0), 0, 0)), (("test/test.ml", 441, 17154, 17193), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 451, 17485, 17530), 1), 0, 0), 0, (("test/test.ml", 440, 17150, 17150), ("test/test.ml", 451, 17485, 17530), 0))])
("DEBUG:value_binding.pat:", ((("process_id2", (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0))), (("test/test.ml", 441, 17154, 17156), ("test/test.ml", 441, 17154, 17167), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0))), (("test/test.ml", 441, 17154, 17168), ("test/test.ml", 441, 17154, 17169), 0), 0, 0), (Tag2 ([(Tag3 ((("longident"), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0)), 0), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0)), 0), (("test/test.ml", 441, 17154, 17181), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)]), (("test/test.ml", 441, 17154, 17170), ("test/test.ml", 441, 17154, 17192), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 441, 17154, 17193), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0))), (("test/test.ml", 442, 17203, 17211), ("test/test.ml", 442, 17203, 17212), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0))), (("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17224), 0), 0, 0); ((("b", (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0))), (("test/test.ml", 443, 17218, 17225), ("test/test.ml", 443, 17218, 17226), 0), 0, 0)]), (("test/test.ml", 443, 17218, 17222), ("test/test.ml", 443, 17218, 17227), 0), [(("test/test.ml", 443, 17218, 17223), ("test/test.ml", 443, 17218, 17226), 0)], 0), 0, (Tag2 (0, [(((("sc", (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0))), (("test/test.ml", 444, 17231, 17239), ("test/test.ml", 444, 17231, 17241), 0), 0, 0), (Tag5 ((((("stringlister"), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0))), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17256), 0), 0, 0), [(0, (((("b"), (("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0))), (("test/test.ml", 444, 17231, 17256), ("test/test.ml", 444, 17231, 17259), 0), [(("test/test.ml", 444, 17231, 17257), ("test/test.ml", 444, 17231, 17258), 0)], 0))]), (("test/test.ml", 444, 17231, 17244), ("test/test.ml", 444, 17231, 17259), 0), 0, 0), 0, (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 444, 17231, 17259), 0))], (Tag6 ((((("a"), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0))), (("test/test.ml", 445, 17264, 17274), ("test/test.ml", 445, 17264, 17275), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17293), 0)), ((0, ((("string", (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0))), (("test/test.ml", 446, 17281, 17294), ("test/test.ml", 446, 17281, 17300), 0), 0, 0)))), (("test/test.ml", 446, 17281, 17287), ("test/test.ml", 446, 17281, 17300), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0))), (("test/test.ml", 446, 17281, 17311), ("test/test.ml", 446, 17281, 17312), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0))), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17310), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0))), (("test/test.ml", 446, 17281, 17313), ("test/test.ml", 446, 17281, 17315), 0), 0, 0))]), (("test/test.ml", 446, 17281, 17304), ("test/test.ml", 446, 17281, 17315), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17326), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0))), (("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17337), 0), 0, 0); ((("string", (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0))), (("test/test.ml", 447, 17316, 17339), ("test/test.ml", 447, 17316, 17345), 0), 0, 0)]), (("test/test.ml", 447, 17316, 17327), ("test/test.ml", 447, 17316, 17346), 0), [(("test/test.ml", 447, 17316, 17328), ("test/test.ml", 447, 17316, 17345), 0)], 0)))), (("test/test.ml", 447, 17316, 17322), ("test/test.ml", 447, 17316, 17346), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0))), (("test/test.ml", 448, 17350, 17384), ("test/test.ml", 448, 17350, 17385), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0))), (("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17368), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0))), (("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17379), 0), 0, 0); (((("b"), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0))), (("test/test.ml", 448, 17350, 17380), ("test/test.ml", 448, 17350, 17381), 0), 0, 0)]), (("test/test.ml", 448, 17350, 17369), ("test/test.ml", 448, 17350, 17382), 0), [(("test/test.ml", 448, 17350, 17370), ("test/test.ml", 448, 17350, 17381), 0)], 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17383), 0), [(("test/test.ml", 448, 17350, 17357), ("test/test.ml", 448, 17350, 17382), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0))), (("test/test.ml", 448, 17350, 17390), ("test/test.ml", 448, 17350, 17391), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 448, 17350, 17387), ("test/test.ml", 448, 17350, 17388), 0), 0)), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17389), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0))), (("test/test.ml", 448, 17350, 17399), ("test/test.ml", 448, 17350, 17400), 0), 0, 0), [(0, (((("string"), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0))), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17398), 0), 0, 0)); (0, (((("sc"), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0))), (("test/test.ml", 448, 17350, 17401), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17392), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17386), ("test/test.ml", 448, 17350, 17403), 0), 0, 0))]), (("test/test.ml", 448, 17350, 17356), ("test/test.ml", 448, 17350, 17403), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17416), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0))), (("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17427), 0), 0, 0); ((("longident2", (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0))), (("test/test.ml", 449, 17404, 17428), ("test/test.ml", 449, 17404, 17438), 0), 0, 0)]), (("test/test.ml", 449, 17404, 17417), ("test/test.ml", 449, 17404, 17439), 0), [(("test/test.ml", 449, 17404, 17418), ("test/test.ml", 449, 17404, 17438), 0)], 0)))), (("test/test.ml", 449, 17404, 17410), ("test/test.ml", 449, 17404, 17439), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0))), (("test/test.ml", 450, 17440, 17479), ("test/test.ml", 450, 17440, 17480), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0))), (("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17461), 0), 0, 0), [(0, (Tag8 ([(((("longident"), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0))), (("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17472), 0), 0, 0); (((("b"), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0))), (("test/test.ml", 450, 17440, 17474), ("test/test.ml", 450, 17440, 17475), 0), 0, 0)]), (("test/test.ml", 450, 17440, 17462), ("test/test.ml", 450, 17440, 17476), 0), [(("test/test.ml", 450, 17440, 17463), ("test/test.ml", 450, 17440, 17475), 0)], 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 450, 17440, 17477), 0), [(("test/test.ml", 450, 17440, 17450), ("test/test.ml", 450, 17440, 17476), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0))), (("test/test.ml", 451, 17485, 17494), ("test/test.ml", 451, 17485, 17495), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 450, 17440, 17482), ("test/test.ml", 450, 17440, 17483), 0), 0)), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 450, 17440, 17484), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0))), (("test/test.ml", 451, 17485, 17526), ("test/test.ml", 451, 17485, 17527), 0), 0, 0), [(0, (Tag5 ((((("process_id2"), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0))), (("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17508), 0), 0, 0), [(0, (Tag8 ([(((("longident2"), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0))), (("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17520), 0), 0, 0); (((("b"), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0))), (("test/test.ml", 451, 17485, 17521), ("test/test.ml", 451, 17485, 17522), 0), 0, 0)]), (("test/test.ml", 451, 17485, 17509), ("test/test.ml", 451, 17485, 17523), 0), [(("test/test.ml", 451, 17485, 17510), ("test/test.ml", 451, 17485, 17522), 0)], 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17525), 0), [(("test/test.ml", 451, 17485, 17497), ("test/test.ml", 451, 17485, 17523), 0)], 0)); (0, (((("sc"), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0))), (("test/test.ml", 451, 17485, 17528), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 451, 17485, 17496), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17481), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 450, 17440, 17449), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 445, 17264, 17268), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 444, 17231, 17235), ("test/test.ml", 451, 17485, 17530), 0), 0, 0))]), (("test/test.ml", 442, 17203, 17205), ("test/test.ml", 451, 17485, 17530), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0)), 0), (("test/test.ml", 441, 17154, 17194), ("test/test.ml", 441, 17154, 17200), 0), 0, 0)), (("test/test.ml", 441, 17154, 17193), ("test/test.ml", 451, 17485, 17530), 0), 0, 0)), (("test/test.ml", 441, 17154, 17167), ("test/test.ml", 451, 17485, 17530), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 440, 17150, 17150), ("test/test.ml", 451, 17485, 17530), 0))
("DEBUG:value_binding.pat:", ((("stringlister", (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0))), (("test/test.ml", 436, 17029, 17037), ("test/test.ml", 436, 17029, 17049), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0))), (("test/test.ml", 436, 17029, 17051), ("test/test.ml", 436, 17029, 17052), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0)), 0), (("test/test.ml", 436, 17029, 17053), ("test/test.ml", 436, 17029, 17064), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 436, 17029, 17065), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0))), (("test/test.ml", 437, 17077, 17085), ("test/test.ml", 437, 17077, 17086), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0)), 0), (("test/test.ml", 438, 17092, 17096), ("test/test.ml", 438, 17092, 17098), 0), 0, 0), 0, (Tag1 (Tag2 ("stringlister", (("test/test.ml", 438, 17092, 17102), ("test/test.ml", 438, 17092, 17114), 0), 0)), (("test/test.ml", 438, 17092, 17101), ("test/test.ml", 438, 17092, 17115), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 439, 17116, 17122), ("test/test.ml", 439, 17116, 17124), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17121), 0), 0, 0); ((("t", (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0))), (("test/test.ml", 439, 17116, 17125), ("test/test.ml", 439, 17116, 17126), 0), 0, 0)]), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 1), 0, 0)))), (("test/test.ml", 439, 17116, 17120), ("test/test.ml", 439, 17116, 17126), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0))), (("test/test.ml", 439, 17116, 17132), ("test/test.ml", 439, 17116, 17133), 0), 0, 0), [(0, (((("h"), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0))), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17131), 0), 0, 0)); (0, (Tag5 ((((("stringlister"), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0))), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17146), 0), 0, 0), [(0, (((("t"), (("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0))), (("test/test.ml", 439, 17116, 17146), ("test/test.ml", 439, 17116, 17149), 0), [(("test/test.ml", 439, 17116, 17147), ("test/test.ml", 439, 17116, 17148), 0)], 0))]), (("test/test.ml", 439, 17116, 17134), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 439, 17116, 17130), ("test/test.ml", 439, 17116, 17149), 0), 0, 0))]), (("test/test.ml", 437, 17077, 17079), ("test/test.ml", 439, 17116, 17149), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0)), 0), (("test/test.ml", 436, 17029, 17068), ("test/test.ml", 436, 17029, 17074), 0), 0, 0)), (("test/test.ml", 436, 17029, 17066), ("test/test.ml", 439, 17116, 17149), 0), 0, 0)), (("test/test.ml", 436, 17029, 17050), ("test/test.ml", 439, 17116, 17149), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 436, 17029, 17029), ("test/test.ml", 439, 17116, 17149), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;pattern: expr: ;;print_value_binding_list;;;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_id", (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0))), (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0))), (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0)), 0), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0)), 0), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)]), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 453, 17543, 17587), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0))), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0))), (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0), 0, 0); ((("b", (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0))), (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0), 0, 0)]), (("test/test.ml", 455, 17612, 17616), ("test/test.ml", 455, 17612, 17621), 0), [(("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17620), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0))), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 1)), ((("txt", (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0))), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0), 0, 0))], 1), (("test/test.ml", 457, 17642, 17648), ("test/test.ml", 457, 17642, 17655), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0))), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0))), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0), 0, 0); (((("b"), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0))), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0), 0, 0)]), (("test/test.ml", 457, 17642, 17671), ("test/test.ml", 457, 17642, 17678), 0), [(("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17677), 0)], 0))]), (("test/test.ml", 457, 17642, 17658), ("test/test.ml", 457, 17642, 17679), 0), [(("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17678), 0)], 0))]), (("test/test.ml", 456, 17625, 17629), ("test/test.ml", 457, 17642, 17679), 0), 0, 0))]), (("test/test.ml", 454, 17597, 17599), ("test/test.ml", 457, 17642, 17679), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0)), 0), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0), 0, 0)), (("test/test.ml", 453, 17543, 17587), ("test/test.ml", 457, 17642, 17679), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 457, 17642, 17679), 1), 0, 0), 0, (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0))]), (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_id", (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0))), (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0))), (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0)), 0), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0)), 0), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)]), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 453, 17543, 17587), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0))), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0))), (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0), 0, 0); ((("b", (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0))), (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0), 0, 0)]), (("test/test.ml", 455, 17612, 17616), ("test/test.ml", 455, 17612, 17621), 0), [(("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17620), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0))), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 1)), ((("txt", (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0))), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0), 0, 0))], 1), (("test/test.ml", 457, 17642, 17648), ("test/test.ml", 457, 17642, 17655), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0))), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0))), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0), 0, 0); (((("b"), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0))), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0), 0, 0)]), (("test/test.ml", 457, 17642, 17671), ("test/test.ml", 457, 17642, 17678), 0), [(("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17677), 0)], 0))]), (("test/test.ml", 457, 17642, 17658), ("test/test.ml", 457, 17642, 17679), 0), [(("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17678), 0)], 0))]), (("test/test.ml", 456, 17625, 17629), ("test/test.ml", 457, 17642, 17679), 0), 0, 0))]), (("test/test.ml", 454, 17597, 17599), ("test/test.ml", 457, 17642, 17679), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0)), 0), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0), 0, 0)), (("test/test.ml", 453, 17543, 17587), ("test/test.ml", 457, 17642, 17679), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 457, 17642, 17679), 1), 0, 0), 0, (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_id", (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0))), (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0))), (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0)), 0), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0)), 0), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)]), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 453, 17543, 17587), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0))), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0))), (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0), 0, 0); ((("b", (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0))), (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0), 0, 0)]), (("test/test.ml", 455, 17612, 17616), ("test/test.ml", 455, 17612, 17621), 0), [(("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17620), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0))), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 1)), ((("txt", (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0))), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0), 0, 0))], 1), (("test/test.ml", 457, 17642, 17648), ("test/test.ml", 457, 17642, 17655), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0))), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0))), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0), 0, 0); (((("b"), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0))), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0), 0, 0)]), (("test/test.ml", 457, 17642, 17671), ("test/test.ml", 457, 17642, 17678), 0), [(("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17677), 0)], 0))]), (("test/test.ml", 457, 17642, 17658), ("test/test.ml", 457, 17642, 17679), 0), [(("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17678), 0)], 0))]), (("test/test.ml", 456, 17625, 17629), ("test/test.ml", 457, 17642, 17679), 0), 0, 0))]), (("test/test.ml", 454, 17597, 17599), ("test/test.ml", 457, 17642, 17679), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0)), 0), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0), 0, 0)), (("test/test.ml", 453, 17543, 17587), ("test/test.ml", 457, 17642, 17679), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 457, 17642, 17679), 1), 0, 0), 0, (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0))])
("DEBUG:value_binding.pat:", ((("process_id", (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0))), (("test/test.ml", 453, 17543, 17547), ("test/test.ml", 453, 17543, 17557), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0))), (("test/test.ml", 453, 17543, 17558), ("test/test.ml", 453, 17543, 17559), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0)), 0), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17573), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0)), 0), (("test/test.ml", 453, 17543, 17575), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)]), (("test/test.ml", 453, 17543, 17560), ("test/test.ml", 453, 17543, 17586), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 453, 17543, 17587), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0))), (("test/test.ml", 454, 17597, 17605), ("test/test.ml", 454, 17597, 17606), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0))), (("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17618), 0), 0, 0); ((("b", (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0))), (("test/test.ml", 455, 17612, 17619), ("test/test.ml", 455, 17612, 17620), 0), 0, 0)]), (("test/test.ml", 455, 17612, 17616), ("test/test.ml", 455, 17612, 17621), 0), [(("test/test.ml", 455, 17612, 17617), ("test/test.ml", 455, 17612, 17620), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0))), (("test/test.ml", 456, 17625, 17635), ("test/test.ml", 456, 17625, 17636), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 1)), ((("txt", (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0))), (("test/test.ml", 457, 17642, 17649), ("test/test.ml", 457, 17642, 17652), 0), 0, 0))], 1), (("test/test.ml", 457, 17642, 17648), ("test/test.ml", 457, 17642, 17655), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0))), (("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17670), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0))), (("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17675), 0), 0, 0); (((("b"), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0))), (("test/test.ml", 457, 17642, 17676), ("test/test.ml", 457, 17642, 17677), 0), 0, 0)]), (("test/test.ml", 457, 17642, 17671), ("test/test.ml", 457, 17642, 17678), 0), [(("test/test.ml", 457, 17642, 17672), ("test/test.ml", 457, 17642, 17677), 0)], 0))]), (("test/test.ml", 457, 17642, 17658), ("test/test.ml", 457, 17642, 17679), 0), [(("test/test.ml", 457, 17642, 17659), ("test/test.ml", 457, 17642, 17678), 0)], 0))]), (("test/test.ml", 456, 17625, 17629), ("test/test.ml", 457, 17642, 17679), 0), 0, 0))]), (("test/test.ml", 454, 17597, 17599), ("test/test.ml", 457, 17642, 17679), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0)), 0), (("test/test.ml", 453, 17543, 17588), ("test/test.ml", 453, 17543, 17594), 0), 0, 0)), (("test/test.ml", 453, 17543, 17587), ("test/test.ml", 457, 17642, 17679), 0), 0, 0)), (("test/test.ml", 453, 17543, 17557), ("test/test.ml", 457, 17642, 17679), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 453, 17543, 17543), ("test/test.ml", 457, 17642, 17679), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("splitloc", (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0))), (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0))), (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0)), 0), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0)), 0), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)]), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 461, 17779, 17822), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("a", (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0))), (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0), 0, 0); ((("b", (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0))), (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0), 0, 0)]), (("test/test.ml", 462, 17833, 17839), ("test/test.ml", 462, 17833, 17845), 0), [(("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17844), 0)], 0), (((("x"), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0))), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0), 0, 0), 0, (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 462, 17833, 17849), 0))], (Tag6 ((((("a"), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0))), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 1)), ((("txt", (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0))), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0), 0, 0)); ((("loc"), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 1)), ((("loc", (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0))), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0), 0, 0))], 0), (("test/test.ml", 464, 17868, 17872), ("test/test.ml", 464, 17868, 17884), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0))), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0))), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0), 0, 0); (((("b"), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0))), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0), 0, 0)]), (("test/test.ml", 465, 17889, 17905), ("test/test.ml", 465, 17889, 17914), 0), [(("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17913), 0)], 0))]), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17914), 0), 0, 0))]), (("test/test.ml", 463, 17853, 17855), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 465, 17889, 17914), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0)), 0), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0), 0, 0)), (("test/test.ml", 461, 17779, 17823), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 465, 17889, 17914), 1), 0, 0), 0, (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0))]), (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("splitloc", (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0))), (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0))), (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0)), 0), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0)), 0), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)]), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 461, 17779, 17822), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("a", (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0))), (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0), 0, 0); ((("b", (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0))), (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0), 0, 0)]), (("test/test.ml", 462, 17833, 17839), ("test/test.ml", 462, 17833, 17845), 0), [(("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17844), 0)], 0), (((("x"), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0))), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0), 0, 0), 0, (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 462, 17833, 17849), 0))], (Tag6 ((((("a"), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0))), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 1)), ((("txt", (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0))), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0), 0, 0)); ((("loc"), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 1)), ((("loc", (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0))), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0), 0, 0))], 0), (("test/test.ml", 464, 17868, 17872), ("test/test.ml", 464, 17868, 17884), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0))), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0))), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0), 0, 0); (((("b"), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0))), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0), 0, 0)]), (("test/test.ml", 465, 17889, 17905), ("test/test.ml", 465, 17889, 17914), 0), [(("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17913), 0)], 0))]), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17914), 0), 0, 0))]), (("test/test.ml", 463, 17853, 17855), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 465, 17889, 17914), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0)), 0), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0), 0, 0)), (("test/test.ml", 461, 17779, 17823), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 465, 17889, 17914), 1), 0, 0), 0, (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0))]))
("DEBUG:Pstr_value:", 0, [(((("splitloc", (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0))), (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0))), (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0)), 0), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0)), 0), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)]), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 461, 17779, 17822), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("a", (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0))), (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0), 0, 0); ((("b", (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0))), (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0), 0, 0)]), (("test/test.ml", 462, 17833, 17839), ("test/test.ml", 462, 17833, 17845), 0), [(("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17844), 0)], 0), (((("x"), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0))), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0), 0, 0), 0, (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 462, 17833, 17849), 0))], (Tag6 ((((("a"), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0))), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 1)), ((("txt", (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0))), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0), 0, 0)); ((("loc"), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 1)), ((("loc", (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0))), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0), 0, 0))], 0), (("test/test.ml", 464, 17868, 17872), ("test/test.ml", 464, 17868, 17884), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0))), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0))), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0), 0, 0); (((("b"), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0))), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0), 0, 0)]), (("test/test.ml", 465, 17889, 17905), ("test/test.ml", 465, 17889, 17914), 0), [(("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17913), 0)], 0))]), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17914), 0), 0, 0))]), (("test/test.ml", 463, 17853, 17855), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 465, 17889, 17914), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0)), 0), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0), 0, 0)), (("test/test.ml", 461, 17779, 17823), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 465, 17889, 17914), 1), 0, 0), 0, (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0))])
("DEBUG:value_binding.pat:", ((("splitloc", (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0))), (("test/test.ml", 461, 17779, 17783), ("test/test.ml", 461, 17779, 17791), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0))), (("test/test.ml", 461, 17779, 17792), ("test/test.ml", 461, 17779, 17793), 0), 0, 0), (Tag2 ([(Tag3 ((("longident_loc"), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0)), 0), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17807), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0)), 0), (("test/test.ml", 461, 17779, 17810), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)]), (("test/test.ml", 461, 17779, 17794), ("test/test.ml", 461, 17779, 17821), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 461, 17779, 17822), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("a", (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0))), (("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17841), 0), 0, 0); ((("b", (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0))), (("test/test.ml", 462, 17833, 17843), ("test/test.ml", 462, 17833, 17844), 0), 0, 0)]), (("test/test.ml", 462, 17833, 17839), ("test/test.ml", 462, 17833, 17845), 0), [(("test/test.ml", 462, 17833, 17840), ("test/test.ml", 462, 17833, 17844), 0)], 0), (((("x"), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0))), (("test/test.ml", 462, 17833, 17848), ("test/test.ml", 462, 17833, 17849), 0), 0, 0), 0, (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 462, 17833, 17849), 0))], (Tag6 ((((("a"), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0))), (("test/test.ml", 463, 17853, 17861), ("test/test.ml", 463, 17853, 17862), 0), 0, 0), [((Tag7 ([((("txt"), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 1)), ((("txt", (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0))), (("test/test.ml", 464, 17868, 17874), ("test/test.ml", 464, 17868, 17877), 0), 0, 0)); ((("loc"), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 1)), ((("loc", (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0))), (("test/test.ml", 464, 17868, 17879), ("test/test.ml", 464, 17868, 17882), 0), 0, 0))], 0), (("test/test.ml", 464, 17868, 17872), ("test/test.ml", 464, 17868, 17884), 0), 0, 0), 0, (Tag5 ((((("process_id2"), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0))), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17904), 0), 0, 0), [(0, (Tag8 ([(((("txt"), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0))), (("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17909), 0), 0, 0); (((("b"), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0))), (("test/test.ml", 465, 17889, 17912), ("test/test.ml", 465, 17889, 17913), 0), 0, 0)]), (("test/test.ml", 465, 17889, 17905), ("test/test.ml", 465, 17889, 17914), 0), [(("test/test.ml", 465, 17889, 17906), ("test/test.ml", 465, 17889, 17913), 0)], 0))]), (("test/test.ml", 465, 17889, 17893), ("test/test.ml", 465, 17889, 17914), 0), 0, 0))]), (("test/test.ml", 463, 17853, 17855), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 462, 17833, 17835), ("test/test.ml", 465, 17889, 17914), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0)), 0), (("test/test.ml", 461, 17779, 17825), ("test/test.ml", 461, 17779, 17831), 0), 0, 0)), (("test/test.ml", 461, 17779, 17823), ("test/test.ml", 465, 17889, 17914), 0), 0, 0)), (("test/test.ml", 461, 17779, 17791), ("test/test.ml", 465, 17889, 17914), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 461, 17779, 17779), ("test/test.ml", 465, 17889, 17914), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("concatlist", (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0))), (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0))), (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0), 0, 0), (Tag2 ([(Tag3 ((("string"), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0)), 0), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0)), 0), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)]), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 469, 17924, 17964), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("str", (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0))), (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0), 0, 0); ((("string_list", (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0))), (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0), 0, 0)]), (("test/test.ml", 470, 17979, 17985), ("test/test.ml", 470, 17979, 18003), 0), [(("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 18002), 0)], 0), (((("a"), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0))), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0), 0, 0), 0, (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 470, 17979, 18007), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0))), (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0), 0, 0), (Tag9 ((("::"), (("test/test.ml", 471, 18011, 18031), ("test/test.ml", 471, 18011, 18033), 0)), ((Tag8 ([(((("str"), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0), 0, 0); (((("string_list"), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0))), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0), 0, 0)]), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 1), 0, 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 0), 0, 0), 0, (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 471, 18011, 18045), 0))], (((("newlist"), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0))), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 472, 18050, 18059), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0)), 0), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0), 0, 0)), (("test/test.ml", 469, 17924, 17964), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 472, 18050, 18059), 1), 0, 0), 0, (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0))]), (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("concatlist", (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0))), (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0))), (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0), 0, 0), (Tag2 ([(Tag3 ((("string"), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0)), 0), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0)), 0), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)]), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 469, 17924, 17964), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("str", (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0))), (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0), 0, 0); ((("string_list", (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0))), (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0), 0, 0)]), (("test/test.ml", 470, 17979, 17985), ("test/test.ml", 470, 17979, 18003), 0), [(("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 18002), 0)], 0), (((("a"), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0))), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0), 0, 0), 0, (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 470, 17979, 18007), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0))), (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0), 0, 0), (Tag9 ((("::"), (("test/test.ml", 471, 18011, 18031), ("test/test.ml", 471, 18011, 18033), 0)), ((Tag8 ([(((("str"), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0), 0, 0); (((("string_list"), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0))), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0), 0, 0)]), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 1), 0, 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 0), 0, 0), 0, (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 471, 18011, 18045), 0))], (((("newlist"), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0))), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 472, 18050, 18059), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0)), 0), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0), 0, 0)), (("test/test.ml", 469, 17924, 17964), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 472, 18050, 18059), 1), 0, 0), 0, (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0))]))
("DEBUG:Pstr_value:", 0, [(((("concatlist", (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0))), (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0))), (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0), 0, 0), (Tag2 ([(Tag3 ((("string"), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0)), 0), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0)), 0), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)]), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 469, 17924, 17964), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("str", (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0))), (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0), 0, 0); ((("string_list", (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0))), (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0), 0, 0)]), (("test/test.ml", 470, 17979, 17985), ("test/test.ml", 470, 17979, 18003), 0), [(("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 18002), 0)], 0), (((("a"), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0))), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0), 0, 0), 0, (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 470, 17979, 18007), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0))), (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0), 0, 0), (Tag9 ((("::"), (("test/test.ml", 471, 18011, 18031), ("test/test.ml", 471, 18011, 18033), 0)), ((Tag8 ([(((("str"), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0), 0, 0); (((("string_list"), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0))), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0), 0, 0)]), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 1), 0, 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 0), 0, 0), 0, (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 471, 18011, 18045), 0))], (((("newlist"), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0))), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 472, 18050, 18059), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0)), 0), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0), 0, 0)), (("test/test.ml", 469, 17924, 17964), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 472, 18050, 18059), 1), 0, 0), 0, (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0))])
("DEBUG:value_binding.pat:", ((("concatlist", (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0))), (("test/test.ml", 469, 17924, 17928), ("test/test.ml", 469, 17924, 17938), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0))), (("test/test.ml", 469, 17924, 17939), ("test/test.ml", 469, 17924, 17940), 0), 0, 0), (Tag2 ([(Tag3 ((("string"), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0)), 0), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17949), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0)), 0), (("test/test.ml", 469, 17924, 17952), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)]), (("test/test.ml", 469, 17924, 17943), ("test/test.ml", 469, 17924, 17963), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 469, 17924, 17964), 0), 0, 0), (Tag19 ((Tag2 (0, [((Tag4 ([((("str", (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0))), (("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 17989), 0), 0, 0); ((("string_list", (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0))), (("test/test.ml", 470, 17979, 17991), ("test/test.ml", 470, 17979, 18002), 0), 0, 0)]), (("test/test.ml", 470, 17979, 17985), ("test/test.ml", 470, 17979, 18003), 0), [(("test/test.ml", 470, 17979, 17986), ("test/test.ml", 470, 17979, 18002), 0)], 0), (((("a"), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0))), (("test/test.ml", 470, 17979, 18006), ("test/test.ml", 470, 17979, 18007), 0), 0, 0), 0, (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 470, 17979, 18007), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0))), (("test/test.ml", 471, 18011, 18017), ("test/test.ml", 471, 18011, 18024), 0), 0, 0), (Tag9 ((("::"), (("test/test.ml", 471, 18011, 18031), ("test/test.ml", 471, 18011, 18033), 0)), ((Tag8 ([(((("str"), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18030), 0), 0, 0); (((("string_list"), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0))), (("test/test.ml", 471, 18011, 18034), ("test/test.ml", 471, 18011, 18045), 0), 0, 0)]), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 1), 0, 0))), (("test/test.ml", 471, 18011, 18027), ("test/test.ml", 471, 18011, 18045), 0), 0, 0), 0, (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 471, 18011, 18045), 0))], (((("newlist"), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0))), (("test/test.ml", 472, 18050, 18052), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 471, 18011, 18013), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 470, 17979, 17981), ("test/test.ml", 472, 18050, 18059), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0)), 0), (("test/test.ml", 469, 17924, 17965), ("test/test.ml", 469, 17924, 17976), 0), 0, 0)), (("test/test.ml", 469, 17924, 17964), ("test/test.ml", 472, 18050, 18059), 0), 0, 0)), (("test/test.ml", 469, 17924, 17938), ("test/test.ml", 472, 18050, 18059), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 469, 17924, 17924), ("test/test.ml", 472, 18050, 18059), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [((Tag10 (((("process_record_kind4", (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0))), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0), 0, 0), (Tag8 (0, (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 1), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18135), 1), 0, 0), (Tag19 ((Tag4 (0, 0, ((("x", (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0))), (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0))), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 475, 18069, 18150), ("test/test.ml", 475, 18069, 18150), 0), 0)), (("test/test.ml", 475, 18069, 18149), ("test/test.ml", 475, 18069, 18151), 0), 0, 0)), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18151), 1), 0, 0)), (("test/test.ml", 475, 18069, 18138), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), 0, (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 475, 18069, 18151), 0)); (((("process_record_kind2", (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0))), (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0))), (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0), 0, 0), (Tag3 ((("label_declaration"), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0)), 0), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18202), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("s", (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0))), (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0)), 0), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18217), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 477, 18158, 18221), ("test/test.ml", 477, 18158, 18221), 0), 0)), (("test/test.ml", 477, 18158, 18220), ("test/test.ml", 477, 18158, 18222), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18222), 1), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18222), 1), 0, 0), 0, (("test/test.ml", 476, 18152, 18154), ("test/test.ml", 477, 18158, 18222), 0)); (((("process_record_kind3", (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0))), (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0))), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0))), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 479, 18229, 18259), ("test/test.ml", 479, 18229, 18259), 0), 0)), (("test/test.ml", 479, 18229, 18258), ("test/test.ml", 479, 18229, 18260), 0), 0, 0)), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18260), 1), 0, 0)), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18260), 1), 0, 0), 0, (("test/test.ml", 478, 18223, 18225), ("test/test.ml", 479, 18229, 18260), 0)); (((("process_record_kind", (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0))), (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("x", (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0))), (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0), 0, 0); ((("s", (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0))), (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18289), ("test/test.ml", 481, 18267, 18294), 0), [(("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18293), 0)], 0), (Tag2 ([(Tag3 ((("label_declaration"), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0)), 0), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0)), 0), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 481, 18267, 18326), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0))), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0), 0, 0), [((Tag7 ([((("pld_name"), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 1)), ((("pld_name", (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0))), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0), 0, 0)); ((("pld_mutable"), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 1)), ((("pld_mutable", (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0))), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0), 0, 0)); ((("pld_type"), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 1)), ((("pld_type", (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0))), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0), 0, 0)); ((("pld_loc"), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 1)), ((("pld_loc", (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0))), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0), 0, 0)); ((("pld_attributes"), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 1)), ((("pld_attributes", (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0))), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0), 0, 0))], 0), (("test/test.ml", 483, 18351, 18355), ("test/test.ml", 489, 18532, 18536), 0), 0, 0), 0, (Tag2 (0, [(((("foo", (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0))), (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0), 0, 0), (Tag5 ((((("my_process_core_type"), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0))), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0), 0, 0), [(0, (Tag8 ([(((("pld_type"), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0))), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0), 0, 0); (((("s"), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0))), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0), 0, 0)]), (("test/test.ml", 490, 18540, 18573), ("test/test.ml", 490, 18540, 18586), 0), [(("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18585), 0)], 0))]), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18586), 0), 0, 0), 0, (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 490, 18540, 18586), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0))), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0))), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:precord_kind:", (("test/test.ml", 491, 18590, 18627), ("test/test.ml", 491, 18590, 18646), 0), 0)), (("test/test.ml", 491, 18590, 18626), ("test/test.ml", 491, 18590, 18647), 0), 0, 0); (((("pld_name"), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0))), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0), 0, 0); (Tag1 (Tag2 ("mutable", (("test/test.ml", 493, 18697, 18734), ("test/test.ml", 493, 18697, 18741), 0), 0)), (("test/test.ml", 493, 18697, 18733), ("test/test.ml", 493, 18697, 18742), 0), 0, 0); (((("pld_mutable"), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0))), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0), 0, 0); (Tag1 (Tag2 ("type", (("test/test.ml", 495, 18793, 18830), ("test/test.ml", 495, 18793, 18834), 0), 0)), (("test/test.ml", 495, 18793, 18829), ("test/test.ml", 495, 18793, 18835), 0), 0, 0); (((("pld_type"), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0))), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0), 0, 0)]), (("test/test.ml", 491, 18590, 18625), ("test/test.ml", 496, 18837, 18882), 0), [(("test/test.ml", 491, 18590, 18626), ("test/test.ml", 496, 18837, 18881), 0)], 0))]), (("test/test.ml", 491, 18590, 18609), ("test/test.ml", 496, 18837, 18883), 0), [(("test/test.ml", 491, 18590, 18610), ("test/test.ml", 496, 18837, 18882), 0)], 0))]), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 496, 18837, 18884), 0), [(("test/test.ml", 491, 18590, 18595), ("test/test.ml", 496, 18837, 18883), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0))), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0), 0, 0), [(0, (Tag1 (Tag2 ("process_record_kind:\"", (("test/test.ml", 497, 18886, 18891), ("test/test.ml", 497, 18886, 18913), 0), 0)), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18914), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0))), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0), 0, 0), [(0, (Tag12 ((((("pld_name"), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0), 0, 0), (("txt"), (("test/test.ml", 497, 18886, 18926), ("test/test.ml", 497, 18886, 18929), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18929), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0))), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" body:", (("test/test.ml", 497, 18886, 18933), ("test/test.ml", 497, 18886, 18941), 0), 0)), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18942), 0), 0, 0)); (0, (((("foo"), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0))), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 482, 18336, 18338), ("test/test.ml", 497, 18886, 18948), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0)), 0), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0), 0, 0)), (("test/test.ml", 481, 18267, 18326), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 497, 18886, 18948), 1), 0, 0), 0, (("test/test.ml", 480, 18261, 18263), ("test/test.ml", 497, 18886, 18948), 0)); (((("my_process_core_type_desc", (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0))), (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0))), (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0)), 0), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0)), 0), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)]), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 499, 18953, 19015), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0))), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0))), (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0), 0, 0); ((("s", (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0))), (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0), 0, 0)]), (("test/test.ml", 501, 19040, 19044), ("test/test.ml", 501, 19040, 19052), 0), [(("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19051), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0))), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19091), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0))), (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0), 0, 0); ((("b", (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0))), (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0), 0, 0)]), (("test/test.ml", 503, 19074, 19092), ("test/test.ml", 503, 19074, 19097), 0), [(("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19096), 0)], 0)))), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19097), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 1)), ((("txt", (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0))), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0), 0, 0)); ((("loc"), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 1)), ((("loc", (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0))), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0), 0, 0))], 0), (("test/test.ml", 505, 19149, 19159), ("test/test.ml", 505, 19149, 19168), 0), 0, 0), (((("a"), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0))), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0), 0, 0), 0, (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 505, 19149, 19172), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0))), (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0), 0, 0), (Tag5 ((((("process_id1"), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0))), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0))), (("test/test.ml", 506, 19176, 19203), ("test/test.ml", 506, 19176, 19208), 0), [(("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0)], 0))]), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19208), 0), 0, 0), 0, (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 506, 19176, 19208), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0))), (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0), 0, 0), (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0))), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0), 0, 0), [(0, (Tag8 ([(((("b"), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0))), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0), 0, 0); (((("s"), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0))), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0), 0, 0)]), (("test/test.ml", 509, 19320, 19367), ("test/test.ml", 509, 19320, 19373), 0), [(("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19372), 0)], 0))]), (("test/test.ml", 509, 19320, 19340), ("test/test.ml", 509, 19320, 19374), 0), [(("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19373), 0)], 0), 0, (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 509, 19320, 19374), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0))), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_constr1 '%s' %s", (("test/test.ml", 510, 19378, 19399), ("test/test.ml", 510, 19378, 19425), 0), 0)), (("test/test.ml", 510, 19378, 19398), ("test/test.ml", 510, 19378, 19426), 0), 0, 0)); (0, (((("id1"), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0))), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0))), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0), 0, 0))]), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19438), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0))), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0))), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_constr:", (("test/test.ml", 514, 19519, 19529), ("test/test.ml", 514, 19519, 19547), 0), 0)), (("test/test.ml", 514, 19519, 19528), ("test/test.ml", 514, 19519, 19548), 0), 0, 0); (Tag1 (Tag2 ("id", (("test/test.ml", 515, 19550, 19560), ("test/test.ml", 515, 19550, 19562), 0), 0)), (("test/test.ml", 515, 19550, 19559), ("test/test.ml", 515, 19550, 19563), 0), 0, 0); (((("a"), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0))), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0), 0, 0); (Tag1 (Tag2 ("types", (("test/test.ml", 516, 19567, 19577), ("test/test.ml", 516, 19567, 19582), 0), 0)), (("test/test.ml", 516, 19567, 19576), ("test/test.ml", 516, 19567, 19583), 0), 0, 0); (((("b"), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0))), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0), 0, 0); (Tag1 (Tag2 ("context", (("test/test.ml", 517, 19587, 19597), ("test/test.ml", 517, 19587, 19604), 0), 0)), (("test/test.ml", 517, 19587, 19596), ("test/test.ml", 517, 19587, 19605), 0), 0, 0); (((("s"), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0))), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0), 0, 0); (Tag1 (Tag2 ("id1", (("test/test.ml", 518, 19609, 19619), ("test/test.ml", 518, 19609, 19622), 0), 0)), (("test/test.ml", 518, 19609, 19618), ("test/test.ml", 518, 19609, 19623), 0), 0, 0); (((("id1"), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0))), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0), 0, 0)]), (("test/test.ml", 513, 19480, 19517), ("test/test.ml", 519, 19629, 19637), 0), [(("test/test.ml", 514, 19519, 19528), ("test/test.ml", 518, 19609, 19628), 0)], 0))]), (("test/test.ml", 513, 19480, 19501), ("test/test.ml", 519, 19629, 19638), 0), [(("test/test.ml", 513, 19480, 19502), ("test/test.ml", 519, 19629, 19637), 0)], 0))]), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 519, 19629, 19639), 0), [(("test/test.ml", 513, 19480, 19487), ("test/test.ml", 519, 19629, 19638), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0))), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_constr:\"", (("test/test.ml", 520, 19646, 19653), ("test/test.ml", 520, 19646, 19667), 0), 0)), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19668), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0))), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0), 0, 0), [(0, (((("id1"), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0))), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0))), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"->", (("test/test.ml", 520, 19646, 19678), ("test/test.ml", 520, 19646, 19682), 0), 0)), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19683), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0))), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19710), 0)), ((0, ((("a", (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0))), (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0), 0, 0)))), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19712), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0))), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0))), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_tuple:", (("test/test.ml", 523, 19746, 19785), ("test/test.ml", 523, 19746, 19802), 0), 0)), (("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19803), 0), 0, 0); (((("a"), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0))), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0), 0, 0)]), (("test/test.ml", 523, 19746, 19783), ("test/test.ml", 523, 19746, 19808), 0), [(("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19806), 0)], 0))]), (("test/test.ml", 523, 19746, 19767), ("test/test.ml", 523, 19746, 19809), 0), [(("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19808), 0)], 0))]), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 523, 19746, 19810), 0), [(("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19809), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0))), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 524, 19812, 19819), ("test/test.ml", 524, 19812, 19829), 0), 0)), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19830), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0))), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0))), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0), 0, 0); (((("s"), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0))), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0), 0, 0)]), (("test/test.ml", 524, 19812, 19858), ("test/test.ml", 524, 19812, 19866), 0), [(("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19864), 0)], 0))]), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19866), 0), 0, 0))]), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)); ((Tag5 ((("Ptyp_any"), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0)), 0), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0))), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0))), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_any:", (("test/test.ml", 528, 19889, 19941), ("test/test.ml", 528, 19889, 19956), 0), 0)), (("test/test.ml", 528, 19889, 19939), ("test/test.ml", 528, 19889, 19958), 0), [(("test/test.ml", 528, 19889, 19940), ("test/test.ml", 528, 19889, 19957), 0)], 0))]), (("test/test.ml", 528, 19889, 19923), ("test/test.ml", 528, 19889, 19959), 0), [(("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19958), 0)], 0))]), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19960), 0), [(("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19959), 0)], 0), (Tag1 (Tag2 ("any", (("test/test.ml", 528, 19889, 19963), ("test/test.ml", 528, 19889, 19966), 0), 0)), (("test/test.ml", 528, 19889, 19962), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)); ((Tag5 ((("Ptyp_var"), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19982), 0)), ((0, ((("name", (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0))), (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0), 0, 0)))), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19987), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0))), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0))), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_var:", (("test/test.ml", 529, 19968, 20023), ("test/test.ml", 529, 19968, 20038), 0), 0)), (("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20039), 0), 0, 0); (((("name"), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0))), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0), 0, 0)]), (("test/test.ml", 529, 19968, 20021), ("test/test.ml", 529, 19968, 20048), 0), [(("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20047), 0)], 0))]), (("test/test.ml", 529, 19968, 20005), ("test/test.ml", 529, 19968, 20049), 0), [(("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20048), 0)], 0))]), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20050), 0), [(("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20049), 0)], 0), (Tag1 (Tag2 ("var-name", (("test/test.ml", 529, 19968, 20053), ("test/test.ml", 529, 19968, 20061), 0), 0)), (("test/test.ml", 529, 19968, 20052), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)); ((Tag5 ((("Ptyp_arrow"), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20077), 0)), ((0, (Tag4 ([((("arg_label", (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0))), (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0), 0, 0); ((("core_type", (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0))), (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0), 0, 0); ((("core_type2", (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0))), (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0), 0, 0)]), (("test/test.ml", 530, 20063, 20078), ("test/test.ml", 530, 20063, 20114), 0), [(("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20113), 0)], 0)))), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20114), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0))), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0))), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow10:", (("test/test.ml", 533, 20233, 20270), ("test/test.ml", 533, 20233, 20289), 0), 0)), (("test/test.ml", 533, 20233, 20268), ("test/test.ml", 533, 20233, 20292), 0), [(("test/test.ml", 533, 20233, 20269), ("test/test.ml", 533, 20233, 20290), 0)], 0))]), (("test/test.ml", 533, 20233, 20252), ("test/test.ml", 533, 20233, 20293), 0), [(("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20292), 0)], 0))]), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20294), 0), [(("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20293), 0)], 0), (Tag1 (Tag2 ("arrow", (("test/test.ml", 533, 20233, 20297), ("test/test.ml", 533, 20233, 20302), 0), 0)), (("test/test.ml", 533, 20233, 20296), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)); ((Tag5 ((("Ptyp_object"), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20320), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0))), (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0), 0, 0); ((("b", (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0))), (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0), 0, 0)]), (("test/test.ml", 535, 20305, 20321), ("test/test.ml", 535, 20305, 20326), 0), [(("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20325), 0)], 0)))), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20326), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0))), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0))), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow8:", (("test/test.ml", 537, 20374, 20411), ("test/test.ml", 537, 20374, 20429), 0), 0)), (("test/test.ml", 537, 20374, 20409), ("test/test.ml", 537, 20374, 20432), 0), [(("test/test.ml", 537, 20374, 20410), ("test/test.ml", 537, 20374, 20430), 0)], 0))]), (("test/test.ml", 537, 20374, 20393), ("test/test.ml", 537, 20374, 20433), 0), [(("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20432), 0)], 0))]), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20434), 0), [(("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20433), 0)], 0), (Tag1 (Tag2 ("obj", (("test/test.ml", 537, 20374, 20437), ("test/test.ml", 537, 20374, 20440), 0), 0)), (("test/test.ml", 537, 20374, 20436), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)); ((Tag5 ((("Ptyp_class"), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20456), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0))), (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0), 0, 0); ((("b", (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0))), (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0), 0, 0)]), (("test/test.ml", 538, 20442, 20457), ("test/test.ml", 538, 20442, 20462), 0), [(("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20461), 0)], 0)))), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20462), 0), 0, 0), 0, (Tag2 (0, [(((("myid", (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0))), (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0), 0, 0), (Tag5 ((((("process_id"), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0))), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0))), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0), 0, 0); (((("s"), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0))), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0), 0, 0)]), (("test/test.ml", 540, 20512, 20539), ("test/test.ml", 540, 20512, 20544), 0), [(("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20543), 0)], 0))]), (("test/test.ml", 540, 20512, 20527), ("test/test.ml", 540, 20512, 20545), 0), [(("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20544), 0)], 0), 0, (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 540, 20512, 20545), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0))), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0))), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow7:", (("test/test.ml", 542, 20600, 20637), ("test/test.ml", 542, 20600, 20655), 0), 0)), (("test/test.ml", 542, 20600, 20635), ("test/test.ml", 542, 20600, 20658), 0), [(("test/test.ml", 542, 20600, 20636), ("test/test.ml", 542, 20600, 20656), 0)], 0))]), (("test/test.ml", 542, 20600, 20619), ("test/test.ml", 542, 20600, 20659), 0), [(("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20658), 0)], 0))]), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20660), 0), [(("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20659), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 542, 20600, 20663), ("test/test.ml", 542, 20600, 20668), 0), 0)), (("test/test.ml", 542, 20600, 20662), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)); ((Tag5 ((("Ptyp_alias"), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20684), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0))), (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0), 0, 0); ((("b", (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0))), (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0), 0, 0)]), (("test/test.ml", 543, 20670, 20685), ("test/test.ml", 543, 20670, 20690), 0), [(("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20689), 0)], 0)))), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20690), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0))), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0))), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow6:", (("test/test.ml", 546, 20769, 20806), ("test/test.ml", 546, 20769, 20824), 0), 0)), (("test/test.ml", 546, 20769, 20804), ("test/test.ml", 546, 20769, 20827), 0), [(("test/test.ml", 546, 20769, 20805), ("test/test.ml", 546, 20769, 20825), 0)], 0))]), (("test/test.ml", 546, 20769, 20788), ("test/test.ml", 546, 20769, 20828), 0), [(("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20827), 0)], 0))]), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20829), 0), [(("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20828), 0)], 0), (Tag1 (Tag2 ("alias", (("test/test.ml", 546, 20769, 20832), ("test/test.ml", 546, 20769, 20837), 0), 0)), (("test/test.ml", 546, 20769, 20831), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)); ((Tag5 ((("Ptyp_variant"), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20855), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0))), (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0), 0, 0); ((("b", (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0))), (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0), 0, 0); ((("c", (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0))), (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0), 0, 0)]), (("test/test.ml", 547, 20839, 20856), ("test/test.ml", 547, 20839, 20863), 0), [(("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20862), 0)], 0)))), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20863), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0))), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0))), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow5:", (("test/test.ml", 549, 20929, 20966), ("test/test.ml", 549, 20929, 20984), 0), 0)), (("test/test.ml", 549, 20929, 20964), ("test/test.ml", 549, 20929, 20987), 0), [(("test/test.ml", 549, 20929, 20965), ("test/test.ml", 549, 20929, 20985), 0)], 0))]), (("test/test.ml", 549, 20929, 20948), ("test/test.ml", 549, 20929, 20988), 0), [(("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20987), 0)], 0))]), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20989), 0), [(("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20988), 0)], 0), (Tag1 (Tag2 ("variant", (("test/test.ml", 549, 20929, 20991), ("test/test.ml", 549, 20929, 20998), 0), 0)), (("test/test.ml", 549, 20929, 20990), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)); ((Tag5 ((("Ptyp_poly"), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21013), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0))), (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0), 0, 0); ((("b", (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0))), (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0), 0, 0)]), (("test/test.ml", 550, 21000, 21014), ("test/test.ml", 550, 21000, 21019), 0), [(("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21018), 0)], 0)))), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21019), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0))), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0))), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow4:", (("test/test.ml", 553, 21102, 21139), ("test/test.ml", 553, 21102, 21157), 0), 0)), (("test/test.ml", 553, 21102, 21137), ("test/test.ml", 553, 21102, 21160), 0), [(("test/test.ml", 553, 21102, 21138), ("test/test.ml", 553, 21102, 21158), 0)], 0))]), (("test/test.ml", 553, 21102, 21121), ("test/test.ml", 553, 21102, 21161), 0), [(("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21160), 0)], 0))]), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21162), 0), [(("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21161), 0)], 0), (Tag1 (Tag2 ("poly", (("test/test.ml", 553, 21102, 21165), ("test/test.ml", 553, 21102, 21169), 0), 0)), (("test/test.ml", 553, 21102, 21164), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)); ((Tag5 ((("Ptyp_package"), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21187), 0)), ((0, ((("a", (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0))), (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0), 0, 0)))), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21189), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0))), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0))), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_arrow3:", (("test/test.ml", 556, 21219, 21256), ("test/test.ml", 556, 21219, 21274), 0), 0)), (("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21275), 0), 0, 0); (((("a"), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0))), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0), 0, 0)]), (("test/test.ml", 556, 21219, 21254), ("test/test.ml", 556, 21219, 21279), 0), [(("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21277), 0)], 0))]), (("test/test.ml", 556, 21219, 21238), ("test/test.ml", 556, 21219, 21280), 0), [(("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21279), 0)], 0))]), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21281), 0), [(("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21280), 0)], 0), (Tag1 (Tag2 ("typ_package", (("test/test.ml", 556, 21219, 21285), ("test/test.ml", 556, 21219, 21296), 0), 0)), (("test/test.ml", 556, 21219, 21284), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)); ((Tag5 ((("Ptyp_extension"), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21457), 0)), ((0, ((("a", (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0))), (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0), 0, 0)))), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21459), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0))), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0))), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_extension:", (("test/test.ml", 560, 21487, 21524), ("test/test.ml", 560, 21487, 21545), 0), 0)), (("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21546), 0), 0, 0); (((("a"), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0))), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0), 0, 0)]), (("test/test.ml", 560, 21487, 21522), ("test/test.ml", 560, 21487, 21550), 0), [(("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21548), 0)], 0))]), (("test/test.ml", 560, 21487, 21506), ("test/test.ml", 560, 21487, 21551), 0), [(("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21550), 0)], 0))]), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21552), 0), [(("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21551), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 560, 21487, 21555), ("test/test.ml", 560, 21487, 21564), 0), 0)), (("test/test.ml", 560, 21487, 21554), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 502, 19055, 19059), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 500, 19025, 19027), ("test/test.ml", 560, 21487, 21565), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0)), 0), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0), 0, 0)), (("test/test.ml", 499, 18953, 19015), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 560, 21487, 21565), 1), 0, 0), 0, (("test/test.ml", 498, 18949, 18949), ("test/test.ml", 560, 21487, 21565), 0)); (((("process_record_kind_list", (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0))), (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0))), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 562, 21570, 21599), 0), [(("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0))), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0))), (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0), 0, 0); ((("s", (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0))), (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0), 0, 0)]), (("test/test.ml", 564, 21626, 21628), ("test/test.ml", 564, 21626, 21634), 0), [(("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21633), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0))), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0)), 0), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0), 0, 0), 0, (Tag1 (Tag2 ("process_record_kind_list", (("test/test.ml", 566, 21652, 21663), ("test/test.ml", 566, 21652, 21687), 0), 0)), (("test/test.ml", 566, 21652, 21662), ("test/test.ml", 566, 21652, 21688), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 567, 21689, 21695), ("test/test.ml", 567, 21689, 21697), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0), 0, 0); ((("t", (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0))), (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0), 0, 0)]), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 1), 0, 0)))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0))), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0), 0, 0), [(0, (Tag5 ((((("process_record_kind"), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0))), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0))), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0))), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21728), ("test/test.ml", 568, 21703, 21736), 0), [(("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21735), 0)], 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21737), 0), [(("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21736), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0))), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0), 0, 0), [(0, (Tag1 (Tag2 ("/", (("test/test.ml", 568, 21703, 21741), ("test/test.ml", 568, 21703, 21742), 0), 0)), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21743), 0), 0, 0)); (0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0))), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0))), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0))), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21772), ("test/test.ml", 568, 21703, 21778), 0), [(("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21777), 0)], 0))]), (("test/test.ml", 568, 21703, 21746), ("test/test.ml", 568, 21703, 21779), 0), [(("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21778), 0)], 0))]), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 565, 21637, 21639), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 563, 21611, 21613), ("test/test.ml", 568, 21703, 21779), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0)), 0), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0), 0, 0)), (("test/test.ml", 562, 21570, 21600), ("test/test.ml", 568, 21703, 21779), 0), 0, 0)), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 568, 21703, 21779), 1), 0, 0), 0, (("test/test.ml", 561, 21566, 21566), ("test/test.ml", 568, 21703, 21779), 0)); (((("my_process_core_type", (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0))), (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0))), (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0)), 0), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0)), 0), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)]), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 572, 21790, 21840), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0))), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0))), (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0), 0, 0); ((("s", (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0))), (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0), 0, 0)]), (("test/test.ml", 574, 21864, 21868), ("test/test.ml", 574, 21864, 21873), 0), [(("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21872), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0))), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 1)), ((("ptyp_desc", (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0))), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 1)), ((("ptyp_loc", (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0))), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 1)), ((("ptyp_loc_stack", (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0))), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 1)), ((("ptyp_attributes", (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0))), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0), 0, 0))], 0), (("test/test.ml", 576, 21897, 21901), ("test/test.ml", 581, 22061, 22066), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0))), (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0), 0, 0), (Tag5 ((((("my_process_core_type_desc"), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0))), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0))), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0), 0, 0); (((("s"), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0))), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0), 0, 0)]), (("test/test.ml", 582, 22069, 22109), ("test/test.ml", 582, 22069, 22122), 0), [(("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22121), 0)], 0))]), (("test/test.ml", 582, 22069, 22082), ("test/test.ml", 582, 22069, 22123), 0), [(("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22122), 0)], 0), 0, (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 582, 22069, 22123), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0))), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0))), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:core_type.ptyp_desc:", (("test/test.ml", 584, 22146, 22183), ("test/test.ml", 584, 22146, 22209), 0), 0)), (("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22210), 0), 0, 0); (((("a"), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0))), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0), 0, 0); (((("td"), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0))), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0), 0, 0)]), (("test/test.ml", 584, 22146, 22181), ("test/test.ml", 584, 22146, 22219), 0), [(("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22218), 0)], 0))]), (("test/test.ml", 584, 22146, 22165), ("test/test.ml", 584, 22146, 22220), 0), [(("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22219), 0)], 0))]), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 584, 22146, 22221), 0), [(("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22220), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0))), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0), 0, 0), [(0, (Tag1 (Tag2 ("ptyp_desc:", (("test/test.ml", 585, 22223, 22228), ("test/test.ml", 585, 22223, 22238), 0), 0)), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22239), 0), 0, 0)); (0, (((("td"), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0))), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 575, 21877, 21882), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 573, 21849, 21851), ("test/test.ml", 585, 22223, 22244), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0)), 0), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0), 0, 0)), (("test/test.ml", 572, 21790, 21840), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 585, 22223, 22244), 1), 0, 0), 0, (("test/test.ml", 570, 21785, 21785), ("test/test.ml", 585, 22223, 22244), 0)); (((("my_process_core_type_list", (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0))), (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0))), (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0)), 0), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0)), 0), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)]), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 586, 22245, 22307), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0))), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0))), (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0), 0, 0); ((("b", (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0))), (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0), 0, 0)]), (("test/test.ml", 588, 22332, 22336), ("test/test.ml", 588, 22332, 22341), 0), [(("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22340), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0))), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0)), 0), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0), 0, 0), 0, (Tag1 (Tag2 ("my_process_core_type_list:", (("test/test.ml", 590, 22362, 22375), ("test/test.ml", 590, 22362, 22401), 0), 0)), (("test/test.ml", 590, 22362, 22374), ("test/test.ml", 590, 22362, 22402), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 591, 22403, 22411), ("test/test.ml", 591, 22403, 22413), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0), 0, 0); ((("t", (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0))), (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0), 0, 0)]), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 1), 0, 0)))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0))), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0), 0, 0), [(0, (Tag5 ((((("my_process_core_type"), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0))), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0))), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0))), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22446), ("test/test.ml", 592, 22419, 22452), 0), [(("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22451), 0)], 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22452), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0))), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 592, 22419, 22456), ("test/test.ml", 592, 22419, 22457), 0), 0)), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22458), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0))), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0))), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0))), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22486), ("test/test.ml", 592, 22419, 22491), 0), [(("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22490), 0)], 0))]), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 589, 22345, 22349), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 587, 22317, 22319), ("test/test.ml", 592, 22419, 22491), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0)), 0), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0), 0, 0)), (("test/test.ml", 586, 22245, 22307), ("test/test.ml", 592, 22419, 22491), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 592, 22419, 22491), 1), 0, 0), 0, (("test/test.ml", 586, 22245, 22245), ("test/test.ml", 592, 22419, 22491), 0))]), (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 592, 22419, 22491), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [((Tag10 (((("process_record_kind4", (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0))), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0), 0, 0), (Tag8 (0, (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 1), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18135), 1), 0, 0), (Tag19 ((Tag4 (0, 0, ((("x", (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0))), (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0))), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 475, 18069, 18150), ("test/test.ml", 475, 18069, 18150), 0), 0)), (("test/test.ml", 475, 18069, 18149), ("test/test.ml", 475, 18069, 18151), 0), 0, 0)), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18151), 1), 0, 0)), (("test/test.ml", 475, 18069, 18138), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), 0, (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 475, 18069, 18151), 0)); (((("process_record_kind2", (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0))), (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0))), (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0), 0, 0), (Tag3 ((("label_declaration"), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0)), 0), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18202), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("s", (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0))), (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0)), 0), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18217), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 477, 18158, 18221), ("test/test.ml", 477, 18158, 18221), 0), 0)), (("test/test.ml", 477, 18158, 18220), ("test/test.ml", 477, 18158, 18222), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18222), 1), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18222), 1), 0, 0), 0, (("test/test.ml", 476, 18152, 18154), ("test/test.ml", 477, 18158, 18222), 0)); (((("process_record_kind3", (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0))), (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0))), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0))), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 479, 18229, 18259), ("test/test.ml", 479, 18229, 18259), 0), 0)), (("test/test.ml", 479, 18229, 18258), ("test/test.ml", 479, 18229, 18260), 0), 0, 0)), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18260), 1), 0, 0)), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18260), 1), 0, 0), 0, (("test/test.ml", 478, 18223, 18225), ("test/test.ml", 479, 18229, 18260), 0)); (((("process_record_kind", (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0))), (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("x", (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0))), (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0), 0, 0); ((("s", (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0))), (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18289), ("test/test.ml", 481, 18267, 18294), 0), [(("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18293), 0)], 0), (Tag2 ([(Tag3 ((("label_declaration"), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0)), 0), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0)), 0), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 481, 18267, 18326), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0))), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0), 0, 0), [((Tag7 ([((("pld_name"), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 1)), ((("pld_name", (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0))), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0), 0, 0)); ((("pld_mutable"), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 1)), ((("pld_mutable", (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0))), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0), 0, 0)); ((("pld_type"), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 1)), ((("pld_type", (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0))), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0), 0, 0)); ((("pld_loc"), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 1)), ((("pld_loc", (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0))), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0), 0, 0)); ((("pld_attributes"), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 1)), ((("pld_attributes", (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0))), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0), 0, 0))], 0), (("test/test.ml", 483, 18351, 18355), ("test/test.ml", 489, 18532, 18536), 0), 0, 0), 0, (Tag2 (0, [(((("foo", (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0))), (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0), 0, 0), (Tag5 ((((("my_process_core_type"), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0))), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0), 0, 0), [(0, (Tag8 ([(((("pld_type"), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0))), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0), 0, 0); (((("s"), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0))), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0), 0, 0)]), (("test/test.ml", 490, 18540, 18573), ("test/test.ml", 490, 18540, 18586), 0), [(("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18585), 0)], 0))]), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18586), 0), 0, 0), 0, (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 490, 18540, 18586), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0))), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0))), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:precord_kind:", (("test/test.ml", 491, 18590, 18627), ("test/test.ml", 491, 18590, 18646), 0), 0)), (("test/test.ml", 491, 18590, 18626), ("test/test.ml", 491, 18590, 18647), 0), 0, 0); (((("pld_name"), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0))), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0), 0, 0); (Tag1 (Tag2 ("mutable", (("test/test.ml", 493, 18697, 18734), ("test/test.ml", 493, 18697, 18741), 0), 0)), (("test/test.ml", 493, 18697, 18733), ("test/test.ml", 493, 18697, 18742), 0), 0, 0); (((("pld_mutable"), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0))), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0), 0, 0); (Tag1 (Tag2 ("type", (("test/test.ml", 495, 18793, 18830), ("test/test.ml", 495, 18793, 18834), 0), 0)), (("test/test.ml", 495, 18793, 18829), ("test/test.ml", 495, 18793, 18835), 0), 0, 0); (((("pld_type"), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0))), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0), 0, 0)]), (("test/test.ml", 491, 18590, 18625), ("test/test.ml", 496, 18837, 18882), 0), [(("test/test.ml", 491, 18590, 18626), ("test/test.ml", 496, 18837, 18881), 0)], 0))]), (("test/test.ml", 491, 18590, 18609), ("test/test.ml", 496, 18837, 18883), 0), [(("test/test.ml", 491, 18590, 18610), ("test/test.ml", 496, 18837, 18882), 0)], 0))]), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 496, 18837, 18884), 0), [(("test/test.ml", 491, 18590, 18595), ("test/test.ml", 496, 18837, 18883), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0))), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0), 0, 0), [(0, (Tag1 (Tag2 ("process_record_kind:\"", (("test/test.ml", 497, 18886, 18891), ("test/test.ml", 497, 18886, 18913), 0), 0)), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18914), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0))), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0), 0, 0), [(0, (Tag12 ((((("pld_name"), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0), 0, 0), (("txt"), (("test/test.ml", 497, 18886, 18926), ("test/test.ml", 497, 18886, 18929), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18929), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0))), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" body:", (("test/test.ml", 497, 18886, 18933), ("test/test.ml", 497, 18886, 18941), 0), 0)), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18942), 0), 0, 0)); (0, (((("foo"), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0))), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 482, 18336, 18338), ("test/test.ml", 497, 18886, 18948), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0)), 0), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0), 0, 0)), (("test/test.ml", 481, 18267, 18326), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 497, 18886, 18948), 1), 0, 0), 0, (("test/test.ml", 480, 18261, 18263), ("test/test.ml", 497, 18886, 18948), 0)); (((("my_process_core_type_desc", (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0))), (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0))), (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0)), 0), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0)), 0), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)]), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 499, 18953, 19015), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0))), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0))), (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0), 0, 0); ((("s", (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0))), (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0), 0, 0)]), (("test/test.ml", 501, 19040, 19044), ("test/test.ml", 501, 19040, 19052), 0), [(("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19051), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0))), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19091), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0))), (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0), 0, 0); ((("b", (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0))), (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0), 0, 0)]), (("test/test.ml", 503, 19074, 19092), ("test/test.ml", 503, 19074, 19097), 0), [(("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19096), 0)], 0)))), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19097), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 1)), ((("txt", (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0))), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0), 0, 0)); ((("loc"), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 1)), ((("loc", (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0))), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0), 0, 0))], 0), (("test/test.ml", 505, 19149, 19159), ("test/test.ml", 505, 19149, 19168), 0), 0, 0), (((("a"), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0))), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0), 0, 0), 0, (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 505, 19149, 19172), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0))), (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0), 0, 0), (Tag5 ((((("process_id1"), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0))), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0))), (("test/test.ml", 506, 19176, 19203), ("test/test.ml", 506, 19176, 19208), 0), [(("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0)], 0))]), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19208), 0), 0, 0), 0, (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 506, 19176, 19208), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0))), (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0), 0, 0), (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0))), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0), 0, 0), [(0, (Tag8 ([(((("b"), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0))), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0), 0, 0); (((("s"), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0))), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0), 0, 0)]), (("test/test.ml", 509, 19320, 19367), ("test/test.ml", 509, 19320, 19373), 0), [(("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19372), 0)], 0))]), (("test/test.ml", 509, 19320, 19340), ("test/test.ml", 509, 19320, 19374), 0), [(("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19373), 0)], 0), 0, (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 509, 19320, 19374), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0))), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_constr1 '%s' %s", (("test/test.ml", 510, 19378, 19399), ("test/test.ml", 510, 19378, 19425), 0), 0)), (("test/test.ml", 510, 19378, 19398), ("test/test.ml", 510, 19378, 19426), 0), 0, 0)); (0, (((("id1"), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0))), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0))), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0), 0, 0))]), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19438), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0))), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0))), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_constr:", (("test/test.ml", 514, 19519, 19529), ("test/test.ml", 514, 19519, 19547), 0), 0)), (("test/test.ml", 514, 19519, 19528), ("test/test.ml", 514, 19519, 19548), 0), 0, 0); (Tag1 (Tag2 ("id", (("test/test.ml", 515, 19550, 19560), ("test/test.ml", 515, 19550, 19562), 0), 0)), (("test/test.ml", 515, 19550, 19559), ("test/test.ml", 515, 19550, 19563), 0), 0, 0); (((("a"), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0))), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0), 0, 0); (Tag1 (Tag2 ("types", (("test/test.ml", 516, 19567, 19577), ("test/test.ml", 516, 19567, 19582), 0), 0)), (("test/test.ml", 516, 19567, 19576), ("test/test.ml", 516, 19567, 19583), 0), 0, 0); (((("b"), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0))), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0), 0, 0); (Tag1 (Tag2 ("context", (("test/test.ml", 517, 19587, 19597), ("test/test.ml", 517, 19587, 19604), 0), 0)), (("test/test.ml", 517, 19587, 19596), ("test/test.ml", 517, 19587, 19605), 0), 0, 0); (((("s"), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0))), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0), 0, 0); (Tag1 (Tag2 ("id1", (("test/test.ml", 518, 19609, 19619), ("test/test.ml", 518, 19609, 19622), 0), 0)), (("test/test.ml", 518, 19609, 19618), ("test/test.ml", 518, 19609, 19623), 0), 0, 0); (((("id1"), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0))), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0), 0, 0)]), (("test/test.ml", 513, 19480, 19517), ("test/test.ml", 519, 19629, 19637), 0), [(("test/test.ml", 514, 19519, 19528), ("test/test.ml", 518, 19609, 19628), 0)], 0))]), (("test/test.ml", 513, 19480, 19501), ("test/test.ml", 519, 19629, 19638), 0), [(("test/test.ml", 513, 19480, 19502), ("test/test.ml", 519, 19629, 19637), 0)], 0))]), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 519, 19629, 19639), 0), [(("test/test.ml", 513, 19480, 19487), ("test/test.ml", 519, 19629, 19638), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0))), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_constr:\"", (("test/test.ml", 520, 19646, 19653), ("test/test.ml", 520, 19646, 19667), 0), 0)), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19668), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0))), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0), 0, 0), [(0, (((("id1"), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0))), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0))), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"->", (("test/test.ml", 520, 19646, 19678), ("test/test.ml", 520, 19646, 19682), 0), 0)), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19683), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0))), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19710), 0)), ((0, ((("a", (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0))), (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0), 0, 0)))), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19712), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0))), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0))), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_tuple:", (("test/test.ml", 523, 19746, 19785), ("test/test.ml", 523, 19746, 19802), 0), 0)), (("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19803), 0), 0, 0); (((("a"), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0))), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0), 0, 0)]), (("test/test.ml", 523, 19746, 19783), ("test/test.ml", 523, 19746, 19808), 0), [(("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19806), 0)], 0))]), (("test/test.ml", 523, 19746, 19767), ("test/test.ml", 523, 19746, 19809), 0), [(("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19808), 0)], 0))]), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 523, 19746, 19810), 0), [(("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19809), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0))), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 524, 19812, 19819), ("test/test.ml", 524, 19812, 19829), 0), 0)), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19830), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0))), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0))), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0), 0, 0); (((("s"), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0))), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0), 0, 0)]), (("test/test.ml", 524, 19812, 19858), ("test/test.ml", 524, 19812, 19866), 0), [(("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19864), 0)], 0))]), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19866), 0), 0, 0))]), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)); ((Tag5 ((("Ptyp_any"), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0)), 0), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0))), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0))), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_any:", (("test/test.ml", 528, 19889, 19941), ("test/test.ml", 528, 19889, 19956), 0), 0)), (("test/test.ml", 528, 19889, 19939), ("test/test.ml", 528, 19889, 19958), 0), [(("test/test.ml", 528, 19889, 19940), ("test/test.ml", 528, 19889, 19957), 0)], 0))]), (("test/test.ml", 528, 19889, 19923), ("test/test.ml", 528, 19889, 19959), 0), [(("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19958), 0)], 0))]), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19960), 0), [(("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19959), 0)], 0), (Tag1 (Tag2 ("any", (("test/test.ml", 528, 19889, 19963), ("test/test.ml", 528, 19889, 19966), 0), 0)), (("test/test.ml", 528, 19889, 19962), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)); ((Tag5 ((("Ptyp_var"), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19982), 0)), ((0, ((("name", (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0))), (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0), 0, 0)))), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19987), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0))), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0))), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_var:", (("test/test.ml", 529, 19968, 20023), ("test/test.ml", 529, 19968, 20038), 0), 0)), (("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20039), 0), 0, 0); (((("name"), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0))), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0), 0, 0)]), (("test/test.ml", 529, 19968, 20021), ("test/test.ml", 529, 19968, 20048), 0), [(("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20047), 0)], 0))]), (("test/test.ml", 529, 19968, 20005), ("test/test.ml", 529, 19968, 20049), 0), [(("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20048), 0)], 0))]), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20050), 0), [(("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20049), 0)], 0), (Tag1 (Tag2 ("var-name", (("test/test.ml", 529, 19968, 20053), ("test/test.ml", 529, 19968, 20061), 0), 0)), (("test/test.ml", 529, 19968, 20052), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)); ((Tag5 ((("Ptyp_arrow"), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20077), 0)), ((0, (Tag4 ([((("arg_label", (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0))), (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0), 0, 0); ((("core_type", (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0))), (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0), 0, 0); ((("core_type2", (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0))), (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0), 0, 0)]), (("test/test.ml", 530, 20063, 20078), ("test/test.ml", 530, 20063, 20114), 0), [(("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20113), 0)], 0)))), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20114), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0))), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0))), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow10:", (("test/test.ml", 533, 20233, 20270), ("test/test.ml", 533, 20233, 20289), 0), 0)), (("test/test.ml", 533, 20233, 20268), ("test/test.ml", 533, 20233, 20292), 0), [(("test/test.ml", 533, 20233, 20269), ("test/test.ml", 533, 20233, 20290), 0)], 0))]), (("test/test.ml", 533, 20233, 20252), ("test/test.ml", 533, 20233, 20293), 0), [(("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20292), 0)], 0))]), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20294), 0), [(("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20293), 0)], 0), (Tag1 (Tag2 ("arrow", (("test/test.ml", 533, 20233, 20297), ("test/test.ml", 533, 20233, 20302), 0), 0)), (("test/test.ml", 533, 20233, 20296), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)); ((Tag5 ((("Ptyp_object"), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20320), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0))), (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0), 0, 0); ((("b", (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0))), (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0), 0, 0)]), (("test/test.ml", 535, 20305, 20321), ("test/test.ml", 535, 20305, 20326), 0), [(("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20325), 0)], 0)))), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20326), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0))), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0))), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow8:", (("test/test.ml", 537, 20374, 20411), ("test/test.ml", 537, 20374, 20429), 0), 0)), (("test/test.ml", 537, 20374, 20409), ("test/test.ml", 537, 20374, 20432), 0), [(("test/test.ml", 537, 20374, 20410), ("test/test.ml", 537, 20374, 20430), 0)], 0))]), (("test/test.ml", 537, 20374, 20393), ("test/test.ml", 537, 20374, 20433), 0), [(("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20432), 0)], 0))]), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20434), 0), [(("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20433), 0)], 0), (Tag1 (Tag2 ("obj", (("test/test.ml", 537, 20374, 20437), ("test/test.ml", 537, 20374, 20440), 0), 0)), (("test/test.ml", 537, 20374, 20436), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)); ((Tag5 ((("Ptyp_class"), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20456), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0))), (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0), 0, 0); ((("b", (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0))), (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0), 0, 0)]), (("test/test.ml", 538, 20442, 20457), ("test/test.ml", 538, 20442, 20462), 0), [(("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20461), 0)], 0)))), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20462), 0), 0, 0), 0, (Tag2 (0, [(((("myid", (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0))), (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0), 0, 0), (Tag5 ((((("process_id"), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0))), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0))), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0), 0, 0); (((("s"), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0))), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0), 0, 0)]), (("test/test.ml", 540, 20512, 20539), ("test/test.ml", 540, 20512, 20544), 0), [(("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20543), 0)], 0))]), (("test/test.ml", 540, 20512, 20527), ("test/test.ml", 540, 20512, 20545), 0), [(("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20544), 0)], 0), 0, (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 540, 20512, 20545), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0))), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0))), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow7:", (("test/test.ml", 542, 20600, 20637), ("test/test.ml", 542, 20600, 20655), 0), 0)), (("test/test.ml", 542, 20600, 20635), ("test/test.ml", 542, 20600, 20658), 0), [(("test/test.ml", 542, 20600, 20636), ("test/test.ml", 542, 20600, 20656), 0)], 0))]), (("test/test.ml", 542, 20600, 20619), ("test/test.ml", 542, 20600, 20659), 0), [(("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20658), 0)], 0))]), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20660), 0), [(("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20659), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 542, 20600, 20663), ("test/test.ml", 542, 20600, 20668), 0), 0)), (("test/test.ml", 542, 20600, 20662), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)); ((Tag5 ((("Ptyp_alias"), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20684), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0))), (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0), 0, 0); ((("b", (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0))), (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0), 0, 0)]), (("test/test.ml", 543, 20670, 20685), ("test/test.ml", 543, 20670, 20690), 0), [(("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20689), 0)], 0)))), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20690), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0))), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0))), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow6:", (("test/test.ml", 546, 20769, 20806), ("test/test.ml", 546, 20769, 20824), 0), 0)), (("test/test.ml", 546, 20769, 20804), ("test/test.ml", 546, 20769, 20827), 0), [(("test/test.ml", 546, 20769, 20805), ("test/test.ml", 546, 20769, 20825), 0)], 0))]), (("test/test.ml", 546, 20769, 20788), ("test/test.ml", 546, 20769, 20828), 0), [(("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20827), 0)], 0))]), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20829), 0), [(("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20828), 0)], 0), (Tag1 (Tag2 ("alias", (("test/test.ml", 546, 20769, 20832), ("test/test.ml", 546, 20769, 20837), 0), 0)), (("test/test.ml", 546, 20769, 20831), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)); ((Tag5 ((("Ptyp_variant"), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20855), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0))), (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0), 0, 0); ((("b", (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0))), (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0), 0, 0); ((("c", (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0))), (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0), 0, 0)]), (("test/test.ml", 547, 20839, 20856), ("test/test.ml", 547, 20839, 20863), 0), [(("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20862), 0)], 0)))), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20863), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0))), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0))), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow5:", (("test/test.ml", 549, 20929, 20966), ("test/test.ml", 549, 20929, 20984), 0), 0)), (("test/test.ml", 549, 20929, 20964), ("test/test.ml", 549, 20929, 20987), 0), [(("test/test.ml", 549, 20929, 20965), ("test/test.ml", 549, 20929, 20985), 0)], 0))]), (("test/test.ml", 549, 20929, 20948), ("test/test.ml", 549, 20929, 20988), 0), [(("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20987), 0)], 0))]), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20989), 0), [(("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20988), 0)], 0), (Tag1 (Tag2 ("variant", (("test/test.ml", 549, 20929, 20991), ("test/test.ml", 549, 20929, 20998), 0), 0)), (("test/test.ml", 549, 20929, 20990), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)); ((Tag5 ((("Ptyp_poly"), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21013), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0))), (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0), 0, 0); ((("b", (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0))), (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0), 0, 0)]), (("test/test.ml", 550, 21000, 21014), ("test/test.ml", 550, 21000, 21019), 0), [(("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21018), 0)], 0)))), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21019), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0))), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0))), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow4:", (("test/test.ml", 553, 21102, 21139), ("test/test.ml", 553, 21102, 21157), 0), 0)), (("test/test.ml", 553, 21102, 21137), ("test/test.ml", 553, 21102, 21160), 0), [(("test/test.ml", 553, 21102, 21138), ("test/test.ml", 553, 21102, 21158), 0)], 0))]), (("test/test.ml", 553, 21102, 21121), ("test/test.ml", 553, 21102, 21161), 0), [(("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21160), 0)], 0))]), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21162), 0), [(("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21161), 0)], 0), (Tag1 (Tag2 ("poly", (("test/test.ml", 553, 21102, 21165), ("test/test.ml", 553, 21102, 21169), 0), 0)), (("test/test.ml", 553, 21102, 21164), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)); ((Tag5 ((("Ptyp_package"), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21187), 0)), ((0, ((("a", (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0))), (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0), 0, 0)))), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21189), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0))), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0))), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_arrow3:", (("test/test.ml", 556, 21219, 21256), ("test/test.ml", 556, 21219, 21274), 0), 0)), (("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21275), 0), 0, 0); (((("a"), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0))), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0), 0, 0)]), (("test/test.ml", 556, 21219, 21254), ("test/test.ml", 556, 21219, 21279), 0), [(("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21277), 0)], 0))]), (("test/test.ml", 556, 21219, 21238), ("test/test.ml", 556, 21219, 21280), 0), [(("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21279), 0)], 0))]), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21281), 0), [(("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21280), 0)], 0), (Tag1 (Tag2 ("typ_package", (("test/test.ml", 556, 21219, 21285), ("test/test.ml", 556, 21219, 21296), 0), 0)), (("test/test.ml", 556, 21219, 21284), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)); ((Tag5 ((("Ptyp_extension"), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21457), 0)), ((0, ((("a", (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0))), (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0), 0, 0)))), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21459), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0))), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0))), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_extension:", (("test/test.ml", 560, 21487, 21524), ("test/test.ml", 560, 21487, 21545), 0), 0)), (("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21546), 0), 0, 0); (((("a"), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0))), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0), 0, 0)]), (("test/test.ml", 560, 21487, 21522), ("test/test.ml", 560, 21487, 21550), 0), [(("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21548), 0)], 0))]), (("test/test.ml", 560, 21487, 21506), ("test/test.ml", 560, 21487, 21551), 0), [(("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21550), 0)], 0))]), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21552), 0), [(("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21551), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 560, 21487, 21555), ("test/test.ml", 560, 21487, 21564), 0), 0)), (("test/test.ml", 560, 21487, 21554), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 502, 19055, 19059), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 500, 19025, 19027), ("test/test.ml", 560, 21487, 21565), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0)), 0), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0), 0, 0)), (("test/test.ml", 499, 18953, 19015), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 560, 21487, 21565), 1), 0, 0), 0, (("test/test.ml", 498, 18949, 18949), ("test/test.ml", 560, 21487, 21565), 0)); (((("process_record_kind_list", (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0))), (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0))), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 562, 21570, 21599), 0), [(("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0))), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0))), (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0), 0, 0); ((("s", (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0))), (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0), 0, 0)]), (("test/test.ml", 564, 21626, 21628), ("test/test.ml", 564, 21626, 21634), 0), [(("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21633), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0))), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0)), 0), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0), 0, 0), 0, (Tag1 (Tag2 ("process_record_kind_list", (("test/test.ml", 566, 21652, 21663), ("test/test.ml", 566, 21652, 21687), 0), 0)), (("test/test.ml", 566, 21652, 21662), ("test/test.ml", 566, 21652, 21688), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 567, 21689, 21695), ("test/test.ml", 567, 21689, 21697), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0), 0, 0); ((("t", (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0))), (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0), 0, 0)]), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 1), 0, 0)))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0))), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0), 0, 0), [(0, (Tag5 ((((("process_record_kind"), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0))), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0))), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0))), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21728), ("test/test.ml", 568, 21703, 21736), 0), [(("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21735), 0)], 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21737), 0), [(("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21736), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0))), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0), 0, 0), [(0, (Tag1 (Tag2 ("/", (("test/test.ml", 568, 21703, 21741), ("test/test.ml", 568, 21703, 21742), 0), 0)), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21743), 0), 0, 0)); (0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0))), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0))), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0))), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21772), ("test/test.ml", 568, 21703, 21778), 0), [(("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21777), 0)], 0))]), (("test/test.ml", 568, 21703, 21746), ("test/test.ml", 568, 21703, 21779), 0), [(("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21778), 0)], 0))]), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 565, 21637, 21639), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 563, 21611, 21613), ("test/test.ml", 568, 21703, 21779), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0)), 0), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0), 0, 0)), (("test/test.ml", 562, 21570, 21600), ("test/test.ml", 568, 21703, 21779), 0), 0, 0)), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 568, 21703, 21779), 1), 0, 0), 0, (("test/test.ml", 561, 21566, 21566), ("test/test.ml", 568, 21703, 21779), 0)); (((("my_process_core_type", (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0))), (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0))), (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0)), 0), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0)), 0), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)]), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 572, 21790, 21840), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0))), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0))), (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0), 0, 0); ((("s", (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0))), (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0), 0, 0)]), (("test/test.ml", 574, 21864, 21868), ("test/test.ml", 574, 21864, 21873), 0), [(("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21872), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0))), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 1)), ((("ptyp_desc", (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0))), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 1)), ((("ptyp_loc", (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0))), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 1)), ((("ptyp_loc_stack", (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0))), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 1)), ((("ptyp_attributes", (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0))), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0), 0, 0))], 0), (("test/test.ml", 576, 21897, 21901), ("test/test.ml", 581, 22061, 22066), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0))), (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0), 0, 0), (Tag5 ((((("my_process_core_type_desc"), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0))), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0))), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0), 0, 0); (((("s"), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0))), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0), 0, 0)]), (("test/test.ml", 582, 22069, 22109), ("test/test.ml", 582, 22069, 22122), 0), [(("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22121), 0)], 0))]), (("test/test.ml", 582, 22069, 22082), ("test/test.ml", 582, 22069, 22123), 0), [(("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22122), 0)], 0), 0, (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 582, 22069, 22123), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0))), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0))), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:core_type.ptyp_desc:", (("test/test.ml", 584, 22146, 22183), ("test/test.ml", 584, 22146, 22209), 0), 0)), (("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22210), 0), 0, 0); (((("a"), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0))), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0), 0, 0); (((("td"), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0))), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0), 0, 0)]), (("test/test.ml", 584, 22146, 22181), ("test/test.ml", 584, 22146, 22219), 0), [(("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22218), 0)], 0))]), (("test/test.ml", 584, 22146, 22165), ("test/test.ml", 584, 22146, 22220), 0), [(("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22219), 0)], 0))]), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 584, 22146, 22221), 0), [(("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22220), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0))), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0), 0, 0), [(0, (Tag1 (Tag2 ("ptyp_desc:", (("test/test.ml", 585, 22223, 22228), ("test/test.ml", 585, 22223, 22238), 0), 0)), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22239), 0), 0, 0)); (0, (((("td"), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0))), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 575, 21877, 21882), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 573, 21849, 21851), ("test/test.ml", 585, 22223, 22244), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0)), 0), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0), 0, 0)), (("test/test.ml", 572, 21790, 21840), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 585, 22223, 22244), 1), 0, 0), 0, (("test/test.ml", 570, 21785, 21785), ("test/test.ml", 585, 22223, 22244), 0)); (((("my_process_core_type_list", (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0))), (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0))), (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0)), 0), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0)), 0), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)]), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 586, 22245, 22307), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0))), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0))), (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0), 0, 0); ((("b", (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0))), (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0), 0, 0)]), (("test/test.ml", 588, 22332, 22336), ("test/test.ml", 588, 22332, 22341), 0), [(("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22340), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0))), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0)), 0), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0), 0, 0), 0, (Tag1 (Tag2 ("my_process_core_type_list:", (("test/test.ml", 590, 22362, 22375), ("test/test.ml", 590, 22362, 22401), 0), 0)), (("test/test.ml", 590, 22362, 22374), ("test/test.ml", 590, 22362, 22402), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 591, 22403, 22411), ("test/test.ml", 591, 22403, 22413), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0), 0, 0); ((("t", (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0))), (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0), 0, 0)]), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 1), 0, 0)))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0))), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0), 0, 0), [(0, (Tag5 ((((("my_process_core_type"), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0))), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0))), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0))), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22446), ("test/test.ml", 592, 22419, 22452), 0), [(("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22451), 0)], 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22452), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0))), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 592, 22419, 22456), ("test/test.ml", 592, 22419, 22457), 0), 0)), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22458), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0))), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0))), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0))), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22486), ("test/test.ml", 592, 22419, 22491), 0), [(("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22490), 0)], 0))]), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 589, 22345, 22349), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 587, 22317, 22319), ("test/test.ml", 592, 22419, 22491), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0)), 0), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0), 0, 0)), (("test/test.ml", 586, 22245, 22307), ("test/test.ml", 592, 22419, 22491), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 592, 22419, 22491), 1), 0, 0), 0, (("test/test.ml", 586, 22245, 22245), ("test/test.ml", 592, 22419, 22491), 0))]))
("DEBUG:Pstr_value:", 1, [((Tag10 (((("process_record_kind4", (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0))), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0), 0, 0), (Tag8 (0, (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 1), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18135), 1), 0, 0), (Tag19 ((Tag4 (0, 0, ((("x", (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0))), (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0))), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 475, 18069, 18150), ("test/test.ml", 475, 18069, 18150), 0), 0)), (("test/test.ml", 475, 18069, 18149), ("test/test.ml", 475, 18069, 18151), 0), 0, 0)), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18151), 1), 0, 0)), (("test/test.ml", 475, 18069, 18138), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), 0, (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 475, 18069, 18151), 0)); (((("process_record_kind2", (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0))), (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0))), (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0), 0, 0), (Tag3 ((("label_declaration"), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0)), 0), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18202), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("s", (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0))), (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0)), 0), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18217), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 477, 18158, 18221), ("test/test.ml", 477, 18158, 18221), 0), 0)), (("test/test.ml", 477, 18158, 18220), ("test/test.ml", 477, 18158, 18222), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18222), 1), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18222), 1), 0, 0), 0, (("test/test.ml", 476, 18152, 18154), ("test/test.ml", 477, 18158, 18222), 0)); (((("process_record_kind3", (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0))), (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0))), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0))), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 479, 18229, 18259), ("test/test.ml", 479, 18229, 18259), 0), 0)), (("test/test.ml", 479, 18229, 18258), ("test/test.ml", 479, 18229, 18260), 0), 0, 0)), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18260), 1), 0, 0)), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18260), 1), 0, 0), 0, (("test/test.ml", 478, 18223, 18225), ("test/test.ml", 479, 18229, 18260), 0)); (((("process_record_kind", (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0))), (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("x", (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0))), (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0), 0, 0); ((("s", (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0))), (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18289), ("test/test.ml", 481, 18267, 18294), 0), [(("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18293), 0)], 0), (Tag2 ([(Tag3 ((("label_declaration"), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0)), 0), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0)), 0), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 481, 18267, 18326), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0))), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0), 0, 0), [((Tag7 ([((("pld_name"), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 1)), ((("pld_name", (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0))), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0), 0, 0)); ((("pld_mutable"), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 1)), ((("pld_mutable", (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0))), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0), 0, 0)); ((("pld_type"), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 1)), ((("pld_type", (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0))), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0), 0, 0)); ((("pld_loc"), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 1)), ((("pld_loc", (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0))), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0), 0, 0)); ((("pld_attributes"), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 1)), ((("pld_attributes", (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0))), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0), 0, 0))], 0), (("test/test.ml", 483, 18351, 18355), ("test/test.ml", 489, 18532, 18536), 0), 0, 0), 0, (Tag2 (0, [(((("foo", (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0))), (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0), 0, 0), (Tag5 ((((("my_process_core_type"), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0))), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0), 0, 0), [(0, (Tag8 ([(((("pld_type"), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0))), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0), 0, 0); (((("s"), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0))), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0), 0, 0)]), (("test/test.ml", 490, 18540, 18573), ("test/test.ml", 490, 18540, 18586), 0), [(("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18585), 0)], 0))]), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18586), 0), 0, 0), 0, (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 490, 18540, 18586), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0))), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0))), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:precord_kind:", (("test/test.ml", 491, 18590, 18627), ("test/test.ml", 491, 18590, 18646), 0), 0)), (("test/test.ml", 491, 18590, 18626), ("test/test.ml", 491, 18590, 18647), 0), 0, 0); (((("pld_name"), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0))), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0), 0, 0); (Tag1 (Tag2 ("mutable", (("test/test.ml", 493, 18697, 18734), ("test/test.ml", 493, 18697, 18741), 0), 0)), (("test/test.ml", 493, 18697, 18733), ("test/test.ml", 493, 18697, 18742), 0), 0, 0); (((("pld_mutable"), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0))), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0), 0, 0); (Tag1 (Tag2 ("type", (("test/test.ml", 495, 18793, 18830), ("test/test.ml", 495, 18793, 18834), 0), 0)), (("test/test.ml", 495, 18793, 18829), ("test/test.ml", 495, 18793, 18835), 0), 0, 0); (((("pld_type"), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0))), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0), 0, 0)]), (("test/test.ml", 491, 18590, 18625), ("test/test.ml", 496, 18837, 18882), 0), [(("test/test.ml", 491, 18590, 18626), ("test/test.ml", 496, 18837, 18881), 0)], 0))]), (("test/test.ml", 491, 18590, 18609), ("test/test.ml", 496, 18837, 18883), 0), [(("test/test.ml", 491, 18590, 18610), ("test/test.ml", 496, 18837, 18882), 0)], 0))]), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 496, 18837, 18884), 0), [(("test/test.ml", 491, 18590, 18595), ("test/test.ml", 496, 18837, 18883), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0))), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0), 0, 0), [(0, (Tag1 (Tag2 ("process_record_kind:\"", (("test/test.ml", 497, 18886, 18891), ("test/test.ml", 497, 18886, 18913), 0), 0)), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18914), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0))), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0), 0, 0), [(0, (Tag12 ((((("pld_name"), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0), 0, 0), (("txt"), (("test/test.ml", 497, 18886, 18926), ("test/test.ml", 497, 18886, 18929), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18929), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0))), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" body:", (("test/test.ml", 497, 18886, 18933), ("test/test.ml", 497, 18886, 18941), 0), 0)), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18942), 0), 0, 0)); (0, (((("foo"), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0))), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 482, 18336, 18338), ("test/test.ml", 497, 18886, 18948), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0)), 0), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0), 0, 0)), (("test/test.ml", 481, 18267, 18326), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 497, 18886, 18948), 1), 0, 0), 0, (("test/test.ml", 480, 18261, 18263), ("test/test.ml", 497, 18886, 18948), 0)); (((("my_process_core_type_desc", (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0))), (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0))), (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0)), 0), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0)), 0), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)]), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 499, 18953, 19015), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0))), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0))), (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0), 0, 0); ((("s", (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0))), (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0), 0, 0)]), (("test/test.ml", 501, 19040, 19044), ("test/test.ml", 501, 19040, 19052), 0), [(("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19051), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0))), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19091), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0))), (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0), 0, 0); ((("b", (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0))), (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0), 0, 0)]), (("test/test.ml", 503, 19074, 19092), ("test/test.ml", 503, 19074, 19097), 0), [(("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19096), 0)], 0)))), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19097), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 1)), ((("txt", (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0))), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0), 0, 0)); ((("loc"), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 1)), ((("loc", (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0))), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0), 0, 0))], 0), (("test/test.ml", 505, 19149, 19159), ("test/test.ml", 505, 19149, 19168), 0), 0, 0), (((("a"), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0))), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0), 0, 0), 0, (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 505, 19149, 19172), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0))), (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0), 0, 0), (Tag5 ((((("process_id1"), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0))), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0))), (("test/test.ml", 506, 19176, 19203), ("test/test.ml", 506, 19176, 19208), 0), [(("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0)], 0))]), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19208), 0), 0, 0), 0, (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 506, 19176, 19208), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0))), (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0), 0, 0), (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0))), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0), 0, 0), [(0, (Tag8 ([(((("b"), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0))), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0), 0, 0); (((("s"), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0))), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0), 0, 0)]), (("test/test.ml", 509, 19320, 19367), ("test/test.ml", 509, 19320, 19373), 0), [(("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19372), 0)], 0))]), (("test/test.ml", 509, 19320, 19340), ("test/test.ml", 509, 19320, 19374), 0), [(("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19373), 0)], 0), 0, (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 509, 19320, 19374), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0))), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_constr1 '%s' %s", (("test/test.ml", 510, 19378, 19399), ("test/test.ml", 510, 19378, 19425), 0), 0)), (("test/test.ml", 510, 19378, 19398), ("test/test.ml", 510, 19378, 19426), 0), 0, 0)); (0, (((("id1"), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0))), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0))), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0), 0, 0))]), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19438), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0))), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0))), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_constr:", (("test/test.ml", 514, 19519, 19529), ("test/test.ml", 514, 19519, 19547), 0), 0)), (("test/test.ml", 514, 19519, 19528), ("test/test.ml", 514, 19519, 19548), 0), 0, 0); (Tag1 (Tag2 ("id", (("test/test.ml", 515, 19550, 19560), ("test/test.ml", 515, 19550, 19562), 0), 0)), (("test/test.ml", 515, 19550, 19559), ("test/test.ml", 515, 19550, 19563), 0), 0, 0); (((("a"), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0))), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0), 0, 0); (Tag1 (Tag2 ("types", (("test/test.ml", 516, 19567, 19577), ("test/test.ml", 516, 19567, 19582), 0), 0)), (("test/test.ml", 516, 19567, 19576), ("test/test.ml", 516, 19567, 19583), 0), 0, 0); (((("b"), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0))), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0), 0, 0); (Tag1 (Tag2 ("context", (("test/test.ml", 517, 19587, 19597), ("test/test.ml", 517, 19587, 19604), 0), 0)), (("test/test.ml", 517, 19587, 19596), ("test/test.ml", 517, 19587, 19605), 0), 0, 0); (((("s"), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0))), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0), 0, 0); (Tag1 (Tag2 ("id1", (("test/test.ml", 518, 19609, 19619), ("test/test.ml", 518, 19609, 19622), 0), 0)), (("test/test.ml", 518, 19609, 19618), ("test/test.ml", 518, 19609, 19623), 0), 0, 0); (((("id1"), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0))), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0), 0, 0)]), (("test/test.ml", 513, 19480, 19517), ("test/test.ml", 519, 19629, 19637), 0), [(("test/test.ml", 514, 19519, 19528), ("test/test.ml", 518, 19609, 19628), 0)], 0))]), (("test/test.ml", 513, 19480, 19501), ("test/test.ml", 519, 19629, 19638), 0), [(("test/test.ml", 513, 19480, 19502), ("test/test.ml", 519, 19629, 19637), 0)], 0))]), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 519, 19629, 19639), 0), [(("test/test.ml", 513, 19480, 19487), ("test/test.ml", 519, 19629, 19638), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0))), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_constr:\"", (("test/test.ml", 520, 19646, 19653), ("test/test.ml", 520, 19646, 19667), 0), 0)), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19668), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0))), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0), 0, 0), [(0, (((("id1"), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0))), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0))), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"->", (("test/test.ml", 520, 19646, 19678), ("test/test.ml", 520, 19646, 19682), 0), 0)), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19683), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0))), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19710), 0)), ((0, ((("a", (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0))), (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0), 0, 0)))), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19712), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0))), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0))), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_tuple:", (("test/test.ml", 523, 19746, 19785), ("test/test.ml", 523, 19746, 19802), 0), 0)), (("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19803), 0), 0, 0); (((("a"), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0))), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0), 0, 0)]), (("test/test.ml", 523, 19746, 19783), ("test/test.ml", 523, 19746, 19808), 0), [(("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19806), 0)], 0))]), (("test/test.ml", 523, 19746, 19767), ("test/test.ml", 523, 19746, 19809), 0), [(("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19808), 0)], 0))]), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 523, 19746, 19810), 0), [(("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19809), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0))), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 524, 19812, 19819), ("test/test.ml", 524, 19812, 19829), 0), 0)), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19830), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0))), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0))), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0), 0, 0); (((("s"), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0))), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0), 0, 0)]), (("test/test.ml", 524, 19812, 19858), ("test/test.ml", 524, 19812, 19866), 0), [(("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19864), 0)], 0))]), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19866), 0), 0, 0))]), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)); ((Tag5 ((("Ptyp_any"), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0)), 0), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0))), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0))), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_any:", (("test/test.ml", 528, 19889, 19941), ("test/test.ml", 528, 19889, 19956), 0), 0)), (("test/test.ml", 528, 19889, 19939), ("test/test.ml", 528, 19889, 19958), 0), [(("test/test.ml", 528, 19889, 19940), ("test/test.ml", 528, 19889, 19957), 0)], 0))]), (("test/test.ml", 528, 19889, 19923), ("test/test.ml", 528, 19889, 19959), 0), [(("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19958), 0)], 0))]), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19960), 0), [(("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19959), 0)], 0), (Tag1 (Tag2 ("any", (("test/test.ml", 528, 19889, 19963), ("test/test.ml", 528, 19889, 19966), 0), 0)), (("test/test.ml", 528, 19889, 19962), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)); ((Tag5 ((("Ptyp_var"), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19982), 0)), ((0, ((("name", (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0))), (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0), 0, 0)))), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19987), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0))), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0))), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_var:", (("test/test.ml", 529, 19968, 20023), ("test/test.ml", 529, 19968, 20038), 0), 0)), (("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20039), 0), 0, 0); (((("name"), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0))), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0), 0, 0)]), (("test/test.ml", 529, 19968, 20021), ("test/test.ml", 529, 19968, 20048), 0), [(("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20047), 0)], 0))]), (("test/test.ml", 529, 19968, 20005), ("test/test.ml", 529, 19968, 20049), 0), [(("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20048), 0)], 0))]), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20050), 0), [(("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20049), 0)], 0), (Tag1 (Tag2 ("var-name", (("test/test.ml", 529, 19968, 20053), ("test/test.ml", 529, 19968, 20061), 0), 0)), (("test/test.ml", 529, 19968, 20052), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)); ((Tag5 ((("Ptyp_arrow"), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20077), 0)), ((0, (Tag4 ([((("arg_label", (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0))), (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0), 0, 0); ((("core_type", (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0))), (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0), 0, 0); ((("core_type2", (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0))), (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0), 0, 0)]), (("test/test.ml", 530, 20063, 20078), ("test/test.ml", 530, 20063, 20114), 0), [(("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20113), 0)], 0)))), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20114), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0))), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0))), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow10:", (("test/test.ml", 533, 20233, 20270), ("test/test.ml", 533, 20233, 20289), 0), 0)), (("test/test.ml", 533, 20233, 20268), ("test/test.ml", 533, 20233, 20292), 0), [(("test/test.ml", 533, 20233, 20269), ("test/test.ml", 533, 20233, 20290), 0)], 0))]), (("test/test.ml", 533, 20233, 20252), ("test/test.ml", 533, 20233, 20293), 0), [(("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20292), 0)], 0))]), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20294), 0), [(("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20293), 0)], 0), (Tag1 (Tag2 ("arrow", (("test/test.ml", 533, 20233, 20297), ("test/test.ml", 533, 20233, 20302), 0), 0)), (("test/test.ml", 533, 20233, 20296), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)); ((Tag5 ((("Ptyp_object"), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20320), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0))), (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0), 0, 0); ((("b", (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0))), (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0), 0, 0)]), (("test/test.ml", 535, 20305, 20321), ("test/test.ml", 535, 20305, 20326), 0), [(("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20325), 0)], 0)))), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20326), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0))), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0))), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow8:", (("test/test.ml", 537, 20374, 20411), ("test/test.ml", 537, 20374, 20429), 0), 0)), (("test/test.ml", 537, 20374, 20409), ("test/test.ml", 537, 20374, 20432), 0), [(("test/test.ml", 537, 20374, 20410), ("test/test.ml", 537, 20374, 20430), 0)], 0))]), (("test/test.ml", 537, 20374, 20393), ("test/test.ml", 537, 20374, 20433), 0), [(("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20432), 0)], 0))]), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20434), 0), [(("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20433), 0)], 0), (Tag1 (Tag2 ("obj", (("test/test.ml", 537, 20374, 20437), ("test/test.ml", 537, 20374, 20440), 0), 0)), (("test/test.ml", 537, 20374, 20436), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)); ((Tag5 ((("Ptyp_class"), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20456), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0))), (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0), 0, 0); ((("b", (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0))), (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0), 0, 0)]), (("test/test.ml", 538, 20442, 20457), ("test/test.ml", 538, 20442, 20462), 0), [(("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20461), 0)], 0)))), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20462), 0), 0, 0), 0, (Tag2 (0, [(((("myid", (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0))), (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0), 0, 0), (Tag5 ((((("process_id"), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0))), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0))), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0), 0, 0); (((("s"), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0))), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0), 0, 0)]), (("test/test.ml", 540, 20512, 20539), ("test/test.ml", 540, 20512, 20544), 0), [(("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20543), 0)], 0))]), (("test/test.ml", 540, 20512, 20527), ("test/test.ml", 540, 20512, 20545), 0), [(("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20544), 0)], 0), 0, (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 540, 20512, 20545), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0))), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0))), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow7:", (("test/test.ml", 542, 20600, 20637), ("test/test.ml", 542, 20600, 20655), 0), 0)), (("test/test.ml", 542, 20600, 20635), ("test/test.ml", 542, 20600, 20658), 0), [(("test/test.ml", 542, 20600, 20636), ("test/test.ml", 542, 20600, 20656), 0)], 0))]), (("test/test.ml", 542, 20600, 20619), ("test/test.ml", 542, 20600, 20659), 0), [(("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20658), 0)], 0))]), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20660), 0), [(("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20659), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 542, 20600, 20663), ("test/test.ml", 542, 20600, 20668), 0), 0)), (("test/test.ml", 542, 20600, 20662), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)); ((Tag5 ((("Ptyp_alias"), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20684), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0))), (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0), 0, 0); ((("b", (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0))), (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0), 0, 0)]), (("test/test.ml", 543, 20670, 20685), ("test/test.ml", 543, 20670, 20690), 0), [(("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20689), 0)], 0)))), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20690), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0))), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0))), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow6:", (("test/test.ml", 546, 20769, 20806), ("test/test.ml", 546, 20769, 20824), 0), 0)), (("test/test.ml", 546, 20769, 20804), ("test/test.ml", 546, 20769, 20827), 0), [(("test/test.ml", 546, 20769, 20805), ("test/test.ml", 546, 20769, 20825), 0)], 0))]), (("test/test.ml", 546, 20769, 20788), ("test/test.ml", 546, 20769, 20828), 0), [(("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20827), 0)], 0))]), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20829), 0), [(("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20828), 0)], 0), (Tag1 (Tag2 ("alias", (("test/test.ml", 546, 20769, 20832), ("test/test.ml", 546, 20769, 20837), 0), 0)), (("test/test.ml", 546, 20769, 20831), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)); ((Tag5 ((("Ptyp_variant"), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20855), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0))), (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0), 0, 0); ((("b", (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0))), (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0), 0, 0); ((("c", (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0))), (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0), 0, 0)]), (("test/test.ml", 547, 20839, 20856), ("test/test.ml", 547, 20839, 20863), 0), [(("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20862), 0)], 0)))), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20863), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0))), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0))), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow5:", (("test/test.ml", 549, 20929, 20966), ("test/test.ml", 549, 20929, 20984), 0), 0)), (("test/test.ml", 549, 20929, 20964), ("test/test.ml", 549, 20929, 20987), 0), [(("test/test.ml", 549, 20929, 20965), ("test/test.ml", 549, 20929, 20985), 0)], 0))]), (("test/test.ml", 549, 20929, 20948), ("test/test.ml", 549, 20929, 20988), 0), [(("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20987), 0)], 0))]), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20989), 0), [(("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20988), 0)], 0), (Tag1 (Tag2 ("variant", (("test/test.ml", 549, 20929, 20991), ("test/test.ml", 549, 20929, 20998), 0), 0)), (("test/test.ml", 549, 20929, 20990), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)); ((Tag5 ((("Ptyp_poly"), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21013), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0))), (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0), 0, 0); ((("b", (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0))), (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0), 0, 0)]), (("test/test.ml", 550, 21000, 21014), ("test/test.ml", 550, 21000, 21019), 0), [(("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21018), 0)], 0)))), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21019), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0))), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0))), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow4:", (("test/test.ml", 553, 21102, 21139), ("test/test.ml", 553, 21102, 21157), 0), 0)), (("test/test.ml", 553, 21102, 21137), ("test/test.ml", 553, 21102, 21160), 0), [(("test/test.ml", 553, 21102, 21138), ("test/test.ml", 553, 21102, 21158), 0)], 0))]), (("test/test.ml", 553, 21102, 21121), ("test/test.ml", 553, 21102, 21161), 0), [(("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21160), 0)], 0))]), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21162), 0), [(("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21161), 0)], 0), (Tag1 (Tag2 ("poly", (("test/test.ml", 553, 21102, 21165), ("test/test.ml", 553, 21102, 21169), 0), 0)), (("test/test.ml", 553, 21102, 21164), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)); ((Tag5 ((("Ptyp_package"), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21187), 0)), ((0, ((("a", (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0))), (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0), 0, 0)))), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21189), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0))), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0))), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_arrow3:", (("test/test.ml", 556, 21219, 21256), ("test/test.ml", 556, 21219, 21274), 0), 0)), (("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21275), 0), 0, 0); (((("a"), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0))), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0), 0, 0)]), (("test/test.ml", 556, 21219, 21254), ("test/test.ml", 556, 21219, 21279), 0), [(("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21277), 0)], 0))]), (("test/test.ml", 556, 21219, 21238), ("test/test.ml", 556, 21219, 21280), 0), [(("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21279), 0)], 0))]), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21281), 0), [(("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21280), 0)], 0), (Tag1 (Tag2 ("typ_package", (("test/test.ml", 556, 21219, 21285), ("test/test.ml", 556, 21219, 21296), 0), 0)), (("test/test.ml", 556, 21219, 21284), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)); ((Tag5 ((("Ptyp_extension"), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21457), 0)), ((0, ((("a", (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0))), (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0), 0, 0)))), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21459), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0))), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0))), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_extension:", (("test/test.ml", 560, 21487, 21524), ("test/test.ml", 560, 21487, 21545), 0), 0)), (("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21546), 0), 0, 0); (((("a"), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0))), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0), 0, 0)]), (("test/test.ml", 560, 21487, 21522), ("test/test.ml", 560, 21487, 21550), 0), [(("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21548), 0)], 0))]), (("test/test.ml", 560, 21487, 21506), ("test/test.ml", 560, 21487, 21551), 0), [(("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21550), 0)], 0))]), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21552), 0), [(("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21551), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 560, 21487, 21555), ("test/test.ml", 560, 21487, 21564), 0), 0)), (("test/test.ml", 560, 21487, 21554), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 502, 19055, 19059), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 500, 19025, 19027), ("test/test.ml", 560, 21487, 21565), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0)), 0), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0), 0, 0)), (("test/test.ml", 499, 18953, 19015), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 560, 21487, 21565), 1), 0, 0), 0, (("test/test.ml", 498, 18949, 18949), ("test/test.ml", 560, 21487, 21565), 0)); (((("process_record_kind_list", (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0))), (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0))), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 562, 21570, 21599), 0), [(("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0))), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0))), (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0), 0, 0); ((("s", (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0))), (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0), 0, 0)]), (("test/test.ml", 564, 21626, 21628), ("test/test.ml", 564, 21626, 21634), 0), [(("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21633), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0))), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0)), 0), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0), 0, 0), 0, (Tag1 (Tag2 ("process_record_kind_list", (("test/test.ml", 566, 21652, 21663), ("test/test.ml", 566, 21652, 21687), 0), 0)), (("test/test.ml", 566, 21652, 21662), ("test/test.ml", 566, 21652, 21688), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 567, 21689, 21695), ("test/test.ml", 567, 21689, 21697), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0), 0, 0); ((("t", (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0))), (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0), 0, 0)]), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 1), 0, 0)))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0))), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0), 0, 0), [(0, (Tag5 ((((("process_record_kind"), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0))), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0))), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0))), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21728), ("test/test.ml", 568, 21703, 21736), 0), [(("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21735), 0)], 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21737), 0), [(("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21736), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0))), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0), 0, 0), [(0, (Tag1 (Tag2 ("/", (("test/test.ml", 568, 21703, 21741), ("test/test.ml", 568, 21703, 21742), 0), 0)), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21743), 0), 0, 0)); (0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0))), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0))), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0))), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21772), ("test/test.ml", 568, 21703, 21778), 0), [(("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21777), 0)], 0))]), (("test/test.ml", 568, 21703, 21746), ("test/test.ml", 568, 21703, 21779), 0), [(("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21778), 0)], 0))]), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 565, 21637, 21639), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 563, 21611, 21613), ("test/test.ml", 568, 21703, 21779), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0)), 0), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0), 0, 0)), (("test/test.ml", 562, 21570, 21600), ("test/test.ml", 568, 21703, 21779), 0), 0, 0)), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 568, 21703, 21779), 1), 0, 0), 0, (("test/test.ml", 561, 21566, 21566), ("test/test.ml", 568, 21703, 21779), 0)); (((("my_process_core_type", (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0))), (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0))), (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0)), 0), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0)), 0), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)]), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 572, 21790, 21840), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0))), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0))), (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0), 0, 0); ((("s", (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0))), (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0), 0, 0)]), (("test/test.ml", 574, 21864, 21868), ("test/test.ml", 574, 21864, 21873), 0), [(("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21872), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0))), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 1)), ((("ptyp_desc", (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0))), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 1)), ((("ptyp_loc", (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0))), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 1)), ((("ptyp_loc_stack", (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0))), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 1)), ((("ptyp_attributes", (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0))), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0), 0, 0))], 0), (("test/test.ml", 576, 21897, 21901), ("test/test.ml", 581, 22061, 22066), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0))), (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0), 0, 0), (Tag5 ((((("my_process_core_type_desc"), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0))), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0))), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0), 0, 0); (((("s"), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0))), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0), 0, 0)]), (("test/test.ml", 582, 22069, 22109), ("test/test.ml", 582, 22069, 22122), 0), [(("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22121), 0)], 0))]), (("test/test.ml", 582, 22069, 22082), ("test/test.ml", 582, 22069, 22123), 0), [(("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22122), 0)], 0), 0, (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 582, 22069, 22123), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0))), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0))), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:core_type.ptyp_desc:", (("test/test.ml", 584, 22146, 22183), ("test/test.ml", 584, 22146, 22209), 0), 0)), (("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22210), 0), 0, 0); (((("a"), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0))), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0), 0, 0); (((("td"), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0))), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0), 0, 0)]), (("test/test.ml", 584, 22146, 22181), ("test/test.ml", 584, 22146, 22219), 0), [(("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22218), 0)], 0))]), (("test/test.ml", 584, 22146, 22165), ("test/test.ml", 584, 22146, 22220), 0), [(("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22219), 0)], 0))]), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 584, 22146, 22221), 0), [(("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22220), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0))), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0), 0, 0), [(0, (Tag1 (Tag2 ("ptyp_desc:", (("test/test.ml", 585, 22223, 22228), ("test/test.ml", 585, 22223, 22238), 0), 0)), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22239), 0), 0, 0)); (0, (((("td"), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0))), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 575, 21877, 21882), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 573, 21849, 21851), ("test/test.ml", 585, 22223, 22244), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0)), 0), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0), 0, 0)), (("test/test.ml", 572, 21790, 21840), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 585, 22223, 22244), 1), 0, 0), 0, (("test/test.ml", 570, 21785, 21785), ("test/test.ml", 585, 22223, 22244), 0)); (((("my_process_core_type_list", (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0))), (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0))), (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0)), 0), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0)), 0), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)]), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 586, 22245, 22307), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0))), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0))), (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0), 0, 0); ((("b", (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0))), (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0), 0, 0)]), (("test/test.ml", 588, 22332, 22336), ("test/test.ml", 588, 22332, 22341), 0), [(("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22340), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0))), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0)), 0), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0), 0, 0), 0, (Tag1 (Tag2 ("my_process_core_type_list:", (("test/test.ml", 590, 22362, 22375), ("test/test.ml", 590, 22362, 22401), 0), 0)), (("test/test.ml", 590, 22362, 22374), ("test/test.ml", 590, 22362, 22402), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 591, 22403, 22411), ("test/test.ml", 591, 22403, 22413), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0), 0, 0); ((("t", (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0))), (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0), 0, 0)]), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 1), 0, 0)))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0))), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0), 0, 0), [(0, (Tag5 ((((("my_process_core_type"), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0))), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0))), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0))), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22446), ("test/test.ml", 592, 22419, 22452), 0), [(("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22451), 0)], 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22452), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0))), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 592, 22419, 22456), ("test/test.ml", 592, 22419, 22457), 0), 0)), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22458), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0))), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0))), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0))), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22486), ("test/test.ml", 592, 22419, 22491), 0), [(("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22490), 0)], 0))]), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 589, 22345, 22349), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 587, 22317, 22319), ("test/test.ml", 592, 22419, 22491), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0)), 0), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0), 0, 0)), (("test/test.ml", 586, 22245, 22307), ("test/test.ml", 592, 22419, 22491), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 592, 22419, 22491), 1), 0, 0), 0, (("test/test.ml", 586, 22245, 22245), ("test/test.ml", 592, 22419, 22491), 0))])
("DEBUG:value_binding.pat:", ((("my_process_core_type_list", (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0))), (("test/test.ml", 586, 22245, 22249), ("test/test.ml", 586, 22245, 22274), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0))), (("test/test.ml", 586, 22245, 22275), ("test/test.ml", 586, 22245, 22276), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0)), 0), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22292), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0)), 0), (("test/test.ml", 586, 22245, 22295), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)]), (("test/test.ml", 586, 22245, 22278), ("test/test.ml", 586, 22245, 22306), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 586, 22245, 22307), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0))), (("test/test.ml", 587, 22317, 22325), ("test/test.ml", 587, 22317, 22326), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0))), (("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22338), 0), 0, 0); ((("b", (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0))), (("test/test.ml", 588, 22332, 22339), ("test/test.ml", 588, 22332, 22340), 0), 0, 0)]), (("test/test.ml", 588, 22332, 22336), ("test/test.ml", 588, 22332, 22341), 0), [(("test/test.ml", 588, 22332, 22337), ("test/test.ml", 588, 22332, 22340), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0))), (("test/test.ml", 589, 22345, 22355), ("test/test.ml", 589, 22345, 22356), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0)), 0), (("test/test.ml", 590, 22362, 22368), ("test/test.ml", 590, 22362, 22370), 0), 0, 0), 0, (Tag1 (Tag2 ("my_process_core_type_list:", (("test/test.ml", 590, 22362, 22375), ("test/test.ml", 590, 22362, 22401), 0), 0)), (("test/test.ml", 590, 22362, 22374), ("test/test.ml", 590, 22362, 22402), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 591, 22403, 22411), ("test/test.ml", 591, 22403, 22413), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22410), 0), 0, 0); ((("t", (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0))), (("test/test.ml", 591, 22403, 22414), ("test/test.ml", 591, 22403, 22415), 0), 0, 0)]), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 1), 0, 0)))), (("test/test.ml", 591, 22403, 22409), ("test/test.ml", 591, 22403, 22415), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0))), (("test/test.ml", 592, 22419, 22453), ("test/test.ml", 592, 22419, 22454), 0), 0, 0), [(0, (Tag5 ((((("my_process_core_type"), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0))), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22445), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0))), (("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22448), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0))), (("test/test.ml", 592, 22419, 22450), ("test/test.ml", 592, 22419, 22451), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22446), ("test/test.ml", 592, 22419, 22452), 0), [(("test/test.ml", 592, 22419, 22447), ("test/test.ml", 592, 22419, 22451), 0)], 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22452), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0))), (("test/test.ml", 592, 22419, 22459), ("test/test.ml", 592, 22419, 22460), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 592, 22419, 22456), ("test/test.ml", 592, 22419, 22457), 0), 0)), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22458), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0))), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22486), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0))), (("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22488), 0), 0, 0); (((("b"), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0))), (("test/test.ml", 592, 22419, 22489), ("test/test.ml", 592, 22419, 22490), 0), 0, 0)]), (("test/test.ml", 592, 22419, 22486), ("test/test.ml", 592, 22419, 22491), 0), [(("test/test.ml", 592, 22419, 22487), ("test/test.ml", 592, 22419, 22490), 0)], 0))]), (("test/test.ml", 592, 22419, 22461), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22455), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 592, 22419, 22425), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 589, 22345, 22349), ("test/test.ml", 592, 22419, 22491), 0), 0, 0))]), (("test/test.ml", 587, 22317, 22319), ("test/test.ml", 592, 22419, 22491), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0)), 0), (("test/test.ml", 586, 22245, 22308), ("test/test.ml", 586, 22245, 22314), 0), 0, 0)), (("test/test.ml", 586, 22245, 22307), ("test/test.ml", 592, 22419, 22491), 0), 0, 0)), (("test/test.ml", 586, 22245, 22274), ("test/test.ml", 592, 22419, 22491), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 586, 22245, 22245), ("test/test.ml", 592, 22419, 22491), 0))
("DEBUG:value_binding.pat:", ((("my_process_core_type", (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0))), (("test/test.ml", 572, 21790, 21792), ("test/test.ml", 572, 21790, 21812), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0))), (("test/test.ml", 572, 21790, 21813), ("test/test.ml", 572, 21790, 21814), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0)), 0), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21825), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0)), 0), (("test/test.ml", 572, 21790, 21828), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)]), (("test/test.ml", 572, 21790, 21816), ("test/test.ml", 572, 21790, 21839), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 572, 21790, 21840), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0))), (("test/test.ml", 573, 21849, 21857), ("test/test.ml", 573, 21849, 21858), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0))), (("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21870), 0), 0, 0); ((("s", (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0))), (("test/test.ml", 574, 21864, 21871), ("test/test.ml", 574, 21864, 21872), 0), 0, 0)]), (("test/test.ml", 574, 21864, 21868), ("test/test.ml", 574, 21864, 21873), 0), [(("test/test.ml", 574, 21864, 21869), ("test/test.ml", 574, 21864, 21872), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0))), (("test/test.ml", 575, 21877, 21888), ("test/test.ml", 575, 21877, 21889), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 1)), ((("ptyp_desc", (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0))), (("test/test.ml", 577, 21903, 21909), ("test/test.ml", 577, 21903, 21918), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 1)), ((("ptyp_loc", (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0))), (("test/test.ml", 578, 21942, 21948), ("test/test.ml", 578, 21942, 21956), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 1)), ((("ptyp_loc_stack", (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0))), (("test/test.ml", 579, 21976, 21982), ("test/test.ml", 579, 21976, 21996), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 1)), ((("ptyp_attributes", (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0))), (("test/test.ml", 580, 22020, 22026), ("test/test.ml", 580, 22020, 22041), 0), 0, 0))], 0), (("test/test.ml", 576, 21897, 21901), ("test/test.ml", 581, 22061, 22066), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0))), (("test/test.ml", 582, 22069, 22077), ("test/test.ml", 582, 22069, 22079), 0), 0, 0), (Tag5 ((((("my_process_core_type_desc"), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0))), (("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22108), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0))), (("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22119), 0), 0, 0); (((("s"), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0))), (("test/test.ml", 582, 22069, 22120), ("test/test.ml", 582, 22069, 22121), 0), 0, 0)]), (("test/test.ml", 582, 22069, 22109), ("test/test.ml", 582, 22069, 22122), 0), [(("test/test.ml", 582, 22069, 22110), ("test/test.ml", 582, 22069, 22121), 0)], 0))]), (("test/test.ml", 582, 22069, 22082), ("test/test.ml", 582, 22069, 22123), 0), [(("test/test.ml", 582, 22069, 22083), ("test/test.ml", 582, 22069, 22122), 0)], 0), 0, (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 582, 22069, 22123), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0))), (("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22164), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0))), (("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22180), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:core_type.ptyp_desc:", (("test/test.ml", 584, 22146, 22183), ("test/test.ml", 584, 22146, 22209), 0), 0)), (("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22210), 0), 0, 0); (((("a"), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0))), (("test/test.ml", 584, 22146, 22213), ("test/test.ml", 584, 22146, 22214), 0), 0, 0); (((("td"), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0))), (("test/test.ml", 584, 22146, 22216), ("test/test.ml", 584, 22146, 22218), 0), 0, 0)]), (("test/test.ml", 584, 22146, 22181), ("test/test.ml", 584, 22146, 22219), 0), [(("test/test.ml", 584, 22146, 22182), ("test/test.ml", 584, 22146, 22218), 0)], 0))]), (("test/test.ml", 584, 22146, 22165), ("test/test.ml", 584, 22146, 22220), 0), [(("test/test.ml", 584, 22146, 22166), ("test/test.ml", 584, 22146, 22219), 0)], 0))]), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 584, 22146, 22221), 0), [(("test/test.ml", 584, 22146, 22151), ("test/test.ml", 584, 22146, 22220), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0))), (("test/test.ml", 585, 22223, 22240), ("test/test.ml", 585, 22223, 22241), 0), 0, 0), [(0, (Tag1 (Tag2 ("ptyp_desc:", (("test/test.ml", 585, 22223, 22228), ("test/test.ml", 585, 22223, 22238), 0), 0)), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22239), 0), 0, 0)); (0, (((("td"), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0))), (("test/test.ml", 585, 22223, 22242), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 585, 22223, 22227), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 584, 22146, 22150), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 582, 22069, 22073), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 575, 21877, 21882), ("test/test.ml", 585, 22223, 22244), 0), 0, 0))]), (("test/test.ml", 573, 21849, 21851), ("test/test.ml", 585, 22223, 22244), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0)), 0), (("test/test.ml", 572, 21790, 21841), ("test/test.ml", 572, 21790, 21847), 0), 0, 0)), (("test/test.ml", 572, 21790, 21840), ("test/test.ml", 585, 22223, 22244), 0), 0, 0)), (("test/test.ml", 572, 21790, 21812), ("test/test.ml", 585, 22223, 22244), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 570, 21785, 21785), ("test/test.ml", 585, 22223, 22244), 0))
("DEBUG:value_binding.pat:", ((("process_record_kind_list", (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0))), (("test/test.ml", 562, 21570, 21572), ("test/test.ml", 562, 21570, 21596), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0))), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 562, 21570, 21599), 0), [(("test/test.ml", 562, 21570, 21597), ("test/test.ml", 562, 21570, 21598), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0))), (("test/test.ml", 563, 21611, 21619), ("test/test.ml", 563, 21611, 21620), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0))), (("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21630), 0), 0, 0); ((("s", (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0))), (("test/test.ml", 564, 21626, 21632), ("test/test.ml", 564, 21626, 21633), 0), 0, 0)]), (("test/test.ml", 564, 21626, 21628), ("test/test.ml", 564, 21626, 21634), 0), [(("test/test.ml", 564, 21626, 21629), ("test/test.ml", 564, 21626, 21633), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0))), (("test/test.ml", 565, 21637, 21645), ("test/test.ml", 565, 21637, 21646), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0)), 0), (("test/test.ml", 566, 21652, 21656), ("test/test.ml", 566, 21652, 21658), 0), 0, 0), 0, (Tag1 (Tag2 ("process_record_kind_list", (("test/test.ml", 566, 21652, 21663), ("test/test.ml", 566, 21652, 21687), 0), 0)), (("test/test.ml", 566, 21652, 21662), ("test/test.ml", 566, 21652, 21688), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 567, 21689, 21695), ("test/test.ml", 567, 21689, 21697), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21694), 0), 0, 0); ((("t", (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0))), (("test/test.ml", 567, 21689, 21698), ("test/test.ml", 567, 21689, 21699), 0), 0, 0)]), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 1), 0, 0)))), (("test/test.ml", 567, 21689, 21693), ("test/test.ml", 567, 21689, 21699), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0))), (("test/test.ml", 568, 21703, 21738), ("test/test.ml", 568, 21703, 21739), 0), 0, 0), [(0, (Tag5 ((((("process_record_kind"), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0))), (("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21727), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0))), (("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21730), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0))), (("test/test.ml", 568, 21703, 21734), ("test/test.ml", 568, 21703, 21735), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21728), ("test/test.ml", 568, 21703, 21736), 0), [(("test/test.ml", 568, 21703, 21729), ("test/test.ml", 568, 21703, 21735), 0)], 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21737), 0), [(("test/test.ml", 568, 21703, 21708), ("test/test.ml", 568, 21703, 21736), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0))), (("test/test.ml", 568, 21703, 21744), ("test/test.ml", 568, 21703, 21745), 0), 0, 0), [(0, (Tag1 (Tag2 ("/", (("test/test.ml", 568, 21703, 21741), ("test/test.ml", 568, 21703, 21742), 0), 0)), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21743), 0), 0, 0)); (0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0))), (("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21771), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0))), (("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21774), 0), 0, 0); (((("s"), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0))), (("test/test.ml", 568, 21703, 21776), ("test/test.ml", 568, 21703, 21777), 0), 0, 0)]), (("test/test.ml", 568, 21703, 21772), ("test/test.ml", 568, 21703, 21778), 0), [(("test/test.ml", 568, 21703, 21773), ("test/test.ml", 568, 21703, 21777), 0)], 0))]), (("test/test.ml", 568, 21703, 21746), ("test/test.ml", 568, 21703, 21779), 0), [(("test/test.ml", 568, 21703, 21747), ("test/test.ml", 568, 21703, 21778), 0)], 0))]), (("test/test.ml", 568, 21703, 21740), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 568, 21703, 21707), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 565, 21637, 21639), ("test/test.ml", 568, 21703, 21779), 0), 0, 0))]), (("test/test.ml", 563, 21611, 21613), ("test/test.ml", 568, 21703, 21779), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0)), 0), (("test/test.ml", 562, 21570, 21602), ("test/test.ml", 562, 21570, 21608), 0), 0, 0)), (("test/test.ml", 562, 21570, 21600), ("test/test.ml", 568, 21703, 21779), 0), 0, 0)), (("test/test.ml", 562, 21570, 21596), ("test/test.ml", 568, 21703, 21779), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 561, 21566, 21566), ("test/test.ml", 568, 21703, 21779), 0))
("DEBUG:value_binding.pat:", ((("my_process_core_type_desc", (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0))), (("test/test.ml", 499, 18953, 18955), ("test/test.ml", 499, 18953, 18980), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0))), (("test/test.ml", 499, 18953, 18982), ("test/test.ml", 499, 18953, 18983), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0)), 0), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19000), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0)), 0), (("test/test.ml", 499, 18953, 19003), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)]), (("test/test.ml", 499, 18953, 18986), ("test/test.ml", 499, 18953, 19014), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 499, 18953, 19015), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0))), (("test/test.ml", 500, 19025, 19033), ("test/test.ml", 500, 19025, 19034), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0))), (("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19048), 0), 0, 0); ((("s", (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0))), (("test/test.ml", 501, 19040, 19050), ("test/test.ml", 501, 19040, 19051), 0), 0, 0)]), (("test/test.ml", 501, 19040, 19044), ("test/test.ml", 501, 19040, 19052), 0), [(("test/test.ml", 501, 19040, 19045), ("test/test.ml", 501, 19040, 19051), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0))), (("test/test.ml", 502, 19055, 19065), ("test/test.ml", 502, 19055, 19068), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19091), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0))), (("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19094), 0), 0, 0); ((("b", (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0))), (("test/test.ml", 503, 19074, 19095), ("test/test.ml", 503, 19074, 19096), 0), 0, 0)]), (("test/test.ml", 503, 19074, 19092), ("test/test.ml", 503, 19074, 19097), 0), [(("test/test.ml", 503, 19074, 19093), ("test/test.ml", 503, 19074, 19096), 0)], 0)))), (("test/test.ml", 503, 19074, 19080), ("test/test.ml", 503, 19074, 19097), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 1)), ((("txt", (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0))), (("test/test.ml", 505, 19149, 19160), ("test/test.ml", 505, 19149, 19163), 0), 0, 0)); ((("loc"), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 1)), ((("loc", (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0))), (("test/test.ml", 505, 19149, 19164), ("test/test.ml", 505, 19149, 19167), 0), 0, 0))], 0), (("test/test.ml", 505, 19149, 19159), ("test/test.ml", 505, 19149, 19168), 0), 0, 0), (((("a"), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0))), (("test/test.ml", 505, 19149, 19171), ("test/test.ml", 505, 19149, 19172), 0), 0, 0), 0, (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 505, 19149, 19172), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0))), (("test/test.ml", 506, 19176, 19186), ("test/test.ml", 506, 19176, 19189), 0), 0, 0), (Tag5 ((((("process_id1"), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0))), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19203), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0))), (("test/test.ml", 506, 19176, 19203), ("test/test.ml", 506, 19176, 19208), 0), [(("test/test.ml", 506, 19176, 19204), ("test/test.ml", 506, 19176, 19207), 0)], 0))]), (("test/test.ml", 506, 19176, 19192), ("test/test.ml", 506, 19176, 19208), 0), 0, 0), 0, (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 506, 19176, 19208), 0))], (Tag2 (0, [(((("newlist", (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0))), (("test/test.ml", 509, 19320, 19330), ("test/test.ml", 509, 19320, 19337), 0), 0, 0), (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0))), (("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19366), 0), 0, 0), [(0, (Tag8 ([(((("b"), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0))), (("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19369), 0), 0, 0); (((("s"), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0))), (("test/test.ml", 509, 19320, 19371), ("test/test.ml", 509, 19320, 19372), 0), 0, 0)]), (("test/test.ml", 509, 19320, 19367), ("test/test.ml", 509, 19320, 19373), 0), [(("test/test.ml", 509, 19320, 19368), ("test/test.ml", 509, 19320, 19372), 0)], 0))]), (("test/test.ml", 509, 19320, 19340), ("test/test.ml", 509, 19320, 19374), 0), [(("test/test.ml", 509, 19320, 19341), ("test/test.ml", 509, 19320, 19373), 0)], 0), 0, (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 509, 19320, 19374), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0))), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19397), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_constr1 '%s' %s", (("test/test.ml", 510, 19378, 19399), ("test/test.ml", 510, 19378, 19425), 0), 0)), (("test/test.ml", 510, 19378, 19398), ("test/test.ml", 510, 19378, 19426), 0), 0, 0)); (0, (((("id1"), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0))), (("test/test.ml", 510, 19378, 19427), ("test/test.ml", 510, 19378, 19430), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0))), (("test/test.ml", 510, 19378, 19431), ("test/test.ml", 510, 19378, 19438), 0), 0, 0))]), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 510, 19378, 19438), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0))), (("test/test.ml", 513, 19480, 19487), ("test/test.ml", 513, 19480, 19500), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0))), (("test/test.ml", 513, 19480, 19502), ("test/test.ml", 513, 19480, 19516), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_constr:", (("test/test.ml", 514, 19519, 19529), ("test/test.ml", 514, 19519, 19547), 0), 0)), (("test/test.ml", 514, 19519, 19528), ("test/test.ml", 514, 19519, 19548), 0), 0, 0); (Tag1 (Tag2 ("id", (("test/test.ml", 515, 19550, 19560), ("test/test.ml", 515, 19550, 19562), 0), 0)), (("test/test.ml", 515, 19550, 19559), ("test/test.ml", 515, 19550, 19563), 0), 0, 0); (((("a"), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0))), (("test/test.ml", 515, 19550, 19564), ("test/test.ml", 515, 19550, 19565), 0), 0, 0); (Tag1 (Tag2 ("types", (("test/test.ml", 516, 19567, 19577), ("test/test.ml", 516, 19567, 19582), 0), 0)), (("test/test.ml", 516, 19567, 19576), ("test/test.ml", 516, 19567, 19583), 0), 0, 0); (((("b"), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0))), (("test/test.ml", 516, 19567, 19584), ("test/test.ml", 516, 19567, 19585), 0), 0, 0); (Tag1 (Tag2 ("context", (("test/test.ml", 517, 19587, 19597), ("test/test.ml", 517, 19587, 19604), 0), 0)), (("test/test.ml", 517, 19587, 19596), ("test/test.ml", 517, 19587, 19605), 0), 0, 0); (((("s"), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0))), (("test/test.ml", 517, 19587, 19606), ("test/test.ml", 517, 19587, 19607), 0), 0, 0); (Tag1 (Tag2 ("id1", (("test/test.ml", 518, 19609, 19619), ("test/test.ml", 518, 19609, 19622), 0), 0)), (("test/test.ml", 518, 19609, 19618), ("test/test.ml", 518, 19609, 19623), 0), 0, 0); (((("id1"), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0))), (("test/test.ml", 518, 19609, 19625), ("test/test.ml", 518, 19609, 19628), 0), 0, 0)]), (("test/test.ml", 513, 19480, 19517), ("test/test.ml", 519, 19629, 19637), 0), [(("test/test.ml", 514, 19519, 19528), ("test/test.ml", 518, 19609, 19628), 0)], 0))]), (("test/test.ml", 513, 19480, 19501), ("test/test.ml", 519, 19629, 19638), 0), [(("test/test.ml", 513, 19480, 19502), ("test/test.ml", 519, 19629, 19637), 0)], 0))]), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 519, 19629, 19639), 0), [(("test/test.ml", 513, 19480, 19487), ("test/test.ml", 519, 19629, 19638), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0))), (("test/test.ml", 520, 19646, 19669), ("test/test.ml", 520, 19646, 19670), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_constr:\"", (("test/test.ml", 520, 19646, 19653), ("test/test.ml", 520, 19646, 19667), 0), 0)), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19668), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0))), (("test/test.ml", 520, 19646, 19675), ("test/test.ml", 520, 19646, 19676), 0), 0, 0), [(0, (((("id1"), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0))), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19674), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0))), (("test/test.ml", 520, 19646, 19684), ("test/test.ml", 520, 19646, 19685), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"->", (("test/test.ml", 520, 19646, 19678), ("test/test.ml", 520, 19646, 19682), 0), 0)), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19683), 0), 0, 0)); (0, (((("newlist"), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0))), (("test/test.ml", 520, 19646, 19686), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19677), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19671), ("test/test.ml", 520, 19646, 19693), 0), 0, 0))]), (("test/test.ml", 520, 19646, 19652), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 513, 19480, 19486), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 510, 19378, 19384), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 509, 19320, 19326), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 506, 19176, 19182), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)), (("test/test.ml", 505, 19149, 19155), ("test/test.ml", 520, 19646, 19693), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19710), 0)), ((0, ((("a", (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0))), (("test/test.ml", 521, 19694, 19711), ("test/test.ml", 521, 19694, 19712), 0), 0, 0)))), (("test/test.ml", 521, 19694, 19700), ("test/test.ml", 521, 19694, 19712), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0))), (("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19766), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0))), (("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19782), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_tuple:", (("test/test.ml", 523, 19746, 19785), ("test/test.ml", 523, 19746, 19802), 0), 0)), (("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19803), 0), 0, 0); (((("a"), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0))), (("test/test.ml", 523, 19746, 19805), ("test/test.ml", 523, 19746, 19806), 0), 0, 0)]), (("test/test.ml", 523, 19746, 19783), ("test/test.ml", 523, 19746, 19808), 0), [(("test/test.ml", 523, 19746, 19784), ("test/test.ml", 523, 19746, 19806), 0)], 0))]), (("test/test.ml", 523, 19746, 19767), ("test/test.ml", 523, 19746, 19809), 0), [(("test/test.ml", 523, 19746, 19768), ("test/test.ml", 523, 19746, 19808), 0)], 0))]), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 523, 19746, 19810), 0), [(("test/test.ml", 523, 19746, 19753), ("test/test.ml", 523, 19746, 19809), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0))), (("test/test.ml", 524, 19812, 19831), ("test/test.ml", 524, 19812, 19832), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 524, 19812, 19819), ("test/test.ml", 524, 19812, 19829), 0), 0)), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19830), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0))), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19858), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0))), (("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19860), 0), 0, 0); (((("s"), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0))), (("test/test.ml", 524, 19812, 19863), ("test/test.ml", 524, 19812, 19864), 0), 0, 0)]), (("test/test.ml", 524, 19812, 19858), ("test/test.ml", 524, 19812, 19866), 0), [(("test/test.ml", 524, 19812, 19859), ("test/test.ml", 524, 19812, 19864), 0)], 0))]), (("test/test.ml", 524, 19812, 19833), ("test/test.ml", 524, 19812, 19866), 0), 0, 0))]), (("test/test.ml", 524, 19812, 19818), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)), (("test/test.ml", 523, 19746, 19752), ("test/test.ml", 524, 19812, 19866), 0), 0, 0)); ((Tag5 ((("Ptyp_any"), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0)), 0), (("test/test.ml", 528, 19889, 19895), ("test/test.ml", 528, 19889, 19903), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0))), (("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19922), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0))), (("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19938), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_any:", (("test/test.ml", 528, 19889, 19941), ("test/test.ml", 528, 19889, 19956), 0), 0)), (("test/test.ml", 528, 19889, 19939), ("test/test.ml", 528, 19889, 19958), 0), [(("test/test.ml", 528, 19889, 19940), ("test/test.ml", 528, 19889, 19957), 0)], 0))]), (("test/test.ml", 528, 19889, 19923), ("test/test.ml", 528, 19889, 19959), 0), [(("test/test.ml", 528, 19889, 19924), ("test/test.ml", 528, 19889, 19958), 0)], 0))]), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19960), 0), [(("test/test.ml", 528, 19889, 19909), ("test/test.ml", 528, 19889, 19959), 0)], 0), (Tag1 (Tag2 ("any", (("test/test.ml", 528, 19889, 19963), ("test/test.ml", 528, 19889, 19966), 0), 0)), (("test/test.ml", 528, 19889, 19962), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)), (("test/test.ml", 528, 19889, 19908), ("test/test.ml", 528, 19889, 19967), 0), 0, 0)); ((Tag5 ((("Ptyp_var"), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19982), 0)), ((0, ((("name", (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0))), (("test/test.ml", 529, 19968, 19983), ("test/test.ml", 529, 19968, 19987), 0), 0, 0)))), (("test/test.ml", 529, 19968, 19974), ("test/test.ml", 529, 19968, 19987), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0))), (("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20004), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0))), (("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20020), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_var:", (("test/test.ml", 529, 19968, 20023), ("test/test.ml", 529, 19968, 20038), 0), 0)), (("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20039), 0), 0, 0); (((("name"), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0))), (("test/test.ml", 529, 19968, 20043), ("test/test.ml", 529, 19968, 20047), 0), 0, 0)]), (("test/test.ml", 529, 19968, 20021), ("test/test.ml", 529, 19968, 20048), 0), [(("test/test.ml", 529, 19968, 20022), ("test/test.ml", 529, 19968, 20047), 0)], 0))]), (("test/test.ml", 529, 19968, 20005), ("test/test.ml", 529, 19968, 20049), 0), [(("test/test.ml", 529, 19968, 20006), ("test/test.ml", 529, 19968, 20048), 0)], 0))]), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20050), 0), [(("test/test.ml", 529, 19968, 19991), ("test/test.ml", 529, 19968, 20049), 0)], 0), (Tag1 (Tag2 ("var-name", (("test/test.ml", 529, 19968, 20053), ("test/test.ml", 529, 19968, 20061), 0), 0)), (("test/test.ml", 529, 19968, 20052), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)), (("test/test.ml", 529, 19968, 19990), ("test/test.ml", 529, 19968, 20062), 0), 0, 0)); ((Tag5 ((("Ptyp_arrow"), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20077), 0)), ((0, (Tag4 ([((("arg_label", (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0))), (("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20088), 0), 0, 0); ((("core_type", (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0))), (("test/test.ml", 530, 20063, 20091), ("test/test.ml", 530, 20063, 20100), 0), 0, 0); ((("core_type2", (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0))), (("test/test.ml", 530, 20063, 20103), ("test/test.ml", 530, 20063, 20113), 0), 0, 0)]), (("test/test.ml", 530, 20063, 20078), ("test/test.ml", 530, 20063, 20114), 0), [(("test/test.ml", 530, 20063, 20079), ("test/test.ml", 530, 20063, 20113), 0)], 0)))), (("test/test.ml", 530, 20063, 20067), ("test/test.ml", 530, 20063, 20114), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0))), (("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20251), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0))), (("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20267), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow10:", (("test/test.ml", 533, 20233, 20270), ("test/test.ml", 533, 20233, 20289), 0), 0)), (("test/test.ml", 533, 20233, 20268), ("test/test.ml", 533, 20233, 20292), 0), [(("test/test.ml", 533, 20233, 20269), ("test/test.ml", 533, 20233, 20290), 0)], 0))]), (("test/test.ml", 533, 20233, 20252), ("test/test.ml", 533, 20233, 20293), 0), [(("test/test.ml", 533, 20233, 20253), ("test/test.ml", 533, 20233, 20292), 0)], 0))]), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20294), 0), [(("test/test.ml", 533, 20233, 20238), ("test/test.ml", 533, 20233, 20293), 0)], 0), (Tag1 (Tag2 ("arrow", (("test/test.ml", 533, 20233, 20297), ("test/test.ml", 533, 20233, 20302), 0), 0)), (("test/test.ml", 533, 20233, 20296), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)), (("test/test.ml", 533, 20233, 20237), ("test/test.ml", 533, 20233, 20303), 0), 0, 0)); ((Tag5 ((("Ptyp_object"), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20320), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0))), (("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20323), 0), 0, 0); ((("b", (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0))), (("test/test.ml", 535, 20305, 20324), ("test/test.ml", 535, 20305, 20325), 0), 0, 0)]), (("test/test.ml", 535, 20305, 20321), ("test/test.ml", 535, 20305, 20326), 0), [(("test/test.ml", 535, 20305, 20322), ("test/test.ml", 535, 20305, 20325), 0)], 0)))), (("test/test.ml", 535, 20305, 20309), ("test/test.ml", 535, 20305, 20326), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0))), (("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20392), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0))), (("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20408), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow8:", (("test/test.ml", 537, 20374, 20411), ("test/test.ml", 537, 20374, 20429), 0), 0)), (("test/test.ml", 537, 20374, 20409), ("test/test.ml", 537, 20374, 20432), 0), [(("test/test.ml", 537, 20374, 20410), ("test/test.ml", 537, 20374, 20430), 0)], 0))]), (("test/test.ml", 537, 20374, 20393), ("test/test.ml", 537, 20374, 20433), 0), [(("test/test.ml", 537, 20374, 20394), ("test/test.ml", 537, 20374, 20432), 0)], 0))]), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20434), 0), [(("test/test.ml", 537, 20374, 20379), ("test/test.ml", 537, 20374, 20433), 0)], 0), (Tag1 (Tag2 ("obj", (("test/test.ml", 537, 20374, 20437), ("test/test.ml", 537, 20374, 20440), 0), 0)), (("test/test.ml", 537, 20374, 20436), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)), (("test/test.ml", 537, 20374, 20378), ("test/test.ml", 537, 20374, 20441), 0), 0, 0)); ((Tag5 ((("Ptyp_class"), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20456), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0))), (("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20459), 0), 0, 0); ((("b", (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0))), (("test/test.ml", 538, 20442, 20460), ("test/test.ml", 538, 20442, 20461), 0), 0, 0)]), (("test/test.ml", 538, 20442, 20457), ("test/test.ml", 538, 20442, 20462), 0), [(("test/test.ml", 538, 20442, 20458), ("test/test.ml", 538, 20442, 20461), 0)], 0)))), (("test/test.ml", 538, 20442, 20446), ("test/test.ml", 538, 20442, 20462), 0), 0, 0), 0, (Tag2 (0, [(((("myid", (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0))), (("test/test.ml", 540, 20512, 20520), ("test/test.ml", 540, 20512, 20524), 0), 0, 0), (Tag5 ((((("process_id"), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0))), (("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20538), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0))), (("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20541), 0), 0, 0); (((("s"), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0))), (("test/test.ml", 540, 20512, 20542), ("test/test.ml", 540, 20512, 20543), 0), 0, 0)]), (("test/test.ml", 540, 20512, 20539), ("test/test.ml", 540, 20512, 20544), 0), [(("test/test.ml", 540, 20512, 20540), ("test/test.ml", 540, 20512, 20543), 0)], 0))]), (("test/test.ml", 540, 20512, 20527), ("test/test.ml", 540, 20512, 20545), 0), [(("test/test.ml", 540, 20512, 20528), ("test/test.ml", 540, 20512, 20544), 0)], 0), 0, (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 540, 20512, 20545), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0))), (("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20618), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0))), (("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20634), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow7:", (("test/test.ml", 542, 20600, 20637), ("test/test.ml", 542, 20600, 20655), 0), 0)), (("test/test.ml", 542, 20600, 20635), ("test/test.ml", 542, 20600, 20658), 0), [(("test/test.ml", 542, 20600, 20636), ("test/test.ml", 542, 20600, 20656), 0)], 0))]), (("test/test.ml", 542, 20600, 20619), ("test/test.ml", 542, 20600, 20659), 0), [(("test/test.ml", 542, 20600, 20620), ("test/test.ml", 542, 20600, 20658), 0)], 0))]), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20660), 0), [(("test/test.ml", 542, 20600, 20605), ("test/test.ml", 542, 20600, 20659), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 542, 20600, 20663), ("test/test.ml", 542, 20600, 20668), 0), 0)), (("test/test.ml", 542, 20600, 20662), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 542, 20600, 20604), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)), (("test/test.ml", 540, 20512, 20516), ("test/test.ml", 542, 20600, 20669), 0), 0, 0)); ((Tag5 ((("Ptyp_alias"), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20684), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0))), (("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20687), 0), 0, 0); ((("b", (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0))), (("test/test.ml", 543, 20670, 20688), ("test/test.ml", 543, 20670, 20689), 0), 0, 0)]), (("test/test.ml", 543, 20670, 20685), ("test/test.ml", 543, 20670, 20690), 0), [(("test/test.ml", 543, 20670, 20686), ("test/test.ml", 543, 20670, 20689), 0)], 0)))), (("test/test.ml", 543, 20670, 20674), ("test/test.ml", 543, 20670, 20690), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0))), (("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20787), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0))), (("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20803), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow6:", (("test/test.ml", 546, 20769, 20806), ("test/test.ml", 546, 20769, 20824), 0), 0)), (("test/test.ml", 546, 20769, 20804), ("test/test.ml", 546, 20769, 20827), 0), [(("test/test.ml", 546, 20769, 20805), ("test/test.ml", 546, 20769, 20825), 0)], 0))]), (("test/test.ml", 546, 20769, 20788), ("test/test.ml", 546, 20769, 20828), 0), [(("test/test.ml", 546, 20769, 20789), ("test/test.ml", 546, 20769, 20827), 0)], 0))]), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20829), 0), [(("test/test.ml", 546, 20769, 20774), ("test/test.ml", 546, 20769, 20828), 0)], 0), (Tag1 (Tag2 ("alias", (("test/test.ml", 546, 20769, 20832), ("test/test.ml", 546, 20769, 20837), 0), 0)), (("test/test.ml", 546, 20769, 20831), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)), (("test/test.ml", 546, 20769, 20773), ("test/test.ml", 546, 20769, 20838), 0), 0, 0)); ((Tag5 ((("Ptyp_variant"), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20855), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0))), (("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20858), 0), 0, 0); ((("b", (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0))), (("test/test.ml", 547, 20839, 20859), ("test/test.ml", 547, 20839, 20860), 0), 0, 0); ((("c", (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0))), (("test/test.ml", 547, 20839, 20861), ("test/test.ml", 547, 20839, 20862), 0), 0, 0)]), (("test/test.ml", 547, 20839, 20856), ("test/test.ml", 547, 20839, 20863), 0), [(("test/test.ml", 547, 20839, 20857), ("test/test.ml", 547, 20839, 20862), 0)], 0)))), (("test/test.ml", 547, 20839, 20843), ("test/test.ml", 547, 20839, 20863), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0))), (("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20947), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0))), (("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20963), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow5:", (("test/test.ml", 549, 20929, 20966), ("test/test.ml", 549, 20929, 20984), 0), 0)), (("test/test.ml", 549, 20929, 20964), ("test/test.ml", 549, 20929, 20987), 0), [(("test/test.ml", 549, 20929, 20965), ("test/test.ml", 549, 20929, 20985), 0)], 0))]), (("test/test.ml", 549, 20929, 20948), ("test/test.ml", 549, 20929, 20988), 0), [(("test/test.ml", 549, 20929, 20949), ("test/test.ml", 549, 20929, 20987), 0)], 0))]), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20989), 0), [(("test/test.ml", 549, 20929, 20934), ("test/test.ml", 549, 20929, 20988), 0)], 0), (Tag1 (Tag2 ("variant", (("test/test.ml", 549, 20929, 20991), ("test/test.ml", 549, 20929, 20998), 0), 0)), (("test/test.ml", 549, 20929, 20990), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)), (("test/test.ml", 549, 20929, 20933), ("test/test.ml", 549, 20929, 20999), 0), 0, 0)); ((Tag5 ((("Ptyp_poly"), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21013), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0))), (("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21016), 0), 0, 0); ((("b", (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0))), (("test/test.ml", 550, 21000, 21017), ("test/test.ml", 550, 21000, 21018), 0), 0, 0)]), (("test/test.ml", 550, 21000, 21014), ("test/test.ml", 550, 21000, 21019), 0), [(("test/test.ml", 550, 21000, 21015), ("test/test.ml", 550, 21000, 21018), 0)], 0)))), (("test/test.ml", 550, 21000, 21004), ("test/test.ml", 550, 21000, 21019), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0))), (("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21120), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0))), (("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21136), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptyp_arrow4:", (("test/test.ml", 553, 21102, 21139), ("test/test.ml", 553, 21102, 21157), 0), 0)), (("test/test.ml", 553, 21102, 21137), ("test/test.ml", 553, 21102, 21160), 0), [(("test/test.ml", 553, 21102, 21138), ("test/test.ml", 553, 21102, 21158), 0)], 0))]), (("test/test.ml", 553, 21102, 21121), ("test/test.ml", 553, 21102, 21161), 0), [(("test/test.ml", 553, 21102, 21122), ("test/test.ml", 553, 21102, 21160), 0)], 0))]), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21162), 0), [(("test/test.ml", 553, 21102, 21107), ("test/test.ml", 553, 21102, 21161), 0)], 0), (Tag1 (Tag2 ("poly", (("test/test.ml", 553, 21102, 21165), ("test/test.ml", 553, 21102, 21169), 0), 0)), (("test/test.ml", 553, 21102, 21164), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)), (("test/test.ml", 553, 21102, 21106), ("test/test.ml", 553, 21102, 21170), 0), 0, 0)); ((Tag5 ((("Ptyp_package"), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21187), 0)), ((0, ((("a", (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0))), (("test/test.ml", 554, 21171, 21188), ("test/test.ml", 554, 21171, 21189), 0), 0, 0)))), (("test/test.ml", 554, 21171, 21175), ("test/test.ml", 554, 21171, 21189), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0))), (("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21237), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0))), (("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21253), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_arrow3:", (("test/test.ml", 556, 21219, 21256), ("test/test.ml", 556, 21219, 21274), 0), 0)), (("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21275), 0), 0, 0); (((("a"), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0))), (("test/test.ml", 556, 21219, 21276), ("test/test.ml", 556, 21219, 21277), 0), 0, 0)]), (("test/test.ml", 556, 21219, 21254), ("test/test.ml", 556, 21219, 21279), 0), [(("test/test.ml", 556, 21219, 21255), ("test/test.ml", 556, 21219, 21277), 0)], 0))]), (("test/test.ml", 556, 21219, 21238), ("test/test.ml", 556, 21219, 21280), 0), [(("test/test.ml", 556, 21219, 21239), ("test/test.ml", 556, 21219, 21279), 0)], 0))]), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21281), 0), [(("test/test.ml", 556, 21219, 21224), ("test/test.ml", 556, 21219, 21280), 0)], 0), (Tag1 (Tag2 ("typ_package", (("test/test.ml", 556, 21219, 21285), ("test/test.ml", 556, 21219, 21296), 0), 0)), (("test/test.ml", 556, 21219, 21284), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)), (("test/test.ml", 556, 21219, 21223), ("test/test.ml", 556, 21219, 21297), 0), 0, 0)); ((Tag5 ((("Ptyp_extension"), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21457), 0)), ((0, ((("a", (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0))), (("test/test.ml", 559, 21439, 21458), ("test/test.ml", 559, 21439, 21459), 0), 0, 0)))), (("test/test.ml", 559, 21439, 21443), ("test/test.ml", 559, 21439, 21459), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0))), (("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21505), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0))), (("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21521), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptyp_extension:", (("test/test.ml", 560, 21487, 21524), ("test/test.ml", 560, 21487, 21545), 0), 0)), (("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21546), 0), 0, 0); (((("a"), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0))), (("test/test.ml", 560, 21487, 21547), ("test/test.ml", 560, 21487, 21548), 0), 0, 0)]), (("test/test.ml", 560, 21487, 21522), ("test/test.ml", 560, 21487, 21550), 0), [(("test/test.ml", 560, 21487, 21523), ("test/test.ml", 560, 21487, 21548), 0)], 0))]), (("test/test.ml", 560, 21487, 21506), ("test/test.ml", 560, 21487, 21551), 0), [(("test/test.ml", 560, 21487, 21507), ("test/test.ml", 560, 21487, 21550), 0)], 0))]), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21552), 0), [(("test/test.ml", 560, 21487, 21492), ("test/test.ml", 560, 21487, 21551), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 560, 21487, 21555), ("test/test.ml", 560, 21487, 21564), 0), 0)), (("test/test.ml", 560, 21487, 21554), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 560, 21487, 21491), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 502, 19055, 19059), ("test/test.ml", 560, 21487, 21565), 0), 0, 0))]), (("test/test.ml", 500, 19025, 19027), ("test/test.ml", 560, 21487, 21565), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0)), 0), (("test/test.ml", 499, 18953, 19016), ("test/test.ml", 499, 18953, 19022), 0), 0, 0)), (("test/test.ml", 499, 18953, 19015), ("test/test.ml", 560, 21487, 21565), 0), 0, 0)), (("test/test.ml", 499, 18953, 18981), ("test/test.ml", 560, 21487, 21565), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 498, 18949, 18949), ("test/test.ml", 560, 21487, 21565), 0))
("DEBUG:value_binding.pat:", ((("process_record_kind", (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0))), (("test/test.ml", 481, 18267, 18269), ("test/test.ml", 481, 18267, 18288), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 ((Tag4 ([((("x", (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0))), (("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18291), 0), 0, 0); ((("s", (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0))), (("test/test.ml", 481, 18267, 18292), ("test/test.ml", 481, 18267, 18293), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18289), ("test/test.ml", 481, 18267, 18294), 0), [(("test/test.ml", 481, 18267, 18290), ("test/test.ml", 481, 18267, 18293), 0)], 0), (Tag2 ([(Tag3 ((("label_declaration"), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0)), 0), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18312), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0)), 0), (("test/test.ml", 481, 18267, 18314), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)]), (("test/test.ml", 481, 18267, 18295), ("test/test.ml", 481, 18267, 18325), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 481, 18267, 18326), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0))), (("test/test.ml", 482, 18336, 18344), ("test/test.ml", 482, 18336, 18345), 0), 0, 0), [((Tag7 ([((("pld_name"), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 1)), ((("pld_name", (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0))), (("test/test.ml", 484, 18357, 18362), ("test/test.ml", 484, 18357, 18370), 0), 0, 0)); ((("pld_mutable"), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 1)), ((("pld_mutable", (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0))), (("test/test.ml", 485, 18390, 18395), ("test/test.ml", 485, 18390, 18406), 0), 0, 0)); ((("pld_type"), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 1)), ((("pld_type", (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0))), (("test/test.ml", 486, 18428, 18433), ("test/test.ml", 486, 18428, 18441), 0), 0, 0)); ((("pld_loc"), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 1)), ((("pld_loc", (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0))), (("test/test.ml", 487, 18460, 18465), ("test/test.ml", 487, 18460, 18472), 0), 0, 0)); ((("pld_attributes"), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 1)), ((("pld_attributes", (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0))), (("test/test.ml", 488, 18492, 18497), ("test/test.ml", 488, 18492, 18511), 0), 0, 0))], 0), (("test/test.ml", 483, 18351, 18355), ("test/test.ml", 489, 18532, 18536), 0), 0, 0), 0, (Tag2 (0, [(((("foo", (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0))), (("test/test.ml", 490, 18540, 18548), ("test/test.ml", 490, 18540, 18551), 0), 0, 0), (Tag5 ((((("my_process_core_type"), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0))), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18573), 0), 0, 0), [(0, (Tag8 ([(((("pld_type"), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0))), (("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18582), 0), 0, 0); (((("s"), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0))), (("test/test.ml", 490, 18540, 18584), ("test/test.ml", 490, 18540, 18585), 0), 0, 0)]), (("test/test.ml", 490, 18540, 18573), ("test/test.ml", 490, 18540, 18586), 0), [(("test/test.ml", 490, 18540, 18574), ("test/test.ml", 490, 18540, 18585), 0)], 0))]), (("test/test.ml", 490, 18540, 18553), ("test/test.ml", 490, 18540, 18586), 0), 0, 0), 0, (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 490, 18540, 18586), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0))), (("test/test.ml", 491, 18590, 18595), ("test/test.ml", 491, 18590, 18608), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0))), (("test/test.ml", 491, 18590, 18610), ("test/test.ml", 491, 18590, 18624), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:precord_kind:", (("test/test.ml", 491, 18590, 18627), ("test/test.ml", 491, 18590, 18646), 0), 0)), (("test/test.ml", 491, 18590, 18626), ("test/test.ml", 491, 18590, 18647), 0), 0, 0); (((("pld_name"), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0))), (("test/test.ml", 492, 18651, 18687), ("test/test.ml", 492, 18651, 18695), 0), 0, 0); (Tag1 (Tag2 ("mutable", (("test/test.ml", 493, 18697, 18734), ("test/test.ml", 493, 18697, 18741), 0), 0)), (("test/test.ml", 493, 18697, 18733), ("test/test.ml", 493, 18697, 18742), 0), 0, 0); (((("pld_mutable"), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0))), (("test/test.ml", 494, 18744, 18780), ("test/test.ml", 494, 18744, 18791), 0), 0, 0); (Tag1 (Tag2 ("type", (("test/test.ml", 495, 18793, 18830), ("test/test.ml", 495, 18793, 18834), 0), 0)), (("test/test.ml", 495, 18793, 18829), ("test/test.ml", 495, 18793, 18835), 0), 0, 0); (((("pld_type"), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0))), (("test/test.ml", 496, 18837, 18873), ("test/test.ml", 496, 18837, 18881), 0), 0, 0)]), (("test/test.ml", 491, 18590, 18625), ("test/test.ml", 496, 18837, 18882), 0), [(("test/test.ml", 491, 18590, 18626), ("test/test.ml", 496, 18837, 18881), 0)], 0))]), (("test/test.ml", 491, 18590, 18609), ("test/test.ml", 496, 18837, 18883), 0), [(("test/test.ml", 491, 18590, 18610), ("test/test.ml", 496, 18837, 18882), 0)], 0))]), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 496, 18837, 18884), 0), [(("test/test.ml", 491, 18590, 18595), ("test/test.ml", 496, 18837, 18883), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0))), (("test/test.ml", 497, 18886, 18915), ("test/test.ml", 497, 18886, 18916), 0), 0, 0), [(0, (Tag1 (Tag2 ("process_record_kind:\"", (("test/test.ml", 497, 18886, 18891), ("test/test.ml", 497, 18886, 18913), 0), 0)), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18914), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0))), (("test/test.ml", 497, 18886, 18930), ("test/test.ml", 497, 18886, 18931), 0), 0, 0), [(0, (Tag12 ((((("pld_name"), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18925), 0), 0, 0), (("txt"), (("test/test.ml", 497, 18886, 18926), ("test/test.ml", 497, 18886, 18929), 0))), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18929), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0))), (("test/test.ml", 497, 18886, 18943), ("test/test.ml", 497, 18886, 18944), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" body:", (("test/test.ml", 497, 18886, 18933), ("test/test.ml", 497, 18886, 18941), 0), 0)), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18942), 0), 0, 0)); (0, (((("foo"), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0))), (("test/test.ml", 497, 18886, 18945), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18932), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18917), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 497, 18886, 18890), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 491, 18590, 18594), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 490, 18540, 18544), ("test/test.ml", 497, 18886, 18948), 0), 0, 0))]), (("test/test.ml", 482, 18336, 18338), ("test/test.ml", 497, 18886, 18948), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0)), 0), (("test/test.ml", 481, 18267, 18327), ("test/test.ml", 481, 18267, 18333), 0), 0, 0)), (("test/test.ml", 481, 18267, 18326), ("test/test.ml", 497, 18886, 18948), 0), 0, 0)), (("test/test.ml", 481, 18267, 18288), ("test/test.ml", 497, 18886, 18948), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 480, 18261, 18263), ("test/test.ml", 497, 18886, 18948), 0))
("DEBUG:value_binding.pat:", ((("process_record_kind3", (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0))), (("test/test.ml", 479, 18229, 18231), ("test/test.ml", 479, 18229, 18251), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0))), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18253), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0))), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18255), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 479, 18229, 18259), ("test/test.ml", 479, 18229, 18259), 0), 0)), (("test/test.ml", 479, 18229, 18258), ("test/test.ml", 479, 18229, 18260), 0), 0, 0)), (("test/test.ml", 479, 18229, 18254), ("test/test.ml", 479, 18229, 18260), 1), 0, 0)), (("test/test.ml", 479, 18229, 18252), ("test/test.ml", 479, 18229, 18260), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 478, 18223, 18225), ("test/test.ml", 479, 18229, 18260), 0))
("DEBUG:value_binding.pat:", ((("process_record_kind2", (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0))), (("test/test.ml", 477, 18158, 18160), ("test/test.ml", 477, 18158, 18180), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0))), (("test/test.ml", 477, 18158, 18181), ("test/test.ml", 477, 18158, 18182), 0), 0, 0), (Tag3 ((("label_declaration"), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0)), 0), (("test/test.ml", 477, 18158, 18184), ("test/test.ml", 477, 18158, 18201), 0), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18202), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("s", (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0))), (("test/test.ml", 477, 18158, 18203), ("test/test.ml", 477, 18158, 18204), 0), 0, 0), (Tag3 ((("string_list"), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0)), 0), (("test/test.ml", 477, 18158, 18205), ("test/test.ml", 477, 18158, 18216), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18217), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 477, 18158, 18221), ("test/test.ml", 477, 18158, 18221), 0), 0)), (("test/test.ml", 477, 18158, 18220), ("test/test.ml", 477, 18158, 18222), 0), 0, 0)), (("test/test.ml", 477, 18158, 18202), ("test/test.ml", 477, 18158, 18222), 1), 0, 0)), (("test/test.ml", 477, 18158, 18180), ("test/test.ml", 477, 18158, 18222), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 476, 18152, 18154), ("test/test.ml", 477, 18158, 18222), 0))
("DEBUG:value_binding.pat:", (Tag10 (((("process_record_kind4", (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0))), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18091), 0), 0, 0), (Tag8 (0, (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 1), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18135), 1), 0, 0))
("DEBUG:value_binding.expr:", (Tag19 ((Tag4 (0, 0, ((("x", (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0))), (("test/test.ml", 475, 18069, 18142), ("test/test.ml", 475, 18069, 18143), 0), 0, 0), (Tag4 (0, 0, ((("s", (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0))), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18145), 0), 0, 0), (Tag1 (Tag2 ("", (("test/test.ml", 475, 18069, 18150), ("test/test.ml", 475, 18069, 18150), 0), 0)), (("test/test.ml", 475, 18069, 18149), ("test/test.ml", 475, 18069, 18151), 0), 0, 0)), (("test/test.ml", 475, 18069, 18144), ("test/test.ml", 475, 18069, 18151), 1), 0, 0)), (("test/test.ml", 475, 18069, 18138), ("test/test.ml", 475, 18069, 18151), 0), 0, 0), (Tag1 (0, (Tag3 ((("label_declaration"), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0)), 0), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18110), 0), 0, 0), (Tag1 (0, (Tag3 ((("string_list"), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0)), 0), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18125), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0)), 0), (("test/test.ml", 475, 18069, 18129), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18114), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18093), ("test/test.ml", 475, 18069, 18135), 0), 0, 0)), (("test/test.ml", 475, 18069, 18071), ("test/test.ml", 475, 18069, 18151), 0), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 474, 18061, 18061), ("test/test.ml", 475, 18069, 18151), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;pattern: expr: ;;print_value_binding_list;;;;;;;;;;;;;;;;
("DEBUG:SECOND::", (Tag1 (1, [(((("emit_id1", (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0))), (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0))), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0))), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22574), 0)), ((0, ((("string", (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0))), (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0), 0, 0)))), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22581), 0), 0, 0), 0, (((("string"), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0))), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22601), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0))), (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0), 0, 0); ((("string", (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0))), (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0), 0, 0)]), (("test/test.ml", 614, 22593, 22602), ("test/test.ml", 614, 22593, 22621), 0), [(("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22620), 0)], 0)))), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22621), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0))), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0))), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0))), (("test/test.ml", 615, 22625, 22639), ("test/test.ml", 615, 22625, 22650), 0), [(("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0)], 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22651), 0), [(("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22650), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0))), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 615, 22625, 22655), ("test/test.ml", 615, 22625, 22656), 0), 0)), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22657), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0))), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22666), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22678), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0))), (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0), 0, 0); ((("longident2", (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0))), (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0), 0, 0)]), (("test/test.ml", 616, 22668, 22679), ("test/test.ml", 616, 22668, 22701), 0), [(("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22700), 0)], 0)))), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22701), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0))), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0))), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0))), (("test/test.ml", 617, 22702, 22719), ("test/test.ml", 617, 22702, 22730), 0), [(("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0)], 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 617, 22702, 22731), 0), [(("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22730), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0))), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 617, 22702, 22736), ("test/test.ml", 617, 22702, 22737), 0), 0)), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 617, 22702, 22738), 0), 0, 0)); (0, (Tag5 ((((("emit_id1"), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0))), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0))), (("test/test.ml", 618, 22739, 22758), ("test/test.ml", 618, 22739, 22770), 0), [(("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0)], 0))]), (("test/test.ml", 618, 22739, 22748), ("test/test.ml", 618, 22739, 22772), 0), [(("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22770), 0)], 0))]), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 612, 22549, 22551), ("test/test.ml", 618, 22739, 22772), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0)), 0), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0), 0, 0)), (("test/test.ml", 611, 22518, 22537), ("test/test.ml", 618, 22739, 22772), 0), 0, 0)), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 618, 22739, 22772), 1), 0, 0), 0, (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0))]), (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("emit_id1", (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0))), (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0))), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0))), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22574), 0)), ((0, ((("string", (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0))), (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0), 0, 0)))), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22581), 0), 0, 0), 0, (((("string"), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0))), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22601), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0))), (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0), 0, 0); ((("string", (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0))), (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0), 0, 0)]), (("test/test.ml", 614, 22593, 22602), ("test/test.ml", 614, 22593, 22621), 0), [(("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22620), 0)], 0)))), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22621), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0))), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0))), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0))), (("test/test.ml", 615, 22625, 22639), ("test/test.ml", 615, 22625, 22650), 0), [(("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0)], 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22651), 0), [(("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22650), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0))), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 615, 22625, 22655), ("test/test.ml", 615, 22625, 22656), 0), 0)), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22657), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0))), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22666), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22678), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0))), (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0), 0, 0); ((("longident2", (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0))), (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0), 0, 0)]), (("test/test.ml", 616, 22668, 22679), ("test/test.ml", 616, 22668, 22701), 0), [(("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22700), 0)], 0)))), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22701), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0))), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0))), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0))), (("test/test.ml", 617, 22702, 22719), ("test/test.ml", 617, 22702, 22730), 0), [(("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0)], 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 617, 22702, 22731), 0), [(("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22730), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0))), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 617, 22702, 22736), ("test/test.ml", 617, 22702, 22737), 0), 0)), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 617, 22702, 22738), 0), 0, 0)); (0, (Tag5 ((((("emit_id1"), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0))), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0))), (("test/test.ml", 618, 22739, 22758), ("test/test.ml", 618, 22739, 22770), 0), [(("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0)], 0))]), (("test/test.ml", 618, 22739, 22748), ("test/test.ml", 618, 22739, 22772), 0), [(("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22770), 0)], 0))]), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 612, 22549, 22551), ("test/test.ml", 618, 22739, 22772), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0)), 0), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0), 0, 0)), (("test/test.ml", 611, 22518, 22537), ("test/test.ml", 618, 22739, 22772), 0), 0, 0)), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 618, 22739, 22772), 1), 0, 0), 0, (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0))]))
("DEBUG:Pstr_value:", 1, [(((("emit_id1", (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0))), (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0))), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0))), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22574), 0)), ((0, ((("string", (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0))), (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0), 0, 0)))), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22581), 0), 0, 0), 0, (((("string"), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0))), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22601), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0))), (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0), 0, 0); ((("string", (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0))), (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0), 0, 0)]), (("test/test.ml", 614, 22593, 22602), ("test/test.ml", 614, 22593, 22621), 0), [(("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22620), 0)], 0)))), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22621), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0))), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0))), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0))), (("test/test.ml", 615, 22625, 22639), ("test/test.ml", 615, 22625, 22650), 0), [(("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0)], 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22651), 0), [(("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22650), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0))), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 615, 22625, 22655), ("test/test.ml", 615, 22625, 22656), 0), 0)), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22657), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0))), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22666), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22678), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0))), (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0), 0, 0); ((("longident2", (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0))), (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0), 0, 0)]), (("test/test.ml", 616, 22668, 22679), ("test/test.ml", 616, 22668, 22701), 0), [(("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22700), 0)], 0)))), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22701), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0))), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0))), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0))), (("test/test.ml", 617, 22702, 22719), ("test/test.ml", 617, 22702, 22730), 0), [(("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0)], 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 617, 22702, 22731), 0), [(("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22730), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0))), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 617, 22702, 22736), ("test/test.ml", 617, 22702, 22737), 0), 0)), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 617, 22702, 22738), 0), 0, 0)); (0, (Tag5 ((((("emit_id1"), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0))), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0))), (("test/test.ml", 618, 22739, 22758), ("test/test.ml", 618, 22739, 22770), 0), [(("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0)], 0))]), (("test/test.ml", 618, 22739, 22748), ("test/test.ml", 618, 22739, 22772), 0), [(("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22770), 0)], 0))]), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 612, 22549, 22551), ("test/test.ml", 618, 22739, 22772), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0)), 0), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0), 0, 0)), (("test/test.ml", 611, 22518, 22537), ("test/test.ml", 618, 22739, 22772), 0), 0, 0)), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 618, 22739, 22772), 1), 0, 0), 0, (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0))])
("DEBUG:value_binding.pat:", ((("emit_id1", (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0))), (("test/test.ml", 611, 22518, 22526), ("test/test.ml", 611, 22518, 22534), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0))), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 611, 22518, 22536), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0))), (("test/test.ml", 612, 22549, 22557), ("test/test.ml", 612, 22549, 22558), 0), 0, 0), [((Tag5 ((("Lident"), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22574), 0)), ((0, ((("string", (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0))), (("test/test.ml", 613, 22564, 22575), ("test/test.ml", 613, 22564, 22581), 0), 0, 0)))), (("test/test.ml", 613, 22564, 22568), ("test/test.ml", 613, 22564, 22581), 0), 0, 0), 0, (((("string"), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0))), (("test/test.ml", 613, 22564, 22585), ("test/test.ml", 613, 22564, 22591), 0), 0, 0)); ((Tag5 ((("Ldot"), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22601), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0))), (("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22612), 0), 0, 0); ((("string", (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0))), (("test/test.ml", 614, 22593, 22614), ("test/test.ml", 614, 22593, 22620), 0), 0, 0)]), (("test/test.ml", 614, 22593, 22602), ("test/test.ml", 614, 22593, 22621), 0), [(("test/test.ml", 614, 22593, 22603), ("test/test.ml", 614, 22593, 22620), 0)], 0)))), (("test/test.ml", 614, 22593, 22597), ("test/test.ml", 614, 22593, 22621), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0))), (("test/test.ml", 615, 22625, 22652), ("test/test.ml", 615, 22625, 22653), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0))), (("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22638), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0))), (("test/test.ml", 615, 22625, 22639), ("test/test.ml", 615, 22625, 22650), 0), [(("test/test.ml", 615, 22625, 22640), ("test/test.ml", 615, 22625, 22649), 0)], 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22651), 0), [(("test/test.ml", 615, 22625, 22630), ("test/test.ml", 615, 22625, 22650), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0))), (("test/test.ml", 615, 22625, 22658), ("test/test.ml", 615, 22625, 22659), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 615, 22625, 22655), ("test/test.ml", 615, 22625, 22656), 0), 0)), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22657), 0), 0, 0)); (0, (((("string"), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0))), (("test/test.ml", 615, 22625, 22660), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22654), ("test/test.ml", 615, 22625, 22666), 0), 0, 0))]), (("test/test.ml", 615, 22625, 22629), ("test/test.ml", 615, 22625, 22666), 0), 0, 0)); ((Tag5 ((("Lapply"), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22678), 0)), ((0, (Tag4 ([((("longident", (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0))), (("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22689), 0), 0, 0); ((("longident2", (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0))), (("test/test.ml", 616, 22668, 22690), ("test/test.ml", 616, 22668, 22700), 0), 0, 0)]), (("test/test.ml", 616, 22668, 22679), ("test/test.ml", 616, 22668, 22701), 0), [(("test/test.ml", 616, 22668, 22680), ("test/test.ml", 616, 22668, 22700), 0)], 0)))), (("test/test.ml", 616, 22668, 22672), ("test/test.ml", 616, 22668, 22701), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0))), (("test/test.ml", 617, 22702, 22733), ("test/test.ml", 617, 22702, 22734), 0), 0, 0), [(0, (Tag5 ((((("emit_id1"), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0))), (("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22718), 0), 0, 0), [(0, (((("longident"), (("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0))), (("test/test.ml", 617, 22702, 22719), ("test/test.ml", 617, 22702, 22730), 0), [(("test/test.ml", 617, 22702, 22720), ("test/test.ml", 617, 22702, 22729), 0)], 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 617, 22702, 22731), 0), [(("test/test.ml", 617, 22702, 22710), ("test/test.ml", 617, 22702, 22730), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0))), (("test/test.ml", 618, 22739, 22746), ("test/test.ml", 618, 22739, 22747), 0), 0, 0), [(0, (Tag1 (Tag2 (".", (("test/test.ml", 617, 22702, 22736), ("test/test.ml", 617, 22702, 22737), 0), 0)), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 617, 22702, 22738), 0), 0, 0)); (0, (Tag5 ((((("emit_id1"), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0))), (("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22757), 0), 0, 0), [(0, (((("longident2"), (("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0))), (("test/test.ml", 618, 22739, 22758), ("test/test.ml", 618, 22739, 22770), 0), [(("test/test.ml", 618, 22739, 22759), ("test/test.ml", 618, 22739, 22769), 0)], 0))]), (("test/test.ml", 618, 22739, 22748), ("test/test.ml", 618, 22739, 22772), 0), [(("test/test.ml", 618, 22739, 22749), ("test/test.ml", 618, 22739, 22770), 0)], 0))]), (("test/test.ml", 617, 22702, 22735), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 617, 22702, 22709), ("test/test.ml", 618, 22739, 22772), 0), 0, 0))]), (("test/test.ml", 612, 22549, 22551), ("test/test.ml", 618, 22739, 22772), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0)), 0), (("test/test.ml", 611, 22518, 22539), ("test/test.ml", 611, 22518, 22545), 0), 0, 0)), (("test/test.ml", 611, 22518, 22537), ("test/test.ml", 618, 22739, 22772), 0), 0, 0)), (("test/test.ml", 611, 22518, 22535), ("test/test.ml", 618, 22739, 22772), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 611, 22518, 22518), ("test/test.ml", 618, 22739, 22772), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("emit_core_type_desc", (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0))), (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0))), (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0)), 0), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0)), 0), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)]), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 620, 22775, 22833), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0))), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0))), (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0), 0, 0); ((("s", (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0))), (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0), 0, 0)]), (("test/test.ml", 622, 22858, 22862), ("test/test.ml", 622, 22858, 22870), 0), [(("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22869), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0))), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22909), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0))), (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0), 0, 0); ((("b", (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0))), (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0), 0, 0)]), (("test/test.ml", 624, 22892, 22910), ("test/test.ml", 624, 22892, 22915), 0), [(("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22914), 0)], 0)))), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22915), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 1)), ((("txt", (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0))), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0), 0, 0)); ((("loc"), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 1)), ((("loc", (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0))), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0), 0, 0))], 0), (("test/test.ml", 626, 22967, 22977), ("test/test.ml", 626, 22967, 22986), 0), 0, 0), (((("a"), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0))), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0), 0, 0), 0, (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 626, 22967, 22990), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0))), (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0), 0, 0), (Tag5 ((((("emit_id1"), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0))), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0))), (("test/test.ml", 627, 22994, 23018), ("test/test.ml", 627, 22994, 23023), 0), [(("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0)], 0))]), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23023), 0), 0, 0), 0, (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 627, 22994, 23023), 0))], (((("id1"), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0))), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23250), 0)), ((0, ((("a", (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0))), (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0), 0, 0)))), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23252), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0))), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 634, 23286, 23293), ("test/test.ml", 634, 23286, 23303), 0), 0)), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23304), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0))), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0))), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0), 0, 0); (((("s"), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0))), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0), 0, 0)]), (("test/test.ml", 634, 23286, 23332), ("test/test.ml", 634, 23286, 23340), 0), [(("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23338), 0)], 0))]), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 623, 22873, 22877), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 621, 22843, 22845), ("test/test.ml", 634, 23286, 23340), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0)), 0), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0), 0, 0)), (("test/test.ml", 620, 22775, 22833), ("test/test.ml", 634, 23286, 23340), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 634, 23286, 23340), 1), 0, 0), 0, (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0))]), (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("emit_core_type_desc", (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0))), (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0))), (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0)), 0), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0)), 0), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)]), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 620, 22775, 22833), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0))), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0))), (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0), 0, 0); ((("s", (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0))), (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0), 0, 0)]), (("test/test.ml", 622, 22858, 22862), ("test/test.ml", 622, 22858, 22870), 0), [(("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22869), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0))), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22909), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0))), (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0), 0, 0); ((("b", (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0))), (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0), 0, 0)]), (("test/test.ml", 624, 22892, 22910), ("test/test.ml", 624, 22892, 22915), 0), [(("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22914), 0)], 0)))), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22915), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 1)), ((("txt", (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0))), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0), 0, 0)); ((("loc"), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 1)), ((("loc", (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0))), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0), 0, 0))], 0), (("test/test.ml", 626, 22967, 22977), ("test/test.ml", 626, 22967, 22986), 0), 0, 0), (((("a"), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0))), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0), 0, 0), 0, (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 626, 22967, 22990), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0))), (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0), 0, 0), (Tag5 ((((("emit_id1"), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0))), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0))), (("test/test.ml", 627, 22994, 23018), ("test/test.ml", 627, 22994, 23023), 0), [(("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0)], 0))]), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23023), 0), 0, 0), 0, (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 627, 22994, 23023), 0))], (((("id1"), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0))), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23250), 0)), ((0, ((("a", (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0))), (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0), 0, 0)))), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23252), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0))), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 634, 23286, 23293), ("test/test.ml", 634, 23286, 23303), 0), 0)), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23304), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0))), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0))), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0), 0, 0); (((("s"), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0))), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0), 0, 0)]), (("test/test.ml", 634, 23286, 23332), ("test/test.ml", 634, 23286, 23340), 0), [(("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23338), 0)], 0))]), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 623, 22873, 22877), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 621, 22843, 22845), ("test/test.ml", 634, 23286, 23340), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0)), 0), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0), 0, 0)), (("test/test.ml", 620, 22775, 22833), ("test/test.ml", 634, 23286, 23340), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 634, 23286, 23340), 1), 0, 0), 0, (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0))]))
("DEBUG:Pstr_value:", 0, [(((("emit_core_type_desc", (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0))), (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0))), (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0)), 0), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0)), 0), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)]), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 620, 22775, 22833), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0))), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0))), (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0), 0, 0); ((("s", (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0))), (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0), 0, 0)]), (("test/test.ml", 622, 22858, 22862), ("test/test.ml", 622, 22858, 22870), 0), [(("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22869), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0))), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22909), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0))), (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0), 0, 0); ((("b", (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0))), (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0), 0, 0)]), (("test/test.ml", 624, 22892, 22910), ("test/test.ml", 624, 22892, 22915), 0), [(("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22914), 0)], 0)))), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22915), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 1)), ((("txt", (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0))), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0), 0, 0)); ((("loc"), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 1)), ((("loc", (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0))), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0), 0, 0))], 0), (("test/test.ml", 626, 22967, 22977), ("test/test.ml", 626, 22967, 22986), 0), 0, 0), (((("a"), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0))), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0), 0, 0), 0, (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 626, 22967, 22990), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0))), (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0), 0, 0), (Tag5 ((((("emit_id1"), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0))), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0))), (("test/test.ml", 627, 22994, 23018), ("test/test.ml", 627, 22994, 23023), 0), [(("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0)], 0))]), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23023), 0), 0, 0), 0, (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 627, 22994, 23023), 0))], (((("id1"), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0))), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23250), 0)), ((0, ((("a", (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0))), (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0), 0, 0)))), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23252), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0))), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 634, 23286, 23293), ("test/test.ml", 634, 23286, 23303), 0), 0)), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23304), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0))), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0))), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0), 0, 0); (((("s"), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0))), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0), 0, 0)]), (("test/test.ml", 634, 23286, 23332), ("test/test.ml", 634, 23286, 23340), 0), [(("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23338), 0)], 0))]), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 623, 22873, 22877), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 621, 22843, 22845), ("test/test.ml", 634, 23286, 23340), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0)), 0), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0), 0, 0)), (("test/test.ml", 620, 22775, 22833), ("test/test.ml", 634, 23286, 23340), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 634, 23286, 23340), 1), 0, 0), 0, (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0))])
("DEBUG:value_binding.pat:", ((("emit_core_type_desc", (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0))), (("test/test.ml", 620, 22775, 22779), ("test/test.ml", 620, 22775, 22798), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0))), (("test/test.ml", 620, 22775, 22800), ("test/test.ml", 620, 22775, 22801), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_desc"), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0)), 0), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22818), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0)), 0), (("test/test.ml", 620, 22775, 22821), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)]), (("test/test.ml", 620, 22775, 22804), ("test/test.ml", 620, 22775, 22832), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 620, 22775, 22833), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0))), (("test/test.ml", 621, 22843, 22851), ("test/test.ml", 621, 22843, 22852), 0), 0, 0), [((Tag4 ([((("ctd", (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0))), (("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22866), 0), 0, 0); ((("s", (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0))), (("test/test.ml", 622, 22858, 22868), ("test/test.ml", 622, 22858, 22869), 0), 0, 0)]), (("test/test.ml", 622, 22858, 22862), ("test/test.ml", 622, 22858, 22870), 0), [(("test/test.ml", 622, 22858, 22863), ("test/test.ml", 622, 22858, 22869), 0)], 0), 0, (Tag6 ((((("ctd"), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0))), (("test/test.ml", 623, 22873, 22883), ("test/test.ml", 623, 22873, 22886), 0), 0, 0), [((Tag5 ((("Ptyp_constr"), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22909), 0)), ((0, (Tag4 ([((("a", (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0))), (("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22912), 0), 0, 0); ((("b", (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0))), (("test/test.ml", 624, 22892, 22913), ("test/test.ml", 624, 22892, 22914), 0), 0, 0)]), (("test/test.ml", 624, 22892, 22910), ("test/test.ml", 624, 22892, 22915), 0), [(("test/test.ml", 624, 22892, 22911), ("test/test.ml", 624, 22892, 22914), 0)], 0)))), (("test/test.ml", 624, 22892, 22898), ("test/test.ml", 624, 22892, 22915), 0), 0, 0), 0, (Tag2 (0, [((Tag7 ([((("txt"), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 1)), ((("txt", (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0))), (("test/test.ml", 626, 22967, 22978), ("test/test.ml", 626, 22967, 22981), 0), 0, 0)); ((("loc"), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 1)), ((("loc", (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0))), (("test/test.ml", 626, 22967, 22982), ("test/test.ml", 626, 22967, 22985), 0), 0, 0))], 0), (("test/test.ml", 626, 22967, 22977), ("test/test.ml", 626, 22967, 22986), 0), 0, 0), (((("a"), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0))), (("test/test.ml", 626, 22967, 22989), ("test/test.ml", 626, 22967, 22990), 0), 0, 0), 0, (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 626, 22967, 22990), 0))], (Tag2 (0, [(((("id1", (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0))), (("test/test.ml", 627, 22994, 23004), ("test/test.ml", 627, 22994, 23007), 0), 0, 0), (Tag5 ((((("emit_id1"), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0))), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23018), 0), 0, 0), [(0, (((("txt"), (("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0))), (("test/test.ml", 627, 22994, 23018), ("test/test.ml", 627, 22994, 23023), 0), [(("test/test.ml", 627, 22994, 23019), ("test/test.ml", 627, 22994, 23022), 0)], 0))]), (("test/test.ml", 627, 22994, 23010), ("test/test.ml", 627, 22994, 23023), 0), 0, 0), 0, (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 627, 22994, 23023), 0))], (((("id1"), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0))), (("test/test.ml", 631, 23199, 23205), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 627, 22994, 23000), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)), (("test/test.ml", 626, 22967, 22973), ("test/test.ml", 631, 23199, 23208), 0), 0, 0)); ((Tag5 ((("Ptyp_tuple"), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23250), 0)), ((0, ((("a", (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0))), (("test/test.ml", 632, 23234, 23251), ("test/test.ml", 632, 23234, 23252), 0), 0, 0)))), (("test/test.ml", 632, 23234, 23240), ("test/test.ml", 632, 23234, 23252), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0))), (("test/test.ml", 634, 23286, 23305), ("test/test.ml", 634, 23286, 23306), 0), 0, 0), [(0, (Tag1 (Tag2 ("Ptyp_tuple", (("test/test.ml", 634, 23286, 23293), ("test/test.ml", 634, 23286, 23303), 0), 0)), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23304), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0))), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23332), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0))), (("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23334), 0), 0, 0); (((("s"), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0))), (("test/test.ml", 634, 23286, 23337), ("test/test.ml", 634, 23286, 23338), 0), 0, 0)]), (("test/test.ml", 634, 23286, 23332), ("test/test.ml", 634, 23286, 23340), 0), [(("test/test.ml", 634, 23286, 23333), ("test/test.ml", 634, 23286, 23338), 0)], 0))]), (("test/test.ml", 634, 23286, 23307), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 634, 23286, 23292), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 623, 22873, 22877), ("test/test.ml", 634, 23286, 23340), 0), 0, 0))]), (("test/test.ml", 621, 22843, 22845), ("test/test.ml", 634, 23286, 23340), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0)), 0), (("test/test.ml", 620, 22775, 22834), ("test/test.ml", 620, 22775, 22840), 0), 0, 0)), (("test/test.ml", 620, 22775, 22833), ("test/test.ml", 634, 23286, 23340), 0), 0, 0)), (("test/test.ml", 620, 22775, 22799), ("test/test.ml", 634, 23286, 23340), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 620, 22775, 22775), ("test/test.ml", 634, 23286, 23340), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("emit_core_type", (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0))), (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0))), (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0)), 0), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0)), 0), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0)), 0), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)]), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 637, 23343, 23394), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0))), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0))), (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0), 0, 0); ((("s", (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0))), (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0), 0, 0); ((("n", (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0))), (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0), 0, 0)]), (("test/test.ml", 639, 23418, 23422), ("test/test.ml", 639, 23418, 23429), 0), [(("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23428), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0))), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 1)), ((("ptyp_desc", (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0))), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 1)), ((("ptyp_loc", (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0))), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 1)), ((("ptyp_loc_stack", (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0))), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 1)), ((("ptyp_attributes", (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0))), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0), 0, 0))], 0), (("test/test.ml", 641, 23453, 23457), ("test/test.ml", 646, 23617, 23622), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0))), (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0))), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0))), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0), 0, 0); (((("s"), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0))), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0), 0, 0)]), (("test/test.ml", 647, 23625, 23659), ("test/test.ml", 647, 23625, 23672), 0), [(("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23671), 0)], 0))]), (("test/test.ml", 647, 23625, 23638), ("test/test.ml", 647, 23625, 23673), 0), [(("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23672), 0)], 0), 0, (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 647, 23625, 23673), 0))], (Tag5 ((((("^"), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0))), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0), 0, 0), [(0, (((("td"), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0))), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0), 0, 0)); (0, (Tag5 ((((("string_of_int"), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0))), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0))), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0), 0, 0))]), (("test/test.ml", 648, 23677, 23686), ("test/test.ml", 648, 23677, 23703), 0), [(("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23702), 0)], 0))]), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 640, 23433, 23438), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 638, 23403, 23405), ("test/test.ml", 648, 23677, 23703), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0)), 0), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0), 0, 0)), (("test/test.ml", 637, 23343, 23394), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 648, 23677, 23703), 1), 0, 0), 0, (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0))]), (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("emit_core_type", (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0))), (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0))), (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0)), 0), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0)), 0), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0)), 0), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)]), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 637, 23343, 23394), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0))), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0))), (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0), 0, 0); ((("s", (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0))), (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0), 0, 0); ((("n", (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0))), (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0), 0, 0)]), (("test/test.ml", 639, 23418, 23422), ("test/test.ml", 639, 23418, 23429), 0), [(("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23428), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0))), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 1)), ((("ptyp_desc", (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0))), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 1)), ((("ptyp_loc", (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0))), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 1)), ((("ptyp_loc_stack", (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0))), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 1)), ((("ptyp_attributes", (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0))), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0), 0, 0))], 0), (("test/test.ml", 641, 23453, 23457), ("test/test.ml", 646, 23617, 23622), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0))), (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0))), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0))), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0), 0, 0); (((("s"), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0))), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0), 0, 0)]), (("test/test.ml", 647, 23625, 23659), ("test/test.ml", 647, 23625, 23672), 0), [(("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23671), 0)], 0))]), (("test/test.ml", 647, 23625, 23638), ("test/test.ml", 647, 23625, 23673), 0), [(("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23672), 0)], 0), 0, (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 647, 23625, 23673), 0))], (Tag5 ((((("^"), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0))), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0), 0, 0), [(0, (((("td"), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0))), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0), 0, 0)); (0, (Tag5 ((((("string_of_int"), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0))), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0))), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0), 0, 0))]), (("test/test.ml", 648, 23677, 23686), ("test/test.ml", 648, 23677, 23703), 0), [(("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23702), 0)], 0))]), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 640, 23433, 23438), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 638, 23403, 23405), ("test/test.ml", 648, 23677, 23703), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0)), 0), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0), 0, 0)), (("test/test.ml", 637, 23343, 23394), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 648, 23677, 23703), 1), 0, 0), 0, (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0))]))
("DEBUG:Pstr_value:", 0, [(((("emit_core_type", (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0))), (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0))), (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0)), 0), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0)), 0), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0)), 0), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)]), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 637, 23343, 23394), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0))), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0))), (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0), 0, 0); ((("s", (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0))), (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0), 0, 0); ((("n", (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0))), (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0), 0, 0)]), (("test/test.ml", 639, 23418, 23422), ("test/test.ml", 639, 23418, 23429), 0), [(("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23428), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0))), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 1)), ((("ptyp_desc", (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0))), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 1)), ((("ptyp_loc", (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0))), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 1)), ((("ptyp_loc_stack", (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0))), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 1)), ((("ptyp_attributes", (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0))), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0), 0, 0))], 0), (("test/test.ml", 641, 23453, 23457), ("test/test.ml", 646, 23617, 23622), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0))), (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0))), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0))), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0), 0, 0); (((("s"), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0))), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0), 0, 0)]), (("test/test.ml", 647, 23625, 23659), ("test/test.ml", 647, 23625, 23672), 0), [(("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23671), 0)], 0))]), (("test/test.ml", 647, 23625, 23638), ("test/test.ml", 647, 23625, 23673), 0), [(("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23672), 0)], 0), 0, (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 647, 23625, 23673), 0))], (Tag5 ((((("^"), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0))), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0), 0, 0), [(0, (((("td"), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0))), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0), 0, 0)); (0, (Tag5 ((((("string_of_int"), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0))), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0))), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0), 0, 0))]), (("test/test.ml", 648, 23677, 23686), ("test/test.ml", 648, 23677, 23703), 0), [(("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23702), 0)], 0))]), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 640, 23433, 23438), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 638, 23403, 23405), ("test/test.ml", 648, 23677, 23703), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0)), 0), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0), 0, 0)), (("test/test.ml", 637, 23343, 23394), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 648, 23677, 23703), 1), 0, 0), 0, (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0))])
("DEBUG:value_binding.pat:", ((("emit_core_type", (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0))), (("test/test.ml", 637, 23343, 23348), ("test/test.ml", 637, 23343, 23362), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0))), (("test/test.ml", 637, 23343, 23363), ("test/test.ml", 637, 23343, 23364), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0)), 0), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23375), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0)), 0), (("test/test.ml", 637, 23343, 23378), ("test/test.ml", 637, 23343, 23389), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0)), 0), (("test/test.ml", 637, 23343, 23390), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)]), (("test/test.ml", 637, 23343, 23366), ("test/test.ml", 637, 23343, 23393), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 637, 23343, 23394), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0))), (("test/test.ml", 638, 23403, 23411), ("test/test.ml", 638, 23403, 23412), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0))), (("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23424), 0), 0, 0); ((("s", (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0))), (("test/test.ml", 639, 23418, 23425), ("test/test.ml", 639, 23418, 23426), 0), 0, 0); ((("n", (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0))), (("test/test.ml", 639, 23418, 23427), ("test/test.ml", 639, 23418, 23428), 0), 0, 0)]), (("test/test.ml", 639, 23418, 23422), ("test/test.ml", 639, 23418, 23429), 0), [(("test/test.ml", 639, 23418, 23423), ("test/test.ml", 639, 23418, 23428), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0))), (("test/test.ml", 640, 23433, 23444), ("test/test.ml", 640, 23433, 23445), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 1)), ((("ptyp_desc", (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0))), (("test/test.ml", 642, 23459, 23465), ("test/test.ml", 642, 23459, 23474), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 1)), ((("ptyp_loc", (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0))), (("test/test.ml", 643, 23498, 23504), ("test/test.ml", 643, 23498, 23512), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 1)), ((("ptyp_loc_stack", (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0))), (("test/test.ml", 644, 23532, 23538), ("test/test.ml", 644, 23532, 23552), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 1)), ((("ptyp_attributes", (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0))), (("test/test.ml", 645, 23576, 23582), ("test/test.ml", 645, 23576, 23597), 0), 0, 0))], 0), (("test/test.ml", 641, 23453, 23457), ("test/test.ml", 646, 23617, 23622), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0))), (("test/test.ml", 647, 23625, 23633), ("test/test.ml", 647, 23625, 23635), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0))), (("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23658), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0))), (("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23669), 0), 0, 0); (((("s"), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0))), (("test/test.ml", 647, 23625, 23670), ("test/test.ml", 647, 23625, 23671), 0), 0, 0)]), (("test/test.ml", 647, 23625, 23659), ("test/test.ml", 647, 23625, 23672), 0), [(("test/test.ml", 647, 23625, 23660), ("test/test.ml", 647, 23625, 23671), 0)], 0))]), (("test/test.ml", 647, 23625, 23638), ("test/test.ml", 647, 23625, 23673), 0), [(("test/test.ml", 647, 23625, 23639), ("test/test.ml", 647, 23625, 23672), 0)], 0), 0, (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 647, 23625, 23673), 0))], (Tag5 ((((("^"), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0))), (("test/test.ml", 648, 23677, 23684), ("test/test.ml", 648, 23677, 23685), 0), 0, 0), [(0, (((("td"), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0))), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23683), 0), 0, 0)); (0, (Tag5 ((((("string_of_int"), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0))), (("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23700), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0))), (("test/test.ml", 648, 23677, 23701), ("test/test.ml", 648, 23677, 23702), 0), 0, 0))]), (("test/test.ml", 648, 23677, 23686), ("test/test.ml", 648, 23677, 23703), 0), [(("test/test.ml", 648, 23677, 23687), ("test/test.ml", 648, 23677, 23702), 0)], 0))]), (("test/test.ml", 648, 23677, 23681), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 647, 23625, 23629), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 640, 23433, 23438), ("test/test.ml", 648, 23677, 23703), 0), 0, 0))]), (("test/test.ml", 638, 23403, 23405), ("test/test.ml", 648, 23677, 23703), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0)), 0), (("test/test.ml", 637, 23343, 23395), ("test/test.ml", 637, 23343, 23401), 0), 0, 0)), (("test/test.ml", 637, 23343, 23394), ("test/test.ml", 648, 23677, 23703), 0), 0, 0)), (("test/test.ml", 637, 23343, 23362), ("test/test.ml", 648, 23677, 23703), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 637, 23343, 23343), ("test/test.ml", 648, 23677, 23703), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("emit_core_type2", (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0))), (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0))), (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0)), 0), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0)), 0), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0)), 0), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)]), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 650, 23705, 23757), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0))), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0))), (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0), 0, 0); ((("s", (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0))), (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0), 0, 0); ((("n", (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0))), (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0), 0, 0)]), (("test/test.ml", 652, 23781, 23785), ("test/test.ml", 652, 23781, 23792), 0), [(("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23791), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0))), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 1)), ((("ptyp_desc", (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0))), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 1)), ((("ptyp_loc", (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0))), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 1)), ((("ptyp_loc_stack", (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0))), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 1)), ((("ptyp_attributes", (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0))), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0), 0, 0))], 0), (("test/test.ml", 654, 23815, 23821), ("test/test.ml", 659, 23989, 23996), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0))), (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0))), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0))), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0), 0, 0); (((("s"), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0))), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0), 0, 0)]), (("test/test.ml", 660, 23999, 24035), ("test/test.ml", 660, 23999, 24048), 0), [(("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24047), 0)], 0))]), (("test/test.ml", 660, 23999, 24014), ("test/test.ml", 660, 23999, 24049), 0), [(("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24048), 0)], 0), 0, (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 660, 23999, 24049), 0))], (((("td"), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0))), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 653, 23796, 23800), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 651, 23766, 23768), ("test/test.ml", 661, 24053, 24061), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0)), 0), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0), 0, 0)), (("test/test.ml", 650, 23705, 23757), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 661, 24053, 24061), 1), 0, 0), 0, (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0))]), (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("emit_core_type2", (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0))), (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0))), (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0)), 0), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0)), 0), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0)), 0), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)]), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 650, 23705, 23757), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0))), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0))), (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0), 0, 0); ((("s", (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0))), (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0), 0, 0); ((("n", (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0))), (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0), 0, 0)]), (("test/test.ml", 652, 23781, 23785), ("test/test.ml", 652, 23781, 23792), 0), [(("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23791), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0))), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 1)), ((("ptyp_desc", (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0))), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 1)), ((("ptyp_loc", (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0))), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 1)), ((("ptyp_loc_stack", (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0))), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 1)), ((("ptyp_attributes", (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0))), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0), 0, 0))], 0), (("test/test.ml", 654, 23815, 23821), ("test/test.ml", 659, 23989, 23996), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0))), (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0))), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0))), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0), 0, 0); (((("s"), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0))), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0), 0, 0)]), (("test/test.ml", 660, 23999, 24035), ("test/test.ml", 660, 23999, 24048), 0), [(("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24047), 0)], 0))]), (("test/test.ml", 660, 23999, 24014), ("test/test.ml", 660, 23999, 24049), 0), [(("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24048), 0)], 0), 0, (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 660, 23999, 24049), 0))], (((("td"), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0))), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 653, 23796, 23800), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 651, 23766, 23768), ("test/test.ml", 661, 24053, 24061), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0)), 0), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0), 0, 0)), (("test/test.ml", 650, 23705, 23757), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 661, 24053, 24061), 1), 0, 0), 0, (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0))]))
("DEBUG:Pstr_value:", 0, [(((("emit_core_type2", (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0))), (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0))), (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0)), 0), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0)), 0), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0)), 0), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)]), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 650, 23705, 23757), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0))), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0))), (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0), 0, 0); ((("s", (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0))), (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0), 0, 0); ((("n", (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0))), (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0), 0, 0)]), (("test/test.ml", 652, 23781, 23785), ("test/test.ml", 652, 23781, 23792), 0), [(("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23791), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0))), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 1)), ((("ptyp_desc", (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0))), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 1)), ((("ptyp_loc", (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0))), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 1)), ((("ptyp_loc_stack", (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0))), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 1)), ((("ptyp_attributes", (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0))), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0), 0, 0))], 0), (("test/test.ml", 654, 23815, 23821), ("test/test.ml", 659, 23989, 23996), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0))), (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0))), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0))), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0), 0, 0); (((("s"), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0))), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0), 0, 0)]), (("test/test.ml", 660, 23999, 24035), ("test/test.ml", 660, 23999, 24048), 0), [(("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24047), 0)], 0))]), (("test/test.ml", 660, 23999, 24014), ("test/test.ml", 660, 23999, 24049), 0), [(("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24048), 0)], 0), 0, (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 660, 23999, 24049), 0))], (((("td"), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0))), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 653, 23796, 23800), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 651, 23766, 23768), ("test/test.ml", 661, 24053, 24061), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0)), 0), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0), 0, 0)), (("test/test.ml", 650, 23705, 23757), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 661, 24053, 24061), 1), 0, 0), 0, (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0))])
("DEBUG:value_binding.pat:", ((("emit_core_type2", (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0))), (("test/test.ml", 650, 23705, 23710), ("test/test.ml", 650, 23705, 23725), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0))), (("test/test.ml", 650, 23705, 23726), ("test/test.ml", 650, 23705, 23727), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0)), 0), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23738), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0)), 0), (("test/test.ml", 650, 23705, 23741), ("test/test.ml", 650, 23705, 23752), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0)), 0), (("test/test.ml", 650, 23705, 23753), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)]), (("test/test.ml", 650, 23705, 23729), ("test/test.ml", 650, 23705, 23756), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 650, 23705, 23757), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0))), (("test/test.ml", 651, 23766, 23774), ("test/test.ml", 651, 23766, 23775), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0))), (("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23787), 0), 0, 0); ((("s", (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0))), (("test/test.ml", 652, 23781, 23788), ("test/test.ml", 652, 23781, 23789), 0), 0, 0); ((("n", (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0))), (("test/test.ml", 652, 23781, 23790), ("test/test.ml", 652, 23781, 23791), 0), 0, 0)]), (("test/test.ml", 652, 23781, 23785), ("test/test.ml", 652, 23781, 23792), 0), [(("test/test.ml", 652, 23781, 23786), ("test/test.ml", 652, 23781, 23791), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0))), (("test/test.ml", 653, 23796, 23806), ("test/test.ml", 653, 23796, 23807), 0), 0, 0), [((Tag7 ([((("ptyp_desc"), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 1)), ((("ptyp_desc", (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0))), (("test/test.ml", 655, 23823, 23831), ("test/test.ml", 655, 23823, 23840), 0), 0, 0)); ((("ptyp_loc"), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 1)), ((("ptyp_loc", (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0))), (("test/test.ml", 656, 23864, 23872), ("test/test.ml", 656, 23864, 23880), 0), 0, 0)); ((("ptyp_loc_stack"), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 1)), ((("ptyp_loc_stack", (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0))), (("test/test.ml", 657, 23900, 23908), ("test/test.ml", 657, 23900, 23922), 0), 0, 0)); ((("ptyp_attributes"), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 1)), ((("ptyp_attributes", (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0))), (("test/test.ml", 658, 23946, 23954), ("test/test.ml", 658, 23946, 23969), 0), 0, 0))], 0), (("test/test.ml", 654, 23815, 23821), ("test/test.ml", 659, 23989, 23996), 0), 0, 0), 0, (Tag2 (0, [(((("td", (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0))), (("test/test.ml", 660, 23999, 24009), ("test/test.ml", 660, 23999, 24011), 0), 0, 0), (Tag5 ((((("emit_core_type_desc"), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0))), (("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24034), 0), 0, 0), [(0, (Tag8 ([(((("ptyp_desc"), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0))), (("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24045), 0), 0, 0); (((("s"), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0))), (("test/test.ml", 660, 23999, 24046), ("test/test.ml", 660, 23999, 24047), 0), 0, 0)]), (("test/test.ml", 660, 23999, 24035), ("test/test.ml", 660, 23999, 24048), 0), [(("test/test.ml", 660, 23999, 24036), ("test/test.ml", 660, 23999, 24047), 0)], 0))]), (("test/test.ml", 660, 23999, 24014), ("test/test.ml", 660, 23999, 24049), 0), [(("test/test.ml", 660, 23999, 24015), ("test/test.ml", 660, 23999, 24048), 0)], 0), 0, (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 660, 23999, 24049), 0))], (((("td"), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0))), (("test/test.ml", 661, 24053, 24059), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 660, 23999, 24005), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 653, 23796, 23800), ("test/test.ml", 661, 24053, 24061), 0), 0, 0))]), (("test/test.ml", 651, 23766, 23768), ("test/test.ml", 661, 24053, 24061), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0)), 0), (("test/test.ml", 650, 23705, 23758), ("test/test.ml", 650, 23705, 23764), 0), 0, 0)), (("test/test.ml", 650, 23705, 23757), ("test/test.ml", 661, 24053, 24061), 0), 0, 0)), (("test/test.ml", 650, 23705, 23725), ("test/test.ml", 661, 24053, 24061), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 650, 23705, 23705), ("test/test.ml", 661, 24053, 24061), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("emit_core_type_list", (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0))), (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0))), (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0)), 0), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0)), 0), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0)), 0), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)]), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 664, 24081, 24145), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0))), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0))), (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0), 0, 0); ((("b", (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0))), (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0), 0, 0); ((("n", (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0))), (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0), 0, 0)]), (("test/test.ml", 666, 24170, 24174), ("test/test.ml", 666, 24170, 24181), 0), [(("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24180), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0))), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0)), 0), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 668, 24202, 24215), ("test/test.ml", 668, 24202, 24215), 0), 0)), (("test/test.ml", 668, 24202, 24214), ("test/test.ml", 668, 24202, 24216), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 669, 24217, 24225), ("test/test.ml", 669, 24217, 24227), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0), 0, 0); ((("t", (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0))), (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0), 0, 0)]), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 1), 0, 0)))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0))), (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0), 0, 0), (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0))), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0))), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0), 0, 0); (((("b"), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0))), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0))), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0))), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 670, 24233, 24274), ("test/test.ml", 670, 24233, 24275), 0), 0, 0))]), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24275), 0), 0, 0)]), (("test/test.ml", 670, 24233, 24267), ("test/test.ml", 670, 24233, 24276), 0), [(("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24275), 0)], 0))]), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24276), 0), 0, 0), 0, (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 670, 24233, 24276), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0))), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0))), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 671, 24281, 24297), ("test/test.ml", 671, 24281, 24297), 0), 0)), (("test/test.ml", 671, 24281, 24296), ("test/test.ml", 671, 24281, 24298), 0), 0, 0))]), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24298), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0))), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type"), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0))), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0))), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0), 0, 0); (((("b"), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0))), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0), 0, 0); (((("n"), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0))), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0), 0, 0)]), (("test/test.ml", 672, 24304, 24327), ("test/test.ml", 672, 24304, 24335), 0), [(("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24334), 0)], 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24335), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0))), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 672, 24304, 24339), ("test/test.ml", 672, 24304, 24340), 0), 0)), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24341), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0))), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24346), 0), 0, 0), ((Tag5 ((((("emit_core_type"), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0))), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0))), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0), 0, 0); (((("b"), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0))), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0), 0, 0); (((("n"), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0))), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0), 0, 0)]), (("test/test.ml", 674, 24358, 24381), ("test/test.ml", 674, 24358, 24389), 0), [(("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24388), 0)], 0))]), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))), (("test/test.ml", 671, 24281, 24287), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 667, 24185, 24189), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 665, 24155, 24157), ("test/test.ml", 674, 24358, 24389), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0)), 0), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0), 0, 0)), (("test/test.ml", 664, 24081, 24145), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 674, 24358, 24389), 1), 0, 0), 0, (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0))]), (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("emit_core_type_list", (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0))), (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0))), (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0)), 0), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0)), 0), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0)), 0), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)]), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 664, 24081, 24145), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0))), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0))), (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0), 0, 0); ((("b", (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0))), (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0), 0, 0); ((("n", (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0))), (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0), 0, 0)]), (("test/test.ml", 666, 24170, 24174), ("test/test.ml", 666, 24170, 24181), 0), [(("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24180), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0))), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0)), 0), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 668, 24202, 24215), ("test/test.ml", 668, 24202, 24215), 0), 0)), (("test/test.ml", 668, 24202, 24214), ("test/test.ml", 668, 24202, 24216), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 669, 24217, 24225), ("test/test.ml", 669, 24217, 24227), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0), 0, 0); ((("t", (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0))), (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0), 0, 0)]), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 1), 0, 0)))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0))), (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0), 0, 0), (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0))), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0))), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0), 0, 0); (((("b"), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0))), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0))), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0))), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 670, 24233, 24274), ("test/test.ml", 670, 24233, 24275), 0), 0, 0))]), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24275), 0), 0, 0)]), (("test/test.ml", 670, 24233, 24267), ("test/test.ml", 670, 24233, 24276), 0), [(("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24275), 0)], 0))]), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24276), 0), 0, 0), 0, (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 670, 24233, 24276), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0))), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0))), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 671, 24281, 24297), ("test/test.ml", 671, 24281, 24297), 0), 0)), (("test/test.ml", 671, 24281, 24296), ("test/test.ml", 671, 24281, 24298), 0), 0, 0))]), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24298), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0))), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type"), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0))), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0))), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0), 0, 0); (((("b"), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0))), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0), 0, 0); (((("n"), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0))), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0), 0, 0)]), (("test/test.ml", 672, 24304, 24327), ("test/test.ml", 672, 24304, 24335), 0), [(("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24334), 0)], 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24335), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0))), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 672, 24304, 24339), ("test/test.ml", 672, 24304, 24340), 0), 0)), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24341), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0))), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24346), 0), 0, 0), ((Tag5 ((((("emit_core_type"), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0))), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0))), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0), 0, 0); (((("b"), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0))), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0), 0, 0); (((("n"), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0))), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0), 0, 0)]), (("test/test.ml", 674, 24358, 24381), ("test/test.ml", 674, 24358, 24389), 0), [(("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24388), 0)], 0))]), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))), (("test/test.ml", 671, 24281, 24287), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 667, 24185, 24189), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 665, 24155, 24157), ("test/test.ml", 674, 24358, 24389), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0)), 0), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0), 0, 0)), (("test/test.ml", 664, 24081, 24145), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 674, 24358, 24389), 1), 0, 0), 0, (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0))]))
("DEBUG:Pstr_value:", 1, [(((("emit_core_type_list", (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0))), (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0))), (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0)), 0), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0)), 0), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0)), 0), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)]), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 664, 24081, 24145), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0))), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0))), (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0), 0, 0); ((("b", (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0))), (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0), 0, 0); ((("n", (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0))), (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0), 0, 0)]), (("test/test.ml", 666, 24170, 24174), ("test/test.ml", 666, 24170, 24181), 0), [(("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24180), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0))), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0)), 0), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 668, 24202, 24215), ("test/test.ml", 668, 24202, 24215), 0), 0)), (("test/test.ml", 668, 24202, 24214), ("test/test.ml", 668, 24202, 24216), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 669, 24217, 24225), ("test/test.ml", 669, 24217, 24227), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0), 0, 0); ((("t", (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0))), (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0), 0, 0)]), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 1), 0, 0)))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0))), (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0), 0, 0), (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0))), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0))), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0), 0, 0); (((("b"), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0))), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0))), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0))), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 670, 24233, 24274), ("test/test.ml", 670, 24233, 24275), 0), 0, 0))]), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24275), 0), 0, 0)]), (("test/test.ml", 670, 24233, 24267), ("test/test.ml", 670, 24233, 24276), 0), [(("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24275), 0)], 0))]), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24276), 0), 0, 0), 0, (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 670, 24233, 24276), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0))), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0))), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 671, 24281, 24297), ("test/test.ml", 671, 24281, 24297), 0), 0)), (("test/test.ml", 671, 24281, 24296), ("test/test.ml", 671, 24281, 24298), 0), 0, 0))]), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24298), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0))), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type"), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0))), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0))), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0), 0, 0); (((("b"), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0))), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0), 0, 0); (((("n"), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0))), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0), 0, 0)]), (("test/test.ml", 672, 24304, 24327), ("test/test.ml", 672, 24304, 24335), 0), [(("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24334), 0)], 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24335), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0))), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 672, 24304, 24339), ("test/test.ml", 672, 24304, 24340), 0), 0)), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24341), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0))), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24346), 0), 0, 0), ((Tag5 ((((("emit_core_type"), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0))), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0))), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0), 0, 0); (((("b"), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0))), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0), 0, 0); (((("n"), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0))), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0), 0, 0)]), (("test/test.ml", 674, 24358, 24381), ("test/test.ml", 674, 24358, 24389), 0), [(("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24388), 0)], 0))]), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))), (("test/test.ml", 671, 24281, 24287), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 667, 24185, 24189), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 665, 24155, 24157), ("test/test.ml", 674, 24358, 24389), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0)), 0), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0), 0, 0)), (("test/test.ml", 664, 24081, 24145), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 674, 24358, 24389), 1), 0, 0), 0, (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0))])
("DEBUG:value_binding.pat:", ((("emit_core_type_list", (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0))), (("test/test.ml", 664, 24081, 24089), ("test/test.ml", 664, 24081, 24108), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0))), (("test/test.ml", 664, 24081, 24109), ("test/test.ml", 664, 24081, 24110), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0)), 0), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24126), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0)), 0), (("test/test.ml", 664, 24081, 24129), ("test/test.ml", 664, 24081, 24140), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0)), 0), (("test/test.ml", 664, 24081, 24141), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)]), (("test/test.ml", 664, 24081, 24112), ("test/test.ml", 664, 24081, 24144), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 664, 24081, 24145), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0))), (("test/test.ml", 665, 24155, 24163), ("test/test.ml", 665, 24155, 24164), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0))), (("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24176), 0), 0, 0); ((("b", (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0))), (("test/test.ml", 666, 24170, 24177), ("test/test.ml", 666, 24170, 24178), 0), 0, 0); ((("n", (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0))), (("test/test.ml", 666, 24170, 24179), ("test/test.ml", 666, 24170, 24180), 0), 0, 0)]), (("test/test.ml", 666, 24170, 24174), ("test/test.ml", 666, 24170, 24181), 0), [(("test/test.ml", 666, 24170, 24175), ("test/test.ml", 666, 24170, 24180), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0))), (("test/test.ml", 667, 24185, 24195), ("test/test.ml", 667, 24185, 24196), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0)), 0), (("test/test.ml", 668, 24202, 24208), ("test/test.ml", 668, 24202, 24210), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 668, 24202, 24215), ("test/test.ml", 668, 24202, 24215), 0), 0)), (("test/test.ml", 668, 24202, 24214), ("test/test.ml", 668, 24202, 24216), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 669, 24217, 24225), ("test/test.ml", 669, 24217, 24227), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24224), 0), 0, 0); ((("t", (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0))), (("test/test.ml", 669, 24217, 24228), ("test/test.ml", 669, 24217, 24229), 0), 0, 0)]), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 1), 0, 0)))), (("test/test.ml", 669, 24217, 24223), ("test/test.ml", 669, 24217, 24229), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0))), (("test/test.ml", 670, 24233, 24243), ("test/test.ml", 670, 24233, 24245), 0), 0, 0), (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0))), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24267), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0))), (("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24269), 0), 0, 0); (((("b"), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0))), (("test/test.ml", 670, 24233, 24270), ("test/test.ml", 670, 24233, 24271), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0))), (("test/test.ml", 670, 24233, 24273), ("test/test.ml", 670, 24233, 24274), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0))), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24273), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 670, 24233, 24274), ("test/test.ml", 670, 24233, 24275), 0), 0, 0))]), (("test/test.ml", 670, 24233, 24272), ("test/test.ml", 670, 24233, 24275), 0), 0, 0)]), (("test/test.ml", 670, 24233, 24267), ("test/test.ml", 670, 24233, 24276), 0), [(("test/test.ml", 670, 24233, 24268), ("test/test.ml", 670, 24233, 24275), 0)], 0))]), (("test/test.ml", 670, 24233, 24248), ("test/test.ml", 670, 24233, 24276), 0), 0, 0), 0, (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 670, 24233, 24276), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0))), (("test/test.ml", 671, 24281, 24293), ("test/test.ml", 671, 24281, 24295), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0))), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24292), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 671, 24281, 24297), ("test/test.ml", 671, 24281, 24297), 0), 0)), (("test/test.ml", 671, 24281, 24296), ("test/test.ml", 671, 24281, 24298), 0), 0, 0))]), (("test/test.ml", 671, 24281, 24290), ("test/test.ml", 671, 24281, 24298), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0))), (("test/test.ml", 672, 24304, 24336), ("test/test.ml", 672, 24304, 24337), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type"), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0))), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24326), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0))), (("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24329), 0), 0, 0); (((("b"), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0))), (("test/test.ml", 672, 24304, 24331), ("test/test.ml", 672, 24304, 24332), 0), 0, 0); (((("n"), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0))), (("test/test.ml", 672, 24304, 24333), ("test/test.ml", 672, 24304, 24334), 0), 0, 0)]), (("test/test.ml", 672, 24304, 24327), ("test/test.ml", 672, 24304, 24335), 0), [(("test/test.ml", 672, 24304, 24328), ("test/test.ml", 672, 24304, 24334), 0)], 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24335), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0))), (("test/test.ml", 672, 24304, 24342), ("test/test.ml", 672, 24304, 24343), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 672, 24304, 24339), ("test/test.ml", 672, 24304, 24340), 0), 0)), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24341), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0))), (("test/test.ml", 672, 24304, 24344), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24338), ("test/test.ml", 672, 24304, 24346), 0), 0, 0))]), (("test/test.ml", 672, 24304, 24312), ("test/test.ml", 672, 24304, 24346), 0), 0, 0), ((Tag5 ((((("emit_core_type"), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0))), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24380), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0))), (("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24383), 0), 0, 0); (((("b"), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0))), (("test/test.ml", 674, 24358, 24385), ("test/test.ml", 674, 24358, 24386), 0), 0, 0); (((("n"), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0))), (("test/test.ml", 674, 24358, 24387), ("test/test.ml", 674, 24358, 24388), 0), 0, 0)]), (("test/test.ml", 674, 24358, 24381), ("test/test.ml", 674, 24358, 24389), 0), [(("test/test.ml", 674, 24358, 24382), ("test/test.ml", 674, 24358, 24388), 0)], 0))]), (("test/test.ml", 674, 24358, 24366), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))), (("test/test.ml", 671, 24281, 24287), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 670, 24233, 24239), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 667, 24185, 24189), ("test/test.ml", 674, 24358, 24389), 0), 0, 0))]), (("test/test.ml", 665, 24155, 24157), ("test/test.ml", 674, 24358, 24389), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0)), 0), (("test/test.ml", 664, 24081, 24146), ("test/test.ml", 664, 24081, 24152), 0), 0, 0)), (("test/test.ml", 664, 24081, 24145), ("test/test.ml", 674, 24358, 24389), 0), 0, 0)), (("test/test.ml", 664, 24081, 24108), ("test/test.ml", 674, 24358, 24389), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 664, 24081, 24081), ("test/test.ml", 674, 24358, 24389), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("imp_core_type", (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0))), (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("a", (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0))), (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0), 0, 0); ((("s", (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0))), (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0), 0, 0); ((("n", (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0))), (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24410), ("test/test.ml", 676, 24391, 24417), 0), [(("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24416), 0)], 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0)), 0), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0)), 0), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0)), 0), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 676, 24391, 24447), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name1", (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0))), (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0))), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0))), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0), 0, 0); (((("s"), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0))), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0), 0, 0); (((("n"), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0))), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0), 0, 0)]), (("test/test.ml", 678, 24457, 24486), ("test/test.ml", 678, 24457, 24493), 0), [(("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24492), 0)], 0))]), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24493), 0), 0, 0), 0, (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 678, 24457, 24493), 0))], (Tag2 (0, [(((("name", (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0))), (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0))), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0))), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0), 0, 0); (((("s"), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0))), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0), 0, 0); (((("n"), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0))), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0), 0, 0)]), (("test/test.ml", 679, 24497, 24524), ("test/test.ml", 679, 24497, 24531), 0), [(("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24530), 0)], 0))]), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24531), 0), 0, 0), 0, (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 679, 24497, 24531), 0))], (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0))), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_", (("test/test.ml", 680, 24535, 24538), ("test/test.ml", 680, 24535, 24547), 0), 0)), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24548), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0))), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0))), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0))), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 680, 24535, 24560), ("test/test.ml", 680, 24535, 24561), 0), 0)), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24562), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0))), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0))), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0), 0, 0)); (0, (Tag1 (Tag2 (")", (("test/test.ml", 680, 24535, 24574), ("test/test.ml", 680, 24535, 24575), 0), 0)), (("test/test.ml", 680, 24535, 24573), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 680, 24535, 24576), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0)), 0), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0), 0, 0)), (("test/test.ml", 676, 24391, 24447), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 680, 24535, 24576), 1), 0, 0), 0, (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0))]), (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("imp_core_type", (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0))), (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("a", (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0))), (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0), 0, 0); ((("s", (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0))), (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0), 0, 0); ((("n", (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0))), (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24410), ("test/test.ml", 676, 24391, 24417), 0), [(("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24416), 0)], 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0)), 0), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0)), 0), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0)), 0), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 676, 24391, 24447), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name1", (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0))), (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0))), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0))), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0), 0, 0); (((("s"), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0))), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0), 0, 0); (((("n"), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0))), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0), 0, 0)]), (("test/test.ml", 678, 24457, 24486), ("test/test.ml", 678, 24457, 24493), 0), [(("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24492), 0)], 0))]), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24493), 0), 0, 0), 0, (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 678, 24457, 24493), 0))], (Tag2 (0, [(((("name", (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0))), (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0))), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0))), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0), 0, 0); (((("s"), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0))), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0), 0, 0); (((("n"), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0))), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0), 0, 0)]), (("test/test.ml", 679, 24497, 24524), ("test/test.ml", 679, 24497, 24531), 0), [(("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24530), 0)], 0))]), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24531), 0), 0, 0), 0, (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 679, 24497, 24531), 0))], (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0))), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_", (("test/test.ml", 680, 24535, 24538), ("test/test.ml", 680, 24535, 24547), 0), 0)), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24548), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0))), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0))), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0))), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 680, 24535, 24560), ("test/test.ml", 680, 24535, 24561), 0), 0)), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24562), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0))), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0))), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0), 0, 0)); (0, (Tag1 (Tag2 (")", (("test/test.ml", 680, 24535, 24574), ("test/test.ml", 680, 24535, 24575), 0), 0)), (("test/test.ml", 680, 24535, 24573), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 680, 24535, 24576), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0)), 0), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0), 0, 0)), (("test/test.ml", 676, 24391, 24447), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 680, 24535, 24576), 1), 0, 0), 0, (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0))]))
("DEBUG:Pstr_value:", 0, [(((("imp_core_type", (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0))), (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0), 0, 0), (Tag4 (0, 0, (Tag10 ((Tag4 ([((("a", (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0))), (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0), 0, 0); ((("s", (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0))), (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0), 0, 0); ((("n", (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0))), (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24410), ("test/test.ml", 676, 24391, 24417), 0), [(("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24416), 0)], 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0)), 0), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0)), 0), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0)), 0), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 676, 24391, 24447), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name1", (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0))), (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0))), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0))), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0), 0, 0); (((("s"), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0))), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0), 0, 0); (((("n"), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0))), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0), 0, 0)]), (("test/test.ml", 678, 24457, 24486), ("test/test.ml", 678, 24457, 24493), 0), [(("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24492), 0)], 0))]), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24493), 0), 0, 0), 0, (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 678, 24457, 24493), 0))], (Tag2 (0, [(((("name", (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0))), (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0))), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0))), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0), 0, 0); (((("s"), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0))), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0), 0, 0); (((("n"), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0))), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0), 0, 0)]), (("test/test.ml", 679, 24497, 24524), ("test/test.ml", 679, 24497, 24531), 0), [(("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24530), 0)], 0))]), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24531), 0), 0, 0), 0, (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 679, 24497, 24531), 0))], (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0))), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_", (("test/test.ml", 680, 24535, 24538), ("test/test.ml", 680, 24535, 24547), 0), 0)), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24548), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0))), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0))), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0))), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 680, 24535, 24560), ("test/test.ml", 680, 24535, 24561), 0), 0)), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24562), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0))), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0))), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0), 0, 0)); (0, (Tag1 (Tag2 (")", (("test/test.ml", 680, 24535, 24574), ("test/test.ml", 680, 24535, 24575), 0), 0)), (("test/test.ml", 680, 24535, 24573), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 680, 24535, 24576), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0)), 0), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0), 0, 0)), (("test/test.ml", 676, 24391, 24447), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 680, 24535, 24576), 1), 0, 0), 0, (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0))])
("DEBUG:value_binding.pat:", ((("imp_core_type", (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0))), (("test/test.ml", 676, 24391, 24396), ("test/test.ml", 676, 24391, 24409), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 ((Tag4 ([((("a", (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0))), (("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24412), 0), 0, 0); ((("s", (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0))), (("test/test.ml", 676, 24391, 24413), ("test/test.ml", 676, 24391, 24414), 0), 0, 0); ((("n", (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0))), (("test/test.ml", 676, 24391, 24415), ("test/test.ml", 676, 24391, 24416), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24410), ("test/test.ml", 676, 24391, 24417), 0), [(("test/test.ml", 676, 24391, 24411), ("test/test.ml", 676, 24391, 24416), 0)], 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0)), 0), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24428), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0)), 0), (("test/test.ml", 676, 24391, 24431), ("test/test.ml", 676, 24391, 24442), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0)), 0), (("test/test.ml", 676, 24391, 24443), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)]), (("test/test.ml", 676, 24391, 24419), ("test/test.ml", 676, 24391, 24446), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 676, 24391, 24447), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name1", (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0))), (("test/test.ml", 678, 24457, 24463), ("test/test.ml", 678, 24457, 24468), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0))), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24486), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0))), (("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24488), 0), 0, 0); (((("s"), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0))), (("test/test.ml", 678, 24457, 24489), ("test/test.ml", 678, 24457, 24490), 0), 0, 0); (((("n"), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0))), (("test/test.ml", 678, 24457, 24491), ("test/test.ml", 678, 24457, 24492), 0), 0, 0)]), (("test/test.ml", 678, 24457, 24486), ("test/test.ml", 678, 24457, 24493), 0), [(("test/test.ml", 678, 24457, 24487), ("test/test.ml", 678, 24457, 24492), 0)], 0))]), (("test/test.ml", 678, 24457, 24471), ("test/test.ml", 678, 24457, 24493), 0), 0, 0), 0, (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 678, 24457, 24493), 0))], (Tag2 (0, [(((("name", (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0))), (("test/test.ml", 679, 24497, 24503), ("test/test.ml", 679, 24497, 24507), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0))), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24524), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0))), (("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24526), 0), 0, 0); (((("s"), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0))), (("test/test.ml", 679, 24497, 24527), ("test/test.ml", 679, 24497, 24528), 0), 0, 0); (((("n"), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0))), (("test/test.ml", 679, 24497, 24529), ("test/test.ml", 679, 24497, 24530), 0), 0, 0)]), (("test/test.ml", 679, 24497, 24524), ("test/test.ml", 679, 24497, 24531), 0), [(("test/test.ml", 679, 24497, 24525), ("test/test.ml", 679, 24497, 24530), 0)], 0))]), (("test/test.ml", 679, 24497, 24510), ("test/test.ml", 679, 24497, 24531), 0), 0, 0), 0, (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 679, 24497, 24531), 0))], (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0))), (("test/test.ml", 680, 24535, 24549), ("test/test.ml", 680, 24535, 24550), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_", (("test/test.ml", 680, 24535, 24538), ("test/test.ml", 680, 24535, 24547), 0), 0)), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24548), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0))), (("test/test.ml", 680, 24535, 24557), ("test/test.ml", 680, 24535, 24558), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0))), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24556), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0))), (("test/test.ml", 680, 24535, 24563), ("test/test.ml", 680, 24535, 24564), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 680, 24535, 24560), ("test/test.ml", 680, 24535, 24561), 0), 0)), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24562), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0))), (("test/test.ml", 680, 24535, 24571), ("test/test.ml", 680, 24535, 24572), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0))), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24569), 0), 0, 0)); (0, (Tag1 (Tag2 (")", (("test/test.ml", 680, 24535, 24574), ("test/test.ml", 680, 24535, 24575), 0), 0)), (("test/test.ml", 680, 24535, 24573), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24565), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24559), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24551), ("test/test.ml", 680, 24535, 24576), 0), 0, 0))]), (("test/test.ml", 680, 24535, 24537), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 679, 24497, 24499), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 678, 24457, 24459), ("test/test.ml", 680, 24535, 24576), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0)), 0), (("test/test.ml", 676, 24391, 24448), ("test/test.ml", 676, 24391, 24454), 0), 0, 0)), (("test/test.ml", 676, 24391, 24447), ("test/test.ml", 680, 24535, 24576), 0), 0, 0)), (("test/test.ml", 676, 24391, 24409), ("test/test.ml", 680, 24535, 24576), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 676, 24391, 24391), ("test/test.ml", 680, 24535, 24576), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("decl_imp_core_type", (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0))), (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0))), (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0)), 0), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0)), 0), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0)), 0), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)]), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 683, 24608, 24663), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name", (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0))), (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0))), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0))), (("test/test.ml", 684, 24672, 24699), ("test/test.ml", 684, 24672, 24702), 0), [(("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0)], 0))]), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24702), 0), 0, 0), 0, (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 684, 24672, 24702), 0))], (Tag2 (0, [(((("name1", (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0))), (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0))), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0))), (("test/test.ml", 685, 24706, 24735), ("test/test.ml", 685, 24706, 24738), 0), [(("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0)], 0))]), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24738), 0), 0, 0), 0, (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 685, 24706, 24738), 0))], (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0))), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0), 0, 0), [(0, (Tag1 (Tag2 ("let process_", (("test/test.ml", 686, 24742, 24745), ("test/test.ml", 686, 24742, 24757), 0), 0)), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24758), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0))), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0))), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0))), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0), 0, 0), [(0, (Tag1 (Tag2 (" ( a", (("test/test.ml", 686, 24742, 24770), ("test/test.ml", 686, 24742, 24774), 0), 0)), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24775), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0))), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0))), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0))), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0), 0, 0), [(0, (Tag1 (Tag2 (":", (("test/test.ml", 686, 24742, 24786), ("test/test.ml", 686, 24742, 24787), 0), 0)), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24788), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0))), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0))), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0), 0, 0)); (0, (Tag1 (Tag2 (")=()\n", (("test/test.ml", 686, 24742, 24800), ("test/test.ml", 686, 24742, 24806), 0), 0)), (("test/test.ml", 686, 24742, 24799), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 686, 24742, 24807), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0)), 0), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0), 0, 0)), (("test/test.ml", 683, 24608, 24663), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 686, 24742, 24807), 1), 0, 0), 0, (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0))]), (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("decl_imp_core_type", (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0))), (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0))), (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0)), 0), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0)), 0), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0)), 0), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)]), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 683, 24608, 24663), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name", (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0))), (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0))), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0))), (("test/test.ml", 684, 24672, 24699), ("test/test.ml", 684, 24672, 24702), 0), [(("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0)], 0))]), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24702), 0), 0, 0), 0, (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 684, 24672, 24702), 0))], (Tag2 (0, [(((("name1", (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0))), (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0))), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0))), (("test/test.ml", 685, 24706, 24735), ("test/test.ml", 685, 24706, 24738), 0), [(("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0)], 0))]), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24738), 0), 0, 0), 0, (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 685, 24706, 24738), 0))], (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0))), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0), 0, 0), [(0, (Tag1 (Tag2 ("let process_", (("test/test.ml", 686, 24742, 24745), ("test/test.ml", 686, 24742, 24757), 0), 0)), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24758), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0))), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0))), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0))), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0), 0, 0), [(0, (Tag1 (Tag2 (" ( a", (("test/test.ml", 686, 24742, 24770), ("test/test.ml", 686, 24742, 24774), 0), 0)), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24775), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0))), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0))), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0))), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0), 0, 0), [(0, (Tag1 (Tag2 (":", (("test/test.ml", 686, 24742, 24786), ("test/test.ml", 686, 24742, 24787), 0), 0)), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24788), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0))), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0))), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0), 0, 0)); (0, (Tag1 (Tag2 (")=()\n", (("test/test.ml", 686, 24742, 24800), ("test/test.ml", 686, 24742, 24806), 0), 0)), (("test/test.ml", 686, 24742, 24799), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 686, 24742, 24807), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0)), 0), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0), 0, 0)), (("test/test.ml", 683, 24608, 24663), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 686, 24742, 24807), 1), 0, 0), 0, (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0))]))
("DEBUG:Pstr_value:", 0, [(((("decl_imp_core_type", (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0))), (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0))), (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0)), 0), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0)), 0), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0)), 0), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)]), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 683, 24608, 24663), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name", (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0))), (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0))), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0))), (("test/test.ml", 684, 24672, 24699), ("test/test.ml", 684, 24672, 24702), 0), [(("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0)], 0))]), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24702), 0), 0, 0), 0, (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 684, 24672, 24702), 0))], (Tag2 (0, [(((("name1", (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0))), (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0))), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0))), (("test/test.ml", 685, 24706, 24735), ("test/test.ml", 685, 24706, 24738), 0), [(("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0)], 0))]), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24738), 0), 0, 0), 0, (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 685, 24706, 24738), 0))], (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0))), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0), 0, 0), [(0, (Tag1 (Tag2 ("let process_", (("test/test.ml", 686, 24742, 24745), ("test/test.ml", 686, 24742, 24757), 0), 0)), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24758), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0))), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0))), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0))), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0), 0, 0), [(0, (Tag1 (Tag2 (" ( a", (("test/test.ml", 686, 24742, 24770), ("test/test.ml", 686, 24742, 24774), 0), 0)), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24775), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0))), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0))), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0))), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0), 0, 0), [(0, (Tag1 (Tag2 (":", (("test/test.ml", 686, 24742, 24786), ("test/test.ml", 686, 24742, 24787), 0), 0)), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24788), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0))), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0))), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0), 0, 0)); (0, (Tag1 (Tag2 (")=()\n", (("test/test.ml", 686, 24742, 24800), ("test/test.ml", 686, 24742, 24806), 0), 0)), (("test/test.ml", 686, 24742, 24799), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 686, 24742, 24807), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0)), 0), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0), 0, 0)), (("test/test.ml", 683, 24608, 24663), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 686, 24742, 24807), 1), 0, 0), 0, (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0))])
("DEBUG:value_binding.pat:", ((("decl_imp_core_type", (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0))), (("test/test.ml", 683, 24608, 24613), ("test/test.ml", 683, 24608, 24631), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0))), (("test/test.ml", 683, 24608, 24632), ("test/test.ml", 683, 24608, 24633), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type"), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0)), 0), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24644), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0)), 0), (("test/test.ml", 683, 24608, 24647), ("test/test.ml", 683, 24608, 24658), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0)), 0), (("test/test.ml", 683, 24608, 24659), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)]), (("test/test.ml", 683, 24608, 24635), ("test/test.ml", 683, 24608, 24662), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 683, 24608, 24663), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("name", (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0))), (("test/test.ml", 684, 24672, 24678), ("test/test.ml", 684, 24672, 24682), 0), 0, 0), (Tag5 ((((("emit_core_type"), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0))), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24699), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0))), (("test/test.ml", 684, 24672, 24699), ("test/test.ml", 684, 24672, 24702), 0), [(("test/test.ml", 684, 24672, 24700), ("test/test.ml", 684, 24672, 24701), 0)], 0))]), (("test/test.ml", 684, 24672, 24685), ("test/test.ml", 684, 24672, 24702), 0), 0, 0), 0, (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 684, 24672, 24702), 0))], (Tag2 (0, [(((("name1", (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0))), (("test/test.ml", 685, 24706, 24712), ("test/test.ml", 685, 24706, 24717), 0), 0, 0), (Tag5 ((((("emit_core_type2"), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0))), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24735), 0), 0, 0), [(0, (((("a"), (("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0))), (("test/test.ml", 685, 24706, 24735), ("test/test.ml", 685, 24706, 24738), 0), [(("test/test.ml", 685, 24706, 24736), ("test/test.ml", 685, 24706, 24737), 0)], 0))]), (("test/test.ml", 685, 24706, 24720), ("test/test.ml", 685, 24706, 24738), 0), 0, 0), 0, (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 685, 24706, 24738), 0))], (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0))), (("test/test.ml", 686, 24742, 24759), ("test/test.ml", 686, 24742, 24760), 0), 0, 0), [(0, (Tag1 (Tag2 ("let process_", (("test/test.ml", 686, 24742, 24745), ("test/test.ml", 686, 24742, 24757), 0), 0)), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24758), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0))), (("test/test.ml", 686, 24742, 24767), ("test/test.ml", 686, 24742, 24768), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0))), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24766), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0))), (("test/test.ml", 686, 24742, 24776), ("test/test.ml", 686, 24742, 24777), 0), 0, 0), [(0, (Tag1 (Tag2 (" ( a", (("test/test.ml", 686, 24742, 24770), ("test/test.ml", 686, 24742, 24774), 0), 0)), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24775), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0))), (("test/test.ml", 686, 24742, 24783), ("test/test.ml", 686, 24742, 24784), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0))), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24782), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0))), (("test/test.ml", 686, 24742, 24789), ("test/test.ml", 686, 24742, 24790), 0), 0, 0), [(0, (Tag1 (Tag2 (":", (("test/test.ml", 686, 24742, 24786), ("test/test.ml", 686, 24742, 24787), 0), 0)), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24788), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0))), (("test/test.ml", 686, 24742, 24797), ("test/test.ml", 686, 24742, 24798), 0), 0, 0), [(0, (((("name1"), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0))), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24796), 0), 0, 0)); (0, (Tag1 (Tag2 (")=()\n", (("test/test.ml", 686, 24742, 24800), ("test/test.ml", 686, 24742, 24806), 0), 0)), (("test/test.ml", 686, 24742, 24799), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24791), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24785), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24778), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24769), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24761), ("test/test.ml", 686, 24742, 24807), 0), 0, 0))]), (("test/test.ml", 686, 24742, 24744), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 685, 24706, 24708), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 684, 24672, 24674), ("test/test.ml", 686, 24742, 24807), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0)), 0), (("test/test.ml", 683, 24608, 24664), ("test/test.ml", 683, 24608, 24670), 0), 0, 0)), (("test/test.ml", 683, 24608, 24663), ("test/test.ml", 686, 24742, 24807), 0), 0, 0)), (("test/test.ml", 683, 24608, 24631), ("test/test.ml", 686, 24742, 24807), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 683, 24608, 24608), ("test/test.ml", 686, 24742, 24807), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("decl_imp_core_type_list", (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0))), (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0))), (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0)), 0), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0)), 0), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0)), 0), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)]), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 688, 24809, 24877), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0))), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0))), (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0), 0, 0); ((("b", (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0))), (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0), 0, 0); ((("n", (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0))), (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0), 0, 0)]), (("test/test.ml", 690, 24902, 24906), ("test/test.ml", 690, 24902, 24913), 0), [(("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24912), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0))), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0)), 0), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 692, 24934, 24947), ("test/test.ml", 692, 24934, 24947), 0), 0)), (("test/test.ml", 692, 24934, 24946), ("test/test.ml", 692, 24934, 24948), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 693, 24949, 24957), ("test/test.ml", 693, 24949, 24959), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0), 0, 0); ((("t", (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0))), (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0), 0, 0)]), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 1), 0, 0)))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0))), (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0), 0, 0), (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0))), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0))), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0), 0, 0); (((("b"), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0))), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0))), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0))), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 694, 24965, 25010), ("test/test.ml", 694, 24965, 25011), 0), 0, 0))]), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25011), 0), 0, 0)]), (("test/test.ml", 694, 24965, 25003), ("test/test.ml", 694, 24965, 25012), 0), [(("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25011), 0)], 0))]), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25012), 0), 0, 0), 0, (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 694, 24965, 25012), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0))), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0))), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 695, 25017, 25033), ("test/test.ml", 695, 25017, 25033), 0), 0)), (("test/test.ml", 695, 25017, 25032), ("test/test.ml", 695, 25017, 25034), 0), 0, 0))]), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25034), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0))), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0), 0, 0), [(0, (Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0))), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0))), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0), 0, 0); (((("b"), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0))), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0), 0, 0); (((("n"), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0))), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0), 0, 0)]), (("test/test.ml", 696, 25040, 25067), ("test/test.ml", 696, 25040, 25075), 0), [(("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25074), 0)], 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25075), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0))), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 696, 25040, 25079), ("test/test.ml", 696, 25040, 25080), 0), 0)), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25081), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0))), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25086), 0), 0, 0), ((Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0))), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0))), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0), 0, 0); (((("b"), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0))), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0), 0, 0); (((("n"), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0))), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0), 0, 0)]), (("test/test.ml", 698, 25098, 25125), ("test/test.ml", 698, 25098, 25133), 0), [(("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25132), 0)], 0))]), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))), (("test/test.ml", 695, 25017, 25023), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 691, 24917, 24921), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 689, 24887, 24889), ("test/test.ml", 698, 25098, 25133), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0)), 0), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0), 0, 0)), (("test/test.ml", 688, 24809, 24877), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 698, 25098, 25133), 1), 0, 0), 0, (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0))]), (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("decl_imp_core_type_list", (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0))), (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0))), (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0)), 0), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0)), 0), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0)), 0), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)]), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 688, 24809, 24877), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0))), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0))), (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0), 0, 0); ((("b", (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0))), (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0), 0, 0); ((("n", (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0))), (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0), 0, 0)]), (("test/test.ml", 690, 24902, 24906), ("test/test.ml", 690, 24902, 24913), 0), [(("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24912), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0))), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0)), 0), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 692, 24934, 24947), ("test/test.ml", 692, 24934, 24947), 0), 0)), (("test/test.ml", 692, 24934, 24946), ("test/test.ml", 692, 24934, 24948), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 693, 24949, 24957), ("test/test.ml", 693, 24949, 24959), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0), 0, 0); ((("t", (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0))), (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0), 0, 0)]), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 1), 0, 0)))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0))), (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0), 0, 0), (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0))), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0))), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0), 0, 0); (((("b"), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0))), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0))), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0))), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 694, 24965, 25010), ("test/test.ml", 694, 24965, 25011), 0), 0, 0))]), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25011), 0), 0, 0)]), (("test/test.ml", 694, 24965, 25003), ("test/test.ml", 694, 24965, 25012), 0), [(("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25011), 0)], 0))]), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25012), 0), 0, 0), 0, (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 694, 24965, 25012), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0))), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0))), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 695, 25017, 25033), ("test/test.ml", 695, 25017, 25033), 0), 0)), (("test/test.ml", 695, 25017, 25032), ("test/test.ml", 695, 25017, 25034), 0), 0, 0))]), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25034), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0))), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0), 0, 0), [(0, (Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0))), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0))), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0), 0, 0); (((("b"), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0))), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0), 0, 0); (((("n"), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0))), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0), 0, 0)]), (("test/test.ml", 696, 25040, 25067), ("test/test.ml", 696, 25040, 25075), 0), [(("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25074), 0)], 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25075), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0))), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 696, 25040, 25079), ("test/test.ml", 696, 25040, 25080), 0), 0)), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25081), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0))), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25086), 0), 0, 0), ((Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0))), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0))), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0), 0, 0); (((("b"), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0))), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0), 0, 0); (((("n"), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0))), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0), 0, 0)]), (("test/test.ml", 698, 25098, 25125), ("test/test.ml", 698, 25098, 25133), 0), [(("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25132), 0)], 0))]), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))), (("test/test.ml", 695, 25017, 25023), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 691, 24917, 24921), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 689, 24887, 24889), ("test/test.ml", 698, 25098, 25133), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0)), 0), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0), 0, 0)), (("test/test.ml", 688, 24809, 24877), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 698, 25098, 25133), 1), 0, 0), 0, (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0))]))
("DEBUG:Pstr_value:", 1, [(((("decl_imp_core_type_list", (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0))), (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0))), (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0)), 0), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0)), 0), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0)), 0), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)]), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 688, 24809, 24877), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0))), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0))), (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0), 0, 0); ((("b", (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0))), (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0), 0, 0); ((("n", (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0))), (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0), 0, 0)]), (("test/test.ml", 690, 24902, 24906), ("test/test.ml", 690, 24902, 24913), 0), [(("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24912), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0))), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0)), 0), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 692, 24934, 24947), ("test/test.ml", 692, 24934, 24947), 0), 0)), (("test/test.ml", 692, 24934, 24946), ("test/test.ml", 692, 24934, 24948), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 693, 24949, 24957), ("test/test.ml", 693, 24949, 24959), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0), 0, 0); ((("t", (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0))), (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0), 0, 0)]), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 1), 0, 0)))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0))), (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0), 0, 0), (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0))), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0))), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0), 0, 0); (((("b"), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0))), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0))), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0))), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 694, 24965, 25010), ("test/test.ml", 694, 24965, 25011), 0), 0, 0))]), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25011), 0), 0, 0)]), (("test/test.ml", 694, 24965, 25003), ("test/test.ml", 694, 24965, 25012), 0), [(("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25011), 0)], 0))]), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25012), 0), 0, 0), 0, (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 694, 24965, 25012), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0))), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0))), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 695, 25017, 25033), ("test/test.ml", 695, 25017, 25033), 0), 0)), (("test/test.ml", 695, 25017, 25032), ("test/test.ml", 695, 25017, 25034), 0), 0, 0))]), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25034), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0))), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0), 0, 0), [(0, (Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0))), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0))), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0), 0, 0); (((("b"), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0))), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0), 0, 0); (((("n"), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0))), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0), 0, 0)]), (("test/test.ml", 696, 25040, 25067), ("test/test.ml", 696, 25040, 25075), 0), [(("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25074), 0)], 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25075), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0))), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 696, 25040, 25079), ("test/test.ml", 696, 25040, 25080), 0), 0)), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25081), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0))), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25086), 0), 0, 0), ((Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0))), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0))), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0), 0, 0); (((("b"), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0))), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0), 0, 0); (((("n"), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0))), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0), 0, 0)]), (("test/test.ml", 698, 25098, 25125), ("test/test.ml", 698, 25098, 25133), 0), [(("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25132), 0)], 0))]), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))), (("test/test.ml", 695, 25017, 25023), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 691, 24917, 24921), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 689, 24887, 24889), ("test/test.ml", 698, 25098, 25133), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0)), 0), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0), 0, 0)), (("test/test.ml", 688, 24809, 24877), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 698, 25098, 25133), 1), 0, 0), 0, (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0))])
("DEBUG:value_binding.pat:", ((("decl_imp_core_type_list", (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0))), (("test/test.ml", 688, 24809, 24817), ("test/test.ml", 688, 24809, 24840), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0))), (("test/test.ml", 688, 24809, 24841), ("test/test.ml", 688, 24809, 24842), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0)), 0), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24858), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0)), 0), (("test/test.ml", 688, 24809, 24861), ("test/test.ml", 688, 24809, 24872), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0)), 0), (("test/test.ml", 688, 24809, 24873), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)]), (("test/test.ml", 688, 24809, 24844), ("test/test.ml", 688, 24809, 24876), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 688, 24809, 24877), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0))), (("test/test.ml", 689, 24887, 24895), ("test/test.ml", 689, 24887, 24896), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0))), (("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24908), 0), 0, 0); ((("b", (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0))), (("test/test.ml", 690, 24902, 24909), ("test/test.ml", 690, 24902, 24910), 0), 0, 0); ((("n", (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0))), (("test/test.ml", 690, 24902, 24911), ("test/test.ml", 690, 24902, 24912), 0), 0, 0)]), (("test/test.ml", 690, 24902, 24906), ("test/test.ml", 690, 24902, 24913), 0), [(("test/test.ml", 690, 24902, 24907), ("test/test.ml", 690, 24902, 24912), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0))), (("test/test.ml", 691, 24917, 24927), ("test/test.ml", 691, 24917, 24928), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0)), 0), (("test/test.ml", 692, 24934, 24940), ("test/test.ml", 692, 24934, 24942), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 692, 24934, 24947), ("test/test.ml", 692, 24934, 24947), 0), 0)), (("test/test.ml", 692, 24934, 24946), ("test/test.ml", 692, 24934, 24948), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 693, 24949, 24957), ("test/test.ml", 693, 24949, 24959), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24956), 0), 0, 0); ((("t", (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0))), (("test/test.ml", 693, 24949, 24960), ("test/test.ml", 693, 24949, 24961), 0), 0, 0)]), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 1), 0, 0)))), (("test/test.ml", 693, 24949, 24955), ("test/test.ml", 693, 24949, 24961), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0))), (("test/test.ml", 694, 24965, 24975), ("test/test.ml", 694, 24965, 24977), 0), 0, 0), (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0))), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25003), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0))), (("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25005), 0), 0, 0); (((("b"), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0))), (("test/test.ml", 694, 24965, 25006), ("test/test.ml", 694, 24965, 25007), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0))), (("test/test.ml", 694, 24965, 25009), ("test/test.ml", 694, 24965, 25010), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0))), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25009), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 694, 24965, 25010), ("test/test.ml", 694, 24965, 25011), 0), 0, 0))]), (("test/test.ml", 694, 24965, 25008), ("test/test.ml", 694, 24965, 25011), 0), 0, 0)]), (("test/test.ml", 694, 24965, 25003), ("test/test.ml", 694, 24965, 25012), 0), [(("test/test.ml", 694, 24965, 25004), ("test/test.ml", 694, 24965, 25011), 0)], 0))]), (("test/test.ml", 694, 24965, 24980), ("test/test.ml", 694, 24965, 25012), 0), 0, 0), 0, (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 694, 24965, 25012), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0))), (("test/test.ml", 695, 25017, 25029), ("test/test.ml", 695, 25017, 25031), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0))), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25028), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 695, 25017, 25033), ("test/test.ml", 695, 25017, 25033), 0), 0)), (("test/test.ml", 695, 25017, 25032), ("test/test.ml", 695, 25017, 25034), 0), 0, 0))]), (("test/test.ml", 695, 25017, 25026), ("test/test.ml", 695, 25017, 25034), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0))), (("test/test.ml", 696, 25040, 25076), ("test/test.ml", 696, 25040, 25077), 0), 0, 0), [(0, (Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0))), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25066), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0))), (("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25069), 0), 0, 0); (((("b"), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0))), (("test/test.ml", 696, 25040, 25071), ("test/test.ml", 696, 25040, 25072), 0), 0, 0); (((("n"), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0))), (("test/test.ml", 696, 25040, 25073), ("test/test.ml", 696, 25040, 25074), 0), 0, 0)]), (("test/test.ml", 696, 25040, 25067), ("test/test.ml", 696, 25040, 25075), 0), [(("test/test.ml", 696, 25040, 25068), ("test/test.ml", 696, 25040, 25074), 0)], 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25075), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0))), (("test/test.ml", 696, 25040, 25082), ("test/test.ml", 696, 25040, 25083), 0), 0, 0), [(0, (Tag1 (Tag2 (" ", (("test/test.ml", 696, 25040, 25079), ("test/test.ml", 696, 25040, 25080), 0), 0)), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25081), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0))), (("test/test.ml", 696, 25040, 25084), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25078), ("test/test.ml", 696, 25040, 25086), 0), 0, 0))]), (("test/test.ml", 696, 25040, 25048), ("test/test.ml", 696, 25040, 25086), 0), 0, 0), ((Tag5 ((((("decl_imp_core_type"), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0))), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25124), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0))), (("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25127), 0), 0, 0); (((("b"), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0))), (("test/test.ml", 698, 25098, 25129), ("test/test.ml", 698, 25098, 25130), 0), 0, 0); (((("n"), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0))), (("test/test.ml", 698, 25098, 25131), ("test/test.ml", 698, 25098, 25132), 0), 0, 0)]), (("test/test.ml", 698, 25098, 25125), ("test/test.ml", 698, 25098, 25133), 0), [(("test/test.ml", 698, 25098, 25126), ("test/test.ml", 698, 25098, 25132), 0)], 0))]), (("test/test.ml", 698, 25098, 25106), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))), (("test/test.ml", 695, 25017, 25023), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 694, 24965, 24971), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 691, 24917, 24921), ("test/test.ml", 698, 25098, 25133), 0), 0, 0))]), (("test/test.ml", 689, 24887, 24889), ("test/test.ml", 698, 25098, 25133), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0)), 0), (("test/test.ml", 688, 24809, 24878), ("test/test.ml", 688, 24809, 24884), 0), 0, 0)), (("test/test.ml", 688, 24809, 24877), ("test/test.ml", 698, 25098, 25133), 0), 0, 0)), (("test/test.ml", 688, 24809, 24840), ("test/test.ml", 698, 25098, 25133), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 688, 24809, 24809), ("test/test.ml", 698, 25098, 25133), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("imp_core_type_list", (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0))), (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0))), (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0)), 0), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0)), 0), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0)), 0), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)]), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 700, 25135, 25198), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0))), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0))), (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0), 0, 0); ((("b", (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0))), (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0), 0, 0); ((("n", (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0))), (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0), 0, 0)]), (("test/test.ml", 702, 25223, 25227), ("test/test.ml", 702, 25223, 25234), 0), [(("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25233), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0))), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0)), 0), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 704, 25255, 25268), ("test/test.ml", 704, 25255, 25268), 0), 0)), (("test/test.ml", 704, 25255, 25267), ("test/test.ml", 704, 25255, 25269), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 705, 25270, 25278), ("test/test.ml", 705, 25270, 25280), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0), 0, 0); ((("t", (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0))), (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0), 0, 0)]), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 1), 0, 0)))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0))), (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0), 0, 0), (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0))), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0))), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0), 0, 0); (((("b"), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0))), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0))), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0))), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 706, 25286, 25326), ("test/test.ml", 706, 25286, 25327), 0), 0, 0))]), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25327), 0), 0, 0)]), (("test/test.ml", 706, 25286, 25319), ("test/test.ml", 706, 25286, 25328), 0), [(("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25327), 0)], 0))]), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25328), 0), 0, 0), 0, (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 706, 25286, 25328), 0))], (Tag2 (0, [(((("one", (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0))), (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0), 0, 0), (Tag5 ((((("imp_core_type"), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0))), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0))), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0), 0, 0); (((("b"), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0))), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0), 0, 0); (((("n"), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0))), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0), 0, 0)]), (("test/test.ml", 707, 25333, 25363), ("test/test.ml", 707, 25333, 25372), 0), [(("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25370), 0)], 0))]), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25372), 0), 0, 0), 0, (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 707, 25333, 25372), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0))), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0))), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 708, 25376, 25392), ("test/test.ml", 708, 25376, 25392), 0), 0)), (("test/test.ml", 708, 25376, 25391), ("test/test.ml", 708, 25376, 25393), 0), 0, 0))]), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25393), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0))), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0), 0, 0), [(0, (((("one"), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0))), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0))), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 709, 25399, 25414), ("test/test.ml", 709, 25399, 25415), 0), 0)), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25416), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0))), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25421), 0), 0, 0), ((((("one"), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0))), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))), (("test/test.ml", 708, 25376, 25382), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 703, 25238, 25242), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 701, 25208, 25210), ("test/test.ml", 711, 25433, 25444), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0)), 0), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0), 0, 0)), (("test/test.ml", 700, 25135, 25198), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 711, 25433, 25444), 1), 0, 0), 0, (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0))]), (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("imp_core_type_list", (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0))), (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0))), (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0)), 0), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0)), 0), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0)), 0), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)]), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 700, 25135, 25198), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0))), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0))), (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0), 0, 0); ((("b", (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0))), (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0), 0, 0); ((("n", (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0))), (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0), 0, 0)]), (("test/test.ml", 702, 25223, 25227), ("test/test.ml", 702, 25223, 25234), 0), [(("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25233), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0))), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0)), 0), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 704, 25255, 25268), ("test/test.ml", 704, 25255, 25268), 0), 0)), (("test/test.ml", 704, 25255, 25267), ("test/test.ml", 704, 25255, 25269), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 705, 25270, 25278), ("test/test.ml", 705, 25270, 25280), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0), 0, 0); ((("t", (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0))), (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0), 0, 0)]), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 1), 0, 0)))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0))), (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0), 0, 0), (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0))), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0))), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0), 0, 0); (((("b"), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0))), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0))), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0))), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 706, 25286, 25326), ("test/test.ml", 706, 25286, 25327), 0), 0, 0))]), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25327), 0), 0, 0)]), (("test/test.ml", 706, 25286, 25319), ("test/test.ml", 706, 25286, 25328), 0), [(("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25327), 0)], 0))]), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25328), 0), 0, 0), 0, (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 706, 25286, 25328), 0))], (Tag2 (0, [(((("one", (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0))), (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0), 0, 0), (Tag5 ((((("imp_core_type"), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0))), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0))), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0), 0, 0); (((("b"), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0))), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0), 0, 0); (((("n"), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0))), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0), 0, 0)]), (("test/test.ml", 707, 25333, 25363), ("test/test.ml", 707, 25333, 25372), 0), [(("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25370), 0)], 0))]), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25372), 0), 0, 0), 0, (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 707, 25333, 25372), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0))), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0))), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 708, 25376, 25392), ("test/test.ml", 708, 25376, 25392), 0), 0)), (("test/test.ml", 708, 25376, 25391), ("test/test.ml", 708, 25376, 25393), 0), 0, 0))]), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25393), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0))), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0), 0, 0), [(0, (((("one"), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0))), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0))), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 709, 25399, 25414), ("test/test.ml", 709, 25399, 25415), 0), 0)), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25416), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0))), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25421), 0), 0, 0), ((((("one"), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0))), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))), (("test/test.ml", 708, 25376, 25382), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 703, 25238, 25242), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 701, 25208, 25210), ("test/test.ml", 711, 25433, 25444), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0)), 0), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0), 0, 0)), (("test/test.ml", 700, 25135, 25198), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 711, 25433, 25444), 1), 0, 0), 0, (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0))]))
("DEBUG:Pstr_value:", 1, [(((("imp_core_type_list", (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0))), (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0))), (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0)), 0), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0)), 0), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0)), 0), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)]), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 700, 25135, 25198), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0))), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0))), (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0), 0, 0); ((("b", (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0))), (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0), 0, 0); ((("n", (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0))), (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0), 0, 0)]), (("test/test.ml", 702, 25223, 25227), ("test/test.ml", 702, 25223, 25234), 0), [(("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25233), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0))), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0)), 0), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 704, 25255, 25268), ("test/test.ml", 704, 25255, 25268), 0), 0)), (("test/test.ml", 704, 25255, 25267), ("test/test.ml", 704, 25255, 25269), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 705, 25270, 25278), ("test/test.ml", 705, 25270, 25280), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0), 0, 0); ((("t", (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0))), (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0), 0, 0)]), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 1), 0, 0)))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0))), (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0), 0, 0), (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0))), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0))), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0), 0, 0); (((("b"), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0))), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0))), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0))), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 706, 25286, 25326), ("test/test.ml", 706, 25286, 25327), 0), 0, 0))]), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25327), 0), 0, 0)]), (("test/test.ml", 706, 25286, 25319), ("test/test.ml", 706, 25286, 25328), 0), [(("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25327), 0)], 0))]), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25328), 0), 0, 0), 0, (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 706, 25286, 25328), 0))], (Tag2 (0, [(((("one", (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0))), (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0), 0, 0), (Tag5 ((((("imp_core_type"), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0))), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0))), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0), 0, 0); (((("b"), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0))), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0), 0, 0); (((("n"), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0))), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0), 0, 0)]), (("test/test.ml", 707, 25333, 25363), ("test/test.ml", 707, 25333, 25372), 0), [(("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25370), 0)], 0))]), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25372), 0), 0, 0), 0, (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 707, 25333, 25372), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0))), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0))), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 708, 25376, 25392), ("test/test.ml", 708, 25376, 25392), 0), 0)), (("test/test.ml", 708, 25376, 25391), ("test/test.ml", 708, 25376, 25393), 0), 0, 0))]), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25393), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0))), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0), 0, 0), [(0, (((("one"), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0))), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0))), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 709, 25399, 25414), ("test/test.ml", 709, 25399, 25415), 0), 0)), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25416), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0))), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25421), 0), 0, 0), ((((("one"), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0))), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))), (("test/test.ml", 708, 25376, 25382), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 703, 25238, 25242), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 701, 25208, 25210), ("test/test.ml", 711, 25433, 25444), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0)), 0), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0), 0, 0)), (("test/test.ml", 700, 25135, 25198), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 711, 25433, 25444), 1), 0, 0), 0, (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0))])
("DEBUG:value_binding.pat:", ((("imp_core_type_list", (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0))), (("test/test.ml", 700, 25135, 25143), ("test/test.ml", 700, 25135, 25161), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0))), (("test/test.ml", 700, 25135, 25162), ("test/test.ml", 700, 25135, 25163), 0), 0, 0), (Tag2 ([(Tag3 ((("core_type_list"), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0)), 0), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25179), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0)), 0), (("test/test.ml", 700, 25135, 25182), ("test/test.ml", 700, 25135, 25193), 0), 0, 0); (Tag3 ((("int"), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0)), 0), (("test/test.ml", 700, 25135, 25194), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)]), (("test/test.ml", 700, 25135, 25165), ("test/test.ml", 700, 25135, 25197), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 700, 25135, 25198), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0))), (("test/test.ml", 701, 25208, 25216), ("test/test.ml", 701, 25208, 25217), 0), 0, 0), [((Tag4 ([((("a", (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0))), (("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25229), 0), 0, 0); ((("b", (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0))), (("test/test.ml", 702, 25223, 25230), ("test/test.ml", 702, 25223, 25231), 0), 0, 0); ((("n", (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0))), (("test/test.ml", 702, 25223, 25232), ("test/test.ml", 702, 25223, 25233), 0), 0, 0)]), (("test/test.ml", 702, 25223, 25227), ("test/test.ml", 702, 25223, 25234), 0), [(("test/test.ml", 702, 25223, 25228), ("test/test.ml", 702, 25223, 25233), 0)], 0), 0, (Tag6 ((((("a"), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0))), (("test/test.ml", 703, 25238, 25248), ("test/test.ml", 703, 25238, 25249), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0)), 0), (("test/test.ml", 704, 25255, 25261), ("test/test.ml", 704, 25255, 25263), 0), 0, 0), 0, (Tag1 (Tag2 ("", (("test/test.ml", 704, 25255, 25268), ("test/test.ml", 704, 25255, 25268), 0), 0)), (("test/test.ml", 704, 25255, 25267), ("test/test.ml", 704, 25255, 25269), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 705, 25270, 25278), ("test/test.ml", 705, 25270, 25280), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25277), 0), 0, 0); ((("t", (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0))), (("test/test.ml", 705, 25270, 25281), ("test/test.ml", 705, 25270, 25282), 0), 0, 0)]), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 1), 0, 0)))), (("test/test.ml", 705, 25270, 25276), ("test/test.ml", 705, 25270, 25282), 0), 0, 0), 0, (Tag2 (0, [(((("tt", (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0))), (("test/test.ml", 706, 25286, 25296), ("test/test.ml", 706, 25286, 25298), 0), 0, 0), (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0))), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25319), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0))), (("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25321), 0), 0, 0); (((("b"), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0))), (("test/test.ml", 706, 25286, 25322), ("test/test.ml", 706, 25286, 25323), 0), 0, 0); (Tag5 ((((("+"), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0))), (("test/test.ml", 706, 25286, 25325), ("test/test.ml", 706, 25286, 25326), 0), 0, 0), [(0, (((("n"), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0))), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25325), 0), 0, 0)); (0, (Tag1 (["1"]), (("test/test.ml", 706, 25286, 25326), ("test/test.ml", 706, 25286, 25327), 0), 0, 0))]), (("test/test.ml", 706, 25286, 25324), ("test/test.ml", 706, 25286, 25327), 0), 0, 0)]), (("test/test.ml", 706, 25286, 25319), ("test/test.ml", 706, 25286, 25328), 0), [(("test/test.ml", 706, 25286, 25320), ("test/test.ml", 706, 25286, 25327), 0)], 0))]), (("test/test.ml", 706, 25286, 25301), ("test/test.ml", 706, 25286, 25328), 0), 0, 0), 0, (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 706, 25286, 25328), 0))], (Tag2 (0, [(((("one", (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0))), (("test/test.ml", 707, 25333, 25343), ("test/test.ml", 707, 25333, 25346), 0), 0, 0), (Tag5 ((((("imp_core_type"), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0))), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25362), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0))), (("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25365), 0), 0, 0); (((("b"), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0))), (("test/test.ml", 707, 25333, 25367), ("test/test.ml", 707, 25333, 25368), 0), 0, 0); (((("n"), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0))), (("test/test.ml", 707, 25333, 25369), ("test/test.ml", 707, 25333, 25370), 0), 0, 0)]), (("test/test.ml", 707, 25333, 25363), ("test/test.ml", 707, 25333, 25372), 0), [(("test/test.ml", 707, 25333, 25364), ("test/test.ml", 707, 25333, 25370), 0)], 0))]), (("test/test.ml", 707, 25333, 25349), ("test/test.ml", 707, 25333, 25372), 0), 0, 0), 0, (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 707, 25333, 25372), 0))], (Tag15 ((Tag5 ((((("!="), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0))), (("test/test.ml", 708, 25376, 25388), ("test/test.ml", 708, 25376, 25390), 0), 0, 0), [(0, (((("tt"), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0))), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25387), 0), 0, 0)); (0, (Tag1 (Tag2 ("", (("test/test.ml", 708, 25376, 25392), ("test/test.ml", 708, 25376, 25392), 0), 0)), (("test/test.ml", 708, 25376, 25391), ("test/test.ml", 708, 25376, 25393), 0), 0, 0))]), (("test/test.ml", 708, 25376, 25385), ("test/test.ml", 708, 25376, 25393), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0))), (("test/test.ml", 709, 25399, 25411), ("test/test.ml", 709, 25399, 25412), 0), 0, 0), [(0, (((("one"), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0))), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25410), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0))), (("test/test.ml", 709, 25399, 25417), ("test/test.ml", 709, 25399, 25418), 0), 0, 0), [(0, (Tag1 (Tag2 (",", (("test/test.ml", 709, 25399, 25414), ("test/test.ml", 709, 25399, 25415), 0), 0)), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25416), 0), 0, 0)); (0, (((("tt"), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0))), (("test/test.ml", 709, 25399, 25419), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25413), ("test/test.ml", 709, 25399, 25421), 0), 0, 0))]), (("test/test.ml", 709, 25399, 25407), ("test/test.ml", 709, 25399, 25421), 0), 0, 0), ((((("one"), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0))), (("test/test.ml", 711, 25433, 25441), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))), (("test/test.ml", 708, 25376, 25382), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 707, 25333, 25339), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 706, 25286, 25292), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 703, 25238, 25242), ("test/test.ml", 711, 25433, 25444), 0), 0, 0))]), (("test/test.ml", 701, 25208, 25210), ("test/test.ml", 711, 25433, 25444), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0)), 0), (("test/test.ml", 700, 25135, 25199), ("test/test.ml", 700, 25135, 25205), 0), 0, 0)), (("test/test.ml", 700, 25135, 25198), ("test/test.ml", 711, 25433, 25444), 0), 0, 0)), (("test/test.ml", 700, 25135, 25161), ("test/test.ml", 711, 25433, 25444), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 700, 25135, 25135), ("test/test.ml", 711, 25433, 25444), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("emit_constructor_arguments", (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0))), (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0))), (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0), 0, 0); ((("x", (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0))), (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0), 0, 0); ((("s", (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0))), (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0), 0, 0)]), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 713, 25446, 25486), 0), [(("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25485), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0))), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25526), 0)), ((0, ((("a", (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0))), (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0), 0, 0)))), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25528), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0))), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0), 0, 0), [(0, (Tag1 (Tag2 ("| ", (("test/test.ml", 716, 25532, 25537), ("test/test.ml", 716, 25532, 25539), 0), 0)), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25540), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0))), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0))), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0))), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0), 0, 0), [(0, (Tag1 (Tag2 (" (", (("test/test.ml", 716, 25532, 25551), ("test/test.ml", 716, 25532, 25553), 0), 0)), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25554), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0))), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0))), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0))), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0))), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25582), ("test/test.ml", 716, 25532, 25583), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25577), ("test/test.ml", 716, 25532, 25584), 0), [(("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25583), 0)], 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25585), 0), [(("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25584), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0))), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0), 0, 0), [(0, (Tag1 (Tag2 (") -> ", (("test/test.ml", 716, 25532, 25590), ("test/test.ml", 716, 25532, 25595), 0), 0)), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25596), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0))), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_types (", (("test/test.ml", 716, 25532, 25600), ("test/test.ml", 716, 25532, 25616), 0), 0)), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25617), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0))), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0), 0, 0), [(0, (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0))), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0))), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0))), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25644), ("test/test.ml", 716, 25532, 25645), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25639), ("test/test.ml", 716, 25532, 25646), 0), [(("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25645), 0)], 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25646), 0), 0, 0)); (0, (Tag1 (Tag2 ("))", (("test/test.ml", 716, 25532, 25649), ("test/test.ml", 716, 25532, 25651), 0), 0)), (("test/test.ml", 716, 25532, 25648), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 714, 25496, 25498), ("test/test.ml", 716, 25532, 25652), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0)), 0), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0), 0, 0)), (("test/test.ml", 713, 25446, 25486), ("test/test.ml", 716, 25532, 25652), 0), 0, 0)), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 716, 25532, 25652), 1), 0, 0), 0, (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0))]), (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("emit_constructor_arguments", (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0))), (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0))), (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0), 0, 0); ((("x", (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0))), (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0), 0, 0); ((("s", (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0))), (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0), 0, 0)]), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 713, 25446, 25486), 0), [(("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25485), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0))), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25526), 0)), ((0, ((("a", (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0))), (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0), 0, 0)))), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25528), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0))), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0), 0, 0), [(0, (Tag1 (Tag2 ("| ", (("test/test.ml", 716, 25532, 25537), ("test/test.ml", 716, 25532, 25539), 0), 0)), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25540), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0))), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0))), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0))), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0), 0, 0), [(0, (Tag1 (Tag2 (" (", (("test/test.ml", 716, 25532, 25551), ("test/test.ml", 716, 25532, 25553), 0), 0)), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25554), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0))), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0))), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0))), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0))), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25582), ("test/test.ml", 716, 25532, 25583), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25577), ("test/test.ml", 716, 25532, 25584), 0), [(("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25583), 0)], 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25585), 0), [(("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25584), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0))), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0), 0, 0), [(0, (Tag1 (Tag2 (") -> ", (("test/test.ml", 716, 25532, 25590), ("test/test.ml", 716, 25532, 25595), 0), 0)), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25596), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0))), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_types (", (("test/test.ml", 716, 25532, 25600), ("test/test.ml", 716, 25532, 25616), 0), 0)), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25617), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0))), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0), 0, 0), [(0, (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0))), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0))), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0))), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25644), ("test/test.ml", 716, 25532, 25645), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25639), ("test/test.ml", 716, 25532, 25646), 0), [(("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25645), 0)], 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25646), 0), 0, 0)); (0, (Tag1 (Tag2 ("))", (("test/test.ml", 716, 25532, 25649), ("test/test.ml", 716, 25532, 25651), 0), 0)), (("test/test.ml", 716, 25532, 25648), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 714, 25496, 25498), ("test/test.ml", 716, 25532, 25652), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0)), 0), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0), 0, 0)), (("test/test.ml", 713, 25446, 25486), ("test/test.ml", 716, 25532, 25652), 0), 0, 0)), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 716, 25532, 25652), 1), 0, 0), 0, (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0))]))
("DEBUG:Pstr_value:", 0, [(((("emit_constructor_arguments", (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0))), (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0))), (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0), 0, 0); ((("x", (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0))), (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0), 0, 0); ((("s", (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0))), (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0), 0, 0)]), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 713, 25446, 25486), 0), [(("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25485), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0))), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25526), 0)), ((0, ((("a", (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0))), (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0), 0, 0)))), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25528), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0))), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0), 0, 0), [(0, (Tag1 (Tag2 ("| ", (("test/test.ml", 716, 25532, 25537), ("test/test.ml", 716, 25532, 25539), 0), 0)), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25540), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0))), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0))), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0))), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0), 0, 0), [(0, (Tag1 (Tag2 (" (", (("test/test.ml", 716, 25532, 25551), ("test/test.ml", 716, 25532, 25553), 0), 0)), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25554), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0))), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0))), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0))), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0))), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25582), ("test/test.ml", 716, 25532, 25583), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25577), ("test/test.ml", 716, 25532, 25584), 0), [(("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25583), 0)], 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25585), 0), [(("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25584), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0))), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0), 0, 0), [(0, (Tag1 (Tag2 (") -> ", (("test/test.ml", 716, 25532, 25590), ("test/test.ml", 716, 25532, 25595), 0), 0)), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25596), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0))), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_types (", (("test/test.ml", 716, 25532, 25600), ("test/test.ml", 716, 25532, 25616), 0), 0)), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25617), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0))), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0), 0, 0), [(0, (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0))), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0))), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0))), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25644), ("test/test.ml", 716, 25532, 25645), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25639), ("test/test.ml", 716, 25532, 25646), 0), [(("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25645), 0)], 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25646), 0), 0, 0)); (0, (Tag1 (Tag2 ("))", (("test/test.ml", 716, 25532, 25649), ("test/test.ml", 716, 25532, 25651), 0), 0)), (("test/test.ml", 716, 25532, 25648), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 714, 25496, 25498), ("test/test.ml", 716, 25532, 25652), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0)), 0), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0), 0, 0)), (("test/test.ml", 713, 25446, 25486), ("test/test.ml", 716, 25532, 25652), 0), 0, 0)), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 716, 25532, 25652), 1), 0, 0), 0, (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0))])
("DEBUG:value_binding.pat:", ((("emit_constructor_arguments", (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0))), (("test/test.ml", 713, 25446, 25450), ("test/test.ml", 713, 25446, 25476), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0))), (("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25481), 0), 0, 0); ((("x", (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0))), (("test/test.ml", 713, 25446, 25482), ("test/test.ml", 713, 25446, 25483), 0), 0, 0); ((("s", (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0))), (("test/test.ml", 713, 25446, 25484), ("test/test.ml", 713, 25446, 25485), 0), 0, 0)]), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 713, 25446, 25486), 0), [(("test/test.ml", 713, 25446, 25477), ("test/test.ml", 713, 25446, 25485), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0))), (("test/test.ml", 714, 25496, 25504), ("test/test.ml", 714, 25496, 25505), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25526), 0)), ((0, ((("a", (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0))), (("test/test.ml", 715, 25511, 25527), ("test/test.ml", 715, 25511, 25528), 0), 0, 0)))), (("test/test.ml", 715, 25511, 25515), ("test/test.ml", 715, 25511, 25528), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0))), (("test/test.ml", 716, 25532, 25541), ("test/test.ml", 716, 25532, 25542), 0), 0, 0), [(0, (Tag1 (Tag2 ("| ", (("test/test.ml", 716, 25532, 25537), ("test/test.ml", 716, 25532, 25539), 0), 0)), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25540), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0))), (("test/test.ml", 716, 25532, 25548), ("test/test.ml", 716, 25532, 25549), 0), 0, 0), [(0, (((("name"), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0))), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25547), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0))), (("test/test.ml", 716, 25532, 25554), ("test/test.ml", 716, 25532, 25555), 0), 0, 0), [(0, (Tag1 (Tag2 (" (", (("test/test.ml", 716, 25532, 25551), ("test/test.ml", 716, 25532, 25553), 0), 0)), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25554), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0))), (("test/test.ml", 716, 25532, 25587), ("test/test.ml", 716, 25532, 25588), 0), 0, 0), [(0, (Tag5 ((((("emit_core_type_list"), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0))), (("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25576), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0))), (("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25579), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0))), (("test/test.ml", 716, 25532, 25580), ("test/test.ml", 716, 25532, 25581), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25582), ("test/test.ml", 716, 25532, 25583), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25577), ("test/test.ml", 716, 25532, 25584), 0), [(("test/test.ml", 716, 25532, 25578), ("test/test.ml", 716, 25532, 25583), 0)], 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25585), 0), [(("test/test.ml", 716, 25532, 25557), ("test/test.ml", 716, 25532, 25584), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0))), (("test/test.ml", 716, 25532, 25597), ("test/test.ml", 716, 25532, 25598), 0), 0, 0), [(0, (Tag1 (Tag2 (") -> ", (("test/test.ml", 716, 25532, 25590), ("test/test.ml", 716, 25532, 25595), 0), 0)), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25596), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0))), (("test/test.ml", 716, 25532, 25618), ("test/test.ml", 716, 25532, 25619), 0), 0, 0), [(0, (Tag1 (Tag2 ("(process_types (", (("test/test.ml", 716, 25532, 25600), ("test/test.ml", 716, 25532, 25616), 0), 0)), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25617), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0))), (("test/test.ml", 716, 25532, 25647), ("test/test.ml", 716, 25532, 25648), 0), 0, 0), [(0, (Tag5 ((((("imp_core_type_list"), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0))), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25638), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0))), (("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25641), 0), 0, 0); (((("s"), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0))), (("test/test.ml", 716, 25532, 25642), ("test/test.ml", 716, 25532, 25643), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 716, 25532, 25644), ("test/test.ml", 716, 25532, 25645), 0), 0, 0)]), (("test/test.ml", 716, 25532, 25639), ("test/test.ml", 716, 25532, 25646), 0), [(("test/test.ml", 716, 25532, 25640), ("test/test.ml", 716, 25532, 25645), 0)], 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25646), 0), 0, 0)); (0, (Tag1 (Tag2 ("))", (("test/test.ml", 716, 25532, 25649), ("test/test.ml", 716, 25532, 25651), 0), 0)), (("test/test.ml", 716, 25532, 25648), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25620), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25599), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25589), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25556), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25550), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25543), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 716, 25532, 25536), ("test/test.ml", 716, 25532, 25652), 0), 0, 0))]), (("test/test.ml", 714, 25496, 25498), ("test/test.ml", 716, 25532, 25652), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0)), 0), (("test/test.ml", 713, 25446, 25487), ("test/test.ml", 713, 25446, 25493), 0), 0, 0)), (("test/test.ml", 713, 25446, 25486), ("test/test.ml", 716, 25532, 25652), 0), 0, 0)), (("test/test.ml", 713, 25446, 25476), ("test/test.ml", 716, 25532, 25652), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 713, 25446, 25446), ("test/test.ml", 716, 25532, 25652), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("decl_emit_constructor_arguments", (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0))), (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0))), (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0), 0, 0); ((("x", (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0))), (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0), 0, 0); ((("s", (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0))), (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0), 0, 0)]), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 718, 25658, 25703), 0), [(("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25702), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0))), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25743), 0)), ((0, ((("a", (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0))), (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0), 0, 0)))), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25745), 0), 0, 0), 0, (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0))), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0))), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0), 0, 0); (((("s"), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0))), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 721, 25749, 25782), ("test/test.ml", 721, 25749, 25783), 0), 0, 0)]), (("test/test.ml", 721, 25749, 25777), ("test/test.ml", 721, 25749, 25784), 0), [(("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25783), 0)], 0))]), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25784), 0), 0, 0))]), (("test/test.ml", 719, 25713, 25715), ("test/test.ml", 721, 25749, 25784), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0)), 0), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0), 0, 0)), (("test/test.ml", 718, 25658, 25703), ("test/test.ml", 721, 25749, 25784), 0), 0, 0)), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 721, 25749, 25784), 1), 0, 0), 0, (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0))]), (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("decl_emit_constructor_arguments", (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0))), (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0))), (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0), 0, 0); ((("x", (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0))), (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0), 0, 0); ((("s", (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0))), (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0), 0, 0)]), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 718, 25658, 25703), 0), [(("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25702), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0))), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25743), 0)), ((0, ((("a", (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0))), (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0), 0, 0)))), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25745), 0), 0, 0), 0, (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0))), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0))), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0), 0, 0); (((("s"), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0))), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 721, 25749, 25782), ("test/test.ml", 721, 25749, 25783), 0), 0, 0)]), (("test/test.ml", 721, 25749, 25777), ("test/test.ml", 721, 25749, 25784), 0), [(("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25783), 0)], 0))]), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25784), 0), 0, 0))]), (("test/test.ml", 719, 25713, 25715), ("test/test.ml", 721, 25749, 25784), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0)), 0), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0), 0, 0)), (("test/test.ml", 718, 25658, 25703), ("test/test.ml", 721, 25749, 25784), 0), 0, 0)), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 721, 25749, 25784), 1), 0, 0), 0, (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0))]))
("DEBUG:Pstr_value:", 0, [(((("decl_emit_constructor_arguments", (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0))), (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0), 0, 0), (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0))), (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0), 0, 0); ((("x", (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0))), (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0), 0, 0); ((("s", (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0))), (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0), 0, 0)]), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 718, 25658, 25703), 0), [(("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25702), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0))), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25743), 0)), ((0, ((("a", (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0))), (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0), 0, 0)))), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25745), 0), 0, 0), 0, (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0))), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0))), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0), 0, 0); (((("s"), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0))), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 721, 25749, 25782), ("test/test.ml", 721, 25749, 25783), 0), 0, 0)]), (("test/test.ml", 721, 25749, 25777), ("test/test.ml", 721, 25749, 25784), 0), [(("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25783), 0)], 0))]), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25784), 0), 0, 0))]), (("test/test.ml", 719, 25713, 25715), ("test/test.ml", 721, 25749, 25784), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0)), 0), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0), 0, 0)), (("test/test.ml", 718, 25658, 25703), ("test/test.ml", 721, 25749, 25784), 0), 0, 0)), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 721, 25749, 25784), 1), 0, 0), 0, (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0))])
("DEBUG:value_binding.pat:", ((("decl_emit_constructor_arguments", (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0))), (("test/test.ml", 718, 25658, 25662), ("test/test.ml", 718, 25658, 25693), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag4 ([((("name", (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0))), (("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25698), 0), 0, 0); ((("x", (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0))), (("test/test.ml", 718, 25658, 25699), ("test/test.ml", 718, 25658, 25700), 0), 0, 0); ((("s", (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0))), (("test/test.ml", 718, 25658, 25701), ("test/test.ml", 718, 25658, 25702), 0), 0, 0)]), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 718, 25658, 25703), 0), [(("test/test.ml", 718, 25658, 25694), ("test/test.ml", 718, 25658, 25702), 0)], 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0))), (("test/test.ml", 719, 25713, 25721), ("test/test.ml", 719, 25713, 25722), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25743), 0)), ((0, ((("a", (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0))), (("test/test.ml", 720, 25728, 25744), ("test/test.ml", 720, 25728, 25745), 0), 0, 0)))), (("test/test.ml", 720, 25728, 25732), ("test/test.ml", 720, 25728, 25745), 0), 0, 0), 0, (Tag5 ((((("decl_imp_core_type_list"), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0))), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25776), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0))), (("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25779), 0), 0, 0); (((("s"), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0))), (("test/test.ml", 721, 25749, 25780), ("test/test.ml", 721, 25749, 25781), 0), 0, 0); (Tag1 (["0"]), (("test/test.ml", 721, 25749, 25782), ("test/test.ml", 721, 25749, 25783), 0), 0, 0)]), (("test/test.ml", 721, 25749, 25777), ("test/test.ml", 721, 25749, 25784), 0), [(("test/test.ml", 721, 25749, 25778), ("test/test.ml", 721, 25749, 25783), 0)], 0))]), (("test/test.ml", 721, 25749, 25753), ("test/test.ml", 721, 25749, 25784), 0), 0, 0))]), (("test/test.ml", 719, 25713, 25715), ("test/test.ml", 721, 25749, 25784), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0)), 0), (("test/test.ml", 718, 25658, 25704), ("test/test.ml", 718, 25658, 25710), 0), 0, 0)), (("test/test.ml", 718, 25658, 25703), ("test/test.ml", 721, 25749, 25784), 0), 0, 0)), (("test/test.ml", 718, 25658, 25693), ("test/test.ml", 721, 25749, 25784), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 718, 25658, 25658), ("test/test.ml", 721, 25749, 25784), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("print_constructor_arguments", (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0))), (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0))), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 723, 25787, 25821), 0), [(("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0))), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0))), (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0), 0, 0); ((("s", (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0))), (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0), 0, 0)]), (("test/test.ml", 725, 25839, 25843), ("test/test.ml", 725, 25839, 25848), 0), [(("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25847), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0))), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25886), 0)), ((0, ((("a", (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0))), (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0), 0, 0)))), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25888), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0))), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0))), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_tuple:", (("test/test.ml", 728, 25899, 25938), ("test/test.ml", 728, 25899, 25956), 0), 0)), (("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25957), 0), 0, 0); (((("a"), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0))), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0), 0, 0)]), (("test/test.ml", 728, 25899, 25936), ("test/test.ml", 728, 25899, 25963), 0), [(("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25962), 0)], 0))]), (("test/test.ml", 728, 25899, 25920), ("test/test.ml", 728, 25899, 25964), 0), [(("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25963), 0)], 0))]), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 728, 25899, 25965), 0), [(("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25964), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0))), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pcstr_tuple:", (("test/test.ml", 729, 25967, 25974), ("test/test.ml", 729, 25967, 25986), 0), 0)), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 25987), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0))), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0))), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0), 0, 0); (((("s"), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0))), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0), 0, 0)]), (("test/test.ml", 729, 25967, 26017), ("test/test.ml", 729, 25967, 26022), 0), [(("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26021), 0)], 0))]), (("test/test.ml", 729, 25967, 25990), ("test/test.ml", 729, 25967, 26023), 0), [(("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26022), 0)], 0))]), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)); ((Tag5 ((("Pcstr_record"), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26050), 0)), ((0, ((("a", (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0))), (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0), 0, 0)))), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26052), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0))), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0))), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_record:", (("test/test.ml", 732, 26056, 26095), ("test/test.ml", 732, 26056, 26114), 0), 0)), (("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26115), 0), 0, 0); (((("a"), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0))), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0), 0, 0)]), (("test/test.ml", 732, 26056, 26093), ("test/test.ml", 732, 26056, 26121), 0), [(("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26120), 0)], 0))]), (("test/test.ml", 732, 26056, 26077), ("test/test.ml", 732, 26056, 26122), 0), [(("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26121), 0)], 0))]), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 732, 26056, 26123), 0), [(("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26122), 0)], 0), (Tag1 (Tag2 ("FIXME:Pcstr_record", (("test/test.ml", 733, 26125, 26132), ("test/test.ml", 733, 26125, 26150), 0), 0)), (("test/test.ml", 733, 26125, 26131), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 726, 25852, 25856), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 724, 25824, 25826), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 733, 26125, 26151), 1), 0, 0), 0, (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0))]), (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("print_constructor_arguments", (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0))), (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0))), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 723, 25787, 25821), 0), [(("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0))), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0))), (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0), 0, 0); ((("s", (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0))), (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0), 0, 0)]), (("test/test.ml", 725, 25839, 25843), ("test/test.ml", 725, 25839, 25848), 0), [(("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25847), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0))), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25886), 0)), ((0, ((("a", (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0))), (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0), 0, 0)))), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25888), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0))), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0))), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_tuple:", (("test/test.ml", 728, 25899, 25938), ("test/test.ml", 728, 25899, 25956), 0), 0)), (("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25957), 0), 0, 0); (((("a"), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0))), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0), 0, 0)]), (("test/test.ml", 728, 25899, 25936), ("test/test.ml", 728, 25899, 25963), 0), [(("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25962), 0)], 0))]), (("test/test.ml", 728, 25899, 25920), ("test/test.ml", 728, 25899, 25964), 0), [(("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25963), 0)], 0))]), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 728, 25899, 25965), 0), [(("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25964), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0))), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pcstr_tuple:", (("test/test.ml", 729, 25967, 25974), ("test/test.ml", 729, 25967, 25986), 0), 0)), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 25987), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0))), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0))), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0), 0, 0); (((("s"), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0))), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0), 0, 0)]), (("test/test.ml", 729, 25967, 26017), ("test/test.ml", 729, 25967, 26022), 0), [(("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26021), 0)], 0))]), (("test/test.ml", 729, 25967, 25990), ("test/test.ml", 729, 25967, 26023), 0), [(("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26022), 0)], 0))]), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)); ((Tag5 ((("Pcstr_record"), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26050), 0)), ((0, ((("a", (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0))), (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0), 0, 0)))), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26052), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0))), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0))), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_record:", (("test/test.ml", 732, 26056, 26095), ("test/test.ml", 732, 26056, 26114), 0), 0)), (("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26115), 0), 0, 0); (((("a"), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0))), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0), 0, 0)]), (("test/test.ml", 732, 26056, 26093), ("test/test.ml", 732, 26056, 26121), 0), [(("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26120), 0)], 0))]), (("test/test.ml", 732, 26056, 26077), ("test/test.ml", 732, 26056, 26122), 0), [(("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26121), 0)], 0))]), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 732, 26056, 26123), 0), [(("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26122), 0)], 0), (Tag1 (Tag2 ("FIXME:Pcstr_record", (("test/test.ml", 733, 26125, 26132), ("test/test.ml", 733, 26125, 26150), 0), 0)), (("test/test.ml", 733, 26125, 26131), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 726, 25852, 25856), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 724, 25824, 25826), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 733, 26125, 26151), 1), 0, 0), 0, (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0))]))
("DEBUG:Pstr_value:", 0, [(((("print_constructor_arguments", (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0))), (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0))), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 723, 25787, 25821), 0), [(("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0))), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0))), (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0), 0, 0); ((("s", (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0))), (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0), 0, 0)]), (("test/test.ml", 725, 25839, 25843), ("test/test.ml", 725, 25839, 25848), 0), [(("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25847), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0))), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25886), 0)), ((0, ((("a", (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0))), (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0), 0, 0)))), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25888), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0))), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0))), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_tuple:", (("test/test.ml", 728, 25899, 25938), ("test/test.ml", 728, 25899, 25956), 0), 0)), (("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25957), 0), 0, 0); (((("a"), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0))), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0), 0, 0)]), (("test/test.ml", 728, 25899, 25936), ("test/test.ml", 728, 25899, 25963), 0), [(("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25962), 0)], 0))]), (("test/test.ml", 728, 25899, 25920), ("test/test.ml", 728, 25899, 25964), 0), [(("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25963), 0)], 0))]), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 728, 25899, 25965), 0), [(("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25964), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0))), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pcstr_tuple:", (("test/test.ml", 729, 25967, 25974), ("test/test.ml", 729, 25967, 25986), 0), 0)), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 25987), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0))), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0))), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0), 0, 0); (((("s"), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0))), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0), 0, 0)]), (("test/test.ml", 729, 25967, 26017), ("test/test.ml", 729, 25967, 26022), 0), [(("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26021), 0)], 0))]), (("test/test.ml", 729, 25967, 25990), ("test/test.ml", 729, 25967, 26023), 0), [(("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26022), 0)], 0))]), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)); ((Tag5 ((("Pcstr_record"), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26050), 0)), ((0, ((("a", (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0))), (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0), 0, 0)))), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26052), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0))), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0))), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_record:", (("test/test.ml", 732, 26056, 26095), ("test/test.ml", 732, 26056, 26114), 0), 0)), (("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26115), 0), 0, 0); (((("a"), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0))), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0), 0, 0)]), (("test/test.ml", 732, 26056, 26093), ("test/test.ml", 732, 26056, 26121), 0), [(("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26120), 0)], 0))]), (("test/test.ml", 732, 26056, 26077), ("test/test.ml", 732, 26056, 26122), 0), [(("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26121), 0)], 0))]), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 732, 26056, 26123), 0), [(("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26122), 0)], 0), (Tag1 (Tag2 ("FIXME:Pcstr_record", (("test/test.ml", 733, 26125, 26132), ("test/test.ml", 733, 26125, 26150), 0), 0)), (("test/test.ml", 733, 26125, 26131), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 726, 25852, 25856), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 724, 25824, 25826), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 733, 26125, 26151), 1), 0, 0), 0, (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0))])
("DEBUG:value_binding.pat:", ((("print_constructor_arguments", (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0))), (("test/test.ml", 723, 25787, 25791), ("test/test.ml", 723, 25787, 25818), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0))), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 723, 25787, 25821), 0), [(("test/test.ml", 723, 25787, 25819), ("test/test.ml", 723, 25787, 25820), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0))), (("test/test.ml", 724, 25824, 25832), ("test/test.ml", 724, 25824, 25833), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0))), (("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25845), 0), 0, 0); ((("s", (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0))), (("test/test.ml", 725, 25839, 25846), ("test/test.ml", 725, 25839, 25847), 0), 0, 0)]), (("test/test.ml", 725, 25839, 25843), ("test/test.ml", 725, 25839, 25848), 0), [(("test/test.ml", 725, 25839, 25844), ("test/test.ml", 725, 25839, 25847), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0))), (("test/test.ml", 726, 25852, 25862), ("test/test.ml", 726, 25852, 25863), 0), 0, 0), [((Tag5 ((("Pcstr_tuple"), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25886), 0)), ((0, ((("a", (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0))), (("test/test.ml", 727, 25869, 25887), ("test/test.ml", 727, 25869, 25888), 0), 0, 0)))), (("test/test.ml", 727, 25869, 25875), ("test/test.ml", 727, 25869, 25888), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0))), (("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25919), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0))), (("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25935), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_tuple:", (("test/test.ml", 728, 25899, 25938), ("test/test.ml", 728, 25899, 25956), 0), 0)), (("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25957), 0), 0, 0); (((("a"), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0))), (("test/test.ml", 728, 25899, 25961), ("test/test.ml", 728, 25899, 25962), 0), 0, 0)]), (("test/test.ml", 728, 25899, 25936), ("test/test.ml", 728, 25899, 25963), 0), [(("test/test.ml", 728, 25899, 25937), ("test/test.ml", 728, 25899, 25962), 0)], 0))]), (("test/test.ml", 728, 25899, 25920), ("test/test.ml", 728, 25899, 25964), 0), [(("test/test.ml", 728, 25899, 25921), ("test/test.ml", 728, 25899, 25963), 0)], 0))]), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 728, 25899, 25965), 0), [(("test/test.ml", 728, 25899, 25906), ("test/test.ml", 728, 25899, 25964), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0))), (("test/test.ml", 729, 25967, 25988), ("test/test.ml", 729, 25967, 25989), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pcstr_tuple:", (("test/test.ml", 729, 25967, 25974), ("test/test.ml", 729, 25967, 25986), 0), 0)), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 25987), 0), 0, 0)); (0, (Tag5 ((((("my_process_core_type_list"), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0))), (("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26016), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0))), (("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26019), 0), 0, 0); (((("s"), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0))), (("test/test.ml", 729, 25967, 26020), ("test/test.ml", 729, 25967, 26021), 0), 0, 0)]), (("test/test.ml", 729, 25967, 26017), ("test/test.ml", 729, 25967, 26022), 0), [(("test/test.ml", 729, 25967, 26018), ("test/test.ml", 729, 25967, 26021), 0)], 0))]), (("test/test.ml", 729, 25967, 25990), ("test/test.ml", 729, 25967, 26023), 0), [(("test/test.ml", 729, 25967, 25991), ("test/test.ml", 729, 25967, 26022), 0)], 0))]), (("test/test.ml", 729, 25967, 25973), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)), (("test/test.ml", 728, 25899, 25905), ("test/test.ml", 729, 25967, 26023), 0), 0, 0)); ((Tag5 ((("Pcstr_record"), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26050), 0)), ((0, ((("a", (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0))), (("test/test.ml", 731, 26032, 26051), ("test/test.ml", 731, 26032, 26052), 0), 0, 0)))), (("test/test.ml", 731, 26032, 26038), ("test/test.ml", 731, 26032, 26052), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0))), (("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26076), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0))), (("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26092), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pcstr_record:", (("test/test.ml", 732, 26056, 26095), ("test/test.ml", 732, 26056, 26114), 0), 0)), (("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26115), 0), 0, 0); (((("a"), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0))), (("test/test.ml", 732, 26056, 26119), ("test/test.ml", 732, 26056, 26120), 0), 0, 0)]), (("test/test.ml", 732, 26056, 26093), ("test/test.ml", 732, 26056, 26121), 0), [(("test/test.ml", 732, 26056, 26094), ("test/test.ml", 732, 26056, 26120), 0)], 0))]), (("test/test.ml", 732, 26056, 26077), ("test/test.ml", 732, 26056, 26122), 0), [(("test/test.ml", 732, 26056, 26078), ("test/test.ml", 732, 26056, 26121), 0)], 0))]), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 732, 26056, 26123), 0), [(("test/test.ml", 732, 26056, 26063), ("test/test.ml", 732, 26056, 26122), 0)], 0), (Tag1 (Tag2 ("FIXME:Pcstr_record", (("test/test.ml", 733, 26125, 26132), ("test/test.ml", 733, 26125, 26150), 0), 0)), (("test/test.ml", 733, 26125, 26131), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 732, 26056, 26062), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 726, 25852, 25856), ("test/test.ml", 733, 26125, 26151), 0), 0, 0))]), (("test/test.ml", 724, 25824, 25826), ("test/test.ml", 733, 26125, 26151), 0), 0, 0)), (("test/test.ml", 723, 25787, 25818), ("test/test.ml", 733, 26125, 26151), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 723, 25787, 25787), ("test/test.ml", 733, 26125, 26151), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (1, [(((("process_pype_variant_constructor_declaration_list", (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0))), (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0))), (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0), 0, 0), (Tag2 ([(Tag3 ((("list"), (("test/test.ml", 735, 26153, 26237), ("test/test.ml", 735, 26153, 26241), 0)), [(Tag3 ((("constructor_declaration"), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0)), 0), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26241), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0)), 0), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 735, 26153, 26254), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0))), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0))), (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0), 0, 0); ((("s", (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0))), (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0), 0, 0)]), (("test/test.ml", 737, 26279, 26283), ("test/test.ml", 737, 26279, 26288), 0), [(("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26287), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0))), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0)), 0), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0), 0, 0), 0, (Tag1 (Tag2 ("VARIANT:", (("test/test.ml", 739, 26308, 26321), ("test/test.ml", 739, 26308, 26329), 0), 0)), (("test/test.ml", 739, 26308, 26320), ("test/test.ml", 739, 26308, 26330), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 740, 26332, 26340), ("test/test.ml", 740, 26332, 26342), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0), 0, 0); ((("t", (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0))), (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0), 0, 0)]), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 1), 0, 0)))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 0), 0, 0), 0, (Tag6 ((((("h"), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0))), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0), 0, 0), [((Tag7 ([((("pcd_name"), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 1)), ((("pcd_name", (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0))), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0), 0, 0)); ((("pcd_vars"), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 1)), ((("pcd_vars", (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0))), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0), 0, 0)); ((("pcd_args"), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 1)), ((("pcd_args", (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0))), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0), 0, 0)); ((("pcd_res"), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 1)), ((("pcd_res", (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0))), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0), 0, 0)); ((("pcd_loc"), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 1)), ((("pcd_loc", (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0))), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0), 0, 0)); ((("pcd_attributes"), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 1)), ((("pcd_attributes", (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0))), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0), 0, 0))], 0), (("test/test.ml", 742, 26367, 26374), ("test/test.ml", 749, 26619, 26626), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0))), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0))), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:constructor_declaration:", (("test/test.ml", 753, 26748, 26762), ("test/test.ml", 753, 26748, 26792), 0), 0)), (("test/test.ml", 753, 26748, 26761), ("test/test.ml", 753, 26748, 26793), 0), 0, 0); (((("pcd_name"), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0))), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0), 0, 0); (Tag1 (Tag2 ("vars", (("test/test.ml", 755, 26818, 26832), ("test/test.ml", 755, 26818, 26836), 0), 0)), (("test/test.ml", 755, 26818, 26831), ("test/test.ml", 755, 26818, 26837), 0), 0, 0); (((("pcd_vars"), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0))), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0), 0, 0); (Tag1 (Tag2 ("args", (("test/test.ml", 757, 26862, 26876), ("test/test.ml", 757, 26862, 26880), 0), 0)), (("test/test.ml", 757, 26862, 26875), ("test/test.ml", 757, 26862, 26881), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0))), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0), 0, 0); (Tag1 (Tag2 ("res", (("test/test.ml", 759, 26906, 26920), ("test/test.ml", 759, 26906, 26923), 0), 0)), (("test/test.ml", 759, 26906, 26919), ("test/test.ml", 759, 26906, 26924), 0), 0, 0); (((("pcd_res"), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0))), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0), 0, 0); (Tag1 (Tag2 ("loc", (("test/test.ml", 761, 26948, 26962), ("test/test.ml", 761, 26948, 26965), 0), 0)), (("test/test.ml", 761, 26948, 26961), ("test/test.ml", 761, 26948, 26966), 0), 0, 0); (((("pcd_loc"), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0))), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0), 0, 0); (Tag1 (Tag2 ("attrs", (("test/test.ml", 763, 26990, 27004), ("test/test.ml", 763, 26990, 27009), 0), 0)), (("test/test.ml", 763, 26990, 27003), ("test/test.ml", 763, 26990, 27010), 0), 0, 0); (((("pcd_attributes"), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0))), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0), 0, 0)]), (("test/test.ml", 752, 26707, 26746), ("test/test.ml", 765, 27040, 27052), 0), [(("test/test.ml", 753, 26748, 26761), ("test/test.ml", 764, 27012, 27039), 0)], 0))]), (("test/test.ml", 752, 26707, 26730), ("test/test.ml", 765, 27040, 27053), 0), [(("test/test.ml", 752, 26707, 26731), ("test/test.ml", 765, 27040, 27052), 0)], 0))]), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 765, 27040, 27054), 0), [(("test/test.ml", 752, 26707, 26716), ("test/test.ml", 765, 27040, 27053), 0)], 0), (Tag2 (0, [(((("newtext", (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0))), (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0), 0, 0), (Tag5 ((((("emit_constructor_arguments"), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0))), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0), 0, 0), (("txt"), (("test/test.ml", 766, 27056, 27115), ("test/test.ml", 766, 27056, 27118), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27118), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0))), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0), 0, 0); (((("s"), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0))), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0), 0, 0)]), (("test/test.ml", 766, 27056, 27105), ("test/test.ml", 766, 27056, 27132), 0), [(("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27131), 0)], 0))]), (("test/test.ml", 766, 27056, 27078), ("test/test.ml", 766, 27056, 27133), 0), [(("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27132), 0)], 0), 0, (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 766, 27056, 27133), 0))], (Tag2 (0, [(((("newtext2", (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0))), (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0), 0, 0), (Tag5 ((((("decl_emit_constructor_arguments"), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0))), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0), 0, 0), (("txt"), (("test/test.ml", 767, 27137, 27202), ("test/test.ml", 767, 27137, 27205), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27205), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0))), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0), 0, 0); (((("s"), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0))), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0), 0, 0)]), (("test/test.ml", 767, 27137, 27192), ("test/test.ml", 767, 27137, 27219), 0), [(("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27218), 0)], 0))]), (("test/test.ml", 767, 27137, 27160), ("test/test.ml", 767, 27137, 27220), 0), [(("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27219), 0)], 0), 0, (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 767, 27137, 27220), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0))), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0))), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2A:", (("test/test.ml", 768, 27224, 27249), ("test/test.ml", 768, 27224, 27257), 0), 0)), (("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27258), 0), 0, 0)); (0, (((("newtext2"), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0))), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0), 0, 0))]), (("test/test.ml", 768, 27224, 27247), ("test/test.ml", 768, 27224, 27270), 0), [(("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27269), 0)], 0))]), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 768, 27224, 27271), 0), [(("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27270), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0))), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0))), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2B:", (("test/test.ml", 769, 27273, 27298), ("test/test.ml", 769, 27273, 27306), 0), 0)), (("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27307), 0), 0, 0)); (0, (((("newtext"), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0))), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0), 0, 0))]), (("test/test.ml", 769, 27273, 27296), ("test/test.ml", 769, 27273, 27318), 0), [(("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27317), 0)], 0))]), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 769, 27273, 27319), 0), [(("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27318), 0)], 0), (Tag2 (0, [(((("ret", (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0))), (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0))), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0), 0, 0), [(0, (Tag1 (Tag2 ("constructor:\"", (("test/test.ml", 771, 27322, 27354), ("test/test.ml", 771, 27322, 27368), 0), 0)), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 771, 27322, 27369), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0))), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0), 0, 0), [(0, (Tag12 ((((("pcd_name"), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0), 0, 0), (("txt"), (("test/test.ml", 771, 27322, 27380), ("test/test.ml", 771, 27322, 27383), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27383), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0))), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"", (("test/test.ml", 771, 27322, 27387), ("test/test.ml", 771, 27322, 27389), 0), 0)), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 771, 27322, 27390), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0))), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0), 0, 0), [(0, (Tag1 (Tag2 ("{", (("test/test.ml", 772, 27391, 27425), ("test/test.ml", 772, 27391, 27426), 0), 0)), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 772, 27391, 27427), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0))), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0), 0, 0), [(0, (Tag5 ((((("print_constructor_arguments"), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0))), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0), 0, 0), [(0, (Tag8 ([(((("pcd_args"), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0))), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0), 0, 0); (((("s"), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0))), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0), 0, 0)]), (("test/test.ml", 773, 27430, 27488), ("test/test.ml", 773, 27430, 27500), 0), [(("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27499), 0)], 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27500), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0))), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0), 0, 0), [(0, (Tag1 (Tag2 ("}", (("test/test.ml", 774, 27501, 27535), ("test/test.ml", 774, 27501, 27536), 0), 0)), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 774, 27501, 27537), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0))), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0), 0, 0), [(0, (Tag1 (Tag2 ("\t|", (("test/test.ml", 774, 27501, 27541), ("test/test.ml", 774, 27501, 27544), 0), 0)), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 774, 27501, 27545), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0))), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0))), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0), 0, 0); (((("s"), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0))), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0), 0, 0)]), (("test/test.ml", 775, 27548, 27628), ("test/test.ml", 775, 27548, 27633), 0), [(("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27632), 0)], 0))]), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 775, 27548, 27633), 0), 0, 0), 0, (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 775, 27548, 27633), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0))), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:constructor_declaration_new: %s\n", (("test/test.ml", 777, 27645, 27668), ("test/test.ml", 777, 27645, 27707), 0), 0)), (("test/test.ml", 777, 27645, 27667), ("test/test.ml", 777, 27645, 27708), 0), 0, 0)); (0, (((("ret"), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0))), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0), 0, 0))]), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27712), 0), 0, 0), (((("ret"), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0))), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 741, 26348, 26354), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 738, 26291, 26295), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 736, 26264, 26266), ("test/test.ml", 778, 27714, 27725), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0)), 0), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0), 0, 0)), (("test/test.ml", 735, 26153, 26254), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 778, 27714, 27725), 1), 0, 0), 0, (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0))]), (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("process_pype_variant_constructor_declaration_list", (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0))), (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0))), (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0), 0, 0), (Tag2 ([(Tag3 ((("list"), (("test/test.ml", 735, 26153, 26237), ("test/test.ml", 735, 26153, 26241), 0)), [(Tag3 ((("constructor_declaration"), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0)), 0), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26241), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0)), 0), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 735, 26153, 26254), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0))), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0))), (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0), 0, 0); ((("s", (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0))), (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0), 0, 0)]), (("test/test.ml", 737, 26279, 26283), ("test/test.ml", 737, 26279, 26288), 0), [(("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26287), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0))), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0)), 0), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0), 0, 0), 0, (Tag1 (Tag2 ("VARIANT:", (("test/test.ml", 739, 26308, 26321), ("test/test.ml", 739, 26308, 26329), 0), 0)), (("test/test.ml", 739, 26308, 26320), ("test/test.ml", 739, 26308, 26330), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 740, 26332, 26340), ("test/test.ml", 740, 26332, 26342), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0), 0, 0); ((("t", (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0))), (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0), 0, 0)]), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 1), 0, 0)))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 0), 0, 0), 0, (Tag6 ((((("h"), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0))), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0), 0, 0), [((Tag7 ([((("pcd_name"), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 1)), ((("pcd_name", (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0))), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0), 0, 0)); ((("pcd_vars"), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 1)), ((("pcd_vars", (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0))), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0), 0, 0)); ((("pcd_args"), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 1)), ((("pcd_args", (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0))), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0), 0, 0)); ((("pcd_res"), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 1)), ((("pcd_res", (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0))), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0), 0, 0)); ((("pcd_loc"), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 1)), ((("pcd_loc", (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0))), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0), 0, 0)); ((("pcd_attributes"), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 1)), ((("pcd_attributes", (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0))), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0), 0, 0))], 0), (("test/test.ml", 742, 26367, 26374), ("test/test.ml", 749, 26619, 26626), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0))), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0))), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:constructor_declaration:", (("test/test.ml", 753, 26748, 26762), ("test/test.ml", 753, 26748, 26792), 0), 0)), (("test/test.ml", 753, 26748, 26761), ("test/test.ml", 753, 26748, 26793), 0), 0, 0); (((("pcd_name"), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0))), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0), 0, 0); (Tag1 (Tag2 ("vars", (("test/test.ml", 755, 26818, 26832), ("test/test.ml", 755, 26818, 26836), 0), 0)), (("test/test.ml", 755, 26818, 26831), ("test/test.ml", 755, 26818, 26837), 0), 0, 0); (((("pcd_vars"), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0))), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0), 0, 0); (Tag1 (Tag2 ("args", (("test/test.ml", 757, 26862, 26876), ("test/test.ml", 757, 26862, 26880), 0), 0)), (("test/test.ml", 757, 26862, 26875), ("test/test.ml", 757, 26862, 26881), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0))), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0), 0, 0); (Tag1 (Tag2 ("res", (("test/test.ml", 759, 26906, 26920), ("test/test.ml", 759, 26906, 26923), 0), 0)), (("test/test.ml", 759, 26906, 26919), ("test/test.ml", 759, 26906, 26924), 0), 0, 0); (((("pcd_res"), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0))), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0), 0, 0); (Tag1 (Tag2 ("loc", (("test/test.ml", 761, 26948, 26962), ("test/test.ml", 761, 26948, 26965), 0), 0)), (("test/test.ml", 761, 26948, 26961), ("test/test.ml", 761, 26948, 26966), 0), 0, 0); (((("pcd_loc"), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0))), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0), 0, 0); (Tag1 (Tag2 ("attrs", (("test/test.ml", 763, 26990, 27004), ("test/test.ml", 763, 26990, 27009), 0), 0)), (("test/test.ml", 763, 26990, 27003), ("test/test.ml", 763, 26990, 27010), 0), 0, 0); (((("pcd_attributes"), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0))), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0), 0, 0)]), (("test/test.ml", 752, 26707, 26746), ("test/test.ml", 765, 27040, 27052), 0), [(("test/test.ml", 753, 26748, 26761), ("test/test.ml", 764, 27012, 27039), 0)], 0))]), (("test/test.ml", 752, 26707, 26730), ("test/test.ml", 765, 27040, 27053), 0), [(("test/test.ml", 752, 26707, 26731), ("test/test.ml", 765, 27040, 27052), 0)], 0))]), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 765, 27040, 27054), 0), [(("test/test.ml", 752, 26707, 26716), ("test/test.ml", 765, 27040, 27053), 0)], 0), (Tag2 (0, [(((("newtext", (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0))), (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0), 0, 0), (Tag5 ((((("emit_constructor_arguments"), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0))), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0), 0, 0), (("txt"), (("test/test.ml", 766, 27056, 27115), ("test/test.ml", 766, 27056, 27118), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27118), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0))), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0), 0, 0); (((("s"), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0))), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0), 0, 0)]), (("test/test.ml", 766, 27056, 27105), ("test/test.ml", 766, 27056, 27132), 0), [(("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27131), 0)], 0))]), (("test/test.ml", 766, 27056, 27078), ("test/test.ml", 766, 27056, 27133), 0), [(("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27132), 0)], 0), 0, (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 766, 27056, 27133), 0))], (Tag2 (0, [(((("newtext2", (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0))), (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0), 0, 0), (Tag5 ((((("decl_emit_constructor_arguments"), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0))), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0), 0, 0), (("txt"), (("test/test.ml", 767, 27137, 27202), ("test/test.ml", 767, 27137, 27205), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27205), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0))), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0), 0, 0); (((("s"), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0))), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0), 0, 0)]), (("test/test.ml", 767, 27137, 27192), ("test/test.ml", 767, 27137, 27219), 0), [(("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27218), 0)], 0))]), (("test/test.ml", 767, 27137, 27160), ("test/test.ml", 767, 27137, 27220), 0), [(("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27219), 0)], 0), 0, (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 767, 27137, 27220), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0))), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0))), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2A:", (("test/test.ml", 768, 27224, 27249), ("test/test.ml", 768, 27224, 27257), 0), 0)), (("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27258), 0), 0, 0)); (0, (((("newtext2"), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0))), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0), 0, 0))]), (("test/test.ml", 768, 27224, 27247), ("test/test.ml", 768, 27224, 27270), 0), [(("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27269), 0)], 0))]), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 768, 27224, 27271), 0), [(("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27270), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0))), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0))), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2B:", (("test/test.ml", 769, 27273, 27298), ("test/test.ml", 769, 27273, 27306), 0), 0)), (("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27307), 0), 0, 0)); (0, (((("newtext"), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0))), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0), 0, 0))]), (("test/test.ml", 769, 27273, 27296), ("test/test.ml", 769, 27273, 27318), 0), [(("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27317), 0)], 0))]), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 769, 27273, 27319), 0), [(("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27318), 0)], 0), (Tag2 (0, [(((("ret", (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0))), (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0))), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0), 0, 0), [(0, (Tag1 (Tag2 ("constructor:\"", (("test/test.ml", 771, 27322, 27354), ("test/test.ml", 771, 27322, 27368), 0), 0)), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 771, 27322, 27369), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0))), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0), 0, 0), [(0, (Tag12 ((((("pcd_name"), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0), 0, 0), (("txt"), (("test/test.ml", 771, 27322, 27380), ("test/test.ml", 771, 27322, 27383), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27383), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0))), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"", (("test/test.ml", 771, 27322, 27387), ("test/test.ml", 771, 27322, 27389), 0), 0)), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 771, 27322, 27390), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0))), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0), 0, 0), [(0, (Tag1 (Tag2 ("{", (("test/test.ml", 772, 27391, 27425), ("test/test.ml", 772, 27391, 27426), 0), 0)), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 772, 27391, 27427), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0))), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0), 0, 0), [(0, (Tag5 ((((("print_constructor_arguments"), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0))), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0), 0, 0), [(0, (Tag8 ([(((("pcd_args"), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0))), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0), 0, 0); (((("s"), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0))), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0), 0, 0)]), (("test/test.ml", 773, 27430, 27488), ("test/test.ml", 773, 27430, 27500), 0), [(("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27499), 0)], 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27500), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0))), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0), 0, 0), [(0, (Tag1 (Tag2 ("}", (("test/test.ml", 774, 27501, 27535), ("test/test.ml", 774, 27501, 27536), 0), 0)), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 774, 27501, 27537), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0))), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0), 0, 0), [(0, (Tag1 (Tag2 ("\t|", (("test/test.ml", 774, 27501, 27541), ("test/test.ml", 774, 27501, 27544), 0), 0)), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 774, 27501, 27545), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0))), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0))), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0), 0, 0); (((("s"), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0))), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0), 0, 0)]), (("test/test.ml", 775, 27548, 27628), ("test/test.ml", 775, 27548, 27633), 0), [(("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27632), 0)], 0))]), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 775, 27548, 27633), 0), 0, 0), 0, (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 775, 27548, 27633), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0))), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:constructor_declaration_new: %s\n", (("test/test.ml", 777, 27645, 27668), ("test/test.ml", 777, 27645, 27707), 0), 0)), (("test/test.ml", 777, 27645, 27667), ("test/test.ml", 777, 27645, 27708), 0), 0, 0)); (0, (((("ret"), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0))), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0), 0, 0))]), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27712), 0), 0, 0), (((("ret"), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0))), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 741, 26348, 26354), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 738, 26291, 26295), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 736, 26264, 26266), ("test/test.ml", 778, 27714, 27725), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0)), 0), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0), 0, 0)), (("test/test.ml", 735, 26153, 26254), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 778, 27714, 27725), 1), 0, 0), 0, (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0))]))
("DEBUG:Pstr_value:", 1, [(((("process_pype_variant_constructor_declaration_list", (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0))), (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0))), (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0), 0, 0), (Tag2 ([(Tag3 ((("list"), (("test/test.ml", 735, 26153, 26237), ("test/test.ml", 735, 26153, 26241), 0)), [(Tag3 ((("constructor_declaration"), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0)), 0), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26241), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0)), 0), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 735, 26153, 26254), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0))), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0))), (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0), 0, 0); ((("s", (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0))), (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0), 0, 0)]), (("test/test.ml", 737, 26279, 26283), ("test/test.ml", 737, 26279, 26288), 0), [(("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26287), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0))), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0)), 0), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0), 0, 0), 0, (Tag1 (Tag2 ("VARIANT:", (("test/test.ml", 739, 26308, 26321), ("test/test.ml", 739, 26308, 26329), 0), 0)), (("test/test.ml", 739, 26308, 26320), ("test/test.ml", 739, 26308, 26330), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 740, 26332, 26340), ("test/test.ml", 740, 26332, 26342), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0), 0, 0); ((("t", (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0))), (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0), 0, 0)]), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 1), 0, 0)))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 0), 0, 0), 0, (Tag6 ((((("h"), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0))), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0), 0, 0), [((Tag7 ([((("pcd_name"), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 1)), ((("pcd_name", (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0))), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0), 0, 0)); ((("pcd_vars"), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 1)), ((("pcd_vars", (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0))), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0), 0, 0)); ((("pcd_args"), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 1)), ((("pcd_args", (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0))), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0), 0, 0)); ((("pcd_res"), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 1)), ((("pcd_res", (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0))), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0), 0, 0)); ((("pcd_loc"), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 1)), ((("pcd_loc", (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0))), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0), 0, 0)); ((("pcd_attributes"), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 1)), ((("pcd_attributes", (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0))), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0), 0, 0))], 0), (("test/test.ml", 742, 26367, 26374), ("test/test.ml", 749, 26619, 26626), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0))), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0))), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:constructor_declaration:", (("test/test.ml", 753, 26748, 26762), ("test/test.ml", 753, 26748, 26792), 0), 0)), (("test/test.ml", 753, 26748, 26761), ("test/test.ml", 753, 26748, 26793), 0), 0, 0); (((("pcd_name"), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0))), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0), 0, 0); (Tag1 (Tag2 ("vars", (("test/test.ml", 755, 26818, 26832), ("test/test.ml", 755, 26818, 26836), 0), 0)), (("test/test.ml", 755, 26818, 26831), ("test/test.ml", 755, 26818, 26837), 0), 0, 0); (((("pcd_vars"), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0))), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0), 0, 0); (Tag1 (Tag2 ("args", (("test/test.ml", 757, 26862, 26876), ("test/test.ml", 757, 26862, 26880), 0), 0)), (("test/test.ml", 757, 26862, 26875), ("test/test.ml", 757, 26862, 26881), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0))), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0), 0, 0); (Tag1 (Tag2 ("res", (("test/test.ml", 759, 26906, 26920), ("test/test.ml", 759, 26906, 26923), 0), 0)), (("test/test.ml", 759, 26906, 26919), ("test/test.ml", 759, 26906, 26924), 0), 0, 0); (((("pcd_res"), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0))), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0), 0, 0); (Tag1 (Tag2 ("loc", (("test/test.ml", 761, 26948, 26962), ("test/test.ml", 761, 26948, 26965), 0), 0)), (("test/test.ml", 761, 26948, 26961), ("test/test.ml", 761, 26948, 26966), 0), 0, 0); (((("pcd_loc"), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0))), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0), 0, 0); (Tag1 (Tag2 ("attrs", (("test/test.ml", 763, 26990, 27004), ("test/test.ml", 763, 26990, 27009), 0), 0)), (("test/test.ml", 763, 26990, 27003), ("test/test.ml", 763, 26990, 27010), 0), 0, 0); (((("pcd_attributes"), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0))), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0), 0, 0)]), (("test/test.ml", 752, 26707, 26746), ("test/test.ml", 765, 27040, 27052), 0), [(("test/test.ml", 753, 26748, 26761), ("test/test.ml", 764, 27012, 27039), 0)], 0))]), (("test/test.ml", 752, 26707, 26730), ("test/test.ml", 765, 27040, 27053), 0), [(("test/test.ml", 752, 26707, 26731), ("test/test.ml", 765, 27040, 27052), 0)], 0))]), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 765, 27040, 27054), 0), [(("test/test.ml", 752, 26707, 26716), ("test/test.ml", 765, 27040, 27053), 0)], 0), (Tag2 (0, [(((("newtext", (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0))), (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0), 0, 0), (Tag5 ((((("emit_constructor_arguments"), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0))), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0), 0, 0), (("txt"), (("test/test.ml", 766, 27056, 27115), ("test/test.ml", 766, 27056, 27118), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27118), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0))), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0), 0, 0); (((("s"), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0))), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0), 0, 0)]), (("test/test.ml", 766, 27056, 27105), ("test/test.ml", 766, 27056, 27132), 0), [(("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27131), 0)], 0))]), (("test/test.ml", 766, 27056, 27078), ("test/test.ml", 766, 27056, 27133), 0), [(("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27132), 0)], 0), 0, (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 766, 27056, 27133), 0))], (Tag2 (0, [(((("newtext2", (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0))), (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0), 0, 0), (Tag5 ((((("decl_emit_constructor_arguments"), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0))), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0), 0, 0), (("txt"), (("test/test.ml", 767, 27137, 27202), ("test/test.ml", 767, 27137, 27205), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27205), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0))), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0), 0, 0); (((("s"), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0))), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0), 0, 0)]), (("test/test.ml", 767, 27137, 27192), ("test/test.ml", 767, 27137, 27219), 0), [(("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27218), 0)], 0))]), (("test/test.ml", 767, 27137, 27160), ("test/test.ml", 767, 27137, 27220), 0), [(("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27219), 0)], 0), 0, (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 767, 27137, 27220), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0))), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0))), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2A:", (("test/test.ml", 768, 27224, 27249), ("test/test.ml", 768, 27224, 27257), 0), 0)), (("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27258), 0), 0, 0)); (0, (((("newtext2"), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0))), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0), 0, 0))]), (("test/test.ml", 768, 27224, 27247), ("test/test.ml", 768, 27224, 27270), 0), [(("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27269), 0)], 0))]), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 768, 27224, 27271), 0), [(("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27270), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0))), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0))), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2B:", (("test/test.ml", 769, 27273, 27298), ("test/test.ml", 769, 27273, 27306), 0), 0)), (("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27307), 0), 0, 0)); (0, (((("newtext"), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0))), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0), 0, 0))]), (("test/test.ml", 769, 27273, 27296), ("test/test.ml", 769, 27273, 27318), 0), [(("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27317), 0)], 0))]), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 769, 27273, 27319), 0), [(("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27318), 0)], 0), (Tag2 (0, [(((("ret", (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0))), (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0))), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0), 0, 0), [(0, (Tag1 (Tag2 ("constructor:\"", (("test/test.ml", 771, 27322, 27354), ("test/test.ml", 771, 27322, 27368), 0), 0)), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 771, 27322, 27369), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0))), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0), 0, 0), [(0, (Tag12 ((((("pcd_name"), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0), 0, 0), (("txt"), (("test/test.ml", 771, 27322, 27380), ("test/test.ml", 771, 27322, 27383), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27383), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0))), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"", (("test/test.ml", 771, 27322, 27387), ("test/test.ml", 771, 27322, 27389), 0), 0)), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 771, 27322, 27390), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0))), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0), 0, 0), [(0, (Tag1 (Tag2 ("{", (("test/test.ml", 772, 27391, 27425), ("test/test.ml", 772, 27391, 27426), 0), 0)), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 772, 27391, 27427), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0))), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0), 0, 0), [(0, (Tag5 ((((("print_constructor_arguments"), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0))), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0), 0, 0), [(0, (Tag8 ([(((("pcd_args"), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0))), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0), 0, 0); (((("s"), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0))), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0), 0, 0)]), (("test/test.ml", 773, 27430, 27488), ("test/test.ml", 773, 27430, 27500), 0), [(("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27499), 0)], 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27500), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0))), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0), 0, 0), [(0, (Tag1 (Tag2 ("}", (("test/test.ml", 774, 27501, 27535), ("test/test.ml", 774, 27501, 27536), 0), 0)), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 774, 27501, 27537), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0))), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0), 0, 0), [(0, (Tag1 (Tag2 ("\t|", (("test/test.ml", 774, 27501, 27541), ("test/test.ml", 774, 27501, 27544), 0), 0)), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 774, 27501, 27545), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0))), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0))), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0), 0, 0); (((("s"), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0))), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0), 0, 0)]), (("test/test.ml", 775, 27548, 27628), ("test/test.ml", 775, 27548, 27633), 0), [(("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27632), 0)], 0))]), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 775, 27548, 27633), 0), 0, 0), 0, (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 775, 27548, 27633), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0))), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:constructor_declaration_new: %s\n", (("test/test.ml", 777, 27645, 27668), ("test/test.ml", 777, 27645, 27707), 0), 0)), (("test/test.ml", 777, 27645, 27667), ("test/test.ml", 777, 27645, 27708), 0), 0, 0)); (0, (((("ret"), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0))), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0), 0, 0))]), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27712), 0), 0, 0), (((("ret"), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0))), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 741, 26348, 26354), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 738, 26291, 26295), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 736, 26264, 26266), ("test/test.ml", 778, 27714, 27725), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0)), 0), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0), 0, 0)), (("test/test.ml", 735, 26153, 26254), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 778, 27714, 27725), 1), 0, 0), 0, (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0))])
("DEBUG:value_binding.pat:", ((("process_pype_variant_constructor_declaration_list", (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0))), (("test/test.ml", 735, 26153, 26161), ("test/test.ml", 735, 26153, 26210), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0))), (("test/test.ml", 735, 26153, 26211), ("test/test.ml", 735, 26153, 26212), 0), 0, 0), (Tag2 ([(Tag3 ((("list"), (("test/test.ml", 735, 26153, 26237), ("test/test.ml", 735, 26153, 26241), 0)), [(Tag3 ((("constructor_declaration"), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0)), 0), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26236), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26241), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0)), 0), (("test/test.ml", 735, 26153, 26242), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)]), (("test/test.ml", 735, 26153, 26213), ("test/test.ml", 735, 26153, 26253), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 735, 26153, 26254), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0))), (("test/test.ml", 736, 26264, 26272), ("test/test.ml", 736, 26264, 26273), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0))), (("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26285), 0), 0, 0); ((("s", (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0))), (("test/test.ml", 737, 26279, 26286), ("test/test.ml", 737, 26279, 26287), 0), 0, 0)]), (("test/test.ml", 737, 26279, 26283), ("test/test.ml", 737, 26279, 26288), 0), [(("test/test.ml", 737, 26279, 26284), ("test/test.ml", 737, 26279, 26287), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0))), (("test/test.ml", 738, 26291, 26301), ("test/test.ml", 738, 26291, 26302), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0)), 0), (("test/test.ml", 739, 26308, 26314), ("test/test.ml", 739, 26308, 26316), 0), 0, 0), 0, (Tag1 (Tag2 ("VARIANT:", (("test/test.ml", 739, 26308, 26321), ("test/test.ml", 739, 26308, 26329), 0), 0)), (("test/test.ml", 739, 26308, 26320), ("test/test.ml", 739, 26308, 26330), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 740, 26332, 26340), ("test/test.ml", 740, 26332, 26342), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26339), 0), 0, 0); ((("t", (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0))), (("test/test.ml", 740, 26332, 26343), ("test/test.ml", 740, 26332, 26344), 0), 0, 0)]), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 1), 0, 0)))), (("test/test.ml", 740, 26332, 26338), ("test/test.ml", 740, 26332, 26344), 0), 0, 0), 0, (Tag6 ((((("h"), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0))), (("test/test.ml", 741, 26348, 26360), ("test/test.ml", 741, 26348, 26361), 0), 0, 0), [((Tag7 ([((("pcd_name"), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 1)), ((("pcd_name", (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0))), (("test/test.ml", 743, 26376, 26384), ("test/test.ml", 743, 26376, 26392), 0), 0, 0)); ((("pcd_vars"), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 1)), ((("pcd_vars", (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0))), (("test/test.ml", 744, 26412, 26420), ("test/test.ml", 744, 26412, 26428), 0), 0, 0)); ((("pcd_args"), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 1)), ((("pcd_args", (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0))), (("test/test.ml", 745, 26453, 26461), ("test/test.ml", 745, 26453, 26469), 0), 0, 0)); ((("pcd_res"), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 1)), ((("pcd_res", (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0))), (("test/test.ml", 746, 26500, 26508), ("test/test.ml", 746, 26500, 26515), 0), 0, 0)); ((("pcd_loc"), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 1)), ((("pcd_loc", (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0))), (("test/test.ml", 747, 26541, 26549), ("test/test.ml", 747, 26541, 26556), 0), 0, 0)); ((("pcd_attributes"), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 1)), ((("pcd_attributes", (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0))), (("test/test.ml", 748, 26576, 26584), ("test/test.ml", 748, 26576, 26598), 0), 0, 0))], 0), (("test/test.ml", 742, 26367, 26374), ("test/test.ml", 749, 26619, 26626), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0))), (("test/test.ml", 752, 26707, 26716), ("test/test.ml", 752, 26707, 26729), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0))), (("test/test.ml", 752, 26707, 26731), ("test/test.ml", 752, 26707, 26745), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:constructor_declaration:", (("test/test.ml", 753, 26748, 26762), ("test/test.ml", 753, 26748, 26792), 0), 0)), (("test/test.ml", 753, 26748, 26761), ("test/test.ml", 753, 26748, 26793), 0), 0, 0); (((("pcd_name"), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0))), (("test/test.ml", 754, 26795, 26808), ("test/test.ml", 754, 26795, 26816), 0), 0, 0); (Tag1 (Tag2 ("vars", (("test/test.ml", 755, 26818, 26832), ("test/test.ml", 755, 26818, 26836), 0), 0)), (("test/test.ml", 755, 26818, 26831), ("test/test.ml", 755, 26818, 26837), 0), 0, 0); (((("pcd_vars"), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0))), (("test/test.ml", 756, 26839, 26852), ("test/test.ml", 756, 26839, 26860), 0), 0, 0); (Tag1 (Tag2 ("args", (("test/test.ml", 757, 26862, 26876), ("test/test.ml", 757, 26862, 26880), 0), 0)), (("test/test.ml", 757, 26862, 26875), ("test/test.ml", 757, 26862, 26881), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0))), (("test/test.ml", 758, 26883, 26896), ("test/test.ml", 758, 26883, 26904), 0), 0, 0); (Tag1 (Tag2 ("res", (("test/test.ml", 759, 26906, 26920), ("test/test.ml", 759, 26906, 26923), 0), 0)), (("test/test.ml", 759, 26906, 26919), ("test/test.ml", 759, 26906, 26924), 0), 0, 0); (((("pcd_res"), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0))), (("test/test.ml", 760, 26926, 26939), ("test/test.ml", 760, 26926, 26946), 0), 0, 0); (Tag1 (Tag2 ("loc", (("test/test.ml", 761, 26948, 26962), ("test/test.ml", 761, 26948, 26965), 0), 0)), (("test/test.ml", 761, 26948, 26961), ("test/test.ml", 761, 26948, 26966), 0), 0, 0); (((("pcd_loc"), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0))), (("test/test.ml", 762, 26968, 26981), ("test/test.ml", 762, 26968, 26988), 0), 0, 0); (Tag1 (Tag2 ("attrs", (("test/test.ml", 763, 26990, 27004), ("test/test.ml", 763, 26990, 27009), 0), 0)), (("test/test.ml", 763, 26990, 27003), ("test/test.ml", 763, 26990, 27010), 0), 0, 0); (((("pcd_attributes"), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0))), (("test/test.ml", 764, 27012, 27025), ("test/test.ml", 764, 27012, 27039), 0), 0, 0)]), (("test/test.ml", 752, 26707, 26746), ("test/test.ml", 765, 27040, 27052), 0), [(("test/test.ml", 753, 26748, 26761), ("test/test.ml", 764, 27012, 27039), 0)], 0))]), (("test/test.ml", 752, 26707, 26730), ("test/test.ml", 765, 27040, 27053), 0), [(("test/test.ml", 752, 26707, 26731), ("test/test.ml", 765, 27040, 27052), 0)], 0))]), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 765, 27040, 27054), 0), [(("test/test.ml", 752, 26707, 26716), ("test/test.ml", 765, 27040, 27053), 0)], 0), (Tag2 (0, [(((("newtext", (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0))), (("test/test.ml", 766, 27056, 27068), ("test/test.ml", 766, 27056, 27075), 0), 0, 0), (Tag5 ((((("emit_constructor_arguments"), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0))), (("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27105), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27114), 0), 0, 0), (("txt"), (("test/test.ml", 766, 27056, 27115), ("test/test.ml", 766, 27056, 27118), 0))), (("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27118), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0))), (("test/test.ml", 766, 27056, 27120), ("test/test.ml", 766, 27056, 27128), 0), 0, 0); (((("s"), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0))), (("test/test.ml", 766, 27056, 27130), ("test/test.ml", 766, 27056, 27131), 0), 0, 0)]), (("test/test.ml", 766, 27056, 27105), ("test/test.ml", 766, 27056, 27132), 0), [(("test/test.ml", 766, 27056, 27106), ("test/test.ml", 766, 27056, 27131), 0)], 0))]), (("test/test.ml", 766, 27056, 27078), ("test/test.ml", 766, 27056, 27133), 0), [(("test/test.ml", 766, 27056, 27079), ("test/test.ml", 766, 27056, 27132), 0)], 0), 0, (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 766, 27056, 27133), 0))], (Tag2 (0, [(((("newtext2", (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0))), (("test/test.ml", 767, 27137, 27149), ("test/test.ml", 767, 27137, 27157), 0), 0, 0), (Tag5 ((((("decl_emit_constructor_arguments"), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0))), (("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27192), 0), 0, 0), [(0, (Tag8 ([(Tag12 ((((("pcd_name"), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27201), 0), 0, 0), (("txt"), (("test/test.ml", 767, 27137, 27202), ("test/test.ml", 767, 27137, 27205), 0))), (("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27205), 0), 0, 0); (((("pcd_args"), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0))), (("test/test.ml", 767, 27137, 27207), ("test/test.ml", 767, 27137, 27215), 0), 0, 0); (((("s"), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0))), (("test/test.ml", 767, 27137, 27217), ("test/test.ml", 767, 27137, 27218), 0), 0, 0)]), (("test/test.ml", 767, 27137, 27192), ("test/test.ml", 767, 27137, 27219), 0), [(("test/test.ml", 767, 27137, 27193), ("test/test.ml", 767, 27137, 27218), 0)], 0))]), (("test/test.ml", 767, 27137, 27160), ("test/test.ml", 767, 27137, 27220), 0), [(("test/test.ml", 767, 27137, 27161), ("test/test.ml", 767, 27137, 27219), 0)], 0), 0, (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 767, 27137, 27220), 0))], (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0))), (("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27246), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0))), (("test/test.ml", 768, 27224, 27259), ("test/test.ml", 768, 27224, 27260), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2A:", (("test/test.ml", 768, 27224, 27249), ("test/test.ml", 768, 27224, 27257), 0), 0)), (("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27258), 0), 0, 0)); (0, (((("newtext2"), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0))), (("test/test.ml", 768, 27224, 27261), ("test/test.ml", 768, 27224, 27269), 0), 0, 0))]), (("test/test.ml", 768, 27224, 27247), ("test/test.ml", 768, 27224, 27270), 0), [(("test/test.ml", 768, 27224, 27248), ("test/test.ml", 768, 27224, 27269), 0)], 0))]), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 768, 27224, 27271), 0), [(("test/test.ml", 768, 27224, 27233), ("test/test.ml", 768, 27224, 27270), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0))), (("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27295), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0))), (("test/test.ml", 769, 27273, 27308), ("test/test.ml", 769, 27273, 27309), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG2B:", (("test/test.ml", 769, 27273, 27298), ("test/test.ml", 769, 27273, 27306), 0), 0)), (("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27307), 0), 0, 0)); (0, (((("newtext"), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0))), (("test/test.ml", 769, 27273, 27310), ("test/test.ml", 769, 27273, 27317), 0), 0, 0))]), (("test/test.ml", 769, 27273, 27296), ("test/test.ml", 769, 27273, 27318), 0), [(("test/test.ml", 769, 27273, 27297), ("test/test.ml", 769, 27273, 27317), 0)], 0))]), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 769, 27273, 27319), 0), [(("test/test.ml", 769, 27273, 27282), ("test/test.ml", 769, 27273, 27318), 0)], 0), (Tag2 (0, [(((("ret", (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0))), (("test/test.ml", 771, 27322, 27334), ("test/test.ml", 771, 27322, 27337), 0), 0, 0), (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0))), (("test/test.ml", 771, 27322, 27369), ("test/test.ml", 771, 27322, 27370), 0), 0, 0), [(0, (Tag1 (Tag2 ("constructor:\"", (("test/test.ml", 771, 27322, 27354), ("test/test.ml", 771, 27322, 27368), 0), 0)), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 771, 27322, 27369), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0))), (("test/test.ml", 771, 27322, 27384), ("test/test.ml", 771, 27322, 27385), 0), 0, 0), [(0, (Tag12 ((((("pcd_name"), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27379), 0), 0, 0), (("txt"), (("test/test.ml", 771, 27322, 27380), ("test/test.ml", 771, 27322, 27383), 0))), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 771, 27322, 27383), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0))), (("test/test.ml", 772, 27391, 27422), ("test/test.ml", 772, 27391, 27423), 0), 0, 0), [(0, (Tag1 (Tag2 ("\"", (("test/test.ml", 771, 27322, 27387), ("test/test.ml", 771, 27322, 27389), 0), 0)), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 771, 27322, 27390), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0))), (("test/test.ml", 772, 27391, 27428), ("test/test.ml", 772, 27391, 27429), 0), 0, 0), [(0, (Tag1 (Tag2 ("{", (("test/test.ml", 772, 27391, 27425), ("test/test.ml", 772, 27391, 27426), 0), 0)), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 772, 27391, 27427), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0))), (("test/test.ml", 774, 27501, 27532), ("test/test.ml", 774, 27501, 27533), 0), 0, 0), [(0, (Tag5 ((((("print_constructor_arguments"), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0))), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27488), 0), 0, 0), [(0, (Tag8 ([(((("pcd_args"), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0))), (("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27497), 0), 0, 0); (((("s"), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0))), (("test/test.ml", 773, 27430, 27498), ("test/test.ml", 773, 27430, 27499), 0), 0, 0)]), (("test/test.ml", 773, 27430, 27488), ("test/test.ml", 773, 27430, 27500), 0), [(("test/test.ml", 773, 27430, 27489), ("test/test.ml", 773, 27430, 27499), 0)], 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 773, 27430, 27500), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0))), (("test/test.ml", 774, 27501, 27538), ("test/test.ml", 774, 27501, 27539), 0), 0, 0), [(0, (Tag1 (Tag2 ("}", (("test/test.ml", 774, 27501, 27535), ("test/test.ml", 774, 27501, 27536), 0), 0)), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 774, 27501, 27537), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0))), (("test/test.ml", 774, 27501, 27546), ("test/test.ml", 774, 27501, 27547), 0), 0, 0), [(0, (Tag1 (Tag2 ("\t|", (("test/test.ml", 774, 27501, 27541), ("test/test.ml", 774, 27501, 27544), 0), 0)), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 774, 27501, 27545), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0))), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27628), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0))), (("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27630), 0), 0, 0); (((("s"), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0))), (("test/test.ml", 775, 27548, 27631), ("test/test.ml", 775, 27548, 27632), 0), 0, 0)]), (("test/test.ml", 775, 27548, 27628), ("test/test.ml", 775, 27548, 27633), 0), [(("test/test.ml", 775, 27548, 27629), ("test/test.ml", 775, 27548, 27632), 0)], 0))]), (("test/test.ml", 775, 27548, 27579), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27540), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 774, 27501, 27534), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 773, 27430, 27461), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 772, 27391, 27424), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27386), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27371), ("test/test.ml", 775, 27548, 27633), 0), 0, 0))]), (("test/test.ml", 771, 27322, 27353), ("test/test.ml", 775, 27548, 27633), 0), 0, 0), 0, (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 775, 27548, 27633), 0))], (Tag16 ((Tag5 ((((Tag1 (("Printf"), "printf"), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0))), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27666), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:constructor_declaration_new: %s\n", (("test/test.ml", 777, 27645, 27668), ("test/test.ml", 777, 27645, 27707), 0), 0)), (("test/test.ml", 777, 27645, 27667), ("test/test.ml", 777, 27645, 27708), 0), 0, 0)); (0, (((("ret"), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0))), (("test/test.ml", 777, 27645, 27709), ("test/test.ml", 777, 27645, 27712), 0), 0, 0))]), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 777, 27645, 27712), 0), 0, 0), (((("ret"), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0))), (("test/test.ml", 778, 27714, 27722), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 777, 27645, 27653), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 771, 27322, 27330), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 769, 27273, 27281), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 768, 27224, 27232), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 767, 27137, 27145), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 766, 27056, 27064), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 752, 26707, 26715), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 741, 26348, 26354), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 738, 26291, 26295), ("test/test.ml", 778, 27714, 27725), 0), 0, 0))]), (("test/test.ml", 736, 26264, 26266), ("test/test.ml", 778, 27714, 27725), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0)), 0), (("test/test.ml", 735, 26153, 26255), ("test/test.ml", 735, 26153, 26261), 0), 0, 0)), (("test/test.ml", 735, 26153, 26254), ("test/test.ml", 778, 27714, 27725), 0), 0, 0)), (("test/test.ml", 735, 26153, 26210), ("test/test.ml", 778, 27714, 27725), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 735, 26153, 26153), ("test/test.ml", 778, 27714, 27725), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_kind", (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0))), (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0))), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 781, 27738, 27757), 0), [(("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0))), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0))), (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0), 0, 0); ((("s", (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0))), (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0), 0, 0)]), (("test/test.ml", 783, 27782, 27786), ("test/test.ml", 783, 27782, 27791), 0), [(("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27790), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0))), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0), 0, 0), [((Tag5 ((("Ptype_abstract"), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0)), 0), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0))), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0))), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 786, 27835, 27893), ("test/test.ml", 786, 27835, 27914), 0), 0)), (("test/test.ml", 786, 27835, 27891), ("test/test.ml", 786, 27835, 27916), 0), [(("test/test.ml", 786, 27835, 27892), ("test/test.ml", 786, 27835, 27915), 0)], 0))]), (("test/test.ml", 786, 27835, 27875), ("test/test.ml", 786, 27835, 27917), 0), [(("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27916), 0)], 0))]), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 786, 27835, 27918), 0), [(("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27917), 0)], 0), (Tag1 (Tag2 ("DEBUG:Ptype_abstract", (("test/test.ml", 787, 27920, 27927), ("test/test.ml", 787, 27920, 27947), 0), 0)), (("test/test.ml", 787, 27920, 27926), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)); ((Tag5 ((("Ptype_variant"), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27968), 0)), ((0, ((("a", (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0))), (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0), 0, 0)))), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27970), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0))), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0))), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptype_variant:", (("test/test.ml", 789, 27980, 28019), ("test/test.ml", 789, 27980, 28039), 0), 0)), (("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28040), 0), 0, 0); (((("a"), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0))), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0), 0, 0)]), (("test/test.ml", 789, 27980, 28017), ("test/test.ml", 789, 27980, 28045), 0), [(("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28044), 0)], 0))]), (("test/test.ml", 789, 27980, 28001), ("test/test.ml", 789, 27980, 28046), 0), [(("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28045), 0)], 0))]), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 789, 27980, 28047), 0), [(("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28046), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0))), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0), 0, 0), [(0, (Tag1 (Tag2 ("type variant:", (("test/test.ml", 790, 28049, 28056), ("test/test.ml", 790, 28049, 28069), 0), 0)), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28070), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0))), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0))), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0), 0, 0); (((("s"), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0))), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0), 0, 0)]), (("test/test.ml", 790, 28049, 28124), ("test/test.ml", 790, 28049, 28129), 0), [(("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28128), 0)], 0))]), (("test/test.ml", 790, 28049, 28073), ("test/test.ml", 790, 28049, 28130), 0), [(("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28129), 0)], 0))]), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)); ((Tag5 ((("Ptype_record"), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28201), 0)), ((0, ((("a", (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0))), (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0), 0, 0)))), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28203), 0), 0, 0), 0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0))), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0))), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0), 0, 0); (((("s"), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0))), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0), 0, 0)]), (("test/test.ml", 793, 28212, 28242), ("test/test.ml", 793, 28212, 28247), 0), [(("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28246), 0)], 0))]), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28247), 0), 0, 0)); ((Tag5 ((("Ptype_open"), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0)), 0), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0))), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0))), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 794, 28248, 28301), ("test/test.ml", 794, 28248, 28322), 0), 0)), (("test/test.ml", 794, 28248, 28299), ("test/test.ml", 794, 28248, 28324), 0), [(("test/test.ml", 794, 28248, 28300), ("test/test.ml", 794, 28248, 28323), 0)], 0))]), (("test/test.ml", 794, 28248, 28283), ("test/test.ml", 794, 28248, 28325), 0), [(("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28324), 0)], 0))]), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28326), 0), [(("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28325), 0)], 0), (Tag1 (Tag2 ("Ptype_abstract", (("test/test.ml", 794, 28248, 28329), ("test/test.ml", 794, 28248, 28343), 0), 0)), (("test/test.ml", 794, 28248, 28328), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 784, 27794, 27798), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 782, 27767, 27769), ("test/test.ml", 794, 28248, 28344), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0)), 0), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0), 0, 0)), (("test/test.ml", 781, 27738, 27758), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 794, 28248, 28344), 1), 0, 0), 0, (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0))]), (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_kind", (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0))), (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0))), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 781, 27738, 27757), 0), [(("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0))), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0))), (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0), 0, 0); ((("s", (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0))), (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0), 0, 0)]), (("test/test.ml", 783, 27782, 27786), ("test/test.ml", 783, 27782, 27791), 0), [(("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27790), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0))), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0), 0, 0), [((Tag5 ((("Ptype_abstract"), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0)), 0), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0))), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0))), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 786, 27835, 27893), ("test/test.ml", 786, 27835, 27914), 0), 0)), (("test/test.ml", 786, 27835, 27891), ("test/test.ml", 786, 27835, 27916), 0), [(("test/test.ml", 786, 27835, 27892), ("test/test.ml", 786, 27835, 27915), 0)], 0))]), (("test/test.ml", 786, 27835, 27875), ("test/test.ml", 786, 27835, 27917), 0), [(("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27916), 0)], 0))]), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 786, 27835, 27918), 0), [(("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27917), 0)], 0), (Tag1 (Tag2 ("DEBUG:Ptype_abstract", (("test/test.ml", 787, 27920, 27927), ("test/test.ml", 787, 27920, 27947), 0), 0)), (("test/test.ml", 787, 27920, 27926), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)); ((Tag5 ((("Ptype_variant"), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27968), 0)), ((0, ((("a", (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0))), (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0), 0, 0)))), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27970), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0))), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0))), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptype_variant:", (("test/test.ml", 789, 27980, 28019), ("test/test.ml", 789, 27980, 28039), 0), 0)), (("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28040), 0), 0, 0); (((("a"), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0))), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0), 0, 0)]), (("test/test.ml", 789, 27980, 28017), ("test/test.ml", 789, 27980, 28045), 0), [(("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28044), 0)], 0))]), (("test/test.ml", 789, 27980, 28001), ("test/test.ml", 789, 27980, 28046), 0), [(("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28045), 0)], 0))]), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 789, 27980, 28047), 0), [(("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28046), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0))), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0), 0, 0), [(0, (Tag1 (Tag2 ("type variant:", (("test/test.ml", 790, 28049, 28056), ("test/test.ml", 790, 28049, 28069), 0), 0)), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28070), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0))), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0))), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0), 0, 0); (((("s"), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0))), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0), 0, 0)]), (("test/test.ml", 790, 28049, 28124), ("test/test.ml", 790, 28049, 28129), 0), [(("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28128), 0)], 0))]), (("test/test.ml", 790, 28049, 28073), ("test/test.ml", 790, 28049, 28130), 0), [(("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28129), 0)], 0))]), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)); ((Tag5 ((("Ptype_record"), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28201), 0)), ((0, ((("a", (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0))), (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0), 0, 0)))), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28203), 0), 0, 0), 0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0))), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0))), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0), 0, 0); (((("s"), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0))), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0), 0, 0)]), (("test/test.ml", 793, 28212, 28242), ("test/test.ml", 793, 28212, 28247), 0), [(("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28246), 0)], 0))]), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28247), 0), 0, 0)); ((Tag5 ((("Ptype_open"), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0)), 0), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0))), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0))), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 794, 28248, 28301), ("test/test.ml", 794, 28248, 28322), 0), 0)), (("test/test.ml", 794, 28248, 28299), ("test/test.ml", 794, 28248, 28324), 0), [(("test/test.ml", 794, 28248, 28300), ("test/test.ml", 794, 28248, 28323), 0)], 0))]), (("test/test.ml", 794, 28248, 28283), ("test/test.ml", 794, 28248, 28325), 0), [(("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28324), 0)], 0))]), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28326), 0), [(("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28325), 0)], 0), (Tag1 (Tag2 ("Ptype_abstract", (("test/test.ml", 794, 28248, 28329), ("test/test.ml", 794, 28248, 28343), 0), 0)), (("test/test.ml", 794, 28248, 28328), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 784, 27794, 27798), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 782, 27767, 27769), ("test/test.ml", 794, 28248, 28344), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0)), 0), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0), 0, 0)), (("test/test.ml", 781, 27738, 27758), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 794, 28248, 28344), 1), 0, 0), 0, (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_kind", (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0))), (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0))), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 781, 27738, 27757), 0), [(("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0))), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0))), (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0), 0, 0); ((("s", (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0))), (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0), 0, 0)]), (("test/test.ml", 783, 27782, 27786), ("test/test.ml", 783, 27782, 27791), 0), [(("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27790), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0))), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0), 0, 0), [((Tag5 ((("Ptype_abstract"), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0)), 0), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0))), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0))), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 786, 27835, 27893), ("test/test.ml", 786, 27835, 27914), 0), 0)), (("test/test.ml", 786, 27835, 27891), ("test/test.ml", 786, 27835, 27916), 0), [(("test/test.ml", 786, 27835, 27892), ("test/test.ml", 786, 27835, 27915), 0)], 0))]), (("test/test.ml", 786, 27835, 27875), ("test/test.ml", 786, 27835, 27917), 0), [(("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27916), 0)], 0))]), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 786, 27835, 27918), 0), [(("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27917), 0)], 0), (Tag1 (Tag2 ("DEBUG:Ptype_abstract", (("test/test.ml", 787, 27920, 27927), ("test/test.ml", 787, 27920, 27947), 0), 0)), (("test/test.ml", 787, 27920, 27926), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)); ((Tag5 ((("Ptype_variant"), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27968), 0)), ((0, ((("a", (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0))), (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0), 0, 0)))), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27970), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0))), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0))), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptype_variant:", (("test/test.ml", 789, 27980, 28019), ("test/test.ml", 789, 27980, 28039), 0), 0)), (("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28040), 0), 0, 0); (((("a"), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0))), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0), 0, 0)]), (("test/test.ml", 789, 27980, 28017), ("test/test.ml", 789, 27980, 28045), 0), [(("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28044), 0)], 0))]), (("test/test.ml", 789, 27980, 28001), ("test/test.ml", 789, 27980, 28046), 0), [(("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28045), 0)], 0))]), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 789, 27980, 28047), 0), [(("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28046), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0))), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0), 0, 0), [(0, (Tag1 (Tag2 ("type variant:", (("test/test.ml", 790, 28049, 28056), ("test/test.ml", 790, 28049, 28069), 0), 0)), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28070), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0))), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0))), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0), 0, 0); (((("s"), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0))), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0), 0, 0)]), (("test/test.ml", 790, 28049, 28124), ("test/test.ml", 790, 28049, 28129), 0), [(("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28128), 0)], 0))]), (("test/test.ml", 790, 28049, 28073), ("test/test.ml", 790, 28049, 28130), 0), [(("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28129), 0)], 0))]), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)); ((Tag5 ((("Ptype_record"), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28201), 0)), ((0, ((("a", (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0))), (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0), 0, 0)))), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28203), 0), 0, 0), 0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0))), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0))), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0), 0, 0); (((("s"), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0))), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0), 0, 0)]), (("test/test.ml", 793, 28212, 28242), ("test/test.ml", 793, 28212, 28247), 0), [(("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28246), 0)], 0))]), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28247), 0), 0, 0)); ((Tag5 ((("Ptype_open"), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0)), 0), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0))), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0))), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 794, 28248, 28301), ("test/test.ml", 794, 28248, 28322), 0), 0)), (("test/test.ml", 794, 28248, 28299), ("test/test.ml", 794, 28248, 28324), 0), [(("test/test.ml", 794, 28248, 28300), ("test/test.ml", 794, 28248, 28323), 0)], 0))]), (("test/test.ml", 794, 28248, 28283), ("test/test.ml", 794, 28248, 28325), 0), [(("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28324), 0)], 0))]), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28326), 0), [(("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28325), 0)], 0), (Tag1 (Tag2 ("Ptype_abstract", (("test/test.ml", 794, 28248, 28329), ("test/test.ml", 794, 28248, 28343), 0), 0)), (("test/test.ml", 794, 28248, 28328), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 784, 27794, 27798), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 782, 27767, 27769), ("test/test.ml", 794, 28248, 28344), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0)), 0), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0), 0, 0)), (("test/test.ml", 781, 27738, 27758), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 794, 28248, 28344), 1), 0, 0), 0, (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0))])
("DEBUG:value_binding.pat:", ((("process_kind", (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0))), (("test/test.ml", 781, 27738, 27742), ("test/test.ml", 781, 27738, 27754), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0))), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 781, 27738, 27757), 0), [(("test/test.ml", 781, 27738, 27755), ("test/test.ml", 781, 27738, 27756), 0)], 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0))), (("test/test.ml", 782, 27767, 27775), ("test/test.ml", 782, 27767, 27776), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0))), (("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27788), 0), 0, 0); ((("s", (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0))), (("test/test.ml", 783, 27782, 27789), ("test/test.ml", 783, 27782, 27790), 0), 0, 0)]), (("test/test.ml", 783, 27782, 27786), ("test/test.ml", 783, 27782, 27791), 0), [(("test/test.ml", 783, 27782, 27787), ("test/test.ml", 783, 27782, 27790), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0))), (("test/test.ml", 784, 27794, 27804), ("test/test.ml", 784, 27794, 27805), 0), 0, 0), [((Tag5 ((("Ptype_abstract"), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0)), 0), (("test/test.ml", 786, 27835, 27841), ("test/test.ml", 786, 27835, 27855), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0))), (("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27874), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0))), (("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27890), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 786, 27835, 27893), ("test/test.ml", 786, 27835, 27914), 0), 0)), (("test/test.ml", 786, 27835, 27891), ("test/test.ml", 786, 27835, 27916), 0), [(("test/test.ml", 786, 27835, 27892), ("test/test.ml", 786, 27835, 27915), 0)], 0))]), (("test/test.ml", 786, 27835, 27875), ("test/test.ml", 786, 27835, 27917), 0), [(("test/test.ml", 786, 27835, 27876), ("test/test.ml", 786, 27835, 27916), 0)], 0))]), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 786, 27835, 27918), 0), [(("test/test.ml", 786, 27835, 27861), ("test/test.ml", 786, 27835, 27917), 0)], 0), (Tag1 (Tag2 ("DEBUG:Ptype_abstract", (("test/test.ml", 787, 27920, 27927), ("test/test.ml", 787, 27920, 27947), 0), 0)), (("test/test.ml", 787, 27920, 27926), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)), (("test/test.ml", 786, 27835, 27860), ("test/test.ml", 787, 27920, 27948), 0), 0, 0)); ((Tag5 ((("Ptype_variant"), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27968), 0)), ((0, ((("a", (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0))), (("test/test.ml", 788, 27949, 27969), ("test/test.ml", 788, 27949, 27970), 0), 0, 0)))), (("test/test.ml", 788, 27949, 27955), ("test/test.ml", 788, 27949, 27970), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0))), (("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28000), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0))), (("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28016), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Ptype_variant:", (("test/test.ml", 789, 27980, 28019), ("test/test.ml", 789, 27980, 28039), 0), 0)), (("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28040), 0), 0, 0); (((("a"), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0))), (("test/test.ml", 789, 27980, 28043), ("test/test.ml", 789, 27980, 28044), 0), 0, 0)]), (("test/test.ml", 789, 27980, 28017), ("test/test.ml", 789, 27980, 28045), 0), [(("test/test.ml", 789, 27980, 28018), ("test/test.ml", 789, 27980, 28044), 0)], 0))]), (("test/test.ml", 789, 27980, 28001), ("test/test.ml", 789, 27980, 28046), 0), [(("test/test.ml", 789, 27980, 28002), ("test/test.ml", 789, 27980, 28045), 0)], 0))]), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 789, 27980, 28047), 0), [(("test/test.ml", 789, 27980, 27987), ("test/test.ml", 789, 27980, 28046), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0))), (("test/test.ml", 790, 28049, 28071), ("test/test.ml", 790, 28049, 28072), 0), 0, 0), [(0, (Tag1 (Tag2 ("type variant:", (("test/test.ml", 790, 28049, 28056), ("test/test.ml", 790, 28049, 28069), 0), 0)), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28070), 0), 0, 0)); (0, (Tag5 ((((("process_pype_variant_constructor_declaration_list"), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0))), (("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28123), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0))), (("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28126), 0), 0, 0); (((("s"), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0))), (("test/test.ml", 790, 28049, 28127), ("test/test.ml", 790, 28049, 28128), 0), 0, 0)]), (("test/test.ml", 790, 28049, 28124), ("test/test.ml", 790, 28049, 28129), 0), [(("test/test.ml", 790, 28049, 28125), ("test/test.ml", 790, 28049, 28128), 0)], 0))]), (("test/test.ml", 790, 28049, 28073), ("test/test.ml", 790, 28049, 28130), 0), [(("test/test.ml", 790, 28049, 28074), ("test/test.ml", 790, 28049, 28129), 0)], 0))]), (("test/test.ml", 790, 28049, 28055), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)), (("test/test.ml", 789, 27980, 27986), ("test/test.ml", 790, 28049, 28130), 0), 0, 0)); ((Tag5 ((("Ptype_record"), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28201), 0)), ((0, ((("a", (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0))), (("test/test.ml", 792, 28183, 28202), ("test/test.ml", 792, 28183, 28203), 0), 0, 0)))), (("test/test.ml", 792, 28183, 28189), ("test/test.ml", 792, 28183, 28203), 0), 0, 0), 0, (Tag5 ((((("process_record_kind_list"), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0))), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28242), 0), 0, 0), [(0, (Tag8 ([(((("a"), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0))), (("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28244), 0), 0, 0); (((("s"), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0))), (("test/test.ml", 793, 28212, 28245), ("test/test.ml", 793, 28212, 28246), 0), 0, 0)]), (("test/test.ml", 793, 28212, 28242), ("test/test.ml", 793, 28212, 28247), 0), [(("test/test.ml", 793, 28212, 28243), ("test/test.ml", 793, 28212, 28246), 0)], 0))]), (("test/test.ml", 793, 28212, 28218), ("test/test.ml", 793, 28212, 28247), 0), 0, 0)); ((Tag5 ((("Ptype_open"), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0)), 0), (("test/test.ml", 794, 28248, 28254), ("test/test.ml", 794, 28248, 28264), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0))), (("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28282), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0))), (("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28298), 0), 0, 0), [(0, (Tag1 (Tag2 ("DEBUG:Ptype_abstract:", (("test/test.ml", 794, 28248, 28301), ("test/test.ml", 794, 28248, 28322), 0), 0)), (("test/test.ml", 794, 28248, 28299), ("test/test.ml", 794, 28248, 28324), 0), [(("test/test.ml", 794, 28248, 28300), ("test/test.ml", 794, 28248, 28323), 0)], 0))]), (("test/test.ml", 794, 28248, 28283), ("test/test.ml", 794, 28248, 28325), 0), [(("test/test.ml", 794, 28248, 28284), ("test/test.ml", 794, 28248, 28324), 0)], 0))]), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28326), 0), [(("test/test.ml", 794, 28248, 28269), ("test/test.ml", 794, 28248, 28325), 0)], 0), (Tag1 (Tag2 ("Ptype_abstract", (("test/test.ml", 794, 28248, 28329), ("test/test.ml", 794, 28248, 28343), 0), 0)), (("test/test.ml", 794, 28248, 28328), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 794, 28248, 28268), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 784, 27794, 27798), ("test/test.ml", 794, 28248, 28344), 0), 0, 0))]), (("test/test.ml", 782, 27767, 27769), ("test/test.ml", 794, 28248, 28344), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0)), 0), (("test/test.ml", 781, 27738, 27759), ("test/test.ml", 781, 27738, 27765), 0), 0, 0)), (("test/test.ml", 781, 27738, 27758), ("test/test.ml", 794, 28248, 28344), 0), 0, 0)), (("test/test.ml", 781, 27738, 27754), ("test/test.ml", 794, 28248, 28344), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 781, 27738, 27738), ("test/test.ml", 794, 28248, 28344), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("print_type_decl", (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0))), (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0))), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 796, 28346, 28368), 0), [(("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0))), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0))), (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0), 0, 0); ((("s", (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0))), (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0), 0, 0)]), (("test/test.ml", 798, 28386, 28389), ("test/test.ml", 798, 28386, 28394), 0), [(("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28393), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0))), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0), 0, 0), [((Tag7 ([((("ptype_name"), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 1)), ((("ptype_name", (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0))), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0), 0, 0)); ((("ptype_params"), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 1)), ((("ptype_params", (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0))), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0), 0, 0)); ((("ptype_cstrs"), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 1)), ((("ptype_cstrs", (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0))), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0), 0, 0)); ((("ptype_kind"), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 1)), ((("ptype_kind", (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0))), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0), 0, 0)); ((("ptype_private"), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 1)), ((("ptype_private", (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0))), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0), 0, 0)); ((("ptype_manifest"), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 1)), ((("ptype_manifest", (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0))), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0), 0, 0)); ((("ptype_attributes"), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 1)), ((("ptype_attributes", (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0))), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0), 0, 0)); ((("ptype_loc"), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 1)), ((("ptype_loc", (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0))), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0), 0, 0))], 0), (("test/test.ml", 800, 28415, 28421), ("test/test.ml", 809, 28814, 28821), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0))), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0))), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:type_decl:", (("test/test.ml", 810, 28825, 28864), ("test/test.ml", 810, 28825, 28880), 0), 0)), (("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28881), 0), 0, 0); (((("ptype_name"), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0))), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0), 0, 0)]), (("test/test.ml", 810, 28825, 28862), ("test/test.ml", 810, 28825, 28894), 0), [(("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28893), 0)], 0))]), (("test/test.ml", 810, 28825, 28846), ("test/test.ml", 810, 28825, 28895), 0), [(("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28894), 0)], 0))]), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 810, 28825, 28896), 0), [(("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28895), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0))), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0))), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:parameters:", (("test/test.ml", 811, 28898, 28937), ("test/test.ml", 811, 28898, 28954), 0), 0)), (("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28955), 0), 0, 0); (((("ptype_params"), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0))), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0), 0, 0)]), (("test/test.ml", 811, 28898, 28935), ("test/test.ml", 811, 28898, 28970), 0), [(("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28969), 0)], 0))]), (("test/test.ml", 811, 28898, 28919), ("test/test.ml", 811, 28898, 28971), 0), [(("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28970), 0)], 0))]), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 811, 28898, 28972), 0), [(("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28971), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0))), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0))), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:cstrs:", (("test/test.ml", 812, 28974, 29013), ("test/test.ml", 812, 28974, 29025), 0), 0)), (("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29026), 0), 0, 0); (((("ptype_cstrs"), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0))), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0), 0, 0)]), (("test/test.ml", 812, 28974, 29011), ("test/test.ml", 812, 28974, 29040), 0), [(("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29039), 0)], 0))]), (("test/test.ml", 812, 28974, 28995), ("test/test.ml", 812, 28974, 29041), 0), [(("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29040), 0)], 0))]), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 812, 28974, 29042), 0), [(("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 29041), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0))), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0))), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:kind:", (("test/test.ml", 813, 29044, 29083), ("test/test.ml", 813, 29044, 29094), 0), 0)), (("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29095), 0), 0, 0); (((("ptype_kind"), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0))), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0), 0, 0)]), (("test/test.ml", 813, 29044, 29081), ("test/test.ml", 813, 29044, 29107), 0), [(("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29106), 0)], 0))]), (("test/test.ml", 813, 29044, 29065), ("test/test.ml", 813, 29044, 29108), 0), [(("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29107), 0)], 0))]), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 813, 29044, 29109), 0), [(("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29108), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0))), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0))), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:private:", (("test/test.ml", 815, 29118, 29157), ("test/test.ml", 815, 29118, 29171), 0), 0)), (("test/test.ml", 815, 29118, 29156), ("test/test.ml", 815, 29118, 29172), 0), 0, 0); (((("ptype_private"), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0))), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:manifest", (("test/test.ml", 816, 29190, 29229), ("test/test.ml", 816, 29190, 29243), 0), 0)), (("test/test.ml", 816, 29190, 29228), ("test/test.ml", 816, 29190, 29244), 0), 0, 0); (((("ptype_manifest"), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0))), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:attr", (("test/test.ml", 817, 29262, 29301), ("test/test.ml", 817, 29262, 29311), 0), 0)), (("test/test.ml", 817, 29262, 29300), ("test/test.ml", 817, 29262, 29312), 0), 0, 0); (((("ptype_attributes"), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0))), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:loc", (("test/test.ml", 818, 29332, 29371), ("test/test.ml", 818, 29332, 29380), 0), 0)), (("test/test.ml", 818, 29332, 29370), ("test/test.ml", 818, 29332, 29381), 0), 0, 0); (((("ptype_loc"), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0))), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0), 0, 0)]), (("test/test.ml", 815, 29118, 29155), ("test/test.ml", 819, 29393, 29431), 0), [(("test/test.ml", 815, 29118, 29156), ("test/test.ml", 818, 29332, 29392), 0)], 0))]), (("test/test.ml", 815, 29118, 29139), ("test/test.ml", 819, 29393, 29432), 0), [(("test/test.ml", 815, 29118, 29140), ("test/test.ml", 819, 29393, 29431), 0)], 0))]), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 819, 29393, 29433), 0), [(("test/test.ml", 815, 29118, 29125), ("test/test.ml", 819, 29393, 29432), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0))), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0), 0, 0), [(0, (Tag1 (Tag2 ("print_type_decl:\"", (("test/test.ml", 820, 29435, 29442), ("test/test.ml", 820, 29435, 29460), 0), 0)), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29461), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0))), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0), 0, 0), [(0, (Tag12 ((((("ptype_name"), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0), 0, 0), (("txt"), (("test/test.ml", 820, 29435, 29476), ("test/test.ml", 820, 29435, 29479), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29479), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0))), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" = ", (("test/test.ml", 820, 29435, 29483), ("test/test.ml", 820, 29435, 29488), 0), 0)), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29489), 0), 0, 0)); (0, (Tag5 ((((("process_kind"), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0))), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0), 0, 0), [(0, (Tag8 ([(((("ptype_kind"), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0))), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0), 0, 0); (((("s"), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0))), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0), 0, 0)]), (("test/test.ml", 820, 29435, 29506), ("test/test.ml", 820, 29435, 29520), 0), [(("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29519), 0)], 0))]), (("test/test.ml", 820, 29435, 29492), ("test/test.ml", 820, 29435, 29521), 0), [(("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29520), 0)], 0))]), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 799, 28398, 28402), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 797, 28371, 28373), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 820, 29435, 29521), 1), 0, 0), 0, (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0))]), (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("print_type_decl", (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0))), (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0))), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 796, 28346, 28368), 0), [(("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0))), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0))), (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0), 0, 0); ((("s", (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0))), (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0), 0, 0)]), (("test/test.ml", 798, 28386, 28389), ("test/test.ml", 798, 28386, 28394), 0), [(("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28393), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0))), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0), 0, 0), [((Tag7 ([((("ptype_name"), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 1)), ((("ptype_name", (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0))), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0), 0, 0)); ((("ptype_params"), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 1)), ((("ptype_params", (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0))), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0), 0, 0)); ((("ptype_cstrs"), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 1)), ((("ptype_cstrs", (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0))), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0), 0, 0)); ((("ptype_kind"), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 1)), ((("ptype_kind", (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0))), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0), 0, 0)); ((("ptype_private"), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 1)), ((("ptype_private", (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0))), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0), 0, 0)); ((("ptype_manifest"), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 1)), ((("ptype_manifest", (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0))), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0), 0, 0)); ((("ptype_attributes"), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 1)), ((("ptype_attributes", (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0))), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0), 0, 0)); ((("ptype_loc"), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 1)), ((("ptype_loc", (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0))), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0), 0, 0))], 0), (("test/test.ml", 800, 28415, 28421), ("test/test.ml", 809, 28814, 28821), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0))), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0))), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:type_decl:", (("test/test.ml", 810, 28825, 28864), ("test/test.ml", 810, 28825, 28880), 0), 0)), (("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28881), 0), 0, 0); (((("ptype_name"), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0))), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0), 0, 0)]), (("test/test.ml", 810, 28825, 28862), ("test/test.ml", 810, 28825, 28894), 0), [(("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28893), 0)], 0))]), (("test/test.ml", 810, 28825, 28846), ("test/test.ml", 810, 28825, 28895), 0), [(("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28894), 0)], 0))]), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 810, 28825, 28896), 0), [(("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28895), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0))), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0))), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:parameters:", (("test/test.ml", 811, 28898, 28937), ("test/test.ml", 811, 28898, 28954), 0), 0)), (("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28955), 0), 0, 0); (((("ptype_params"), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0))), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0), 0, 0)]), (("test/test.ml", 811, 28898, 28935), ("test/test.ml", 811, 28898, 28970), 0), [(("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28969), 0)], 0))]), (("test/test.ml", 811, 28898, 28919), ("test/test.ml", 811, 28898, 28971), 0), [(("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28970), 0)], 0))]), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 811, 28898, 28972), 0), [(("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28971), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0))), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0))), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:cstrs:", (("test/test.ml", 812, 28974, 29013), ("test/test.ml", 812, 28974, 29025), 0), 0)), (("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29026), 0), 0, 0); (((("ptype_cstrs"), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0))), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0), 0, 0)]), (("test/test.ml", 812, 28974, 29011), ("test/test.ml", 812, 28974, 29040), 0), [(("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29039), 0)], 0))]), (("test/test.ml", 812, 28974, 28995), ("test/test.ml", 812, 28974, 29041), 0), [(("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29040), 0)], 0))]), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 812, 28974, 29042), 0), [(("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 29041), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0))), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0))), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:kind:", (("test/test.ml", 813, 29044, 29083), ("test/test.ml", 813, 29044, 29094), 0), 0)), (("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29095), 0), 0, 0); (((("ptype_kind"), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0))), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0), 0, 0)]), (("test/test.ml", 813, 29044, 29081), ("test/test.ml", 813, 29044, 29107), 0), [(("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29106), 0)], 0))]), (("test/test.ml", 813, 29044, 29065), ("test/test.ml", 813, 29044, 29108), 0), [(("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29107), 0)], 0))]), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 813, 29044, 29109), 0), [(("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29108), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0))), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0))), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:private:", (("test/test.ml", 815, 29118, 29157), ("test/test.ml", 815, 29118, 29171), 0), 0)), (("test/test.ml", 815, 29118, 29156), ("test/test.ml", 815, 29118, 29172), 0), 0, 0); (((("ptype_private"), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0))), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:manifest", (("test/test.ml", 816, 29190, 29229), ("test/test.ml", 816, 29190, 29243), 0), 0)), (("test/test.ml", 816, 29190, 29228), ("test/test.ml", 816, 29190, 29244), 0), 0, 0); (((("ptype_manifest"), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0))), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:attr", (("test/test.ml", 817, 29262, 29301), ("test/test.ml", 817, 29262, 29311), 0), 0)), (("test/test.ml", 817, 29262, 29300), ("test/test.ml", 817, 29262, 29312), 0), 0, 0); (((("ptype_attributes"), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0))), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:loc", (("test/test.ml", 818, 29332, 29371), ("test/test.ml", 818, 29332, 29380), 0), 0)), (("test/test.ml", 818, 29332, 29370), ("test/test.ml", 818, 29332, 29381), 0), 0, 0); (((("ptype_loc"), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0))), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0), 0, 0)]), (("test/test.ml", 815, 29118, 29155), ("test/test.ml", 819, 29393, 29431), 0), [(("test/test.ml", 815, 29118, 29156), ("test/test.ml", 818, 29332, 29392), 0)], 0))]), (("test/test.ml", 815, 29118, 29139), ("test/test.ml", 819, 29393, 29432), 0), [(("test/test.ml", 815, 29118, 29140), ("test/test.ml", 819, 29393, 29431), 0)], 0))]), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 819, 29393, 29433), 0), [(("test/test.ml", 815, 29118, 29125), ("test/test.ml", 819, 29393, 29432), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0))), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0), 0, 0), [(0, (Tag1 (Tag2 ("print_type_decl:\"", (("test/test.ml", 820, 29435, 29442), ("test/test.ml", 820, 29435, 29460), 0), 0)), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29461), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0))), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0), 0, 0), [(0, (Tag12 ((((("ptype_name"), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0), 0, 0), (("txt"), (("test/test.ml", 820, 29435, 29476), ("test/test.ml", 820, 29435, 29479), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29479), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0))), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" = ", (("test/test.ml", 820, 29435, 29483), ("test/test.ml", 820, 29435, 29488), 0), 0)), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29489), 0), 0, 0)); (0, (Tag5 ((((("process_kind"), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0))), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0), 0, 0), [(0, (Tag8 ([(((("ptype_kind"), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0))), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0), 0, 0); (((("s"), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0))), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0), 0, 0)]), (("test/test.ml", 820, 29435, 29506), ("test/test.ml", 820, 29435, 29520), 0), [(("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29519), 0)], 0))]), (("test/test.ml", 820, 29435, 29492), ("test/test.ml", 820, 29435, 29521), 0), [(("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29520), 0)], 0))]), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 799, 28398, 28402), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 797, 28371, 28373), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 820, 29435, 29521), 1), 0, 0), 0, (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0))]))
("DEBUG:Pstr_value:", 0, [(((("print_type_decl", (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0))), (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0), 0, 0), (Tag4 (0, 0, ((("a", (("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0))), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 796, 28346, 28368), 0), [(("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0))), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0))), (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0), 0, 0); ((("s", (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0))), (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0), 0, 0)]), (("test/test.ml", 798, 28386, 28389), ("test/test.ml", 798, 28386, 28394), 0), [(("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28393), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0))), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0), 0, 0), [((Tag7 ([((("ptype_name"), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 1)), ((("ptype_name", (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0))), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0), 0, 0)); ((("ptype_params"), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 1)), ((("ptype_params", (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0))), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0), 0, 0)); ((("ptype_cstrs"), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 1)), ((("ptype_cstrs", (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0))), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0), 0, 0)); ((("ptype_kind"), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 1)), ((("ptype_kind", (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0))), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0), 0, 0)); ((("ptype_private"), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 1)), ((("ptype_private", (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0))), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0), 0, 0)); ((("ptype_manifest"), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 1)), ((("ptype_manifest", (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0))), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0), 0, 0)); ((("ptype_attributes"), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 1)), ((("ptype_attributes", (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0))), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0), 0, 0)); ((("ptype_loc"), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 1)), ((("ptype_loc", (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0))), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0), 0, 0))], 0), (("test/test.ml", 800, 28415, 28421), ("test/test.ml", 809, 28814, 28821), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0))), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0))), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:type_decl:", (("test/test.ml", 810, 28825, 28864), ("test/test.ml", 810, 28825, 28880), 0), 0)), (("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28881), 0), 0, 0); (((("ptype_name"), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0))), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0), 0, 0)]), (("test/test.ml", 810, 28825, 28862), ("test/test.ml", 810, 28825, 28894), 0), [(("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28893), 0)], 0))]), (("test/test.ml", 810, 28825, 28846), ("test/test.ml", 810, 28825, 28895), 0), [(("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28894), 0)], 0))]), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 810, 28825, 28896), 0), [(("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28895), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0))), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0))), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:parameters:", (("test/test.ml", 811, 28898, 28937), ("test/test.ml", 811, 28898, 28954), 0), 0)), (("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28955), 0), 0, 0); (((("ptype_params"), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0))), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0), 0, 0)]), (("test/test.ml", 811, 28898, 28935), ("test/test.ml", 811, 28898, 28970), 0), [(("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28969), 0)], 0))]), (("test/test.ml", 811, 28898, 28919), ("test/test.ml", 811, 28898, 28971), 0), [(("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28970), 0)], 0))]), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 811, 28898, 28972), 0), [(("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28971), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0))), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0))), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:cstrs:", (("test/test.ml", 812, 28974, 29013), ("test/test.ml", 812, 28974, 29025), 0), 0)), (("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29026), 0), 0, 0); (((("ptype_cstrs"), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0))), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0), 0, 0)]), (("test/test.ml", 812, 28974, 29011), ("test/test.ml", 812, 28974, 29040), 0), [(("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29039), 0)], 0))]), (("test/test.ml", 812, 28974, 28995), ("test/test.ml", 812, 28974, 29041), 0), [(("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29040), 0)], 0))]), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 812, 28974, 29042), 0), [(("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 29041), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0))), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0))), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:kind:", (("test/test.ml", 813, 29044, 29083), ("test/test.ml", 813, 29044, 29094), 0), 0)), (("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29095), 0), 0, 0); (((("ptype_kind"), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0))), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0), 0, 0)]), (("test/test.ml", 813, 29044, 29081), ("test/test.ml", 813, 29044, 29107), 0), [(("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29106), 0)], 0))]), (("test/test.ml", 813, 29044, 29065), ("test/test.ml", 813, 29044, 29108), 0), [(("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29107), 0)], 0))]), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 813, 29044, 29109), 0), [(("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29108), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0))), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0))), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:private:", (("test/test.ml", 815, 29118, 29157), ("test/test.ml", 815, 29118, 29171), 0), 0)), (("test/test.ml", 815, 29118, 29156), ("test/test.ml", 815, 29118, 29172), 0), 0, 0); (((("ptype_private"), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0))), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:manifest", (("test/test.ml", 816, 29190, 29229), ("test/test.ml", 816, 29190, 29243), 0), 0)), (("test/test.ml", 816, 29190, 29228), ("test/test.ml", 816, 29190, 29244), 0), 0, 0); (((("ptype_manifest"), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0))), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:attr", (("test/test.ml", 817, 29262, 29301), ("test/test.ml", 817, 29262, 29311), 0), 0)), (("test/test.ml", 817, 29262, 29300), ("test/test.ml", 817, 29262, 29312), 0), 0, 0); (((("ptype_attributes"), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0))), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:loc", (("test/test.ml", 818, 29332, 29371), ("test/test.ml", 818, 29332, 29380), 0), 0)), (("test/test.ml", 818, 29332, 29370), ("test/test.ml", 818, 29332, 29381), 0), 0, 0); (((("ptype_loc"), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0))), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0), 0, 0)]), (("test/test.ml", 815, 29118, 29155), ("test/test.ml", 819, 29393, 29431), 0), [(("test/test.ml", 815, 29118, 29156), ("test/test.ml", 818, 29332, 29392), 0)], 0))]), (("test/test.ml", 815, 29118, 29139), ("test/test.ml", 819, 29393, 29432), 0), [(("test/test.ml", 815, 29118, 29140), ("test/test.ml", 819, 29393, 29431), 0)], 0))]), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 819, 29393, 29433), 0), [(("test/test.ml", 815, 29118, 29125), ("test/test.ml", 819, 29393, 29432), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0))), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0), 0, 0), [(0, (Tag1 (Tag2 ("print_type_decl:\"", (("test/test.ml", 820, 29435, 29442), ("test/test.ml", 820, 29435, 29460), 0), 0)), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29461), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0))), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0), 0, 0), [(0, (Tag12 ((((("ptype_name"), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0), 0, 0), (("txt"), (("test/test.ml", 820, 29435, 29476), ("test/test.ml", 820, 29435, 29479), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29479), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0))), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" = ", (("test/test.ml", 820, 29435, 29483), ("test/test.ml", 820, 29435, 29488), 0), 0)), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29489), 0), 0, 0)); (0, (Tag5 ((((("process_kind"), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0))), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0), 0, 0), [(0, (Tag8 ([(((("ptype_kind"), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0))), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0), 0, 0); (((("s"), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0))), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0), 0, 0)]), (("test/test.ml", 820, 29435, 29506), ("test/test.ml", 820, 29435, 29520), 0), [(("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29519), 0)], 0))]), (("test/test.ml", 820, 29435, 29492), ("test/test.ml", 820, 29435, 29521), 0), [(("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29520), 0)], 0))]), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 799, 28398, 28402), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 797, 28371, 28373), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 820, 29435, 29521), 1), 0, 0), 0, (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0))])
("DEBUG:value_binding.pat:", ((("print_type_decl", (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0))), (("test/test.ml", 796, 28346, 28350), ("test/test.ml", 796, 28346, 28365), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("a", (("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0))), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 796, 28346, 28368), 0), [(("test/test.ml", 796, 28346, 28366), ("test/test.ml", 796, 28346, 28367), 0)], 0), (Tag6 ((((("a"), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0))), (("test/test.ml", 797, 28371, 28379), ("test/test.ml", 797, 28371, 28380), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0))), (("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28391), 0), 0, 0); ((("s", (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0))), (("test/test.ml", 798, 28386, 28392), ("test/test.ml", 798, 28386, 28393), 0), 0, 0)]), (("test/test.ml", 798, 28386, 28389), ("test/test.ml", 798, 28386, 28394), 0), [(("test/test.ml", 798, 28386, 28390), ("test/test.ml", 798, 28386, 28393), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0))), (("test/test.ml", 799, 28398, 28408), ("test/test.ml", 799, 28398, 28409), 0), 0, 0), [((Tag7 ([((("ptype_name"), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 1)), ((("ptype_name", (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0))), (("test/test.ml", 801, 28423, 28431), ("test/test.ml", 801, 28423, 28441), 0), 0, 0)); ((("ptype_params"), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 1)), ((("ptype_params", (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0))), (("test/test.ml", 802, 28462, 28470), ("test/test.ml", 802, 28462, 28482), 0), 0, 0)); ((("ptype_cstrs"), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 1)), ((("ptype_cstrs", (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0))), (("test/test.ml", 803, 28536, 28544), ("test/test.ml", 803, 28536, 28555), 0), 0, 0)); ((("ptype_kind"), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 1)), ((("ptype_kind", (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0))), (("test/test.ml", 804, 28607, 28615), ("test/test.ml", 804, 28607, 28625), 0), 0, 0)); ((("ptype_private"), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 1)), ((("ptype_private", (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0))), (("test/test.ml", 805, 28646, 28654), ("test/test.ml", 805, 28646, 28667), 0), 0, 0)); ((("ptype_manifest"), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 1)), ((("ptype_manifest", (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0))), (("test/test.ml", 806, 28689, 28697), ("test/test.ml", 806, 28689, 28711), 0), 0, 0)); ((("ptype_attributes"), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 1)), ((("ptype_attributes", (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0))), (("test/test.ml", 807, 28738, 28746), ("test/test.ml", 807, 28738, 28762), 0), 0, 0)); ((("ptype_loc"), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 1)), ((("ptype_loc", (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0))), (("test/test.ml", 808, 28781, 28789), ("test/test.ml", 808, 28781, 28798), 0), 0, 0))], 0), (("test/test.ml", 800, 28415, 28421), ("test/test.ml", 809, 28814, 28821), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0))), (("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28845), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0))), (("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28861), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:type_decl:", (("test/test.ml", 810, 28825, 28864), ("test/test.ml", 810, 28825, 28880), 0), 0)), (("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28881), 0), 0, 0); (((("ptype_name"), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0))), (("test/test.ml", 810, 28825, 28883), ("test/test.ml", 810, 28825, 28893), 0), 0, 0)]), (("test/test.ml", 810, 28825, 28862), ("test/test.ml", 810, 28825, 28894), 0), [(("test/test.ml", 810, 28825, 28863), ("test/test.ml", 810, 28825, 28893), 0)], 0))]), (("test/test.ml", 810, 28825, 28846), ("test/test.ml", 810, 28825, 28895), 0), [(("test/test.ml", 810, 28825, 28847), ("test/test.ml", 810, 28825, 28894), 0)], 0))]), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 810, 28825, 28896), 0), [(("test/test.ml", 810, 28825, 28832), ("test/test.ml", 810, 28825, 28895), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0))), (("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28918), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0))), (("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28934), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:parameters:", (("test/test.ml", 811, 28898, 28937), ("test/test.ml", 811, 28898, 28954), 0), 0)), (("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28955), 0), 0, 0); (((("ptype_params"), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0))), (("test/test.ml", 811, 28898, 28957), ("test/test.ml", 811, 28898, 28969), 0), 0, 0)]), (("test/test.ml", 811, 28898, 28935), ("test/test.ml", 811, 28898, 28970), 0), [(("test/test.ml", 811, 28898, 28936), ("test/test.ml", 811, 28898, 28969), 0)], 0))]), (("test/test.ml", 811, 28898, 28919), ("test/test.ml", 811, 28898, 28971), 0), [(("test/test.ml", 811, 28898, 28920), ("test/test.ml", 811, 28898, 28970), 0)], 0))]), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 811, 28898, 28972), 0), [(("test/test.ml", 811, 28898, 28905), ("test/test.ml", 811, 28898, 28971), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0))), (("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 28994), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0))), (("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29010), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:cstrs:", (("test/test.ml", 812, 28974, 29013), ("test/test.ml", 812, 28974, 29025), 0), 0)), (("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29026), 0), 0, 0); (((("ptype_cstrs"), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0))), (("test/test.ml", 812, 28974, 29028), ("test/test.ml", 812, 28974, 29039), 0), 0, 0)]), (("test/test.ml", 812, 28974, 29011), ("test/test.ml", 812, 28974, 29040), 0), [(("test/test.ml", 812, 28974, 29012), ("test/test.ml", 812, 28974, 29039), 0)], 0))]), (("test/test.ml", 812, 28974, 28995), ("test/test.ml", 812, 28974, 29041), 0), [(("test/test.ml", 812, 28974, 28996), ("test/test.ml", 812, 28974, 29040), 0)], 0))]), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 812, 28974, 29042), 0), [(("test/test.ml", 812, 28974, 28981), ("test/test.ml", 812, 28974, 29041), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0))), (("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29064), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0))), (("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29080), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:kind:", (("test/test.ml", 813, 29044, 29083), ("test/test.ml", 813, 29044, 29094), 0), 0)), (("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29095), 0), 0, 0); (((("ptype_kind"), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0))), (("test/test.ml", 813, 29044, 29096), ("test/test.ml", 813, 29044, 29106), 0), 0, 0)]), (("test/test.ml", 813, 29044, 29081), ("test/test.ml", 813, 29044, 29107), 0), [(("test/test.ml", 813, 29044, 29082), ("test/test.ml", 813, 29044, 29106), 0)], 0))]), (("test/test.ml", 813, 29044, 29065), ("test/test.ml", 813, 29044, 29108), 0), [(("test/test.ml", 813, 29044, 29066), ("test/test.ml", 813, 29044, 29107), 0)], 0))]), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 813, 29044, 29109), 0), [(("test/test.ml", 813, 29044, 29051), ("test/test.ml", 813, 29044, 29108), 0)], 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0))), (("test/test.ml", 815, 29118, 29125), ("test/test.ml", 815, 29118, 29138), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0))), (("test/test.ml", 815, 29118, 29140), ("test/test.ml", 815, 29118, 29154), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:private:", (("test/test.ml", 815, 29118, 29157), ("test/test.ml", 815, 29118, 29171), 0), 0)), (("test/test.ml", 815, 29118, 29156), ("test/test.ml", 815, 29118, 29172), 0), 0, 0); (((("ptype_private"), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0))), (("test/test.ml", 815, 29118, 29175), ("test/test.ml", 815, 29118, 29188), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:manifest", (("test/test.ml", 816, 29190, 29229), ("test/test.ml", 816, 29190, 29243), 0), 0)), (("test/test.ml", 816, 29190, 29228), ("test/test.ml", 816, 29190, 29244), 0), 0, 0); (((("ptype_manifest"), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0))), (("test/test.ml", 816, 29190, 29246), ("test/test.ml", 816, 29190, 29260), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:attr", (("test/test.ml", 817, 29262, 29301), ("test/test.ml", 817, 29262, 29311), 0), 0)), (("test/test.ml", 817, 29262, 29300), ("test/test.ml", 817, 29262, 29312), 0), 0, 0); (((("ptype_attributes"), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0))), (("test/test.ml", 817, 29262, 29314), ("test/test.ml", 817, 29262, 29330), 0), 0, 0); (Tag1 (Tag2 ("DEBUG:loc", (("test/test.ml", 818, 29332, 29371), ("test/test.ml", 818, 29332, 29380), 0), 0)), (("test/test.ml", 818, 29332, 29370), ("test/test.ml", 818, 29332, 29381), 0), 0, 0); (((("ptype_loc"), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0))), (("test/test.ml", 818, 29332, 29383), ("test/test.ml", 818, 29332, 29392), 0), 0, 0)]), (("test/test.ml", 815, 29118, 29155), ("test/test.ml", 819, 29393, 29431), 0), [(("test/test.ml", 815, 29118, 29156), ("test/test.ml", 818, 29332, 29392), 0)], 0))]), (("test/test.ml", 815, 29118, 29139), ("test/test.ml", 819, 29393, 29432), 0), [(("test/test.ml", 815, 29118, 29140), ("test/test.ml", 819, 29393, 29431), 0)], 0))]), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 819, 29393, 29433), 0), [(("test/test.ml", 815, 29118, 29125), ("test/test.ml", 819, 29393, 29432), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0))), (("test/test.ml", 820, 29435, 29462), ("test/test.ml", 820, 29435, 29463), 0), 0, 0), [(0, (Tag1 (Tag2 ("print_type_decl:\"", (("test/test.ml", 820, 29435, 29442), ("test/test.ml", 820, 29435, 29460), 0), 0)), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29461), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0))), (("test/test.ml", 820, 29435, 29480), ("test/test.ml", 820, 29435, 29481), 0), 0, 0), [(0, (Tag12 ((((("ptype_name"), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29475), 0), 0, 0), (("txt"), (("test/test.ml", 820, 29435, 29476), ("test/test.ml", 820, 29435, 29479), 0))), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29479), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0))), (("test/test.ml", 820, 29435, 29490), ("test/test.ml", 820, 29435, 29491), 0), 0, 0), [(0, (Tag1 (Tag2 ("\" = ", (("test/test.ml", 820, 29435, 29483), ("test/test.ml", 820, 29435, 29488), 0), 0)), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29489), 0), 0, 0)); (0, (Tag5 ((((("process_kind"), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0))), (("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29505), 0), 0, 0), [(0, (Tag8 ([(((("ptype_kind"), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0))), (("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29517), 0), 0, 0); (((("s"), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0))), (("test/test.ml", 820, 29435, 29518), ("test/test.ml", 820, 29435, 29519), 0), 0, 0)]), (("test/test.ml", 820, 29435, 29506), ("test/test.ml", 820, 29435, 29520), 0), [(("test/test.ml", 820, 29435, 29507), ("test/test.ml", 820, 29435, 29519), 0)], 0))]), (("test/test.ml", 820, 29435, 29492), ("test/test.ml", 820, 29435, 29521), 0), [(("test/test.ml", 820, 29435, 29493), ("test/test.ml", 820, 29435, 29520), 0)], 0))]), (("test/test.ml", 820, 29435, 29482), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29465), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 820, 29435, 29441), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 815, 29118, 29124), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 813, 29044, 29050), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 812, 28974, 28980), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 811, 28898, 28904), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 810, 28825, 28831), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 799, 28398, 28402), ("test/test.ml", 820, 29435, 29521), 0), 0, 0))]), (("test/test.ml", 797, 28371, 28373), ("test/test.ml", 820, 29435, 29521), 0), 0, 0)), (("test/test.ml", 796, 28346, 28365), ("test/test.ml", 820, 29435, 29521), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 796, 28346, 28346), ("test/test.ml", 820, 29435, 29521), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag3 (1, [(("type_declaration_list", (("test/test.ml", 822, 29529, 29538), ("test/test.ml", 822, 29529, 29559), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 822, 29529, 29579), ("test/test.ml", 822, 29529, 29583), 0)), [(Tag3 ((("type_declaration"), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0)), 0), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0), 0, 0)]), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29583), 0), 0, 0)), 0, (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0))]), (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0)))
("DEBUG:structure_item_desc:", Tag3 (1, [(("type_declaration_list", (("test/test.ml", 822, 29529, 29538), ("test/test.ml", 822, 29529, 29559), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 822, 29529, 29579), ("test/test.ml", 822, 29529, 29583), 0)), [(Tag3 ((("type_declaration"), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0)), 0), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0), 0, 0)]), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29583), 0), 0, 0)), 0, (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0))]))
("DEBUG:Pstr_type:", 1, [(("type_declaration_list", (("test/test.ml", 822, 29529, 29538), ("test/test.ml", 822, 29529, 29559), 0)), 0, 0, 0, 1, ((Tag3 ((("list"), (("test/test.ml", 822, 29529, 29579), ("test/test.ml", 822, 29529, 29583), 0)), [(Tag3 ((("type_declaration"), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0)), 0), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0), 0, 0)]), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29583), 0), 0, 0)), 0, (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0))])
("DEBUG:type_decl:", ("type_declaration_list", (("test/test.ml", 822, 29529, 29538), ("test/test.ml", 822, 29529, 29559), 0)))
["DEBUG:parameters:"]
["DEBUG:cstrs:"]
["DEBUG:kind:"]
("DEBUG:private:", 1, "DEBUG:manifest", ((Tag3 ((("list"), (("test/test.ml", 822, 29529, 29579), ("test/test.ml", 822, 29529, 29583), 0)), [(Tag3 ((("type_declaration"), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0)), 0), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29578), 0), 0, 0)]), (("test/test.ml", 822, 29529, 29562), ("test/test.ml", 822, 29529, 29583), 0), 0, 0)), "DEBUG:attr", 0, "DEBUG:loc", (("test/test.ml", 822, 29529, 29529), ("test/test.ml", 822, 29529, 29583), 0))
"DEBUG:Ptype_abstract:"
TOP structure_item_desc|Pstr_type:print_type_decl:"type_declaration_list" = DEBUG:Ptype_abstract[process_type_decl_list]
("DEBUG:SECOND::", (Tag1 (1, [(((("process_type_decl_list", (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0))), (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0))), (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0), 0, 0), (Tag2 ([(Tag3 ((("type_declaration_list"), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0)), 0), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0)), 0), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)]), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 824, 29589, 29656), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0))), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0))), (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0), 0, 0); ((("s", (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0))), (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0), 0, 0)]), (("test/test.ml", 826, 29681, 29684), ("test/test.ml", 826, 29681, 29689), 0), [(("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29688), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0))), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0)), 0), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0), 0, 0), 0, (Tag1 (Tag2 ("process_type_decl_list", (("test/test.ml", 828, 29709, 29722), ("test/test.ml", 828, 29709, 29744), 0), 0)), (("test/test.ml", 828, 29709, 29721), ("test/test.ml", 828, 29709, 29745), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 829, 29746, 29754), ("test/test.ml", 829, 29746, 29756), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0), 0, 0); ((("t", (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0))), (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0), 0, 0)]), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 1), 0, 0)))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0))), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0), 0, 0), [(0, (Tag5 ((((("print_type_decl"), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0))), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0))), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0), 0, 0); (((("s"), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0))), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0), 0, 0)]), (("test/test.ml", 830, 29762, 29785), ("test/test.ml", 830, 29762, 29790), 0), [(("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29789), 0)], 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 830, 29762, 29791), 0), [(("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29790), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0))), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0), 0, 0), [(0, (Tag1 (Tag2 ("[", (("test/test.ml", 831, 29792, 29801), ("test/test.ml", 831, 29792, 29802), 0), 0)), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 831, 29792, 29803), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0))), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0), 0, 0), [(0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0))), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0))), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0), 0, 0); (((("s"), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0))), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0), 0, 0)]), (("test/test.ml", 832, 29806, 29836), ("test/test.ml", 832, 29806, 29841), 0), [(("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29840), 0)], 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 832, 29806, 29842), 0), [(("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29841), 0)], 0)); (0, (Tag1 (Tag2 ("]", (("test/test.ml", 833, 29843, 29852), ("test/test.ml", 833, 29843, 29853), 0), 0)), (("test/test.ml", 833, 29843, 29851), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 827, 29692, 29696), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 825, 29666, 29668), ("test/test.ml", 833, 29843, 29854), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0)), 0), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0), 0, 0)), (("test/test.ml", 824, 29589, 29656), ("test/test.ml", 833, 29843, 29854), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 833, 29843, 29854), 1), 0, 0), 0, (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0))]), (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0)))
("DEBUG:structure_item_desc:", Tag1 (1, [(((("process_type_decl_list", (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0))), (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0))), (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0), 0, 0), (Tag2 ([(Tag3 ((("type_declaration_list"), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0)), 0), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0)), 0), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)]), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 824, 29589, 29656), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0))), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0))), (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0), 0, 0); ((("s", (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0))), (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0), 0, 0)]), (("test/test.ml", 826, 29681, 29684), ("test/test.ml", 826, 29681, 29689), 0), [(("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29688), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0))), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0)), 0), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0), 0, 0), 0, (Tag1 (Tag2 ("process_type_decl_list", (("test/test.ml", 828, 29709, 29722), ("test/test.ml", 828, 29709, 29744), 0), 0)), (("test/test.ml", 828, 29709, 29721), ("test/test.ml", 828, 29709, 29745), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 829, 29746, 29754), ("test/test.ml", 829, 29746, 29756), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0), 0, 0); ((("t", (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0))), (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0), 0, 0)]), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 1), 0, 0)))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0))), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0), 0, 0), [(0, (Tag5 ((((("print_type_decl"), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0))), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0))), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0), 0, 0); (((("s"), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0))), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0), 0, 0)]), (("test/test.ml", 830, 29762, 29785), ("test/test.ml", 830, 29762, 29790), 0), [(("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29789), 0)], 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 830, 29762, 29791), 0), [(("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29790), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0))), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0), 0, 0), [(0, (Tag1 (Tag2 ("[", (("test/test.ml", 831, 29792, 29801), ("test/test.ml", 831, 29792, 29802), 0), 0)), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 831, 29792, 29803), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0))), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0), 0, 0), [(0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0))), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0))), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0), 0, 0); (((("s"), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0))), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0), 0, 0)]), (("test/test.ml", 832, 29806, 29836), ("test/test.ml", 832, 29806, 29841), 0), [(("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29840), 0)], 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 832, 29806, 29842), 0), [(("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29841), 0)], 0)); (0, (Tag1 (Tag2 ("]", (("test/test.ml", 833, 29843, 29852), ("test/test.ml", 833, 29843, 29853), 0), 0)), (("test/test.ml", 833, 29843, 29851), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 827, 29692, 29696), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 825, 29666, 29668), ("test/test.ml", 833, 29843, 29854), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0)), 0), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0), 0, 0)), (("test/test.ml", 824, 29589, 29656), ("test/test.ml", 833, 29843, 29854), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 833, 29843, 29854), 1), 0, 0), 0, (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0))]))
("DEBUG:Pstr_value:", 1, [(((("process_type_decl_list", (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0))), (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0))), (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0), 0, 0), (Tag2 ([(Tag3 ((("type_declaration_list"), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0)), 0), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0)), 0), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)]), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 824, 29589, 29656), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0))), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0))), (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0), 0, 0); ((("s", (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0))), (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0), 0, 0)]), (("test/test.ml", 826, 29681, 29684), ("test/test.ml", 826, 29681, 29689), 0), [(("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29688), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0))), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0)), 0), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0), 0, 0), 0, (Tag1 (Tag2 ("process_type_decl_list", (("test/test.ml", 828, 29709, 29722), ("test/test.ml", 828, 29709, 29744), 0), 0)), (("test/test.ml", 828, 29709, 29721), ("test/test.ml", 828, 29709, 29745), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 829, 29746, 29754), ("test/test.ml", 829, 29746, 29756), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0), 0, 0); ((("t", (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0))), (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0), 0, 0)]), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 1), 0, 0)))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0))), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0), 0, 0), [(0, (Tag5 ((((("print_type_decl"), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0))), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0))), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0), 0, 0); (((("s"), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0))), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0), 0, 0)]), (("test/test.ml", 830, 29762, 29785), ("test/test.ml", 830, 29762, 29790), 0), [(("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29789), 0)], 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 830, 29762, 29791), 0), [(("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29790), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0))), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0), 0, 0), [(0, (Tag1 (Tag2 ("[", (("test/test.ml", 831, 29792, 29801), ("test/test.ml", 831, 29792, 29802), 0), 0)), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 831, 29792, 29803), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0))), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0), 0, 0), [(0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0))), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0))), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0), 0, 0); (((("s"), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0))), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0), 0, 0)]), (("test/test.ml", 832, 29806, 29836), ("test/test.ml", 832, 29806, 29841), 0), [(("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29840), 0)], 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 832, 29806, 29842), 0), [(("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29841), 0)], 0)); (0, (Tag1 (Tag2 ("]", (("test/test.ml", 833, 29843, 29852), ("test/test.ml", 833, 29843, 29853), 0), 0)), (("test/test.ml", 833, 29843, 29851), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 827, 29692, 29696), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 825, 29666, 29668), ("test/test.ml", 833, 29843, 29854), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0)), 0), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0), 0, 0)), (("test/test.ml", 824, 29589, 29656), ("test/test.ml", 833, 29843, 29854), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 833, 29843, 29854), 1), 0, 0), 0, (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0))])
("DEBUG:value_binding.pat:", ((("process_type_decl_list", (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0))), (("test/test.ml", 824, 29589, 29597), ("test/test.ml", 824, 29589, 29619), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0))), (("test/test.ml", 824, 29589, 29620), ("test/test.ml", 824, 29589, 29621), 0), 0, 0), (Tag2 ([(Tag3 ((("type_declaration_list"), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0)), 0), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29643), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0)), 0), (("test/test.ml", 824, 29589, 29644), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)]), (("test/test.ml", 824, 29589, 29622), ("test/test.ml", 824, 29589, 29655), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 824, 29589, 29656), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0))), (("test/test.ml", 825, 29666, 29674), ("test/test.ml", 825, 29666, 29675), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0))), (("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29686), 0), 0, 0); ((("s", (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0))), (("test/test.ml", 826, 29681, 29687), ("test/test.ml", 826, 29681, 29688), 0), 0, 0)]), (("test/test.ml", 826, 29681, 29684), ("test/test.ml", 826, 29681, 29689), 0), [(("test/test.ml", 826, 29681, 29685), ("test/test.ml", 826, 29681, 29688), 0)], 0), 0, (Tag6 ((((("x"), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0))), (("test/test.ml", 827, 29692, 29702), ("test/test.ml", 827, 29692, 29703), 0), 0, 0), [((Tag5 ((("[]"), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0)), 0), (("test/test.ml", 828, 29709, 29715), ("test/test.ml", 828, 29709, 29717), 0), 0, 0), 0, (Tag1 (Tag2 ("process_type_decl_list", (("test/test.ml", 828, 29709, 29722), ("test/test.ml", 828, 29709, 29744), 0), 0)), (("test/test.ml", 828, 29709, 29721), ("test/test.ml", 828, 29709, 29745), 0), 0, 0)); ((Tag5 ((("::"), (("test/test.ml", 829, 29746, 29754), ("test/test.ml", 829, 29746, 29756), 0)), ((0, (Tag4 ([((("h", (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29753), 0), 0, 0); ((("t", (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0))), (("test/test.ml", 829, 29746, 29757), ("test/test.ml", 829, 29746, 29758), 0), 0, 0)]), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 1), 0, 0)))), (("test/test.ml", 829, 29746, 29752), ("test/test.ml", 829, 29746, 29758), 0), 0, 0), 0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0))), (("test/test.ml", 831, 29792, 29798), ("test/test.ml", 831, 29792, 29799), 0), 0, 0), [(0, (Tag5 ((((("print_type_decl"), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0))), (("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29784), 0), 0, 0), [(0, (Tag8 ([(((("h"), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0))), (("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29787), 0), 0, 0); (((("s"), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0))), (("test/test.ml", 830, 29762, 29788), ("test/test.ml", 830, 29762, 29789), 0), 0, 0)]), (("test/test.ml", 830, 29762, 29785), ("test/test.ml", 830, 29762, 29790), 0), [(("test/test.ml", 830, 29762, 29786), ("test/test.ml", 830, 29762, 29789), 0)], 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 830, 29762, 29791), 0), [(("test/test.ml", 830, 29762, 29769), ("test/test.ml", 830, 29762, 29790), 0)], 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0))), (("test/test.ml", 831, 29792, 29804), ("test/test.ml", 831, 29792, 29805), 0), 0, 0), [(0, (Tag1 (Tag2 ("[", (("test/test.ml", 831, 29792, 29801), ("test/test.ml", 831, 29792, 29802), 0), 0)), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 831, 29792, 29803), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0))), (("test/test.ml", 833, 29843, 29849), ("test/test.ml", 833, 29843, 29850), 0), 0, 0), [(0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0))), (("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29835), 0), 0, 0), [(0, (Tag8 ([(((("t"), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0))), (("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29838), 0), 0, 0); (((("s"), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0))), (("test/test.ml", 832, 29806, 29839), ("test/test.ml", 832, 29806, 29840), 0), 0, 0)]), (("test/test.ml", 832, 29806, 29836), ("test/test.ml", 832, 29806, 29841), 0), [(("test/test.ml", 832, 29806, 29837), ("test/test.ml", 832, 29806, 29840), 0)], 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 832, 29806, 29842), 0), [(("test/test.ml", 832, 29806, 29813), ("test/test.ml", 832, 29806, 29841), 0)], 0)); (0, (Tag1 (Tag2 ("]", (("test/test.ml", 833, 29843, 29852), ("test/test.ml", 833, 29843, 29853), 0), 0)), (("test/test.ml", 833, 29843, 29851), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 832, 29806, 29812), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 831, 29792, 29800), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 830, 29762, 29768), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 827, 29692, 29696), ("test/test.ml", 833, 29843, 29854), 0), 0, 0))]), (("test/test.ml", 825, 29666, 29668), ("test/test.ml", 833, 29843, 29854), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0)), 0), (("test/test.ml", 824, 29589, 29657), ("test/test.ml", 824, 29589, 29663), 0), 0, 0)), (("test/test.ml", 824, 29589, 29656), ("test/test.ml", 833, 29843, 29854), 0), 0, 0)), (("test/test.ml", 824, 29589, 29619), ("test/test.ml", 833, 29843, 29854), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 824, 29589, 29589), ("test/test.ml", 833, 29843, 29854), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printdesc", (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0))), (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0))), (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0), 0, 0), (Tag2 ([(Tag3 ((("structure_item_desc"), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0)), 0), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0)), 0), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)]), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 836, 29867, 29916), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0))), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0))), (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0), 0, 0); ((("s", (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0))), (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0), 0, 0)]), (("test/test.ml", 838, 29942, 29945), ("test/test.ml", 838, 29942, 29950), 0), [(("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29949), 0)], 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0))), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0))), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:structure_item_desc:", (("test/test.ml", 839, 29953, 29990), ("test/test.ml", 839, 29953, 30016), 0), 0)), (("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30017), 0), 0, 0); (((("x"), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0))), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0), 0, 0)]), (("test/test.ml", 839, 29953, 29988), ("test/test.ml", 839, 29953, 30021), 0), [(("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30020), 0)], 0))]), (("test/test.ml", 839, 29953, 29972), ("test/test.ml", 839, 29953, 30022), 0), [(("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 30021), 0)], 0))]), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 839, 29953, 30023), 0), [(("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 30022), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0))), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0), 0, 0), [((Tag5 ((("Pstr_eval"), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30057), 0)), ((0, (Tag4 ([((("expression", (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0))), (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0), 0, 0); ((("attributes", (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0))), (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0), 0, 0)]), (("test/test.ml", 841, 30042, 30058), ("test/test.ml", 841, 30042, 30081), 0), [(("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30080), 0)], 0)))), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30081), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0))), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0))), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_eval:", (("test/test.ml", 842, 30085, 30124), ("test/test.ml", 842, 30085, 30140), 0), 0)), (("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30141), 0), 0, 0); (((("expression"), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0))), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0), 0, 0); (((("attributes"), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0))), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0), 0, 0)]), (("test/test.ml", 842, 30085, 30122), ("test/test.ml", 842, 30085, 30165), 0), [(("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30164), 0)], 0))]), (("test/test.ml", 842, 30085, 30106), ("test/test.ml", 842, 30085, 30166), 0), [(("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30165), 0)], 0))]), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 842, 30085, 30167), 0), [(("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30166), 0)], 0), (Tag1 (Tag2 ("Pstr_eval", (("test/test.ml", 843, 30169, 30176), ("test/test.ml", 843, 30169, 30185), 0), 0)), (("test/test.ml", 843, 30169, 30175), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)); ((Tag5 ((("Pstr_value"), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30225), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0))), (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0), 0, 0); ((("value_binding_list", (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0))), (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0), 0, 0)]), (("test/test.ml", 845, 30209, 30226), ("test/test.ml", 845, 30209, 30256), 0), [(("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30255), 0)], 0)))), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30256), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0))), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0))), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_value:", (("test/test.ml", 846, 30260, 30299), ("test/test.ml", 846, 30260, 30316), 0), 0)), (("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30317), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0))), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0), 0, 0); (((("value_binding_list"), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0))), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0), 0, 0)]), (("test/test.ml", 846, 30260, 30297), ("test/test.ml", 846, 30260, 30348), 0), [(("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30347), 0)], 0))]), (("test/test.ml", 846, 30260, 30281), ("test/test.ml", 846, 30260, 30349), 0), [(("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30348), 0)], 0))]), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 846, 30260, 30350), 0), [(("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30349), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0))), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_value:", (("test/test.ml", 847, 30352, 30359), ("test/test.ml", 847, 30352, 30370), 0), 0)), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30371), 0), 0, 0)); (0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0))), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0), 0, 0), [(0, (((("value_binding_list"), (("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0))), (("test/test.ml", 847, 30352, 30403), ("test/test.ml", 847, 30352, 30423), 0), [(("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0)], 0))]), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30423), 0), 0, 0))]), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)); ((Tag5 ((("Pstr_primitive"), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30444), 0)), ((0, ((("value_description", (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0))), (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0), 0, 0)))), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30462), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0))), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0))), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_primitive:", (("test/test.ml", 848, 30424, 30498), ("test/test.ml", 848, 30424, 30519), 0), 0)), (("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30520), 0), 0, 0); (((("value_description"), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0))), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0), 0, 0)]), (("test/test.ml", 848, 30424, 30496), ("test/test.ml", 848, 30424, 30540), 0), [(("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30539), 0)], 0))]), (("test/test.ml", 848, 30424, 30480), ("test/test.ml", 848, 30424, 30541), 0), [(("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30540), 0)], 0))]), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30542), 0), [(("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30541), 0)], 0), (Tag1 (Tag2 ("primitive", (("test/test.ml", 848, 30424, 30546), ("test/test.ml", 848, 30424, 30555), 0), 0)), (("test/test.ml", 848, 30424, 30545), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)); ((Tag5 ((("Pstr_type"), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30614), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0))), (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0), 0, 0); ((("type_declaration_list", (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0))), (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0), 0, 0)]), (("test/test.ml", 850, 30599, 30615), ("test/test.ml", 850, 30599, 30648), 0), [(("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30647), 0)], 0)))), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30648), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0))), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0))), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_type:", (("test/test.ml", 853, 30689, 30728), ("test/test.ml", 853, 30689, 30744), 0), 0)), (("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30745), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0))), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0), 0, 0); (((("type_declaration_list"), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0))), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0), 0, 0)]), (("test/test.ml", 853, 30689, 30726), ("test/test.ml", 853, 30689, 30779), 0), [(("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30778), 0)], 0))]), (("test/test.ml", 853, 30689, 30710), ("test/test.ml", 853, 30689, 30780), 0), [(("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30779), 0)], 0))]), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 853, 30689, 30781), 0), [(("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30780), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0))), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_type:", (("test/test.ml", 854, 30783, 30790), ("test/test.ml", 854, 30783, 30800), 0), 0)), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 854, 30783, 30801), 0), 0, 0)); (0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0))), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0), 0, 0), [(0, (Tag8 ([(((("type_declaration_list"), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0))), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0), 0, 0); (((("s"), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0))), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0), 0, 0)]), (("test/test.ml", 855, 30803, 30831), ("test/test.ml", 855, 30803, 30858), 0), [(("test/test.ml", 855, 30803, 30832), ("test/test.ml", 855, 30803, 30857), 0); (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30856), 0)], 0))]), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30858), 0), 0, 0))]), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)); ((Tag5 ((("Pstr_typext"), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30876), 0)), ((0, ((("type_extension", (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0))), (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0), 0, 0)))), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30892), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0))), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0))), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_typext:", (("test/test.ml", 856, 30859, 30928), ("test/test.ml", 856, 30859, 30946), 0), 0)), (("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30947), 0), 0, 0); (((("type_extension"), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0))), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0), 0, 0)]), (("test/test.ml", 856, 30859, 30926), ("test/test.ml", 856, 30859, 30964), 0), [(("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30963), 0)], 0))]), (("test/test.ml", 856, 30859, 30910), ("test/test.ml", 856, 30859, 30965), 0), [(("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30964), 0)], 0))]), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30966), 0), [(("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30965), 0)], 0), (Tag1 (Tag2 ("typeext", (("test/test.ml", 856, 30859, 30969), ("test/test.ml", 856, 30859, 30976), 0), 0)), (("test/test.ml", 856, 30859, 30968), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)); ((Tag5 ((("Pstr_exception"), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 30998), 0)), ((0, ((("extension_constructor", (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0))), (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0), 0, 0)))), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 31020), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0))), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0))), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_exception:", (("test/test.ml", 857, 30978, 31056), ("test/test.ml", 857, 30978, 31077), 0), 0)), (("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31078), 0), 0, 0); (((("extension_constructor"), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0))), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0), 0, 0)]), (("test/test.ml", 857, 30978, 31054), ("test/test.ml", 857, 30978, 31102), 0), [(("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31101), 0)], 0))]), (("test/test.ml", 857, 30978, 31038), ("test/test.ml", 857, 30978, 31103), 0), [(("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31102), 0)], 0))]), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31104), 0), [(("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31103), 0)], 0), (Tag1 (Tag2 ("exception", (("test/test.ml", 857, 30978, 31107), ("test/test.ml", 857, 30978, 31116), 0), 0)), (("test/test.ml", 857, 30978, 31106), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)); ((Tag5 ((("Pstr_module"), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31135), 0)), ((0, ((("module_binding", (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0))), (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0), 0, 0)))), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31151), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0))), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0))), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_module:", (("test/test.ml", 858, 31118, 31187), ("test/test.ml", 858, 31118, 31205), 0), 0)), (("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31206), 0), 0, 0); (((("module_binding"), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0))), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0), 0, 0)]), (("test/test.ml", 858, 31118, 31185), ("test/test.ml", 858, 31118, 31222), 0), [(("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31221), 0)], 0))]), (("test/test.ml", 858, 31118, 31169), ("test/test.ml", 858, 31118, 31223), 0), [(("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31222), 0)], 0))]), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31224), 0), [(("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31223), 0)], 0), (Tag1 (Tag2 ("binding", (("test/test.ml", 858, 31118, 31227), ("test/test.ml", 858, 31118, 31234), 0), 0)), (("test/test.ml", 858, 31118, 31226), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)); ((Tag5 ((("Pstr_recmodule"), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31256), 0)), ((0, ((("module_binding_list", (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0))), (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0), 0, 0)))), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31277), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0))), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0))), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_recmodule:", (("test/test.ml", 859, 31236, 31313), ("test/test.ml", 859, 31236, 31334), 0), 0)), (("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31335), 0), 0, 0); (((("module_binding_list"), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0))), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0), 0, 0)]), (("test/test.ml", 859, 31236, 31311), ("test/test.ml", 859, 31236, 31357), 0), [(("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31356), 0)], 0))]), (("test/test.ml", 859, 31236, 31295), ("test/test.ml", 859, 31236, 31358), 0), [(("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31357), 0)], 0))]), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31359), 0), [(("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31358), 0)], 0), (Tag1 (Tag2 ("recmodule", (("test/test.ml", 859, 31236, 31363), ("test/test.ml", 859, 31236, 31372), 0), 0)), (("test/test.ml", 859, 31236, 31362), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)); ((Tag5 ((("Pstr_modtype"), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31392), 0)), ((0, ((("module_type_declaration", (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0))), (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0), 0, 0)))), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31416), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0))), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0))), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_modtype:", (("test/test.ml", 860, 31374, 31452), ("test/test.ml", 860, 31374, 31471), 0), 0)), (("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31472), 0), 0, 0); (((("module_type_declaration"), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0))), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0), 0, 0)]), (("test/test.ml", 860, 31374, 31450), ("test/test.ml", 860, 31374, 31498), 0), [(("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31497), 0)], 0))]), (("test/test.ml", 860, 31374, 31434), ("test/test.ml", 860, 31374, 31499), 0), [(("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31498), 0)], 0))]), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31500), 0), [(("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31499), 0)], 0), (Tag1 (Tag2 ("modtype", (("test/test.ml", 860, 31374, 31503), ("test/test.ml", 860, 31374, 31510), 0), 0)), (("test/test.ml", 860, 31374, 31502), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)); ((Tag5 ((("Pstr_open"), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31546), 0)), ((0, ((("open_description", (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0))), (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0), 0, 0)))), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31563), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0))), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0))), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_open", (("test/test.ml", 862, 31531, 31599), ("test/test.ml", 862, 31531, 31614), 0), 0)), (("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31615), 0), 0, 0); (((("open_description"), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0))), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0), 0, 0)]), (("test/test.ml", 862, 31531, 31597), ("test/test.ml", 862, 31531, 31634), 0), [(("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31633), 0)], 0))]), (("test/test.ml", 862, 31531, 31581), ("test/test.ml", 862, 31531, 31635), 0), [(("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31634), 0)], 0))]), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31636), 0), [(("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31635), 0)], 0), (Tag1 (Tag2 ("open", (("test/test.ml", 862, 31531, 31639), ("test/test.ml", 862, 31531, 31643), 0), 0)), (("test/test.ml", 862, 31531, 31638), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)); ((Tag5 ((("Pstr_class"), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31661), 0)), ((0, ((("class_declarations", (("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0))), (("test/test.ml", 863, 31645, 31662), ("test/test.ml", 863, 31645, 31683), 0), [(("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0)], 0)))), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31683), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0))), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0))), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class:", (("test/test.ml", 863, 31645, 31719), ("test/test.ml", 863, 31645, 31736), 0), 0)), (("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31737), 0), 0, 0); (((("class_declarations"), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0))), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0), 0, 0)]), (("test/test.ml", 863, 31645, 31717), ("test/test.ml", 863, 31645, 31758), 0), [(("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31757), 0)], 0))]), (("test/test.ml", 863, 31645, 31701), ("test/test.ml", 863, 31645, 31759), 0), [(("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31758), 0)], 0))]), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31760), 0), [(("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31759), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 863, 31645, 31763), ("test/test.ml", 863, 31645, 31768), 0), 0)), (("test/test.ml", 863, 31645, 31762), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)); ((Tag5 ((("Pstr_class_type"), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31791), 0)), ((0, ((("class_type_declarations", (("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0))), (("test/test.ml", 864, 31770, 31792), ("test/test.ml", 864, 31770, 31817), 0), [(("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0)], 0)))), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31817), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0))), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0))), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class_type:", (("test/test.ml", 864, 31770, 31853), ("test/test.ml", 864, 31770, 31875), 0), 0)), (("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31876), 0), 0, 0); (((("class_type_declarations"), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0))), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0), 0, 0)]), (("test/test.ml", 864, 31770, 31851), ("test/test.ml", 864, 31770, 31902), 0), [(("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31901), 0)], 0))]), (("test/test.ml", 864, 31770, 31835), ("test/test.ml", 864, 31770, 31903), 0), [(("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31902), 0)], 0))]), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31904), 0), [(("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31903), 0)], 0), (Tag1 (Tag2 ("class_Type", (("test/test.ml", 864, 31770, 31908), ("test/test.ml", 864, 31770, 31918), 0), 0)), (("test/test.ml", 864, 31770, 31907), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)); ((Tag5 ((("Pstr_include"), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31938), 0)), ((0, ((("include_declaration", (("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0))), (("test/test.ml", 865, 31920, 31940), ("test/test.ml", 865, 31920, 31961), 0), [(("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0)], 0)))), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31961), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0))), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0))), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_include:", (("test/test.ml", 865, 31920, 31996), ("test/test.ml", 865, 31920, 32015), 0), 0)), (("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32016), 0), 0, 0); (((("include_declaration"), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0))), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0), 0, 0)]), (("test/test.ml", 865, 31920, 31994), ("test/test.ml", 865, 31920, 32037), 0), [(("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32036), 0)], 0))]), (("test/test.ml", 865, 31920, 31978), ("test/test.ml", 865, 31920, 32038), 0), [(("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 32037), 0)], 0))]), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32039), 0), [(("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 32038), 0)], 0), (Tag1 (Tag2 ("include", (("test/test.ml", 865, 31920, 32042), ("test/test.ml", 865, 31920, 32049), 0), 0)), (("test/test.ml", 865, 31920, 32041), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)); ((Tag5 ((("Pstr_attribute"), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32071), 0)), ((0, ((("attribute", (("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0))), (("test/test.ml", 866, 32051, 32072), ("test/test.ml", 866, 32051, 32083), 0), [(("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0)], 0)))), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32083), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0))), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0))), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_attribute:", (("test/test.ml", 866, 32051, 32118), ("test/test.ml", 866, 32051, 32139), 0), 0)), (("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32140), 0), 0, 0); (((("attribute"), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0))), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0), 0, 0)]), (("test/test.ml", 866, 32051, 32116), ("test/test.ml", 866, 32051, 32152), 0), [(("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32151), 0)], 0))]), (("test/test.ml", 866, 32051, 32100), ("test/test.ml", 866, 32051, 32153), 0), [(("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32152), 0)], 0))]), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32154), 0), [(("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32153), 0)], 0), (Tag1 (Tag2 ("attribte", (("test/test.ml", 866, 32051, 32157), ("test/test.ml", 866, 32051, 32165), 0), 0)), (("test/test.ml", 866, 32051, 32156), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)); ((Tag5 ((("Pstr_extension"), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32187), 0)), ((0, (Tag4 ([((("extension", (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0))), (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0), 0, 0); ((("attributes", (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0))), (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32188), ("test/test.ml", 867, 32167, 32213), 0), [(("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32212), 0)], 0)))), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32213), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0))), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0))), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_extension:", (("test/test.ml", 867, 32167, 32248), ("test/test.ml", 867, 32167, 32269), 0), 0)), (("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32270), 0), 0, 0); (((("extension"), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0))), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0), 0, 0); (((("attributes"), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0))), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32246), ("test/test.ml", 867, 32167, 32295), 0), [(("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32294), 0)], 0))]), (("test/test.ml", 867, 32167, 32230), ("test/test.ml", 867, 32167, 32296), 0), [(("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32295), 0)], 0))]), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32297), 0), [(("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32296), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 867, 32167, 32301), ("test/test.ml", 867, 32167, 32310), 0), 0)), (("test/test.ml", 867, 32167, 32300), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 840, 30025, 30029), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 837, 29927, 29929), ("test/test.ml", 867, 32167, 32311), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0)), 0), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0), 0, 0)), (("test/test.ml", 836, 29867, 29917), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 867, 32167, 32311), 1), 0, 0), 0, (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0))]), (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printdesc", (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0))), (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0))), (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0), 0, 0), (Tag2 ([(Tag3 ((("structure_item_desc"), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0)), 0), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0)), 0), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)]), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 836, 29867, 29916), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0))), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0))), (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0), 0, 0); ((("s", (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0))), (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0), 0, 0)]), (("test/test.ml", 838, 29942, 29945), ("test/test.ml", 838, 29942, 29950), 0), [(("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29949), 0)], 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0))), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0))), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:structure_item_desc:", (("test/test.ml", 839, 29953, 29990), ("test/test.ml", 839, 29953, 30016), 0), 0)), (("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30017), 0), 0, 0); (((("x"), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0))), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0), 0, 0)]), (("test/test.ml", 839, 29953, 29988), ("test/test.ml", 839, 29953, 30021), 0), [(("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30020), 0)], 0))]), (("test/test.ml", 839, 29953, 29972), ("test/test.ml", 839, 29953, 30022), 0), [(("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 30021), 0)], 0))]), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 839, 29953, 30023), 0), [(("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 30022), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0))), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0), 0, 0), [((Tag5 ((("Pstr_eval"), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30057), 0)), ((0, (Tag4 ([((("expression", (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0))), (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0), 0, 0); ((("attributes", (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0))), (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0), 0, 0)]), (("test/test.ml", 841, 30042, 30058), ("test/test.ml", 841, 30042, 30081), 0), [(("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30080), 0)], 0)))), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30081), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0))), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0))), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_eval:", (("test/test.ml", 842, 30085, 30124), ("test/test.ml", 842, 30085, 30140), 0), 0)), (("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30141), 0), 0, 0); (((("expression"), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0))), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0), 0, 0); (((("attributes"), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0))), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0), 0, 0)]), (("test/test.ml", 842, 30085, 30122), ("test/test.ml", 842, 30085, 30165), 0), [(("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30164), 0)], 0))]), (("test/test.ml", 842, 30085, 30106), ("test/test.ml", 842, 30085, 30166), 0), [(("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30165), 0)], 0))]), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 842, 30085, 30167), 0), [(("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30166), 0)], 0), (Tag1 (Tag2 ("Pstr_eval", (("test/test.ml", 843, 30169, 30176), ("test/test.ml", 843, 30169, 30185), 0), 0)), (("test/test.ml", 843, 30169, 30175), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)); ((Tag5 ((("Pstr_value"), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30225), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0))), (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0), 0, 0); ((("value_binding_list", (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0))), (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0), 0, 0)]), (("test/test.ml", 845, 30209, 30226), ("test/test.ml", 845, 30209, 30256), 0), [(("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30255), 0)], 0)))), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30256), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0))), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0))), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_value:", (("test/test.ml", 846, 30260, 30299), ("test/test.ml", 846, 30260, 30316), 0), 0)), (("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30317), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0))), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0), 0, 0); (((("value_binding_list"), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0))), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0), 0, 0)]), (("test/test.ml", 846, 30260, 30297), ("test/test.ml", 846, 30260, 30348), 0), [(("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30347), 0)], 0))]), (("test/test.ml", 846, 30260, 30281), ("test/test.ml", 846, 30260, 30349), 0), [(("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30348), 0)], 0))]), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 846, 30260, 30350), 0), [(("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30349), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0))), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_value:", (("test/test.ml", 847, 30352, 30359), ("test/test.ml", 847, 30352, 30370), 0), 0)), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30371), 0), 0, 0)); (0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0))), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0), 0, 0), [(0, (((("value_binding_list"), (("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0))), (("test/test.ml", 847, 30352, 30403), ("test/test.ml", 847, 30352, 30423), 0), [(("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0)], 0))]), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30423), 0), 0, 0))]), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)); ((Tag5 ((("Pstr_primitive"), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30444), 0)), ((0, ((("value_description", (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0))), (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0), 0, 0)))), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30462), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0))), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0))), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_primitive:", (("test/test.ml", 848, 30424, 30498), ("test/test.ml", 848, 30424, 30519), 0), 0)), (("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30520), 0), 0, 0); (((("value_description"), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0))), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0), 0, 0)]), (("test/test.ml", 848, 30424, 30496), ("test/test.ml", 848, 30424, 30540), 0), [(("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30539), 0)], 0))]), (("test/test.ml", 848, 30424, 30480), ("test/test.ml", 848, 30424, 30541), 0), [(("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30540), 0)], 0))]), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30542), 0), [(("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30541), 0)], 0), (Tag1 (Tag2 ("primitive", (("test/test.ml", 848, 30424, 30546), ("test/test.ml", 848, 30424, 30555), 0), 0)), (("test/test.ml", 848, 30424, 30545), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)); ((Tag5 ((("Pstr_type"), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30614), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0))), (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0), 0, 0); ((("type_declaration_list", (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0))), (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0), 0, 0)]), (("test/test.ml", 850, 30599, 30615), ("test/test.ml", 850, 30599, 30648), 0), [(("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30647), 0)], 0)))), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30648), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0))), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0))), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_type:", (("test/test.ml", 853, 30689, 30728), ("test/test.ml", 853, 30689, 30744), 0), 0)), (("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30745), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0))), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0), 0, 0); (((("type_declaration_list"), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0))), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0), 0, 0)]), (("test/test.ml", 853, 30689, 30726), ("test/test.ml", 853, 30689, 30779), 0), [(("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30778), 0)], 0))]), (("test/test.ml", 853, 30689, 30710), ("test/test.ml", 853, 30689, 30780), 0), [(("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30779), 0)], 0))]), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 853, 30689, 30781), 0), [(("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30780), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0))), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_type:", (("test/test.ml", 854, 30783, 30790), ("test/test.ml", 854, 30783, 30800), 0), 0)), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 854, 30783, 30801), 0), 0, 0)); (0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0))), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0), 0, 0), [(0, (Tag8 ([(((("type_declaration_list"), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0))), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0), 0, 0); (((("s"), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0))), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0), 0, 0)]), (("test/test.ml", 855, 30803, 30831), ("test/test.ml", 855, 30803, 30858), 0), [(("test/test.ml", 855, 30803, 30832), ("test/test.ml", 855, 30803, 30857), 0); (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30856), 0)], 0))]), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30858), 0), 0, 0))]), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)); ((Tag5 ((("Pstr_typext"), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30876), 0)), ((0, ((("type_extension", (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0))), (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0), 0, 0)))), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30892), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0))), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0))), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_typext:", (("test/test.ml", 856, 30859, 30928), ("test/test.ml", 856, 30859, 30946), 0), 0)), (("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30947), 0), 0, 0); (((("type_extension"), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0))), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0), 0, 0)]), (("test/test.ml", 856, 30859, 30926), ("test/test.ml", 856, 30859, 30964), 0), [(("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30963), 0)], 0))]), (("test/test.ml", 856, 30859, 30910), ("test/test.ml", 856, 30859, 30965), 0), [(("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30964), 0)], 0))]), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30966), 0), [(("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30965), 0)], 0), (Tag1 (Tag2 ("typeext", (("test/test.ml", 856, 30859, 30969), ("test/test.ml", 856, 30859, 30976), 0), 0)), (("test/test.ml", 856, 30859, 30968), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)); ((Tag5 ((("Pstr_exception"), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 30998), 0)), ((0, ((("extension_constructor", (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0))), (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0), 0, 0)))), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 31020), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0))), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0))), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_exception:", (("test/test.ml", 857, 30978, 31056), ("test/test.ml", 857, 30978, 31077), 0), 0)), (("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31078), 0), 0, 0); (((("extension_constructor"), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0))), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0), 0, 0)]), (("test/test.ml", 857, 30978, 31054), ("test/test.ml", 857, 30978, 31102), 0), [(("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31101), 0)], 0))]), (("test/test.ml", 857, 30978, 31038), ("test/test.ml", 857, 30978, 31103), 0), [(("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31102), 0)], 0))]), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31104), 0), [(("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31103), 0)], 0), (Tag1 (Tag2 ("exception", (("test/test.ml", 857, 30978, 31107), ("test/test.ml", 857, 30978, 31116), 0), 0)), (("test/test.ml", 857, 30978, 31106), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)); ((Tag5 ((("Pstr_module"), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31135), 0)), ((0, ((("module_binding", (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0))), (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0), 0, 0)))), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31151), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0))), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0))), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_module:", (("test/test.ml", 858, 31118, 31187), ("test/test.ml", 858, 31118, 31205), 0), 0)), (("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31206), 0), 0, 0); (((("module_binding"), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0))), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0), 0, 0)]), (("test/test.ml", 858, 31118, 31185), ("test/test.ml", 858, 31118, 31222), 0), [(("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31221), 0)], 0))]), (("test/test.ml", 858, 31118, 31169), ("test/test.ml", 858, 31118, 31223), 0), [(("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31222), 0)], 0))]), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31224), 0), [(("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31223), 0)], 0), (Tag1 (Tag2 ("binding", (("test/test.ml", 858, 31118, 31227), ("test/test.ml", 858, 31118, 31234), 0), 0)), (("test/test.ml", 858, 31118, 31226), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)); ((Tag5 ((("Pstr_recmodule"), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31256), 0)), ((0, ((("module_binding_list", (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0))), (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0), 0, 0)))), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31277), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0))), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0))), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_recmodule:", (("test/test.ml", 859, 31236, 31313), ("test/test.ml", 859, 31236, 31334), 0), 0)), (("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31335), 0), 0, 0); (((("module_binding_list"), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0))), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0), 0, 0)]), (("test/test.ml", 859, 31236, 31311), ("test/test.ml", 859, 31236, 31357), 0), [(("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31356), 0)], 0))]), (("test/test.ml", 859, 31236, 31295), ("test/test.ml", 859, 31236, 31358), 0), [(("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31357), 0)], 0))]), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31359), 0), [(("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31358), 0)], 0), (Tag1 (Tag2 ("recmodule", (("test/test.ml", 859, 31236, 31363), ("test/test.ml", 859, 31236, 31372), 0), 0)), (("test/test.ml", 859, 31236, 31362), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)); ((Tag5 ((("Pstr_modtype"), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31392), 0)), ((0, ((("module_type_declaration", (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0))), (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0), 0, 0)))), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31416), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0))), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0))), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_modtype:", (("test/test.ml", 860, 31374, 31452), ("test/test.ml", 860, 31374, 31471), 0), 0)), (("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31472), 0), 0, 0); (((("module_type_declaration"), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0))), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0), 0, 0)]), (("test/test.ml", 860, 31374, 31450), ("test/test.ml", 860, 31374, 31498), 0), [(("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31497), 0)], 0))]), (("test/test.ml", 860, 31374, 31434), ("test/test.ml", 860, 31374, 31499), 0), [(("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31498), 0)], 0))]), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31500), 0), [(("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31499), 0)], 0), (Tag1 (Tag2 ("modtype", (("test/test.ml", 860, 31374, 31503), ("test/test.ml", 860, 31374, 31510), 0), 0)), (("test/test.ml", 860, 31374, 31502), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)); ((Tag5 ((("Pstr_open"), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31546), 0)), ((0, ((("open_description", (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0))), (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0), 0, 0)))), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31563), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0))), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0))), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_open", (("test/test.ml", 862, 31531, 31599), ("test/test.ml", 862, 31531, 31614), 0), 0)), (("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31615), 0), 0, 0); (((("open_description"), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0))), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0), 0, 0)]), (("test/test.ml", 862, 31531, 31597), ("test/test.ml", 862, 31531, 31634), 0), [(("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31633), 0)], 0))]), (("test/test.ml", 862, 31531, 31581), ("test/test.ml", 862, 31531, 31635), 0), [(("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31634), 0)], 0))]), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31636), 0), [(("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31635), 0)], 0), (Tag1 (Tag2 ("open", (("test/test.ml", 862, 31531, 31639), ("test/test.ml", 862, 31531, 31643), 0), 0)), (("test/test.ml", 862, 31531, 31638), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)); ((Tag5 ((("Pstr_class"), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31661), 0)), ((0, ((("class_declarations", (("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0))), (("test/test.ml", 863, 31645, 31662), ("test/test.ml", 863, 31645, 31683), 0), [(("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0)], 0)))), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31683), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0))), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0))), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class:", (("test/test.ml", 863, 31645, 31719), ("test/test.ml", 863, 31645, 31736), 0), 0)), (("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31737), 0), 0, 0); (((("class_declarations"), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0))), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0), 0, 0)]), (("test/test.ml", 863, 31645, 31717), ("test/test.ml", 863, 31645, 31758), 0), [(("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31757), 0)], 0))]), (("test/test.ml", 863, 31645, 31701), ("test/test.ml", 863, 31645, 31759), 0), [(("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31758), 0)], 0))]), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31760), 0), [(("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31759), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 863, 31645, 31763), ("test/test.ml", 863, 31645, 31768), 0), 0)), (("test/test.ml", 863, 31645, 31762), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)); ((Tag5 ((("Pstr_class_type"), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31791), 0)), ((0, ((("class_type_declarations", (("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0))), (("test/test.ml", 864, 31770, 31792), ("test/test.ml", 864, 31770, 31817), 0), [(("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0)], 0)))), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31817), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0))), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0))), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class_type:", (("test/test.ml", 864, 31770, 31853), ("test/test.ml", 864, 31770, 31875), 0), 0)), (("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31876), 0), 0, 0); (((("class_type_declarations"), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0))), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0), 0, 0)]), (("test/test.ml", 864, 31770, 31851), ("test/test.ml", 864, 31770, 31902), 0), [(("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31901), 0)], 0))]), (("test/test.ml", 864, 31770, 31835), ("test/test.ml", 864, 31770, 31903), 0), [(("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31902), 0)], 0))]), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31904), 0), [(("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31903), 0)], 0), (Tag1 (Tag2 ("class_Type", (("test/test.ml", 864, 31770, 31908), ("test/test.ml", 864, 31770, 31918), 0), 0)), (("test/test.ml", 864, 31770, 31907), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)); ((Tag5 ((("Pstr_include"), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31938), 0)), ((0, ((("include_declaration", (("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0))), (("test/test.ml", 865, 31920, 31940), ("test/test.ml", 865, 31920, 31961), 0), [(("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0)], 0)))), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31961), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0))), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0))), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_include:", (("test/test.ml", 865, 31920, 31996), ("test/test.ml", 865, 31920, 32015), 0), 0)), (("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32016), 0), 0, 0); (((("include_declaration"), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0))), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0), 0, 0)]), (("test/test.ml", 865, 31920, 31994), ("test/test.ml", 865, 31920, 32037), 0), [(("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32036), 0)], 0))]), (("test/test.ml", 865, 31920, 31978), ("test/test.ml", 865, 31920, 32038), 0), [(("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 32037), 0)], 0))]), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32039), 0), [(("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 32038), 0)], 0), (Tag1 (Tag2 ("include", (("test/test.ml", 865, 31920, 32042), ("test/test.ml", 865, 31920, 32049), 0), 0)), (("test/test.ml", 865, 31920, 32041), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)); ((Tag5 ((("Pstr_attribute"), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32071), 0)), ((0, ((("attribute", (("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0))), (("test/test.ml", 866, 32051, 32072), ("test/test.ml", 866, 32051, 32083), 0), [(("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0)], 0)))), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32083), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0))), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0))), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_attribute:", (("test/test.ml", 866, 32051, 32118), ("test/test.ml", 866, 32051, 32139), 0), 0)), (("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32140), 0), 0, 0); (((("attribute"), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0))), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0), 0, 0)]), (("test/test.ml", 866, 32051, 32116), ("test/test.ml", 866, 32051, 32152), 0), [(("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32151), 0)], 0))]), (("test/test.ml", 866, 32051, 32100), ("test/test.ml", 866, 32051, 32153), 0), [(("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32152), 0)], 0))]), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32154), 0), [(("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32153), 0)], 0), (Tag1 (Tag2 ("attribte", (("test/test.ml", 866, 32051, 32157), ("test/test.ml", 866, 32051, 32165), 0), 0)), (("test/test.ml", 866, 32051, 32156), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)); ((Tag5 ((("Pstr_extension"), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32187), 0)), ((0, (Tag4 ([((("extension", (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0))), (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0), 0, 0); ((("attributes", (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0))), (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32188), ("test/test.ml", 867, 32167, 32213), 0), [(("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32212), 0)], 0)))), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32213), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0))), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0))), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_extension:", (("test/test.ml", 867, 32167, 32248), ("test/test.ml", 867, 32167, 32269), 0), 0)), (("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32270), 0), 0, 0); (((("extension"), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0))), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0), 0, 0); (((("attributes"), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0))), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32246), ("test/test.ml", 867, 32167, 32295), 0), [(("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32294), 0)], 0))]), (("test/test.ml", 867, 32167, 32230), ("test/test.ml", 867, 32167, 32296), 0), [(("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32295), 0)], 0))]), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32297), 0), [(("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32296), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 867, 32167, 32301), ("test/test.ml", 867, 32167, 32310), 0), 0)), (("test/test.ml", 867, 32167, 32300), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 840, 30025, 30029), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 837, 29927, 29929), ("test/test.ml", 867, 32167, 32311), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0)), 0), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0), 0, 0)), (("test/test.ml", 836, 29867, 29917), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 867, 32167, 32311), 1), 0, 0), 0, (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printdesc", (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0))), (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0))), (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0), 0, 0), (Tag2 ([(Tag3 ((("structure_item_desc"), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0)), 0), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0)), 0), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)]), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 836, 29867, 29916), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0))), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0))), (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0), 0, 0); ((("s", (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0))), (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0), 0, 0)]), (("test/test.ml", 838, 29942, 29945), ("test/test.ml", 838, 29942, 29950), 0), [(("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29949), 0)], 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0))), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0))), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:structure_item_desc:", (("test/test.ml", 839, 29953, 29990), ("test/test.ml", 839, 29953, 30016), 0), 0)), (("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30017), 0), 0, 0); (((("x"), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0))), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0), 0, 0)]), (("test/test.ml", 839, 29953, 29988), ("test/test.ml", 839, 29953, 30021), 0), [(("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30020), 0)], 0))]), (("test/test.ml", 839, 29953, 29972), ("test/test.ml", 839, 29953, 30022), 0), [(("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 30021), 0)], 0))]), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 839, 29953, 30023), 0), [(("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 30022), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0))), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0), 0, 0), [((Tag5 ((("Pstr_eval"), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30057), 0)), ((0, (Tag4 ([((("expression", (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0))), (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0), 0, 0); ((("attributes", (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0))), (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0), 0, 0)]), (("test/test.ml", 841, 30042, 30058), ("test/test.ml", 841, 30042, 30081), 0), [(("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30080), 0)], 0)))), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30081), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0))), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0))), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_eval:", (("test/test.ml", 842, 30085, 30124), ("test/test.ml", 842, 30085, 30140), 0), 0)), (("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30141), 0), 0, 0); (((("expression"), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0))), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0), 0, 0); (((("attributes"), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0))), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0), 0, 0)]), (("test/test.ml", 842, 30085, 30122), ("test/test.ml", 842, 30085, 30165), 0), [(("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30164), 0)], 0))]), (("test/test.ml", 842, 30085, 30106), ("test/test.ml", 842, 30085, 30166), 0), [(("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30165), 0)], 0))]), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 842, 30085, 30167), 0), [(("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30166), 0)], 0), (Tag1 (Tag2 ("Pstr_eval", (("test/test.ml", 843, 30169, 30176), ("test/test.ml", 843, 30169, 30185), 0), 0)), (("test/test.ml", 843, 30169, 30175), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)); ((Tag5 ((("Pstr_value"), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30225), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0))), (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0), 0, 0); ((("value_binding_list", (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0))), (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0), 0, 0)]), (("test/test.ml", 845, 30209, 30226), ("test/test.ml", 845, 30209, 30256), 0), [(("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30255), 0)], 0)))), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30256), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0))), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0))), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_value:", (("test/test.ml", 846, 30260, 30299), ("test/test.ml", 846, 30260, 30316), 0), 0)), (("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30317), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0))), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0), 0, 0); (((("value_binding_list"), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0))), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0), 0, 0)]), (("test/test.ml", 846, 30260, 30297), ("test/test.ml", 846, 30260, 30348), 0), [(("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30347), 0)], 0))]), (("test/test.ml", 846, 30260, 30281), ("test/test.ml", 846, 30260, 30349), 0), [(("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30348), 0)], 0))]), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 846, 30260, 30350), 0), [(("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30349), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0))), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_value:", (("test/test.ml", 847, 30352, 30359), ("test/test.ml", 847, 30352, 30370), 0), 0)), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30371), 0), 0, 0)); (0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0))), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0), 0, 0), [(0, (((("value_binding_list"), (("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0))), (("test/test.ml", 847, 30352, 30403), ("test/test.ml", 847, 30352, 30423), 0), [(("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0)], 0))]), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30423), 0), 0, 0))]), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)); ((Tag5 ((("Pstr_primitive"), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30444), 0)), ((0, ((("value_description", (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0))), (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0), 0, 0)))), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30462), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0))), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0))), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_primitive:", (("test/test.ml", 848, 30424, 30498), ("test/test.ml", 848, 30424, 30519), 0), 0)), (("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30520), 0), 0, 0); (((("value_description"), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0))), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0), 0, 0)]), (("test/test.ml", 848, 30424, 30496), ("test/test.ml", 848, 30424, 30540), 0), [(("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30539), 0)], 0))]), (("test/test.ml", 848, 30424, 30480), ("test/test.ml", 848, 30424, 30541), 0), [(("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30540), 0)], 0))]), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30542), 0), [(("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30541), 0)], 0), (Tag1 (Tag2 ("primitive", (("test/test.ml", 848, 30424, 30546), ("test/test.ml", 848, 30424, 30555), 0), 0)), (("test/test.ml", 848, 30424, 30545), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)); ((Tag5 ((("Pstr_type"), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30614), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0))), (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0), 0, 0); ((("type_declaration_list", (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0))), (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0), 0, 0)]), (("test/test.ml", 850, 30599, 30615), ("test/test.ml", 850, 30599, 30648), 0), [(("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30647), 0)], 0)))), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30648), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0))), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0))), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_type:", (("test/test.ml", 853, 30689, 30728), ("test/test.ml", 853, 30689, 30744), 0), 0)), (("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30745), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0))), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0), 0, 0); (((("type_declaration_list"), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0))), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0), 0, 0)]), (("test/test.ml", 853, 30689, 30726), ("test/test.ml", 853, 30689, 30779), 0), [(("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30778), 0)], 0))]), (("test/test.ml", 853, 30689, 30710), ("test/test.ml", 853, 30689, 30780), 0), [(("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30779), 0)], 0))]), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 853, 30689, 30781), 0), [(("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30780), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0))), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_type:", (("test/test.ml", 854, 30783, 30790), ("test/test.ml", 854, 30783, 30800), 0), 0)), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 854, 30783, 30801), 0), 0, 0)); (0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0))), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0), 0, 0), [(0, (Tag8 ([(((("type_declaration_list"), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0))), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0), 0, 0); (((("s"), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0))), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0), 0, 0)]), (("test/test.ml", 855, 30803, 30831), ("test/test.ml", 855, 30803, 30858), 0), [(("test/test.ml", 855, 30803, 30832), ("test/test.ml", 855, 30803, 30857), 0); (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30856), 0)], 0))]), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30858), 0), 0, 0))]), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)); ((Tag5 ((("Pstr_typext"), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30876), 0)), ((0, ((("type_extension", (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0))), (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0), 0, 0)))), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30892), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0))), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0))), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_typext:", (("test/test.ml", 856, 30859, 30928), ("test/test.ml", 856, 30859, 30946), 0), 0)), (("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30947), 0), 0, 0); (((("type_extension"), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0))), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0), 0, 0)]), (("test/test.ml", 856, 30859, 30926), ("test/test.ml", 856, 30859, 30964), 0), [(("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30963), 0)], 0))]), (("test/test.ml", 856, 30859, 30910), ("test/test.ml", 856, 30859, 30965), 0), [(("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30964), 0)], 0))]), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30966), 0), [(("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30965), 0)], 0), (Tag1 (Tag2 ("typeext", (("test/test.ml", 856, 30859, 30969), ("test/test.ml", 856, 30859, 30976), 0), 0)), (("test/test.ml", 856, 30859, 30968), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)); ((Tag5 ((("Pstr_exception"), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 30998), 0)), ((0, ((("extension_constructor", (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0))), (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0), 0, 0)))), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 31020), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0))), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0))), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_exception:", (("test/test.ml", 857, 30978, 31056), ("test/test.ml", 857, 30978, 31077), 0), 0)), (("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31078), 0), 0, 0); (((("extension_constructor"), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0))), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0), 0, 0)]), (("test/test.ml", 857, 30978, 31054), ("test/test.ml", 857, 30978, 31102), 0), [(("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31101), 0)], 0))]), (("test/test.ml", 857, 30978, 31038), ("test/test.ml", 857, 30978, 31103), 0), [(("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31102), 0)], 0))]), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31104), 0), [(("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31103), 0)], 0), (Tag1 (Tag2 ("exception", (("test/test.ml", 857, 30978, 31107), ("test/test.ml", 857, 30978, 31116), 0), 0)), (("test/test.ml", 857, 30978, 31106), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)); ((Tag5 ((("Pstr_module"), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31135), 0)), ((0, ((("module_binding", (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0))), (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0), 0, 0)))), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31151), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0))), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0))), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_module:", (("test/test.ml", 858, 31118, 31187), ("test/test.ml", 858, 31118, 31205), 0), 0)), (("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31206), 0), 0, 0); (((("module_binding"), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0))), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0), 0, 0)]), (("test/test.ml", 858, 31118, 31185), ("test/test.ml", 858, 31118, 31222), 0), [(("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31221), 0)], 0))]), (("test/test.ml", 858, 31118, 31169), ("test/test.ml", 858, 31118, 31223), 0), [(("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31222), 0)], 0))]), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31224), 0), [(("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31223), 0)], 0), (Tag1 (Tag2 ("binding", (("test/test.ml", 858, 31118, 31227), ("test/test.ml", 858, 31118, 31234), 0), 0)), (("test/test.ml", 858, 31118, 31226), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)); ((Tag5 ((("Pstr_recmodule"), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31256), 0)), ((0, ((("module_binding_list", (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0))), (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0), 0, 0)))), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31277), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0))), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0))), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_recmodule:", (("test/test.ml", 859, 31236, 31313), ("test/test.ml", 859, 31236, 31334), 0), 0)), (("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31335), 0), 0, 0); (((("module_binding_list"), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0))), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0), 0, 0)]), (("test/test.ml", 859, 31236, 31311), ("test/test.ml", 859, 31236, 31357), 0), [(("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31356), 0)], 0))]), (("test/test.ml", 859, 31236, 31295), ("test/test.ml", 859, 31236, 31358), 0), [(("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31357), 0)], 0))]), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31359), 0), [(("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31358), 0)], 0), (Tag1 (Tag2 ("recmodule", (("test/test.ml", 859, 31236, 31363), ("test/test.ml", 859, 31236, 31372), 0), 0)), (("test/test.ml", 859, 31236, 31362), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)); ((Tag5 ((("Pstr_modtype"), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31392), 0)), ((0, ((("module_type_declaration", (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0))), (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0), 0, 0)))), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31416), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0))), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0))), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_modtype:", (("test/test.ml", 860, 31374, 31452), ("test/test.ml", 860, 31374, 31471), 0), 0)), (("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31472), 0), 0, 0); (((("module_type_declaration"), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0))), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0), 0, 0)]), (("test/test.ml", 860, 31374, 31450), ("test/test.ml", 860, 31374, 31498), 0), [(("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31497), 0)], 0))]), (("test/test.ml", 860, 31374, 31434), ("test/test.ml", 860, 31374, 31499), 0), [(("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31498), 0)], 0))]), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31500), 0), [(("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31499), 0)], 0), (Tag1 (Tag2 ("modtype", (("test/test.ml", 860, 31374, 31503), ("test/test.ml", 860, 31374, 31510), 0), 0)), (("test/test.ml", 860, 31374, 31502), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)); ((Tag5 ((("Pstr_open"), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31546), 0)), ((0, ((("open_description", (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0))), (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0), 0, 0)))), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31563), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0))), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0))), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_open", (("test/test.ml", 862, 31531, 31599), ("test/test.ml", 862, 31531, 31614), 0), 0)), (("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31615), 0), 0, 0); (((("open_description"), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0))), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0), 0, 0)]), (("test/test.ml", 862, 31531, 31597), ("test/test.ml", 862, 31531, 31634), 0), [(("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31633), 0)], 0))]), (("test/test.ml", 862, 31531, 31581), ("test/test.ml", 862, 31531, 31635), 0), [(("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31634), 0)], 0))]), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31636), 0), [(("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31635), 0)], 0), (Tag1 (Tag2 ("open", (("test/test.ml", 862, 31531, 31639), ("test/test.ml", 862, 31531, 31643), 0), 0)), (("test/test.ml", 862, 31531, 31638), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)); ((Tag5 ((("Pstr_class"), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31661), 0)), ((0, ((("class_declarations", (("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0))), (("test/test.ml", 863, 31645, 31662), ("test/test.ml", 863, 31645, 31683), 0), [(("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0)], 0)))), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31683), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0))), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0))), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class:", (("test/test.ml", 863, 31645, 31719), ("test/test.ml", 863, 31645, 31736), 0), 0)), (("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31737), 0), 0, 0); (((("class_declarations"), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0))), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0), 0, 0)]), (("test/test.ml", 863, 31645, 31717), ("test/test.ml", 863, 31645, 31758), 0), [(("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31757), 0)], 0))]), (("test/test.ml", 863, 31645, 31701), ("test/test.ml", 863, 31645, 31759), 0), [(("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31758), 0)], 0))]), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31760), 0), [(("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31759), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 863, 31645, 31763), ("test/test.ml", 863, 31645, 31768), 0), 0)), (("test/test.ml", 863, 31645, 31762), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)); ((Tag5 ((("Pstr_class_type"), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31791), 0)), ((0, ((("class_type_declarations", (("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0))), (("test/test.ml", 864, 31770, 31792), ("test/test.ml", 864, 31770, 31817), 0), [(("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0)], 0)))), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31817), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0))), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0))), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class_type:", (("test/test.ml", 864, 31770, 31853), ("test/test.ml", 864, 31770, 31875), 0), 0)), (("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31876), 0), 0, 0); (((("class_type_declarations"), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0))), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0), 0, 0)]), (("test/test.ml", 864, 31770, 31851), ("test/test.ml", 864, 31770, 31902), 0), [(("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31901), 0)], 0))]), (("test/test.ml", 864, 31770, 31835), ("test/test.ml", 864, 31770, 31903), 0), [(("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31902), 0)], 0))]), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31904), 0), [(("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31903), 0)], 0), (Tag1 (Tag2 ("class_Type", (("test/test.ml", 864, 31770, 31908), ("test/test.ml", 864, 31770, 31918), 0), 0)), (("test/test.ml", 864, 31770, 31907), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)); ((Tag5 ((("Pstr_include"), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31938), 0)), ((0, ((("include_declaration", (("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0))), (("test/test.ml", 865, 31920, 31940), ("test/test.ml", 865, 31920, 31961), 0), [(("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0)], 0)))), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31961), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0))), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0))), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_include:", (("test/test.ml", 865, 31920, 31996), ("test/test.ml", 865, 31920, 32015), 0), 0)), (("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32016), 0), 0, 0); (((("include_declaration"), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0))), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0), 0, 0)]), (("test/test.ml", 865, 31920, 31994), ("test/test.ml", 865, 31920, 32037), 0), [(("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32036), 0)], 0))]), (("test/test.ml", 865, 31920, 31978), ("test/test.ml", 865, 31920, 32038), 0), [(("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 32037), 0)], 0))]), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32039), 0), [(("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 32038), 0)], 0), (Tag1 (Tag2 ("include", (("test/test.ml", 865, 31920, 32042), ("test/test.ml", 865, 31920, 32049), 0), 0)), (("test/test.ml", 865, 31920, 32041), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)); ((Tag5 ((("Pstr_attribute"), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32071), 0)), ((0, ((("attribute", (("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0))), (("test/test.ml", 866, 32051, 32072), ("test/test.ml", 866, 32051, 32083), 0), [(("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0)], 0)))), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32083), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0))), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0))), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_attribute:", (("test/test.ml", 866, 32051, 32118), ("test/test.ml", 866, 32051, 32139), 0), 0)), (("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32140), 0), 0, 0); (((("attribute"), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0))), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0), 0, 0)]), (("test/test.ml", 866, 32051, 32116), ("test/test.ml", 866, 32051, 32152), 0), [(("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32151), 0)], 0))]), (("test/test.ml", 866, 32051, 32100), ("test/test.ml", 866, 32051, 32153), 0), [(("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32152), 0)], 0))]), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32154), 0), [(("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32153), 0)], 0), (Tag1 (Tag2 ("attribte", (("test/test.ml", 866, 32051, 32157), ("test/test.ml", 866, 32051, 32165), 0), 0)), (("test/test.ml", 866, 32051, 32156), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)); ((Tag5 ((("Pstr_extension"), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32187), 0)), ((0, (Tag4 ([((("extension", (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0))), (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0), 0, 0); ((("attributes", (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0))), (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32188), ("test/test.ml", 867, 32167, 32213), 0), [(("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32212), 0)], 0)))), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32213), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0))), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0))), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_extension:", (("test/test.ml", 867, 32167, 32248), ("test/test.ml", 867, 32167, 32269), 0), 0)), (("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32270), 0), 0, 0); (((("extension"), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0))), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0), 0, 0); (((("attributes"), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0))), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32246), ("test/test.ml", 867, 32167, 32295), 0), [(("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32294), 0)], 0))]), (("test/test.ml", 867, 32167, 32230), ("test/test.ml", 867, 32167, 32296), 0), [(("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32295), 0)], 0))]), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32297), 0), [(("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32296), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 867, 32167, 32301), ("test/test.ml", 867, 32167, 32310), 0), 0)), (("test/test.ml", 867, 32167, 32300), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 840, 30025, 30029), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 837, 29927, 29929), ("test/test.ml", 867, 32167, 32311), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0)), 0), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0), 0, 0)), (("test/test.ml", 836, 29867, 29917), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 867, 32167, 32311), 1), 0, 0), 0, (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0))])
("DEBUG:value_binding.pat:", ((("printdesc", (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0))), (("test/test.ml", 836, 29867, 29871), ("test/test.ml", 836, 29867, 29880), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("a", (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0))), (("test/test.ml", 836, 29867, 29881), ("test/test.ml", 836, 29867, 29882), 0), 0, 0), (Tag2 ([(Tag3 ((("structure_item_desc"), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0)), 0), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29903), 0), 0, 0); (Tag3 ((("string_list"), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0)), 0), (("test/test.ml", 836, 29867, 29904), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)]), (("test/test.ml", 836, 29867, 29884), ("test/test.ml", 836, 29867, 29915), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 836, 29867, 29916), 0), 0, 0), (Tag19 ((Tag6 ((((("a"), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0))), (("test/test.ml", 837, 29927, 29935), ("test/test.ml", 837, 29927, 29936), 0), 0, 0), [((Tag4 ([((("x", (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0))), (("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29947), 0), 0, 0); ((("s", (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0))), (("test/test.ml", 838, 29942, 29948), ("test/test.ml", 838, 29942, 29949), 0), 0, 0)]), (("test/test.ml", 838, 29942, 29945), ("test/test.ml", 838, 29942, 29950), 0), [(("test/test.ml", 838, 29942, 29946), ("test/test.ml", 838, 29942, 29949), 0)], 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0))), (("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 29971), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0))), (("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 29987), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:structure_item_desc:", (("test/test.ml", 839, 29953, 29990), ("test/test.ml", 839, 29953, 30016), 0), 0)), (("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30017), 0), 0, 0); (((("x"), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0))), (("test/test.ml", 839, 29953, 30019), ("test/test.ml", 839, 29953, 30020), 0), 0, 0)]), (("test/test.ml", 839, 29953, 29988), ("test/test.ml", 839, 29953, 30021), 0), [(("test/test.ml", 839, 29953, 29989), ("test/test.ml", 839, 29953, 30020), 0)], 0))]), (("test/test.ml", 839, 29953, 29972), ("test/test.ml", 839, 29953, 30022), 0), [(("test/test.ml", 839, 29953, 29973), ("test/test.ml", 839, 29953, 30021), 0)], 0))]), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 839, 29953, 30023), 0), [(("test/test.ml", 839, 29953, 29958), ("test/test.ml", 839, 29953, 30022), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0))), (("test/test.ml", 840, 30025, 30035), ("test/test.ml", 840, 30025, 30036), 0), 0, 0), [((Tag5 ((("Pstr_eval"), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30057), 0)), ((0, (Tag4 ([((("expression", (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0))), (("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30069), 0), 0, 0); ((("attributes", (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0))), (("test/test.ml", 841, 30042, 30070), ("test/test.ml", 841, 30042, 30080), 0), 0, 0)]), (("test/test.ml", 841, 30042, 30058), ("test/test.ml", 841, 30042, 30081), 0), [(("test/test.ml", 841, 30042, 30059), ("test/test.ml", 841, 30042, 30080), 0)], 0)))), (("test/test.ml", 841, 30042, 30048), ("test/test.ml", 841, 30042, 30081), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0))), (("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30105), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0))), (("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30121), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_eval:", (("test/test.ml", 842, 30085, 30124), ("test/test.ml", 842, 30085, 30140), 0), 0)), (("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30141), 0), 0, 0); (((("expression"), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0))), (("test/test.ml", 842, 30085, 30143), ("test/test.ml", 842, 30085, 30153), 0), 0, 0); (((("attributes"), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0))), (("test/test.ml", 842, 30085, 30154), ("test/test.ml", 842, 30085, 30164), 0), 0, 0)]), (("test/test.ml", 842, 30085, 30122), ("test/test.ml", 842, 30085, 30165), 0), [(("test/test.ml", 842, 30085, 30123), ("test/test.ml", 842, 30085, 30164), 0)], 0))]), (("test/test.ml", 842, 30085, 30106), ("test/test.ml", 842, 30085, 30166), 0), [(("test/test.ml", 842, 30085, 30107), ("test/test.ml", 842, 30085, 30165), 0)], 0))]), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 842, 30085, 30167), 0), [(("test/test.ml", 842, 30085, 30092), ("test/test.ml", 842, 30085, 30166), 0)], 0), (Tag1 (Tag2 ("Pstr_eval", (("test/test.ml", 843, 30169, 30176), ("test/test.ml", 843, 30169, 30185), 0), 0)), (("test/test.ml", 843, 30169, 30175), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)), (("test/test.ml", 842, 30085, 30091), ("test/test.ml", 843, 30169, 30186), 0), 0, 0)); ((Tag5 ((("Pstr_value"), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30225), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0))), (("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30235), 0), 0, 0); ((("value_binding_list", (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0))), (("test/test.ml", 845, 30209, 30237), ("test/test.ml", 845, 30209, 30255), 0), 0, 0)]), (("test/test.ml", 845, 30209, 30226), ("test/test.ml", 845, 30209, 30256), 0), [(("test/test.ml", 845, 30209, 30227), ("test/test.ml", 845, 30209, 30255), 0)], 0)))), (("test/test.ml", 845, 30209, 30215), ("test/test.ml", 845, 30209, 30256), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0))), (("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30280), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0))), (("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30296), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_value:", (("test/test.ml", 846, 30260, 30299), ("test/test.ml", 846, 30260, 30316), 0), 0)), (("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30317), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0))), (("test/test.ml", 846, 30260, 30319), ("test/test.ml", 846, 30260, 30327), 0), 0, 0); (((("value_binding_list"), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0))), (("test/test.ml", 846, 30260, 30329), ("test/test.ml", 846, 30260, 30347), 0), 0, 0)]), (("test/test.ml", 846, 30260, 30297), ("test/test.ml", 846, 30260, 30348), 0), [(("test/test.ml", 846, 30260, 30298), ("test/test.ml", 846, 30260, 30347), 0)], 0))]), (("test/test.ml", 846, 30260, 30281), ("test/test.ml", 846, 30260, 30349), 0), [(("test/test.ml", 846, 30260, 30282), ("test/test.ml", 846, 30260, 30348), 0)], 0))]), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 846, 30260, 30350), 0), [(("test/test.ml", 846, 30260, 30267), ("test/test.ml", 846, 30260, 30349), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0))), (("test/test.ml", 847, 30352, 30377), ("test/test.ml", 847, 30352, 30378), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_value:", (("test/test.ml", 847, 30352, 30359), ("test/test.ml", 847, 30352, 30370), 0), 0)), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30371), 0), 0, 0)); (0, (Tag5 ((((("print_value_binding_list"), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0))), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30403), 0), 0, 0), [(0, (((("value_binding_list"), (("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0))), (("test/test.ml", 847, 30352, 30403), ("test/test.ml", 847, 30352, 30423), 0), [(("test/test.ml", 847, 30352, 30404), ("test/test.ml", 847, 30352, 30422), 0)], 0))]), (("test/test.ml", 847, 30352, 30379), ("test/test.ml", 847, 30352, 30423), 0), 0, 0))]), (("test/test.ml", 847, 30352, 30358), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)), (("test/test.ml", 846, 30260, 30266), ("test/test.ml", 847, 30352, 30423), 0), 0, 0)); ((Tag5 ((("Pstr_primitive"), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30444), 0)), ((0, ((("value_description", (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0))), (("test/test.ml", 848, 30424, 30445), ("test/test.ml", 848, 30424, 30462), 0), 0, 0)))), (("test/test.ml", 848, 30424, 30430), ("test/test.ml", 848, 30424, 30462), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0))), (("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30479), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0))), (("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30495), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_primitive:", (("test/test.ml", 848, 30424, 30498), ("test/test.ml", 848, 30424, 30519), 0), 0)), (("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30520), 0), 0, 0); (((("value_description"), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0))), (("test/test.ml", 848, 30424, 30522), ("test/test.ml", 848, 30424, 30539), 0), 0, 0)]), (("test/test.ml", 848, 30424, 30496), ("test/test.ml", 848, 30424, 30540), 0), [(("test/test.ml", 848, 30424, 30497), ("test/test.ml", 848, 30424, 30539), 0)], 0))]), (("test/test.ml", 848, 30424, 30480), ("test/test.ml", 848, 30424, 30541), 0), [(("test/test.ml", 848, 30424, 30481), ("test/test.ml", 848, 30424, 30540), 0)], 0))]), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30542), 0), [(("test/test.ml", 848, 30424, 30466), ("test/test.ml", 848, 30424, 30541), 0)], 0), (Tag1 (Tag2 ("primitive", (("test/test.ml", 848, 30424, 30546), ("test/test.ml", 848, 30424, 30555), 0), 0)), (("test/test.ml", 848, 30424, 30545), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)), (("test/test.ml", 848, 30424, 30465), ("test/test.ml", 848, 30424, 30556), 0), 0, 0)); ((Tag5 ((("Pstr_type"), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30614), 0)), ((0, (Tag4 ([((("rec_flag", (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0))), (("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30624), 0), 0, 0); ((("type_declaration_list", (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0))), (("test/test.ml", 850, 30599, 30626), ("test/test.ml", 850, 30599, 30647), 0), 0, 0)]), (("test/test.ml", 850, 30599, 30615), ("test/test.ml", 850, 30599, 30648), 0), [(("test/test.ml", 850, 30599, 30616), ("test/test.ml", 850, 30599, 30647), 0)], 0)))), (("test/test.ml", 850, 30599, 30605), ("test/test.ml", 850, 30599, 30648), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0))), (("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30709), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0))), (("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30725), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_type:", (("test/test.ml", 853, 30689, 30728), ("test/test.ml", 853, 30689, 30744), 0), 0)), (("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30745), 0), 0, 0); (((("rec_flag"), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0))), (("test/test.ml", 853, 30689, 30747), ("test/test.ml", 853, 30689, 30755), 0), 0, 0); (((("type_declaration_list"), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0))), (("test/test.ml", 853, 30689, 30757), ("test/test.ml", 853, 30689, 30778), 0), 0, 0)]), (("test/test.ml", 853, 30689, 30726), ("test/test.ml", 853, 30689, 30779), 0), [(("test/test.ml", 853, 30689, 30727), ("test/test.ml", 853, 30689, 30778), 0)], 0))]), (("test/test.ml", 853, 30689, 30710), ("test/test.ml", 853, 30689, 30780), 0), [(("test/test.ml", 853, 30689, 30711), ("test/test.ml", 853, 30689, 30779), 0)], 0))]), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 853, 30689, 30781), 0), [(("test/test.ml", 853, 30689, 30696), ("test/test.ml", 853, 30689, 30780), 0)], 0), (Tag5 ((((("^"), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0))), (("test/test.ml", 854, 30783, 30801), ("test/test.ml", 854, 30783, 30802), 0), 0, 0), [(0, (Tag1 (Tag2 ("Pstr_type:", (("test/test.ml", 854, 30783, 30790), ("test/test.ml", 854, 30783, 30800), 0), 0)), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 854, 30783, 30801), 0), 0, 0)); (0, (Tag5 ((((("process_type_decl_list"), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0))), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30831), 0), 0, 0), [(0, (Tag8 ([(((("type_declaration_list"), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0))), (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30854), 0), 0, 0); (((("s"), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0))), (("test/test.ml", 855, 30803, 30855), ("test/test.ml", 855, 30803, 30856), 0), 0, 0)]), (("test/test.ml", 855, 30803, 30831), ("test/test.ml", 855, 30803, 30858), 0), [(("test/test.ml", 855, 30803, 30832), ("test/test.ml", 855, 30803, 30857), 0); (("test/test.ml", 855, 30803, 30833), ("test/test.ml", 855, 30803, 30856), 0)], 0))]), (("test/test.ml", 855, 30803, 30809), ("test/test.ml", 855, 30803, 30858), 0), 0, 0))]), (("test/test.ml", 854, 30783, 30789), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)), (("test/test.ml", 853, 30689, 30695), ("test/test.ml", 855, 30803, 30858), 0), 0, 0)); ((Tag5 ((("Pstr_typext"), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30876), 0)), ((0, ((("type_extension", (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0))), (("test/test.ml", 856, 30859, 30878), ("test/test.ml", 856, 30859, 30892), 0), 0, 0)))), (("test/test.ml", 856, 30859, 30865), ("test/test.ml", 856, 30859, 30892), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0))), (("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30909), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0))), (("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30925), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_typext:", (("test/test.ml", 856, 30859, 30928), ("test/test.ml", 856, 30859, 30946), 0), 0)), (("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30947), 0), 0, 0); (((("type_extension"), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0))), (("test/test.ml", 856, 30859, 30949), ("test/test.ml", 856, 30859, 30963), 0), 0, 0)]), (("test/test.ml", 856, 30859, 30926), ("test/test.ml", 856, 30859, 30964), 0), [(("test/test.ml", 856, 30859, 30927), ("test/test.ml", 856, 30859, 30963), 0)], 0))]), (("test/test.ml", 856, 30859, 30910), ("test/test.ml", 856, 30859, 30965), 0), [(("test/test.ml", 856, 30859, 30911), ("test/test.ml", 856, 30859, 30964), 0)], 0))]), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30966), 0), [(("test/test.ml", 856, 30859, 30896), ("test/test.ml", 856, 30859, 30965), 0)], 0), (Tag1 (Tag2 ("typeext", (("test/test.ml", 856, 30859, 30969), ("test/test.ml", 856, 30859, 30976), 0), 0)), (("test/test.ml", 856, 30859, 30968), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)), (("test/test.ml", 856, 30859, 30895), ("test/test.ml", 856, 30859, 30977), 0), 0, 0)); ((Tag5 ((("Pstr_exception"), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 30998), 0)), ((0, ((("extension_constructor", (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0))), (("test/test.ml", 857, 30978, 30999), ("test/test.ml", 857, 30978, 31020), 0), 0, 0)))), (("test/test.ml", 857, 30978, 30984), ("test/test.ml", 857, 30978, 31020), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0))), (("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31037), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0))), (("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31053), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_exception:", (("test/test.ml", 857, 30978, 31056), ("test/test.ml", 857, 30978, 31077), 0), 0)), (("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31078), 0), 0, 0); (((("extension_constructor"), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0))), (("test/test.ml", 857, 30978, 31080), ("test/test.ml", 857, 30978, 31101), 0), 0, 0)]), (("test/test.ml", 857, 30978, 31054), ("test/test.ml", 857, 30978, 31102), 0), [(("test/test.ml", 857, 30978, 31055), ("test/test.ml", 857, 30978, 31101), 0)], 0))]), (("test/test.ml", 857, 30978, 31038), ("test/test.ml", 857, 30978, 31103), 0), [(("test/test.ml", 857, 30978, 31039), ("test/test.ml", 857, 30978, 31102), 0)], 0))]), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31104), 0), [(("test/test.ml", 857, 30978, 31024), ("test/test.ml", 857, 30978, 31103), 0)], 0), (Tag1 (Tag2 ("exception", (("test/test.ml", 857, 30978, 31107), ("test/test.ml", 857, 30978, 31116), 0), 0)), (("test/test.ml", 857, 30978, 31106), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)), (("test/test.ml", 857, 30978, 31023), ("test/test.ml", 857, 30978, 31117), 0), 0, 0)); ((Tag5 ((("Pstr_module"), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31135), 0)), ((0, ((("module_binding", (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0))), (("test/test.ml", 858, 31118, 31137), ("test/test.ml", 858, 31118, 31151), 0), 0, 0)))), (("test/test.ml", 858, 31118, 31124), ("test/test.ml", 858, 31118, 31151), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0))), (("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31168), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0))), (("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31184), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_module:", (("test/test.ml", 858, 31118, 31187), ("test/test.ml", 858, 31118, 31205), 0), 0)), (("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31206), 0), 0, 0); (((("module_binding"), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0))), (("test/test.ml", 858, 31118, 31207), ("test/test.ml", 858, 31118, 31221), 0), 0, 0)]), (("test/test.ml", 858, 31118, 31185), ("test/test.ml", 858, 31118, 31222), 0), [(("test/test.ml", 858, 31118, 31186), ("test/test.ml", 858, 31118, 31221), 0)], 0))]), (("test/test.ml", 858, 31118, 31169), ("test/test.ml", 858, 31118, 31223), 0), [(("test/test.ml", 858, 31118, 31170), ("test/test.ml", 858, 31118, 31222), 0)], 0))]), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31224), 0), [(("test/test.ml", 858, 31118, 31155), ("test/test.ml", 858, 31118, 31223), 0)], 0), (Tag1 (Tag2 ("binding", (("test/test.ml", 858, 31118, 31227), ("test/test.ml", 858, 31118, 31234), 0), 0)), (("test/test.ml", 858, 31118, 31226), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)), (("test/test.ml", 858, 31118, 31154), ("test/test.ml", 858, 31118, 31235), 0), 0, 0)); ((Tag5 ((("Pstr_recmodule"), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31256), 0)), ((0, ((("module_binding_list", (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0))), (("test/test.ml", 859, 31236, 31258), ("test/test.ml", 859, 31236, 31277), 0), 0, 0)))), (("test/test.ml", 859, 31236, 31242), ("test/test.ml", 859, 31236, 31277), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0))), (("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31294), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0))), (("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31310), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_recmodule:", (("test/test.ml", 859, 31236, 31313), ("test/test.ml", 859, 31236, 31334), 0), 0)), (("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31335), 0), 0, 0); (((("module_binding_list"), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0))), (("test/test.ml", 859, 31236, 31337), ("test/test.ml", 859, 31236, 31356), 0), 0, 0)]), (("test/test.ml", 859, 31236, 31311), ("test/test.ml", 859, 31236, 31357), 0), [(("test/test.ml", 859, 31236, 31312), ("test/test.ml", 859, 31236, 31356), 0)], 0))]), (("test/test.ml", 859, 31236, 31295), ("test/test.ml", 859, 31236, 31358), 0), [(("test/test.ml", 859, 31236, 31296), ("test/test.ml", 859, 31236, 31357), 0)], 0))]), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31359), 0), [(("test/test.ml", 859, 31236, 31281), ("test/test.ml", 859, 31236, 31358), 0)], 0), (Tag1 (Tag2 ("recmodule", (("test/test.ml", 859, 31236, 31363), ("test/test.ml", 859, 31236, 31372), 0), 0)), (("test/test.ml", 859, 31236, 31362), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)), (("test/test.ml", 859, 31236, 31280), ("test/test.ml", 859, 31236, 31373), 0), 0, 0)); ((Tag5 ((("Pstr_modtype"), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31392), 0)), ((0, ((("module_type_declaration", (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0))), (("test/test.ml", 860, 31374, 31393), ("test/test.ml", 860, 31374, 31416), 0), 0, 0)))), (("test/test.ml", 860, 31374, 31380), ("test/test.ml", 860, 31374, 31416), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0))), (("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31433), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0))), (("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31449), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_modtype:", (("test/test.ml", 860, 31374, 31452), ("test/test.ml", 860, 31374, 31471), 0), 0)), (("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31472), 0), 0, 0); (((("module_type_declaration"), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0))), (("test/test.ml", 860, 31374, 31474), ("test/test.ml", 860, 31374, 31497), 0), 0, 0)]), (("test/test.ml", 860, 31374, 31450), ("test/test.ml", 860, 31374, 31498), 0), [(("test/test.ml", 860, 31374, 31451), ("test/test.ml", 860, 31374, 31497), 0)], 0))]), (("test/test.ml", 860, 31374, 31434), ("test/test.ml", 860, 31374, 31499), 0), [(("test/test.ml", 860, 31374, 31435), ("test/test.ml", 860, 31374, 31498), 0)], 0))]), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31500), 0), [(("test/test.ml", 860, 31374, 31420), ("test/test.ml", 860, 31374, 31499), 0)], 0), (Tag1 (Tag2 ("modtype", (("test/test.ml", 860, 31374, 31503), ("test/test.ml", 860, 31374, 31510), 0), 0)), (("test/test.ml", 860, 31374, 31502), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)), (("test/test.ml", 860, 31374, 31419), ("test/test.ml", 860, 31374, 31511), 0), 0, 0)); ((Tag5 ((("Pstr_open"), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31546), 0)), ((0, ((("open_description", (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0))), (("test/test.ml", 862, 31531, 31547), ("test/test.ml", 862, 31531, 31563), 0), 0, 0)))), (("test/test.ml", 862, 31531, 31537), ("test/test.ml", 862, 31531, 31563), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0))), (("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31580), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0))), (("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31596), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_open", (("test/test.ml", 862, 31531, 31599), ("test/test.ml", 862, 31531, 31614), 0), 0)), (("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31615), 0), 0, 0); (((("open_description"), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0))), (("test/test.ml", 862, 31531, 31617), ("test/test.ml", 862, 31531, 31633), 0), 0, 0)]), (("test/test.ml", 862, 31531, 31597), ("test/test.ml", 862, 31531, 31634), 0), [(("test/test.ml", 862, 31531, 31598), ("test/test.ml", 862, 31531, 31633), 0)], 0))]), (("test/test.ml", 862, 31531, 31581), ("test/test.ml", 862, 31531, 31635), 0), [(("test/test.ml", 862, 31531, 31582), ("test/test.ml", 862, 31531, 31634), 0)], 0))]), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31636), 0), [(("test/test.ml", 862, 31531, 31567), ("test/test.ml", 862, 31531, 31635), 0)], 0), (Tag1 (Tag2 ("open", (("test/test.ml", 862, 31531, 31639), ("test/test.ml", 862, 31531, 31643), 0), 0)), (("test/test.ml", 862, 31531, 31638), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)), (("test/test.ml", 862, 31531, 31566), ("test/test.ml", 862, 31531, 31644), 0), 0, 0)); ((Tag5 ((("Pstr_class"), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31661), 0)), ((0, ((("class_declarations", (("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0))), (("test/test.ml", 863, 31645, 31662), ("test/test.ml", 863, 31645, 31683), 0), [(("test/test.ml", 863, 31645, 31663), ("test/test.ml", 863, 31645, 31681), 0)], 0)))), (("test/test.ml", 863, 31645, 31651), ("test/test.ml", 863, 31645, 31683), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0))), (("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31700), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0))), (("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31716), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class:", (("test/test.ml", 863, 31645, 31719), ("test/test.ml", 863, 31645, 31736), 0), 0)), (("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31737), 0), 0, 0); (((("class_declarations"), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0))), (("test/test.ml", 863, 31645, 31739), ("test/test.ml", 863, 31645, 31757), 0), 0, 0)]), (("test/test.ml", 863, 31645, 31717), ("test/test.ml", 863, 31645, 31758), 0), [(("test/test.ml", 863, 31645, 31718), ("test/test.ml", 863, 31645, 31757), 0)], 0))]), (("test/test.ml", 863, 31645, 31701), ("test/test.ml", 863, 31645, 31759), 0), [(("test/test.ml", 863, 31645, 31702), ("test/test.ml", 863, 31645, 31758), 0)], 0))]), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31760), 0), [(("test/test.ml", 863, 31645, 31687), ("test/test.ml", 863, 31645, 31759), 0)], 0), (Tag1 (Tag2 ("class", (("test/test.ml", 863, 31645, 31763), ("test/test.ml", 863, 31645, 31768), 0), 0)), (("test/test.ml", 863, 31645, 31762), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)), (("test/test.ml", 863, 31645, 31686), ("test/test.ml", 863, 31645, 31769), 0), 0, 0)); ((Tag5 ((("Pstr_class_type"), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31791), 0)), ((0, ((("class_type_declarations", (("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0))), (("test/test.ml", 864, 31770, 31792), ("test/test.ml", 864, 31770, 31817), 0), [(("test/test.ml", 864, 31770, 31793), ("test/test.ml", 864, 31770, 31816), 0)], 0)))), (("test/test.ml", 864, 31770, 31776), ("test/test.ml", 864, 31770, 31817), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0))), (("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31834), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0))), (("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31850), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_class_type:", (("test/test.ml", 864, 31770, 31853), ("test/test.ml", 864, 31770, 31875), 0), 0)), (("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31876), 0), 0, 0); (((("class_type_declarations"), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0))), (("test/test.ml", 864, 31770, 31878), ("test/test.ml", 864, 31770, 31901), 0), 0, 0)]), (("test/test.ml", 864, 31770, 31851), ("test/test.ml", 864, 31770, 31902), 0), [(("test/test.ml", 864, 31770, 31852), ("test/test.ml", 864, 31770, 31901), 0)], 0))]), (("test/test.ml", 864, 31770, 31835), ("test/test.ml", 864, 31770, 31903), 0), [(("test/test.ml", 864, 31770, 31836), ("test/test.ml", 864, 31770, 31902), 0)], 0))]), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31904), 0), [(("test/test.ml", 864, 31770, 31821), ("test/test.ml", 864, 31770, 31903), 0)], 0), (Tag1 (Tag2 ("class_Type", (("test/test.ml", 864, 31770, 31908), ("test/test.ml", 864, 31770, 31918), 0), 0)), (("test/test.ml", 864, 31770, 31907), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)), (("test/test.ml", 864, 31770, 31820), ("test/test.ml", 864, 31770, 31919), 0), 0, 0)); ((Tag5 ((("Pstr_include"), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31938), 0)), ((0, ((("include_declaration", (("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0))), (("test/test.ml", 865, 31920, 31940), ("test/test.ml", 865, 31920, 31961), 0), [(("test/test.ml", 865, 31920, 31941), ("test/test.ml", 865, 31920, 31960), 0)], 0)))), (("test/test.ml", 865, 31920, 31926), ("test/test.ml", 865, 31920, 31961), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0))), (("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 31977), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0))), (("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 31993), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_include:", (("test/test.ml", 865, 31920, 31996), ("test/test.ml", 865, 31920, 32015), 0), 0)), (("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32016), 0), 0, 0); (((("include_declaration"), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0))), (("test/test.ml", 865, 31920, 32017), ("test/test.ml", 865, 31920, 32036), 0), 0, 0)]), (("test/test.ml", 865, 31920, 31994), ("test/test.ml", 865, 31920, 32037), 0), [(("test/test.ml", 865, 31920, 31995), ("test/test.ml", 865, 31920, 32036), 0)], 0))]), (("test/test.ml", 865, 31920, 31978), ("test/test.ml", 865, 31920, 32038), 0), [(("test/test.ml", 865, 31920, 31979), ("test/test.ml", 865, 31920, 32037), 0)], 0))]), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32039), 0), [(("test/test.ml", 865, 31920, 31964), ("test/test.ml", 865, 31920, 32038), 0)], 0), (Tag1 (Tag2 ("include", (("test/test.ml", 865, 31920, 32042), ("test/test.ml", 865, 31920, 32049), 0), 0)), (("test/test.ml", 865, 31920, 32041), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)), (("test/test.ml", 865, 31920, 31963), ("test/test.ml", 865, 31920, 32050), 0), 0, 0)); ((Tag5 ((("Pstr_attribute"), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32071), 0)), ((0, ((("attribute", (("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0))), (("test/test.ml", 866, 32051, 32072), ("test/test.ml", 866, 32051, 32083), 0), [(("test/test.ml", 866, 32051, 32073), ("test/test.ml", 866, 32051, 32082), 0)], 0)))), (("test/test.ml", 866, 32051, 32057), ("test/test.ml", 866, 32051, 32083), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0))), (("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32099), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0))), (("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32115), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_attribute:", (("test/test.ml", 866, 32051, 32118), ("test/test.ml", 866, 32051, 32139), 0), 0)), (("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32140), 0), 0, 0); (((("attribute"), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0))), (("test/test.ml", 866, 32051, 32142), ("test/test.ml", 866, 32051, 32151), 0), 0, 0)]), (("test/test.ml", 866, 32051, 32116), ("test/test.ml", 866, 32051, 32152), 0), [(("test/test.ml", 866, 32051, 32117), ("test/test.ml", 866, 32051, 32151), 0)], 0))]), (("test/test.ml", 866, 32051, 32100), ("test/test.ml", 866, 32051, 32153), 0), [(("test/test.ml", 866, 32051, 32101), ("test/test.ml", 866, 32051, 32152), 0)], 0))]), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32154), 0), [(("test/test.ml", 866, 32051, 32086), ("test/test.ml", 866, 32051, 32153), 0)], 0), (Tag1 (Tag2 ("attribte", (("test/test.ml", 866, 32051, 32157), ("test/test.ml", 866, 32051, 32165), 0), 0)), (("test/test.ml", 866, 32051, 32156), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)), (("test/test.ml", 866, 32051, 32085), ("test/test.ml", 866, 32051, 32166), 0), 0, 0)); ((Tag5 ((("Pstr_extension"), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32187), 0)), ((0, (Tag4 ([((("extension", (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0))), (("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32199), 0), 0, 0); ((("attributes", (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0))), (("test/test.ml", 867, 32167, 32202), ("test/test.ml", 867, 32167, 32212), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32188), ("test/test.ml", 867, 32167, 32213), 0), [(("test/test.ml", 867, 32167, 32190), ("test/test.ml", 867, 32167, 32212), 0)], 0)))), (("test/test.ml", 867, 32167, 32173), ("test/test.ml", 867, 32167, 32213), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0))), (("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32229), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0))), (("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32245), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:Pstr_extension:", (("test/test.ml", 867, 32167, 32248), ("test/test.ml", 867, 32167, 32269), 0), 0)), (("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32270), 0), 0, 0); (((("extension"), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0))), (("test/test.ml", 867, 32167, 32272), ("test/test.ml", 867, 32167, 32281), 0), 0, 0); (((("attributes"), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0))), (("test/test.ml", 867, 32167, 32284), ("test/test.ml", 867, 32167, 32294), 0), 0, 0)]), (("test/test.ml", 867, 32167, 32246), ("test/test.ml", 867, 32167, 32295), 0), [(("test/test.ml", 867, 32167, 32247), ("test/test.ml", 867, 32167, 32294), 0)], 0))]), (("test/test.ml", 867, 32167, 32230), ("test/test.ml", 867, 32167, 32296), 0), [(("test/test.ml", 867, 32167, 32231), ("test/test.ml", 867, 32167, 32295), 0)], 0))]), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32297), 0), [(("test/test.ml", 867, 32167, 32216), ("test/test.ml", 867, 32167, 32296), 0)], 0), (Tag1 (Tag2 ("extension", (("test/test.ml", 867, 32167, 32301), ("test/test.ml", 867, 32167, 32310), 0), 0)), (("test/test.ml", 867, 32167, 32300), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 867, 32167, 32215), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 840, 30025, 30029), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 839, 29953, 29957), ("test/test.ml", 867, 32167, 32311), 0), 0, 0))]), (("test/test.ml", 837, 29927, 29929), ("test/test.ml", 867, 32167, 32311), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0)), 0), (("test/test.ml", 836, 29867, 29918), ("test/test.ml", 836, 29867, 29924), 0), 0, 0)), (("test/test.ml", 836, 29867, 29917), ("test/test.ml", 867, 32167, 32311), 0), 0, 0)), (("test/test.ml", 836, 29867, 29880), ("test/test.ml", 867, 32167, 32311), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 836, 29867, 29867), ("test/test.ml", 867, 32167, 32311), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_types", (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0))), (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0))), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32365), 0), [(("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0)), 0), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0), 0, 0)), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32370), 1), 0, 0), 0, (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0))]), (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_types", (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0))), (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0))), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32365), 0), [(("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0)), 0), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0), 0, 0)), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32370), 1), 0, 0), 0, (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_types", (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0))), (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0))), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32365), 0), [(("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0)), 0), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0), 0, 0)), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32370), 1), 0, 0), 0, (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0))])
("DEBUG:value_binding.pat:", ((("process_types", (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0))), (("test/test.ml", 870, 32344, 32348), ("test/test.ml", 870, 32344, 32361), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0))), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32365), 0), [(("test/test.ml", 870, 32344, 32363), ("test/test.ml", 870, 32344, 32364), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0)), 0), (("test/test.ml", 870, 32344, 32368), ("test/test.ml", 870, 32344, 32370), 0), 0, 0)), (("test/test.ml", 870, 32344, 32362), ("test/test.ml", 870, 32344, 32370), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 870, 32344, 32344), ("test/test.ml", 870, 32344, 32370), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_option", (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0))), (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0))), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32399), 0), [(("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0)), 0), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0), 0, 0)), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32402), 1), 0, 0), 0, (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0))]), (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_option", (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0))), (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0))), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32399), 0), [(("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0)), 0), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0), 0, 0)), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32402), 1), 0, 0), 0, (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_option", (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0))), (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0))), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32399), 0), [(("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0)), 0), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0), 0, 0)), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32402), 1), 0, 0), 0, (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0))])
("DEBUG:value_binding.pat:", ((("process_option", (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0))), (("test/test.ml", 871, 32371, 32375), ("test/test.ml", 871, 32371, 32389), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("alist0", (("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0))), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32399), 0), [(("test/test.ml", 871, 32371, 32392), ("test/test.ml", 871, 32371, 32398), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0)), 0), (("test/test.ml", 871, 32371, 32400), ("test/test.ml", 871, 32371, 32402), 0), 0, 0)), (("test/test.ml", 871, 32371, 32390), ("test/test.ml", 871, 32371, 32402), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 871, 32371, 32371), ("test/test.ml", 871, 32371, 32402), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_core_type", (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0))), (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0))), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32434), 0), [(("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0)), 0), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0), 0, 0)), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32437), 1), 0, 0), 0, (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0))]), (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_core_type", (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0))), (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0))), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32434), 0), [(("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0)), 0), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0), 0, 0)), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32437), 1), 0, 0), 0, (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_core_type", (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0))), (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0))), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32434), 0), [(("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0)), 0), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0), 0, 0)), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32437), 1), 0, 0), 0, (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0))])
("DEBUG:value_binding.pat:", ((("process_core_type", (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0))), (("test/test.ml", 872, 32403, 32407), ("test/test.ml", 872, 32403, 32424), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("alist0", (("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0))), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32434), 0), [(("test/test.ml", 872, 32403, 32427), ("test/test.ml", 872, 32403, 32433), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0)), 0), (("test/test.ml", 872, 32403, 32435), ("test/test.ml", 872, 32403, 32437), 0), 0, 0)), (("test/test.ml", 872, 32403, 32425), ("test/test.ml", 872, 32403, 32437), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 872, 32403, 32403), ("test/test.ml", 872, 32403, 32437), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_direction_flag", (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0))), (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0))), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32474), 0), [(("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0)), 0), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0), 0, 0)), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32477), 1), 0, 0), 0, (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0))]), (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_direction_flag", (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0))), (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0))), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32474), 0), [(("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0)), 0), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0), 0, 0)), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32477), 1), 0, 0), 0, (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_direction_flag", (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0))), (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0))), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32474), 0), [(("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0)), 0), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0), 0, 0)), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32477), 1), 0, 0), 0, (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0))])
("DEBUG:value_binding.pat:", ((("process_direction_flag", (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0))), (("test/test.ml", 873, 32438, 32442), ("test/test.ml", 873, 32438, 32464), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("alist0", (("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0))), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32474), 0), [(("test/test.ml", 873, 32438, 32467), ("test/test.ml", 873, 32438, 32473), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0)), 0), (("test/test.ml", 873, 32438, 32475), ("test/test.ml", 873, 32438, 32477), 0), 0, 0)), (("test/test.ml", 873, 32438, 32465), ("test/test.ml", 873, 32438, 32477), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 873, 32438, 32438), ("test/test.ml", 873, 32438, 32477), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_arg_label", (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0))), (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aarg_label0", (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0))), (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0), 0, 0), (Tag3 ((("arg_label"), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0)), 0), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32532), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0)), 0), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32535), 1), 0, 0), 0, (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0))]), (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_arg_label", (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0))), (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aarg_label0", (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0))), (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0), 0, 0), (Tag3 ((("arg_label"), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0)), 0), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32532), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0)), 0), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32535), 1), 0, 0), 0, (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_arg_label", (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0))), (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aarg_label0", (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0))), (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0), 0, 0), (Tag3 ((("arg_label"), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0)), 0), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32532), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0)), 0), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32535), 1), 0, 0), 0, (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0))])
("DEBUG:value_binding.pat:", ((("process_arg_label", (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0))), (("test/test.ml", 878, 32486, 32490), ("test/test.ml", 878, 32486, 32507), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aarg_label0", (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0))), (("test/test.ml", 878, 32486, 32510), ("test/test.ml", 878, 32486, 32521), 0), 0, 0), (Tag3 ((("arg_label"), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0)), 0), (("test/test.ml", 878, 32486, 32522), ("test/test.ml", 878, 32486, 32531), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32532), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0)), 0), (("test/test.ml", 878, 32486, 32533), ("test/test.ml", 878, 32486, 32535), 0), 0, 0)), (("test/test.ml", 878, 32486, 32508), ("test/test.ml", 878, 32486, 32535), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 878, 32486, 32486), ("test/test.ml", 878, 32486, 32535), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_cases", (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0))), (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("acases0", (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0))), (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0), 0, 0), (Tag3 ((("cases"), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0)), 0), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32570), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0)), 0), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32573), 1), 0, 0), 0, (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0))]), (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_cases", (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0))), (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("acases0", (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0))), (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0), 0, 0), (Tag3 ((("cases"), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0)), 0), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32570), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0)), 0), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32573), 1), 0, 0), 0, (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_cases", (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0))), (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("acases0", (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0))), (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0), 0, 0), (Tag3 ((("cases"), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0)), 0), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32570), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0)), 0), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32573), 1), 0, 0), 0, (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0))])
("DEBUG:value_binding.pat:", ((("process_cases", (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0))), (("test/test.ml", 879, 32536, 32540), ("test/test.ml", 879, 32536, 32553), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("acases0", (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0))), (("test/test.ml", 879, 32536, 32556), ("test/test.ml", 879, 32536, 32563), 0), 0, 0), (Tag3 ((("cases"), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0)), 0), (("test/test.ml", 879, 32536, 32564), ("test/test.ml", 879, 32536, 32569), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32570), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0)), 0), (("test/test.ml", 879, 32536, 32571), ("test/test.ml", 879, 32536, 32573), 0), 0, 0)), (("test/test.ml", 879, 32536, 32554), ("test/test.ml", 879, 32536, 32573), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 879, 32536, 32536), ("test/test.ml", 879, 32536, 32573), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_class_structure", (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0))), (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aclass_structure0", (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0))), (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0), 0, 0), (Tag3 ((("class_structure"), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0)), 0), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32638), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0)), 0), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32641), 1), 0, 0), 0, (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0))]), (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_class_structure", (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0))), (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aclass_structure0", (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0))), (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0), 0, 0), (Tag3 ((("class_structure"), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0)), 0), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32638), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0)), 0), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32641), 1), 0, 0), 0, (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_class_structure", (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0))), (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aclass_structure0", (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0))), (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0), 0, 0), (Tag3 ((("class_structure"), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0)), 0), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32638), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0)), 0), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32641), 1), 0, 0), 0, (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0))])
("DEBUG:value_binding.pat:", ((("process_class_structure", (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0))), (("test/test.ml", 880, 32574, 32578), ("test/test.ml", 880, 32574, 32601), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aclass_structure0", (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0))), (("test/test.ml", 880, 32574, 32604), ("test/test.ml", 880, 32574, 32621), 0), 0, 0), (Tag3 ((("class_structure"), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0)), 0), (("test/test.ml", 880, 32574, 32622), ("test/test.ml", 880, 32574, 32637), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32638), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0)), 0), (("test/test.ml", 880, 32574, 32639), ("test/test.ml", 880, 32574, 32641), 0), 0, 0)), (("test/test.ml", 880, 32574, 32602), ("test/test.ml", 880, 32574, 32641), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 880, 32574, 32574), ("test/test.ml", 880, 32574, 32641), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_constant", (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0))), (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aconstant0", (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0))), (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0), 0, 0), (Tag3 ((("constant"), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0)), 0), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32685), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0)), 0), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32688), 1), 0, 0), 0, (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0))]), (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_constant", (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0))), (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aconstant0", (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0))), (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0), 0, 0), (Tag3 ((("constant"), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0)), 0), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32685), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0)), 0), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32688), 1), 0, 0), 0, (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_constant", (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0))), (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aconstant0", (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0))), (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0), 0, 0), (Tag3 ((("constant"), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0)), 0), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32685), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0)), 0), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32688), 1), 0, 0), 0, (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0))])
("DEBUG:value_binding.pat:", ((("process_constant", (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0))), (("test/test.ml", 881, 32642, 32646), ("test/test.ml", 881, 32642, 32662), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aconstant0", (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0))), (("test/test.ml", 881, 32642, 32665), ("test/test.ml", 881, 32642, 32675), 0), 0, 0), (Tag3 ((("constant"), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0)), 0), (("test/test.ml", 881, 32642, 32676), ("test/test.ml", 881, 32642, 32684), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32685), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0)), 0), (("test/test.ml", 881, 32642, 32686), ("test/test.ml", 881, 32642, 32688), 0), 0, 0)), (("test/test.ml", 881, 32642, 32663), ("test/test.ml", 881, 32642, 32688), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 881, 32642, 32642), ("test/test.ml", 881, 32642, 32688), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_expression", (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0))), (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aexpression0", (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0))), (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0)), 0), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32738), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0)), 0), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32741), 1), 0, 0), 0, (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0))]), (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_expression", (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0))), (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aexpression0", (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0))), (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0)), 0), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32738), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0)), 0), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32741), 1), 0, 0), 0, (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_expression", (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0))), (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aexpression0", (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0))), (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0)), 0), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32738), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0)), 0), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32741), 1), 0, 0), 0, (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0))])
("DEBUG:value_binding.pat:", ((("process_expression", (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0))), (("test/test.ml", 882, 32689, 32693), ("test/test.ml", 882, 32689, 32711), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aexpression0", (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0))), (("test/test.ml", 882, 32689, 32714), ("test/test.ml", 882, 32689, 32726), 0), 0, 0), (Tag3 ((("expression"), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0)), 0), (("test/test.ml", 882, 32689, 32727), ("test/test.ml", 882, 32689, 32737), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32738), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0)), 0), (("test/test.ml", 882, 32689, 32739), ("test/test.ml", 882, 32689, 32741), 0), 0, 0)), (("test/test.ml", 882, 32689, 32712), ("test/test.ml", 882, 32689, 32741), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 882, 32689, 32689), ("test/test.ml", 882, 32689, 32741), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_extension", (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0))), (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension0", (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0))), (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0), 0, 0), (Tag3 ((("extension"), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0)), 0), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32788), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0)), 0), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32791), 1), 0, 0), 0, (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0))]), (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_extension", (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0))), (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension0", (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0))), (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0), 0, 0), (Tag3 ((("extension"), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0)), 0), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32788), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0)), 0), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32791), 1), 0, 0), 0, (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_extension", (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0))), (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension0", (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0))), (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0), 0, 0), (Tag3 ((("extension"), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0)), 0), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32788), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0)), 0), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32791), 1), 0, 0), 0, (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0))])
("DEBUG:value_binding.pat:", ((("process_extension", (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0))), (("test/test.ml", 883, 32742, 32746), ("test/test.ml", 883, 32742, 32763), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aextension0", (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0))), (("test/test.ml", 883, 32742, 32766), ("test/test.ml", 883, 32742, 32777), 0), 0, 0), (Tag3 ((("extension"), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0)), 0), (("test/test.ml", 883, 32742, 32778), ("test/test.ml", 883, 32742, 32787), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32788), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0)), 0), (("test/test.ml", 883, 32742, 32789), ("test/test.ml", 883, 32742, 32791), 0), 0, 0)), (("test/test.ml", 883, 32742, 32764), ("test/test.ml", 883, 32742, 32791), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 883, 32742, 32742), ("test/test.ml", 883, 32742, 32791), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_extension_constructor", (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0))), (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension_constructor0", (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0))), (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0), 0, 0), (Tag3 ((("extension_constructor"), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0)), 0), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32874), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0)), 0), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32877), 1), 0, 0), 0, (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0))]), (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_extension_constructor", (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0))), (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension_constructor0", (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0))), (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0), 0, 0), (Tag3 ((("extension_constructor"), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0)), 0), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32874), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0)), 0), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32877), 1), 0, 0), 0, (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_extension_constructor", (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0))), (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aextension_constructor0", (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0))), (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0), 0, 0), (Tag3 ((("extension_constructor"), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0)), 0), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32874), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0)), 0), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32877), 1), 0, 0), 0, (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0))])
("DEBUG:value_binding.pat:", ((("process_extension_constructor", (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0))), (("test/test.ml", 884, 32792, 32796), ("test/test.ml", 884, 32792, 32825), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aextension_constructor0", (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0))), (("test/test.ml", 884, 32792, 32828), ("test/test.ml", 884, 32792, 32851), 0), 0, 0), (Tag3 ((("extension_constructor"), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0)), 0), (("test/test.ml", 884, 32792, 32852), ("test/test.ml", 884, 32792, 32873), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32874), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0)), 0), (("test/test.ml", 884, 32792, 32875), ("test/test.ml", 884, 32792, 32877), 0), 0, 0)), (("test/test.ml", 884, 32792, 32826), ("test/test.ml", 884, 32792, 32877), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 884, 32792, 32792), ("test/test.ml", 884, 32792, 32877), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_label", (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0))), (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alabel0", (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0))), (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0), 0, 0), (Tag3 ((("label"), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0)), 0), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32912), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0)), 0), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32915), 1), 0, 0), 0, (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0))]), (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_label", (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0))), (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alabel0", (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0))), (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0), 0, 0), (Tag3 ((("label"), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0)), 0), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32912), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0)), 0), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32915), 1), 0, 0), 0, (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_label", (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0))), (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alabel0", (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0))), (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0), 0, 0), (Tag3 ((("label"), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0)), 0), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32912), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0)), 0), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32915), 1), 0, 0), 0, (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0))])
("DEBUG:value_binding.pat:", ((("process_label", (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0))), (("test/test.ml", 885, 32878, 32882), ("test/test.ml", 885, 32878, 32895), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("alabel0", (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0))), (("test/test.ml", 885, 32878, 32898), ("test/test.ml", 885, 32878, 32905), 0), 0, 0), (Tag3 ((("label"), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0)), 0), (("test/test.ml", 885, 32878, 32906), ("test/test.ml", 885, 32878, 32911), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32912), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0)), 0), (("test/test.ml", 885, 32878, 32913), ("test/test.ml", 885, 32878, 32915), 0), 0, 0)), (("test/test.ml", 885, 32878, 32896), ("test/test.ml", 885, 32878, 32915), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 885, 32878, 32878), ("test/test.ml", 885, 32878, 32915), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_letop", (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0))), (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aletop0", (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0))), (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0), 0, 0), (Tag3 ((("letop"), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0)), 0), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32950), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0)), 0), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32953), 1), 0, 0), 0, (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0))]), (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_letop", (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0))), (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aletop0", (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0))), (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0), 0, 0), (Tag3 ((("letop"), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0)), 0), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32950), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0)), 0), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32953), 1), 0, 0), 0, (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_letop", (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0))), (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aletop0", (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0))), (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0), 0, 0), (Tag3 ((("letop"), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0)), 0), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32950), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0)), 0), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32953), 1), 0, 0), 0, (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0))])
("DEBUG:value_binding.pat:", ((("process_letop", (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0))), (("test/test.ml", 886, 32916, 32920), ("test/test.ml", 886, 32916, 32933), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aletop0", (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0))), (("test/test.ml", 886, 32916, 32936), ("test/test.ml", 886, 32916, 32943), 0), 0, 0), (Tag3 ((("letop"), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0)), 0), (("test/test.ml", 886, 32916, 32944), ("test/test.ml", 886, 32916, 32949), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32950), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0)), 0), (("test/test.ml", 886, 32916, 32951), ("test/test.ml", 886, 32916, 32953), 0), 0, 0)), (("test/test.ml", 886, 32916, 32934), ("test/test.ml", 886, 32916, 32953), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 886, 32916, 32916), ("test/test.ml", 886, 32916, 32953), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_list", (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0))), (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0))), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32980), 0), [(("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0)), 0), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0), 0, 0)), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32983), 1), 0, 0), 0, (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0))]), (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_list", (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0))), (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0))), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32980), 0), [(("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0)), 0), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0), 0, 0)), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32983), 1), 0, 0), 0, (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_list", (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0))), (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0), 0, 0), (Tag4 (0, 0, ((("alist0", (("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0))), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32980), 0), [(("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0)), 0), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0), 0, 0)), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32983), 1), 0, 0), 0, (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0))])
("DEBUG:value_binding.pat:", ((("process_list", (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0))), (("test/test.ml", 887, 32954, 32958), ("test/test.ml", 887, 32954, 32970), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("alist0", (("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0))), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32980), 0), [(("test/test.ml", 887, 32954, 32973), ("test/test.ml", 887, 32954, 32979), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0)), 0), (("test/test.ml", 887, 32954, 32981), ("test/test.ml", 887, 32954, 32983), 0), 0, 0)), (("test/test.ml", 887, 32954, 32971), ("test/test.ml", 887, 32954, 32983), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 887, 32954, 32954), ("test/test.ml", 887, 32954, 32983), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_loc", (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0))), (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0), 0, 0), (Tag4 (0, 0, ((("aloc0", (("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0))), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33008), 0), [(("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0)), 0), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0), 0, 0)), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33011), 1), 0, 0), 0, (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0))]), (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_loc", (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0))), (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0), 0, 0), (Tag4 (0, 0, ((("aloc0", (("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0))), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33008), 0), [(("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0)), 0), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0), 0, 0)), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33011), 1), 0, 0), 0, (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_loc", (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0))), (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0), 0, 0), (Tag4 (0, 0, ((("aloc0", (("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0))), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33008), 0), [(("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0)), 0), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0), 0, 0)), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33011), 1), 0, 0), 0, (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0))])
("DEBUG:value_binding.pat:", ((("process_loc", (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0))), (("test/test.ml", 888, 32984, 32988), ("test/test.ml", 888, 32984, 32999), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("aloc0", (("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0))), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33008), 0), [(("test/test.ml", 888, 32984, 33002), ("test/test.ml", 888, 32984, 33007), 0)], 0), (Tag9 ((("()"), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0)), 0), (("test/test.ml", 888, 32984, 33009), ("test/test.ml", 888, 32984, 33011), 0), 0, 0)), (("test/test.ml", 888, 32984, 33000), ("test/test.ml", 888, 32984, 33011), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 888, 32984, 32984), ("test/test.ml", 888, 32984, 33011), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_longident_loc", (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0))), (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alongident_loc0", (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0))), (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0), 0, 0), (Tag3 ((("longident_loc"), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0)), 0), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33070), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0)), 0), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33073), 1), 0, 0), 0, (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0))]), (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_longident_loc", (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0))), (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alongident_loc0", (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0))), (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0), 0, 0), (Tag3 ((("longident_loc"), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0)), 0), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33070), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0)), 0), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33073), 1), 0, 0), 0, (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_longident_loc", (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0))), (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("alongident_loc0", (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0))), (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0), 0, 0), (Tag3 ((("longident_loc"), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0)), 0), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33070), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0)), 0), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33073), 1), 0, 0), 0, (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0))])
("DEBUG:value_binding.pat:", ((("process_longident_loc", (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0))), (("test/test.ml", 889, 33012, 33016), ("test/test.ml", 889, 33012, 33037), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("alongident_loc0", (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0))), (("test/test.ml", 889, 33012, 33040), ("test/test.ml", 889, 33012, 33055), 0), 0, 0), (Tag3 ((("longident_loc"), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0)), 0), (("test/test.ml", 889, 33012, 33056), ("test/test.ml", 889, 33012, 33069), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33070), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0)), 0), (("test/test.ml", 889, 33012, 33071), ("test/test.ml", 889, 33012, 33073), 0), 0, 0)), (("test/test.ml", 889, 33012, 33038), ("test/test.ml", 889, 33012, 33073), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 889, 33012, 33012), ("test/test.ml", 889, 33012, 33073), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_module_expr", (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0))), (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("amodule_expr0", (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0))), (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0), 0, 0), (Tag3 ((("module_expr"), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0)), 0), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33126), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0)), 0), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33129), 1), 0, 0), 0, (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0))]), (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_module_expr", (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0))), (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("amodule_expr0", (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0))), (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0), 0, 0), (Tag3 ((("module_expr"), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0)), 0), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33126), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0)), 0), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33129), 1), 0, 0), 0, (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_module_expr", (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0))), (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("amodule_expr0", (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0))), (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0), 0, 0), (Tag3 ((("module_expr"), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0)), 0), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33126), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0)), 0), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33129), 1), 0, 0), 0, (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0))])
("DEBUG:value_binding.pat:", ((("process_module_expr", (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0))), (("test/test.ml", 890, 33074, 33078), ("test/test.ml", 890, 33074, 33097), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("amodule_expr0", (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0))), (("test/test.ml", 890, 33074, 33100), ("test/test.ml", 890, 33074, 33113), 0), 0, 0), (Tag3 ((("module_expr"), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0)), 0), (("test/test.ml", 890, 33074, 33114), ("test/test.ml", 890, 33074, 33125), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33126), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0)), 0), (("test/test.ml", 890, 33074, 33127), ("test/test.ml", 890, 33074, 33129), 0), 0, 0)), (("test/test.ml", 890, 33074, 33098), ("test/test.ml", 890, 33074, 33129), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 890, 33074, 33074), ("test/test.ml", 890, 33074, 33129), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_open_declaration", (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0))), (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aopen_declaration0", (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0))), (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0), 0, 0), (Tag3 ((("open_declaration"), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0)), 0), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33197), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0)), 0), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33200), 1), 0, 0), 0, (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0))]), (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_open_declaration", (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0))), (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aopen_declaration0", (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0))), (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0), 0, 0), (Tag3 ((("open_declaration"), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0)), 0), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33197), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0)), 0), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33200), 1), 0, 0), 0, (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_open_declaration", (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0))), (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("aopen_declaration0", (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0))), (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0), 0, 0), (Tag3 ((("open_declaration"), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0)), 0), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33197), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0)), 0), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33200), 1), 0, 0), 0, (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0))])
("DEBUG:value_binding.pat:", ((("process_open_declaration", (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0))), (("test/test.ml", 891, 33130, 33134), ("test/test.ml", 891, 33130, 33158), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("aopen_declaration0", (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0))), (("test/test.ml", 891, 33130, 33161), ("test/test.ml", 891, 33130, 33179), 0), 0, 0), (Tag3 ((("open_declaration"), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0)), 0), (("test/test.ml", 891, 33130, 33180), ("test/test.ml", 891, 33130, 33196), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33197), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0)), 0), (("test/test.ml", 891, 33130, 33198), ("test/test.ml", 891, 33130, 33200), 0), 0, 0)), (("test/test.ml", 891, 33130, 33159), ("test/test.ml", 891, 33130, 33200), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 891, 33130, 33130), ("test/test.ml", 891, 33130, 33200), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_pattern", (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0))), (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("apattern0", (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0))), (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0), 0, 0), (Tag3 ((("pattern"), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0)), 0), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33241), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0)), 0), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33244), 1), 0, 0), 0, (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0))]), (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_pattern", (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0))), (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("apattern0", (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0))), (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0), 0, 0), (Tag3 ((("pattern"), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0)), 0), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33241), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0)), 0), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33244), 1), 0, 0), 0, (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_pattern", (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0))), (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("apattern0", (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0))), (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0), 0, 0), (Tag3 ((("pattern"), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0)), 0), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33241), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0)), 0), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33244), 1), 0, 0), 0, (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0))])
("DEBUG:value_binding.pat:", ((("process_pattern", (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0))), (("test/test.ml", 892, 33201, 33205), ("test/test.ml", 892, 33201, 33220), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("apattern0", (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0))), (("test/test.ml", 892, 33201, 33223), ("test/test.ml", 892, 33201, 33232), 0), 0, 0), (Tag3 ((("pattern"), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0)), 0), (("test/test.ml", 892, 33201, 33233), ("test/test.ml", 892, 33201, 33240), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33241), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0)), 0), (("test/test.ml", 892, 33201, 33242), ("test/test.ml", 892, 33201, 33244), 0), 0, 0)), (("test/test.ml", 892, 33201, 33221), ("test/test.ml", 892, 33201, 33244), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 892, 33201, 33201), ("test/test.ml", 892, 33201, 33244), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("process_rec_flag", (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0))), (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("arec_flag0", (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0))), (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0), 0, 0), (Tag3 ((("rec_flag"), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0)), 0), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33288), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0)), 0), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33291), 1), 0, 0), 0, (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0))]), (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("process_rec_flag", (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0))), (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("arec_flag0", (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0))), (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0), 0, 0), (Tag3 ((("rec_flag"), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0)), 0), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33288), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0)), 0), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33291), 1), 0, 0), 0, (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0))]))
("DEBUG:Pstr_value:", 0, [(((("process_rec_flag", (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0))), (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("arec_flag0", (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0))), (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0), 0, 0), (Tag3 ((("rec_flag"), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0)), 0), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33288), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0)), 0), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33291), 1), 0, 0), 0, (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0))])
("DEBUG:value_binding.pat:", ((("process_rec_flag", (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0))), (("test/test.ml", 893, 33245, 33249), ("test/test.ml", 893, 33245, 33265), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("arec_flag0", (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0))), (("test/test.ml", 893, 33245, 33268), ("test/test.ml", 893, 33245, 33278), 0), 0, 0), (Tag3 ((("rec_flag"), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0)), 0), (("test/test.ml", 893, 33245, 33279), ("test/test.ml", 893, 33245, 33287), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33288), 0), 0, 0), (Tag9 ((("()"), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0)), 0), (("test/test.ml", 893, 33245, 33289), ("test/test.ml", 893, 33245, 33291), 0), 0, 0)), (("test/test.ml", 893, 33245, 33266), ("test/test.ml", 893, 33245, 33291), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 893, 33245, 33245), ("test/test.ml", 893, 33245, 33291), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("foo", (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0))), (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0))), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 894, 33292, 33302), 0), [(("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0))), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0), 0, 0), [((Tag5 ((("Pexp_apply"), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33334), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0))), (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0), 0, 0); ((("listA1", (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0))), (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0), 0, 0)]), (("test/test.ml", 896, 33320, 33335), ("test/test.ml", 896, 33320, 33356), 0), [(("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33355), 0)], 0)))), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33356), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0))), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0))), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0))), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33409), 0), [(("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33408), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0))), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0))), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33410), ("test/test.ml", 896, 33320, 33431), 0), [(("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33430), 0)], 0)]), (("test/test.ml", 896, 33320, 33375), ("test/test.ml", 896, 33320, 33432), 0), [(("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33431), 0)], 0))]), (("test/test.ml", 896, 33320, 33360), ("test/test.ml", 896, 33320, 33433), 0), [(("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33432), 0)], 0)); ((Tag5 ((("Pexp_array"), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33446), 0)), ((0, ((("listA0", (("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0))), (("test/test.ml", 897, 33434, 33447), ("test/test.ml", 897, 33434, 33455), 0), [(("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0)], 0)))), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33455), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0))), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0))), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0))), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0), 0, 0))]), (("test/test.ml", 897, 33434, 33474), ("test/test.ml", 897, 33434, 33497), 0), [(("test/test.ml", 897, 33434, 33475), ("test/test.ml", 897, 33434, 33496), 0); (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33495), 0)], 0))]), (("test/test.ml", 897, 33434, 33459), ("test/test.ml", 897, 33434, 33498), 0), [(("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33497), 0)], 0)); ((Tag5 ((("Pexp_assert"), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33512), 0)), ((0, ((("expressionA0", (("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0))), (("test/test.ml", 898, 33499, 33513), ("test/test.ml", 898, 33499, 33527), 0), [(("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0)], 0)))), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33527), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0))), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0))), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0))), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0), 0, 0))]), (("test/test.ml", 898, 33499, 33546), ("test/test.ml", 898, 33499, 33581), 0), [(("test/test.ml", 898, 33499, 33547), ("test/test.ml", 898, 33499, 33580), 0); (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33579), 0)], 0))]), (("test/test.ml", 898, 33499, 33531), ("test/test.ml", 898, 33499, 33582), 0), [(("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33581), 0)], 0)); ((Tag5 ((("Pexp_coerce"), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33596), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0))), (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0), 0, 0); ((("optionA1", (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0))), (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0), 0, 0); ((("core_typeA2", (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0))), (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0), 0, 0)]), (("test/test.ml", 899, 33583, 33597), ("test/test.ml", 899, 33583, 33632), 0), [(("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33631), 0)], 0)))), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33632), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0))), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0))), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0))), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33685), 0), [(("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33684), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0))), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0))), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33686), ("test/test.ml", 899, 33583, 33711), 0), [(("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33710), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0))), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0), 0, 0), [(0, (((("core_typeA2"), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0))), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33712), ("test/test.ml", 899, 33583, 33743), 0), [(("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33742), 0)], 0)]), (("test/test.ml", 899, 33583, 33651), ("test/test.ml", 899, 33583, 33744), 0), [(("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33743), 0)], 0))]), (("test/test.ml", 899, 33583, 33636), ("test/test.ml", 899, 33583, 33745), 0), [(("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33744), 0)], 0)); ((Tag5 ((("Pexp_constant"), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33761), 0)), ((0, ((("constantA0", (("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0))), (("test/test.ml", 900, 33746, 33762), ("test/test.ml", 900, 33746, 33774), 0), [(("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0)], 0)))), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33774), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0))), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0), 0, 0), [(0, (Tag5 ((((("process_constant"), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0))), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0), 0, 0), [(0, (((("constantA0"), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0))), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0), 0, 0))]), (("test/test.ml", 900, 33746, 33793), ("test/test.ml", 900, 33746, 33824), 0), [(("test/test.ml", 900, 33746, 33794), ("test/test.ml", 900, 33746, 33823), 0); (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33822), 0)], 0))]), (("test/test.ml", 900, 33746, 33778), ("test/test.ml", 900, 33746, 33825), 0), [(("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33824), 0)], 0)); ((Tag5 ((("Pexp_constraint"), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33843), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0))), (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0), 0, 0); ((("core_typeA1", (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0))), (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0), 0, 0)]), (("test/test.ml", 901, 33826, 33844), ("test/test.ml", 901, 33826, 33870), 0), [(("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33869), 0)], 0)))), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33870), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0))), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0))), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0))), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33923), 0), [(("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33922), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0))), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0), 0, 0), [(0, (((("core_typeA1"), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0))), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33924), ("test/test.ml", 901, 33826, 33955), 0), [(("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33954), 0)], 0)]), (("test/test.ml", 901, 33826, 33889), ("test/test.ml", 901, 33826, 33956), 0), [(("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33955), 0)], 0))]), (("test/test.ml", 901, 33826, 33874), ("test/test.ml", 901, 33826, 33957), 0), [(("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33956), 0)], 0)); ((Tag5 ((("Pexp_construct"), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 33974), 0)), ((0, (Tag4 ([((("longident_locA0", (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0))), (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0), 0, 0); ((("optionA1", (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0))), (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0), 0, 0)]), (("test/test.ml", 902, 33958, 33975), ("test/test.ml", 902, 33958, 34001), 0), [(("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 34000), 0)], 0)))), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 34001), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0))), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_longident_loc"), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0))), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0))), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34060), 0), [(("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34059), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0))), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0))), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34061), ("test/test.ml", 902, 33958, 34086), 0), [(("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34085), 0)], 0)]), (("test/test.ml", 902, 33958, 34020), ("test/test.ml", 902, 33958, 34087), 0), [(("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34086), 0)], 0))]), (("test/test.ml", 902, 33958, 34005), ("test/test.ml", 902, 33958, 34088), 0), [(("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34087), 0)], 0)); ((Tag5 ((("Pexp_extension"), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34105), 0)), ((0, ((("extensionA0", (("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0))), (("test/test.ml", 903, 34089, 34106), ("test/test.ml", 903, 34089, 34119), 0), [(("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0)], 0)))), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34119), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0))), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0), 0, 0), [(0, (Tag5 ((((("process_extension"), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0))), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0), 0, 0), [(0, (((("extensionA0"), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0))), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0), 0, 0))]), (("test/test.ml", 903, 34089, 34138), ("test/test.ml", 903, 34089, 34171), 0), [(("test/test.ml", 903, 34089, 34139), ("test/test.ml", 903, 34089, 34170), 0); (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34169), 0)], 0))]), (("test/test.ml", 903, 34089, 34123), ("test/test.ml", 903, 34089, 34172), 0), [(("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34171), 0)], 0)); ((Tag5 ((("Pexp_field"), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34185), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0))), (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0))), (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0), 0, 0)]), (("test/test.ml", 904, 34173, 34186), ("test/test.ml", 904, 34173, 34216), 0), [(("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34215), 0)], 0)))), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34216), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0))), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0))), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0))), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34269), 0), [(("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34268), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0))), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0))), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34270), ("test/test.ml", 904, 34173, 34309), 0), [(("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34308), 0)], 0)]), (("test/test.ml", 904, 34173, 34235), ("test/test.ml", 904, 34173, 34310), 0), [(("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34309), 0)], 0))]), (("test/test.ml", 904, 34173, 34220), ("test/test.ml", 904, 34173, 34311), 0), [(("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34310), 0)], 0)); ((Tag5 ((("Pexp_for"), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34322), 0)), ((0, (Tag4 ([((("patternA0", (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0))), (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0), 0, 0); ((("expressionA1", (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0))), (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0), 0, 0); ((("expressionA2", (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0))), (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0), 0, 0); ((("direction_flagA3", (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0))), (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0), 0, 0); ((("expressionA4", (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0))), (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0), 0, 0)]), (("test/test.ml", 905, 34312, 34323), ("test/test.ml", 905, 34312, 34390), 0), [(("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34389), 0)], 0)))), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34390), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0))), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_pattern"), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0))), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0), 0, 0), [(0, (((("patternA0"), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0))), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34437), 0), [(("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34436), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0))), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0))), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34438), ("test/test.ml", 905, 34312, 34471), 0), [(("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34470), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0))), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0))), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34472), ("test/test.ml", 905, 34312, 34505), 0), [(("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34504), 0)], 0); (Tag5 ((((("process_direction_flag"), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0))), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0), 0, 0), [(0, (((("direction_flagA3"), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0))), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34506), ("test/test.ml", 905, 34312, 34547), 0), [(("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34546), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0))), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0), 0, 0), [(0, (((("expressionA4"), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0))), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34548), ("test/test.ml", 905, 34312, 34581), 0), [(("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34580), 0)], 0)]), (("test/test.ml", 905, 34312, 34409), ("test/test.ml", 905, 34312, 34582), 0), [(("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34581), 0)], 0))]), (("test/test.ml", 905, 34312, 34394), ("test/test.ml", 905, 34312, 34583), 0), [(("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34582), 0)], 0)); ((Tag5 ((("Pexp_fun"), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34594), 0)), ((0, (Tag4 ([((("arg_labelA0", (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0))), (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0), 0, 0); ((("optionA1", (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0))), (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0), 0, 0); ((("patternA2", (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0))), (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0), 0, 0); ((("expressionA3", (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0))), (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0), 0, 0)]), (("test/test.ml", 906, 34584, 34595), ("test/test.ml", 906, 34584, 34640), 0), [(("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34639), 0)], 0)))), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34640), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0))), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_arg_label"), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0))), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0), 0, 0), [(0, (((("arg_labelA0"), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0))), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34691), 0), [(("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34690), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0))), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0))), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34692), ("test/test.ml", 906, 34584, 34717), 0), [(("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34716), 0)], 0); (Tag5 ((((("process_pattern"), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0))), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0), 0, 0), [(0, (((("patternA2"), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0))), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34718), ("test/test.ml", 906, 34584, 34745), 0), [(("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34744), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0))), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0), 0, 0), [(0, (((("expressionA3"), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0))), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34746), ("test/test.ml", 906, 34584, 34779), 0), [(("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34778), 0)], 0)]), (("test/test.ml", 906, 34584, 34659), ("test/test.ml", 906, 34584, 34780), 0), [(("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34779), 0)], 0))]), (("test/test.ml", 906, 34584, 34644), ("test/test.ml", 906, 34584, 34781), 0), [(("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34780), 0)], 0)); ((Tag5 ((("Pexp_function"), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34797), 0)), ((0, ((("casesA0", (("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0))), (("test/test.ml", 907, 34782, 34798), ("test/test.ml", 907, 34782, 34807), 0), [(("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0)], 0)))), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34807), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0))), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0), 0, 0), [(0, (Tag5 ((((("process_cases"), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0))), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0), 0, 0), [(0, (((("casesA0"), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0))), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0), 0, 0))]), (("test/test.ml", 907, 34782, 34826), ("test/test.ml", 907, 34782, 34851), 0), [(("test/test.ml", 907, 34782, 34827), ("test/test.ml", 907, 34782, 34850), 0); (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34849), 0)], 0))]), (("test/test.ml", 907, 34782, 34811), ("test/test.ml", 907, 34782, 34852), 0), [(("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34851), 0)], 0)); ((Tag5 ((("Pexp_ident"), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34865), 0)), ((0, ((("longident_locA0", (("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0))), (("test/test.ml", 908, 34853, 34866), ("test/test.ml", 908, 34853, 34883), 0), [(("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0)], 0)))), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34883), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0))), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0))), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0))), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0), 0, 0))]), (("test/test.ml", 908, 34853, 34902), ("test/test.ml", 908, 34853, 34943), 0), [(("test/test.ml", 908, 34853, 34903), ("test/test.ml", 908, 34853, 34942), 0); (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34941), 0)], 0))]), (("test/test.ml", 908, 34853, 34887), ("test/test.ml", 908, 34853, 34944), 0), [(("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34943), 0)], 0)); ((Tag5 ((("Pexp_ifthenelse"), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34962), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0))), (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0), 0, 0); ((("expressionA1", (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0))), (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0), 0, 0); ((("optionA2", (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0))), (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0), 0, 0)]), (("test/test.ml", 909, 34945, 34963), ("test/test.ml", 909, 34945, 34999), 0), [(("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34998), 0)], 0)))), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34999), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0))), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0))), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0))), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35052), 0), [(("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35051), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0))), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0))), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35053), ("test/test.ml", 909, 34945, 35086), 0), [(("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35085), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0))), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0), 0, 0), [(0, (((("optionA2"), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0))), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35087), ("test/test.ml", 909, 34945, 35112), 0), [(("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35111), 0)], 0)]), (("test/test.ml", 909, 34945, 35018), ("test/test.ml", 909, 34945, 35113), 0), [(("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35112), 0)], 0))]), (("test/test.ml", 909, 34945, 35003), ("test/test.ml", 909, 34945, 35114), 0), [(("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35113), 0)], 0)); ((Tag5 ((("Pexp_lazy"), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35126), 0)), ((0, ((("expressionA0", (("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0))), (("test/test.ml", 910, 35115, 35127), ("test/test.ml", 910, 35115, 35141), 0), [(("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0)], 0)))), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35141), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0))), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0))), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0))), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0), 0, 0))]), (("test/test.ml", 910, 35115, 35160), ("test/test.ml", 910, 35115, 35195), 0), [(("test/test.ml", 910, 35115, 35161), ("test/test.ml", 910, 35115, 35194), 0); (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35193), 0)], 0))]), (("test/test.ml", 910, 35115, 35145), ("test/test.ml", 910, 35115, 35196), 0), [(("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35195), 0)], 0)); ((Tag5 ((("Pexp_letexception"), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35216), 0)), ((0, (Tag4 ([((("extension_constructorA0", (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0))), (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0), 0, 0); ((("expressionA1", (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0))), (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0), 0, 0)]), (("test/test.ml", 911, 35197, 35217), ("test/test.ml", 911, 35197, 35255), 0), [(("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35254), 0)], 0)))), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35255), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0))), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_extension_constructor"), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0))), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0), 0, 0), [(0, (((("extension_constructorA0"), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0))), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35330), 0), [(("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35329), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0))), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0))), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35331), ("test/test.ml", 911, 35197, 35364), 0), [(("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35363), 0)], 0)]), (("test/test.ml", 911, 35197, 35274), ("test/test.ml", 911, 35197, 35365), 0), [(("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35364), 0)], 0))]), (("test/test.ml", 911, 35197, 35259), ("test/test.ml", 911, 35197, 35366), 0), [(("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35365), 0)], 0)); ((Tag5 ((("Pexp_letmodule"), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35383), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0))), (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0), 0, 0); ((("module_exprA1", (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0))), (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0), 0, 0); ((("expressionA2", (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0))), (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0), 0, 0)]), (("test/test.ml", 912, 35367, 35384), ("test/test.ml", 912, 35367, 35418), 0), [(("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35417), 0)], 0)))), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35418), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0))), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0))), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0))), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35457), 0), [(("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35456), 0)], 0); (Tag5 ((((("process_module_expr"), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0))), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0), 0, 0), [(0, (((("module_exprA1"), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0))), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35458), ("test/test.ml", 912, 35367, 35493), 0), [(("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35492), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0))), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0))), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35494), ("test/test.ml", 912, 35367, 35527), 0), [(("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35526), 0)], 0)]), (("test/test.ml", 912, 35367, 35437), ("test/test.ml", 912, 35367, 35528), 0), [(("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35527), 0)], 0))]), (("test/test.ml", 912, 35367, 35422), ("test/test.ml", 912, 35367, 35529), 0), [(("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35528), 0)], 0)); ((Tag5 ((("Pexp_letop"), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35542), 0)), ((0, ((("letopA0", (("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0))), (("test/test.ml", 913, 35530, 35543), ("test/test.ml", 913, 35530, 35552), 0), [(("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0)], 0)))), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35552), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0))), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0), 0, 0), [(0, (Tag5 ((((("process_letop"), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0))), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0), 0, 0), [(0, (((("letopA0"), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0))), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0), 0, 0))]), (("test/test.ml", 913, 35530, 35571), ("test/test.ml", 913, 35530, 35596), 0), [(("test/test.ml", 913, 35530, 35572), ("test/test.ml", 913, 35530, 35595), 0); (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35594), 0)], 0))]), (("test/test.ml", 913, 35530, 35556), ("test/test.ml", 913, 35530, 35597), 0), [(("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35596), 0)], 0)); ((Tag5 ((("Pexp_let"), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35608), 0)), ((0, (Tag4 ([((("rec_flagA0", (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0))), (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0), 0, 0); ((("listA1", (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0))), (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0), 0, 0); ((("expressionA2", (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0))), (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0), 0, 0)]), (("test/test.ml", 914, 35598, 35609), ("test/test.ml", 914, 35598, 35641), 0), [(("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35640), 0)], 0)))), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35641), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0))), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_rec_flag"), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0))), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0), 0, 0), [(0, (((("rec_flagA0"), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0))), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35690), 0), [(("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35689), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0))), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0))), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35691), ("test/test.ml", 914, 35598, 35712), 0), [(("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35711), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0))), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0))), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35713), ("test/test.ml", 914, 35598, 35746), 0), [(("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35745), 0)], 0)]), (("test/test.ml", 914, 35598, 35660), ("test/test.ml", 914, 35598, 35747), 0), [(("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35746), 0)], 0))]), (("test/test.ml", 914, 35598, 35645), ("test/test.ml", 914, 35598, 35748), 0), [(("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35747), 0)], 0)); ((Tag5 ((("Pexp_match"), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35761), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0))), (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0), 0, 0); ((("casesA1", (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0))), (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0), 0, 0)]), (("test/test.ml", 915, 35749, 35762), ("test/test.ml", 915, 35749, 35784), 0), [(("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35783), 0)], 0)))), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35784), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0))), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0))), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0))), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35837), 0), [(("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35836), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0))), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0))), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35838), ("test/test.ml", 915, 35749, 35861), 0), [(("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35860), 0)], 0)]), (("test/test.ml", 915, 35749, 35803), ("test/test.ml", 915, 35749, 35862), 0), [(("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35861), 0)], 0))]), (("test/test.ml", 915, 35749, 35788), ("test/test.ml", 915, 35749, 35863), 0), [(("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35862), 0)], 0)); ((Tag5 ((("Pexp_new"), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35874), 0)), ((0, ((("longident_locA0", (("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0))), (("test/test.ml", 916, 35864, 35875), ("test/test.ml", 916, 35864, 35892), 0), [(("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0)], 0)))), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35892), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0))), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0))), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0))), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0), 0, 0))]), (("test/test.ml", 916, 35864, 35911), ("test/test.ml", 916, 35864, 35952), 0), [(("test/test.ml", 916, 35864, 35912), ("test/test.ml", 916, 35864, 35951), 0); (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35950), 0)], 0))]), (("test/test.ml", 916, 35864, 35896), ("test/test.ml", 916, 35864, 35953), 0), [(("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35952), 0)], 0)); ((Tag5 ((("Pexp_newtype"), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35968), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0))), (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0), 0, 0); ((("expressionA1", (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0))), (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0), 0, 0)]), (("test/test.ml", 917, 35954, 35969), ("test/test.ml", 917, 35954, 35989), 0), [(("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35988), 0)], 0)))), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35989), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0))), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0))), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0))), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36028), 0), [(("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36027), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0))), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0))), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36029), ("test/test.ml", 917, 35954, 36062), 0), [(("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36061), 0)], 0)]), (("test/test.ml", 917, 35954, 36008), ("test/test.ml", 917, 35954, 36063), 0), [(("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36062), 0)], 0))]), (("test/test.ml", 917, 35954, 35993), ("test/test.ml", 917, 35954, 36064), 0), [(("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36063), 0)], 0)); ((Tag5 ((("Pexp_object"), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36078), 0)), ((0, ((("class_structureA0", (("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0))), (("test/test.ml", 918, 36065, 36079), ("test/test.ml", 918, 36065, 36098), 0), [(("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0)], 0)))), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36098), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0))), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0), 0, 0), [(0, (Tag5 ((((("process_class_structure"), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0))), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0), 0, 0), [(0, (((("class_structureA0"), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0))), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0), 0, 0))]), (("test/test.ml", 918, 36065, 36117), ("test/test.ml", 918, 36065, 36162), 0), [(("test/test.ml", 918, 36065, 36118), ("test/test.ml", 918, 36065, 36161), 0); (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36160), 0)], 0))]), (("test/test.ml", 918, 36065, 36102), ("test/test.ml", 918, 36065, 36163), 0), [(("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36162), 0)], 0)); ((Tag5 ((("Pexp_open"), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36175), 0)), ((0, (Tag4 ([((("open_declarationA0", (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0))), (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0), 0, 0); ((("expressionA1", (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0))), (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0), 0, 0)]), (("test/test.ml", 919, 36164, 36176), ("test/test.ml", 919, 36164, 36209), 0), [(("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36208), 0)], 0)))), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36209), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0))), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_open_declaration"), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0))), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0), 0, 0), [(0, (((("open_declarationA0"), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0))), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36274), 0), [(("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36273), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0))), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0))), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36275), ("test/test.ml", 919, 36164, 36308), 0), [(("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36307), 0)], 0)]), (("test/test.ml", 919, 36164, 36228), ("test/test.ml", 919, 36164, 36309), 0), [(("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36308), 0)], 0))]), (("test/test.ml", 919, 36164, 36213), ("test/test.ml", 919, 36164, 36310), 0), [(("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36309), 0)], 0)); ((Tag5 ((("Pexp_override"), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36326), 0)), ((0, ((("listA0", (("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0))), (("test/test.ml", 920, 36311, 36327), ("test/test.ml", 920, 36311, 36335), 0), [(("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0)], 0)))), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36335), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0))), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0))), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0))), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0), 0, 0))]), (("test/test.ml", 920, 36311, 36354), ("test/test.ml", 920, 36311, 36377), 0), [(("test/test.ml", 920, 36311, 36355), ("test/test.ml", 920, 36311, 36376), 0); (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36375), 0)], 0))]), (("test/test.ml", 920, 36311, 36339), ("test/test.ml", 920, 36311, 36378), 0), [(("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36377), 0)], 0)); ((Tag5 ((("Pexp_pack"), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36390), 0)), ((0, ((("module_exprA0", (("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0))), (("test/test.ml", 921, 36379, 36391), ("test/test.ml", 921, 36379, 36406), 0), [(("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0)], 0)))), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36406), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0))), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0), 0, 0), [(0, (Tag5 ((((("process_module_expr"), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0))), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0), 0, 0), [(0, (((("module_exprA0"), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0))), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0), 0, 0))]), (("test/test.ml", 921, 36379, 36425), ("test/test.ml", 921, 36379, 36462), 0), [(("test/test.ml", 921, 36379, 36426), ("test/test.ml", 921, 36379, 36461), 0); (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36460), 0)], 0))]), (("test/test.ml", 921, 36379, 36410), ("test/test.ml", 921, 36379, 36463), 0), [(("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36462), 0)], 0)); ((Tag5 ((("Pexp_poly"), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36475), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0))), (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0), 0, 0); ((("optionA1", (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0))), (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0), 0, 0)]), (("test/test.ml", 922, 36464, 36476), ("test/test.ml", 922, 36464, 36499), 0), [(("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36498), 0)], 0)))), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36499), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0))), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0))), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0))), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36552), 0), [(("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36551), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0))), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0))), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36553), ("test/test.ml", 922, 36464, 36578), 0), [(("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36577), 0)], 0)]), (("test/test.ml", 922, 36464, 36518), ("test/test.ml", 922, 36464, 36579), 0), [(("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36578), 0)], 0))]), (("test/test.ml", 922, 36464, 36503), ("test/test.ml", 922, 36464, 36580), 0), [(("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36579), 0)], 0)); ((Tag5 ((("Pexp_record"), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36594), 0)), ((0, (Tag4 ([((("listA0", (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0))), (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0), 0, 0); ((("optionA1", (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0))), (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0), 0, 0)]), (("test/test.ml", 923, 36581, 36595), ("test/test.ml", 923, 36581, 36612), 0), [(("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36611), 0)], 0)))), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36612), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0))), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_list"), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0))), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0))), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36653), 0), [(("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36652), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0))), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0))), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36654), ("test/test.ml", 923, 36581, 36679), 0), [(("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36678), 0)], 0)]), (("test/test.ml", 923, 36581, 36631), ("test/test.ml", 923, 36581, 36680), 0), [(("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36679), 0)], 0))]), (("test/test.ml", 923, 36581, 36616), ("test/test.ml", 923, 36581, 36681), 0), [(("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36680), 0)], 0)); ((Tag5 ((("Pexp_send"), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36693), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0))), (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0), 0, 0); ((("locA1", (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0))), (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0), 0, 0)]), (("test/test.ml", 924, 36682, 36694), ("test/test.ml", 924, 36682, 36714), 0), [(("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36713), 0)], 0)))), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36714), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0))), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0))), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0))), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36767), 0), [(("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36766), 0)], 0); (Tag5 ((((("process_loc"), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0))), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0), 0, 0), [(0, (((("locA1"), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0))), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36768), ("test/test.ml", 924, 36682, 36787), 0), [(("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36786), 0)], 0)]), (("test/test.ml", 924, 36682, 36733), ("test/test.ml", 924, 36682, 36788), 0), [(("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36787), 0)], 0))]), (("test/test.ml", 924, 36682, 36718), ("test/test.ml", 924, 36682, 36789), 0), [(("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36788), 0)], 0)); ((Tag5 ((("Pexp_sequence"), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36805), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0))), (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0), 0, 0); ((("expressionA1", (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0))), (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0), 0, 0)]), (("test/test.ml", 925, 36790, 36806), ("test/test.ml", 925, 36790, 36833), 0), [(("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36832), 0)], 0)))), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36833), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0))), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0))), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0))), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36886), 0), [(("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36885), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0))), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0))), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36887), ("test/test.ml", 925, 36790, 36920), 0), [(("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36919), 0)], 0)]), (("test/test.ml", 925, 36790, 36852), ("test/test.ml", 925, 36790, 36921), 0), [(("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36920), 0)], 0))]), (("test/test.ml", 925, 36790, 36837), ("test/test.ml", 925, 36790, 36922), 0), [(("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36921), 0)], 0)); ((Tag5 ((("Pexp_setfield"), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36938), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0))), (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0))), (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0), 0, 0); ((("expressionA2", (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0))), (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0), 0, 0)]), (("test/test.ml", 926, 36923, 36939), ("test/test.ml", 926, 36923, 36982), 0), [(("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36981), 0)], 0)))), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36982), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0))), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0))), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0))), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37035), 0), [(("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37034), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0))), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0))), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37036), ("test/test.ml", 926, 36923, 37075), 0), [(("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37074), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0))), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0))), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37076), ("test/test.ml", 926, 36923, 37109), 0), [(("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37108), 0)], 0)]), (("test/test.ml", 926, 36923, 37001), ("test/test.ml", 926, 36923, 37110), 0), [(("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37109), 0)], 0))]), (("test/test.ml", 926, 36923, 36986), ("test/test.ml", 926, 36923, 37111), 0), [(("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37110), 0)], 0)); ((Tag5 ((("Pexp_setinstvar"), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37129), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0))), (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0), 0, 0); ((("expressionA1", (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0))), (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0), 0, 0)]), (("test/test.ml", 927, 37112, 37130), ("test/test.ml", 927, 37112, 37150), 0), [(("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37149), 0)], 0)))), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37150), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0))), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0))), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0))), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37189), 0), [(("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37188), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0))), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0))), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37190), ("test/test.ml", 927, 37112, 37223), 0), [(("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37222), 0)], 0)]), (("test/test.ml", 927, 37112, 37169), ("test/test.ml", 927, 37112, 37224), 0), [(("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37223), 0)], 0))]), (("test/test.ml", 927, 37112, 37154), ("test/test.ml", 927, 37112, 37225), 0), [(("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37224), 0)], 0)); ((Tag5 ((("Pexp_try"), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37236), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0))), (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0), 0, 0); ((("casesA1", (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0))), (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0), 0, 0)]), (("test/test.ml", 928, 37226, 37237), ("test/test.ml", 928, 37226, 37259), 0), [(("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37258), 0)], 0)))), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37259), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0))), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0))), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0))), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37312), 0), [(("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37311), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0))), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0))), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37313), ("test/test.ml", 928, 37226, 37336), 0), [(("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37335), 0)], 0)]), (("test/test.ml", 928, 37226, 37278), ("test/test.ml", 928, 37226, 37337), 0), [(("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37336), 0)], 0))]), (("test/test.ml", 928, 37226, 37263), ("test/test.ml", 928, 37226, 37338), 0), [(("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37337), 0)], 0)); ((Tag5 ((("Pexp_tuple"), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37351), 0)), ((0, ((("listA0", (("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0))), (("test/test.ml", 929, 37339, 37352), ("test/test.ml", 929, 37339, 37360), 0), [(("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0)], 0)))), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37360), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0))), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0))), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0))), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0), 0, 0))]), (("test/test.ml", 929, 37339, 37379), ("test/test.ml", 929, 37339, 37402), 0), [(("test/test.ml", 929, 37339, 37380), ("test/test.ml", 929, 37339, 37401), 0); (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37400), 0)], 0))]), (("test/test.ml", 929, 37339, 37364), ("test/test.ml", 929, 37339, 37403), 0), [(("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37402), 0)], 0)); ((Tag5 ((("Pexp_unreachable"), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0)), 0), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0))), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0), 0, 0), [(0, (Tag9 ((("()"), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0)), 0), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0), 0, 0))]), (("test/test.ml", 930, 37404, 37426), ("test/test.ml", 930, 37404, 37444), 0), [(("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37443), 0)], 0)); ((Tag5 ((("Pexp_variant"), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37459), 0)), ((0, (Tag4 ([((("labelA0", (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0))), (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0), 0, 0); ((("optionA1", (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0))), (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0), 0, 0)]), (("test/test.ml", 931, 37445, 37460), ("test/test.ml", 931, 37445, 37478), 0), [(("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37477), 0)], 0)))), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37478), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0))), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_label"), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0))), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0), 0, 0), [(0, (((("labelA0"), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0))), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37521), 0), [(("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37520), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0))), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0))), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37522), ("test/test.ml", 931, 37445, 37547), 0), [(("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37546), 0)], 0)]), (("test/test.ml", 931, 37445, 37497), ("test/test.ml", 931, 37445, 37548), 0), [(("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37547), 0)], 0))]), (("test/test.ml", 931, 37445, 37482), ("test/test.ml", 931, 37445, 37549), 0), [(("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37548), 0)], 0)); ((Tag5 ((("Pexp_while"), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37562), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0))), (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0), 0, 0); ((("expressionA1", (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0))), (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0), 0, 0)]), (("test/test.ml", 932, 37550, 37563), ("test/test.ml", 932, 37550, 37590), 0), [(("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37589), 0)], 0)))), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37590), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0))), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0))), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0))), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37643), 0), [(("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37642), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0))), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0))), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37644), ("test/test.ml", 932, 37550, 37677), 0), [(("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37676), 0)], 0)]), (("test/test.ml", 932, 37550, 37609), ("test/test.ml", 932, 37550, 37678), 0), [(("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37677), 0)], 0))]), (("test/test.ml", 932, 37550, 37594), ("test/test.ml", 932, 37550, 37679), 0), [(("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37678), 0)], 0))]), (("test/test.ml", 895, 33305, 33307), ("test/test.ml", 932, 37550, 37679), 0), 0, 0)), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 932, 37550, 37679), 1), 0, 0), 0, (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0))]), (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("foo", (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0))), (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0))), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 894, 33292, 33302), 0), [(("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0))), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0), 0, 0), [((Tag5 ((("Pexp_apply"), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33334), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0))), (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0), 0, 0); ((("listA1", (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0))), (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0), 0, 0)]), (("test/test.ml", 896, 33320, 33335), ("test/test.ml", 896, 33320, 33356), 0), [(("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33355), 0)], 0)))), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33356), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0))), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0))), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0))), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33409), 0), [(("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33408), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0))), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0))), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33410), ("test/test.ml", 896, 33320, 33431), 0), [(("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33430), 0)], 0)]), (("test/test.ml", 896, 33320, 33375), ("test/test.ml", 896, 33320, 33432), 0), [(("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33431), 0)], 0))]), (("test/test.ml", 896, 33320, 33360), ("test/test.ml", 896, 33320, 33433), 0), [(("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33432), 0)], 0)); ((Tag5 ((("Pexp_array"), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33446), 0)), ((0, ((("listA0", (("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0))), (("test/test.ml", 897, 33434, 33447), ("test/test.ml", 897, 33434, 33455), 0), [(("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0)], 0)))), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33455), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0))), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0))), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0))), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0), 0, 0))]), (("test/test.ml", 897, 33434, 33474), ("test/test.ml", 897, 33434, 33497), 0), [(("test/test.ml", 897, 33434, 33475), ("test/test.ml", 897, 33434, 33496), 0); (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33495), 0)], 0))]), (("test/test.ml", 897, 33434, 33459), ("test/test.ml", 897, 33434, 33498), 0), [(("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33497), 0)], 0)); ((Tag5 ((("Pexp_assert"), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33512), 0)), ((0, ((("expressionA0", (("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0))), (("test/test.ml", 898, 33499, 33513), ("test/test.ml", 898, 33499, 33527), 0), [(("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0)], 0)))), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33527), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0))), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0))), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0))), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0), 0, 0))]), (("test/test.ml", 898, 33499, 33546), ("test/test.ml", 898, 33499, 33581), 0), [(("test/test.ml", 898, 33499, 33547), ("test/test.ml", 898, 33499, 33580), 0); (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33579), 0)], 0))]), (("test/test.ml", 898, 33499, 33531), ("test/test.ml", 898, 33499, 33582), 0), [(("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33581), 0)], 0)); ((Tag5 ((("Pexp_coerce"), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33596), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0))), (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0), 0, 0); ((("optionA1", (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0))), (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0), 0, 0); ((("core_typeA2", (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0))), (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0), 0, 0)]), (("test/test.ml", 899, 33583, 33597), ("test/test.ml", 899, 33583, 33632), 0), [(("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33631), 0)], 0)))), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33632), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0))), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0))), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0))), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33685), 0), [(("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33684), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0))), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0))), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33686), ("test/test.ml", 899, 33583, 33711), 0), [(("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33710), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0))), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0), 0, 0), [(0, (((("core_typeA2"), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0))), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33712), ("test/test.ml", 899, 33583, 33743), 0), [(("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33742), 0)], 0)]), (("test/test.ml", 899, 33583, 33651), ("test/test.ml", 899, 33583, 33744), 0), [(("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33743), 0)], 0))]), (("test/test.ml", 899, 33583, 33636), ("test/test.ml", 899, 33583, 33745), 0), [(("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33744), 0)], 0)); ((Tag5 ((("Pexp_constant"), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33761), 0)), ((0, ((("constantA0", (("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0))), (("test/test.ml", 900, 33746, 33762), ("test/test.ml", 900, 33746, 33774), 0), [(("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0)], 0)))), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33774), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0))), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0), 0, 0), [(0, (Tag5 ((((("process_constant"), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0))), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0), 0, 0), [(0, (((("constantA0"), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0))), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0), 0, 0))]), (("test/test.ml", 900, 33746, 33793), ("test/test.ml", 900, 33746, 33824), 0), [(("test/test.ml", 900, 33746, 33794), ("test/test.ml", 900, 33746, 33823), 0); (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33822), 0)], 0))]), (("test/test.ml", 900, 33746, 33778), ("test/test.ml", 900, 33746, 33825), 0), [(("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33824), 0)], 0)); ((Tag5 ((("Pexp_constraint"), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33843), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0))), (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0), 0, 0); ((("core_typeA1", (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0))), (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0), 0, 0)]), (("test/test.ml", 901, 33826, 33844), ("test/test.ml", 901, 33826, 33870), 0), [(("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33869), 0)], 0)))), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33870), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0))), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0))), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0))), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33923), 0), [(("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33922), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0))), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0), 0, 0), [(0, (((("core_typeA1"), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0))), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33924), ("test/test.ml", 901, 33826, 33955), 0), [(("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33954), 0)], 0)]), (("test/test.ml", 901, 33826, 33889), ("test/test.ml", 901, 33826, 33956), 0), [(("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33955), 0)], 0))]), (("test/test.ml", 901, 33826, 33874), ("test/test.ml", 901, 33826, 33957), 0), [(("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33956), 0)], 0)); ((Tag5 ((("Pexp_construct"), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 33974), 0)), ((0, (Tag4 ([((("longident_locA0", (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0))), (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0), 0, 0); ((("optionA1", (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0))), (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0), 0, 0)]), (("test/test.ml", 902, 33958, 33975), ("test/test.ml", 902, 33958, 34001), 0), [(("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 34000), 0)], 0)))), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 34001), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0))), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_longident_loc"), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0))), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0))), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34060), 0), [(("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34059), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0))), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0))), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34061), ("test/test.ml", 902, 33958, 34086), 0), [(("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34085), 0)], 0)]), (("test/test.ml", 902, 33958, 34020), ("test/test.ml", 902, 33958, 34087), 0), [(("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34086), 0)], 0))]), (("test/test.ml", 902, 33958, 34005), ("test/test.ml", 902, 33958, 34088), 0), [(("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34087), 0)], 0)); ((Tag5 ((("Pexp_extension"), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34105), 0)), ((0, ((("extensionA0", (("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0))), (("test/test.ml", 903, 34089, 34106), ("test/test.ml", 903, 34089, 34119), 0), [(("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0)], 0)))), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34119), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0))), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0), 0, 0), [(0, (Tag5 ((((("process_extension"), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0))), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0), 0, 0), [(0, (((("extensionA0"), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0))), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0), 0, 0))]), (("test/test.ml", 903, 34089, 34138), ("test/test.ml", 903, 34089, 34171), 0), [(("test/test.ml", 903, 34089, 34139), ("test/test.ml", 903, 34089, 34170), 0); (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34169), 0)], 0))]), (("test/test.ml", 903, 34089, 34123), ("test/test.ml", 903, 34089, 34172), 0), [(("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34171), 0)], 0)); ((Tag5 ((("Pexp_field"), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34185), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0))), (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0))), (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0), 0, 0)]), (("test/test.ml", 904, 34173, 34186), ("test/test.ml", 904, 34173, 34216), 0), [(("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34215), 0)], 0)))), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34216), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0))), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0))), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0))), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34269), 0), [(("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34268), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0))), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0))), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34270), ("test/test.ml", 904, 34173, 34309), 0), [(("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34308), 0)], 0)]), (("test/test.ml", 904, 34173, 34235), ("test/test.ml", 904, 34173, 34310), 0), [(("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34309), 0)], 0))]), (("test/test.ml", 904, 34173, 34220), ("test/test.ml", 904, 34173, 34311), 0), [(("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34310), 0)], 0)); ((Tag5 ((("Pexp_for"), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34322), 0)), ((0, (Tag4 ([((("patternA0", (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0))), (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0), 0, 0); ((("expressionA1", (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0))), (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0), 0, 0); ((("expressionA2", (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0))), (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0), 0, 0); ((("direction_flagA3", (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0))), (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0), 0, 0); ((("expressionA4", (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0))), (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0), 0, 0)]), (("test/test.ml", 905, 34312, 34323), ("test/test.ml", 905, 34312, 34390), 0), [(("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34389), 0)], 0)))), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34390), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0))), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_pattern"), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0))), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0), 0, 0), [(0, (((("patternA0"), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0))), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34437), 0), [(("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34436), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0))), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0))), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34438), ("test/test.ml", 905, 34312, 34471), 0), [(("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34470), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0))), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0))), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34472), ("test/test.ml", 905, 34312, 34505), 0), [(("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34504), 0)], 0); (Tag5 ((((("process_direction_flag"), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0))), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0), 0, 0), [(0, (((("direction_flagA3"), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0))), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34506), ("test/test.ml", 905, 34312, 34547), 0), [(("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34546), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0))), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0), 0, 0), [(0, (((("expressionA4"), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0))), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34548), ("test/test.ml", 905, 34312, 34581), 0), [(("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34580), 0)], 0)]), (("test/test.ml", 905, 34312, 34409), ("test/test.ml", 905, 34312, 34582), 0), [(("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34581), 0)], 0))]), (("test/test.ml", 905, 34312, 34394), ("test/test.ml", 905, 34312, 34583), 0), [(("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34582), 0)], 0)); ((Tag5 ((("Pexp_fun"), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34594), 0)), ((0, (Tag4 ([((("arg_labelA0", (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0))), (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0), 0, 0); ((("optionA1", (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0))), (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0), 0, 0); ((("patternA2", (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0))), (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0), 0, 0); ((("expressionA3", (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0))), (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0), 0, 0)]), (("test/test.ml", 906, 34584, 34595), ("test/test.ml", 906, 34584, 34640), 0), [(("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34639), 0)], 0)))), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34640), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0))), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_arg_label"), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0))), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0), 0, 0), [(0, (((("arg_labelA0"), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0))), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34691), 0), [(("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34690), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0))), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0))), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34692), ("test/test.ml", 906, 34584, 34717), 0), [(("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34716), 0)], 0); (Tag5 ((((("process_pattern"), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0))), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0), 0, 0), [(0, (((("patternA2"), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0))), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34718), ("test/test.ml", 906, 34584, 34745), 0), [(("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34744), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0))), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0), 0, 0), [(0, (((("expressionA3"), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0))), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34746), ("test/test.ml", 906, 34584, 34779), 0), [(("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34778), 0)], 0)]), (("test/test.ml", 906, 34584, 34659), ("test/test.ml", 906, 34584, 34780), 0), [(("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34779), 0)], 0))]), (("test/test.ml", 906, 34584, 34644), ("test/test.ml", 906, 34584, 34781), 0), [(("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34780), 0)], 0)); ((Tag5 ((("Pexp_function"), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34797), 0)), ((0, ((("casesA0", (("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0))), (("test/test.ml", 907, 34782, 34798), ("test/test.ml", 907, 34782, 34807), 0), [(("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0)], 0)))), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34807), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0))), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0), 0, 0), [(0, (Tag5 ((((("process_cases"), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0))), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0), 0, 0), [(0, (((("casesA0"), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0))), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0), 0, 0))]), (("test/test.ml", 907, 34782, 34826), ("test/test.ml", 907, 34782, 34851), 0), [(("test/test.ml", 907, 34782, 34827), ("test/test.ml", 907, 34782, 34850), 0); (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34849), 0)], 0))]), (("test/test.ml", 907, 34782, 34811), ("test/test.ml", 907, 34782, 34852), 0), [(("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34851), 0)], 0)); ((Tag5 ((("Pexp_ident"), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34865), 0)), ((0, ((("longident_locA0", (("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0))), (("test/test.ml", 908, 34853, 34866), ("test/test.ml", 908, 34853, 34883), 0), [(("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0)], 0)))), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34883), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0))), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0))), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0))), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0), 0, 0))]), (("test/test.ml", 908, 34853, 34902), ("test/test.ml", 908, 34853, 34943), 0), [(("test/test.ml", 908, 34853, 34903), ("test/test.ml", 908, 34853, 34942), 0); (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34941), 0)], 0))]), (("test/test.ml", 908, 34853, 34887), ("test/test.ml", 908, 34853, 34944), 0), [(("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34943), 0)], 0)); ((Tag5 ((("Pexp_ifthenelse"), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34962), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0))), (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0), 0, 0); ((("expressionA1", (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0))), (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0), 0, 0); ((("optionA2", (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0))), (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0), 0, 0)]), (("test/test.ml", 909, 34945, 34963), ("test/test.ml", 909, 34945, 34999), 0), [(("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34998), 0)], 0)))), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34999), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0))), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0))), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0))), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35052), 0), [(("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35051), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0))), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0))), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35053), ("test/test.ml", 909, 34945, 35086), 0), [(("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35085), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0))), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0), 0, 0), [(0, (((("optionA2"), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0))), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35087), ("test/test.ml", 909, 34945, 35112), 0), [(("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35111), 0)], 0)]), (("test/test.ml", 909, 34945, 35018), ("test/test.ml", 909, 34945, 35113), 0), [(("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35112), 0)], 0))]), (("test/test.ml", 909, 34945, 35003), ("test/test.ml", 909, 34945, 35114), 0), [(("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35113), 0)], 0)); ((Tag5 ((("Pexp_lazy"), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35126), 0)), ((0, ((("expressionA0", (("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0))), (("test/test.ml", 910, 35115, 35127), ("test/test.ml", 910, 35115, 35141), 0), [(("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0)], 0)))), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35141), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0))), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0))), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0))), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0), 0, 0))]), (("test/test.ml", 910, 35115, 35160), ("test/test.ml", 910, 35115, 35195), 0), [(("test/test.ml", 910, 35115, 35161), ("test/test.ml", 910, 35115, 35194), 0); (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35193), 0)], 0))]), (("test/test.ml", 910, 35115, 35145), ("test/test.ml", 910, 35115, 35196), 0), [(("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35195), 0)], 0)); ((Tag5 ((("Pexp_letexception"), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35216), 0)), ((0, (Tag4 ([((("extension_constructorA0", (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0))), (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0), 0, 0); ((("expressionA1", (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0))), (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0), 0, 0)]), (("test/test.ml", 911, 35197, 35217), ("test/test.ml", 911, 35197, 35255), 0), [(("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35254), 0)], 0)))), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35255), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0))), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_extension_constructor"), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0))), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0), 0, 0), [(0, (((("extension_constructorA0"), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0))), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35330), 0), [(("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35329), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0))), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0))), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35331), ("test/test.ml", 911, 35197, 35364), 0), [(("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35363), 0)], 0)]), (("test/test.ml", 911, 35197, 35274), ("test/test.ml", 911, 35197, 35365), 0), [(("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35364), 0)], 0))]), (("test/test.ml", 911, 35197, 35259), ("test/test.ml", 911, 35197, 35366), 0), [(("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35365), 0)], 0)); ((Tag5 ((("Pexp_letmodule"), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35383), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0))), (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0), 0, 0); ((("module_exprA1", (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0))), (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0), 0, 0); ((("expressionA2", (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0))), (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0), 0, 0)]), (("test/test.ml", 912, 35367, 35384), ("test/test.ml", 912, 35367, 35418), 0), [(("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35417), 0)], 0)))), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35418), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0))), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0))), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0))), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35457), 0), [(("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35456), 0)], 0); (Tag5 ((((("process_module_expr"), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0))), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0), 0, 0), [(0, (((("module_exprA1"), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0))), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35458), ("test/test.ml", 912, 35367, 35493), 0), [(("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35492), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0))), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0))), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35494), ("test/test.ml", 912, 35367, 35527), 0), [(("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35526), 0)], 0)]), (("test/test.ml", 912, 35367, 35437), ("test/test.ml", 912, 35367, 35528), 0), [(("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35527), 0)], 0))]), (("test/test.ml", 912, 35367, 35422), ("test/test.ml", 912, 35367, 35529), 0), [(("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35528), 0)], 0)); ((Tag5 ((("Pexp_letop"), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35542), 0)), ((0, ((("letopA0", (("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0))), (("test/test.ml", 913, 35530, 35543), ("test/test.ml", 913, 35530, 35552), 0), [(("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0)], 0)))), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35552), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0))), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0), 0, 0), [(0, (Tag5 ((((("process_letop"), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0))), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0), 0, 0), [(0, (((("letopA0"), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0))), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0), 0, 0))]), (("test/test.ml", 913, 35530, 35571), ("test/test.ml", 913, 35530, 35596), 0), [(("test/test.ml", 913, 35530, 35572), ("test/test.ml", 913, 35530, 35595), 0); (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35594), 0)], 0))]), (("test/test.ml", 913, 35530, 35556), ("test/test.ml", 913, 35530, 35597), 0), [(("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35596), 0)], 0)); ((Tag5 ((("Pexp_let"), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35608), 0)), ((0, (Tag4 ([((("rec_flagA0", (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0))), (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0), 0, 0); ((("listA1", (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0))), (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0), 0, 0); ((("expressionA2", (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0))), (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0), 0, 0)]), (("test/test.ml", 914, 35598, 35609), ("test/test.ml", 914, 35598, 35641), 0), [(("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35640), 0)], 0)))), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35641), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0))), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_rec_flag"), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0))), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0), 0, 0), [(0, (((("rec_flagA0"), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0))), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35690), 0), [(("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35689), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0))), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0))), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35691), ("test/test.ml", 914, 35598, 35712), 0), [(("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35711), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0))), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0))), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35713), ("test/test.ml", 914, 35598, 35746), 0), [(("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35745), 0)], 0)]), (("test/test.ml", 914, 35598, 35660), ("test/test.ml", 914, 35598, 35747), 0), [(("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35746), 0)], 0))]), (("test/test.ml", 914, 35598, 35645), ("test/test.ml", 914, 35598, 35748), 0), [(("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35747), 0)], 0)); ((Tag5 ((("Pexp_match"), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35761), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0))), (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0), 0, 0); ((("casesA1", (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0))), (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0), 0, 0)]), (("test/test.ml", 915, 35749, 35762), ("test/test.ml", 915, 35749, 35784), 0), [(("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35783), 0)], 0)))), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35784), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0))), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0))), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0))), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35837), 0), [(("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35836), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0))), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0))), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35838), ("test/test.ml", 915, 35749, 35861), 0), [(("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35860), 0)], 0)]), (("test/test.ml", 915, 35749, 35803), ("test/test.ml", 915, 35749, 35862), 0), [(("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35861), 0)], 0))]), (("test/test.ml", 915, 35749, 35788), ("test/test.ml", 915, 35749, 35863), 0), [(("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35862), 0)], 0)); ((Tag5 ((("Pexp_new"), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35874), 0)), ((0, ((("longident_locA0", (("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0))), (("test/test.ml", 916, 35864, 35875), ("test/test.ml", 916, 35864, 35892), 0), [(("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0)], 0)))), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35892), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0))), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0))), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0))), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0), 0, 0))]), (("test/test.ml", 916, 35864, 35911), ("test/test.ml", 916, 35864, 35952), 0), [(("test/test.ml", 916, 35864, 35912), ("test/test.ml", 916, 35864, 35951), 0); (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35950), 0)], 0))]), (("test/test.ml", 916, 35864, 35896), ("test/test.ml", 916, 35864, 35953), 0), [(("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35952), 0)], 0)); ((Tag5 ((("Pexp_newtype"), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35968), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0))), (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0), 0, 0); ((("expressionA1", (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0))), (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0), 0, 0)]), (("test/test.ml", 917, 35954, 35969), ("test/test.ml", 917, 35954, 35989), 0), [(("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35988), 0)], 0)))), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35989), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0))), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0))), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0))), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36028), 0), [(("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36027), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0))), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0))), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36029), ("test/test.ml", 917, 35954, 36062), 0), [(("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36061), 0)], 0)]), (("test/test.ml", 917, 35954, 36008), ("test/test.ml", 917, 35954, 36063), 0), [(("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36062), 0)], 0))]), (("test/test.ml", 917, 35954, 35993), ("test/test.ml", 917, 35954, 36064), 0), [(("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36063), 0)], 0)); ((Tag5 ((("Pexp_object"), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36078), 0)), ((0, ((("class_structureA0", (("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0))), (("test/test.ml", 918, 36065, 36079), ("test/test.ml", 918, 36065, 36098), 0), [(("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0)], 0)))), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36098), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0))), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0), 0, 0), [(0, (Tag5 ((((("process_class_structure"), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0))), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0), 0, 0), [(0, (((("class_structureA0"), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0))), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0), 0, 0))]), (("test/test.ml", 918, 36065, 36117), ("test/test.ml", 918, 36065, 36162), 0), [(("test/test.ml", 918, 36065, 36118), ("test/test.ml", 918, 36065, 36161), 0); (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36160), 0)], 0))]), (("test/test.ml", 918, 36065, 36102), ("test/test.ml", 918, 36065, 36163), 0), [(("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36162), 0)], 0)); ((Tag5 ((("Pexp_open"), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36175), 0)), ((0, (Tag4 ([((("open_declarationA0", (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0))), (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0), 0, 0); ((("expressionA1", (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0))), (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0), 0, 0)]), (("test/test.ml", 919, 36164, 36176), ("test/test.ml", 919, 36164, 36209), 0), [(("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36208), 0)], 0)))), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36209), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0))), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_open_declaration"), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0))), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0), 0, 0), [(0, (((("open_declarationA0"), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0))), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36274), 0), [(("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36273), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0))), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0))), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36275), ("test/test.ml", 919, 36164, 36308), 0), [(("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36307), 0)], 0)]), (("test/test.ml", 919, 36164, 36228), ("test/test.ml", 919, 36164, 36309), 0), [(("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36308), 0)], 0))]), (("test/test.ml", 919, 36164, 36213), ("test/test.ml", 919, 36164, 36310), 0), [(("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36309), 0)], 0)); ((Tag5 ((("Pexp_override"), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36326), 0)), ((0, ((("listA0", (("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0))), (("test/test.ml", 920, 36311, 36327), ("test/test.ml", 920, 36311, 36335), 0), [(("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0)], 0)))), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36335), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0))), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0))), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0))), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0), 0, 0))]), (("test/test.ml", 920, 36311, 36354), ("test/test.ml", 920, 36311, 36377), 0), [(("test/test.ml", 920, 36311, 36355), ("test/test.ml", 920, 36311, 36376), 0); (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36375), 0)], 0))]), (("test/test.ml", 920, 36311, 36339), ("test/test.ml", 920, 36311, 36378), 0), [(("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36377), 0)], 0)); ((Tag5 ((("Pexp_pack"), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36390), 0)), ((0, ((("module_exprA0", (("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0))), (("test/test.ml", 921, 36379, 36391), ("test/test.ml", 921, 36379, 36406), 0), [(("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0)], 0)))), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36406), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0))), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0), 0, 0), [(0, (Tag5 ((((("process_module_expr"), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0))), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0), 0, 0), [(0, (((("module_exprA0"), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0))), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0), 0, 0))]), (("test/test.ml", 921, 36379, 36425), ("test/test.ml", 921, 36379, 36462), 0), [(("test/test.ml", 921, 36379, 36426), ("test/test.ml", 921, 36379, 36461), 0); (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36460), 0)], 0))]), (("test/test.ml", 921, 36379, 36410), ("test/test.ml", 921, 36379, 36463), 0), [(("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36462), 0)], 0)); ((Tag5 ((("Pexp_poly"), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36475), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0))), (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0), 0, 0); ((("optionA1", (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0))), (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0), 0, 0)]), (("test/test.ml", 922, 36464, 36476), ("test/test.ml", 922, 36464, 36499), 0), [(("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36498), 0)], 0)))), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36499), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0))), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0))), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0))), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36552), 0), [(("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36551), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0))), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0))), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36553), ("test/test.ml", 922, 36464, 36578), 0), [(("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36577), 0)], 0)]), (("test/test.ml", 922, 36464, 36518), ("test/test.ml", 922, 36464, 36579), 0), [(("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36578), 0)], 0))]), (("test/test.ml", 922, 36464, 36503), ("test/test.ml", 922, 36464, 36580), 0), [(("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36579), 0)], 0)); ((Tag5 ((("Pexp_record"), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36594), 0)), ((0, (Tag4 ([((("listA0", (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0))), (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0), 0, 0); ((("optionA1", (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0))), (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0), 0, 0)]), (("test/test.ml", 923, 36581, 36595), ("test/test.ml", 923, 36581, 36612), 0), [(("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36611), 0)], 0)))), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36612), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0))), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_list"), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0))), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0))), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36653), 0), [(("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36652), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0))), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0))), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36654), ("test/test.ml", 923, 36581, 36679), 0), [(("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36678), 0)], 0)]), (("test/test.ml", 923, 36581, 36631), ("test/test.ml", 923, 36581, 36680), 0), [(("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36679), 0)], 0))]), (("test/test.ml", 923, 36581, 36616), ("test/test.ml", 923, 36581, 36681), 0), [(("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36680), 0)], 0)); ((Tag5 ((("Pexp_send"), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36693), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0))), (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0), 0, 0); ((("locA1", (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0))), (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0), 0, 0)]), (("test/test.ml", 924, 36682, 36694), ("test/test.ml", 924, 36682, 36714), 0), [(("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36713), 0)], 0)))), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36714), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0))), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0))), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0))), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36767), 0), [(("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36766), 0)], 0); (Tag5 ((((("process_loc"), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0))), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0), 0, 0), [(0, (((("locA1"), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0))), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36768), ("test/test.ml", 924, 36682, 36787), 0), [(("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36786), 0)], 0)]), (("test/test.ml", 924, 36682, 36733), ("test/test.ml", 924, 36682, 36788), 0), [(("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36787), 0)], 0))]), (("test/test.ml", 924, 36682, 36718), ("test/test.ml", 924, 36682, 36789), 0), [(("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36788), 0)], 0)); ((Tag5 ((("Pexp_sequence"), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36805), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0))), (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0), 0, 0); ((("expressionA1", (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0))), (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0), 0, 0)]), (("test/test.ml", 925, 36790, 36806), ("test/test.ml", 925, 36790, 36833), 0), [(("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36832), 0)], 0)))), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36833), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0))), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0))), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0))), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36886), 0), [(("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36885), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0))), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0))), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36887), ("test/test.ml", 925, 36790, 36920), 0), [(("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36919), 0)], 0)]), (("test/test.ml", 925, 36790, 36852), ("test/test.ml", 925, 36790, 36921), 0), [(("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36920), 0)], 0))]), (("test/test.ml", 925, 36790, 36837), ("test/test.ml", 925, 36790, 36922), 0), [(("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36921), 0)], 0)); ((Tag5 ((("Pexp_setfield"), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36938), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0))), (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0))), (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0), 0, 0); ((("expressionA2", (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0))), (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0), 0, 0)]), (("test/test.ml", 926, 36923, 36939), ("test/test.ml", 926, 36923, 36982), 0), [(("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36981), 0)], 0)))), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36982), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0))), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0))), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0))), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37035), 0), [(("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37034), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0))), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0))), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37036), ("test/test.ml", 926, 36923, 37075), 0), [(("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37074), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0))), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0))), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37076), ("test/test.ml", 926, 36923, 37109), 0), [(("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37108), 0)], 0)]), (("test/test.ml", 926, 36923, 37001), ("test/test.ml", 926, 36923, 37110), 0), [(("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37109), 0)], 0))]), (("test/test.ml", 926, 36923, 36986), ("test/test.ml", 926, 36923, 37111), 0), [(("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37110), 0)], 0)); ((Tag5 ((("Pexp_setinstvar"), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37129), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0))), (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0), 0, 0); ((("expressionA1", (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0))), (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0), 0, 0)]), (("test/test.ml", 927, 37112, 37130), ("test/test.ml", 927, 37112, 37150), 0), [(("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37149), 0)], 0)))), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37150), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0))), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0))), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0))), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37189), 0), [(("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37188), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0))), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0))), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37190), ("test/test.ml", 927, 37112, 37223), 0), [(("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37222), 0)], 0)]), (("test/test.ml", 927, 37112, 37169), ("test/test.ml", 927, 37112, 37224), 0), [(("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37223), 0)], 0))]), (("test/test.ml", 927, 37112, 37154), ("test/test.ml", 927, 37112, 37225), 0), [(("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37224), 0)], 0)); ((Tag5 ((("Pexp_try"), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37236), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0))), (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0), 0, 0); ((("casesA1", (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0))), (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0), 0, 0)]), (("test/test.ml", 928, 37226, 37237), ("test/test.ml", 928, 37226, 37259), 0), [(("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37258), 0)], 0)))), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37259), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0))), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0))), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0))), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37312), 0), [(("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37311), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0))), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0))), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37313), ("test/test.ml", 928, 37226, 37336), 0), [(("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37335), 0)], 0)]), (("test/test.ml", 928, 37226, 37278), ("test/test.ml", 928, 37226, 37337), 0), [(("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37336), 0)], 0))]), (("test/test.ml", 928, 37226, 37263), ("test/test.ml", 928, 37226, 37338), 0), [(("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37337), 0)], 0)); ((Tag5 ((("Pexp_tuple"), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37351), 0)), ((0, ((("listA0", (("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0))), (("test/test.ml", 929, 37339, 37352), ("test/test.ml", 929, 37339, 37360), 0), [(("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0)], 0)))), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37360), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0))), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0))), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0))), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0), 0, 0))]), (("test/test.ml", 929, 37339, 37379), ("test/test.ml", 929, 37339, 37402), 0), [(("test/test.ml", 929, 37339, 37380), ("test/test.ml", 929, 37339, 37401), 0); (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37400), 0)], 0))]), (("test/test.ml", 929, 37339, 37364), ("test/test.ml", 929, 37339, 37403), 0), [(("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37402), 0)], 0)); ((Tag5 ((("Pexp_unreachable"), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0)), 0), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0))), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0), 0, 0), [(0, (Tag9 ((("()"), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0)), 0), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0), 0, 0))]), (("test/test.ml", 930, 37404, 37426), ("test/test.ml", 930, 37404, 37444), 0), [(("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37443), 0)], 0)); ((Tag5 ((("Pexp_variant"), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37459), 0)), ((0, (Tag4 ([((("labelA0", (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0))), (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0), 0, 0); ((("optionA1", (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0))), (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0), 0, 0)]), (("test/test.ml", 931, 37445, 37460), ("test/test.ml", 931, 37445, 37478), 0), [(("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37477), 0)], 0)))), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37478), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0))), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_label"), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0))), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0), 0, 0), [(0, (((("labelA0"), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0))), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37521), 0), [(("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37520), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0))), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0))), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37522), ("test/test.ml", 931, 37445, 37547), 0), [(("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37546), 0)], 0)]), (("test/test.ml", 931, 37445, 37497), ("test/test.ml", 931, 37445, 37548), 0), [(("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37547), 0)], 0))]), (("test/test.ml", 931, 37445, 37482), ("test/test.ml", 931, 37445, 37549), 0), [(("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37548), 0)], 0)); ((Tag5 ((("Pexp_while"), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37562), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0))), (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0), 0, 0); ((("expressionA1", (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0))), (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0), 0, 0)]), (("test/test.ml", 932, 37550, 37563), ("test/test.ml", 932, 37550, 37590), 0), [(("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37589), 0)], 0)))), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37590), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0))), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0))), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0))), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37643), 0), [(("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37642), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0))), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0))), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37644), ("test/test.ml", 932, 37550, 37677), 0), [(("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37676), 0)], 0)]), (("test/test.ml", 932, 37550, 37609), ("test/test.ml", 932, 37550, 37678), 0), [(("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37677), 0)], 0))]), (("test/test.ml", 932, 37550, 37594), ("test/test.ml", 932, 37550, 37679), 0), [(("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37678), 0)], 0))]), (("test/test.ml", 895, 33305, 33307), ("test/test.ml", 932, 37550, 37679), 0), 0, 0)), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 932, 37550, 37679), 1), 0, 0), 0, (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0))]))
("DEBUG:Pstr_value:", 0, [(((("foo", (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0))), (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0))), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 894, 33292, 33302), 0), [(("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0))), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0), 0, 0), [((Tag5 ((("Pexp_apply"), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33334), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0))), (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0), 0, 0); ((("listA1", (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0))), (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0), 0, 0)]), (("test/test.ml", 896, 33320, 33335), ("test/test.ml", 896, 33320, 33356), 0), [(("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33355), 0)], 0)))), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33356), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0))), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0))), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0))), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33409), 0), [(("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33408), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0))), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0))), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33410), ("test/test.ml", 896, 33320, 33431), 0), [(("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33430), 0)], 0)]), (("test/test.ml", 896, 33320, 33375), ("test/test.ml", 896, 33320, 33432), 0), [(("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33431), 0)], 0))]), (("test/test.ml", 896, 33320, 33360), ("test/test.ml", 896, 33320, 33433), 0), [(("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33432), 0)], 0)); ((Tag5 ((("Pexp_array"), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33446), 0)), ((0, ((("listA0", (("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0))), (("test/test.ml", 897, 33434, 33447), ("test/test.ml", 897, 33434, 33455), 0), [(("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0)], 0)))), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33455), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0))), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0))), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0))), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0), 0, 0))]), (("test/test.ml", 897, 33434, 33474), ("test/test.ml", 897, 33434, 33497), 0), [(("test/test.ml", 897, 33434, 33475), ("test/test.ml", 897, 33434, 33496), 0); (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33495), 0)], 0))]), (("test/test.ml", 897, 33434, 33459), ("test/test.ml", 897, 33434, 33498), 0), [(("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33497), 0)], 0)); ((Tag5 ((("Pexp_assert"), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33512), 0)), ((0, ((("expressionA0", (("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0))), (("test/test.ml", 898, 33499, 33513), ("test/test.ml", 898, 33499, 33527), 0), [(("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0)], 0)))), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33527), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0))), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0))), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0))), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0), 0, 0))]), (("test/test.ml", 898, 33499, 33546), ("test/test.ml", 898, 33499, 33581), 0), [(("test/test.ml", 898, 33499, 33547), ("test/test.ml", 898, 33499, 33580), 0); (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33579), 0)], 0))]), (("test/test.ml", 898, 33499, 33531), ("test/test.ml", 898, 33499, 33582), 0), [(("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33581), 0)], 0)); ((Tag5 ((("Pexp_coerce"), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33596), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0))), (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0), 0, 0); ((("optionA1", (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0))), (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0), 0, 0); ((("core_typeA2", (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0))), (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0), 0, 0)]), (("test/test.ml", 899, 33583, 33597), ("test/test.ml", 899, 33583, 33632), 0), [(("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33631), 0)], 0)))), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33632), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0))), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0))), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0))), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33685), 0), [(("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33684), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0))), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0))), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33686), ("test/test.ml", 899, 33583, 33711), 0), [(("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33710), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0))), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0), 0, 0), [(0, (((("core_typeA2"), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0))), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33712), ("test/test.ml", 899, 33583, 33743), 0), [(("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33742), 0)], 0)]), (("test/test.ml", 899, 33583, 33651), ("test/test.ml", 899, 33583, 33744), 0), [(("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33743), 0)], 0))]), (("test/test.ml", 899, 33583, 33636), ("test/test.ml", 899, 33583, 33745), 0), [(("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33744), 0)], 0)); ((Tag5 ((("Pexp_constant"), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33761), 0)), ((0, ((("constantA0", (("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0))), (("test/test.ml", 900, 33746, 33762), ("test/test.ml", 900, 33746, 33774), 0), [(("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0)], 0)))), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33774), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0))), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0), 0, 0), [(0, (Tag5 ((((("process_constant"), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0))), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0), 0, 0), [(0, (((("constantA0"), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0))), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0), 0, 0))]), (("test/test.ml", 900, 33746, 33793), ("test/test.ml", 900, 33746, 33824), 0), [(("test/test.ml", 900, 33746, 33794), ("test/test.ml", 900, 33746, 33823), 0); (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33822), 0)], 0))]), (("test/test.ml", 900, 33746, 33778), ("test/test.ml", 900, 33746, 33825), 0), [(("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33824), 0)], 0)); ((Tag5 ((("Pexp_constraint"), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33843), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0))), (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0), 0, 0); ((("core_typeA1", (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0))), (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0), 0, 0)]), (("test/test.ml", 901, 33826, 33844), ("test/test.ml", 901, 33826, 33870), 0), [(("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33869), 0)], 0)))), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33870), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0))), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0))), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0))), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33923), 0), [(("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33922), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0))), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0), 0, 0), [(0, (((("core_typeA1"), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0))), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33924), ("test/test.ml", 901, 33826, 33955), 0), [(("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33954), 0)], 0)]), (("test/test.ml", 901, 33826, 33889), ("test/test.ml", 901, 33826, 33956), 0), [(("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33955), 0)], 0))]), (("test/test.ml", 901, 33826, 33874), ("test/test.ml", 901, 33826, 33957), 0), [(("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33956), 0)], 0)); ((Tag5 ((("Pexp_construct"), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 33974), 0)), ((0, (Tag4 ([((("longident_locA0", (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0))), (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0), 0, 0); ((("optionA1", (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0))), (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0), 0, 0)]), (("test/test.ml", 902, 33958, 33975), ("test/test.ml", 902, 33958, 34001), 0), [(("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 34000), 0)], 0)))), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 34001), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0))), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_longident_loc"), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0))), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0))), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34060), 0), [(("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34059), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0))), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0))), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34061), ("test/test.ml", 902, 33958, 34086), 0), [(("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34085), 0)], 0)]), (("test/test.ml", 902, 33958, 34020), ("test/test.ml", 902, 33958, 34087), 0), [(("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34086), 0)], 0))]), (("test/test.ml", 902, 33958, 34005), ("test/test.ml", 902, 33958, 34088), 0), [(("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34087), 0)], 0)); ((Tag5 ((("Pexp_extension"), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34105), 0)), ((0, ((("extensionA0", (("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0))), (("test/test.ml", 903, 34089, 34106), ("test/test.ml", 903, 34089, 34119), 0), [(("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0)], 0)))), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34119), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0))), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0), 0, 0), [(0, (Tag5 ((((("process_extension"), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0))), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0), 0, 0), [(0, (((("extensionA0"), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0))), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0), 0, 0))]), (("test/test.ml", 903, 34089, 34138), ("test/test.ml", 903, 34089, 34171), 0), [(("test/test.ml", 903, 34089, 34139), ("test/test.ml", 903, 34089, 34170), 0); (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34169), 0)], 0))]), (("test/test.ml", 903, 34089, 34123), ("test/test.ml", 903, 34089, 34172), 0), [(("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34171), 0)], 0)); ((Tag5 ((("Pexp_field"), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34185), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0))), (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0))), (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0), 0, 0)]), (("test/test.ml", 904, 34173, 34186), ("test/test.ml", 904, 34173, 34216), 0), [(("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34215), 0)], 0)))), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34216), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0))), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0))), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0))), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34269), 0), [(("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34268), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0))), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0))), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34270), ("test/test.ml", 904, 34173, 34309), 0), [(("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34308), 0)], 0)]), (("test/test.ml", 904, 34173, 34235), ("test/test.ml", 904, 34173, 34310), 0), [(("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34309), 0)], 0))]), (("test/test.ml", 904, 34173, 34220), ("test/test.ml", 904, 34173, 34311), 0), [(("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34310), 0)], 0)); ((Tag5 ((("Pexp_for"), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34322), 0)), ((0, (Tag4 ([((("patternA0", (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0))), (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0), 0, 0); ((("expressionA1", (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0))), (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0), 0, 0); ((("expressionA2", (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0))), (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0), 0, 0); ((("direction_flagA3", (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0))), (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0), 0, 0); ((("expressionA4", (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0))), (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0), 0, 0)]), (("test/test.ml", 905, 34312, 34323), ("test/test.ml", 905, 34312, 34390), 0), [(("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34389), 0)], 0)))), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34390), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0))), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_pattern"), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0))), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0), 0, 0), [(0, (((("patternA0"), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0))), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34437), 0), [(("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34436), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0))), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0))), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34438), ("test/test.ml", 905, 34312, 34471), 0), [(("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34470), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0))), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0))), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34472), ("test/test.ml", 905, 34312, 34505), 0), [(("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34504), 0)], 0); (Tag5 ((((("process_direction_flag"), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0))), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0), 0, 0), [(0, (((("direction_flagA3"), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0))), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34506), ("test/test.ml", 905, 34312, 34547), 0), [(("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34546), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0))), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0), 0, 0), [(0, (((("expressionA4"), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0))), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34548), ("test/test.ml", 905, 34312, 34581), 0), [(("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34580), 0)], 0)]), (("test/test.ml", 905, 34312, 34409), ("test/test.ml", 905, 34312, 34582), 0), [(("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34581), 0)], 0))]), (("test/test.ml", 905, 34312, 34394), ("test/test.ml", 905, 34312, 34583), 0), [(("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34582), 0)], 0)); ((Tag5 ((("Pexp_fun"), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34594), 0)), ((0, (Tag4 ([((("arg_labelA0", (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0))), (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0), 0, 0); ((("optionA1", (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0))), (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0), 0, 0); ((("patternA2", (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0))), (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0), 0, 0); ((("expressionA3", (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0))), (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0), 0, 0)]), (("test/test.ml", 906, 34584, 34595), ("test/test.ml", 906, 34584, 34640), 0), [(("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34639), 0)], 0)))), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34640), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0))), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_arg_label"), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0))), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0), 0, 0), [(0, (((("arg_labelA0"), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0))), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34691), 0), [(("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34690), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0))), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0))), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34692), ("test/test.ml", 906, 34584, 34717), 0), [(("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34716), 0)], 0); (Tag5 ((((("process_pattern"), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0))), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0), 0, 0), [(0, (((("patternA2"), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0))), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34718), ("test/test.ml", 906, 34584, 34745), 0), [(("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34744), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0))), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0), 0, 0), [(0, (((("expressionA3"), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0))), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34746), ("test/test.ml", 906, 34584, 34779), 0), [(("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34778), 0)], 0)]), (("test/test.ml", 906, 34584, 34659), ("test/test.ml", 906, 34584, 34780), 0), [(("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34779), 0)], 0))]), (("test/test.ml", 906, 34584, 34644), ("test/test.ml", 906, 34584, 34781), 0), [(("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34780), 0)], 0)); ((Tag5 ((("Pexp_function"), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34797), 0)), ((0, ((("casesA0", (("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0))), (("test/test.ml", 907, 34782, 34798), ("test/test.ml", 907, 34782, 34807), 0), [(("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0)], 0)))), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34807), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0))), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0), 0, 0), [(0, (Tag5 ((((("process_cases"), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0))), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0), 0, 0), [(0, (((("casesA0"), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0))), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0), 0, 0))]), (("test/test.ml", 907, 34782, 34826), ("test/test.ml", 907, 34782, 34851), 0), [(("test/test.ml", 907, 34782, 34827), ("test/test.ml", 907, 34782, 34850), 0); (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34849), 0)], 0))]), (("test/test.ml", 907, 34782, 34811), ("test/test.ml", 907, 34782, 34852), 0), [(("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34851), 0)], 0)); ((Tag5 ((("Pexp_ident"), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34865), 0)), ((0, ((("longident_locA0", (("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0))), (("test/test.ml", 908, 34853, 34866), ("test/test.ml", 908, 34853, 34883), 0), [(("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0)], 0)))), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34883), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0))), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0))), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0))), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0), 0, 0))]), (("test/test.ml", 908, 34853, 34902), ("test/test.ml", 908, 34853, 34943), 0), [(("test/test.ml", 908, 34853, 34903), ("test/test.ml", 908, 34853, 34942), 0); (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34941), 0)], 0))]), (("test/test.ml", 908, 34853, 34887), ("test/test.ml", 908, 34853, 34944), 0), [(("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34943), 0)], 0)); ((Tag5 ((("Pexp_ifthenelse"), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34962), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0))), (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0), 0, 0); ((("expressionA1", (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0))), (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0), 0, 0); ((("optionA2", (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0))), (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0), 0, 0)]), (("test/test.ml", 909, 34945, 34963), ("test/test.ml", 909, 34945, 34999), 0), [(("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34998), 0)], 0)))), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34999), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0))), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0))), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0))), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35052), 0), [(("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35051), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0))), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0))), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35053), ("test/test.ml", 909, 34945, 35086), 0), [(("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35085), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0))), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0), 0, 0), [(0, (((("optionA2"), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0))), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35087), ("test/test.ml", 909, 34945, 35112), 0), [(("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35111), 0)], 0)]), (("test/test.ml", 909, 34945, 35018), ("test/test.ml", 909, 34945, 35113), 0), [(("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35112), 0)], 0))]), (("test/test.ml", 909, 34945, 35003), ("test/test.ml", 909, 34945, 35114), 0), [(("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35113), 0)], 0)); ((Tag5 ((("Pexp_lazy"), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35126), 0)), ((0, ((("expressionA0", (("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0))), (("test/test.ml", 910, 35115, 35127), ("test/test.ml", 910, 35115, 35141), 0), [(("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0)], 0)))), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35141), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0))), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0))), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0))), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0), 0, 0))]), (("test/test.ml", 910, 35115, 35160), ("test/test.ml", 910, 35115, 35195), 0), [(("test/test.ml", 910, 35115, 35161), ("test/test.ml", 910, 35115, 35194), 0); (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35193), 0)], 0))]), (("test/test.ml", 910, 35115, 35145), ("test/test.ml", 910, 35115, 35196), 0), [(("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35195), 0)], 0)); ((Tag5 ((("Pexp_letexception"), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35216), 0)), ((0, (Tag4 ([((("extension_constructorA0", (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0))), (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0), 0, 0); ((("expressionA1", (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0))), (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0), 0, 0)]), (("test/test.ml", 911, 35197, 35217), ("test/test.ml", 911, 35197, 35255), 0), [(("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35254), 0)], 0)))), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35255), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0))), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_extension_constructor"), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0))), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0), 0, 0), [(0, (((("extension_constructorA0"), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0))), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35330), 0), [(("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35329), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0))), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0))), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35331), ("test/test.ml", 911, 35197, 35364), 0), [(("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35363), 0)], 0)]), (("test/test.ml", 911, 35197, 35274), ("test/test.ml", 911, 35197, 35365), 0), [(("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35364), 0)], 0))]), (("test/test.ml", 911, 35197, 35259), ("test/test.ml", 911, 35197, 35366), 0), [(("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35365), 0)], 0)); ((Tag5 ((("Pexp_letmodule"), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35383), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0))), (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0), 0, 0); ((("module_exprA1", (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0))), (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0), 0, 0); ((("expressionA2", (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0))), (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0), 0, 0)]), (("test/test.ml", 912, 35367, 35384), ("test/test.ml", 912, 35367, 35418), 0), [(("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35417), 0)], 0)))), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35418), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0))), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0))), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0))), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35457), 0), [(("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35456), 0)], 0); (Tag5 ((((("process_module_expr"), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0))), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0), 0, 0), [(0, (((("module_exprA1"), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0))), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35458), ("test/test.ml", 912, 35367, 35493), 0), [(("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35492), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0))), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0))), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35494), ("test/test.ml", 912, 35367, 35527), 0), [(("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35526), 0)], 0)]), (("test/test.ml", 912, 35367, 35437), ("test/test.ml", 912, 35367, 35528), 0), [(("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35527), 0)], 0))]), (("test/test.ml", 912, 35367, 35422), ("test/test.ml", 912, 35367, 35529), 0), [(("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35528), 0)], 0)); ((Tag5 ((("Pexp_letop"), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35542), 0)), ((0, ((("letopA0", (("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0))), (("test/test.ml", 913, 35530, 35543), ("test/test.ml", 913, 35530, 35552), 0), [(("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0)], 0)))), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35552), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0))), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0), 0, 0), [(0, (Tag5 ((((("process_letop"), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0))), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0), 0, 0), [(0, (((("letopA0"), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0))), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0), 0, 0))]), (("test/test.ml", 913, 35530, 35571), ("test/test.ml", 913, 35530, 35596), 0), [(("test/test.ml", 913, 35530, 35572), ("test/test.ml", 913, 35530, 35595), 0); (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35594), 0)], 0))]), (("test/test.ml", 913, 35530, 35556), ("test/test.ml", 913, 35530, 35597), 0), [(("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35596), 0)], 0)); ((Tag5 ((("Pexp_let"), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35608), 0)), ((0, (Tag4 ([((("rec_flagA0", (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0))), (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0), 0, 0); ((("listA1", (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0))), (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0), 0, 0); ((("expressionA2", (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0))), (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0), 0, 0)]), (("test/test.ml", 914, 35598, 35609), ("test/test.ml", 914, 35598, 35641), 0), [(("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35640), 0)], 0)))), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35641), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0))), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_rec_flag"), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0))), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0), 0, 0), [(0, (((("rec_flagA0"), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0))), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35690), 0), [(("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35689), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0))), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0))), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35691), ("test/test.ml", 914, 35598, 35712), 0), [(("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35711), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0))), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0))), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35713), ("test/test.ml", 914, 35598, 35746), 0), [(("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35745), 0)], 0)]), (("test/test.ml", 914, 35598, 35660), ("test/test.ml", 914, 35598, 35747), 0), [(("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35746), 0)], 0))]), (("test/test.ml", 914, 35598, 35645), ("test/test.ml", 914, 35598, 35748), 0), [(("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35747), 0)], 0)); ((Tag5 ((("Pexp_match"), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35761), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0))), (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0), 0, 0); ((("casesA1", (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0))), (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0), 0, 0)]), (("test/test.ml", 915, 35749, 35762), ("test/test.ml", 915, 35749, 35784), 0), [(("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35783), 0)], 0)))), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35784), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0))), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0))), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0))), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35837), 0), [(("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35836), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0))), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0))), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35838), ("test/test.ml", 915, 35749, 35861), 0), [(("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35860), 0)], 0)]), (("test/test.ml", 915, 35749, 35803), ("test/test.ml", 915, 35749, 35862), 0), [(("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35861), 0)], 0))]), (("test/test.ml", 915, 35749, 35788), ("test/test.ml", 915, 35749, 35863), 0), [(("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35862), 0)], 0)); ((Tag5 ((("Pexp_new"), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35874), 0)), ((0, ((("longident_locA0", (("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0))), (("test/test.ml", 916, 35864, 35875), ("test/test.ml", 916, 35864, 35892), 0), [(("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0)], 0)))), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35892), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0))), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0))), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0))), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0), 0, 0))]), (("test/test.ml", 916, 35864, 35911), ("test/test.ml", 916, 35864, 35952), 0), [(("test/test.ml", 916, 35864, 35912), ("test/test.ml", 916, 35864, 35951), 0); (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35950), 0)], 0))]), (("test/test.ml", 916, 35864, 35896), ("test/test.ml", 916, 35864, 35953), 0), [(("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35952), 0)], 0)); ((Tag5 ((("Pexp_newtype"), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35968), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0))), (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0), 0, 0); ((("expressionA1", (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0))), (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0), 0, 0)]), (("test/test.ml", 917, 35954, 35969), ("test/test.ml", 917, 35954, 35989), 0), [(("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35988), 0)], 0)))), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35989), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0))), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0))), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0))), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36028), 0), [(("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36027), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0))), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0))), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36029), ("test/test.ml", 917, 35954, 36062), 0), [(("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36061), 0)], 0)]), (("test/test.ml", 917, 35954, 36008), ("test/test.ml", 917, 35954, 36063), 0), [(("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36062), 0)], 0))]), (("test/test.ml", 917, 35954, 35993), ("test/test.ml", 917, 35954, 36064), 0), [(("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36063), 0)], 0)); ((Tag5 ((("Pexp_object"), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36078), 0)), ((0, ((("class_structureA0", (("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0))), (("test/test.ml", 918, 36065, 36079), ("test/test.ml", 918, 36065, 36098), 0), [(("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0)], 0)))), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36098), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0))), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0), 0, 0), [(0, (Tag5 ((((("process_class_structure"), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0))), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0), 0, 0), [(0, (((("class_structureA0"), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0))), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0), 0, 0))]), (("test/test.ml", 918, 36065, 36117), ("test/test.ml", 918, 36065, 36162), 0), [(("test/test.ml", 918, 36065, 36118), ("test/test.ml", 918, 36065, 36161), 0); (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36160), 0)], 0))]), (("test/test.ml", 918, 36065, 36102), ("test/test.ml", 918, 36065, 36163), 0), [(("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36162), 0)], 0)); ((Tag5 ((("Pexp_open"), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36175), 0)), ((0, (Tag4 ([((("open_declarationA0", (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0))), (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0), 0, 0); ((("expressionA1", (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0))), (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0), 0, 0)]), (("test/test.ml", 919, 36164, 36176), ("test/test.ml", 919, 36164, 36209), 0), [(("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36208), 0)], 0)))), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36209), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0))), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_open_declaration"), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0))), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0), 0, 0), [(0, (((("open_declarationA0"), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0))), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36274), 0), [(("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36273), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0))), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0))), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36275), ("test/test.ml", 919, 36164, 36308), 0), [(("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36307), 0)], 0)]), (("test/test.ml", 919, 36164, 36228), ("test/test.ml", 919, 36164, 36309), 0), [(("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36308), 0)], 0))]), (("test/test.ml", 919, 36164, 36213), ("test/test.ml", 919, 36164, 36310), 0), [(("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36309), 0)], 0)); ((Tag5 ((("Pexp_override"), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36326), 0)), ((0, ((("listA0", (("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0))), (("test/test.ml", 920, 36311, 36327), ("test/test.ml", 920, 36311, 36335), 0), [(("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0)], 0)))), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36335), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0))), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0))), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0))), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0), 0, 0))]), (("test/test.ml", 920, 36311, 36354), ("test/test.ml", 920, 36311, 36377), 0), [(("test/test.ml", 920, 36311, 36355), ("test/test.ml", 920, 36311, 36376), 0); (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36375), 0)], 0))]), (("test/test.ml", 920, 36311, 36339), ("test/test.ml", 920, 36311, 36378), 0), [(("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36377), 0)], 0)); ((Tag5 ((("Pexp_pack"), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36390), 0)), ((0, ((("module_exprA0", (("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0))), (("test/test.ml", 921, 36379, 36391), ("test/test.ml", 921, 36379, 36406), 0), [(("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0)], 0)))), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36406), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0))), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0), 0, 0), [(0, (Tag5 ((((("process_module_expr"), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0))), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0), 0, 0), [(0, (((("module_exprA0"), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0))), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0), 0, 0))]), (("test/test.ml", 921, 36379, 36425), ("test/test.ml", 921, 36379, 36462), 0), [(("test/test.ml", 921, 36379, 36426), ("test/test.ml", 921, 36379, 36461), 0); (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36460), 0)], 0))]), (("test/test.ml", 921, 36379, 36410), ("test/test.ml", 921, 36379, 36463), 0), [(("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36462), 0)], 0)); ((Tag5 ((("Pexp_poly"), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36475), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0))), (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0), 0, 0); ((("optionA1", (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0))), (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0), 0, 0)]), (("test/test.ml", 922, 36464, 36476), ("test/test.ml", 922, 36464, 36499), 0), [(("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36498), 0)], 0)))), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36499), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0))), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0))), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0))), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36552), 0), [(("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36551), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0))), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0))), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36553), ("test/test.ml", 922, 36464, 36578), 0), [(("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36577), 0)], 0)]), (("test/test.ml", 922, 36464, 36518), ("test/test.ml", 922, 36464, 36579), 0), [(("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36578), 0)], 0))]), (("test/test.ml", 922, 36464, 36503), ("test/test.ml", 922, 36464, 36580), 0), [(("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36579), 0)], 0)); ((Tag5 ((("Pexp_record"), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36594), 0)), ((0, (Tag4 ([((("listA0", (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0))), (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0), 0, 0); ((("optionA1", (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0))), (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0), 0, 0)]), (("test/test.ml", 923, 36581, 36595), ("test/test.ml", 923, 36581, 36612), 0), [(("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36611), 0)], 0)))), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36612), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0))), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_list"), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0))), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0))), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36653), 0), [(("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36652), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0))), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0))), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36654), ("test/test.ml", 923, 36581, 36679), 0), [(("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36678), 0)], 0)]), (("test/test.ml", 923, 36581, 36631), ("test/test.ml", 923, 36581, 36680), 0), [(("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36679), 0)], 0))]), (("test/test.ml", 923, 36581, 36616), ("test/test.ml", 923, 36581, 36681), 0), [(("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36680), 0)], 0)); ((Tag5 ((("Pexp_send"), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36693), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0))), (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0), 0, 0); ((("locA1", (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0))), (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0), 0, 0)]), (("test/test.ml", 924, 36682, 36694), ("test/test.ml", 924, 36682, 36714), 0), [(("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36713), 0)], 0)))), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36714), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0))), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0))), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0))), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36767), 0), [(("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36766), 0)], 0); (Tag5 ((((("process_loc"), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0))), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0), 0, 0), [(0, (((("locA1"), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0))), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36768), ("test/test.ml", 924, 36682, 36787), 0), [(("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36786), 0)], 0)]), (("test/test.ml", 924, 36682, 36733), ("test/test.ml", 924, 36682, 36788), 0), [(("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36787), 0)], 0))]), (("test/test.ml", 924, 36682, 36718), ("test/test.ml", 924, 36682, 36789), 0), [(("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36788), 0)], 0)); ((Tag5 ((("Pexp_sequence"), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36805), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0))), (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0), 0, 0); ((("expressionA1", (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0))), (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0), 0, 0)]), (("test/test.ml", 925, 36790, 36806), ("test/test.ml", 925, 36790, 36833), 0), [(("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36832), 0)], 0)))), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36833), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0))), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0))), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0))), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36886), 0), [(("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36885), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0))), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0))), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36887), ("test/test.ml", 925, 36790, 36920), 0), [(("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36919), 0)], 0)]), (("test/test.ml", 925, 36790, 36852), ("test/test.ml", 925, 36790, 36921), 0), [(("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36920), 0)], 0))]), (("test/test.ml", 925, 36790, 36837), ("test/test.ml", 925, 36790, 36922), 0), [(("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36921), 0)], 0)); ((Tag5 ((("Pexp_setfield"), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36938), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0))), (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0))), (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0), 0, 0); ((("expressionA2", (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0))), (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0), 0, 0)]), (("test/test.ml", 926, 36923, 36939), ("test/test.ml", 926, 36923, 36982), 0), [(("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36981), 0)], 0)))), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36982), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0))), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0))), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0))), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37035), 0), [(("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37034), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0))), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0))), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37036), ("test/test.ml", 926, 36923, 37075), 0), [(("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37074), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0))), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0))), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37076), ("test/test.ml", 926, 36923, 37109), 0), [(("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37108), 0)], 0)]), (("test/test.ml", 926, 36923, 37001), ("test/test.ml", 926, 36923, 37110), 0), [(("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37109), 0)], 0))]), (("test/test.ml", 926, 36923, 36986), ("test/test.ml", 926, 36923, 37111), 0), [(("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37110), 0)], 0)); ((Tag5 ((("Pexp_setinstvar"), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37129), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0))), (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0), 0, 0); ((("expressionA1", (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0))), (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0), 0, 0)]), (("test/test.ml", 927, 37112, 37130), ("test/test.ml", 927, 37112, 37150), 0), [(("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37149), 0)], 0)))), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37150), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0))), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0))), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0))), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37189), 0), [(("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37188), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0))), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0))), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37190), ("test/test.ml", 927, 37112, 37223), 0), [(("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37222), 0)], 0)]), (("test/test.ml", 927, 37112, 37169), ("test/test.ml", 927, 37112, 37224), 0), [(("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37223), 0)], 0))]), (("test/test.ml", 927, 37112, 37154), ("test/test.ml", 927, 37112, 37225), 0), [(("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37224), 0)], 0)); ((Tag5 ((("Pexp_try"), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37236), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0))), (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0), 0, 0); ((("casesA1", (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0))), (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0), 0, 0)]), (("test/test.ml", 928, 37226, 37237), ("test/test.ml", 928, 37226, 37259), 0), [(("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37258), 0)], 0)))), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37259), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0))), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0))), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0))), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37312), 0), [(("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37311), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0))), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0))), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37313), ("test/test.ml", 928, 37226, 37336), 0), [(("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37335), 0)], 0)]), (("test/test.ml", 928, 37226, 37278), ("test/test.ml", 928, 37226, 37337), 0), [(("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37336), 0)], 0))]), (("test/test.ml", 928, 37226, 37263), ("test/test.ml", 928, 37226, 37338), 0), [(("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37337), 0)], 0)); ((Tag5 ((("Pexp_tuple"), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37351), 0)), ((0, ((("listA0", (("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0))), (("test/test.ml", 929, 37339, 37352), ("test/test.ml", 929, 37339, 37360), 0), [(("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0)], 0)))), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37360), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0))), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0))), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0))), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0), 0, 0))]), (("test/test.ml", 929, 37339, 37379), ("test/test.ml", 929, 37339, 37402), 0), [(("test/test.ml", 929, 37339, 37380), ("test/test.ml", 929, 37339, 37401), 0); (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37400), 0)], 0))]), (("test/test.ml", 929, 37339, 37364), ("test/test.ml", 929, 37339, 37403), 0), [(("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37402), 0)], 0)); ((Tag5 ((("Pexp_unreachable"), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0)), 0), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0))), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0), 0, 0), [(0, (Tag9 ((("()"), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0)), 0), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0), 0, 0))]), (("test/test.ml", 930, 37404, 37426), ("test/test.ml", 930, 37404, 37444), 0), [(("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37443), 0)], 0)); ((Tag5 ((("Pexp_variant"), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37459), 0)), ((0, (Tag4 ([((("labelA0", (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0))), (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0), 0, 0); ((("optionA1", (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0))), (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0), 0, 0)]), (("test/test.ml", 931, 37445, 37460), ("test/test.ml", 931, 37445, 37478), 0), [(("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37477), 0)], 0)))), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37478), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0))), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_label"), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0))), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0), 0, 0), [(0, (((("labelA0"), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0))), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37521), 0), [(("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37520), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0))), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0))), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37522), ("test/test.ml", 931, 37445, 37547), 0), [(("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37546), 0)], 0)]), (("test/test.ml", 931, 37445, 37497), ("test/test.ml", 931, 37445, 37548), 0), [(("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37547), 0)], 0))]), (("test/test.ml", 931, 37445, 37482), ("test/test.ml", 931, 37445, 37549), 0), [(("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37548), 0)], 0)); ((Tag5 ((("Pexp_while"), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37562), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0))), (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0), 0, 0); ((("expressionA1", (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0))), (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0), 0, 0)]), (("test/test.ml", 932, 37550, 37563), ("test/test.ml", 932, 37550, 37590), 0), [(("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37589), 0)], 0)))), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37590), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0))), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0))), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0))), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37643), 0), [(("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37642), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0))), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0))), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37644), ("test/test.ml", 932, 37550, 37677), 0), [(("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37676), 0)], 0)]), (("test/test.ml", 932, 37550, 37609), ("test/test.ml", 932, 37550, 37678), 0), [(("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37677), 0)], 0))]), (("test/test.ml", 932, 37550, 37594), ("test/test.ml", 932, 37550, 37679), 0), [(("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37678), 0)], 0))]), (("test/test.ml", 895, 33305, 33307), ("test/test.ml", 932, 37550, 37679), 0), 0, 0)), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 932, 37550, 37679), 1), 0, 0), 0, (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0))])
("DEBUG:value_binding.pat:", ((("foo", (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0))), (("test/test.ml", 894, 33292, 33296), ("test/test.ml", 894, 33292, 33299), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0))), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 894, 33292, 33302), 0), [(("test/test.ml", 894, 33292, 33300), ("test/test.ml", 894, 33292, 33301), 0)], 0), (Tag6 ((((("x"), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0))), (("test/test.ml", 895, 33305, 33313), ("test/test.ml", 895, 33305, 33314), 0), 0, 0), [((Tag5 ((("Pexp_apply"), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33334), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0))), (("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33348), 0), 0, 0); ((("listA1", (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0))), (("test/test.ml", 896, 33320, 33349), ("test/test.ml", 896, 33320, 33355), 0), 0, 0)]), (("test/test.ml", 896, 33320, 33335), ("test/test.ml", 896, 33320, 33356), 0), [(("test/test.ml", 896, 33320, 33336), ("test/test.ml", 896, 33320, 33355), 0)], 0)))), (("test/test.ml", 896, 33320, 33324), ("test/test.ml", 896, 33320, 33356), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0))), (("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33374), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0))), (("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33395), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0))), (("test/test.ml", 896, 33320, 33396), ("test/test.ml", 896, 33320, 33408), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33409), 0), [(("test/test.ml", 896, 33320, 33377), ("test/test.ml", 896, 33320, 33408), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0))), (("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33423), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0))), (("test/test.ml", 896, 33320, 33424), ("test/test.ml", 896, 33320, 33430), 0), 0, 0))]), (("test/test.ml", 896, 33320, 33410), ("test/test.ml", 896, 33320, 33431), 0), [(("test/test.ml", 896, 33320, 33411), ("test/test.ml", 896, 33320, 33430), 0)], 0)]), (("test/test.ml", 896, 33320, 33375), ("test/test.ml", 896, 33320, 33432), 0), [(("test/test.ml", 896, 33320, 33376), ("test/test.ml", 896, 33320, 33431), 0)], 0))]), (("test/test.ml", 896, 33320, 33360), ("test/test.ml", 896, 33320, 33433), 0), [(("test/test.ml", 896, 33320, 33361), ("test/test.ml", 896, 33320, 33432), 0)], 0)); ((Tag5 ((("Pexp_array"), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33446), 0)), ((0, ((("listA0", (("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0))), (("test/test.ml", 897, 33434, 33447), ("test/test.ml", 897, 33434, 33455), 0), [(("test/test.ml", 897, 33434, 33448), ("test/test.ml", 897, 33434, 33454), 0)], 0)))), (("test/test.ml", 897, 33434, 33436), ("test/test.ml", 897, 33434, 33455), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0))), (("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33473), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0))), (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33488), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0))), (("test/test.ml", 897, 33434, 33489), ("test/test.ml", 897, 33434, 33495), 0), 0, 0))]), (("test/test.ml", 897, 33434, 33474), ("test/test.ml", 897, 33434, 33497), 0), [(("test/test.ml", 897, 33434, 33475), ("test/test.ml", 897, 33434, 33496), 0); (("test/test.ml", 897, 33434, 33476), ("test/test.ml", 897, 33434, 33495), 0)], 0))]), (("test/test.ml", 897, 33434, 33459), ("test/test.ml", 897, 33434, 33498), 0), [(("test/test.ml", 897, 33434, 33460), ("test/test.ml", 897, 33434, 33497), 0)], 0)); ((Tag5 ((("Pexp_assert"), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33512), 0)), ((0, ((("expressionA0", (("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0))), (("test/test.ml", 898, 33499, 33513), ("test/test.ml", 898, 33499, 33527), 0), [(("test/test.ml", 898, 33499, 33514), ("test/test.ml", 898, 33499, 33526), 0)], 0)))), (("test/test.ml", 898, 33499, 33501), ("test/test.ml", 898, 33499, 33527), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0))), (("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33545), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0))), (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33566), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0))), (("test/test.ml", 898, 33499, 33567), ("test/test.ml", 898, 33499, 33579), 0), 0, 0))]), (("test/test.ml", 898, 33499, 33546), ("test/test.ml", 898, 33499, 33581), 0), [(("test/test.ml", 898, 33499, 33547), ("test/test.ml", 898, 33499, 33580), 0); (("test/test.ml", 898, 33499, 33548), ("test/test.ml", 898, 33499, 33579), 0)], 0))]), (("test/test.ml", 898, 33499, 33531), ("test/test.ml", 898, 33499, 33582), 0), [(("test/test.ml", 898, 33499, 33532), ("test/test.ml", 898, 33499, 33581), 0)], 0)); ((Tag5 ((("Pexp_coerce"), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33596), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0))), (("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33610), 0), 0, 0); ((("optionA1", (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0))), (("test/test.ml", 899, 33583, 33611), ("test/test.ml", 899, 33583, 33619), 0), 0, 0); ((("core_typeA2", (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0))), (("test/test.ml", 899, 33583, 33620), ("test/test.ml", 899, 33583, 33631), 0), 0, 0)]), (("test/test.ml", 899, 33583, 33597), ("test/test.ml", 899, 33583, 33632), 0), [(("test/test.ml", 899, 33583, 33598), ("test/test.ml", 899, 33583, 33631), 0)], 0)))), (("test/test.ml", 899, 33583, 33585), ("test/test.ml", 899, 33583, 33632), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0))), (("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33650), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0))), (("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33671), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0))), (("test/test.ml", 899, 33583, 33672), ("test/test.ml", 899, 33583, 33684), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33685), 0), [(("test/test.ml", 899, 33583, 33653), ("test/test.ml", 899, 33583, 33684), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0))), (("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33701), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0))), (("test/test.ml", 899, 33583, 33702), ("test/test.ml", 899, 33583, 33710), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33686), ("test/test.ml", 899, 33583, 33711), 0), [(("test/test.ml", 899, 33583, 33687), ("test/test.ml", 899, 33583, 33710), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0))), (("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33730), 0), 0, 0), [(0, (((("core_typeA2"), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0))), (("test/test.ml", 899, 33583, 33731), ("test/test.ml", 899, 33583, 33742), 0), 0, 0))]), (("test/test.ml", 899, 33583, 33712), ("test/test.ml", 899, 33583, 33743), 0), [(("test/test.ml", 899, 33583, 33713), ("test/test.ml", 899, 33583, 33742), 0)], 0)]), (("test/test.ml", 899, 33583, 33651), ("test/test.ml", 899, 33583, 33744), 0), [(("test/test.ml", 899, 33583, 33652), ("test/test.ml", 899, 33583, 33743), 0)], 0))]), (("test/test.ml", 899, 33583, 33636), ("test/test.ml", 899, 33583, 33745), 0), [(("test/test.ml", 899, 33583, 33637), ("test/test.ml", 899, 33583, 33744), 0)], 0)); ((Tag5 ((("Pexp_constant"), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33761), 0)), ((0, ((("constantA0", (("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0))), (("test/test.ml", 900, 33746, 33762), ("test/test.ml", 900, 33746, 33774), 0), [(("test/test.ml", 900, 33746, 33763), ("test/test.ml", 900, 33746, 33773), 0)], 0)))), (("test/test.ml", 900, 33746, 33748), ("test/test.ml", 900, 33746, 33774), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0))), (("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33792), 0), 0, 0), [(0, (Tag5 ((((("process_constant"), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0))), (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33811), 0), 0, 0), [(0, (((("constantA0"), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0))), (("test/test.ml", 900, 33746, 33812), ("test/test.ml", 900, 33746, 33822), 0), 0, 0))]), (("test/test.ml", 900, 33746, 33793), ("test/test.ml", 900, 33746, 33824), 0), [(("test/test.ml", 900, 33746, 33794), ("test/test.ml", 900, 33746, 33823), 0); (("test/test.ml", 900, 33746, 33795), ("test/test.ml", 900, 33746, 33822), 0)], 0))]), (("test/test.ml", 900, 33746, 33778), ("test/test.ml", 900, 33746, 33825), 0), [(("test/test.ml", 900, 33746, 33779), ("test/test.ml", 900, 33746, 33824), 0)], 0)); ((Tag5 ((("Pexp_constraint"), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33843), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0))), (("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33857), 0), 0, 0); ((("core_typeA1", (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0))), (("test/test.ml", 901, 33826, 33858), ("test/test.ml", 901, 33826, 33869), 0), 0, 0)]), (("test/test.ml", 901, 33826, 33844), ("test/test.ml", 901, 33826, 33870), 0), [(("test/test.ml", 901, 33826, 33845), ("test/test.ml", 901, 33826, 33869), 0)], 0)))), (("test/test.ml", 901, 33826, 33828), ("test/test.ml", 901, 33826, 33870), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0))), (("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33888), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0))), (("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33909), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0))), (("test/test.ml", 901, 33826, 33910), ("test/test.ml", 901, 33826, 33922), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33923), 0), [(("test/test.ml", 901, 33826, 33891), ("test/test.ml", 901, 33826, 33922), 0)], 0); (Tag5 ((((("process_core_type"), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0))), (("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33942), 0), 0, 0), [(0, (((("core_typeA1"), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0))), (("test/test.ml", 901, 33826, 33943), ("test/test.ml", 901, 33826, 33954), 0), 0, 0))]), (("test/test.ml", 901, 33826, 33924), ("test/test.ml", 901, 33826, 33955), 0), [(("test/test.ml", 901, 33826, 33925), ("test/test.ml", 901, 33826, 33954), 0)], 0)]), (("test/test.ml", 901, 33826, 33889), ("test/test.ml", 901, 33826, 33956), 0), [(("test/test.ml", 901, 33826, 33890), ("test/test.ml", 901, 33826, 33955), 0)], 0))]), (("test/test.ml", 901, 33826, 33874), ("test/test.ml", 901, 33826, 33957), 0), [(("test/test.ml", 901, 33826, 33875), ("test/test.ml", 901, 33826, 33956), 0)], 0)); ((Tag5 ((("Pexp_construct"), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 33974), 0)), ((0, (Tag4 ([((("longident_locA0", (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0))), (("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 33991), 0), 0, 0); ((("optionA1", (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0))), (("test/test.ml", 902, 33958, 33992), ("test/test.ml", 902, 33958, 34000), 0), 0, 0)]), (("test/test.ml", 902, 33958, 33975), ("test/test.ml", 902, 33958, 34001), 0), [(("test/test.ml", 902, 33958, 33976), ("test/test.ml", 902, 33958, 34000), 0)], 0)))), (("test/test.ml", 902, 33958, 33960), ("test/test.ml", 902, 33958, 34001), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0))), (("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34019), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_longident_loc"), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0))), (("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34043), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0))), (("test/test.ml", 902, 33958, 34044), ("test/test.ml", 902, 33958, 34059), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34060), 0), [(("test/test.ml", 902, 33958, 34022), ("test/test.ml", 902, 33958, 34059), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0))), (("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34076), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0))), (("test/test.ml", 902, 33958, 34077), ("test/test.ml", 902, 33958, 34085), 0), 0, 0))]), (("test/test.ml", 902, 33958, 34061), ("test/test.ml", 902, 33958, 34086), 0), [(("test/test.ml", 902, 33958, 34062), ("test/test.ml", 902, 33958, 34085), 0)], 0)]), (("test/test.ml", 902, 33958, 34020), ("test/test.ml", 902, 33958, 34087), 0), [(("test/test.ml", 902, 33958, 34021), ("test/test.ml", 902, 33958, 34086), 0)], 0))]), (("test/test.ml", 902, 33958, 34005), ("test/test.ml", 902, 33958, 34088), 0), [(("test/test.ml", 902, 33958, 34006), ("test/test.ml", 902, 33958, 34087), 0)], 0)); ((Tag5 ((("Pexp_extension"), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34105), 0)), ((0, ((("extensionA0", (("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0))), (("test/test.ml", 903, 34089, 34106), ("test/test.ml", 903, 34089, 34119), 0), [(("test/test.ml", 903, 34089, 34107), ("test/test.ml", 903, 34089, 34118), 0)], 0)))), (("test/test.ml", 903, 34089, 34091), ("test/test.ml", 903, 34089, 34119), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0))), (("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34137), 0), 0, 0), [(0, (Tag5 ((((("process_extension"), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0))), (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34157), 0), 0, 0), [(0, (((("extensionA0"), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0))), (("test/test.ml", 903, 34089, 34158), ("test/test.ml", 903, 34089, 34169), 0), 0, 0))]), (("test/test.ml", 903, 34089, 34138), ("test/test.ml", 903, 34089, 34171), 0), [(("test/test.ml", 903, 34089, 34139), ("test/test.ml", 903, 34089, 34170), 0); (("test/test.ml", 903, 34089, 34140), ("test/test.ml", 903, 34089, 34169), 0)], 0))]), (("test/test.ml", 903, 34089, 34123), ("test/test.ml", 903, 34089, 34172), 0), [(("test/test.ml", 903, 34089, 34124), ("test/test.ml", 903, 34089, 34171), 0)], 0)); ((Tag5 ((("Pexp_field"), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34185), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0))), (("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34199), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0))), (("test/test.ml", 904, 34173, 34200), ("test/test.ml", 904, 34173, 34215), 0), 0, 0)]), (("test/test.ml", 904, 34173, 34186), ("test/test.ml", 904, 34173, 34216), 0), [(("test/test.ml", 904, 34173, 34187), ("test/test.ml", 904, 34173, 34215), 0)], 0)))), (("test/test.ml", 904, 34173, 34175), ("test/test.ml", 904, 34173, 34216), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0))), (("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34234), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0))), (("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34255), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0))), (("test/test.ml", 904, 34173, 34256), ("test/test.ml", 904, 34173, 34268), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34269), 0), [(("test/test.ml", 904, 34173, 34237), ("test/test.ml", 904, 34173, 34268), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0))), (("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34292), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0))), (("test/test.ml", 904, 34173, 34293), ("test/test.ml", 904, 34173, 34308), 0), 0, 0))]), (("test/test.ml", 904, 34173, 34270), ("test/test.ml", 904, 34173, 34309), 0), [(("test/test.ml", 904, 34173, 34271), ("test/test.ml", 904, 34173, 34308), 0)], 0)]), (("test/test.ml", 904, 34173, 34235), ("test/test.ml", 904, 34173, 34310), 0), [(("test/test.ml", 904, 34173, 34236), ("test/test.ml", 904, 34173, 34309), 0)], 0))]), (("test/test.ml", 904, 34173, 34220), ("test/test.ml", 904, 34173, 34311), 0), [(("test/test.ml", 904, 34173, 34221), ("test/test.ml", 904, 34173, 34310), 0)], 0)); ((Tag5 ((("Pexp_for"), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34322), 0)), ((0, (Tag4 ([((("patternA0", (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0))), (("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34333), 0), 0, 0); ((("expressionA1", (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0))), (("test/test.ml", 905, 34312, 34334), ("test/test.ml", 905, 34312, 34346), 0), 0, 0); ((("expressionA2", (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0))), (("test/test.ml", 905, 34312, 34347), ("test/test.ml", 905, 34312, 34359), 0), 0, 0); ((("direction_flagA3", (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0))), (("test/test.ml", 905, 34312, 34360), ("test/test.ml", 905, 34312, 34376), 0), 0, 0); ((("expressionA4", (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0))), (("test/test.ml", 905, 34312, 34377), ("test/test.ml", 905, 34312, 34389), 0), 0, 0)]), (("test/test.ml", 905, 34312, 34323), ("test/test.ml", 905, 34312, 34390), 0), [(("test/test.ml", 905, 34312, 34324), ("test/test.ml", 905, 34312, 34389), 0)], 0)))), (("test/test.ml", 905, 34312, 34314), ("test/test.ml", 905, 34312, 34390), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0))), (("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34408), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_pattern"), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0))), (("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34426), 0), 0, 0), [(0, (((("patternA0"), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0))), (("test/test.ml", 905, 34312, 34427), ("test/test.ml", 905, 34312, 34436), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34437), 0), [(("test/test.ml", 905, 34312, 34411), ("test/test.ml", 905, 34312, 34436), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0))), (("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34457), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0))), (("test/test.ml", 905, 34312, 34458), ("test/test.ml", 905, 34312, 34470), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34438), ("test/test.ml", 905, 34312, 34471), 0), [(("test/test.ml", 905, 34312, 34439), ("test/test.ml", 905, 34312, 34470), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0))), (("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34491), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0))), (("test/test.ml", 905, 34312, 34492), ("test/test.ml", 905, 34312, 34504), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34472), ("test/test.ml", 905, 34312, 34505), 0), [(("test/test.ml", 905, 34312, 34473), ("test/test.ml", 905, 34312, 34504), 0)], 0); (Tag5 ((((("process_direction_flag"), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0))), (("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34529), 0), 0, 0), [(0, (((("direction_flagA3"), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0))), (("test/test.ml", 905, 34312, 34530), ("test/test.ml", 905, 34312, 34546), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34506), ("test/test.ml", 905, 34312, 34547), 0), [(("test/test.ml", 905, 34312, 34507), ("test/test.ml", 905, 34312, 34546), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0))), (("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34567), 0), 0, 0), [(0, (((("expressionA4"), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0))), (("test/test.ml", 905, 34312, 34568), ("test/test.ml", 905, 34312, 34580), 0), 0, 0))]), (("test/test.ml", 905, 34312, 34548), ("test/test.ml", 905, 34312, 34581), 0), [(("test/test.ml", 905, 34312, 34549), ("test/test.ml", 905, 34312, 34580), 0)], 0)]), (("test/test.ml", 905, 34312, 34409), ("test/test.ml", 905, 34312, 34582), 0), [(("test/test.ml", 905, 34312, 34410), ("test/test.ml", 905, 34312, 34581), 0)], 0))]), (("test/test.ml", 905, 34312, 34394), ("test/test.ml", 905, 34312, 34583), 0), [(("test/test.ml", 905, 34312, 34395), ("test/test.ml", 905, 34312, 34582), 0)], 0)); ((Tag5 ((("Pexp_fun"), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34594), 0)), ((0, (Tag4 ([((("arg_labelA0", (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0))), (("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34607), 0), 0, 0); ((("optionA1", (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0))), (("test/test.ml", 906, 34584, 34608), ("test/test.ml", 906, 34584, 34616), 0), 0, 0); ((("patternA2", (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0))), (("test/test.ml", 906, 34584, 34617), ("test/test.ml", 906, 34584, 34626), 0), 0, 0); ((("expressionA3", (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0))), (("test/test.ml", 906, 34584, 34627), ("test/test.ml", 906, 34584, 34639), 0), 0, 0)]), (("test/test.ml", 906, 34584, 34595), ("test/test.ml", 906, 34584, 34640), 0), [(("test/test.ml", 906, 34584, 34596), ("test/test.ml", 906, 34584, 34639), 0)], 0)))), (("test/test.ml", 906, 34584, 34586), ("test/test.ml", 906, 34584, 34640), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0))), (("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34658), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_arg_label"), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0))), (("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34678), 0), 0, 0), [(0, (((("arg_labelA0"), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0))), (("test/test.ml", 906, 34584, 34679), ("test/test.ml", 906, 34584, 34690), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34691), 0), [(("test/test.ml", 906, 34584, 34661), ("test/test.ml", 906, 34584, 34690), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0))), (("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34707), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0))), (("test/test.ml", 906, 34584, 34708), ("test/test.ml", 906, 34584, 34716), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34692), ("test/test.ml", 906, 34584, 34717), 0), [(("test/test.ml", 906, 34584, 34693), ("test/test.ml", 906, 34584, 34716), 0)], 0); (Tag5 ((((("process_pattern"), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0))), (("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34734), 0), 0, 0), [(0, (((("patternA2"), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0))), (("test/test.ml", 906, 34584, 34735), ("test/test.ml", 906, 34584, 34744), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34718), ("test/test.ml", 906, 34584, 34745), 0), [(("test/test.ml", 906, 34584, 34719), ("test/test.ml", 906, 34584, 34744), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0))), (("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34765), 0), 0, 0), [(0, (((("expressionA3"), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0))), (("test/test.ml", 906, 34584, 34766), ("test/test.ml", 906, 34584, 34778), 0), 0, 0))]), (("test/test.ml", 906, 34584, 34746), ("test/test.ml", 906, 34584, 34779), 0), [(("test/test.ml", 906, 34584, 34747), ("test/test.ml", 906, 34584, 34778), 0)], 0)]), (("test/test.ml", 906, 34584, 34659), ("test/test.ml", 906, 34584, 34780), 0), [(("test/test.ml", 906, 34584, 34660), ("test/test.ml", 906, 34584, 34779), 0)], 0))]), (("test/test.ml", 906, 34584, 34644), ("test/test.ml", 906, 34584, 34781), 0), [(("test/test.ml", 906, 34584, 34645), ("test/test.ml", 906, 34584, 34780), 0)], 0)); ((Tag5 ((("Pexp_function"), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34797), 0)), ((0, ((("casesA0", (("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0))), (("test/test.ml", 907, 34782, 34798), ("test/test.ml", 907, 34782, 34807), 0), [(("test/test.ml", 907, 34782, 34799), ("test/test.ml", 907, 34782, 34806), 0)], 0)))), (("test/test.ml", 907, 34782, 34784), ("test/test.ml", 907, 34782, 34807), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0))), (("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34825), 0), 0, 0), [(0, (Tag5 ((((("process_cases"), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0))), (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34841), 0), 0, 0), [(0, (((("casesA0"), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0))), (("test/test.ml", 907, 34782, 34842), ("test/test.ml", 907, 34782, 34849), 0), 0, 0))]), (("test/test.ml", 907, 34782, 34826), ("test/test.ml", 907, 34782, 34851), 0), [(("test/test.ml", 907, 34782, 34827), ("test/test.ml", 907, 34782, 34850), 0); (("test/test.ml", 907, 34782, 34828), ("test/test.ml", 907, 34782, 34849), 0)], 0))]), (("test/test.ml", 907, 34782, 34811), ("test/test.ml", 907, 34782, 34852), 0), [(("test/test.ml", 907, 34782, 34812), ("test/test.ml", 907, 34782, 34851), 0)], 0)); ((Tag5 ((("Pexp_ident"), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34865), 0)), ((0, ((("longident_locA0", (("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0))), (("test/test.ml", 908, 34853, 34866), ("test/test.ml", 908, 34853, 34883), 0), [(("test/test.ml", 908, 34853, 34867), ("test/test.ml", 908, 34853, 34882), 0)], 0)))), (("test/test.ml", 908, 34853, 34855), ("test/test.ml", 908, 34853, 34883), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0))), (("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34901), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0))), (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34925), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0))), (("test/test.ml", 908, 34853, 34926), ("test/test.ml", 908, 34853, 34941), 0), 0, 0))]), (("test/test.ml", 908, 34853, 34902), ("test/test.ml", 908, 34853, 34943), 0), [(("test/test.ml", 908, 34853, 34903), ("test/test.ml", 908, 34853, 34942), 0); (("test/test.ml", 908, 34853, 34904), ("test/test.ml", 908, 34853, 34941), 0)], 0))]), (("test/test.ml", 908, 34853, 34887), ("test/test.ml", 908, 34853, 34944), 0), [(("test/test.ml", 908, 34853, 34888), ("test/test.ml", 908, 34853, 34943), 0)], 0)); ((Tag5 ((("Pexp_ifthenelse"), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34962), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0))), (("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34976), 0), 0, 0); ((("expressionA1", (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0))), (("test/test.ml", 909, 34945, 34977), ("test/test.ml", 909, 34945, 34989), 0), 0, 0); ((("optionA2", (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0))), (("test/test.ml", 909, 34945, 34990), ("test/test.ml", 909, 34945, 34998), 0), 0, 0)]), (("test/test.ml", 909, 34945, 34963), ("test/test.ml", 909, 34945, 34999), 0), [(("test/test.ml", 909, 34945, 34964), ("test/test.ml", 909, 34945, 34998), 0)], 0)))), (("test/test.ml", 909, 34945, 34947), ("test/test.ml", 909, 34945, 34999), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0))), (("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35017), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0))), (("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35038), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0))), (("test/test.ml", 909, 34945, 35039), ("test/test.ml", 909, 34945, 35051), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35052), 0), [(("test/test.ml", 909, 34945, 35020), ("test/test.ml", 909, 34945, 35051), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0))), (("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35072), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0))), (("test/test.ml", 909, 34945, 35073), ("test/test.ml", 909, 34945, 35085), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35053), ("test/test.ml", 909, 34945, 35086), 0), [(("test/test.ml", 909, 34945, 35054), ("test/test.ml", 909, 34945, 35085), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0))), (("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35102), 0), 0, 0), [(0, (((("optionA2"), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0))), (("test/test.ml", 909, 34945, 35103), ("test/test.ml", 909, 34945, 35111), 0), 0, 0))]), (("test/test.ml", 909, 34945, 35087), ("test/test.ml", 909, 34945, 35112), 0), [(("test/test.ml", 909, 34945, 35088), ("test/test.ml", 909, 34945, 35111), 0)], 0)]), (("test/test.ml", 909, 34945, 35018), ("test/test.ml", 909, 34945, 35113), 0), [(("test/test.ml", 909, 34945, 35019), ("test/test.ml", 909, 34945, 35112), 0)], 0))]), (("test/test.ml", 909, 34945, 35003), ("test/test.ml", 909, 34945, 35114), 0), [(("test/test.ml", 909, 34945, 35004), ("test/test.ml", 909, 34945, 35113), 0)], 0)); ((Tag5 ((("Pexp_lazy"), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35126), 0)), ((0, ((("expressionA0", (("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0))), (("test/test.ml", 910, 35115, 35127), ("test/test.ml", 910, 35115, 35141), 0), [(("test/test.ml", 910, 35115, 35128), ("test/test.ml", 910, 35115, 35140), 0)], 0)))), (("test/test.ml", 910, 35115, 35117), ("test/test.ml", 910, 35115, 35141), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0))), (("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35159), 0), 0, 0), [(0, (Tag5 ((((("process_expression"), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0))), (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35180), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0))), (("test/test.ml", 910, 35115, 35181), ("test/test.ml", 910, 35115, 35193), 0), 0, 0))]), (("test/test.ml", 910, 35115, 35160), ("test/test.ml", 910, 35115, 35195), 0), [(("test/test.ml", 910, 35115, 35161), ("test/test.ml", 910, 35115, 35194), 0); (("test/test.ml", 910, 35115, 35162), ("test/test.ml", 910, 35115, 35193), 0)], 0))]), (("test/test.ml", 910, 35115, 35145), ("test/test.ml", 910, 35115, 35196), 0), [(("test/test.ml", 910, 35115, 35146), ("test/test.ml", 910, 35115, 35195), 0)], 0)); ((Tag5 ((("Pexp_letexception"), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35216), 0)), ((0, (Tag4 ([((("extension_constructorA0", (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0))), (("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35241), 0), 0, 0); ((("expressionA1", (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0))), (("test/test.ml", 911, 35197, 35242), ("test/test.ml", 911, 35197, 35254), 0), 0, 0)]), (("test/test.ml", 911, 35197, 35217), ("test/test.ml", 911, 35197, 35255), 0), [(("test/test.ml", 911, 35197, 35218), ("test/test.ml", 911, 35197, 35254), 0)], 0)))), (("test/test.ml", 911, 35197, 35199), ("test/test.ml", 911, 35197, 35255), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0))), (("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35273), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_extension_constructor"), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0))), (("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35305), 0), 0, 0), [(0, (((("extension_constructorA0"), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0))), (("test/test.ml", 911, 35197, 35306), ("test/test.ml", 911, 35197, 35329), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35330), 0), [(("test/test.ml", 911, 35197, 35276), ("test/test.ml", 911, 35197, 35329), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0))), (("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35350), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0))), (("test/test.ml", 911, 35197, 35351), ("test/test.ml", 911, 35197, 35363), 0), 0, 0))]), (("test/test.ml", 911, 35197, 35331), ("test/test.ml", 911, 35197, 35364), 0), [(("test/test.ml", 911, 35197, 35332), ("test/test.ml", 911, 35197, 35363), 0)], 0)]), (("test/test.ml", 911, 35197, 35274), ("test/test.ml", 911, 35197, 35365), 0), [(("test/test.ml", 911, 35197, 35275), ("test/test.ml", 911, 35197, 35364), 0)], 0))]), (("test/test.ml", 911, 35197, 35259), ("test/test.ml", 911, 35197, 35366), 0), [(("test/test.ml", 911, 35197, 35260), ("test/test.ml", 911, 35197, 35365), 0)], 0)); ((Tag5 ((("Pexp_letmodule"), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35383), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0))), (("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35390), 0), 0, 0); ((("module_exprA1", (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0))), (("test/test.ml", 912, 35367, 35391), ("test/test.ml", 912, 35367, 35404), 0), 0, 0); ((("expressionA2", (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0))), (("test/test.ml", 912, 35367, 35405), ("test/test.ml", 912, 35367, 35417), 0), 0, 0)]), (("test/test.ml", 912, 35367, 35384), ("test/test.ml", 912, 35367, 35418), 0), [(("test/test.ml", 912, 35367, 35385), ("test/test.ml", 912, 35367, 35417), 0)], 0)))), (("test/test.ml", 912, 35367, 35369), ("test/test.ml", 912, 35367, 35418), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0))), (("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35436), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0))), (("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35450), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0))), (("test/test.ml", 912, 35367, 35451), ("test/test.ml", 912, 35367, 35456), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35457), 0), [(("test/test.ml", 912, 35367, 35439), ("test/test.ml", 912, 35367, 35456), 0)], 0); (Tag5 ((((("process_module_expr"), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0))), (("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35478), 0), 0, 0), [(0, (((("module_exprA1"), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0))), (("test/test.ml", 912, 35367, 35479), ("test/test.ml", 912, 35367, 35492), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35458), ("test/test.ml", 912, 35367, 35493), 0), [(("test/test.ml", 912, 35367, 35459), ("test/test.ml", 912, 35367, 35492), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0))), (("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35513), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0))), (("test/test.ml", 912, 35367, 35514), ("test/test.ml", 912, 35367, 35526), 0), 0, 0))]), (("test/test.ml", 912, 35367, 35494), ("test/test.ml", 912, 35367, 35527), 0), [(("test/test.ml", 912, 35367, 35495), ("test/test.ml", 912, 35367, 35526), 0)], 0)]), (("test/test.ml", 912, 35367, 35437), ("test/test.ml", 912, 35367, 35528), 0), [(("test/test.ml", 912, 35367, 35438), ("test/test.ml", 912, 35367, 35527), 0)], 0))]), (("test/test.ml", 912, 35367, 35422), ("test/test.ml", 912, 35367, 35529), 0), [(("test/test.ml", 912, 35367, 35423), ("test/test.ml", 912, 35367, 35528), 0)], 0)); ((Tag5 ((("Pexp_letop"), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35542), 0)), ((0, ((("letopA0", (("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0))), (("test/test.ml", 913, 35530, 35543), ("test/test.ml", 913, 35530, 35552), 0), [(("test/test.ml", 913, 35530, 35544), ("test/test.ml", 913, 35530, 35551), 0)], 0)))), (("test/test.ml", 913, 35530, 35532), ("test/test.ml", 913, 35530, 35552), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0))), (("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35570), 0), 0, 0), [(0, (Tag5 ((((("process_letop"), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0))), (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35586), 0), 0, 0), [(0, (((("letopA0"), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0))), (("test/test.ml", 913, 35530, 35587), ("test/test.ml", 913, 35530, 35594), 0), 0, 0))]), (("test/test.ml", 913, 35530, 35571), ("test/test.ml", 913, 35530, 35596), 0), [(("test/test.ml", 913, 35530, 35572), ("test/test.ml", 913, 35530, 35595), 0); (("test/test.ml", 913, 35530, 35573), ("test/test.ml", 913, 35530, 35594), 0)], 0))]), (("test/test.ml", 913, 35530, 35556), ("test/test.ml", 913, 35530, 35597), 0), [(("test/test.ml", 913, 35530, 35557), ("test/test.ml", 913, 35530, 35596), 0)], 0)); ((Tag5 ((("Pexp_let"), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35608), 0)), ((0, (Tag4 ([((("rec_flagA0", (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0))), (("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35620), 0), 0, 0); ((("listA1", (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0))), (("test/test.ml", 914, 35598, 35621), ("test/test.ml", 914, 35598, 35627), 0), 0, 0); ((("expressionA2", (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0))), (("test/test.ml", 914, 35598, 35628), ("test/test.ml", 914, 35598, 35640), 0), 0, 0)]), (("test/test.ml", 914, 35598, 35609), ("test/test.ml", 914, 35598, 35641), 0), [(("test/test.ml", 914, 35598, 35610), ("test/test.ml", 914, 35598, 35640), 0)], 0)))), (("test/test.ml", 914, 35598, 35600), ("test/test.ml", 914, 35598, 35641), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0))), (("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35659), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_rec_flag"), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0))), (("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35678), 0), 0, 0), [(0, (((("rec_flagA0"), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0))), (("test/test.ml", 914, 35598, 35679), ("test/test.ml", 914, 35598, 35689), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35690), 0), [(("test/test.ml", 914, 35598, 35662), ("test/test.ml", 914, 35598, 35689), 0)], 0); (Tag5 ((((("process_list"), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0))), (("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35704), 0), 0, 0), [(0, (((("listA1"), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0))), (("test/test.ml", 914, 35598, 35705), ("test/test.ml", 914, 35598, 35711), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35691), ("test/test.ml", 914, 35598, 35712), 0), [(("test/test.ml", 914, 35598, 35692), ("test/test.ml", 914, 35598, 35711), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0))), (("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35732), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0))), (("test/test.ml", 914, 35598, 35733), ("test/test.ml", 914, 35598, 35745), 0), 0, 0))]), (("test/test.ml", 914, 35598, 35713), ("test/test.ml", 914, 35598, 35746), 0), [(("test/test.ml", 914, 35598, 35714), ("test/test.ml", 914, 35598, 35745), 0)], 0)]), (("test/test.ml", 914, 35598, 35660), ("test/test.ml", 914, 35598, 35747), 0), [(("test/test.ml", 914, 35598, 35661), ("test/test.ml", 914, 35598, 35746), 0)], 0))]), (("test/test.ml", 914, 35598, 35645), ("test/test.ml", 914, 35598, 35748), 0), [(("test/test.ml", 914, 35598, 35646), ("test/test.ml", 914, 35598, 35747), 0)], 0)); ((Tag5 ((("Pexp_match"), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35761), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0))), (("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35775), 0), 0, 0); ((("casesA1", (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0))), (("test/test.ml", 915, 35749, 35776), ("test/test.ml", 915, 35749, 35783), 0), 0, 0)]), (("test/test.ml", 915, 35749, 35762), ("test/test.ml", 915, 35749, 35784), 0), [(("test/test.ml", 915, 35749, 35763), ("test/test.ml", 915, 35749, 35783), 0)], 0)))), (("test/test.ml", 915, 35749, 35751), ("test/test.ml", 915, 35749, 35784), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0))), (("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35802), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0))), (("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35823), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0))), (("test/test.ml", 915, 35749, 35824), ("test/test.ml", 915, 35749, 35836), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35837), 0), [(("test/test.ml", 915, 35749, 35805), ("test/test.ml", 915, 35749, 35836), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0))), (("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35852), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0))), (("test/test.ml", 915, 35749, 35853), ("test/test.ml", 915, 35749, 35860), 0), 0, 0))]), (("test/test.ml", 915, 35749, 35838), ("test/test.ml", 915, 35749, 35861), 0), [(("test/test.ml", 915, 35749, 35839), ("test/test.ml", 915, 35749, 35860), 0)], 0)]), (("test/test.ml", 915, 35749, 35803), ("test/test.ml", 915, 35749, 35862), 0), [(("test/test.ml", 915, 35749, 35804), ("test/test.ml", 915, 35749, 35861), 0)], 0))]), (("test/test.ml", 915, 35749, 35788), ("test/test.ml", 915, 35749, 35863), 0), [(("test/test.ml", 915, 35749, 35789), ("test/test.ml", 915, 35749, 35862), 0)], 0)); ((Tag5 ((("Pexp_new"), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35874), 0)), ((0, ((("longident_locA0", (("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0))), (("test/test.ml", 916, 35864, 35875), ("test/test.ml", 916, 35864, 35892), 0), [(("test/test.ml", 916, 35864, 35876), ("test/test.ml", 916, 35864, 35891), 0)], 0)))), (("test/test.ml", 916, 35864, 35866), ("test/test.ml", 916, 35864, 35892), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0))), (("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35910), 0), 0, 0), [(0, (Tag5 ((((("process_longident_loc"), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0))), (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35934), 0), 0, 0), [(0, (((("longident_locA0"), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0))), (("test/test.ml", 916, 35864, 35935), ("test/test.ml", 916, 35864, 35950), 0), 0, 0))]), (("test/test.ml", 916, 35864, 35911), ("test/test.ml", 916, 35864, 35952), 0), [(("test/test.ml", 916, 35864, 35912), ("test/test.ml", 916, 35864, 35951), 0); (("test/test.ml", 916, 35864, 35913), ("test/test.ml", 916, 35864, 35950), 0)], 0))]), (("test/test.ml", 916, 35864, 35896), ("test/test.ml", 916, 35864, 35953), 0), [(("test/test.ml", 916, 35864, 35897), ("test/test.ml", 916, 35864, 35952), 0)], 0)); ((Tag5 ((("Pexp_newtype"), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35968), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0))), (("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35975), 0), 0, 0); ((("expressionA1", (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0))), (("test/test.ml", 917, 35954, 35976), ("test/test.ml", 917, 35954, 35988), 0), 0, 0)]), (("test/test.ml", 917, 35954, 35969), ("test/test.ml", 917, 35954, 35989), 0), [(("test/test.ml", 917, 35954, 35970), ("test/test.ml", 917, 35954, 35988), 0)], 0)))), (("test/test.ml", 917, 35954, 35956), ("test/test.ml", 917, 35954, 35989), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0))), (("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36007), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0))), (("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36021), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0))), (("test/test.ml", 917, 35954, 36022), ("test/test.ml", 917, 35954, 36027), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36028), 0), [(("test/test.ml", 917, 35954, 36010), ("test/test.ml", 917, 35954, 36027), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0))), (("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36048), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0))), (("test/test.ml", 917, 35954, 36049), ("test/test.ml", 917, 35954, 36061), 0), 0, 0))]), (("test/test.ml", 917, 35954, 36029), ("test/test.ml", 917, 35954, 36062), 0), [(("test/test.ml", 917, 35954, 36030), ("test/test.ml", 917, 35954, 36061), 0)], 0)]), (("test/test.ml", 917, 35954, 36008), ("test/test.ml", 917, 35954, 36063), 0), [(("test/test.ml", 917, 35954, 36009), ("test/test.ml", 917, 35954, 36062), 0)], 0))]), (("test/test.ml", 917, 35954, 35993), ("test/test.ml", 917, 35954, 36064), 0), [(("test/test.ml", 917, 35954, 35994), ("test/test.ml", 917, 35954, 36063), 0)], 0)); ((Tag5 ((("Pexp_object"), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36078), 0)), ((0, ((("class_structureA0", (("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0))), (("test/test.ml", 918, 36065, 36079), ("test/test.ml", 918, 36065, 36098), 0), [(("test/test.ml", 918, 36065, 36080), ("test/test.ml", 918, 36065, 36097), 0)], 0)))), (("test/test.ml", 918, 36065, 36067), ("test/test.ml", 918, 36065, 36098), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0))), (("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36116), 0), 0, 0), [(0, (Tag5 ((((("process_class_structure"), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0))), (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36142), 0), 0, 0), [(0, (((("class_structureA0"), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0))), (("test/test.ml", 918, 36065, 36143), ("test/test.ml", 918, 36065, 36160), 0), 0, 0))]), (("test/test.ml", 918, 36065, 36117), ("test/test.ml", 918, 36065, 36162), 0), [(("test/test.ml", 918, 36065, 36118), ("test/test.ml", 918, 36065, 36161), 0); (("test/test.ml", 918, 36065, 36119), ("test/test.ml", 918, 36065, 36160), 0)], 0))]), (("test/test.ml", 918, 36065, 36102), ("test/test.ml", 918, 36065, 36163), 0), [(("test/test.ml", 918, 36065, 36103), ("test/test.ml", 918, 36065, 36162), 0)], 0)); ((Tag5 ((("Pexp_open"), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36175), 0)), ((0, (Tag4 ([((("open_declarationA0", (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0))), (("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36195), 0), 0, 0); ((("expressionA1", (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0))), (("test/test.ml", 919, 36164, 36196), ("test/test.ml", 919, 36164, 36208), 0), 0, 0)]), (("test/test.ml", 919, 36164, 36176), ("test/test.ml", 919, 36164, 36209), 0), [(("test/test.ml", 919, 36164, 36177), ("test/test.ml", 919, 36164, 36208), 0)], 0)))), (("test/test.ml", 919, 36164, 36166), ("test/test.ml", 919, 36164, 36209), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0))), (("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36227), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_open_declaration"), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0))), (("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36254), 0), 0, 0), [(0, (((("open_declarationA0"), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0))), (("test/test.ml", 919, 36164, 36255), ("test/test.ml", 919, 36164, 36273), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36274), 0), [(("test/test.ml", 919, 36164, 36230), ("test/test.ml", 919, 36164, 36273), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0))), (("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36294), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0))), (("test/test.ml", 919, 36164, 36295), ("test/test.ml", 919, 36164, 36307), 0), 0, 0))]), (("test/test.ml", 919, 36164, 36275), ("test/test.ml", 919, 36164, 36308), 0), [(("test/test.ml", 919, 36164, 36276), ("test/test.ml", 919, 36164, 36307), 0)], 0)]), (("test/test.ml", 919, 36164, 36228), ("test/test.ml", 919, 36164, 36309), 0), [(("test/test.ml", 919, 36164, 36229), ("test/test.ml", 919, 36164, 36308), 0)], 0))]), (("test/test.ml", 919, 36164, 36213), ("test/test.ml", 919, 36164, 36310), 0), [(("test/test.ml", 919, 36164, 36214), ("test/test.ml", 919, 36164, 36309), 0)], 0)); ((Tag5 ((("Pexp_override"), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36326), 0)), ((0, ((("listA0", (("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0))), (("test/test.ml", 920, 36311, 36327), ("test/test.ml", 920, 36311, 36335), 0), [(("test/test.ml", 920, 36311, 36328), ("test/test.ml", 920, 36311, 36334), 0)], 0)))), (("test/test.ml", 920, 36311, 36313), ("test/test.ml", 920, 36311, 36335), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0))), (("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36353), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0))), (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36368), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0))), (("test/test.ml", 920, 36311, 36369), ("test/test.ml", 920, 36311, 36375), 0), 0, 0))]), (("test/test.ml", 920, 36311, 36354), ("test/test.ml", 920, 36311, 36377), 0), [(("test/test.ml", 920, 36311, 36355), ("test/test.ml", 920, 36311, 36376), 0); (("test/test.ml", 920, 36311, 36356), ("test/test.ml", 920, 36311, 36375), 0)], 0))]), (("test/test.ml", 920, 36311, 36339), ("test/test.ml", 920, 36311, 36378), 0), [(("test/test.ml", 920, 36311, 36340), ("test/test.ml", 920, 36311, 36377), 0)], 0)); ((Tag5 ((("Pexp_pack"), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36390), 0)), ((0, ((("module_exprA0", (("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0))), (("test/test.ml", 921, 36379, 36391), ("test/test.ml", 921, 36379, 36406), 0), [(("test/test.ml", 921, 36379, 36392), ("test/test.ml", 921, 36379, 36405), 0)], 0)))), (("test/test.ml", 921, 36379, 36381), ("test/test.ml", 921, 36379, 36406), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0))), (("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36424), 0), 0, 0), [(0, (Tag5 ((((("process_module_expr"), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0))), (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36446), 0), 0, 0), [(0, (((("module_exprA0"), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0))), (("test/test.ml", 921, 36379, 36447), ("test/test.ml", 921, 36379, 36460), 0), 0, 0))]), (("test/test.ml", 921, 36379, 36425), ("test/test.ml", 921, 36379, 36462), 0), [(("test/test.ml", 921, 36379, 36426), ("test/test.ml", 921, 36379, 36461), 0); (("test/test.ml", 921, 36379, 36427), ("test/test.ml", 921, 36379, 36460), 0)], 0))]), (("test/test.ml", 921, 36379, 36410), ("test/test.ml", 921, 36379, 36463), 0), [(("test/test.ml", 921, 36379, 36411), ("test/test.ml", 921, 36379, 36462), 0)], 0)); ((Tag5 ((("Pexp_poly"), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36475), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0))), (("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36489), 0), 0, 0); ((("optionA1", (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0))), (("test/test.ml", 922, 36464, 36490), ("test/test.ml", 922, 36464, 36498), 0), 0, 0)]), (("test/test.ml", 922, 36464, 36476), ("test/test.ml", 922, 36464, 36499), 0), [(("test/test.ml", 922, 36464, 36477), ("test/test.ml", 922, 36464, 36498), 0)], 0)))), (("test/test.ml", 922, 36464, 36466), ("test/test.ml", 922, 36464, 36499), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0))), (("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36517), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0))), (("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36538), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0))), (("test/test.ml", 922, 36464, 36539), ("test/test.ml", 922, 36464, 36551), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36552), 0), [(("test/test.ml", 922, 36464, 36520), ("test/test.ml", 922, 36464, 36551), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0))), (("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36568), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0))), (("test/test.ml", 922, 36464, 36569), ("test/test.ml", 922, 36464, 36577), 0), 0, 0))]), (("test/test.ml", 922, 36464, 36553), ("test/test.ml", 922, 36464, 36578), 0), [(("test/test.ml", 922, 36464, 36554), ("test/test.ml", 922, 36464, 36577), 0)], 0)]), (("test/test.ml", 922, 36464, 36518), ("test/test.ml", 922, 36464, 36579), 0), [(("test/test.ml", 922, 36464, 36519), ("test/test.ml", 922, 36464, 36578), 0)], 0))]), (("test/test.ml", 922, 36464, 36503), ("test/test.ml", 922, 36464, 36580), 0), [(("test/test.ml", 922, 36464, 36504), ("test/test.ml", 922, 36464, 36579), 0)], 0)); ((Tag5 ((("Pexp_record"), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36594), 0)), ((0, (Tag4 ([((("listA0", (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0))), (("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36602), 0), 0, 0); ((("optionA1", (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0))), (("test/test.ml", 923, 36581, 36603), ("test/test.ml", 923, 36581, 36611), 0), 0, 0)]), (("test/test.ml", 923, 36581, 36595), ("test/test.ml", 923, 36581, 36612), 0), [(("test/test.ml", 923, 36581, 36596), ("test/test.ml", 923, 36581, 36611), 0)], 0)))), (("test/test.ml", 923, 36581, 36583), ("test/test.ml", 923, 36581, 36612), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0))), (("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36630), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_list"), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0))), (("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36645), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0))), (("test/test.ml", 923, 36581, 36646), ("test/test.ml", 923, 36581, 36652), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36653), 0), [(("test/test.ml", 923, 36581, 36633), ("test/test.ml", 923, 36581, 36652), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0))), (("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36669), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0))), (("test/test.ml", 923, 36581, 36670), ("test/test.ml", 923, 36581, 36678), 0), 0, 0))]), (("test/test.ml", 923, 36581, 36654), ("test/test.ml", 923, 36581, 36679), 0), [(("test/test.ml", 923, 36581, 36655), ("test/test.ml", 923, 36581, 36678), 0)], 0)]), (("test/test.ml", 923, 36581, 36631), ("test/test.ml", 923, 36581, 36680), 0), [(("test/test.ml", 923, 36581, 36632), ("test/test.ml", 923, 36581, 36679), 0)], 0))]), (("test/test.ml", 923, 36581, 36616), ("test/test.ml", 923, 36581, 36681), 0), [(("test/test.ml", 923, 36581, 36617), ("test/test.ml", 923, 36581, 36680), 0)], 0)); ((Tag5 ((("Pexp_send"), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36693), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0))), (("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36707), 0), 0, 0); ((("locA1", (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0))), (("test/test.ml", 924, 36682, 36708), ("test/test.ml", 924, 36682, 36713), 0), 0, 0)]), (("test/test.ml", 924, 36682, 36694), ("test/test.ml", 924, 36682, 36714), 0), [(("test/test.ml", 924, 36682, 36695), ("test/test.ml", 924, 36682, 36713), 0)], 0)))), (("test/test.ml", 924, 36682, 36684), ("test/test.ml", 924, 36682, 36714), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0))), (("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36732), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0))), (("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36753), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0))), (("test/test.ml", 924, 36682, 36754), ("test/test.ml", 924, 36682, 36766), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36767), 0), [(("test/test.ml", 924, 36682, 36735), ("test/test.ml", 924, 36682, 36766), 0)], 0); (Tag5 ((((("process_loc"), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0))), (("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36780), 0), 0, 0), [(0, (((("locA1"), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0))), (("test/test.ml", 924, 36682, 36781), ("test/test.ml", 924, 36682, 36786), 0), 0, 0))]), (("test/test.ml", 924, 36682, 36768), ("test/test.ml", 924, 36682, 36787), 0), [(("test/test.ml", 924, 36682, 36769), ("test/test.ml", 924, 36682, 36786), 0)], 0)]), (("test/test.ml", 924, 36682, 36733), ("test/test.ml", 924, 36682, 36788), 0), [(("test/test.ml", 924, 36682, 36734), ("test/test.ml", 924, 36682, 36787), 0)], 0))]), (("test/test.ml", 924, 36682, 36718), ("test/test.ml", 924, 36682, 36789), 0), [(("test/test.ml", 924, 36682, 36719), ("test/test.ml", 924, 36682, 36788), 0)], 0)); ((Tag5 ((("Pexp_sequence"), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36805), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0))), (("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36819), 0), 0, 0); ((("expressionA1", (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0))), (("test/test.ml", 925, 36790, 36820), ("test/test.ml", 925, 36790, 36832), 0), 0, 0)]), (("test/test.ml", 925, 36790, 36806), ("test/test.ml", 925, 36790, 36833), 0), [(("test/test.ml", 925, 36790, 36807), ("test/test.ml", 925, 36790, 36832), 0)], 0)))), (("test/test.ml", 925, 36790, 36792), ("test/test.ml", 925, 36790, 36833), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0))), (("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36851), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0))), (("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36872), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0))), (("test/test.ml", 925, 36790, 36873), ("test/test.ml", 925, 36790, 36885), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36886), 0), [(("test/test.ml", 925, 36790, 36854), ("test/test.ml", 925, 36790, 36885), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0))), (("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36906), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0))), (("test/test.ml", 925, 36790, 36907), ("test/test.ml", 925, 36790, 36919), 0), 0, 0))]), (("test/test.ml", 925, 36790, 36887), ("test/test.ml", 925, 36790, 36920), 0), [(("test/test.ml", 925, 36790, 36888), ("test/test.ml", 925, 36790, 36919), 0)], 0)]), (("test/test.ml", 925, 36790, 36852), ("test/test.ml", 925, 36790, 36921), 0), [(("test/test.ml", 925, 36790, 36853), ("test/test.ml", 925, 36790, 36920), 0)], 0))]), (("test/test.ml", 925, 36790, 36837), ("test/test.ml", 925, 36790, 36922), 0), [(("test/test.ml", 925, 36790, 36838), ("test/test.ml", 925, 36790, 36921), 0)], 0)); ((Tag5 ((("Pexp_setfield"), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36938), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0))), (("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36952), 0), 0, 0); ((("longident_locA1", (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0))), (("test/test.ml", 926, 36923, 36953), ("test/test.ml", 926, 36923, 36968), 0), 0, 0); ((("expressionA2", (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0))), (("test/test.ml", 926, 36923, 36969), ("test/test.ml", 926, 36923, 36981), 0), 0, 0)]), (("test/test.ml", 926, 36923, 36939), ("test/test.ml", 926, 36923, 36982), 0), [(("test/test.ml", 926, 36923, 36940), ("test/test.ml", 926, 36923, 36981), 0)], 0)))), (("test/test.ml", 926, 36923, 36925), ("test/test.ml", 926, 36923, 36982), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0))), (("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37000), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0))), (("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37021), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0))), (("test/test.ml", 926, 36923, 37022), ("test/test.ml", 926, 36923, 37034), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37035), 0), [(("test/test.ml", 926, 36923, 37003), ("test/test.ml", 926, 36923, 37034), 0)], 0); (Tag5 ((((("process_longident_loc"), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0))), (("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37058), 0), 0, 0), [(0, (((("longident_locA1"), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0))), (("test/test.ml", 926, 36923, 37059), ("test/test.ml", 926, 36923, 37074), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37036), ("test/test.ml", 926, 36923, 37075), 0), [(("test/test.ml", 926, 36923, 37037), ("test/test.ml", 926, 36923, 37074), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0))), (("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37095), 0), 0, 0), [(0, (((("expressionA2"), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0))), (("test/test.ml", 926, 36923, 37096), ("test/test.ml", 926, 36923, 37108), 0), 0, 0))]), (("test/test.ml", 926, 36923, 37076), ("test/test.ml", 926, 36923, 37109), 0), [(("test/test.ml", 926, 36923, 37077), ("test/test.ml", 926, 36923, 37108), 0)], 0)]), (("test/test.ml", 926, 36923, 37001), ("test/test.ml", 926, 36923, 37110), 0), [(("test/test.ml", 926, 36923, 37002), ("test/test.ml", 926, 36923, 37109), 0)], 0))]), (("test/test.ml", 926, 36923, 36986), ("test/test.ml", 926, 36923, 37111), 0), [(("test/test.ml", 926, 36923, 36987), ("test/test.ml", 926, 36923, 37110), 0)], 0)); ((Tag5 ((("Pexp_setinstvar"), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37129), 0)), ((0, (Tag4 ([((("locA0", (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0))), (("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37136), 0), 0, 0); ((("expressionA1", (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0))), (("test/test.ml", 927, 37112, 37137), ("test/test.ml", 927, 37112, 37149), 0), 0, 0)]), (("test/test.ml", 927, 37112, 37130), ("test/test.ml", 927, 37112, 37150), 0), [(("test/test.ml", 927, 37112, 37131), ("test/test.ml", 927, 37112, 37149), 0)], 0)))), (("test/test.ml", 927, 37112, 37114), ("test/test.ml", 927, 37112, 37150), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0))), (("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37168), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_loc"), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0))), (("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37182), 0), 0, 0), [(0, (((("locA0"), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0))), (("test/test.ml", 927, 37112, 37183), ("test/test.ml", 927, 37112, 37188), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37189), 0), [(("test/test.ml", 927, 37112, 37171), ("test/test.ml", 927, 37112, 37188), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0))), (("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37209), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0))), (("test/test.ml", 927, 37112, 37210), ("test/test.ml", 927, 37112, 37222), 0), 0, 0))]), (("test/test.ml", 927, 37112, 37190), ("test/test.ml", 927, 37112, 37223), 0), [(("test/test.ml", 927, 37112, 37191), ("test/test.ml", 927, 37112, 37222), 0)], 0)]), (("test/test.ml", 927, 37112, 37169), ("test/test.ml", 927, 37112, 37224), 0), [(("test/test.ml", 927, 37112, 37170), ("test/test.ml", 927, 37112, 37223), 0)], 0))]), (("test/test.ml", 927, 37112, 37154), ("test/test.ml", 927, 37112, 37225), 0), [(("test/test.ml", 927, 37112, 37155), ("test/test.ml", 927, 37112, 37224), 0)], 0)); ((Tag5 ((("Pexp_try"), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37236), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0))), (("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37250), 0), 0, 0); ((("casesA1", (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0))), (("test/test.ml", 928, 37226, 37251), ("test/test.ml", 928, 37226, 37258), 0), 0, 0)]), (("test/test.ml", 928, 37226, 37237), ("test/test.ml", 928, 37226, 37259), 0), [(("test/test.ml", 928, 37226, 37238), ("test/test.ml", 928, 37226, 37258), 0)], 0)))), (("test/test.ml", 928, 37226, 37228), ("test/test.ml", 928, 37226, 37259), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0))), (("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37277), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0))), (("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37298), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0))), (("test/test.ml", 928, 37226, 37299), ("test/test.ml", 928, 37226, 37311), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37312), 0), [(("test/test.ml", 928, 37226, 37280), ("test/test.ml", 928, 37226, 37311), 0)], 0); (Tag5 ((((("process_cases"), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0))), (("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37327), 0), 0, 0), [(0, (((("casesA1"), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0))), (("test/test.ml", 928, 37226, 37328), ("test/test.ml", 928, 37226, 37335), 0), 0, 0))]), (("test/test.ml", 928, 37226, 37313), ("test/test.ml", 928, 37226, 37336), 0), [(("test/test.ml", 928, 37226, 37314), ("test/test.ml", 928, 37226, 37335), 0)], 0)]), (("test/test.ml", 928, 37226, 37278), ("test/test.ml", 928, 37226, 37337), 0), [(("test/test.ml", 928, 37226, 37279), ("test/test.ml", 928, 37226, 37336), 0)], 0))]), (("test/test.ml", 928, 37226, 37263), ("test/test.ml", 928, 37226, 37338), 0), [(("test/test.ml", 928, 37226, 37264), ("test/test.ml", 928, 37226, 37337), 0)], 0)); ((Tag5 ((("Pexp_tuple"), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37351), 0)), ((0, ((("listA0", (("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0))), (("test/test.ml", 929, 37339, 37352), ("test/test.ml", 929, 37339, 37360), 0), [(("test/test.ml", 929, 37339, 37353), ("test/test.ml", 929, 37339, 37359), 0)], 0)))), (("test/test.ml", 929, 37339, 37341), ("test/test.ml", 929, 37339, 37360), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0))), (("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37378), 0), 0, 0), [(0, (Tag5 ((((("process_list"), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0))), (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37393), 0), 0, 0), [(0, (((("listA0"), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0))), (("test/test.ml", 929, 37339, 37394), ("test/test.ml", 929, 37339, 37400), 0), 0, 0))]), (("test/test.ml", 929, 37339, 37379), ("test/test.ml", 929, 37339, 37402), 0), [(("test/test.ml", 929, 37339, 37380), ("test/test.ml", 929, 37339, 37401), 0); (("test/test.ml", 929, 37339, 37381), ("test/test.ml", 929, 37339, 37400), 0)], 0))]), (("test/test.ml", 929, 37339, 37364), ("test/test.ml", 929, 37339, 37403), 0), [(("test/test.ml", 929, 37339, 37365), ("test/test.ml", 929, 37339, 37402), 0)], 0)); ((Tag5 ((("Pexp_unreachable"), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0)), 0), (("test/test.ml", 930, 37404, 37406), ("test/test.ml", 930, 37404, 37422), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0))), (("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37440), 0), 0, 0), [(0, (Tag9 ((("()"), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0)), 0), (("test/test.ml", 930, 37404, 37441), ("test/test.ml", 930, 37404, 37443), 0), 0, 0))]), (("test/test.ml", 930, 37404, 37426), ("test/test.ml", 930, 37404, 37444), 0), [(("test/test.ml", 930, 37404, 37427), ("test/test.ml", 930, 37404, 37443), 0)], 0)); ((Tag5 ((("Pexp_variant"), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37459), 0)), ((0, (Tag4 ([((("labelA0", (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0))), (("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37468), 0), 0, 0); ((("optionA1", (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0))), (("test/test.ml", 931, 37445, 37469), ("test/test.ml", 931, 37445, 37477), 0), 0, 0)]), (("test/test.ml", 931, 37445, 37460), ("test/test.ml", 931, 37445, 37478), 0), [(("test/test.ml", 931, 37445, 37461), ("test/test.ml", 931, 37445, 37477), 0)], 0)))), (("test/test.ml", 931, 37445, 37447), ("test/test.ml", 931, 37445, 37478), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0))), (("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37496), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_label"), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0))), (("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37512), 0), 0, 0), [(0, (((("labelA0"), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0))), (("test/test.ml", 931, 37445, 37513), ("test/test.ml", 931, 37445, 37520), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37521), 0), [(("test/test.ml", 931, 37445, 37499), ("test/test.ml", 931, 37445, 37520), 0)], 0); (Tag5 ((((("process_option"), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0))), (("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37537), 0), 0, 0), [(0, (((("optionA1"), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0))), (("test/test.ml", 931, 37445, 37538), ("test/test.ml", 931, 37445, 37546), 0), 0, 0))]), (("test/test.ml", 931, 37445, 37522), ("test/test.ml", 931, 37445, 37547), 0), [(("test/test.ml", 931, 37445, 37523), ("test/test.ml", 931, 37445, 37546), 0)], 0)]), (("test/test.ml", 931, 37445, 37497), ("test/test.ml", 931, 37445, 37548), 0), [(("test/test.ml", 931, 37445, 37498), ("test/test.ml", 931, 37445, 37547), 0)], 0))]), (("test/test.ml", 931, 37445, 37482), ("test/test.ml", 931, 37445, 37549), 0), [(("test/test.ml", 931, 37445, 37483), ("test/test.ml", 931, 37445, 37548), 0)], 0)); ((Tag5 ((("Pexp_while"), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37562), 0)), ((0, (Tag4 ([((("expressionA0", (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0))), (("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37576), 0), 0, 0); ((("expressionA1", (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0))), (("test/test.ml", 932, 37550, 37577), ("test/test.ml", 932, 37550, 37589), 0), 0, 0)]), (("test/test.ml", 932, 37550, 37563), ("test/test.ml", 932, 37550, 37590), 0), [(("test/test.ml", 932, 37550, 37564), ("test/test.ml", 932, 37550, 37589), 0)], 0)))), (("test/test.ml", 932, 37550, 37552), ("test/test.ml", 932, 37550, 37590), 0), 0, 0), 0, (Tag5 ((((("process_types"), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0))), (("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37608), 0), 0, 0), [(0, (Tag8 ([(Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0))), (("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37629), 0), 0, 0), [(0, (((("expressionA0"), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0))), (("test/test.ml", 932, 37550, 37630), ("test/test.ml", 932, 37550, 37642), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37643), 0), [(("test/test.ml", 932, 37550, 37611), ("test/test.ml", 932, 37550, 37642), 0)], 0); (Tag5 ((((("process_expression"), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0))), (("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37663), 0), 0, 0), [(0, (((("expressionA1"), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0))), (("test/test.ml", 932, 37550, 37664), ("test/test.ml", 932, 37550, 37676), 0), 0, 0))]), (("test/test.ml", 932, 37550, 37644), ("test/test.ml", 932, 37550, 37677), 0), [(("test/test.ml", 932, 37550, 37645), ("test/test.ml", 932, 37550, 37676), 0)], 0)]), (("test/test.ml", 932, 37550, 37609), ("test/test.ml", 932, 37550, 37678), 0), [(("test/test.ml", 932, 37550, 37610), ("test/test.ml", 932, 37550, 37677), 0)], 0))]), (("test/test.ml", 932, 37550, 37594), ("test/test.ml", 932, 37550, 37679), 0), [(("test/test.ml", 932, 37550, 37595), ("test/test.ml", 932, 37550, 37678), 0)], 0))]), (("test/test.ml", 895, 33305, 33307), ("test/test.ml", 932, 37550, 37679), 0), 0, 0)), (("test/test.ml", 894, 33292, 33299), ("test/test.ml", 932, 37550, 37679), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 894, 33292, 33292), ("test/test.ml", 932, 37550, 37679), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("foo", (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0))), (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0), 0, 0), (Tag1 (["1"]), (("test/test.ml", 935, 37726, 37736), ("test/test.ml", 935, 37726, 37737), 0), 0, 0), 0, (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0))]), (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("foo", (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0))), (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0), 0, 0), (Tag1 (["1"]), (("test/test.ml", 935, 37726, 37736), ("test/test.ml", 935, 37726, 37737), 0), 0, 0), 0, (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0))]))
("DEBUG:Pstr_value:", 0, [(((("foo", (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0))), (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0), 0, 0), (Tag1 (["1"]), (("test/test.ml", 935, 37726, 37736), ("test/test.ml", 935, 37726, 37737), 0), 0, 0), 0, (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0))])
("DEBUG:value_binding.pat:", ((("foo", (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0))), (("test/test.ml", 935, 37726, 37730), ("test/test.ml", 935, 37726, 37733), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag1 (["1"]), (("test/test.ml", 935, 37726, 37736), ("test/test.ml", 935, 37726, 37737), 0), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 935, 37726, 37726), ("test/test.ml", 935, 37726, 37737), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printone", (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0))), (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0))), (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0)), 0), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 937, 37741, 37774), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0))), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 1)), ((("pstr_desc", (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0))), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0), 0, 0))], 1), (("test/test.ml", 940, 37803, 37806), ("test/test.ml", 943, 37853, 37856), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0))), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0))), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0), 0, 0), [(0, (Tag1 (Tag2 ("TOP structure_item_desc", (("test/test.ml", 944, 37860, 37881), ("test/test.ml", 944, 37860, 37904), 0), 0)), (("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37905), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0))), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0), 0, 0), [(0, (Tag1 (Tag2 ("|", (("test/test.ml", 944, 37860, 37913), ("test/test.ml", 944, 37860, 37914), 0), 0)), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37915), 0), 0, 0)); (0, (Tag5 ((((("printdesc"), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0))), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0), 0, 0), [(0, (Tag8 ([(((("pstr_desc"), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0))), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0), 0, 0); (Tag9 ((("[]"), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0)), 0), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0), 0, 0)]), (("test/test.ml", 944, 37860, 37929), ("test/test.ml", 944, 37860, 37943), 0), [(("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37942), 0)], 0))]), (("test/test.ml", 944, 37860, 37918), ("test/test.ml", 944, 37860, 37944), 0), [(("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37943), 0)], 0))]), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37944), 0), 0, 0))]), (("test/test.ml", 944, 37860, 37879), ("test/test.ml", 944, 37860, 37945), 0), [(("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37944), 0)], 0))]), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 944, 37860, 37946), 0), [(("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37945), 0)], 0), (Tag1 (Tag2 ("fixme", (("test/test.ml", 945, 37948, 37953), ("test/test.ml", 945, 37948, 37958), 0), 0)), (("test/test.ml", 945, 37948, 37952), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 945, 37948, 37959), 0), 0, 0))]), (("test/test.ml", 939, 37788, 37790), ("test/test.ml", 945, 37948, 37959), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0)), 0), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0), 0, 0)), (("test/test.ml", 937, 37741, 37775), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 945, 37948, 37959), 1), 0, 0), 0, (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0))]), (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printone", (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0))), (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0))), (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0)), 0), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 937, 37741, 37774), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0))), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 1)), ((("pstr_desc", (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0))), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0), 0, 0))], 1), (("test/test.ml", 940, 37803, 37806), ("test/test.ml", 943, 37853, 37856), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0))), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0))), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0), 0, 0), [(0, (Tag1 (Tag2 ("TOP structure_item_desc", (("test/test.ml", 944, 37860, 37881), ("test/test.ml", 944, 37860, 37904), 0), 0)), (("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37905), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0))), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0), 0, 0), [(0, (Tag1 (Tag2 ("|", (("test/test.ml", 944, 37860, 37913), ("test/test.ml", 944, 37860, 37914), 0), 0)), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37915), 0), 0, 0)); (0, (Tag5 ((((("printdesc"), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0))), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0), 0, 0), [(0, (Tag8 ([(((("pstr_desc"), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0))), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0), 0, 0); (Tag9 ((("[]"), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0)), 0), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0), 0, 0)]), (("test/test.ml", 944, 37860, 37929), ("test/test.ml", 944, 37860, 37943), 0), [(("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37942), 0)], 0))]), (("test/test.ml", 944, 37860, 37918), ("test/test.ml", 944, 37860, 37944), 0), [(("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37943), 0)], 0))]), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37944), 0), 0, 0))]), (("test/test.ml", 944, 37860, 37879), ("test/test.ml", 944, 37860, 37945), 0), [(("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37944), 0)], 0))]), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 944, 37860, 37946), 0), [(("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37945), 0)], 0), (Tag1 (Tag2 ("fixme", (("test/test.ml", 945, 37948, 37953), ("test/test.ml", 945, 37948, 37958), 0), 0)), (("test/test.ml", 945, 37948, 37952), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 945, 37948, 37959), 0), 0, 0))]), (("test/test.ml", 939, 37788, 37790), ("test/test.ml", 945, 37948, 37959), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0)), 0), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0), 0, 0)), (("test/test.ml", 937, 37741, 37775), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 945, 37948, 37959), 1), 0, 0), 0, (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printone", (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0))), (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0), 0, 0), (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0))), (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0)), 0), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 937, 37741, 37774), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0))), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 1)), ((("pstr_desc", (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0))), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0), 0, 0))], 1), (("test/test.ml", 940, 37803, 37806), ("test/test.ml", 943, 37853, 37856), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0))), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0))), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0), 0, 0), [(0, (Tag1 (Tag2 ("TOP structure_item_desc", (("test/test.ml", 944, 37860, 37881), ("test/test.ml", 944, 37860, 37904), 0), 0)), (("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37905), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0))), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0), 0, 0), [(0, (Tag1 (Tag2 ("|", (("test/test.ml", 944, 37860, 37913), ("test/test.ml", 944, 37860, 37914), 0), 0)), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37915), 0), 0, 0)); (0, (Tag5 ((((("printdesc"), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0))), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0), 0, 0), [(0, (Tag8 ([(((("pstr_desc"), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0))), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0), 0, 0); (Tag9 ((("[]"), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0)), 0), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0), 0, 0)]), (("test/test.ml", 944, 37860, 37929), ("test/test.ml", 944, 37860, 37943), 0), [(("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37942), 0)], 0))]), (("test/test.ml", 944, 37860, 37918), ("test/test.ml", 944, 37860, 37944), 0), [(("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37943), 0)], 0))]), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37944), 0), 0, 0))]), (("test/test.ml", 944, 37860, 37879), ("test/test.ml", 944, 37860, 37945), 0), [(("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37944), 0)], 0))]), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 944, 37860, 37946), 0), [(("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37945), 0)], 0), (Tag1 (Tag2 ("fixme", (("test/test.ml", 945, 37948, 37953), ("test/test.ml", 945, 37948, 37958), 0), 0)), (("test/test.ml", 945, 37948, 37952), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 945, 37948, 37959), 0), 0, 0))]), (("test/test.ml", 939, 37788, 37790), ("test/test.ml", 945, 37948, 37959), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0)), 0), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0), 0, 0)), (("test/test.ml", 937, 37741, 37775), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 945, 37948, 37959), 1), 0, 0), 0, (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0))])
("DEBUG:value_binding.pat:", ((("printone", (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0))), (("test/test.ml", 937, 37741, 37745), ("test/test.ml", 937, 37741, 37753), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, (Tag10 (((("x", (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0))), (("test/test.ml", 937, 37741, 37755), ("test/test.ml", 937, 37741, 37756), 0), 0, 0), (Tag3 ((("structure_item"), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0)), 0), (("test/test.ml", 937, 37741, 37759), ("test/test.ml", 937, 37741, 37773), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 937, 37741, 37774), 0), 0, 0), (Tag19 ((Tag6 ((((("x"), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0))), (("test/test.ml", 939, 37788, 37796), ("test/test.ml", 939, 37788, 37797), 0), 0, 0), [((Tag7 ([((("pstr_desc"), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 1)), ((("pstr_desc", (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0))), (("test/test.ml", 941, 37808, 37812), ("test/test.ml", 941, 37808, 37821), 0), 0, 0))], 1), (("test/test.ml", 940, 37803, 37806), ("test/test.ml", 943, 37853, 37856), 0), 0, 0), 0, (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0))), (("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37878), 0), 0, 0), [(0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0))), (("test/test.ml", 944, 37860, 37910), ("test/test.ml", 944, 37860, 37911), 0), 0, 0), [(0, (Tag1 (Tag2 ("TOP structure_item_desc", (("test/test.ml", 944, 37860, 37881), ("test/test.ml", 944, 37860, 37904), 0), 0)), (("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37905), 0), 0, 0)); (0, (Tag5 ((((("^"), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0))), (("test/test.ml", 944, 37860, 37916), ("test/test.ml", 944, 37860, 37917), 0), 0, 0), [(0, (Tag1 (Tag2 ("|", (("test/test.ml", 944, 37860, 37913), ("test/test.ml", 944, 37860, 37914), 0), 0)), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37915), 0), 0, 0)); (0, (Tag5 ((((("printdesc"), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0))), (("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37928), 0), 0, 0), [(0, (Tag8 ([(((("pstr_desc"), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0))), (("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37939), 0), 0, 0); (Tag9 ((("[]"), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0)), 0), (("test/test.ml", 944, 37860, 37940), ("test/test.ml", 944, 37860, 37942), 0), 0, 0)]), (("test/test.ml", 944, 37860, 37929), ("test/test.ml", 944, 37860, 37943), 0), [(("test/test.ml", 944, 37860, 37930), ("test/test.ml", 944, 37860, 37942), 0)], 0))]), (("test/test.ml", 944, 37860, 37918), ("test/test.ml", 944, 37860, 37944), 0), [(("test/test.ml", 944, 37860, 37919), ("test/test.ml", 944, 37860, 37943), 0)], 0))]), (("test/test.ml", 944, 37860, 37912), ("test/test.ml", 944, 37860, 37944), 0), 0, 0))]), (("test/test.ml", 944, 37860, 37879), ("test/test.ml", 944, 37860, 37945), 0), [(("test/test.ml", 944, 37860, 37880), ("test/test.ml", 944, 37860, 37944), 0)], 0))]), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 944, 37860, 37946), 0), [(("test/test.ml", 944, 37860, 37865), ("test/test.ml", 944, 37860, 37945), 0)], 0), (Tag1 (Tag2 ("fixme", (("test/test.ml", 945, 37948, 37953), ("test/test.ml", 945, 37948, 37958), 0), 0)), (("test/test.ml", 945, 37948, 37952), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 944, 37860, 37864), ("test/test.ml", 945, 37948, 37959), 0), 0, 0))]), (("test/test.ml", 939, 37788, 37790), ("test/test.ml", 945, 37948, 37959), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0)), 0), (("test/test.ml", 937, 37741, 37776), ("test/test.ml", 937, 37741, 37782), 0), 0, 0)), (("test/test.ml", 937, 37741, 37775), ("test/test.ml", 945, 37948, 37959), 0), 0, 0)), (("test/test.ml", 937, 37741, 37754), ("test/test.ml", 945, 37948, 37959), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 937, 37741, 37741), ("test/test.ml", 945, 37948, 37959), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("printone2", (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0))), (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0))), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0))), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0))), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:SECOND::", (("test/test.ml", 953, 38098, 38133), ("test/test.ml", 953, 38098, 38147), 0), 0)), (("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38148), 0), 0, 0); (((("x"), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0))), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0), 0, 0)]), (("test/test.ml", 953, 38098, 38131), ("test/test.ml", 953, 38098, 38151), 0), [(("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38150), 0)], 0))]), (("test/test.ml", 953, 38098, 38115), ("test/test.ml", 953, 38098, 38152), 0), [(("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38151), 0)], 0))]), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 953, 38098, 38153), 0), [(("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38152), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0))), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0))), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0), 0, 0))]), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 954, 38155, 38167), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0)), 0), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0), 0, 0)), (("test/test.ml", 952, 38072, 38088), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 954, 38155, 38167), 1), 0, 0), 0, (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0))]), (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("printone2", (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0))), (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0))), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0))), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0))), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:SECOND::", (("test/test.ml", 953, 38098, 38133), ("test/test.ml", 953, 38098, 38147), 0), 0)), (("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38148), 0), 0, 0); (((("x"), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0))), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0), 0, 0)]), (("test/test.ml", 953, 38098, 38131), ("test/test.ml", 953, 38098, 38151), 0), [(("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38150), 0)], 0))]), (("test/test.ml", 953, 38098, 38115), ("test/test.ml", 953, 38098, 38152), 0), [(("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38151), 0)], 0))]), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 953, 38098, 38153), 0), [(("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38152), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0))), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0))), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0), 0, 0))]), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 954, 38155, 38167), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0)), 0), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0), 0, 0)), (("test/test.ml", 952, 38072, 38088), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 954, 38155, 38167), 1), 0, 0), 0, (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0))]))
("DEBUG:Pstr_value:", 0, [(((("printone2", (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0))), (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0))), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0))), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0))), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:SECOND::", (("test/test.ml", 953, 38098, 38133), ("test/test.ml", 953, 38098, 38147), 0), 0)), (("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38148), 0), 0, 0); (((("x"), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0))), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0), 0, 0)]), (("test/test.ml", 953, 38098, 38131), ("test/test.ml", 953, 38098, 38151), 0), [(("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38150), 0)], 0))]), (("test/test.ml", 953, 38098, 38115), ("test/test.ml", 953, 38098, 38152), 0), [(("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38151), 0)], 0))]), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 953, 38098, 38153), 0), [(("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38152), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0))), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0))), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0), 0, 0))]), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 954, 38155, 38167), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0)), 0), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0), 0, 0)), (("test/test.ml", 952, 38072, 38088), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 954, 38155, 38167), 1), 0, 0), 0, (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0))])
("DEBUG:value_binding.pat:", ((("printone2", (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0))), (("test/test.ml", 952, 38072, 38076), ("test/test.ml", 952, 38072, 38085), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0))), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 952, 38072, 38087), 0), 0, 0), (Tag19 ((Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0))), (("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38114), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0))), (("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38130), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:SECOND::", (("test/test.ml", 953, 38098, 38133), ("test/test.ml", 953, 38098, 38147), 0), 0)), (("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38148), 0), 0, 0); (((("x"), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0))), (("test/test.ml", 953, 38098, 38149), ("test/test.ml", 953, 38098, 38150), 0), 0, 0)]), (("test/test.ml", 953, 38098, 38131), ("test/test.ml", 953, 38098, 38151), 0), [(("test/test.ml", 953, 38098, 38132), ("test/test.ml", 953, 38098, 38150), 0)], 0))]), (("test/test.ml", 953, 38098, 38115), ("test/test.ml", 953, 38098, 38152), 0), [(("test/test.ml", 953, 38098, 38116), ("test/test.ml", 953, 38098, 38151), 0)], 0))]), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 953, 38098, 38153), 0), [(("test/test.ml", 953, 38098, 38101), ("test/test.ml", 953, 38098, 38152), 0)], 0), (Tag5 ((((("printone"), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0))), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38165), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0))), (("test/test.ml", 954, 38155, 38166), ("test/test.ml", 954, 38155, 38167), 0), 0, 0))]), (("test/test.ml", 954, 38155, 38157), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 953, 38098, 38100), ("test/test.ml", 954, 38155, 38167), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0)), 0), (("test/test.ml", 952, 38072, 38089), ("test/test.ml", 952, 38072, 38095), 0), 0, 0)), (("test/test.ml", 952, 38072, 38088), ("test/test.ml", 954, 38155, 38167), 0), 0, 0)), (("test/test.ml", 952, 38072, 38086), ("test/test.ml", 954, 38155, 38167), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 952, 38072, 38072), ("test/test.ml", 954, 38155, 38167), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("proc1", (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0))), (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0))), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0))), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0))), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0), 0, 0))]), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38207), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0)), 0), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0), 0, 0)), (("test/test.ml", 956, 38171, 38183), ("test/test.ml", 957, 38194, 38207), 0), 0, 0)), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 957, 38194, 38207), 1), 0, 0), 0, (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0))]), (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("proc1", (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0))), (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0))), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0))), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0))), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0), 0, 0))]), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38207), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0)), 0), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0), 0, 0)), (("test/test.ml", 956, 38171, 38183), ("test/test.ml", 957, 38194, 38207), 0), 0, 0)), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 957, 38194, 38207), 1), 0, 0), 0, (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0))]))
("DEBUG:Pstr_value:", 0, [(((("proc1", (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0))), (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0))), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0))), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0))), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0), 0, 0))]), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38207), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0)), 0), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0), 0, 0)), (("test/test.ml", 956, 38171, 38183), ("test/test.ml", 957, 38194, 38207), 0), 0, 0)), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 957, 38194, 38207), 1), 0, 0), 0, (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0))])
("DEBUG:value_binding.pat:", ((("proc1", (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0))), (("test/test.ml", 956, 38171, 38175), ("test/test.ml", 956, 38171, 38180), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0))), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 956, 38171, 38182), 0), 0, 0), (Tag19 ((Tag5 ((((("printone2"), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0))), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38205), 0), 0, 0), [(0, (((("x"), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0))), (("test/test.ml", 957, 38194, 38206), ("test/test.ml", 957, 38194, 38207), 0), 0, 0))]), (("test/test.ml", 957, 38194, 38196), ("test/test.ml", 957, 38194, 38207), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0)), 0), (("test/test.ml", 956, 38171, 38184), ("test/test.ml", 956, 38171, 38190), 0), 0, 0)), (("test/test.ml", 956, 38171, 38183), ("test/test.ml", 957, 38194, 38207), 0), 0, 0)), (("test/test.ml", 956, 38171, 38181), ("test/test.ml", 957, 38194, 38207), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 956, 38171, 38171), ("test/test.ml", 957, 38194, 38207), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("debug", (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0))), (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0), 0, 0), (Tag4 (0, 0, ((("proc", (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0))), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0), 0, 0), (Tag4 (0, 0, ((("lst", (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0))), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("result", (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0))), (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0), 0, 0), (Tag5 ((((Tag1 (("List"), "map"), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0))), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0), 0, 0), [(0, (((("proc"), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0))), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0), 0, 0)); (0, (((("lst"), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0))), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0), 0, 0))]), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38273), 0), 0, 0), 0, (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 961, 38241, 38273), 0))], (Tag16 ((Tag5 ((((Tag1 (("List"), "iter"), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0))), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0), 0, 0), [(0, (Tag4 (0, 0, ((("i", (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0))), (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0), 0, 0), (Tag5 ((((("print_endline"), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0))), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0))), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:TOPLEVEL:", (("test/test.ml", 962, 38277, 38331), ("test/test.ml", 962, 38277, 38346), 0), 0)), (("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38347), 0), 0, 0); (((("i"), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0))), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0), 0, 0)]), (("test/test.ml", 962, 38277, 38329), ("test/test.ml", 962, 38277, 38351), 0), [(("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38350), 0)], 0))]), (("test/test.ml", 962, 38277, 38313), ("test/test.ml", 962, 38277, 38352), 0), [(("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38351), 0)], 0))]), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38352), 0), 0, 0)), (("test/test.ml", 962, 38277, 38289), ("test/test.ml", 962, 38277, 38353), 0), [(("test/test.ml", 962, 38277, 38290), ("test/test.ml", 962, 38277, 38352), 0)], 0)); (0, (((("result"), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0))), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0), 0, 0))]), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38360), 0), 0, 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 963, 38362, 38367), ("test/test.ml", 963, 38362, 38371), 0), 0)), (("test/test.ml", 963, 38362, 38366), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 963, 38362, 38372), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0)), 0), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0), 0, 0)), (("test/test.ml", 960, 38211, 38230), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 963, 38362, 38372), 1), 0, 0)), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 963, 38362, 38372), 1), 0, 0), 0, (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0))]), (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("debug", (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0))), (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0), 0, 0), (Tag4 (0, 0, ((("proc", (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0))), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0), 0, 0), (Tag4 (0, 0, ((("lst", (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0))), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("result", (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0))), (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0), 0, 0), (Tag5 ((((Tag1 (("List"), "map"), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0))), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0), 0, 0), [(0, (((("proc"), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0))), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0), 0, 0)); (0, (((("lst"), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0))), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0), 0, 0))]), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38273), 0), 0, 0), 0, (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 961, 38241, 38273), 0))], (Tag16 ((Tag5 ((((Tag1 (("List"), "iter"), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0))), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0), 0, 0), [(0, (Tag4 (0, 0, ((("i", (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0))), (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0), 0, 0), (Tag5 ((((("print_endline"), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0))), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0))), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:TOPLEVEL:", (("test/test.ml", 962, 38277, 38331), ("test/test.ml", 962, 38277, 38346), 0), 0)), (("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38347), 0), 0, 0); (((("i"), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0))), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0), 0, 0)]), (("test/test.ml", 962, 38277, 38329), ("test/test.ml", 962, 38277, 38351), 0), [(("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38350), 0)], 0))]), (("test/test.ml", 962, 38277, 38313), ("test/test.ml", 962, 38277, 38352), 0), [(("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38351), 0)], 0))]), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38352), 0), 0, 0)), (("test/test.ml", 962, 38277, 38289), ("test/test.ml", 962, 38277, 38353), 0), [(("test/test.ml", 962, 38277, 38290), ("test/test.ml", 962, 38277, 38352), 0)], 0)); (0, (((("result"), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0))), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0), 0, 0))]), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38360), 0), 0, 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 963, 38362, 38367), ("test/test.ml", 963, 38362, 38371), 0), 0)), (("test/test.ml", 963, 38362, 38366), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 963, 38362, 38372), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0)), 0), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0), 0, 0)), (("test/test.ml", 960, 38211, 38230), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 963, 38362, 38372), 1), 0, 0)), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 963, 38362, 38372), 1), 0, 0), 0, (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0))]))
("DEBUG:Pstr_value:", 0, [(((("debug", (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0))), (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0), 0, 0), (Tag4 (0, 0, ((("proc", (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0))), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0), 0, 0), (Tag4 (0, 0, ((("lst", (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0))), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("result", (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0))), (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0), 0, 0), (Tag5 ((((Tag1 (("List"), "map"), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0))), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0), 0, 0), [(0, (((("proc"), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0))), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0), 0, 0)); (0, (((("lst"), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0))), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0), 0, 0))]), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38273), 0), 0, 0), 0, (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 961, 38241, 38273), 0))], (Tag16 ((Tag5 ((((Tag1 (("List"), "iter"), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0))), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0), 0, 0), [(0, (Tag4 (0, 0, ((("i", (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0))), (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0), 0, 0), (Tag5 ((((("print_endline"), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0))), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0))), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:TOPLEVEL:", (("test/test.ml", 962, 38277, 38331), ("test/test.ml", 962, 38277, 38346), 0), 0)), (("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38347), 0), 0, 0); (((("i"), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0))), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0), 0, 0)]), (("test/test.ml", 962, 38277, 38329), ("test/test.ml", 962, 38277, 38351), 0), [(("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38350), 0)], 0))]), (("test/test.ml", 962, 38277, 38313), ("test/test.ml", 962, 38277, 38352), 0), [(("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38351), 0)], 0))]), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38352), 0), 0, 0)), (("test/test.ml", 962, 38277, 38289), ("test/test.ml", 962, 38277, 38353), 0), [(("test/test.ml", 962, 38277, 38290), ("test/test.ml", 962, 38277, 38352), 0)], 0)); (0, (((("result"), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0))), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0), 0, 0))]), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38360), 0), 0, 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 963, 38362, 38367), ("test/test.ml", 963, 38362, 38371), 0), 0)), (("test/test.ml", 963, 38362, 38366), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 963, 38362, 38372), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0)), 0), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0), 0, 0)), (("test/test.ml", 960, 38211, 38230), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 963, 38362, 38372), 1), 0, 0)), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 963, 38362, 38372), 1), 0, 0), 0, (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0))])
("DEBUG:value_binding.pat:", ((("debug", (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0))), (("test/test.ml", 960, 38211, 38215), ("test/test.ml", 960, 38211, 38220), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("proc", (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0))), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 960, 38211, 38225), 0), 0, 0), (Tag4 (0, 0, ((("lst", (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0))), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 960, 38211, 38229), 0), 0, 0), (Tag19 ((Tag2 (0, [(((("result", (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0))), (("test/test.ml", 961, 38241, 38247), ("test/test.ml", 961, 38241, 38253), 0), 0, 0), (Tag5 ((((Tag1 (("List"), "map"), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0))), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38264), 0), 0, 0), [(0, (((("proc"), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0))), (("test/test.ml", 961, 38241, 38265), ("test/test.ml", 961, 38241, 38269), 0), 0, 0)); (0, (((("lst"), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0))), (("test/test.ml", 961, 38241, 38270), ("test/test.ml", 961, 38241, 38273), 0), 0, 0))]), (("test/test.ml", 961, 38241, 38256), ("test/test.ml", 961, 38241, 38273), 0), 0, 0), 0, (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 961, 38241, 38273), 0))], (Tag16 ((Tag5 ((((Tag1 (("List"), "iter"), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0))), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38288), 0), 0, 0), [(0, (Tag4 (0, 0, ((("i", (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0))), (("test/test.ml", 962, 38277, 38294), ("test/test.ml", 962, 38277, 38295), 0), 0, 0), (Tag5 ((((("print_endline"), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0))), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38312), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0))), (("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38328), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG:TOPLEVEL:", (("test/test.ml", 962, 38277, 38331), ("test/test.ml", 962, 38277, 38346), 0), 0)), (("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38347), 0), 0, 0); (((("i"), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0))), (("test/test.ml", 962, 38277, 38349), ("test/test.ml", 962, 38277, 38350), 0), 0, 0)]), (("test/test.ml", 962, 38277, 38329), ("test/test.ml", 962, 38277, 38351), 0), [(("test/test.ml", 962, 38277, 38330), ("test/test.ml", 962, 38277, 38350), 0)], 0))]), (("test/test.ml", 962, 38277, 38313), ("test/test.ml", 962, 38277, 38352), 0), [(("test/test.ml", 962, 38277, 38314), ("test/test.ml", 962, 38277, 38351), 0)], 0))]), (("test/test.ml", 962, 38277, 38299), ("test/test.ml", 962, 38277, 38352), 0), 0, 0)), (("test/test.ml", 962, 38277, 38289), ("test/test.ml", 962, 38277, 38353), 0), [(("test/test.ml", 962, 38277, 38290), ("test/test.ml", 962, 38277, 38352), 0)], 0)); (0, (((("result"), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0))), (("test/test.ml", 962, 38277, 38354), ("test/test.ml", 962, 38277, 38360), 0), 0, 0))]), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 962, 38277, 38360), 0), 0, 0), (Tag1 (Tag2 ("TODO", (("test/test.ml", 963, 38362, 38367), ("test/test.ml", 963, 38362, 38371), 0), 0)), (("test/test.ml", 963, 38362, 38366), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 962, 38277, 38279), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 961, 38241, 38243), ("test/test.ml", 963, 38362, 38372), 0), 0, 0), (Tag3 ((("string"), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0)), 0), (("test/test.ml", 960, 38211, 38232), ("test/test.ml", 960, 38211, 38238), 0), 0, 0)), (("test/test.ml", 960, 38211, 38230), ("test/test.ml", 963, 38362, 38372), 0), 0, 0)), (("test/test.ml", 960, 38211, 38226), ("test/test.ml", 963, 38362, 38372), 1), 0, 0)), (("test/test.ml", 960, 38211, 38221), ("test/test.ml", 963, 38362, 38372), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 960, 38211, 38211), ("test/test.ml", 963, 38362, 38372), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:SECOND::", (Tag1 (0, [(((("transform", (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0))), (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0))), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0))), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0))), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG3:", (("test/test.ml", 966, 38445, 38480), ("test/test.ml", 966, 38445, 38487), 0), 0)), (("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38488), 0), 0, 0); (((("x"), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0))), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0), 0, 0)]), (("test/test.ml", 966, 38445, 38478), ("test/test.ml", 966, 38445, 38491), 0), [(("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38490), 0)], 0))]), (("test/test.ml", 966, 38445, 38462), ("test/test.ml", 966, 38445, 38492), 0), [(("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38491), 0)], 0))]), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 966, 38445, 38493), 0), [(("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38492), 0)], 0), (Tag2 (0, [(((("foo", (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0))), (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0), 0, 0), (Tag5 ((((("debug"), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0))), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0), 0, 0), [(0, (((("proc1"), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0))), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0), 0, 0)); (0, (((("x"), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0))), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0), 0, 0))]), (("test/test.ml", 967, 38495, 38507), ("test/test.ml", 967, 38495, 38522), 0), [(("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38521), 0)], 0), 0, (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 967, 38495, 38522), 0))], (((("x"), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0))), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 968, 38526, 38529), 1), 0, 0), 0, (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))]), (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0)))
("DEBUG:structure_item_desc:", Tag1 (0, [(((("transform", (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0))), (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0))), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0))), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0))), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG3:", (("test/test.ml", 966, 38445, 38480), ("test/test.ml", 966, 38445, 38487), 0), 0)), (("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38488), 0), 0, 0); (((("x"), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0))), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0), 0, 0)]), (("test/test.ml", 966, 38445, 38478), ("test/test.ml", 966, 38445, 38491), 0), [(("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38490), 0)], 0))]), (("test/test.ml", 966, 38445, 38462), ("test/test.ml", 966, 38445, 38492), 0), [(("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38491), 0)], 0))]), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 966, 38445, 38493), 0), [(("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38492), 0)], 0), (Tag2 (0, [(((("foo", (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0))), (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0), 0, 0), (Tag5 ((((("debug"), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0))), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0), 0, 0), [(0, (((("proc1"), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0))), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0), 0, 0)); (0, (((("x"), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0))), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0), 0, 0))]), (("test/test.ml", 967, 38495, 38507), ("test/test.ml", 967, 38495, 38522), 0), [(("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38521), 0)], 0), 0, (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 967, 38495, 38522), 0))], (((("x"), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0))), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 968, 38526, 38529), 1), 0, 0), 0, (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))]))
("DEBUG:Pstr_value:", 0, [(((("transform", (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0))), (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0), 0, 0), (Tag4 (0, 0, ((("x", (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0))), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0))), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0))), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG3:", (("test/test.ml", 966, 38445, 38480), ("test/test.ml", 966, 38445, 38487), 0), 0)), (("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38488), 0), 0, 0); (((("x"), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0))), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0), 0, 0)]), (("test/test.ml", 966, 38445, 38478), ("test/test.ml", 966, 38445, 38491), 0), [(("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38490), 0)], 0))]), (("test/test.ml", 966, 38445, 38462), ("test/test.ml", 966, 38445, 38492), 0), [(("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38491), 0)], 0))]), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 966, 38445, 38493), 0), [(("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38492), 0)], 0), (Tag2 (0, [(((("foo", (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0))), (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0), 0, 0), (Tag5 ((((("debug"), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0))), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0), 0, 0), [(0, (((("proc1"), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0))), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0), 0, 0)); (0, (((("x"), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0))), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0), 0, 0))]), (("test/test.ml", 967, 38495, 38507), ("test/test.ml", 967, 38495, 38522), 0), [(("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38521), 0)], 0), 0, (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 967, 38495, 38522), 0))], (((("x"), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0))), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 968, 38526, 38529), 1), 0, 0), 0, (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))])
("DEBUG:value_binding.pat:", ((("transform", (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0))), (("test/test.ml", 965, 38390, 38394), ("test/test.ml", 965, 38390, 38403), 0), 0, 0))
("DEBUG:value_binding.expr:", (Tag4 (0, 0, ((("x", (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0))), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 965, 38390, 38405), 0), 0, 0), (Tag16 ((Tag5 ((((("print_endline"), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0))), (("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38461), 0), 0, 0), [(0, (Tag5 ((((Tag1 (("Batteries"), "dump"), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0))), (("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38477), 0), 0, 0), [(0, (Tag8 ([(Tag1 (Tag2 ("DEBUG3:", (("test/test.ml", 966, 38445, 38480), ("test/test.ml", 966, 38445, 38487), 0), 0)), (("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38488), 0), 0, 0); (((("x"), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0))), (("test/test.ml", 966, 38445, 38489), ("test/test.ml", 966, 38445, 38490), 0), 0, 0)]), (("test/test.ml", 966, 38445, 38478), ("test/test.ml", 966, 38445, 38491), 0), [(("test/test.ml", 966, 38445, 38479), ("test/test.ml", 966, 38445, 38490), 0)], 0))]), (("test/test.ml", 966, 38445, 38462), ("test/test.ml", 966, 38445, 38492), 0), [(("test/test.ml", 966, 38445, 38463), ("test/test.ml", 966, 38445, 38491), 0)], 0))]), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 966, 38445, 38493), 0), [(("test/test.ml", 966, 38445, 38448), ("test/test.ml", 966, 38445, 38492), 0)], 0), (Tag2 (0, [(((("foo", (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0))), (("test/test.ml", 967, 38495, 38501), ("test/test.ml", 967, 38495, 38504), 0), 0, 0), (Tag5 ((((("debug"), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0))), (("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38513), 0), 0, 0), [(0, (((("proc1"), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0))), (("test/test.ml", 967, 38495, 38514), ("test/test.ml", 967, 38495, 38519), 0), 0, 0)); (0, (((("x"), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0))), (("test/test.ml", 967, 38495, 38520), ("test/test.ml", 967, 38495, 38521), 0), 0, 0))]), (("test/test.ml", 967, 38495, 38507), ("test/test.ml", 967, 38495, 38522), 0), [(("test/test.ml", 967, 38495, 38508), ("test/test.ml", 967, 38495, 38521), 0)], 0), 0, (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 967, 38495, 38522), 0))], (((("x"), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0))), (("test/test.ml", 968, 38526, 38528), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 967, 38495, 38497), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 966, 38445, 38447), ("test/test.ml", 968, 38526, 38529), 0), 0, 0)), (("test/test.ml", 965, 38390, 38404), ("test/test.ml", 968, 38526, 38529), 1), 0, 0))
["DEBUG:value_binding.atrr:"]
("DEBUG:value_binding.loc:", (("test/test.ml", 965, 38390, 38390), ("test/test.ml", 968, 38526, 38529), 0))
TOP structure_item_desc|Pstr_value:pattern: expr: ;;print_value_binding_list;;
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
("DEBUG:TOPLEVEL:", "fixme")
File "test/test.ml", lines 623-634, characters 4-54:
623 | ....match ctd with
624 |     | Ptyp_constr (a,b) (* of Longident.t loc * core_type list *)
625 |       ->
626 |       let {txt;loc} = a in
627 |       let id1 = emit_id1(txt) in
...
631 |       id1 (* ^ "\"->" ^ newlist *)
632 |     | Ptyp_tuple a (* of core_type list *)
633 |       ->
634 |       "Ptyp_tuple" ^ my_process_core_type_list(a,  s )
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ptyp_any|Ptyp_var _|Ptyp_arrow (_, _, _)|Ptyp_object (_, _)|
Ptyp_class (_, _)|Ptyp_alias (_, _)|Ptyp_variant (_, _, _)|Ptyp_poly (_, _)|
Ptyp_package _|Ptyp_extension _)
File "test/test.ml", lines 714-716, characters 2-120:
714 | ..match x with
715 |   | Pcstr_tuple a ->
716 |     "| " ^ name ^ " ("^ (emit_core_type_list (a,s,0))  ^ ") -> " ^ "(process_types (" ^ imp_core_type_list (a,s,0) ^"))"
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Pcstr_record _
File "test/test.ml", lines 719-721, characters 2-35:
719 | ..match x with
720 |   | Pcstr_tuple a ->
721 |     decl_imp_core_type_list (a,s,0).
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Pcstr_record _
File "test/test.ml", line 385, characters 4-9:
385 | let proc2 x  : string =
          ^^^^^
Warning 32 [unused-value-declaration]: unused value proc2.
File "test/test.ml", line 389, characters 4-14:
389 | let printdesc2(x :structure_item_desc) :string =
          ^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value printdesc2.
File "test/test.ml", line 393, characters 4-28:
393 | let print_value_binding_expr (x : expression) : string=
          ^^^^^^^^^^^^^^^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value print_value_binding_expr.
File "test/test.ml", line 397, characters 4-12:
397 |     pexp_loc (* : location  *);
          ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc.
File "test/test.ml", line 398, characters 4-18:
398 |     pexp_loc_stack (* : location_stack *);
          ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pexp_loc_stack.
File "test/test.ml", line 461, characters 4-12:
461 | let splitloc(x:longident_loc * string_list) : string=
          ^^^^^^^^
Warning 32 [unused-value-declaration]: unused value splitloc.
File "test/test.ml", line 464, characters 11-14:
464 |     { txt; loc }  ->
                 ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "test/test.ml", line 469, characters 4-14:
469 | let concatlist(a : string * string_list):string_list =
          ^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value concatlist.
File "test/test.ml", line 475, characters 2-22:
475 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
        ^^^^^^^^^^^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value process_record_kind4.
File "test/test.ml", line 477, characters 2-22:
477 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
        ^^^^^^^^^^^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value process_record_kind2.
File "test/test.ml", line 479, characters 2-22:
479 |   process_record_kind3 x s = ""
        ^^^^^^^^^^^^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value process_record_kind3.
File "test/test.ml", line 475, characters 73-74:
475 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                               ^
Warning 27 [unused-var-strict]: unused variable x.
File "test/test.ml", line 475, characters 75-76:
475 |   process_record_kind4 :label_declaration -> string_list -> string = fun x s -> ""
                                                                                 ^
Warning 27 [unused-var-strict]: unused variable s.
File "test/test.ml", line 477, characters 23-24:
477 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "test/test.ml", line 477, characters 45-46:
477 |   process_record_kind2(x :label_declaration)(s:string_list) = ""
                                                   ^
Warning 27 [unused-var-strict]: unused variable s.
File "test/test.ml", line 479, characters 23-24:
479 |   process_record_kind3 x s = ""
                             ^
Warning 27 [unused-var-strict]: unused variable x.
File "test/test.ml", line 479, characters 25-26:
479 |   process_record_kind3 x s = ""
                               ^
Warning 27 [unused-var-strict]: unused variable s.
File "test/test.ml", line 487, characters 5-12:
487 |      pld_loc(* : Location.t *);
           ^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_loc.
File "test/test.ml", line 488, characters 5-19:
488 |      pld_attributes(* : attributes *); 
           ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable pld_attributes.
File "test/test.ml", line 505, characters 15-18:
505 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "test/test.ml", line 530, characters 16-25:
530 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                      ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arg_label.
File "test/test.ml", line 530, characters 28-37:
530 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                  ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type.
File "test/test.ml", line 530, characters 40-50:
530 |   | Ptyp_arrow (arg_label , core_type , core_type2) ->
                                              ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable core_type2.
File "test/test.ml", line 535, characters 17-18:
535 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                       ^
Warning 27 [unused-var-strict]: unused variable a.
File "test/test.ml", line 535, characters 19-20:
535 |   | Ptyp_object (a,b)(* of object_field list * closed_flag *)
                         ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 538, characters 18-19:
538 |   | Ptyp_class (a,b) (* of Longident.t loc * core_type list *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 540, characters 8-12:
540 |     let myid = (process_id (a,s)) in
              ^^^^
Warning 26 [unused-var]: unused variable myid.
File "test/test.ml", line 543, characters 16-17:
543 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                      ^
Warning 27 [unused-var-strict]: unused variable a.
File "test/test.ml", line 543, characters 18-19:
543 |   | Ptyp_alias (a,b) (* of core_type * string loc  *)
                        ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 547, characters 18-19:
547 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                        ^
Warning 27 [unused-var-strict]: unused variable a.
File "test/test.ml", line 547, characters 20-21:
547 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                          ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 547, characters 22-23:
547 |   | Ptyp_variant (a,b,c) (* of row_field list * closed_flag * label list option *)
                            ^
Warning 27 [unused-var-strict]: unused variable c.
File "test/test.ml", line 550, characters 15-16:
550 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                     ^
Warning 27 [unused-var-strict]: unused variable a.
File "test/test.ml", line 550, characters 17-18:
550 |   | Ptyp_poly (a,b) (* of string loc list * core_type *)
                       ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 578, characters 6-14:
578 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "test/test.ml", line 579, characters 6-20:
579 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "test/test.ml", line 580, characters 6-21:
580 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "test/test.ml", line 624, characters 21-22:
624 |     | Ptyp_constr (a,b) (* of Longident.t loc * core_type list *)
                           ^
Warning 27 [unused-var-strict]: unused variable b.
File "test/test.ml", line 626, characters 15-18:
626 |       let {txt;loc} = a in
                     ^^^
Warning 27 [unused-var-strict]: unused variable loc.
File "test/test.ml", line 643, characters 6-14:
643 |       ptyp_loc(* : Location.t *);
            ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "test/test.ml", line 644, characters 6-20:
644 |       ptyp_loc_stack(* : location_stack *);
            ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "test/test.ml", line 645, characters 6-21:
645 |       ptyp_attributes(* : attributes; *)
            ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "test/test.ml", line 652, characters 9-10:
652 |   | (x,s,n) ->
               ^
Warning 27 [unused-var-strict]: unused variable n.
File "test/test.ml", line 656, characters 8-16:
656 |         ptyp_loc(* : Location.t *);
              ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc.
File "test/test.ml", line 657, characters 8-22:
657 |         ptyp_loc_stack(* : location_stack *);
              ^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_loc_stack.
File "test/test.ml", line 658, characters 8-23:
658 |         ptyp_attributes(* : attributes; *)
              ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable ptyp_attributes.
File "test/test.ml", line 718, characters 36-40:
718 | let decl_emit_constructor_arguments(name,x,s):string =
                                          ^^^^
Warning 27 [unused-var-strict]: unused variable name.
File "test/test.ml", line 870, characters 18-21:
870 | let process_types (x) = ()
                        ^^^
Warning 27 [unused-var-strict]: unused variable x.
File "test/test.ml", line 871, characters 19-28:
871 | let process_option ( alist0)=()
                         ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "test/test.ml", line 872, characters 22-31:
872 | let process_core_type ( alist0)=()
                            ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "test/test.ml", line 873, characters 27-36:
873 | let process_direction_flag ( alist0)=()
                                 ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "test/test.ml", line 878, characters 24-35:
878 | let process_arg_label ( aarg_label0:arg_label)=()
                              ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aarg_label0.
File "test/test.ml", line 879, characters 20-27:
879 | let process_cases ( acases0:cases)=()
                          ^^^^^^^
Warning 27 [unused-var-strict]: unused variable acases0.
File "test/test.ml", line 880, characters 30-47:
880 | let process_class_structure ( aclass_structure0:class_structure)=()
                                    ^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aclass_structure0.
File "test/test.ml", line 881, characters 23-33:
881 | let process_constant ( aconstant0:constant)=()
                             ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aconstant0.
File "test/test.ml", line 882, characters 25-37:
882 | let process_expression ( aexpression0:expression)=()
                               ^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aexpression0.
File "test/test.ml", line 883, characters 24-35:
883 | let process_extension ( aextension0:extension)=()
                              ^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension0.
File "test/test.ml", line 884, characters 36-59:
884 | let process_extension_constructor ( aextension_constructor0:extension_constructor)=()
                                          ^^^^^^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aextension_constructor0.
File "test/test.ml", line 885, characters 20-27:
885 | let process_label ( alabel0:label)=()
                          ^^^^^^^
Warning 27 [unused-var-strict]: unused variable alabel0.
File "test/test.ml", line 886, characters 20-27:
886 | let process_letop ( aletop0:letop)=()
                          ^^^^^^^
Warning 27 [unused-var-strict]: unused variable aletop0.
File "test/test.ml", line 887, characters 17-26:
887 | let process_list ( alist0)=()
                       ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alist0.
File "test/test.ml", line 888, characters 16-24:
888 | let process_loc ( aloc0)=()
                      ^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aloc0.
File "test/test.ml", line 889, characters 28-43:
889 | let process_longident_loc ( alongident_loc0:longident_loc)=()
                                  ^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable alongident_loc0.
File "test/test.ml", line 890, characters 26-39:
890 | let process_module_expr ( amodule_expr0:module_expr)=()
                                ^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable amodule_expr0.
File "test/test.ml", line 891, characters 31-49:
891 | let process_open_declaration ( aopen_declaration0:open_declaration)=()
                                     ^^^^^^^^^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable aopen_declaration0.
File "test/test.ml", line 892, characters 22-31:
892 | let process_pattern ( apattern0:pattern)=()
                            ^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable apattern0.
File "test/test.ml", line 893, characters 23-33:
893 | let process_rec_flag ( arec_flag0:rec_flag)=()
                             ^^^^^^^^^^
Warning 27 [unused-var-strict]: unused variable arec_flag0.
File "test/test.ml", line 894, characters 4-7:
894 | let foo(x) =
          ^^^
Warning 32 [unused-value-declaration]: unused value foo.
File "test/test.ml", line 935, characters 4-7:
935 | let foo = 1
          ^^^
Warning 32 [unused-value-declaration]: unused value foo.
File "test/test.ml", line 965, characters 4-13:
965 | let transform x (*ast, bytecodes of the interface *) =
          ^^^^^^^^^
Warning 32 [unused-value-declaration]: unused value transform.
File "test/test.ml", line 967, characters 6-9:
967 |   let foo = (debug proc1 x) in
            ^^^
Warning 26 [unused-var]: unused variable foo.
